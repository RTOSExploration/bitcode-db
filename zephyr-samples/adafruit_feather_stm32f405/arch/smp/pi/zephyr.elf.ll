; ModuleID = 'build/adafruit_feather_stm32f405/arch/smp/pi/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.emitter = type { i8*, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234467 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234447 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234437 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234537 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234527 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234517 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234507 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234497 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234487 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234477 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235804 to i8*), void (i8*)* inttoptr (i32 134234457 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [5 x i8] c"%.4d\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Calculate first %d digits of Pi independently by %d threads.\0A\00", align 1
@tthread = internal global [16 x %struct.k_thread] zeroinitializer, align 8, !dbg !25
@tstack = internal global [16 x [4480 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !123
@counter = internal global i32 16, align 4, !dbg !139
@buffer = internal global [16 x [241 x i8]] zeroinitializer, align 1, !dbg !134
@.str.2 = private unnamed_addr constant [39 x i8] c"Pi value calculated by thread #%d: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"All %d threads executed by %d cores in %d msec\0A\00", align 1
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str.4 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !268
@.str.1.5 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.6 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.7 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.8 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !293
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !303
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !354
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !383
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !517
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !389
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !526
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !562
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !572
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !577
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !597
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !752
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !735
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !708
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !724
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !768
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !770
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !772
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !774
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !776
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !778
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !780
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !782
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !784
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !786
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !825
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !919
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !908
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !960
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1026
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1312
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1278
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1264
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1203
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1314
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1280
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1220
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1327
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1286
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1284
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1226
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1329
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1290
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1288
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1232
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !810
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1331
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1294
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1292
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1238
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !808
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1333
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1298
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1296
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1244
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1335
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1302
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1300
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1250
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !804
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1337
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1306
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1304
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1256
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !802
@.str.8.121 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1339
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1310
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1308
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1262
@.str.9.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.32.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.33.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.34.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.35.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.36.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.37.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.125 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.125, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1341
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.1.128 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1497
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1552
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1495
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1554
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.128, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1486
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1488
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1541
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1544
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1546
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1549
@.str.2.130 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.131 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.132 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.133 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.134 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.137 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.139 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.140 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !892
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1565
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1676
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1678
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1674
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1669
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1643
@.str.144 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.145 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.146 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.147 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.148 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.149 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1680
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1201
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1218
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1224
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1230
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1236
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1242
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1248
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1254
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1260
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1770
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1810
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1813
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1818
@.str.183 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.188 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.193 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.194 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.195 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.196 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.197 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.192 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.191 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.193, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.194, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.195, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.196, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.197, i32 0, i32 0)], align 4
@.str.199 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1825
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2051
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2038
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2046
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2058
@.str.5.205 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2063
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.209 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.216, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.217, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.219, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.220, i32 0, i32 0)], align 4, !dbg !2091
@.str.214 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.215 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.216 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.217 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.218 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.219 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.213 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.220 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2206
@.str.8.212 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.223 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.224 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.225 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.226 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.230 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.231 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.234 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.235 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.245 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.246 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.247 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2219
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2330
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2333
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2335
@.str.248 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.264 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.255 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.269 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.277 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.257 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.272 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.254 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.281 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.282 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.290 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.291 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.292 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.293 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.249 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.250 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.251 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.252 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.253 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.256 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.268 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.273 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.274 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2048
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2056
@.str.23.285 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.299 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.300 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.301 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.302 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2337
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2367
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2372
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1912
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2370
@.str.4.303 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.304 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.305 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.309 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.310 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.330 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2958 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2962, !srcloc !2963
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2984, !srcloc !2985
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2986, !srcloc !2987
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2994, !srcloc !2995
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3016, !srcloc !3019
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3020, !srcloc !3021
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3022, !srcloc !3023
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3034, !srcloc !3035
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3036, !srcloc !3037
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3038, !srcloc !3039
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3040, !srcloc !3041
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3042, !srcloc !3043
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3044, !srcloc !3045
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3046, !srcloc !3047
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3048, !srcloc !3049
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3050, !srcloc !3051
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3052, !srcloc !3053
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3054, !srcloc !3055
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3056, !srcloc !3057
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3058, !srcloc !3059
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3060, !srcloc !3061
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3062, !srcloc !3063
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3064, !srcloc !3065
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3066, !srcloc !3067
  ret void, !dbg !3068
}

; Function Attrs: noinline nounwind optsize
define dso_local void @test_thread(i8* nocapture noundef %0, i8* noundef %1, i8* nocapture readnone %2) #1 !dbg !3071 {
  %4 = alloca [841 x i32], align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3073, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* %1, metadata !3074, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* undef, metadata !3075, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* %0, metadata !3076, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* %1, metadata !3077, metadata !DIExpression()), !dbg !3090
  %5 = bitcast [841 x i32]* %4 to i8*, !dbg !3091
  call void @llvm.lifetime.start.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3091
  call void @llvm.dbg.declare(metadata [841 x i32]* %4, metadata !3078, metadata !DIExpression()), !dbg !3092
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(3364) %5, i8 0, i32 3364, i1 false), !dbg !3092
  call void @llvm.dbg.value(metadata i32 0, metadata !3082, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 0, metadata !3083, metadata !DIExpression()), !dbg !3090
  br label %6, !dbg !3093

6:                                                ; preds = %3, %6
  %7 = phi i32 [ 0, %3 ], [ %9, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3083, metadata !DIExpression()), !dbg !3090
  %8 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %7, !dbg !3095
  store i32 2000, i32* %8, align 4, !dbg !3098
  %9 = add nuw nsw i32 %7, 1, !dbg !3099
  call void @llvm.dbg.value(metadata i32 %9, metadata !3083, metadata !DIExpression()), !dbg !3090
  %10 = icmp eq i32 %9, 840, !dbg !3100
  br i1 %10, label %11, label %6, !dbg !3093, !llvm.loop !3101

11:                                               ; preds = %6, %32
  %12 = phi i8* [ %38, %32 ], [ %1, %6 ]
  %13 = phi i32 [ %39, %32 ], [ 840, %6 ]
  %14 = phi i32 [ %36, %32 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i8* %12, metadata !3077, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 %13, metadata !3083, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 %14, metadata !3082, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 0, metadata !3085, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata i32 %13, metadata !3084, metadata !DIExpression()), !dbg !3090
  br label %15, !dbg !3104

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %27, %15 ], [ 0, %11 ]
  %17 = phi i32 [ %30, %15 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3085, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata i32 %17, metadata !3084, metadata !DIExpression()), !dbg !3090
  %18 = mul nsw i32 %16, %17, !dbg !3106
  %19 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %17, !dbg !3109
  %20 = load i32, i32* %19, align 4, !dbg !3109
  %21 = mul nsw i32 %20, 10000, !dbg !3110
  %22 = add nsw i32 %21, %18, !dbg !3111
  call void @llvm.dbg.value(metadata i32 %22, metadata !3085, metadata !DIExpression()), !dbg !3103
  %23 = shl nuw nsw i32 %17, 1, !dbg !3112
  %24 = add nsw i32 %23, -1, !dbg !3113
  %25 = freeze i32 %22
  %26 = freeze i32 %24
  %27 = sdiv i32 %25, %26, !dbg !3114
  %28 = mul i32 %27, %26
  %29 = sub i32 %25, %28
  store i32 %29, i32* %19, align 4, !dbg !3115
  call void @llvm.dbg.value(metadata i32 %27, metadata !3085, metadata !DIExpression()), !dbg !3103
  %30 = add nsw i32 %17, -1, !dbg !3116
  call void @llvm.dbg.value(metadata i32 %30, metadata !3084, metadata !DIExpression()), !dbg !3090
  %31 = icmp sgt i32 %17, 1, !dbg !3117
  br i1 %31, label %15, label %32, !dbg !3104, !llvm.loop !3118

32:                                               ; preds = %15
  %33 = sdiv i32 %27, 10000, !dbg !3120
  %34 = add nsw i32 %33, %14, !dbg !3121
  call void @llvm.dbg.value(metadata i32 %34, metadata !3089, metadata !DIExpression()), !dbg !3103
  %35 = mul i32 %33, 10000
  %36 = sub i32 %27, %35
  call void @llvm.dbg.value(metadata i32 %36, metadata !3082, metadata !DIExpression()), !dbg !3090
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %12, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 noundef %34) #24, !dbg !3122
  %38 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !3123
  call void @llvm.dbg.value(metadata i8* %38, metadata !3077, metadata !DIExpression()), !dbg !3090
  %39 = add nsw i32 %13, -14, !dbg !3124
  call void @llvm.dbg.value(metadata i32 %39, metadata !3083, metadata !DIExpression()), !dbg !3090
  %40 = icmp ugt i32 %13, 14, !dbg !3125
  br i1 %40, label %11, label %41, !dbg !3126, !llvm.loop !3127

41:                                               ; preds = %32
  %42 = bitcast i8* %0 to i32*, !dbg !3129
  call void @llvm.dbg.value(metadata i32* %42, metadata !3076, metadata !DIExpression()), !dbg !3090
  tail call fastcc void @atomic_dec(i32* noundef %42) #25, !dbg !3130
  call void @llvm.lifetime.end.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3131
  ret void, !dbg !3131
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_dec(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3132 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3138, metadata !DIExpression()), !dbg !3139
  tail call fastcc void @atomic_sub(i32* noundef %0) #25, !dbg !3140
  ret void, !dbg !3141
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_sub(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3142 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3146, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i32 1, metadata !3147, metadata !DIExpression()), !dbg !3148
  %2 = atomicrmw sub i32* %0, i32 1 seq_cst, align 4, !dbg !3149
  ret void, !dbg !3150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3151 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i32 0, i32 0), i32 noundef 240, i32 noundef 16) #24, !dbg !3158
  %1 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3159
  call void @llvm.dbg.value(metadata i32 %1, metadata !3153, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 0, metadata !3157, metadata !DIExpression()), !dbg !3160
  br label %8, !dbg !3161

2:                                                ; preds = %8
  %3 = load i32, i32* @counter, align 4, !dbg !3163
  %4 = icmp eq i32 %3, 0, !dbg !3164
  br i1 %4, label %18, label %5, !dbg !3164

5:                                                ; preds = %2
  %6 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #25, !dbg !3160
  %7 = insertvalue [1 x i64] poison, i64 %6, 0
  br label %15, !dbg !3164

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 0, %0 ], [ %13, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3157, metadata !DIExpression()), !dbg !3160
  %10 = getelementptr inbounds [16 x %struct.k_thread], [16 x %struct.k_thread]* @tthread, i32 0, i32 %9, !dbg !3165
  %11 = getelementptr inbounds [16 x [4480 x %struct.z_thread_stack_element]], [16 x [4480 x %struct.z_thread_stack_element]]* @tstack, i32 0, i32 %9, i32 0, !dbg !3168
  %12 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %9, i32 0, !dbg !3169
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %10, %struct.z_thread_stack_element* noundef nonnull %11, i8* noundef nonnull %12) #25, !dbg !3170
  %13 = add nuw nsw i32 %9, 1, !dbg !3171
  call void @llvm.dbg.value(metadata i32 %13, metadata !3157, metadata !DIExpression()), !dbg !3160
  %14 = icmp eq i32 %13, 16, !dbg !3172
  br i1 %14, label %2, label %8, !dbg !3161, !llvm.loop !3173

15:                                               ; preds = %5, %15
  tail call fastcc void @k_sleep([1 x i64] %7) #25, !dbg !3175
  %16 = load i32, i32* @counter, align 4, !dbg !3163
  %17 = icmp eq i32 %16, 0, !dbg !3164
  br i1 %17, label %18, label %15, !dbg !3164, !llvm.loop !3177

18:                                               ; preds = %15, %2
  %19 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3179
  call void @llvm.dbg.value(metadata i32 %19, metadata !3154, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %1), metadata !3155, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3160
  call void @llvm.dbg.value(metadata i64 undef, metadata !3156, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3160
  call void @llvm.dbg.value(metadata i32 0, metadata !3157, metadata !DIExpression()), !dbg !3160
  br label %20, !dbg !3180

20:                                               ; preds = %18, %20
  %21 = phi i32 [ 0, %18 ], [ %23, %20 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3157, metadata !DIExpression()), !dbg !3160
  %22 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %21, i32 0, !dbg !3182
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 noundef %21, i8* noundef nonnull %22) #24, !dbg !3185
  %23 = add nuw nsw i32 %21, 1, !dbg !3186
  call void @llvm.dbg.value(metadata i32 %23, metadata !3157, metadata !DIExpression()), !dbg !3160
  %24 = icmp eq i32 %23, 16, !dbg !3187
  br i1 %24, label %25, label %20, !dbg !3180, !llvm.loop !3188

25:                                               ; preds = %20
  %26 = sub i32 %19, %1, !dbg !3190
  call void @llvm.dbg.value(metadata i32 %26, metadata !3155, metadata !DIExpression()), !dbg !3160
  %27 = zext i32 %26 to i64, !dbg !3191
  %28 = tail call fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %27) #25, !dbg !3192
  call void @llvm.dbg.value(metadata i64 %28, metadata !3156, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3160
  %29 = trunc i64 %28 to i32, !dbg !3193
  call void @llvm.dbg.value(metadata i32 %29, metadata !3156, metadata !DIExpression()), !dbg !3160
  %30 = udiv i32 %29, 1000000, !dbg !3194
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i32 0, i32 0), i32 noundef 16, i32 noundef 1, i32 noundef %30) #24, !dbg !3195
  ret void, !dbg !3196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3197 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !3200
  ret i32 %1, !dbg !3201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #6 !dbg !3202 {
  call void @llvm.dbg.value(metadata i64 1, metadata !3207, metadata !DIExpression()), !dbg !3208
  ret i64 10, !dbg !3209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3210 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3232, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3223, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3224, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i32 4384, metadata !3225, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_thread, metadata !3226, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @counter to i8*), metadata !3227, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i8* %2, metadata !3228, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i8* null, metadata !3229, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i32 -6, metadata !3230, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i32 0, metadata !3231, metadata !DIExpression()), !dbg !3233
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3234, !srcloc !3236
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 4384, void (i8*, i8*, i8*)* noundef nonnull @test_thread, i8* noundef bitcast (i32* @counter to i8*), i8* noundef %2, i8* noundef null, i32 noundef -6, i32 noundef 0, [1 x i64] zeroinitializer) #24, !dbg !3237
  ret void, !dbg !3238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3239 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3243, metadata !DIExpression()), !dbg !3244
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3245, !srcloc !3247
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3248
  ret void, !dbg !3249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %0) unnamed_addr #6 !dbg !3250 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3252, metadata !DIExpression()), !dbg !3253
  call void @llvm.dbg.value(metadata i64 %0, metadata !3254, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i32 168000000, metadata !3259, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i32 1000000000, metadata !3260, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i8 1, metadata !3261, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i8 0, metadata !3262, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i1 false, metadata !3263, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3271
  call void @llvm.dbg.value(metadata i8 0, metadata !3264, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i1 false, metadata !3265, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3271
  call void @llvm.dbg.value(metadata i1 false, metadata !3266, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3271
  call void @llvm.dbg.value(metadata i64 0, metadata !3267, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i64 0, metadata !3267, metadata !DIExpression()), !dbg !3271
  %2 = udiv i64 %0, 168000000, !dbg !3273
  %3 = mul i64 %2, 1000000000, !dbg !3280
  %4 = mul i64 %2, 168000000
  %5 = sub i64 %0, %4
  %6 = mul nuw nsw i64 %5, 1000000000, !dbg !3281
  %7 = udiv i64 %6, 168000000, !dbg !3282
  %8 = add i64 %7, %3, !dbg !3283
  ret i64 %8, !dbg !3284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3285 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !3287
  ret i32 %1, !dbg !3288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3289 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %0, metadata !3300, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %1, metadata !3301, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %2, metadata !3302, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %3, metadata !3303, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %0, metadata !3305, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %0, metadata !3306, metadata !DIExpression()), !dbg !3367
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3368
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3368
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3309, metadata !DIExpression()), !dbg !3369
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3370
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3370
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3311, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 0, metadata !3312, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 0, metadata !3313, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 0, metadata !3314, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 -1, metadata !3315, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 0, metadata !3318, metadata !DIExpression()), !dbg !3367
  %12 = and i32 %2, 4, !dbg !3372
  %13 = icmp eq i32 %12, 0, !dbg !3373
  call void @llvm.dbg.value(metadata i1 %13, metadata !3319, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3367
  %14 = lshr i32 %2, 3, !dbg !3374
  %15 = and i32 %14, 7, !dbg !3374
  %16 = add nuw nsw i32 %15, 1, !dbg !3375
  call void @llvm.dbg.value(metadata i32 %16, metadata !3320, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 0, metadata !3321, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %0, metadata !3322, metadata !DIExpression()), !dbg !3367
  %17 = ptrtoint i8* %0 to i32, !dbg !3376
  %18 = and i32 %17, 3, !dbg !3378
  %19 = icmp eq i32 %18, 0, !dbg !3378
  br i1 %19, label %20, label %320, !dbg !3379

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3380
  call void @llvm.dbg.value(metadata i8* %21, metadata !3306, metadata !DIExpression()), !dbg !3367
  %22 = icmp eq i8* %0, null, !dbg !3381
  %23 = and i32 %1, 7, !dbg !3383
  %24 = sub nuw nsw i32 8, %23, !dbg !3383
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3383
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3383
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3383
  call void @llvm.dbg.value(metadata i32 %27, metadata !3301, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %26, metadata !3306, metadata !DIExpression()), !dbg !3367
  br i1 %22, label %33, label %28, !dbg !3384

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3386
  %30 = sub i32 4, %17, !dbg !3386
  %31 = add i32 %30, %29, !dbg !3387
  %32 = icmp ugt i32 %31, %27, !dbg !3388
  br i1 %32, label %320, label %33, !dbg !3389

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3390
  call void @llvm.dbg.value(metadata i8* %34, metadata !3303, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %3, metadata !3317, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 4, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 4, metadata !3307, metadata !DIExpression()), !dbg !3367
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3391

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %42, metadata !3303, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %43, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %44, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %45, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %72, metadata !3315, metadata !DIExpression()), !dbg !3367
  br i1 %46, label %73, label %47, !dbg !3392

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3393
  %49 = zext i1 %48 to i32, !dbg !3397
  %50 = add nsw i32 %72, %49, !dbg !3397
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3397
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %52, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %51, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3318, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %50, metadata !3315, metadata !DIExpression()), !dbg !3367
  br label %53, !dbg !3398

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %40, metadata !3303, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %58, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %57, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %56, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3318, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %54, metadata !3315, metadata !DIExpression()), !dbg !3367
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3399
  call void @llvm.dbg.value(metadata i8* %60, metadata !3303, metadata !DIExpression()), !dbg !3367
  %61 = load i8, i8* %60, align 1, !dbg !3401
  %62 = icmp eq i8 %61, 0, !dbg !3402
  br i1 %62, label %226, label %63, !dbg !3403, !llvm.loop !3404

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3392

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3407

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3318, metadata !DIExpression()), !dbg !3367
  %75 = add nsw i32 %72, -1, !dbg !3408
  call void @llvm.dbg.value(metadata i32 %75, metadata !3315, metadata !DIExpression()), !dbg !3367
  br label %53, !dbg !3409

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3410

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 4, metadata !3307, metadata !DIExpression()), !dbg !3367
  br label %53, !dbg !3411

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 4, metadata !3307, metadata !DIExpression()), !dbg !3367
  br label %53, !dbg !3412

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3413
  %81 = icmp eq i8 %80, 108, !dbg !3415
  br i1 %81, label %82, label %109, !dbg !3416

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3417
  %84 = load i8, i8* %83, align 1, !dbg !3417
  %85 = icmp eq i8 %84, 108, !dbg !3420
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3421
  %89 = add i32 %88, 7, !dbg !3421
  %90 = and i32 %89, -8, !dbg !3421
  %91 = inttoptr i32 %90 to i8*, !dbg !3421
  %92 = inttoptr i32 %90 to double*, !dbg !3421
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3421
  %94 = load double, double* %92, align 8, !dbg !3421
  call void @llvm.dbg.value(metadata i8* %93, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 8, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 8, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata double %94, metadata !3335, metadata !DIExpression()), !dbg !3423
  %95 = ptrtoint i8* %43 to i32, !dbg !3424
  %96 = add i32 %95, 7, !dbg !3424
  %97 = and i32 %96, -8, !dbg !3424
  %98 = inttoptr i32 %97 to i8*, !dbg !3425
  call void @llvm.dbg.value(metadata i8* %98, metadata !3306, metadata !DIExpression()), !dbg !3367
  br i1 %22, label %104, label %99, !dbg !3426

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3427
  %101 = icmp ugt i32 %100, %196, !dbg !3431
  br i1 %101, label %320, label %102, !dbg !3432

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3433
  store double %94, double* %103, align 8, !dbg !3433
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3436
  call void @llvm.dbg.value(metadata i8* %105, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3318, metadata !DIExpression()), !dbg !3367
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3318, metadata !DIExpression()), !dbg !3367
  br label %53, !dbg !3437

107:                                              ; preds = %73, %73
  br label %109, !dbg !3438

108:                                              ; preds = %73
  br label %109, !dbg !3438

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3367
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3367
  call void @llvm.dbg.value(metadata i32 %113, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %112, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3321, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3318, metadata !DIExpression()), !dbg !3367
  %114 = ptrtoint i8* %43 to i32, !dbg !3438
  %115 = add i32 %114, -1, !dbg !3438
  %116 = add i32 %115, %112, !dbg !3438
  %117 = sub i32 0, %112, !dbg !3438
  %118 = and i32 %116, %117, !dbg !3438
  %119 = inttoptr i32 %118 to i8*, !dbg !3439
  call void @llvm.dbg.value(metadata i8* %119, metadata !3306, metadata !DIExpression()), !dbg !3367
  br i1 %22, label %124, label %120, !dbg !3440

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3442
  %122 = add i32 %121, %118, !dbg !3443
  %123 = icmp ugt i32 %122, %196, !dbg !3444
  br i1 %123, label %320, label %124, !dbg !3445

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3446

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3439
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3447
  call void @llvm.dbg.value(metadata i8* %127, metadata !3304, metadata !DIExpression()), !dbg !3367
  %128 = bitcast i8* %41 to i8**, !dbg !3447
  %129 = load i8*, i8** %128, align 4, !dbg !3447
  call void @llvm.dbg.value(metadata i8* %129, metadata !3317, metadata !DIExpression()), !dbg !3367
  br label %130, !dbg !3448

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3367
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3449
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3367
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3450
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3367
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3367
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3367
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3367
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3367
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3367
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3451
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %142, metadata !3301, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %141, metadata !3303, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %140, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %139, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %138, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %137, metadata !3312, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %136, metadata !3320, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %135, metadata !3313, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3318, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %133, metadata !3317, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %132, metadata !3315, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %131, metadata !3314, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.label(metadata !3366), !dbg !3453
  br i1 %22, label %146, label %144, !dbg !3454

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3455
  store i8* %133, i8** %145, align 4, !dbg !3458
  br label %146, !dbg !3459

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %147, metadata !3320, metadata !DIExpression()), !dbg !3367
  %148 = icmp sgt i32 %136, 0, !dbg !3461
  br i1 %148, label %152, label %149, !dbg !3462

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !3463
  %151 = zext i1 %150 to i32, !dbg !3463
  br label %152, !dbg !3462

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3462
  %154 = icmp eq i32 %153, 0, !dbg !3462
  call void @llvm.dbg.value(metadata i1 %154, metadata !3344, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3464
  call void @llvm.dbg.value(metadata i1 %36, metadata !3347, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3464
  %155 = or i1 %36, %154, !dbg !3465
  br i1 %155, label %156, label %192, !dbg !3465

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3466
  %158 = sub i32 %157, %17, !dbg !3466
  %159 = lshr i32 %158, 2, !dbg !3467
  call void @llvm.dbg.value(metadata i32 %159, metadata !3348, metadata !DIExpression()), !dbg !3468
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3469
  br i1 %161, label %162, label %163, !dbg !3469

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3471
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.8, i32 0, i32 0)) #24, !dbg !3471
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3471
  unreachable, !dbg !3471

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3476
  br i1 %164, label %165, label %166, !dbg !3478

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !3479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3479
  unreachable, !dbg !3479

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3484

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3485
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3488
  store i8 %168, i8* %169, align 1, !dbg !3489
  %170 = trunc i32 %132 to i8, !dbg !3490
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3491
  store i8 %170, i8* %171, align 1, !dbg !3492
  br i1 %154, label %175, label %172, !dbg !3493

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3494
  store i8 %173, i8* %169, align 1, !dbg !3494
  %174 = add i32 %131, 1, !dbg !3497
  call void @llvm.dbg.value(metadata i32 %174, metadata !3314, metadata !DIExpression()), !dbg !3367
  br label %187, !dbg !3498

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %176, metadata !3313, metadata !DIExpression()), !dbg !3367
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3501

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %179, metadata !3301, metadata !DIExpression()), !dbg !3367
  br label %187, !dbg !3505

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3506

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %182, metadata !3301, metadata !DIExpression()), !dbg !3367
  br label %187, !dbg !3510

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !3511
  %185 = add i32 %142, 2, !dbg !3513
  %186 = add i32 %185, %184, !dbg !3514
  call void @llvm.dbg.value(metadata i32 %186, metadata !3301, metadata !DIExpression()), !dbg !3367
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3367
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3367
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3367
  call void @llvm.dbg.value(metadata i32 %190, metadata !3301, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %189, metadata !3313, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %188, metadata !3314, metadata !DIExpression()), !dbg !3367
  %191 = add nuw nsw i32 %137, 1, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %191, metadata !3312, metadata !DIExpression()), !dbg !3367
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3367
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3450
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3367
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3451
  call void @llvm.dbg.value(metadata i32 %196, metadata !3301, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %195, metadata !3312, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %194, metadata !3313, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %193, metadata !3314, metadata !DIExpression()), !dbg !3367
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3516
  call void @llvm.dbg.value(metadata i8* %197, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %143, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %141, metadata !3303, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %139, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %138, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3321, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3318, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %132, metadata !3315, metadata !DIExpression()), !dbg !3367
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3399
  call void @llvm.dbg.value(metadata i8* %198, metadata !3303, metadata !DIExpression()), !dbg !3367
  %199 = load i8, i8* %198, align 1, !dbg !3401
  %200 = icmp eq i8 %199, 0, !dbg !3402
  br i1 %200, label %226, label %63, !dbg !3403

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3517

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3518
  call void @llvm.dbg.value(metadata i8* %203, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 undef, metadata !3351, metadata !DIExpression()), !dbg !3519
  br i1 %22, label %219, label %204, !dbg !3520

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3518
  %206 = load i32, i32* %205, align 4, !dbg !3518
  call void @llvm.dbg.value(metadata i32 %206, metadata !3351, metadata !DIExpression()), !dbg !3519
  %207 = inttoptr i32 %118 to i32*, !dbg !3521
  store i32 %206, i32* %207, align 4, !dbg !3524
  br label %219, !dbg !3525

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3526
  %210 = add i32 %209, 7, !dbg !3526
  %211 = and i32 %210, -8, !dbg !3526
  %212 = inttoptr i32 %211 to i8*, !dbg !3526
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3526
  call void @llvm.dbg.value(metadata i8* %213, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i64 undef, metadata !3357, metadata !DIExpression()), !dbg !3527
  br i1 %22, label %219, label %214, !dbg !3528

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3526
  %216 = load i64, i64* %215, align 8, !dbg !3526
  call void @llvm.dbg.value(metadata i64 %216, metadata !3357, metadata !DIExpression()), !dbg !3527
  %217 = inttoptr i32 %118 to i64*, !dbg !3529
  store i64 %216, i64* %217, align 8, !dbg !3534
  br label %219, !dbg !3535

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3536
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #24, !dbg !3536
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3536
  unreachable, !dbg !3536

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3541
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3541
  call void @llvm.dbg.value(metadata i8* %221, metadata !3304, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %40, metadata !3303, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %222, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %113, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %112, metadata !3308, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3321, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 poison, metadata !3318, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %72, metadata !3315, metadata !DIExpression()), !dbg !3367
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3399
  call void @llvm.dbg.value(metadata i8* %223, metadata !3303, metadata !DIExpression()), !dbg !3367
  %224 = load i8, i8* %223, align 1, !dbg !3401
  %225 = icmp eq i8 %224, 0, !dbg !3402
  br i1 %225, label %226, label %38, !dbg !3403

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3542
  %228 = ptrtoint i8* %227 to i32, !dbg !3543
  %229 = sub i32 %228, %17, !dbg !3543
  %230 = lshr i32 %229, 2, !dbg !3545
  %231 = icmp ugt i32 %229, 1023, !dbg !3546
  br i1 %231, label %232, label %233, !dbg !3547

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !3548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3548
  unreachable, !dbg !3548

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3553

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3554
  %236 = add i32 %235, %229, !dbg !3557
  br label %320, !dbg !3558

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3559
  store i8 %238, i8* %0, align 1, !dbg !3560
  %239 = trunc i32 %194 to i8, !dbg !3561
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3563
  store i8 %240, i8* %242, align 1, !dbg !3565
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3566
  store i8 %241, i8* %243, align 1, !dbg !3567
  %244 = trunc i32 %193 to i8, !dbg !3568
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3569
  store i8 %244, i8* %245, align 1, !dbg !3570
  %246 = icmp eq i32 %193, 0, !dbg !3571
  %247 = xor i1 %246, true, !dbg !3572
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3572
  call void @llvm.dbg.value(metadata i8* %227, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 0, metadata !3316, metadata !DIExpression()), !dbg !3367
  br i1 %249, label %250, label %269, !dbg !3572

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3573

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %254, metadata !3316, metadata !DIExpression()), !dbg !3367
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3574
  %256 = load i8, i8* %255, align 1, !dbg !3574
  %257 = icmp sgt i8 %256, -1, !dbg !3576
  br i1 %257, label %265, label %258, !dbg !3577

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3360, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3578
  %259 = ptrtoint i8* %253 to i32, !dbg !3579
  %260 = add i32 %251, %259, !dbg !3581
  %261 = icmp ugt i32 %260, %196, !dbg !3582
  br i1 %261, label %320, label %262, !dbg !3583

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3584
  call void @llvm.dbg.value(metadata i8 %263, metadata !3360, metadata !DIExpression()), !dbg !3578
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3585
  call void @llvm.dbg.value(metadata i8* %264, metadata !3306, metadata !DIExpression()), !dbg !3367
  store i8 %263, i8* %253, align 1, !dbg !3586
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3516
  call void @llvm.dbg.value(metadata i8* %266, metadata !3306, metadata !DIExpression()), !dbg !3367
  %267 = add nuw i32 %254, 1, !dbg !3587
  call void @llvm.dbg.value(metadata i32 %267, metadata !3316, metadata !DIExpression()), !dbg !3367
  %268 = icmp eq i32 %267, %195, !dbg !3588
  br i1 %268, label %269, label %252, !dbg !3573, !llvm.loop !3589

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3516
  call void @llvm.dbg.value(metadata i8* %270, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 0, metadata !3316, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %133, metadata !3317, metadata !DIExpression()), !dbg !3367
  %271 = icmp eq i32 %195, 0, !dbg !3591
  br i1 %271, label %316, label %272, !dbg !3594

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3594

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %276, metadata !3317, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %277, metadata !3316, metadata !DIExpression()), !dbg !3367
  br i1 %246, label %282, label %278, !dbg !3595

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3598
  %280 = load i8, i8* %279, align 1, !dbg !3598
  %281 = icmp sgt i8 %280, -1, !dbg !3599
  br i1 %281, label %282, label %311, !dbg !3600

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3601

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3307, metadata !DIExpression()), !dbg !3367
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3602
  %285 = load i8, i8* %284, align 1, !dbg !3602
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %286, metadata !3306, metadata !DIExpression()), !dbg !3367
  store i8 %285, i8* %275, align 1, !dbg !3606
  br label %297, !dbg !3607

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3608
  %289 = load i8, i8* %288, align 1, !dbg !3608
  %290 = zext i8 %289 to i32, !dbg !3608
  %291 = shl nuw nsw i32 %290, 2, !dbg !3610
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3611
  %293 = bitcast i8* %292 to i8**, !dbg !3612
  %294 = load i8*, i8** %293, align 4, !dbg !3612
  call void @llvm.dbg.value(metadata i8* %294, metadata !3317, metadata !DIExpression()), !dbg !3367
  store i8* null, i8** %293, align 4, !dbg !3613
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !3614
  %296 = add i32 %295, 1, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %296, metadata !3307, metadata !DIExpression()), !dbg !3367
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3367
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3616
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3367
  call void @llvm.dbg.value(metadata i8* %300, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 %299, metadata !3307, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %298, metadata !3317, metadata !DIExpression()), !dbg !3367
  %301 = ptrtoint i8* %300 to i32, !dbg !3617
  %302 = add i32 %273, %299, !dbg !3619
  %303 = add i32 %302, %301, !dbg !3620
  %304 = icmp ugt i32 %303, %196, !dbg !3621
  br i1 %304, label %320, label %305, !dbg !3622

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3623
  %307 = load i8, i8* %306, align 1, !dbg !3623
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3624
  call void @llvm.dbg.value(metadata i8* %308, metadata !3306, metadata !DIExpression()), !dbg !3367
  store i8 %307, i8* %300, align 1, !dbg !3625
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !3626
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3627
  call void @llvm.dbg.value(metadata i8* %310, metadata !3306, metadata !DIExpression()), !dbg !3367
  br label %311, !dbg !3628

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3629
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3367
  call void @llvm.dbg.value(metadata i8* %313, metadata !3306, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %312, metadata !3317, metadata !DIExpression()), !dbg !3367
  %314 = add nuw i32 %277, 1, !dbg !3630
  call void @llvm.dbg.value(metadata i32 %314, metadata !3316, metadata !DIExpression()), !dbg !3367
  %315 = icmp eq i32 %314, %195, !dbg !3591
  br i1 %315, label %316, label %274, !dbg !3594, !llvm.loop !3631

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3516
  %318 = ptrtoint i8* %317 to i32, !dbg !3633
  %319 = sub i32 %318, %17, !dbg !3633
  br label %320, !dbg !3634

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3635
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3635
  ret i32 %321, !dbg !3635
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3636 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3640, metadata !DIExpression()), !dbg !3641
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !3642
  ret i1 %2, !dbg !3643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3644 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3649, metadata !DIExpression()), !dbg !3650
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3651
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3652
  %4 = and i1 %2, %3, !dbg !3652
  ret i1 %4, !dbg !3653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3654 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3658, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i32 %1, metadata !3659, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i32 %2, metadata !3660, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i8* %3, metadata !3661, metadata !DIExpression()), !dbg !3664
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3665
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3665
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3662, metadata !DIExpression()), !dbg !3666
  call void @llvm.va_start(i8* nonnull %6), !dbg !3667
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3668
  %8 = load i32, i32* %7, align 4, !dbg !3668
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3668
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %10, metadata !3663, metadata !DIExpression()), !dbg !3664
  call void @llvm.va_end(i8* nonnull %6), !dbg !3669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3670
  ret i32 %10, !dbg !3671
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3672 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3684, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3685, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %2, metadata !3686, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %3, metadata !3687, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %3, metadata !3688, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %3, metadata !3689, metadata !DIExpression()), !dbg !3703
  %5 = icmp eq i8* %3, null, !dbg !3704
  br i1 %5, label %45, label %6, !dbg !3706

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3698, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3703
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3707
  %8 = load i8, i8* %7, align 1, !dbg !3707
  %9 = zext i8 %8 to i32, !dbg !3708
  call void @llvm.dbg.value(metadata i32 %9, metadata !3699, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8 undef, metadata !3700, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3703
  call void @llvm.dbg.value(metadata i8 undef, metadata !3701, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  call void @llvm.dbg.value(metadata i32 0, metadata !3697, metadata !DIExpression()), !dbg !3703
  %10 = icmp eq i8 %8, 0, !dbg !3709
  br i1 %10, label %39, label %11, !dbg !3712

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3713
  call void @llvm.dbg.value(metadata i8 %12, metadata !3698, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %13 = zext i8 %12 to i32, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %13, metadata !3698, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %14 = shl nuw nsw i32 %13, 2, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %14, metadata !3698, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3716
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3717
  %17 = load i8, i8* %16, align 1, !dbg !3717
  call void @llvm.dbg.value(metadata i8 %17, metadata !3700, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %18 = zext i8 %17 to i32, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %18, metadata !3700, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3719
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3720
  %21 = load i8, i8* %20, align 1, !dbg !3720
  call void @llvm.dbg.value(metadata i8 %21, metadata !3701, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %22 = zext i8 %21 to i32, !dbg !3721
  call void @llvm.dbg.value(metadata i32 %22, metadata !3701, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %23 = shl nuw nsw i32 %22, 1, !dbg !3722
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3703
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %24, metadata !3695, metadata !DIExpression()), !dbg !3703
  br label %25, !dbg !3712

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3695, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32 %27, metadata !3697, metadata !DIExpression()), !dbg !3703
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3724
  call void @llvm.dbg.value(metadata i8* %28, metadata !3695, metadata !DIExpression()), !dbg !3703
  %29 = load i8, i8* %26, align 1, !dbg !3726
  %30 = zext i8 %29 to i32, !dbg !3726
  call void @llvm.dbg.value(metadata i32 %30, metadata !3702, metadata !DIExpression()), !dbg !3703
  %31 = shl nuw nsw i32 %30, 2, !dbg !3727
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3728
  %33 = bitcast i8* %32 to i8**, !dbg !3729
  call void @llvm.dbg.value(metadata i8** %33, metadata !3696, metadata !DIExpression()), !dbg !3703
  store i8* %28, i8** %33, align 4, !dbg !3730
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !3731
  %35 = add i32 %34, 1, !dbg !3732
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3733
  call void @llvm.dbg.value(metadata i8* %36, metadata !3695, metadata !DIExpression()), !dbg !3703
  %37 = add nuw nsw i32 %27, 1, !dbg !3734
  call void @llvm.dbg.value(metadata i32 %37, metadata !3697, metadata !DIExpression()), !dbg !3703
  %38 = icmp eq i32 %37, %9, !dbg !3709
  br i1 %38, label %39, label %25, !dbg !3712, !llvm.loop !3735

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3737
  call void @llvm.dbg.value(metadata i8* %40, metadata !3688, metadata !DIExpression()), !dbg !3703
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3738
  %42 = bitcast i8* %41 to i8**, !dbg !3738
  %43 = load i8*, i8** %42, align 1, !dbg !3738
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !3739
  br label %45, !dbg !3740

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3703
  ret i32 %46, !dbg !3741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3742 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3746, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3747, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i8* %2, metadata !3748, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i8* %3, metadata !3749, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i8* %4, metadata !3750, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i8* %4, metadata !3751, metadata !DIExpression()), !dbg !3756
  %6 = ptrtoint i8* %4 to i32, !dbg !3757
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3757
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !3757
  ret i32 %8, !dbg !3758
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !3759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3763, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 %1, metadata !3764, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i8 0, metadata !3766, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 0, metadata !3767, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i8 poison, metadata !3766, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i8* %0, metadata !3763, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3768
  %3 = load i8, i8* %0, align 1, !dbg !3769
  call void @llvm.dbg.value(metadata i8 %3, metadata !3765, metadata !DIExpression()), !dbg !3768
  %4 = icmp eq i8 %3, 0, !dbg !3770
  br i1 %4, label %29, label %5, !dbg !3771

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3772
  call void @llvm.dbg.value(metadata i32 %8, metadata !3767, metadata !DIExpression()), !dbg !3768
  br i1 %9, label %11, label %22, !dbg !3773

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3775
  br i1 %12, label %13, label %17, !dbg !3779

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3780
  br i1 %14, label %29, label %15, !dbg !3783

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3784
  br i1 %16, label %29, label %22, !dbg !3786

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3787
  %19 = xor i1 %18, true, !dbg !3789
  %20 = zext i1 %18 to i32, !dbg !3789
  %21 = add nsw i32 %8, %20, !dbg !3789
  br label %22, !dbg !3789

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3768
  call void @llvm.dbg.value(metadata i32 %24, metadata !3767, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i8 poison, metadata !3766, metadata !DIExpression()), !dbg !3768
  %25 = icmp eq i8 %6, 37, !dbg !3790
  %26 = xor i1 %25, %23, !dbg !3792
  call void @llvm.dbg.value(metadata i8* %10, metadata !3763, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i8* %10, metadata !3763, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3768
  %27 = load i8, i8* %10, align 1, !dbg !3769
  call void @llvm.dbg.value(metadata i8 %27, metadata !3765, metadata !DIExpression()), !dbg !3768
  %28 = icmp eq i8 %27, 0, !dbg !3770
  br i1 %28, label %29, label %5, !dbg !3771, !llvm.loop !3793

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3768
  ret i1 %30, !dbg !3795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !3796 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3800, metadata !DIExpression()), !dbg !3801
  %2 = add i8 %0, -64, !dbg !3802
  %3 = icmp ult i8 %2, 59, !dbg !3802
  ret i1 %3, !dbg !3803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3804 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3812, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %1, metadata !3813, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3814, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %3, metadata !3815, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %4, metadata !3816, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i16* %5, metadata !3817, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %6, metadata !3818, metadata !DIExpression()), !dbg !3881
  %11 = icmp eq i8* %0, null, !dbg !3882
  br i1 %11, label %12, label %13, !dbg !3885

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3886
  unreachable, !dbg !3886

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3819, metadata !DIExpression()), !dbg !3881
  %14 = bitcast i8* %0 to i32*, !dbg !3888
  call void @llvm.dbg.value(metadata i32* %14, metadata !3820, metadata !DIExpression()), !dbg !3881
  %15 = and i32 %4, 8, !dbg !3889
  %16 = icmp eq i32 %15, 0, !dbg !3890
  call void @llvm.dbg.value(metadata i1 %16, metadata !3824, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %0, metadata !3827, metadata !DIExpression()), !dbg !3881
  %17 = icmp eq i32 %1, 0, !dbg !3891
  br i1 %17, label %18, label %20, !dbg !3892

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !3893
  br label %20, !dbg !3892

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3892
  call void @llvm.dbg.value(metadata i32 %21, metadata !3813, metadata !DIExpression()), !dbg !3881
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3894
  %23 = load i8, i8* %22, align 1, !dbg !3894
  %24 = zext i8 %23 to i32, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %24, metadata !3822, metadata !DIExpression()), !dbg !3881
  %25 = icmp ne i8 %23, 0, !dbg !3896
  %26 = and i32 %4, 1, !dbg !3897
  %27 = icmp ne i32 %26, 0, !dbg !3897
  %28 = and i1 %27, %25, !dbg !3897
  call void @llvm.dbg.value(metadata i1 %28, metadata !3826, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3881
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3898
  %30 = load i8, i8* %29, align 1, !dbg !3898
  %31 = zext i8 %30 to i32, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %31, metadata !3823, metadata !DIExpression()), !dbg !3881
  %32 = icmp ne i8 %30, 0, !dbg !3900
  %33 = and i32 %4, 2, !dbg !3901
  %34 = icmp ne i32 %33, 0, !dbg !3901
  %35 = and i1 %34, %32, !dbg !3901
  call void @llvm.dbg.value(metadata i1 %35, metadata !3825, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3881
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3902
  br i1 %36, label %41, label %37, !dbg !3902

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3904
  br i1 %38, label %287, label %39, !dbg !3907

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !3908
  br label %287, !dbg !3910

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3911
  %43 = zext i8 %42 to i32, !dbg !3912
  %44 = shl nuw nsw i32 %43, 2, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %44, metadata !3821, metadata !DIExpression()), !dbg !3881
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3914
  %46 = bitcast i8* %45 to i8**, !dbg !3915
  %47 = load i8*, i8** %46, align 4, !dbg !3915
  call void @llvm.dbg.value(metadata i8* %47, metadata !3830, metadata !DIExpression()), !dbg !3881
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3916
  call void @llvm.dbg.value(metadata i8* %48, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 0, metadata !3832, metadata !DIExpression()), !dbg !3881
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3917
  br i1 %49, label %50, label %135, !dbg !3918

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3829, metadata !DIExpression()), !dbg !3881
  br i1 %28, label %51, label %76, !dbg !3919

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %48, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 0, metadata !3832, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 0, metadata !3833, metadata !DIExpression()), !dbg !3920
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3921

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %55, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %56, metadata !3832, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %57, metadata !3833, metadata !DIExpression()), !dbg !3920
  %58 = load i8, i8* %55, align 1, !dbg !3922
  %59 = zext i8 %58 to i32, !dbg !3923
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3923
  %61 = bitcast i32* %60 to i8**, !dbg !3924
  %62 = load i8*, i8** %61, align 4, !dbg !3924
  call void @llvm.dbg.value(metadata i8* %62, metadata !3839, metadata !DIExpression()), !dbg !3925
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !3926
  call void @llvm.dbg.value(metadata i32 %63, metadata !3842, metadata !DIExpression()), !dbg !3925
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3927
  br i1 %65, label %66, label %70, !dbg !3927

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3929
  %68 = add nuw i32 %56, 1, !dbg !3931
  call void @llvm.dbg.value(metadata i32 %68, metadata !3832, metadata !DIExpression()), !dbg !3881
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3932
  store i16 %67, i16* %69, align 2, !dbg !3933
  br label %70, !dbg !3934

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3881
  call void @llvm.dbg.value(metadata i32 %71, metadata !3832, metadata !DIExpression()), !dbg !3881
  %72 = add nsw i32 %63, %54, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %72, metadata !3829, metadata !DIExpression()), !dbg !3881
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %73, metadata !3831, metadata !DIExpression()), !dbg !3881
  %74 = add nuw nsw i32 %57, 1, !dbg !3937
  call void @llvm.dbg.value(metadata i32 %74, metadata !3833, metadata !DIExpression()), !dbg !3920
  %75 = icmp eq i32 %74, %24, !dbg !3938
  br i1 %75, label %82, label %53, !dbg !3921, !llvm.loop !3939

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3941
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3941
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3941
  br label %82, !dbg !3941

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3944
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3881
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3945
  call void @llvm.dbg.value(metadata i1 undef, metadata !3843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3946
  call void @llvm.dbg.value(metadata i32 0, metadata !3844, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata i32 %85, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %84, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %83, metadata !3832, metadata !DIExpression()), !dbg !3881
  %86 = icmp eq i8 %30, 0, !dbg !3948
  br i1 %86, label %287, label %87, !dbg !3949

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3950
  %89 = icmp eq i32 %88, 0, !dbg !3951
  call void @llvm.dbg.value(metadata i1 %89, metadata !3843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3946
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3949

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %96, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %97, metadata !3832, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %98, metadata !3844, metadata !DIExpression()), !dbg !3947
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3952
  call void @llvm.dbg.value(metadata i8* %99, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 undef, metadata !3846, metadata !DIExpression()), !dbg !3953
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3954
  call void @llvm.dbg.value(metadata i8* %100, metadata !3831, metadata !DIExpression()), !dbg !3881
  %101 = load i8, i8* %99, align 1, !dbg !3955
  call void @llvm.dbg.value(metadata i8 %101, metadata !3849, metadata !DIExpression()), !dbg !3953
  %102 = zext i8 %101 to i32, !dbg !3956
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3956
  %104 = bitcast i32* %103 to i8**, !dbg !3957
  %105 = load i8*, i8** %104, align 4, !dbg !3957
  call void @llvm.dbg.value(metadata i8* %105, metadata !3850, metadata !DIExpression()), !dbg !3953
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !3958
  call void @llvm.dbg.value(metadata i1 %106, metadata !3851, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3953
  br i1 %16, label %113, label %107, !dbg !3959

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3961
  call void @llvm.dbg.value(metadata i8 %108, metadata !3846, metadata !DIExpression()), !dbg !3953
  %109 = zext i8 %108 to i32, !dbg !3962
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !3963
  br i1 %110, label %111, label %113, !dbg !3964

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !3965
  %112 = add nsw i32 %95, -2, !dbg !3971
  call void @llvm.dbg.value(metadata i32 %112, metadata !3829, metadata !DIExpression()), !dbg !3881
  br label %130, !dbg !3972

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3973

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3974

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3976
  call void @llvm.dbg.value(metadata i32 %116, metadata !3829, metadata !DIExpression()), !dbg !3881
  br label %130, !dbg !3979

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3980

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3877), !dbg !3981
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %119, metadata !3852, metadata !DIExpression()), !dbg !3953
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3983
  br i1 %121, label %122, label %126, !dbg !3983

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3985
  %124 = add nuw i32 %97, 1, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %124, metadata !3832, metadata !DIExpression()), !dbg !3881
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3988
  store i16 %123, i16* %125, align 2, !dbg !3989
  br label %126, !dbg !3990

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3881
  call void @llvm.dbg.value(metadata i32 %127, metadata !3832, metadata !DIExpression()), !dbg !3881
  %128 = add i32 %95, -1, !dbg !3991
  %129 = add i32 %128, %119, !dbg !3992
  call void @llvm.dbg.value(metadata i32 %129, metadata !3829, metadata !DIExpression()), !dbg !3881
  br label %130, !dbg !3993

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3881
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3953
  call void @llvm.dbg.value(metadata i32 %132, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %131, metadata !3832, metadata !DIExpression()), !dbg !3881
  %133 = add nuw nsw i32 %98, 1, !dbg !3994
  call void @llvm.dbg.value(metadata i8* %100, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %133, metadata !3844, metadata !DIExpression()), !dbg !3947
  %134 = icmp eq i32 %133, %31, !dbg !3948
  br i1 %134, label %287, label %94, !dbg !3949, !llvm.loop !3995

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3854, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3855, metadata !DIExpression()), !dbg !3998
  br i1 %28, label %136, label %138, !dbg !3999

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3856, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 0, metadata !3857, metadata !DIExpression()), !dbg !3881
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4000
  call void @llvm.dbg.value(metadata i8* %137, metadata !3858, metadata !DIExpression()), !dbg !3881
  br label %143, !dbg !4003

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4004
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4004

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3858, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 undef, metadata !3857, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 0, metadata !3856, metadata !DIExpression()), !dbg !3881
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !4006
  br label %148, !dbg !4009

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4010
  call void @llvm.dbg.value(metadata i8* %151, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 0, metadata !3860, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i8 %149, metadata !3857, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 %150, metadata !3856, metadata !DIExpression()), !dbg !3881
  %152 = icmp eq i8 %30, 0, !dbg !4012
  br i1 %152, label %153, label %155, !dbg !4013

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4014
  br label %160, !dbg !4013

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4013

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4014
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4015
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4016
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3881
  call void @llvm.dbg.value(metadata i8 undef, metadata !3853, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3881
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4017
  %166 = load i8, i8* %165, align 1, !dbg !4017
  %167 = zext i8 %162 to i32, !dbg !4018
  %168 = add i8 %166, %162, !dbg !4019
  call void @llvm.dbg.value(metadata i8 %168, metadata !3853, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3881
  %169 = icmp eq i32 %33, 0, !dbg !4020
  %170 = lshr i8 %163, 1, !dbg !4021
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4021
  call void @llvm.dbg.value(metadata i8 %171, metadata !3853, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3881
  %172 = icmp eq i32 %26, 0, !dbg !4022
  %173 = icmp eq i32 %161, 0, !dbg !4014
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4014
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4014
  call void @llvm.dbg.value(metadata i8 %175, metadata !3853, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3881
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3868, metadata !DIExpression()), !dbg !4023
  %176 = load i32, i32* %14, align 1, !dbg !4024
  store i8 %168, i8* %165, align 1, !dbg !4025
  store i8 %175, i8* %22, align 1, !dbg !4025
  store i8 %171, i8* %29, align 1, !dbg !4025
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4026
  call void @llvm.dbg.value(metadata i32 %177, metadata !3859, metadata !DIExpression()), !dbg !3881
  %178 = icmp slt i32 %177, 0, !dbg !4027
  br i1 %178, label %287, label %240, !dbg !4029

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %181, metadata !3860, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i8 %182, metadata !3857, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 %183, metadata !3856, metadata !DIExpression()), !dbg !3881
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4030
  call void @llvm.dbg.value(metadata i8* %184, metadata !3831, metadata !DIExpression()), !dbg !3881
  %185 = load i8, i8* %180, align 1, !dbg !4031
  call void @llvm.dbg.value(metadata i8 %185, metadata !3862, metadata !DIExpression()), !dbg !4032
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4033
  call void @llvm.dbg.value(metadata i8* %186, metadata !3831, metadata !DIExpression()), !dbg !3881
  %187 = load i8, i8* %184, align 1, !dbg !4034
  call void @llvm.dbg.value(metadata i8 %187, metadata !3865, metadata !DIExpression()), !dbg !4032
  %188 = zext i8 %187 to i32, !dbg !4035
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4035
  %190 = bitcast i32* %189 to i8**, !dbg !4036
  %191 = load i8*, i8** %190, align 4, !dbg !4036
  call void @llvm.dbg.value(metadata i8* %191, metadata !3866, metadata !DIExpression()), !dbg !4032
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4037
  call void @llvm.dbg.value(metadata i1 %192, metadata !3867, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4032
  br i1 %16, label %196, label %193, !dbg !4038

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4040
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4041
  br i1 %195, label %235, label %196, !dbg !4042

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4043

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4044

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4047
  br i1 %199, label %201, label %200, !dbg !4052

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4053
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4053
  unreachable, !dbg !4053

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4047
  %203 = add nuw nsw i8 %183, 1, !dbg !4055
  call void @llvm.dbg.value(metadata i8 %203, metadata !3856, metadata !DIExpression()), !dbg !3881
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4056
  br label %231, !dbg !4057

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4058

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4059
  br i1 %207, label %209, label %208, !dbg !4064

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4065
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4065
  unreachable, !dbg !4065

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4059
  %211 = add nuw nsw i8 %182, 1, !dbg !4067
  call void @llvm.dbg.value(metadata i8 %211, metadata !3857, metadata !DIExpression()), !dbg !3881
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4068
  br label %231, !dbg !4069

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4070

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4072
  br i1 %215, label %217, label %216, !dbg !4077

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4078
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4078
  unreachable, !dbg !4078

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4072
  %219 = add nuw nsw i8 %183, 1, !dbg !4080
  call void @llvm.dbg.value(metadata i8 %219, metadata !3856, metadata !DIExpression()), !dbg !3881
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4081
  br label %231, !dbg !4082

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4083
  br i1 %222, label %224, label %223, !dbg !4087

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4088
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4088
  unreachable, !dbg !4088

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4083
  %226 = add nuw nsw i8 %182, 1, !dbg !4090
  call void @llvm.dbg.value(metadata i8 %226, metadata !3857, metadata !DIExpression()), !dbg !3881
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4091
  store i8 %185, i8* %227, align 1, !dbg !4092
  %228 = add nuw nsw i8 %182, 2, !dbg !4093
  call void @llvm.dbg.value(metadata i8 %228, metadata !3857, metadata !DIExpression()), !dbg !3881
  %229 = zext i8 %226 to i32, !dbg !4094
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4094
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4095
  br label %235, !dbg !4096

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3881
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4016
  call void @llvm.dbg.value(metadata i8 %237, metadata !3857, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 %236, metadata !3856, metadata !DIExpression()), !dbg !3881
  %238 = add nuw nsw i32 %181, 1, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %186, metadata !3831, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %238, metadata !3860, metadata !DIExpression()), !dbg !4011
  %239 = icmp eq i32 %238, %31, !dbg !4012
  br i1 %239, label %160, label %179, !dbg !4013, !llvm.loop !4097

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %177, metadata !3829, metadata !DIExpression()), !dbg !3881
  store i32 %176, i32* %14, align 1, !dbg !4099
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4100
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %243, metadata !3859, metadata !DIExpression()), !dbg !3881
  %244 = icmp slt i32 %243, 0, !dbg !4102
  br i1 %244, label %287, label %245, !dbg !4104

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3829, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3881
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4105
  %248 = add nuw nsw i32 %44, %24, !dbg !4105
  %249 = sub i32 %247, %248, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %249, metadata !3869, metadata !DIExpression()), !dbg !3881
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %250, metadata !3859, metadata !DIExpression()), !dbg !3881
  %251 = icmp slt i32 %250, 0, !dbg !4107
  br i1 %251, label %287, label %252, !dbg !4109

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4110
  call void @llvm.dbg.value(metadata i32 %253, metadata !3829, metadata !DIExpression()), !dbg !3881
  %254 = add nuw nsw i32 %253, %250, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %254, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 0, metadata !3870, metadata !DIExpression()), !dbg !4112
  %255 = icmp eq i8 %162, 0, !dbg !4113
  br i1 %255, label %284, label %256, !dbg !4114

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4114

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3870, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.value(metadata i32 %260, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4115
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4116
  %262 = load i8, i8* %261, align 1, !dbg !4116
  call void @llvm.dbg.value(metadata i8 %262, metadata !3872, metadata !DIExpression()), !dbg !4117
  store i8 %262, i8* %10, align 1, !dbg !4118
  %263 = zext i8 %262 to i32, !dbg !4119
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4119
  %265 = bitcast i32* %264 to i8**, !dbg !4120
  %266 = load i8*, i8** %265, align 4, !dbg !4120
  call void @llvm.dbg.value(metadata i8* %266, metadata !3875, metadata !DIExpression()), !dbg !4117
  br i1 %257, label %270, label %267, !dbg !4121

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4122
  %269 = load i16, i16* %268, align 2, !dbg !4122
  br label %270, !dbg !4121

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4121
  call void @llvm.dbg.value(metadata i32 undef, metadata !3876, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4117
  call void @llvm.dbg.value(metadata i8* %10, metadata !3872, metadata !DIExpression(DW_OP_deref)), !dbg !4117
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %272, metadata !3859, metadata !DIExpression()), !dbg !3881
  %273 = icmp slt i32 %272, 0, !dbg !4124
  br i1 %273, label %277, label %274, !dbg !4126

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3876, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3829, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3881
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %275, metadata !3859, metadata !DIExpression()), !dbg !3881
  %276 = icmp slt i32 %275, 0, !dbg !4128
  br i1 %276, label %277, label %279, !dbg !4130

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4131
  call void @llvm.dbg.value(metadata i32 undef, metadata !3829, metadata !DIExpression()), !dbg !3881
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %280, metadata !3829, metadata !DIExpression()), !dbg !3881
  %281 = add nsw i32 %280, %275, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %281, metadata !3829, metadata !DIExpression()), !dbg !3881
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4131
  %282 = add nuw nsw i32 %259, 1, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %282, metadata !3870, metadata !DIExpression()), !dbg !4112
  %283 = icmp eq i32 %282, %167, !dbg !4113
  br i1 %283, label %284, label %258, !dbg !4114, !llvm.loop !4135

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4111
  call void @llvm.dbg.value(metadata i32 %285, metadata !3829, metadata !DIExpression()), !dbg !3881
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4137
  br label %287, !dbg !4138

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3881
  ret i32 %288, !dbg !4139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4140 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4144, metadata !DIExpression()), !dbg !4152
  %2 = icmp eq i8* %0, null, !dbg !4153
  br i1 %2, label %3, label %4, !dbg !4156

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4157
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4157
  unreachable, !dbg !4157

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4145, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i8* %0, metadata !4146, metadata !DIExpression()), !dbg !4152
  %5 = load i8, i8* %0, align 1, !dbg !4159
  %6 = zext i8 %5 to i32, !dbg !4159
  %7 = shl nuw nsw i32 %6, 2, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %7, metadata !4147, metadata !DIExpression()), !dbg !4152
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4161
  %9 = load i8, i8* %8, align 1, !dbg !4161
  %10 = zext i8 %9 to i32, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %10, metadata !4148, metadata !DIExpression()), !dbg !4152
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4162
  %12 = load i8, i8* %11, align 1, !dbg !4162
  %13 = zext i8 %12 to i32, !dbg !4162
  call void @llvm.dbg.value(metadata i32 %13, metadata !4149, metadata !DIExpression()), !dbg !4152
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4163
  call void @llvm.dbg.value(metadata i8* %14, metadata !4145, metadata !DIExpression()), !dbg !4152
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4164
  call void @llvm.dbg.value(metadata i8* %15, metadata !4145, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 0, metadata !4150, metadata !DIExpression()), !dbg !4165
  %16 = icmp eq i8 %9, 0, !dbg !4166
  br i1 %16, label %17, label %22, !dbg !4168

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4152
  %19 = ptrtoint i8* %18 to i32, !dbg !4169
  %20 = ptrtoint i8* %0 to i32, !dbg !4169
  %21 = sub i32 %19, %20, !dbg !4169
  ret i32 %21, !dbg !4170

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4150, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8* %24, metadata !4145, metadata !DIExpression()), !dbg !4152
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4171
  call void @llvm.dbg.value(metadata i8* %25, metadata !4145, metadata !DIExpression()), !dbg !4152
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4173
  %27 = add i32 %26, 1, !dbg !4174
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4175
  call void @llvm.dbg.value(metadata i8* %28, metadata !4145, metadata !DIExpression()), !dbg !4152
  %29 = add nuw nsw i32 %23, 1, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %29, metadata !4150, metadata !DIExpression()), !dbg !4165
  %30 = icmp eq i32 %29, %10, !dbg !4166
  br i1 %30, label %17, label %22, !dbg !4168, !llvm.loop !4177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4179 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4183, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i8* %1, metadata !4184, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i8* %2, metadata !4185, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i16 %3, metadata !4186, metadata !DIExpression()), !dbg !4187
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4188
  br i1 %5, label %6, label %9, !dbg !4190

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4191
  %8 = add i32 %7, 1, !dbg !4193
  br label %20, !dbg !4194

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4195
  br i1 %10, label %13, label %11, !dbg !4196

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4196
  br label %16, !dbg !4196

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4197
  %15 = add i32 %14, 1, !dbg !4198
  br label %16, !dbg !4196

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4196
  %18 = and i32 %17, 65535, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %17, metadata !4186, metadata !DIExpression()), !dbg !4187
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4200
  br label %20, !dbg !4201

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4187
  ret i32 %21, !dbg !4202
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4205, metadata !DIExpression()), !dbg !4206
  ret i32 0, !dbg !4207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4208 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4212, metadata !DIExpression()), !dbg !4213
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4214
  ret void, !dbg !4215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4216 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4219
  ret i8* %1, !dbg !4220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4221 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4232, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata i8* %0, metadata !4231, metadata !DIExpression()), !dbg !4243
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4244
  ret void, !dbg !4246
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4251, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.value(metadata i8* %1, metadata !4252, metadata !DIExpression()), !dbg !4253
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4254
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4254
  ret i32 %4, !dbg !4255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4256 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4263, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4260, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %1, metadata !4261, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %2, metadata !4262, metadata !DIExpression()), !dbg !4264
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4265
  ret void, !dbg !4266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4267 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4271, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %1, metadata !4272, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 0, metadata !4273, metadata !DIExpression()), !dbg !4274
  %3 = icmp eq i32 %1, 0, !dbg !4275
  br i1 %3, label %13, label %4, !dbg !4278

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4273, metadata !DIExpression()), !dbg !4274
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4279
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4281
  %8 = load i8, i8* %7, align 1, !dbg !4281
  %9 = zext i8 %8 to i32, !dbg !4281
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4279
  %11 = add nuw i32 %5, 1, !dbg !4282
  call void @llvm.dbg.value(metadata i32 %11, metadata !4273, metadata !DIExpression()), !dbg !4274
  %12 = icmp eq i32 %11, %1, !dbg !4275
  br i1 %12, label %13, label %4, !dbg !4278, !llvm.loop !4283

13:                                               ; preds = %4, %2
  ret void, !dbg !4285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4286 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4290, metadata !DIExpression()), !dbg !4292
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4293
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4291, metadata !DIExpression()), !dbg !4294
  call void @llvm.va_start(i8* nonnull %3), !dbg !4295
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4296
  %5 = load i32, i32* %4, align 4, !dbg !4296
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4296
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4296
  call void @llvm.va_end(i8* nonnull %3), !dbg !4297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4298
  ret void, !dbg !4298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4299 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4303, metadata !DIExpression()), !dbg !4308
  call void @llvm.dbg.value(metadata i32 %1, metadata !4304, metadata !DIExpression()), !dbg !4308
  call void @llvm.dbg.value(metadata i8* %2, metadata !4305, metadata !DIExpression()), !dbg !4308
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4309
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4309
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4306, metadata !DIExpression()), !dbg !4310
  call void @llvm.va_start(i8* nonnull %5), !dbg !4311
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4312
  %7 = load i32, i32* %6, align 4, !dbg !4312
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4312
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4312
  call void @llvm.dbg.value(metadata i32 %9, metadata !4307, metadata !DIExpression()), !dbg !4308
  call void @llvm.va_end(i8* nonnull %5), !dbg !4313
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4314
  ret i32 %9, !dbg !4315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4316 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4323, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i8* %0, metadata !4320, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i32 %1, metadata !4321, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i8* %2, metadata !4322, metadata !DIExpression()), !dbg !4330
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4331
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4324, metadata !DIExpression()), !dbg !4332
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4333
  store i8* %0, i8** %7, align 4, !dbg !4333
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4333
  store i32 %1, i32* %8, align 4, !dbg !4333
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4333
  store i32 0, i32* %9, align 4, !dbg !4333
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4334
  %10 = load i32, i32* %9, align 4, !dbg !4335
  %11 = load i32, i32* %8, align 4, !dbg !4337
  %12 = icmp slt i32 %10, %11, !dbg !4338
  br i1 %12, label %13, label %15, !dbg !4339

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4340
  store i8 0, i8* %14, align 1, !dbg !4342
  br label %15, !dbg !4343

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4344
  ret i32 %10, !dbg !4345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !4346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4352, metadata !DIExpression()), !dbg !4353
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4354
  %4 = load i8*, i8** %3, align 4, !dbg !4354
  %5 = icmp eq i8* %4, null, !dbg !4356
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4357
  br i1 %5, label %12, label %8, !dbg !4358

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4359
  %10 = load i32, i32* %9, align 4, !dbg !4359
  %11 = icmp slt i32 %7, %10, !dbg !4360
  br i1 %11, label %15, label %12, !dbg !4361

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4362
  %14 = add nsw i32 %7, 1, !dbg !4364
  store i32 %14, i32* %13, align 4, !dbg !4364
  br label %25, !dbg !4365

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4366
  %17 = icmp eq i32 %7, %16, !dbg !4368
  br i1 %17, label %18, label %21, !dbg !4369

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4370
  store i32 %19, i32* %6, align 4, !dbg !4370
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4372
  store i8 0, i8* %20, align 1, !dbg !4373
  br label %25, !dbg !4374

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4375
  %23 = add nsw i32 %7, 1, !dbg !4377
  store i32 %23, i32* %6, align 4, !dbg !4377
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4378
  store i8 %22, i8* %24, align 1, !dbg !4379
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4380
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !4381 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4386, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i8* %1, metadata !4387, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i8* %2, metadata !4388, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i8* %3, metadata !4389, metadata !DIExpression()), !dbg !4390
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4391
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4392
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4393
  unreachable, !dbg !4394
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !4395 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4502
  ret %struct.k_thread* %1, !dbg !4503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4504 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4508, metadata !DIExpression()), !dbg !4509
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4510, !srcloc !4512
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !4513
  ret void, !dbg !4514
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !4515 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4516, !srcloc !4518
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !4519
  ret %struct.k_thread* %1, !dbg !4520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4521 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4534, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4531, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8* %1, metadata !4532, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8* %2, metadata !4533, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %4, metadata !4535, metadata !DIExpression()), !dbg !4660
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4661
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4661
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4536, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata i32 0, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i1 undef, metadata !4542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4660
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4663

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4663

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4664
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4534, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8* %30, metadata !4533, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %29, metadata !4540, metadata !DIExpression()), !dbg !4660
  %31 = load i8, i8* %30, align 1, !dbg !4665
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4663

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4665
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4666
  call void @llvm.dbg.value(metadata i8* %34, metadata !4533, metadata !DIExpression()), !dbg !4660
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4666
  call void @llvm.dbg.value(metadata i32 %35, metadata !4544, metadata !DIExpression()), !dbg !4667
  %36 = icmp slt i32 %35, 0, !dbg !4668
  %37 = add i32 %29, 1, !dbg !4666
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %36, label %365, label %28, !llvm.loop !4670

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4672
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4549, metadata !DIExpression()), !dbg !4673
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4673
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4592, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4595, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %30, metadata !4598, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 -1, metadata !4599, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 -1, metadata !4600, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* null, metadata !4601, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %14, metadata !4602, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8 0, metadata !4603, metadata !DIExpression()), !dbg !4674
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %39, metadata !4533, metadata !DIExpression()), !dbg !4660
  %40 = load i24, i24* %15, align 8, !dbg !4676
  %41 = and i24 %40, 256, !dbg !4676
  %42 = icmp eq i24 %41, 0, !dbg !4676
  br i1 %42, label %51, label %43, !dbg !4678

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4679
  call void @llvm.dbg.value(metadata i8* %44, metadata !4534, metadata !DIExpression()), !dbg !4660
  %45 = bitcast i8* %27 to i32*, !dbg !4679
  %46 = load i32, i32* %45, align 4, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %46, metadata !4599, metadata !DIExpression()), !dbg !4674
  %47 = icmp slt i32 %46, 0, !dbg !4681
  br i1 %47, label %48, label %56, !dbg !4683

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4684
  store i24 %49, i24* %15, align 8, !dbg !4684
  %50 = sub nsw i32 0, %46, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %50, metadata !4599, metadata !DIExpression()), !dbg !4674
  br label %56, !dbg !4687

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4688
  %53 = icmp eq i24 %52, 0, !dbg !4688
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4690
  br label %56, !dbg !4690

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4691
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4674
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4534, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %58, metadata !4599, metadata !DIExpression()), !dbg !4674
  %60 = and i24 %57, 1024, !dbg !4691
  %61 = icmp eq i24 %60, 0, !dbg !4691
  br i1 %61, label %69, label %62, !dbg !4692

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %63, metadata !4534, metadata !DIExpression()), !dbg !4660
  %64 = bitcast i8* %59 to i32*, !dbg !4693
  %65 = load i32, i32* %64, align 4, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %65, metadata !4604, metadata !DIExpression()), !dbg !4694
  %66 = icmp slt i32 %65, 0, !dbg !4695
  br i1 %66, label %67, label %74, !dbg !4697

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4698
  store i24 %68, i24* %15, align 8, !dbg !4698
  br label %74, !dbg !4700

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4701
  %71 = icmp eq i24 %70, 0, !dbg !4701
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4703
  br label %74, !dbg !4703

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4704
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4674
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4674
  call void @llvm.dbg.value(metadata i8* %77, metadata !4534, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %76, metadata !4600, metadata !DIExpression()), !dbg !4674
  store i32 0, i32* %16, align 4, !dbg !4705
  store i32 0, i32* %17, align 8, !dbg !4706
  %78 = lshr i24 %75, 16, !dbg !4704
  call void @llvm.dbg.value(metadata i24 %78, metadata !4607, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4674
  %79 = lshr i24 %75, 11, !dbg !4707
  %80 = and i24 %79, 15, !dbg !4707
  %81 = zext i24 %80 to i32, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %81, metadata !4608, metadata !DIExpression()), !dbg !4674
  %82 = trunc i24 %78 to i3, !dbg !4708
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4708

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4709

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4712
  call void @llvm.dbg.value(metadata i8* %85, metadata !4534, metadata !DIExpression()), !dbg !4660
  %86 = bitcast i8* %77 to i32*, !dbg !4712
  %87 = load i32, i32* %86, align 4, !dbg !4712
  %88 = sext i32 %87 to i64, !dbg !4712
  store i64 %88, i64* %20, align 8, !dbg !4714
  br label %115, !dbg !4715

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4716
  call void @llvm.dbg.value(metadata i8* %90, metadata !4534, metadata !DIExpression()), !dbg !4660
  %91 = bitcast i8* %77 to i32*, !dbg !4716
  %92 = load i32, i32* %91, align 4, !dbg !4716
  %93 = sext i32 %92 to i64, !dbg !4716
  store i64 %93, i64* %20, align 8, !dbg !4719
  br label %115, !dbg !4720

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4721
  %96 = add i32 %95, 7, !dbg !4721
  %97 = and i32 %96, -8, !dbg !4721
  %98 = inttoptr i32 %97 to i8*, !dbg !4721
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4721
  call void @llvm.dbg.value(metadata i8* %99, metadata !4534, metadata !DIExpression()), !dbg !4660
  %100 = inttoptr i32 %97 to i64*, !dbg !4721
  %101 = load i64, i64* %100, align 8, !dbg !4721
  store i64 %101, i64* %20, align 8, !dbg !4722
  br label %115, !dbg !4723

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4724
  %104 = add i32 %103, 7, !dbg !4724
  %105 = and i32 %104, -8, !dbg !4724
  %106 = inttoptr i32 %105 to i8*, !dbg !4724
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4724
  call void @llvm.dbg.value(metadata i8* %107, metadata !4534, metadata !DIExpression()), !dbg !4660
  %108 = inttoptr i32 %105 to i64*, !dbg !4724
  %109 = load i64, i64* %108, align 8, !dbg !4724
  store i64 %109, i64* %20, align 8, !dbg !4725
  br label %115, !dbg !4726

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %111, metadata !4534, metadata !DIExpression()), !dbg !4660
  %112 = bitcast i8* %77 to i32*, !dbg !4727
  %113 = load i32, i32* %112, align 4, !dbg !4727
  %114 = sext i32 %113 to i64, !dbg !4728
  store i64 %114, i64* %20, align 8, !dbg !4729
  br label %115, !dbg !4730

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4731
  call void @llvm.dbg.value(metadata i8* %117, metadata !4534, metadata !DIExpression()), !dbg !4660
  %118 = trunc i24 %79 to i4, !dbg !4732
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4732

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4733
  %121 = ashr exact i64 %120, 56, !dbg !4733
  store i64 %121, i64* %20, align 8, !dbg !4736
  br label %177, !dbg !4737

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4738
  %124 = ashr exact i64 %123, 48, !dbg !4738
  store i64 %124, i64* %20, align 8, !dbg !4741
  br label %177, !dbg !4742

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4743

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4746
  call void @llvm.dbg.value(metadata i8* %127, metadata !4534, metadata !DIExpression()), !dbg !4660
  %128 = bitcast i8* %77 to i32*, !dbg !4746
  %129 = load i32, i32* %128, align 4, !dbg !4746
  %130 = zext i32 %129 to i64, !dbg !4746
  store i64 %130, i64* %20, align 8, !dbg !4748
  br label %157, !dbg !4749

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4750
  call void @llvm.dbg.value(metadata i8* %132, metadata !4534, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8* %132, metadata !4534, metadata !DIExpression()), !dbg !4660
  %133 = bitcast i8* %77 to i32*, !dbg !4750
  %134 = load i32, i32* %133, align 4, !dbg !4750
  %135 = zext i32 %134 to i64, !dbg !4750
  store i64 %135, i64* %20, align 8, !dbg !4750
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4752
  %138 = add i32 %137, 7, !dbg !4752
  %139 = and i32 %138, -8, !dbg !4752
  %140 = inttoptr i32 %139 to i8*, !dbg !4752
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %141, metadata !4534, metadata !DIExpression()), !dbg !4660
  %142 = inttoptr i32 %139 to i64*, !dbg !4752
  %143 = load i64, i64* %142, align 8, !dbg !4752
  store i64 %143, i64* %20, align 8, !dbg !4753
  br label %157, !dbg !4754

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4755
  %146 = add i32 %145, 7, !dbg !4755
  %147 = and i32 %146, -8, !dbg !4755
  %148 = inttoptr i32 %147 to i8*, !dbg !4755
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4755
  call void @llvm.dbg.value(metadata i8* %149, metadata !4534, metadata !DIExpression()), !dbg !4660
  %150 = inttoptr i32 %147 to i64*, !dbg !4755
  %151 = load i64, i64* %150, align 8, !dbg !4755
  store i64 %151, i64* %20, align 8, !dbg !4756
  br label %157, !dbg !4757

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %153, metadata !4534, metadata !DIExpression()), !dbg !4660
  %154 = bitcast i8* %77 to i32*, !dbg !4758
  %155 = load i32, i32* %154, align 4, !dbg !4758
  %156 = zext i32 %155 to i64, !dbg !4759
  store i64 %156, i64* %20, align 8, !dbg !4760
  br label %157, !dbg !4761

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4762
  call void @llvm.dbg.value(metadata i8* %159, metadata !4534, metadata !DIExpression()), !dbg !4660
  %160 = trunc i24 %79 to i4, !dbg !4763
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4763

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4764
  store i64 %162, i64* %20, align 8, !dbg !4767
  br label %177, !dbg !4768

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4769
  store i64 %164, i64* %20, align 8, !dbg !4772
  br label %177, !dbg !4773

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4774
  %167 = add i32 %166, 7, !dbg !4774
  %168 = and i32 %167, -8, !dbg !4774
  %169 = inttoptr i32 %168 to i8*, !dbg !4774
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4774
  call void @llvm.dbg.value(metadata i8* %170, metadata !4534, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8* %170, metadata !4534, metadata !DIExpression()), !dbg !4660
  %171 = inttoptr i32 %168 to double*, !dbg !4774
  %172 = load double, double* %171, align 8, !dbg !4774
  store double %172, double* %19, align 8, !dbg !4774
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %174, metadata !4534, metadata !DIExpression()), !dbg !4660
  %175 = bitcast i8* %77 to i8**, !dbg !4778
  %176 = load i8*, i8** %175, align 4, !dbg !4778
  store i8* %176, i8** %18, align 8, !dbg !4781
  br label %177, !dbg !4782

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4674
  call void @llvm.dbg.value(metadata i8* %178, metadata !4534, metadata !DIExpression()), !dbg !4660
  %179 = and i24 %75, 3, !dbg !4783
  %180 = icmp eq i24 %179, 0, !dbg !4783
  br i1 %180, label %185, label %181, !dbg !4783

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %182, metadata !4609, metadata !DIExpression()), !dbg !4785
  %183 = icmp slt i32 %182, 0, !dbg !4786
  %184 = add i32 %182, %29, !dbg !4784
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4788
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4789

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %188, metadata !4613, metadata !DIExpression()), !dbg !4791
  %189 = icmp slt i32 %188, 0, !dbg !4792
  %190 = add i32 %29, 1, !dbg !4790
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4794
  call void @llvm.dbg.value(metadata i8* %192, metadata !4601, metadata !DIExpression()), !dbg !4674
  %193 = icmp sgt i32 %76, -1, !dbg !4795
  br i1 %193, label %194, label %196, !dbg !4797

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %195, metadata !4616, metadata !DIExpression()), !dbg !4800
  br label %241, !dbg !4801

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %197, metadata !4616, metadata !DIExpression()), !dbg !4800
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4601, metadata !DIExpression()), !dbg !4674
  %199 = load i64, i64* %20, align 8, !dbg !4804
  %200 = trunc i64 %199 to i8, !dbg !4805
  store i8 %200, i8* %10, align 1, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %23, metadata !4602, metadata !DIExpression()), !dbg !4674
  br label %245, !dbg !4807

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4808
  %203 = icmp eq i24 %202, 0, !dbg !4808
  %204 = trunc i24 %75 to i8, !dbg !4810
  %205 = shl i8 %204, 1, !dbg !4810
  %206 = and i8 %205, 32, !dbg !4810
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4810
  call void @llvm.dbg.value(metadata i8 %207, metadata !4603, metadata !DIExpression()), !dbg !4674
  %208 = load i64, i64* %20, align 8, !dbg !4811
  call void @llvm.dbg.value(metadata i64 %208, metadata !4541, metadata !DIExpression()), !dbg !4660
  %209 = icmp slt i64 %208, 0, !dbg !4812
  br i1 %209, label %210, label %212, !dbg !4814

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4603, metadata !DIExpression()), !dbg !4674
  %211 = sub nsw i64 0, %208, !dbg !4815
  store i64 %211, i64* %20, align 8, !dbg !4817
  br label %212, !dbg !4818

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4674
  call void @llvm.dbg.value(metadata i8 %213, metadata !4603, metadata !DIExpression()), !dbg !4674
  %214 = load i64, i64* %20, align 8, !dbg !4819
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4820
  call void @llvm.dbg.value(metadata i8* %215, metadata !4601, metadata !DIExpression()), !dbg !4674
  br label %216, !dbg !4821

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4822
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4823
  call void @llvm.dbg.value(metadata i8* %218, metadata !4601, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8 %217, metadata !4603, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.label(metadata !4659), !dbg !4824
  %219 = icmp sgt i32 %76, -1, !dbg !4825
  br i1 %219, label %222, label %220, !dbg !4826

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4827
  br label %245, !dbg !4826

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4829
  %224 = sub i32 %22, %223, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %224, metadata !4618, metadata !DIExpression()), !dbg !4830
  %225 = load i24, i24* %15, align 8, !dbg !4831
  %226 = and i24 %225, -65, !dbg !4831
  store i24 %226, i24* %15, align 8, !dbg !4831
  %227 = icmp ugt i32 %76, %224, !dbg !4832
  br i1 %227, label %228, label %245, !dbg !4834

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4835
  store i32 %229, i32* %16, align 4, !dbg !4837
  br label %245, !dbg !4838

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4839
  %232 = icmp eq i8* %231, null, !dbg !4841
  br i1 %232, label %245, label %233, !dbg !4842

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4843
  %235 = zext i32 %234 to i64, !dbg !4843
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4845
  call void @llvm.dbg.value(metadata i8* %236, metadata !4601, metadata !DIExpression()), !dbg !4674
  %237 = load i24, i24* %15, align 8, !dbg !4846
  %238 = or i24 %237, 1048576, !dbg !4846
  store i24 %238, i24* %15, align 8, !dbg !4846
  store i8 120, i8* %21, align 1, !dbg !4847
  br label %216, !dbg !4848

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4849
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4852
  br label %363, !dbg !4853

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4854
  call void @llvm.dbg.value(metadata i32 %242, metadata !4616, metadata !DIExpression()), !dbg !4800
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4855
  call void @llvm.dbg.value(metadata i32 -1, metadata !4600, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %29, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8* %192, metadata !4601, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %243, metadata !4602, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8 0, metadata !4603, metadata !DIExpression()), !dbg !4674
  %244 = icmp eq i8* %192, null, !dbg !4856
  br i1 %244, label %363, label %245, !dbg !4858, !llvm.loop !4670

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4827
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata i32 0, metadata !4622, metadata !DIExpression()), !dbg !4674
  %250 = zext i8 %249 to i32, !dbg !4859
  %251 = icmp eq i8 %249, 0, !dbg !4861
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4674
  %252 = icmp sgt i32 %58, 0, !dbg !4862
  br i1 %252, label %253, label %302, !dbg !4863

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4827
  %255 = icmp eq i24 %254, 0, !dbg !4827
  %256 = ptrtoint i8* %248 to i32, !dbg !4864
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  %257 = ptrtoint i8* %247 to i32, !dbg !4864
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  %258 = xor i1 %251, true, !dbg !4865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  %259 = sext i1 %258 to i32, !dbg !4865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  %260 = lshr i24 %246, 19, !dbg !4866
  %261 = and i24 %260, 1, !dbg !4866
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4866
  %263 = zext i24 %262 to i32, !dbg !4866
  %264 = add i32 %257, %259, !dbg !4866
  %265 = add i32 %256, %263, !dbg !4866
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  %266 = and i24 %246, 4194304, !dbg !4867
  %267 = icmp eq i24 %266, 0, !dbg !4867
  %268 = load i32, i32* %16, align 4, !dbg !4869
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4674
  %269 = load i32, i32* %17, align 8, !dbg !4870
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4870
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4674
  %271 = add i32 %264, %58, !dbg !4870
  %272 = add i32 %265, %268, !dbg !4870
  %273 = add i32 %272, %270, !dbg !4871
  %274 = sub i32 %271, %273, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %274, metadata !4599, metadata !DIExpression()), !dbg !4674
  %275 = and i24 %246, 4, !dbg !4872
  %276 = icmp eq i24 %275, 0, !dbg !4872
  br i1 %276, label %277, label %302, !dbg !4873

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4623, metadata !DIExpression()), !dbg !4874
  %278 = and i24 %246, 64, !dbg !4875
  %279 = icmp eq i24 %278, 0, !dbg !4875
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4876
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4876
  %282 = select i1 %279, i32 32, i32 48, !dbg !4876
  br i1 %280, label %287, label %283, !dbg !4876

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !4877
  call void @llvm.dbg.value(metadata i32 %284, metadata !4628, metadata !DIExpression()), !dbg !4878
  %285 = icmp slt i32 %284, 0, !dbg !4879
  %286 = add i32 %29, 1, !dbg !4877
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4674
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %290, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8 undef, metadata !4623, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i8 %288, metadata !4603, metadata !DIExpression()), !dbg !4674
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4881
  %292 = add i32 %291, -1, !dbg !4881
  br label %293, !dbg !4881

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4882
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %295, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %294, metadata !4599, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %294, metadata !4599, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4674
  %296 = icmp sgt i32 %294, 0, !dbg !4883
  br i1 %296, label %297, label %302, !dbg !4881

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %298, metadata !4599, metadata !DIExpression()), !dbg !4674
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %299, metadata !4634, metadata !DIExpression()), !dbg !4886
  %300 = icmp slt i32 %299, 0, !dbg !4887
  %301 = add i32 %295, 1, !dbg !4885
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %300, label %361, label %293, !llvm.loop !4889

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4674
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4674
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %305, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %304, metadata !4599, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8 %303, metadata !4603, metadata !DIExpression()), !dbg !4674
  %306 = icmp eq i8 %303, 0, !dbg !4891
  br i1 %306, label %312, label %307, !dbg !4892

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4893
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !4894
  call void @llvm.dbg.value(metadata i32 %309, metadata !4637, metadata !DIExpression()), !dbg !4895
  %310 = icmp slt i32 %309, 0, !dbg !4896
  %311 = add i32 %305, 1, !dbg !4894
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %313, metadata !4540, metadata !DIExpression()), !dbg !4660
  %314 = lshr i24 %246, 20, !dbg !4898
  %315 = lshr i24 %246, 19, !dbg !4899
  %316 = or i24 %314, %315, !dbg !4900
  %317 = and i24 %316, 1, !dbg !4900
  %318 = icmp eq i24 %317, 0, !dbg !4900
  br i1 %318, label %323, label %319, !dbg !4901

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %320, metadata !4641, metadata !DIExpression()), !dbg !4903
  %321 = icmp slt i32 %320, 0, !dbg !4904
  %322 = add i32 %313, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %324, metadata !4540, metadata !DIExpression()), !dbg !4660
  %325 = and i24 %246, 1048576, !dbg !4906
  %326 = icmp eq i24 %325, 0, !dbg !4906
  br i1 %326, label %333, label %327, !dbg !4907

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4908
  %329 = zext i8 %328 to i32, !dbg !4908
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %330, metadata !4647, metadata !DIExpression()), !dbg !4909
  %331 = icmp slt i32 %330, 0, !dbg !4910
  %332 = add i32 %324, 1, !dbg !4908
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %334, metadata !4540, metadata !DIExpression()), !dbg !4660
  %335 = load i32, i32* %16, align 4, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %335, metadata !4622, metadata !DIExpression()), !dbg !4674
  br label %336, !dbg !4913

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4914
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %338, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %337, metadata !4622, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4674
  %339 = icmp sgt i32 %337, 0, !dbg !4915
  br i1 %339, label %340, label %345, !dbg !4913

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %341, metadata !4622, metadata !DIExpression()), !dbg !4674
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %342, metadata !4651, metadata !DIExpression()), !dbg !4918
  %343 = icmp slt i32 %342, 0, !dbg !4919
  %344 = add i32 %338, 1, !dbg !4917
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %343, label %361, label %336, !llvm.loop !4921

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %346, metadata !4654, metadata !DIExpression()), !dbg !4924
  %347 = icmp slt i32 %346, 0, !dbg !4925
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %349, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %304, metadata !4599, metadata !DIExpression()), !dbg !4674
  %350 = icmp sgt i32 %304, 0, !dbg !4927
  br i1 %350, label %351, label %363, !dbg !4928

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4928
  %353 = add i32 %352, %338, !dbg !4928
  br label %354, !dbg !4928

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %355, metadata !4599, metadata !DIExpression()), !dbg !4674
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !4929
  call void @llvm.dbg.value(metadata i32 %356, metadata !4656, metadata !DIExpression()), !dbg !4930
  %357 = icmp slt i32 %356, 0, !dbg !4931
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4933
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4660
  call void @llvm.dbg.value(metadata i32 %359, metadata !4599, metadata !DIExpression()), !dbg !4674
  %360 = icmp sgt i32 %355, 1, !dbg !4927
  br i1 %360, label %354, label %363, !dbg !4928, !llvm.loop !4934

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4671
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4664
  call void @llvm.dbg.value(metadata i32 %364, metadata !4540, metadata !DIExpression()), !dbg !4660
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4671
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4660
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4936
  ret i32 %366, !dbg !4936
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4937 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4941, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata i8* %1, metadata !4942, metadata !DIExpression()), !dbg !4943
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4944
  store i24 0, i24* %3, align 4, !dbg !4944
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4944
  store i8 0, i8* %4, align 1, !dbg !4944
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4944
  store i32 0, i32* %5, align 4, !dbg !4944
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4944
  store i32 0, i32* %6, align 4, !dbg !4944
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %7, metadata !4942, metadata !DIExpression()), !dbg !4943
  %8 = load i8, i8* %7, align 1, !dbg !4946
  %9 = icmp eq i8 %8, 37, !dbg !4948
  br i1 %9, label %10, label %12, !dbg !4949

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4950
  call void @llvm.dbg.value(metadata i8* %11, metadata !4942, metadata !DIExpression()), !dbg !4943
  store i8 37, i8* %4, align 1, !dbg !4952
  br label %18, !dbg !4953

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4954
  call void @llvm.dbg.value(metadata i8* %13, metadata !4942, metadata !DIExpression()), !dbg !4943
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %14, metadata !4942, metadata !DIExpression()), !dbg !4943
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4956
  call void @llvm.dbg.value(metadata i8* %15, metadata !4942, metadata !DIExpression()), !dbg !4943
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4957
  call void @llvm.dbg.value(metadata i8* %16, metadata !4942, metadata !DIExpression()), !dbg !4943
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %17, metadata !4942, metadata !DIExpression()), !dbg !4943
  br label %18, !dbg !4959

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4943
  ret i8* %19, !dbg !4960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4961 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4965, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %1, metadata !4966, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %2, metadata !4967, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %3, metadata !4968, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 0, metadata !4969, metadata !DIExpression()), !dbg !4972
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4973

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4974
  call void @llvm.dbg.value(metadata i32 %9, metadata !4969, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %8, metadata !4967, metadata !DIExpression()), !dbg !4972
  %10 = icmp ult i8* %8, %3, !dbg !4975
  br i1 %10, label %11, label %13, !dbg !4976

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4977
  br label %17, !dbg !4976

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4978

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4979
  %16 = icmp eq i8 %15, 0, !dbg !4978
  br i1 %16, label %24, label %17, !dbg !4973

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4977
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4980
  call void @llvm.dbg.value(metadata i8* %19, metadata !4967, metadata !DIExpression()), !dbg !4972
  %20 = zext i8 %18 to i32, !dbg !4981
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %21, metadata !4970, metadata !DIExpression()), !dbg !4983
  %22 = icmp slt i32 %21, 0, !dbg !4984
  %23 = add i32 %9, 1, !dbg !4986
  call void @llvm.dbg.value(metadata i32 undef, metadata !4969, metadata !DIExpression()), !dbg !4972
  br i1 %22, label %24, label %7, !llvm.loop !4987

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4972
  ret i32 %25, !dbg !4989
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4990 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4994, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4995, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %2, metadata !4996, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %3, metadata !4997, metadata !DIExpression()), !dbg !5004
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5005
  %6 = load i8, i8* %5, align 1, !dbg !5005
  %7 = zext i8 %6 to i32, !dbg !5006
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !5007
  %9 = icmp eq i32 %8, 0, !dbg !5007
  call void @llvm.dbg.value(metadata i1 %9, metadata !4998, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5004
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %10, metadata !4999, metadata !DIExpression()), !dbg !5004
  %11 = ptrtoint i8* %3 to i32, !dbg !5009
  %12 = ptrtoint i8* %2 to i32, !dbg !5009
  %13 = sub i32 %11, %12, !dbg !5009
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5010
  call void @llvm.dbg.value(metadata i8* %14, metadata !5001, metadata !DIExpression()), !dbg !5004
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5011

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5004
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4994, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %18, metadata !5001, metadata !DIExpression()), !dbg !5004
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5012
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %25, metadata !5002, metadata !DIExpression()), !dbg !5014
  %26 = icmp ult i32 %25, 10, !dbg !5015
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5016
  %28 = add i32 %27, %25, !dbg !5014
  %29 = trunc i32 %28 to i8, !dbg !5016
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %30, metadata !5001, metadata !DIExpression()), !dbg !5004
  store i8 %29, i8* %30, align 1, !dbg !5018
  call void @llvm.dbg.value(metadata i64 %22, metadata !4994, metadata !DIExpression()), !dbg !5004
  %31 = icmp uge i64 %19, %15, !dbg !5019
  %32 = icmp ugt i8* %30, %2, !dbg !5020
  %33 = and i1 %31, %32, !dbg !5020
  br i1 %33, label %17, label %34, !dbg !5021, !llvm.loop !5022

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5024
  %36 = load i24, i24* %35, align 4, !dbg !5024
  %37 = and i24 %36, 32, !dbg !5024
  %38 = icmp eq i24 %37, 0, !dbg !5024
  br i1 %38, label %44, label %39, !dbg !5026

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5027

40:                                               ; preds = %39
  br label %41, !dbg !5029

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5033
  store i24 %43, i24* %35, align 4, !dbg !5033
  br label %44, !dbg !5034

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5035 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5041, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i8* %1, metadata !5042, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i32 %2, metadata !5043, metadata !DIExpression()), !dbg !5044
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5045
  %5 = load i24, i24* %4, align 4, !dbg !5045
  %6 = lshr i24 %5, 11, !dbg !5045
  %7 = and i24 %6, 15, !dbg !5045
  %8 = zext i24 %7 to i32, !dbg !5045
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5046

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5047
  store i32 %2, i32* %10, align 4, !dbg !5049
  br label %28, !dbg !5050

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5051
  store i8 %12, i8* %1, align 1, !dbg !5052
  br label %28, !dbg !5053

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5054
  %15 = bitcast i8* %1 to i16*, !dbg !5055
  store i16 %14, i16* %15, align 2, !dbg !5056
  br label %28, !dbg !5057

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5058
  store i32 %2, i32* %17, align 4, !dbg !5059
  br label %28, !dbg !5060

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5061
  %20 = bitcast i8* %1 to i64*, !dbg !5062
  store i64 %19, i64* %20, align 8, !dbg !5063
  br label %28, !dbg !5064

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5065
  %23 = bitcast i8* %1 to i64*, !dbg !5066
  store i64 %22, i64* %23, align 8, !dbg !5067
  br label %28, !dbg !5068

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5069
  store i32 %2, i32* %25, align 4, !dbg !5070
  br label %28, !dbg !5071

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5072
  store i32 %2, i32* %27, align 4, !dbg !5073
  br label %28, !dbg !5074

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5075
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !5076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5079, metadata !DIExpression()), !dbg !5080
  %2 = add i32 %0, -65, !dbg !5081
  %3 = icmp ult i32 %2, 26, !dbg !5082
  %4 = zext i1 %3 to i32, !dbg !5082
  ret i32 %4, !dbg !5083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !5084 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5088, metadata !DIExpression()), !dbg !5089
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5090

2:                                                ; preds = %1
  br label %4, !dbg !5091

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5093

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5094
  ret i32 %5, !dbg !5095
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5096 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5098, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %1, metadata !5099, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8 1, metadata !5100, metadata !DIExpression()), !dbg !5101
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5102

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5100, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %5, metadata !5099, metadata !DIExpression()), !dbg !5101
  %6 = load i8, i8* %5, align 1, !dbg !5103
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5105

7:                                                ; preds = %4
  br label %11, !dbg !5106

8:                                                ; preds = %4
  br label %11, !dbg !5108

9:                                                ; preds = %4
  br label %11, !dbg !5109

10:                                               ; preds = %4
  br label %11, !dbg !5110

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5111
  %14 = or i24 %13, %12, !dbg !5111
  store i24 %14, i24* %3, align 4, !dbg !5111
  call void @llvm.dbg.value(metadata i8 poison, metadata !5100, metadata !DIExpression()), !dbg !5101
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5099, metadata !DIExpression()), !dbg !5101
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5100, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %15, metadata !5099, metadata !DIExpression()), !dbg !5101
  %17 = load i24, i24* %3, align 4, !dbg !5112
  %18 = and i24 %17, 68, !dbg !5114
  %19 = icmp eq i24 %18, 68, !dbg !5114
  br i1 %19, label %20, label %22, !dbg !5114

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5115
  store i24 %21, i24* %3, align 4, !dbg !5115
  br label %22, !dbg !5117

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5118
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5119 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5121, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %1, metadata !5122, metadata !DIExpression()), !dbg !5125
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5126
  %5 = load i24, i24* %4, align 4, !dbg !5127
  %6 = or i24 %5, 128, !dbg !5127
  store i24 %6, i24* %4, align 4, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %1, metadata !5122, metadata !DIExpression()), !dbg !5125
  %7 = load i8, i8* %1, align 1, !dbg !5128
  %8 = icmp eq i8 %7, 42, !dbg !5130
  br i1 %8, label %9, label %12, !dbg !5131

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5132
  store i24 %10, i24* %4, align 4, !dbg !5132
  call void @llvm.dbg.value(metadata i8* %1, metadata !5122, metadata !DIExpression()), !dbg !5125
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5134
  call void @llvm.dbg.value(metadata i8* %11, metadata !5122, metadata !DIExpression()), !dbg !5125
  store i8* %11, i8** %3, align 4, !dbg !5134
  br label %29, !dbg !5135

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5123, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8** %3, metadata !5122, metadata !DIExpression(DW_OP_deref)), !dbg !5125
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5136
  call void @llvm.dbg.value(metadata i32 %13, metadata !5124, metadata !DIExpression()), !dbg !5125
  %14 = load i8*, i8** %3, align 4, !dbg !5137
  call void @llvm.dbg.value(metadata i8* %14, metadata !5122, metadata !DIExpression()), !dbg !5125
  %15 = icmp eq i8* %14, %1, !dbg !5139
  br i1 %15, label %29, label %16, !dbg !5140

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5141
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5143
  store i32 %13, i32* %18, align 4, !dbg !5144
  %19 = lshr i32 %13, 31, !dbg !5145
  %20 = lshr i24 %17, 1, !dbg !5146
  %21 = and i24 %20, 1, !dbg !5146
  %22 = zext i24 %21 to i32, !dbg !5146
  %23 = or i32 %19, %22, !dbg !5146
  %24 = trunc i32 %23 to i24, !dbg !5146
  %25 = shl nuw nsw i24 %24, 1, !dbg !5146
  %26 = and i24 %17, -131, !dbg !5146
  %27 = or i24 %26, 128, !dbg !5146
  %28 = or i24 %25, %27, !dbg !5146
  store i24 %28, i24* %4, align 4, !dbg !5146
  br label %29, !dbg !5147

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5125
  ret i8* %30, !dbg !5148
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5149 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5151, metadata !DIExpression()), !dbg !5154
  call void @llvm.dbg.value(metadata i8* %1, metadata !5152, metadata !DIExpression()), !dbg !5154
  %4 = load i8, i8* %1, align 1, !dbg !5155
  %5 = icmp eq i8 %4, 46, !dbg !5156
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5157
  %7 = load i24, i24* %6, align 4, !dbg !5158
  %8 = select i1 %5, i24 512, i24 0, !dbg !5158
  %9 = and i24 %7, -513, !dbg !5158
  %10 = or i24 %9, %8, !dbg !5158
  store i24 %10, i24* %6, align 4, !dbg !5158
  br i1 %5, label %11, label %32, !dbg !5159

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5152, metadata !DIExpression()), !dbg !5154
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5160
  call void @llvm.dbg.value(metadata i8* %12, metadata !5152, metadata !DIExpression()), !dbg !5154
  store i8* %12, i8** %3, align 4, !dbg !5160
  %13 = load i8, i8* %12, align 1, !dbg !5161
  %14 = icmp eq i8 %13, 42, !dbg !5163
  br i1 %14, label %15, label %18, !dbg !5164

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5165
  store i24 %16, i24* %6, align 4, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %12, metadata !5152, metadata !DIExpression()), !dbg !5154
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5167
  call void @llvm.dbg.value(metadata i8* %17, metadata !5152, metadata !DIExpression()), !dbg !5154
  store i8* %17, i8** %3, align 4, !dbg !5167
  br label %32, !dbg !5168

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5152, metadata !DIExpression(DW_OP_deref)), !dbg !5154
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %19, metadata !5153, metadata !DIExpression()), !dbg !5154
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5170
  store i32 %19, i32* %20, align 4, !dbg !5171
  %21 = lshr i32 %19, 31, !dbg !5172
  %22 = load i24, i24* %6, align 4, !dbg !5173
  %23 = lshr i24 %22, 1, !dbg !5173
  %24 = and i24 %23, 1, !dbg !5173
  %25 = zext i24 %24 to i32, !dbg !5173
  %26 = or i32 %21, %25, !dbg !5173
  %27 = trunc i32 %26 to i24, !dbg !5173
  %28 = shl nuw nsw i24 %27, 1, !dbg !5173
  %29 = and i24 %22, -3, !dbg !5173
  %30 = or i24 %28, %29, !dbg !5173
  store i24 %30, i24* %6, align 4, !dbg !5173
  %31 = load i8*, i8** %3, align 4, !dbg !5174
  call void @llvm.dbg.value(metadata i8* %31, metadata !5152, metadata !DIExpression()), !dbg !5154
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5154
  ret i8* %33, !dbg !5175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5176 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5178, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i8* %1, metadata !5179, metadata !DIExpression()), !dbg !5180
  %3 = load i8, i8* %1, align 1, !dbg !5181
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5182

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5183
  call void @llvm.dbg.value(metadata i8* %5, metadata !5179, metadata !DIExpression()), !dbg !5180
  %6 = load i8, i8* %5, align 1, !dbg !5186
  %7 = icmp eq i8 %6, 104, !dbg !5187
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5188
  %9 = load i24, i24* %8, align 4, !dbg !5188
  %10 = and i24 %9, -30721, !dbg !5188
  br i1 %7, label %11, label %14, !dbg !5189

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5190
  store i24 %12, i24* %8, align 4, !dbg !5190
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5192
  call void @llvm.dbg.value(metadata i8* %13, metadata !5179, metadata !DIExpression()), !dbg !5180
  br label %56, !dbg !5193

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5194
  store i24 %15, i24* %8, align 4, !dbg !5194
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %17, metadata !5179, metadata !DIExpression()), !dbg !5180
  %18 = load i8, i8* %17, align 1, !dbg !5198
  %19 = icmp eq i8 %18, 108, !dbg !5199
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5200
  %21 = load i24, i24* %20, align 4, !dbg !5200
  %22 = and i24 %21, -30721, !dbg !5200
  br i1 %19, label %23, label %26, !dbg !5201

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5202
  store i24 %24, i24* %20, align 4, !dbg !5202
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5204
  call void @llvm.dbg.value(metadata i8* %25, metadata !5179, metadata !DIExpression()), !dbg !5180
  br label %56, !dbg !5205

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5206
  store i24 %27, i24* %20, align 4, !dbg !5206
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5208
  %30 = load i24, i24* %29, align 4, !dbg !5209
  %31 = and i24 %30, -30721, !dbg !5209
  %32 = or i24 %31, 10240, !dbg !5209
  store i24 %32, i24* %29, align 4, !dbg !5209
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %33, metadata !5179, metadata !DIExpression()), !dbg !5180
  br label %56, !dbg !5211

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5212
  %36 = load i24, i24* %35, align 4, !dbg !5213
  %37 = and i24 %36, -30721, !dbg !5213
  %38 = or i24 %37, 12288, !dbg !5213
  store i24 %38, i24* %35, align 4, !dbg !5213
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %39, metadata !5179, metadata !DIExpression()), !dbg !5180
  br label %56, !dbg !5215

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5216
  %42 = load i24, i24* %41, align 4, !dbg !5217
  %43 = and i24 %42, -30721, !dbg !5217
  %44 = or i24 %43, 14336, !dbg !5217
  store i24 %44, i24* %41, align 4, !dbg !5217
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5218
  call void @llvm.dbg.value(metadata i8* %45, metadata !5179, metadata !DIExpression()), !dbg !5180
  br label %56, !dbg !5219

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5220
  %48 = load i24, i24* %47, align 4, !dbg !5221
  %49 = and i24 %48, -30723, !dbg !5221
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5222
  call void @llvm.dbg.value(metadata i8* %50, metadata !5179, metadata !DIExpression()), !dbg !5180
  %51 = or i24 %49, 16386, !dbg !5223
  store i24 %51, i24* %47, align 4, !dbg !5223
  br label %56, !dbg !5224

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5225
  %54 = load i24, i24* %53, align 4, !dbg !5226
  %55 = and i24 %54, -30721, !dbg !5226
  store i24 %55, i24* %53, align 4, !dbg !5226
  br label %56, !dbg !5227

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5179, metadata !DIExpression()), !dbg !5180
  ret i8* %57, !dbg !5228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5229 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5231, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %1, metadata !5232, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8 0, metadata !5233, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %1, metadata !5232, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5236
  %3 = load i8, i8* %1, align 1, !dbg !5237
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5238
  store i8 %3, i8* %4, align 1, !dbg !5239
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5240

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5241

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5242
  %9 = load i24, i24* %8, align 4, !dbg !5242
  %10 = and i24 %9, -458753, !dbg !5242
  %11 = or i24 %10, %7, !dbg !5242
  call void @llvm.dbg.label(metadata !5234), !dbg !5243
  %12 = and i24 %9, 30720, !dbg !5244
  %13 = icmp eq i24 %12, 16384, !dbg !5244
  %14 = zext i1 %13 to i24, !dbg !5246
  %15 = or i24 %11, %14, !dbg !5246
  %16 = icmp eq i8 %3, 99, !dbg !5247
  br i1 %16, label %17, label %43, !dbg !5249

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5250
  %19 = icmp ne i24 %18, 0, !dbg !5250
  call void @llvm.dbg.value(metadata i1 %19, metadata !5233, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5236
  br label %43, !dbg !5252

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5253
  %22 = load i24, i24* %21, align 4, !dbg !5254
  %23 = and i24 %22, -458753, !dbg !5254
  %24 = or i24 %23, 262144, !dbg !5254
  call void @llvm.dbg.value(metadata i8 1, metadata !5233, metadata !DIExpression()), !dbg !5236
  br label %43, !dbg !5255

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5258
  %27 = load i24, i24* %26, align 4, !dbg !5259
  %28 = and i24 %27, -458753, !dbg !5259
  %29 = or i24 %28, 196608, !dbg !5259
  %30 = and i24 %27, 30720, !dbg !5260
  %31 = icmp eq i24 %30, 16384, !dbg !5260
  br label %43, !dbg !5262

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5263
  %34 = load i24, i24* %33, align 4, !dbg !5264
  %35 = and i24 %34, -458753, !dbg !5264
  %36 = or i24 %35, 196608, !dbg !5264
  %37 = and i24 %34, 30720, !dbg !5265
  %38 = icmp ne i24 %37, 0, !dbg !5265
  br label %43, !dbg !5267

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5268
  %41 = load i24, i24* %40, align 4, !dbg !5269
  %42 = or i24 %41, 1, !dbg !5269
  br label %43, !dbg !5270

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5271
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5272
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5273
  call void @llvm.dbg.value(metadata i8* %48, metadata !5232, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8 poison, metadata !5233, metadata !DIExpression()), !dbg !5236
  %49 = lshr i24 %44, 1, !dbg !5271
  %50 = and i24 %49, 1, !dbg !5271
  %51 = zext i24 %50 to i32, !dbg !5271
  %52 = or i32 %51, %47, !dbg !5271
  %53 = trunc i32 %52 to i24, !dbg !5271
  %54 = shl nuw nsw i24 %53, 1, !dbg !5271
  %55 = and i24 %44, -3, !dbg !5271
  %56 = or i24 %54, %55, !dbg !5271
  store i24 %56, i24* %46, align 4, !dbg !5271
  ret i8* %48, !dbg !5274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5275 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5279, metadata !DIExpression()), !dbg !5282
  %2 = load i8*, i8** %0, align 4, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %2, metadata !5280, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata i32 0, metadata !5281, metadata !DIExpression()), !dbg !5282
  %3 = load i8, i8* %2, align 1, !dbg !5284
  %4 = zext i8 %3 to i32, !dbg !5285
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !5286
  %6 = icmp eq i32 %5, 0, !dbg !5287
  br i1 %6, label %19, label %7, !dbg !5287

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5281, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata i8* %10, metadata !5280, metadata !DIExpression()), !dbg !5282
  %11 = mul i32 %9, 10, !dbg !5288
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5290
  call void @llvm.dbg.value(metadata i8* %12, metadata !5280, metadata !DIExpression()), !dbg !5282
  %13 = add i32 %11, -48, !dbg !5291
  %14 = add i32 %13, %8, !dbg !5292
  call void @llvm.dbg.value(metadata i32 %14, metadata !5281, metadata !DIExpression()), !dbg !5282
  %15 = load i8, i8* %12, align 1, !dbg !5284
  %16 = zext i8 %15 to i32, !dbg !5285
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !5286
  %18 = icmp eq i32 %17, 0, !dbg !5287
  br i1 %18, label %19, label %7, !dbg !5287, !llvm.loop !5293

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5282
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5282
  store i8* %20, i8** %0, align 4, !dbg !5295
  ret i32 %21, !dbg !5296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !5297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5299, metadata !DIExpression()), !dbg !5300
  %2 = add i32 %0, -48, !dbg !5301
  %3 = icmp ult i32 %2, 10, !dbg !5302
  %4 = zext i1 %3 to i32, !dbg !5302
  ret i32 %4, !dbg !5303
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5304 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5309, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.value(metadata i32 %1, metadata !5310, metadata !DIExpression()), !dbg !5311
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5312, !srcloc !5314
  ret void, !dbg !5315
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5316 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5318, metadata !DIExpression()), !dbg !5326
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5327
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5327
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5319, metadata !DIExpression()), !dbg !5328
  call void @llvm.va_start(i8* nonnull %3), !dbg !5329
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5330
  %5 = load i32, i32* %4, align 4, !dbg !5330
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5330
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5330
  call void @llvm.va_end(i8* nonnull %3), !dbg !5331
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5332
  ret void, !dbg !5332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5333 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,11\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5981, !srcloc !5982
  ret void, !dbg !5983
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5986, metadata !DIExpression()), !dbg !5988
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !5989
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !5990
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5991, !srcloc !6000
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %3, metadata !5997, metadata !DIExpression()) #23, !dbg !6001
  call void @llvm.dbg.value(metadata i32 undef, metadata !5998, metadata !DIExpression()) #23, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %3, metadata !5987, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i32 %3, metadata !6002, metadata !DIExpression()) #23, !dbg !6007
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6009, !srcloc !6010
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6011
  ret i32 0, !dbg !6012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6013 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6015
  %2 = or i32 %1, 512, !dbg !6015
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6015
  ret void, !dbg !6016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6017 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6018
  %2 = or i32 %1, 1024, !dbg !6018
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6018
  ret void, !dbg !6019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !6020 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6022, metadata !DIExpression()), !dbg !6023
  ret i32 0, !dbg !6024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6025 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6028, metadata !DIExpression()), !dbg !6036
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6037
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6037
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6029, metadata !DIExpression()), !dbg !6038
  call void @llvm.va_start(i8* nonnull %3), !dbg !6039
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6040
  %5 = load i32, i32* %4, align 4, !dbg !6040
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6040
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6040
  call void @llvm.va_end(i8* nonnull %3), !dbg !6041
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6042
  ret void, !dbg !6042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6043 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6048, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.value(metadata i8* %0, metadata !6047, metadata !DIExpression()), !dbg !6049
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !6050
  ret void, !dbg !6051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6056, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i8* %1, metadata !6057, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %2, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i8* %1, metadata !6059, metadata !DIExpression()), !dbg !6060
  %4 = icmp eq i32 %2, 0, !dbg !6061
  br i1 %4, label %14, label %5, !dbg !6062

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !6060
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6062

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %10, metadata !6058, metadata !DIExpression()), !dbg !6060
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #24, !dbg !6063
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !6065
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6066
  call void @llvm.dbg.value(metadata i32 %11, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i8* %12, metadata !6059, metadata !DIExpression()), !dbg !6060
  br i1 %13, label %14, label %8, !dbg !6066, !llvm.loop !6067

14:                                               ; preds = %8, %3
  ret void, !dbg !6069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !6070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6075, metadata !DIExpression()), !dbg !6076
  %2 = add i32 %0, -1, !dbg !6077
  %3 = icmp ult i32 %2, 4, !dbg !6077
  %4 = shl i32 %2, 3, !dbg !6077
  %5 = lshr i32 1145657157, %4, !dbg !6077
  %6 = trunc i32 %5 to i8, !dbg !6077
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6077
  ret i8 %7, !dbg !6078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6083, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata i32 %1, metadata !6084, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata i32 0, metadata !6085, metadata !DIExpression()), !dbg !6095
  br label %4, !dbg !6096

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #24, !dbg !6097
  call void @llvm.dbg.value(metadata i32 0, metadata !6087, metadata !DIExpression()), !dbg !6098
  br label %16, !dbg !6099

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6085, metadata !DIExpression()), !dbg !6095
  %6 = icmp ult i32 %5, %1, !dbg !6100
  br i1 %6, label %7, label %11, !dbg !6104

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6105
  %9 = load i8, i8* %8, align 1, !dbg !6105
  %10 = zext i8 %9 to i32, !dbg !6107
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #24, !dbg !6108
  br label %12, !dbg !6109

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #24, !dbg !6110
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6112
  call void @llvm.dbg.value(metadata i32 %13, metadata !6085, metadata !DIExpression()), !dbg !6095
  %14 = icmp eq i32 %13, 8, !dbg !6113
  br i1 %14, label %3, label %4, !dbg !6096, !llvm.loop !6114

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #24, !dbg !6116
  ret void, !dbg !6117

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6087, metadata !DIExpression()), !dbg !6098
  %18 = icmp ult i32 %17, %1, !dbg !6118
  br i1 %18, label %19, label %26, !dbg !6119

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6120
  %21 = load i8, i8* %20, align 1, !dbg !6120
  call void @llvm.dbg.value(metadata i8 %21, metadata !6089, metadata !DIExpression()), !dbg !6121
  %22 = zext i8 %21 to i32, !dbg !6122
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !6123
  %24 = icmp eq i32 %23, 0, !dbg !6124
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6123
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #24, !dbg !6125
  br label %27, !dbg !6126

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #24, !dbg !6127
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6129
  call void @llvm.dbg.value(metadata i32 %28, metadata !6087, metadata !DIExpression()), !dbg !6098
  %29 = icmp eq i32 %28, 8, !dbg !6130
  br i1 %29, label %15, label %16, !dbg !6099, !llvm.loop !6131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !6133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6135, metadata !DIExpression()), !dbg !6136
  %2 = add i32 %0, -32, !dbg !6137
  %3 = icmp ult i32 %2, 95, !dbg !6137
  %4 = zext i1 %3 to i32, !dbg !6137
  ret i32 %4, !dbg !6138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6188, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6189, metadata !DIExpression()), !dbg !6190
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6191
  br i1 %3, label %5, label %4, !dbg !6193

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !6194
  br label %5, !dbg !6196

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !6197
  ret void, !dbg !6198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6199 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6203, metadata !DIExpression()), !dbg !6204
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6205
  %3 = load i32, i32* %2, align 4, !dbg !6205
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6205
  %5 = load i32, i32* %4, align 4, !dbg !6205
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6205
  %7 = load i32, i32* %6, align 4, !dbg !6205
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !6205
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6210
  %9 = load i32, i32* %8, align 4, !dbg !6210
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6210
  %11 = load i32, i32* %10, align 4, !dbg !6210
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6210
  %13 = load i32, i32* %12, align 4, !dbg !6210
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !6210
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6215
  %15 = load i32, i32* %14, align 4, !dbg !6215
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !6215
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6220
  %17 = load i32, i32* %16, align 4, !dbg !6220
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !6220
  ret void, !dbg !6225
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6226 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6243, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6244, metadata !DIExpression()), !dbg !6246
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6247
  %4 = load i32, i32* %3, align 4, !dbg !6247
  call void @llvm.dbg.value(metadata i32 %4, metadata !6245, metadata !DIExpression()), !dbg !6246
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !6248
  ret void, !dbg !6249
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !6250 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6254, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.value(metadata i8* %0, metadata !6255, metadata !DIExpression()), !dbg !6257
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6258
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6258
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6256, metadata !DIExpression()), !dbg !6259
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6259
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6260
  %5 = bitcast i8* %4 to i32*, !dbg !6260
  %6 = load i32, i32* %5, align 4, !dbg !6260
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6261
  store i32 %6, i32* %7, align 4, !dbg !6262
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !6263
  unreachable, !dbg !6264
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6268, metadata !DIExpression()), !dbg !6269
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !6270
  ret void, !dbg !6271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6276, metadata !DIExpression()), !dbg !6277
  %2 = icmp sgt i32 %0, -1, !dbg !6278
  br i1 %2, label %3, label %8, !dbg !6280

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6281, !srcloc !6283
  %4 = and i32 %0, 31, !dbg !6284
  %5 = shl nuw i32 1, %4, !dbg !6285
  %6 = lshr i32 %0, 5, !dbg !6286
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6287
  store volatile i32 %5, i32* %7, align 4, !dbg !6288
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6289, !srcloc !6290
  br label %8, !dbg !6291

8:                                                ; preds = %3, %1
  ret void, !dbg !6292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6295, metadata !DIExpression()), !dbg !6296
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !6297
  ret void, !dbg !6298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6301, metadata !DIExpression()), !dbg !6302
  %2 = icmp sgt i32 %0, -1, !dbg !6303
  br i1 %2, label %3, label %8, !dbg !6305

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6306
  %5 = shl nuw i32 1, %4, !dbg !6308
  %6 = lshr i32 %0, 5, !dbg !6309
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6310
  store volatile i32 %5, i32* %7, align 4, !dbg !6311
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6312, !srcloc !6316
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6317, !srcloc !6320
  br label %8, !dbg !6321

8:                                                ; preds = %3, %1
  ret void, !dbg !6322
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !6323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6327, metadata !DIExpression()), !dbg !6328
  %2 = lshr i32 %0, 5, !dbg !6329
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6330
  %4 = load volatile i32, i32* %3, align 4, !dbg !6330
  %5 = and i32 %0, 31, !dbg !6331
  %6 = shl nuw i32 1, %5, !dbg !6331
  %7 = and i32 %4, %6, !dbg !6332
  ret i32 %7, !dbg !6333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6338, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i32 %1, metadata !6339, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i32 %2, metadata !6340, metadata !DIExpression()), !dbg !6341
  %4 = add i32 %1, 1, !dbg !6342
  call void @llvm.dbg.value(metadata i32 %4, metadata !6339, metadata !DIExpression()), !dbg !6341
  %5 = icmp ult i32 %4, 16, !dbg !6345
  br i1 %5, label %7, label %6, !dbg !6348

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6349
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !6349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6349
  unreachable, !dbg !6349

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !6351
  ret void, !dbg !6352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6357, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata i32 %1, metadata !6358, metadata !DIExpression()), !dbg !6359
  %3 = trunc i32 %1 to i8, !dbg !6360
  %4 = shl i8 %3, 4, !dbg !6360
  %5 = and i32 %0, 15, !dbg !6362
  %6 = add nsw i32 %5, -4, !dbg !6362
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6362
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6362
  %9 = icmp slt i32 %0, 0, !dbg !6362
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6362
  store volatile i8 %4, i8* %10, align 1, !dbg !6360
  ret void, !dbg !6363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6366, metadata !DIExpression()), !dbg !6367
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !6368
  ret void, !dbg !6369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6370 {
  tail call void @z_SysNmiOnReset() #24, !dbg !6372
  tail call void @z_arm_int_exit() #24, !dbg !6373
  ret void, !dbg !6374
}

; Function Attrs: optsize
declare !dbg !6375 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6376 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !6378 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !6380
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !6381
  tail call void @z_bss_zero() #24, !dbg !6382
  tail call void @z_data_copy() #24, !dbg !6383
  tail call void @z_arm_interrupt_init() #24, !dbg !6384
  tail call void @z_cstart() #27, !dbg !6385
  unreachable, !dbg !6385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6386 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6387
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6388, !srcloc !6391
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6392, !srcloc !6395
  ret void, !dbg !6396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6397 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6398
  %2 = and i32 %1, -15728641, !dbg !6398
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6398
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6399, !srcloc !6404
  call void @llvm.dbg.value(metadata i32 %3, metadata !6402, metadata !DIExpression()) #23, !dbg !6405
  %4 = and i32 %3, -5, !dbg !6406
  call void @llvm.dbg.value(metadata i32 %4, metadata !6407, metadata !DIExpression()) #23, !dbg !6412
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6416, !srcloc !6395
  ret void, !dbg !6418
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6422, metadata !DIExpression()), !dbg !6423
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6424
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6425
  store i32 %0, i32* %3, align 4, !dbg !6426
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6427
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6428
  store i32 %4, i32* %5, align 4, !dbg !6429
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6430
  %7 = or i32 %6, 268435456, !dbg !6430
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6430
  call void @llvm.dbg.value(metadata i32 0, metadata !6431, metadata !DIExpression()) #23, !dbg !6434
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6436, !srcloc !6437
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6438
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6439
  %10 = load i32, i32* %9, align 4, !dbg !6439
  ret i32 %10, !dbg !6440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !6441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6554, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6555, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata i8* %2, metadata !6556, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6557, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata i8* %4, metadata !6558, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata i8* %5, metadata !6559, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata i8* %6, metadata !6560, metadata !DIExpression()), !dbg !6562
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6563
  call void @llvm.dbg.value(metadata i8* %8, metadata !6561, metadata !DIExpression()), !dbg !6562
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6564
  %10 = bitcast i8* %9 to i32*, !dbg !6564
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6565
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6566
  %12 = bitcast i8* %8 to i32*, !dbg !6567
  store i32 %11, i32* %12, align 4, !dbg !6568
  %13 = ptrtoint i8* %4 to i32, !dbg !6569
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6570
  %15 = bitcast i8* %14 to i32*, !dbg !6570
  store i32 %13, i32* %15, align 4, !dbg !6571
  %16 = ptrtoint i8* %5 to i32, !dbg !6572
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6573
  %18 = bitcast i8* %17 to i32*, !dbg !6573
  store i32 %16, i32* %18, align 4, !dbg !6574
  %19 = ptrtoint i8* %6 to i32, !dbg !6575
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6576
  %21 = bitcast i8* %20 to i32*, !dbg !6576
  store i32 %19, i32* %21, align 4, !dbg !6577
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6578
  %23 = bitcast i8* %22 to i32*, !dbg !6578
  store i32 16777216, i32* %23, align 4, !dbg !6579
  %24 = ptrtoint i8* %8 to i32, !dbg !6580
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6581
  store i32 %24, i32* %25, align 8, !dbg !6582
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6583
  store i32 0, i32* %26, align 4, !dbg !6584
  ret void, !dbg !6585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6591, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.value(metadata i32 %1, metadata !6592, metadata !DIExpression()), !dbg !6597
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6598
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6593, metadata !DIExpression()), !dbg !6597
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6599
  br i1 %4, label %19, label %5, !dbg !6601

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6596, metadata !DIExpression()), !dbg !6597
  %6 = icmp eq i32 %0, -22, !dbg !6602
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6602
  %8 = load i32, i32* %7, align 4, !dbg !6602
  br i1 %6, label %16, label %9, !dbg !6604

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6602
  %11 = icmp ule i32 %10, %0, !dbg !6602
  %12 = icmp ugt i32 %8, %0, !dbg !6602
  %13 = and i1 %12, %11, !dbg !6602
  %14 = icmp ugt i32 %8, %1, !dbg !6602
  %15 = and i1 %14, %13, !dbg !6602
  br i1 %15, label %18, label %19, !dbg !6602

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6602
  br i1 %17, label %18, label %19, !dbg !6604

18:                                               ; preds = %9, %16
  br label %19, !dbg !6605

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6597
  ret i32 %20, !dbg !6607
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !6608 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6612, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i8* %1, metadata !6613, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6614, metadata !DIExpression()), !dbg !6615
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6616
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !6617
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6618, !srcloc !6619
  unreachable, !dbg !6620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6621 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6639, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata i32 %1, metadata !6640, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata i32 %2, metadata !6641, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6642, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6649
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6650
  call void @llvm.dbg.value(metadata i32 %8, metadata !6644, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6651
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6651
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6652
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6652
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6648, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata i32 0, metadata !6654, metadata !DIExpression()) #23, !dbg !6657
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6659, !srcloc !6660
  call void @llvm.dbg.value(metadata i8* %6, metadata !6646, metadata !DIExpression(DW_OP_deref)), !dbg !6649
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !6661
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6647, metadata !DIExpression()), !dbg !6649
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6662
  br i1 %11, label %12, label %13, !dbg !6665

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6666
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #24, !dbg !6666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6666
  unreachable, !dbg !6666

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6668
  call void @llvm.dbg.value(metadata i32 %14, metadata !6644, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata i8* %5, metadata !6645, metadata !DIExpression(DW_OP_deref)), !dbg !6649
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !6669
  call void @llvm.dbg.value(metadata i32 %15, metadata !6643, metadata !DIExpression()), !dbg !6649
  %16 = load i8, i8* %5, align 1, !dbg !6670, !range !6672
  call void @llvm.dbg.value(metadata i8 %16, metadata !6645, metadata !DIExpression()), !dbg !6649
  %17 = icmp eq i8 %16, 0, !dbg !6670
  br i1 %17, label %18, label %35, !dbg !6673

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6674
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !6675
  %21 = load i8, i8* %6, align 1, !dbg !6676, !range !6672
  call void @llvm.dbg.value(metadata i8 %21, metadata !6646, metadata !DIExpression()), !dbg !6649
  %22 = icmp eq i8 %21, 0, !dbg !6676
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6678
  %24 = load i32, i32* %23, align 4, !dbg !6678
  br i1 %22, label %30, label %25, !dbg !6679

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6680
  %27 = icmp eq i32 %26, 0, !dbg !6683
  br i1 %27, label %28, label %34, !dbg !6684

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6685
  br label %32, !dbg !6687

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6688
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6678
  br label %34, !dbg !6690

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !6690
  br label %35, !dbg !6691

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6691
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6691
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6691
  ret void, !dbg !6691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6697, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32 %1, metadata !6698, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32 %2, metadata !6699, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i8* %3, metadata !6700, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i8 0, metadata !6701, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6702, metadata !DIExpression()), !dbg !6703
  store i8 0, i8* %3, align 1, !dbg !6704
  %5 = icmp ugt i32 %2, -16777217, !dbg !6705
  br i1 %5, label %6, label %17, !dbg !6707

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6708
  %8 = icmp eq i32 %7, 8, !dbg !6708
  br i1 %8, label %9, label %10, !dbg !6708

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #24, !dbg !6710
  br label %17, !dbg !6716

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6717
  %12 = icmp eq i32 %11, 0, !dbg !6717
  br i1 %12, label %13, label %14, !dbg !6718

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6702, metadata !DIExpression()), !dbg !6703
  store i8 1, i8* %3, align 1, !dbg !6721
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6703
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6702, metadata !DIExpression()), !dbg !6703
  br label %17, !dbg !6724

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6703
  ret %struct.__esf* %18, !dbg !6725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6726 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6730, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i32 %1, metadata !6731, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i8* %2, metadata !6732, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i32 0, metadata !6733, metadata !DIExpression()), !dbg !6734
  store i8 0, i8* %2, align 1, !dbg !6735
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6736

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6737
  call void @llvm.dbg.value(metadata i32 %5, metadata !6733, metadata !DIExpression()), !dbg !6734
  br label %12, !dbg !6739

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6740
  call void @llvm.dbg.value(metadata i32 %7, metadata !6733, metadata !DIExpression()), !dbg !6734
  br label %12, !dbg !6741

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6742
  call void @llvm.dbg.value(metadata i32 0, metadata !6733, metadata !DIExpression()), !dbg !6734
  br label %12, !dbg !6743

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6744
  call void @llvm.dbg.value(metadata i32 0, metadata !6733, metadata !DIExpression()), !dbg !6734
  br label %12, !dbg !6745

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6746
  br label %12, !dbg !6747

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !6748
  br label %12, !dbg !6749

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6734
  call void @llvm.dbg.value(metadata i32 %13, metadata !6733, metadata !DIExpression()), !dbg !6734
  ret i32 %13, !dbg !6750
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6751 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6755, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i8* %1, metadata !6756, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 0, metadata !6757, metadata !DIExpression()), !dbg !6758
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #24, !dbg !6759
  store i8 0, i8* %1, align 1, !dbg !6764
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6765
  %4 = and i32 %3, 2, !dbg !6767
  %5 = icmp eq i32 %4, 0, !dbg !6768
  br i1 %5, label %7, label %6, !dbg !6769

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #24, !dbg !6770
  br label %38, !dbg !6776

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6777
  %9 = icmp sgt i32 %8, -1, !dbg !6779
  br i1 %9, label %11, label %10, !dbg !6780

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #24, !dbg !6781
  br label %38, !dbg !6787

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6788
  %13 = and i32 %12, 1073741824, !dbg !6790
  %14 = icmp eq i32 %13, 0, !dbg !6791
  br i1 %14, label %37, label %15, !dbg !6792

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #24, !dbg !6793
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6799
  br i1 %16, label %17, label %21, !dbg !6801

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6802
  %19 = load i32, i32* %18, align 4, !dbg !6802
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !6802
  %20 = load i32, i32* %18, align 4, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %20, metadata !6757, metadata !DIExpression()), !dbg !6758
  br label %38, !dbg !6809

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6810
  %23 = and i32 %22, 255, !dbg !6812
  %24 = icmp eq i32 %23, 0, !dbg !6813
  br i1 %24, label %27, label %25, !dbg !6814

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6815
  call void @llvm.dbg.value(metadata i32 %26, metadata !6757, metadata !DIExpression()), !dbg !6758
  br label %38, !dbg !6817

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6818
  %29 = and i32 %28, 65280, !dbg !6820
  %30 = icmp eq i32 %29, 0, !dbg !6821
  br i1 %30, label %32, label %31, !dbg !6822

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6757, metadata !DIExpression()), !dbg !6758
  br label %38, !dbg !6825

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6826
  %34 = icmp ult i32 %33, 65536, !dbg !6828
  br i1 %34, label %36, label %35, !dbg !6829

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #25, !dbg !6830
  call void @llvm.dbg.value(metadata i32 0, metadata !6757, metadata !DIExpression()), !dbg !6758
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #24, !dbg !6832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6832
  unreachable, !dbg !6832

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6837
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #24, !dbg !6837
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6837
  unreachable, !dbg !6837

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6758
  call void @llvm.dbg.value(metadata i32 %39, metadata !6757, metadata !DIExpression()), !dbg !6758
  ret i32 %39, !dbg !6842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6843 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6845, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.value(metadata i32 %1, metadata !6846, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.value(metadata i8* %2, metadata !6847, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.value(metadata i32 0, metadata !6848, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.value(metadata i32 -22, metadata !6849, metadata !DIExpression()), !dbg !6858
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #24, !dbg !6859
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6864
  %5 = and i32 %4, 16, !dbg !6866
  %6 = icmp eq i32 %5, 0, !dbg !6867
  br i1 %6, label %8, label %7, !dbg !6868

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !6869
  br label %8, !dbg !6875

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6876
  %10 = and i32 %9, 8, !dbg !6878
  %11 = icmp eq i32 %10, 0, !dbg !6879
  br i1 %11, label %13, label %12, !dbg !6880

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !6881
  br label %13, !dbg !6887

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6888
  %15 = and i32 %14, 2, !dbg !6889
  %16 = icmp eq i32 %15, 0, !dbg !6890
  br i1 %16, label %27, label %17, !dbg !6891

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !6892
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6897
  call void @llvm.dbg.value(metadata i32 %18, metadata !6850, metadata !DIExpression()), !dbg !6898
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6899
  %20 = and i32 %19, 128, !dbg !6901
  %21 = icmp eq i32 %20, 0, !dbg !6902
  br i1 %21, label %27, label %22, !dbg !6903

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6849, metadata !DIExpression()), !dbg !6858
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #24, !dbg !6904
  %23 = icmp eq i32 %1, 0, !dbg !6910
  br i1 %23, label %27, label %24, !dbg !6912

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6913
  %26 = and i32 %25, -129, !dbg !6913
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6913
  br label %27, !dbg !6915

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6858
  call void @llvm.dbg.value(metadata i32 %28, metadata !6849, metadata !DIExpression()), !dbg !6858
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6916
  %30 = and i32 %29, 1, !dbg !6918
  %31 = icmp eq i32 %30, 0, !dbg !6919
  br i1 %31, label %33, label %32, !dbg !6920

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !6921
  br label %33, !dbg !6927

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6928
  %35 = and i32 %34, 32, !dbg !6930
  %36 = icmp eq i32 %35, 0, !dbg !6931
  br i1 %36, label %38, label %37, !dbg !6932

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !6933
  br label %38, !dbg !6939

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6940
  %40 = and i32 %39, 16, !dbg !6941
  %41 = icmp eq i32 %40, 0, !dbg !6941
  br i1 %41, label %42, label %46, !dbg !6942

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6943
  %44 = and i32 %43, 2, !dbg !6944
  %45 = icmp eq i32 %44, 0, !dbg !6944
  br i1 %45, label %60, label %46, !dbg !6945

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6946
  %48 = and i32 %47, 2048, !dbg !6947
  %49 = icmp eq i32 %48, 0, !dbg !6947
  br i1 %49, label %60, label %50, !dbg !6948

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6949
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #24, !dbg !6950
  call void @llvm.dbg.value(metadata i32 %52, metadata !6853, metadata !DIExpression()), !dbg !6951
  %53 = icmp eq i32 %52, 0, !dbg !6952
  br i1 %53, label %55, label %54, !dbg !6954

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6955, metadata !DIExpression()) #23, !dbg !6958
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6961, !srcloc !6962
  call void @llvm.dbg.value(metadata i32 2, metadata !6848, metadata !DIExpression()), !dbg !6858
  br label %60, !dbg !6963

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6964
  %57 = and i32 %56, 16, !dbg !6964
  %58 = icmp eq i32 %57, 0, !dbg !6964
  br i1 %58, label %60, label %59, !dbg !6968

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6969
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !6969
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6969
  unreachable, !dbg !6969

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6858
  call void @llvm.dbg.value(metadata i32 %61, metadata !6848, metadata !DIExpression()), !dbg !6858
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6971
  %63 = and i32 %62, 32, !dbg !6973
  %64 = icmp eq i32 %63, 0, !dbg !6974
  br i1 %64, label %68, label %65, !dbg !6975

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6976
  %67 = and i32 %66, -8193, !dbg !6976
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6976
  br label %68, !dbg !6978

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6979
  %70 = or i32 %69, 255, !dbg !6979
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6979
  store i8 0, i8* %2, align 1, !dbg !6980
  ret i32 %61, !dbg !6981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6982 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6986, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.value(metadata i32 %0, metadata !6987, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.value(metadata i8* %1, metadata !6988, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.value(metadata i32 0, metadata !6989, metadata !DIExpression()), !dbg !6993
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #24, !dbg !6994
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %4 = and i32 %3, 4096, !dbg !7001
  %5 = icmp eq i32 %4, 0, !dbg !7001
  br i1 %5, label %7, label %6, !dbg !7002

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !7003
  br label %7, !dbg !7009

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  %9 = and i32 %8, 2048, !dbg !7012
  %10 = icmp eq i32 %9, 0, !dbg !7012
  br i1 %10, label %12, label %11, !dbg !7013

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !7014
  br label %12, !dbg !7020

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7021
  %14 = and i32 %13, 512, !dbg !7022
  %15 = icmp eq i32 %14, 0, !dbg !7022
  br i1 %15, label %26, label %16, !dbg !7023

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !7024
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7029
  call void @llvm.dbg.value(metadata i32 %17, metadata !6990, metadata !DIExpression()), !dbg !7030
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7031
  %19 = and i32 %18, 32768, !dbg !7033
  %20 = icmp eq i32 %19, 0, !dbg !7034
  br i1 %20, label %26, label %21, !dbg !7035

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7036
  %22 = icmp eq i32 %0, 0, !dbg !7042
  br i1 %22, label %26, label %23, !dbg !7044

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7045
  %25 = and i32 %24, -32769, !dbg !7045
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7045
  br label %26, !dbg !7047

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7048
  %28 = and i32 %27, 1024, !dbg !7050
  %29 = icmp eq i32 %28, 0, !dbg !7050
  br i1 %29, label %31, label %30, !dbg !7051

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !7052
  br label %31, !dbg !7058

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7059
  %33 = and i32 %32, 256, !dbg !7061
  %34 = icmp eq i32 %33, 0, !dbg !7062
  br i1 %34, label %35, label %39, !dbg !7063

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7064
  %37 = and i32 %36, 8192, !dbg !7066
  %38 = icmp eq i32 %37, 0, !dbg !7066
  br i1 %38, label %41, label %39, !dbg !7067

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !7068
  br label %41, !dbg !7069

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7069
  %43 = or i32 %42, 65280, !dbg !7069
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7069
  store i8 0, i8* %1, align 1, !dbg !7070
  ret void, !dbg !7071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7072 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7078, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.value(metadata i32 0, metadata !7079, metadata !DIExpression()), !dbg !7080
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !7081
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7086
  %2 = and i32 %1, 33554432, !dbg !7088
  %3 = icmp eq i32 %2, 0, !dbg !7089
  br i1 %3, label %5, label %4, !dbg !7090

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #24, !dbg !7091
  br label %5, !dbg !7097

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7098
  %7 = and i32 %6, 16777216, !dbg !7100
  %8 = icmp eq i32 %7, 0, !dbg !7101
  br i1 %8, label %10, label %9, !dbg !7102

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !7103
  br label %10, !dbg !7109

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7110
  %12 = and i32 %11, 524288, !dbg !7112
  %13 = icmp eq i32 %12, 0, !dbg !7113
  br i1 %13, label %15, label %14, !dbg !7114

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !7115
  br label %15, !dbg !7121

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7122
  %17 = and i32 %16, 262144, !dbg !7124
  %18 = icmp eq i32 %17, 0, !dbg !7125
  br i1 %18, label %20, label %19, !dbg !7126

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !7127
  br label %20, !dbg !7133

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7134
  %22 = and i32 %21, 131072, !dbg !7136
  %23 = icmp eq i32 %22, 0, !dbg !7137
  br i1 %23, label %25, label %24, !dbg !7138

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #24, !dbg !7139
  br label %25, !dbg !7145

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7146
  %27 = and i32 %26, 65536, !dbg !7148
  %28 = icmp eq i32 %27, 0, !dbg !7149
  br i1 %28, label %30, label %29, !dbg !7150

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !7151
  br label %30, !dbg !7157

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7158
  %32 = or i32 %31, -65536, !dbg !7158
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7158
  ret void, !dbg !7159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7160 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7164, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i8* %0, metadata !7165, metadata !DIExpression()), !dbg !7166
  store i8 0, i8* %0, align 1, !dbg !7167
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !7168
  ret void, !dbg !7173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7174 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7178, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i32 %0, metadata !7179, metadata !DIExpression()), !dbg !7180
  %2 = icmp slt i32 %0, 16, !dbg !7181
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7181
  %4 = add nsw i32 %0, -16, !dbg !7181
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !7181
  ret void, !dbg !7186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7187 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7191, metadata !DIExpression()), !dbg !7194
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7195
  %3 = load i32, i32* %2, align 4, !dbg !7195
  %4 = inttoptr i32 %3 to i16*, !dbg !7196
  call void @llvm.dbg.value(metadata i16* %4, metadata !7192, metadata !DIExpression()), !dbg !7194
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7197
  %6 = or i32 %5, 256, !dbg !7197
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7197
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7198, !srcloc !7201
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7202, !srcloc !7205
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7206
  %8 = load i16, i16* %7, align 2, !dbg !7207
  call void @llvm.dbg.value(metadata i16 %8, metadata !7193, metadata !DIExpression()), !dbg !7194
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7208
  %10 = and i32 %9, -257, !dbg !7208
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7208
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7209, !srcloc !7201
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7211, !srcloc !7205
  %11 = icmp eq i16 %8, -8446, !dbg !7213
  ret i1 %11, !dbg !7215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7216 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7217
  %2 = or i32 %1, 16, !dbg !7217
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7217
  ret void, !dbg !7218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7219 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7222, metadata !DIExpression()), !dbg !7223
  br label %1, !dbg !7224

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7222, metadata !DIExpression()), !dbg !7223
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #25, !dbg !7226
  %3 = add nuw nsw i32 %2, 1, !dbg !7229
  call void @llvm.dbg.value(metadata i32 %3, metadata !7222, metadata !DIExpression()), !dbg !7223
  %4 = icmp eq i32 %3, 82, !dbg !7230
  br i1 %4, label %5, label %1, !dbg !7224, !llvm.loop !7231

5:                                                ; preds = %1
  ret void, !dbg !7233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7236, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.value(metadata i32 1, metadata !7237, metadata !DIExpression()), !dbg !7238
  %2 = and i32 %0, 15, !dbg !7239
  %3 = add nsw i32 %2, -4, !dbg !7239
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7239
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7239
  %6 = icmp slt i32 %0, 0, !dbg !7239
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7239
  store volatile i8 16, i8* %7, align 1, !dbg !7240
  ret void, !dbg !7242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7352, metadata !DIExpression()), !dbg !7353
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7354
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7356
  br i1 %3, label %4, label %12, !dbg !7357

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7358, !srcloc !7370
  call void @llvm.dbg.value(metadata i32 %5, metadata !7361, metadata !DIExpression()) #23, !dbg !7371
  %6 = icmp eq i32 %5, 0, !dbg !7372
  br i1 %6, label %12, label %7, !dbg !7373

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7374
  %9 = or i32 %8, 268435456, !dbg !7374
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7374
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7376
  %11 = and i32 %10, -32769, !dbg !7376
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7376
  br label %12, !dbg !7377

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7380 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !7381
  ret void, !dbg !7382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !499, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 64, metadata !502, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 undef, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7383
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7384
  %3 = load i32, i32* %2, align 4, !dbg !7384
  call void @llvm.dbg.value(metadata i32 %3, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7383
  %4 = add i32 %3, -64, !dbg !7386
  call void @llvm.dbg.value(metadata i32 %4, metadata !501, metadata !DIExpression()), !dbg !7383
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7387
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7388
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7389
  call void @llvm.dbg.value(metadata i8 1, metadata !500, metadata !DIExpression()), !dbg !7383
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !7390
  ret void, !dbg !7391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7392 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7393
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7394, !srcloc !7397
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7398, !srcloc !7401
  ret void, !dbg !7402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7403 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7404, !srcloc !7407
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7408
  ret void, !dbg !7409
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7410 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7425, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i8 %1, metadata !7426, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32 %2, metadata !7427, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32 %3, metadata !7428, metadata !DIExpression()), !dbg !7429
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7430
  %6 = icmp eq i32 %5, -22, !dbg !7432
  br i1 %6, label %7, label %9, !dbg !7433

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7434
  %8 = zext i8 %1 to i32, !dbg !7434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #24, !dbg !7434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7434
  unreachable, !dbg !7434

9:                                                ; preds = %4
  ret void, !dbg !7439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7440 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7445, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8 %1, metadata !7446, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 undef, metadata !7447, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 undef, metadata !7448, metadata !DIExpression()), !dbg !7450
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7451
  call void @llvm.dbg.value(metadata i8 %3, metadata !7449, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7450
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !7452
  call void @llvm.dbg.value(metadata i32 %4, metadata !7449, metadata !DIExpression()), !dbg !7450
  %5 = trunc i32 %4 to i8, !dbg !7453
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7454
  ret i32 %4, !dbg !7455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7456 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7460, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i8 %1, metadata !7461, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i8 %2, metadata !7462, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i1 %3, metadata !7463, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7466
  %5 = zext i8 %2 to i32, !dbg !7467
  call void @llvm.dbg.value(metadata i32 %5, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i32 0, metadata !7464, metadata !DIExpression()), !dbg !7466
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i32 0, metadata !7464, metadata !DIExpression()), !dbg !7466
  %7 = icmp eq i8 %1, 0, !dbg !7468
  br i1 %7, label %30, label %8, !dbg !7471

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i32 %10, metadata !7464, metadata !DIExpression()), !dbg !7466
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7472
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7475
  %13 = load i32, i32* %12, align 4, !dbg !7475
  %14 = icmp eq i32 %13, 0, !dbg !7476
  br i1 %14, label %26, label %15, !dbg !7477

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7478

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7480
  %18 = icmp eq i32 %17, 0, !dbg !7480
  br i1 %18, label %19, label %20, !dbg !7481

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #24, !dbg !7482
  br label %30, !dbg !7488

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7489
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7490
  call void @llvm.dbg.value(metadata i32 %22, metadata !7465, metadata !DIExpression()), !dbg !7466
  %23 = icmp eq i32 %22, -22, !dbg !7491
  br i1 %23, label %30, label %24, !dbg !7493

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %25, metadata !7465, metadata !DIExpression()), !dbg !7466
  br label %26, !dbg !7495

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7466
  call void @llvm.dbg.value(metadata i32 %27, metadata !7465, metadata !DIExpression()), !dbg !7466
  %28 = add nuw nsw i32 %10, 1, !dbg !7496
  call void @llvm.dbg.value(metadata i32 %28, metadata !7464, metadata !DIExpression()), !dbg !7466
  %29 = icmp eq i32 %28, %6, !dbg !7468
  br i1 %29, label %30, label %8, !dbg !7471, !llvm.loop !7497

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7466
  ret i32 %31, !dbg !7499
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7500 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7504, metadata !DIExpression()), !dbg !7506
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7507
  %3 = load i32, i32* %2, align 4, !dbg !7507
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7508, !range !7509
  %5 = icmp ult i32 %4, 2, !dbg !7508
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7510
  br i1 %7, label %8, label %15, !dbg !7510

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7511
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7512
  %11 = load i32, i32* %10, align 4, !dbg !7512
  %12 = and i32 %11, %9, !dbg !7513
  %13 = icmp eq i32 %12, 0, !dbg !7514
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7505, metadata !DIExpression()), !dbg !7506
  ret i32 %16, !dbg !7515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7516 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7520, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7521, metadata !DIExpression()), !dbg !7523
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7524
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7524
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7522, metadata !DIExpression()), !dbg !7525
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7526
  %6 = load i32, i32* %5, align 4, !dbg !7526
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7527
  store i32 %6, i32* %7, align 4, !dbg !7528
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7529
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7530
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7531
  %11 = load i32, i32* %10, align 4, !dbg !7531
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #25, !dbg !7532
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !7533
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7534
  ret i32 %12, !dbg !7535
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7536 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7543, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7544, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i32 undef, metadata !7545, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i32 %2, metadata !7546, metadata !DIExpression()), !dbg !7547
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7548
  %5 = load i32, i32* %4, align 4, !dbg !7548
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !7549
  %7 = or i32 %6, %5, !dbg !7550
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7551
  store i32 %7, i32* %8, align 4, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7554 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7558, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7559, metadata !DIExpression()), !dbg !7560
  %3 = zext i8 %0 to i32, !dbg !7561
  %4 = icmp ugt i8 %0, 7, !dbg !7563
  br i1 %4, label %5, label %6, !dbg !7564

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #24, !dbg !7565
  br label %7, !dbg !7571

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !7572
  br label %7, !dbg !7573

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7560
  ret i32 %8, !dbg !7574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7579, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7580, metadata !DIExpression()), !dbg !7581
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !7582
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7583
  %4 = load i32, i32* %3, align 4, !dbg !7583
  %5 = and i32 %4, -32, !dbg !7584
  %6 = or i32 %5, %0, !dbg !7585
  %7 = or i32 %6, 16, !dbg !7585
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7586
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7587
  %9 = load i32, i32* %8, align 4, !dbg !7587
  %10 = or i32 %9, 1, !dbg !7588
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7589
  ret void, !dbg !7590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7594, metadata !DIExpression()), !dbg !7595
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7596
  ret void, !dbg !7597
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !7598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7602, metadata !DIExpression()), !dbg !7603
  %2 = icmp ult i32 %0, 33, !dbg !7604
  br i1 %2, label %11, label %3, !dbg !7606

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7607
  br i1 %4, label %11, label %5, !dbg !7609

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7610
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7611, !range !7509
  %8 = mul nsw i32 %7, -2, !dbg !7612
  %9 = add nsw i32 %8, 62, !dbg !7612
  %10 = and i32 %9, 62, !dbg !7613
  br label %11, !dbg !7614

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7603
  ret i32 %12, !dbg !7615
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7616 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7620, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i8 %1, metadata !7621, metadata !DIExpression()), !dbg !7622
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7623
  %4 = icmp eq i32 %3, -22, !dbg !7625
  br i1 %4, label %5, label %7, !dbg !7626

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7627
  %6 = zext i8 %1 to i32, !dbg !7627
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #24, !dbg !7627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7627
  unreachable, !dbg !7627

7:                                                ; preds = %2
  ret void, !dbg !7632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7633 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7637, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i8 %1, metadata !7638, metadata !DIExpression()), !dbg !7644
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7645
  call void @llvm.dbg.value(metadata i8 %3, metadata !7639, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7644
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !7646
  call void @llvm.dbg.value(metadata i32 %4, metadata !7639, metadata !DIExpression()), !dbg !7644
  %5 = icmp ne i32 %4, -22, !dbg !7647
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7648
  call void @llvm.dbg.value(metadata i32 %4, metadata !7640, metadata !DIExpression()), !dbg !7649
  br i1 %7, label %8, label %12, !dbg !7648

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7640, metadata !DIExpression()), !dbg !7649
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !7650
  %10 = add i32 %9, 1, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %10, metadata !7640, metadata !DIExpression()), !dbg !7649
  %11 = icmp eq i32 %10, 8, !dbg !7654
  br i1 %11, label %12, label %8, !dbg !7655, !llvm.loop !7656

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7662, metadata !DIExpression()), !dbg !7663
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7664
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7665
  ret void, !dbg !7666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7667 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7672
  %2 = icmp ugt i32 %1, 8, !dbg !7674
  br i1 %2, label %3, label %4, !dbg !7675

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7676
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #24, !dbg !7676
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7676
  unreachable, !dbg !7676

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !7681
  call void @llvm.dbg.value(metadata i32 0, metadata !7671, metadata !DIExpression()), !dbg !7682
  %5 = icmp eq i32 %1, 0, !dbg !7683
  br i1 %5, label %13, label %6, !dbg !7686

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7686

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7671, metadata !DIExpression()), !dbg !7682
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7687
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #25, !dbg !7689
  %11 = add nuw i32 %9, 1, !dbg !7690
  call void @llvm.dbg.value(metadata i32 %11, metadata !7671, metadata !DIExpression()), !dbg !7682
  %12 = icmp eq i32 %11, %1, !dbg !7683
  br i1 %12, label %13, label %8, !dbg !7686, !llvm.loop !7691

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7693
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7694
  tail call void @arm_core_mpu_enable() #25, !dbg !7695
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7696
  %16 = and i32 %15, 65280, !dbg !7696
  %17 = icmp eq i32 %16, 2048, !dbg !7696
  br i1 %17, label %19, label %18, !dbg !7699

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #24, !dbg !7700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7700
  unreachable, !dbg !7700

19:                                               ; preds = %13
  ret i32 0, !dbg !7702
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7703 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7710, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i8* %1, metadata !7711, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i8* %0, metadata !7712, metadata !DIExpression()), !dbg !7713
  %3 = load i8, i8* %1, align 1, !dbg !7714
  %4 = icmp eq i8 %3, 0, !dbg !7715
  br i1 %4, label %13, label %5, !dbg !7716

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7710, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i8* %8, metadata !7711, metadata !DIExpression()), !dbg !7713
  store i8 %6, i8* %7, align 1, !dbg !7717
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7719
  call void @llvm.dbg.value(metadata i8* %9, metadata !7710, metadata !DIExpression()), !dbg !7713
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7720
  call void @llvm.dbg.value(metadata i8* %10, metadata !7711, metadata !DIExpression()), !dbg !7713
  %11 = load i8, i8* %10, align 1, !dbg !7714
  %12 = icmp eq i8 %11, 0, !dbg !7715
  br i1 %12, label %13, label %5, !dbg !7716, !llvm.loop !7721

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7723
  ret i8* %0, !dbg !7724
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7729, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %1, metadata !7730, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 %2, metadata !7731, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %0, metadata !7732, metadata !DIExpression()), !dbg !7733
  %4 = icmp eq i32 %2, 0, !dbg !7734
  br i1 %4, label %22, label %5, !dbg !7735

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7729, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 %7, metadata !7731, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %8, metadata !7730, metadata !DIExpression()), !dbg !7733
  %9 = load i8, i8* %8, align 1, !dbg !7736
  %10 = icmp eq i8 %9, 0, !dbg !7737
  br i1 %10, label %16, label %11, !dbg !7738

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7739
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7741
  call void @llvm.dbg.value(metadata i8* %12, metadata !7730, metadata !DIExpression()), !dbg !7733
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7742
  call void @llvm.dbg.value(metadata i8* %13, metadata !7729, metadata !DIExpression()), !dbg !7733
  %14 = add i32 %7, -1, !dbg !7743
  call void @llvm.dbg.value(metadata i32 %14, metadata !7731, metadata !DIExpression()), !dbg !7733
  %15 = icmp eq i32 %14, 0, !dbg !7734
  br i1 %15, label %22, label %5, !dbg !7735, !llvm.loop !7744

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7729, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 %18, metadata !7731, metadata !DIExpression()), !dbg !7733
  store i8 0, i8* %17, align 1, !dbg !7746
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7748
  call void @llvm.dbg.value(metadata i8* %19, metadata !7729, metadata !DIExpression()), !dbg !7733
  %20 = add i32 %18, -1, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %20, metadata !7731, metadata !DIExpression()), !dbg !7733
  %21 = icmp eq i32 %20, 0, !dbg !7750
  br i1 %21, label %22, label %16, !dbg !7751, !llvm.loop !7752

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7754
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7755 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7759, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i32 %1, metadata !7760, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i32 %1, metadata !7761, metadata !DIExpression()), !dbg !7762
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7763

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7759, metadata !DIExpression()), !dbg !7762
  %6 = load i8, i8* %5, align 1, !dbg !7764
  %7 = icmp eq i8 %6, %3, !dbg !7765
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7766
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7767
  call void @llvm.dbg.value(metadata i8* %10, metadata !7759, metadata !DIExpression()), !dbg !7762
  br i1 %9, label %11, label %4, !dbg !7766, !llvm.loop !7769

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7771
  ret i8* %12, !dbg !7772
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7775, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %1, metadata !7776, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i8* null, metadata !7777, metadata !DIExpression()), !dbg !7778
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7779

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7778
  call void @llvm.dbg.value(metadata i8* %6, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i8* %5, metadata !7775, metadata !DIExpression()), !dbg !7778
  %7 = load i8, i8* %5, align 1, !dbg !7780
  %8 = icmp eq i8 %7, %3, !dbg !7783
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7784
  call void @llvm.dbg.value(metadata i8* %9, metadata !7777, metadata !DIExpression()), !dbg !7778
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7785
  call void @llvm.dbg.value(metadata i8* %10, metadata !7775, metadata !DIExpression()), !dbg !7778
  %11 = icmp eq i8 %7, 0, !dbg !7786
  br i1 %11, label %12, label %4, !dbg !7786, !llvm.loop !7787

12:                                               ; preds = %4
  ret i8* %9, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !7790 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i32 0, metadata !7795, metadata !DIExpression()), !dbg !7796
  %2 = load i8, i8* %0, align 1, !dbg !7797
  %3 = icmp eq i8 %2, 0, !dbg !7798
  br i1 %3, label %11, label %4, !dbg !7799

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i8* %6, metadata !7794, metadata !DIExpression()), !dbg !7796
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7800
  call void @llvm.dbg.value(metadata i8* %7, metadata !7794, metadata !DIExpression()), !dbg !7796
  %8 = add i32 %5, 1, !dbg !7802
  call void @llvm.dbg.value(metadata i32 %8, metadata !7795, metadata !DIExpression()), !dbg !7796
  %9 = load i8, i8* %7, align 1, !dbg !7797
  %10 = icmp eq i8 %9, 0, !dbg !7798
  br i1 %10, label %11, label %4, !dbg !7799, !llvm.loop !7803

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7796
  ret i32 %12, !dbg !7805
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7806 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7810, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 %1, metadata !7811, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 0, metadata !7812, metadata !DIExpression()), !dbg !7813
  %3 = load i8, i8* %0, align 1, !dbg !7814
  %4 = icmp ne i8 %3, 0, !dbg !7815
  %5 = icmp ne i32 %1, 0, !dbg !7816
  %6 = and i1 %4, %5, !dbg !7816
  br i1 %6, label %7, label %16, !dbg !7817

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7812, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i8* %9, metadata !7810, metadata !DIExpression()), !dbg !7813
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7818
  call void @llvm.dbg.value(metadata i8* %10, metadata !7810, metadata !DIExpression()), !dbg !7813
  %11 = add nuw i32 %8, 1, !dbg !7820
  call void @llvm.dbg.value(metadata i32 %11, metadata !7812, metadata !DIExpression()), !dbg !7813
  %12 = load i8, i8* %10, align 1, !dbg !7814
  %13 = icmp ne i8 %12, 0, !dbg !7815
  %14 = icmp ult i32 %11, %1, !dbg !7816
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7816
  br i1 %15, label %7, label %16, !dbg !7817, !llvm.loop !7821

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7813
  ret i32 %17, !dbg !7823
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !7824 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7828, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i8* %1, metadata !7829, metadata !DIExpression()), !dbg !7830
  %3 = load i8, i8* %0, align 1, !dbg !7831
  %4 = load i8, i8* %1, align 1, !dbg !7832
  %5 = icmp ne i8 %3, %4, !dbg !7833
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7834
  br i1 %7, label %18, label %8, !dbg !7834

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7829, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i8* %10, metadata !7828, metadata !DIExpression()), !dbg !7830
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7835
  call void @llvm.dbg.value(metadata i8* %11, metadata !7828, metadata !DIExpression()), !dbg !7830
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7837
  call void @llvm.dbg.value(metadata i8* %12, metadata !7829, metadata !DIExpression()), !dbg !7830
  %13 = load i8, i8* %11, align 1, !dbg !7831
  %14 = load i8, i8* %12, align 1, !dbg !7832
  %15 = icmp ne i8 %13, %14, !dbg !7833
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7834
  br i1 %17, label %18, label %8, !dbg !7834, !llvm.loop !7838

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7831
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7832
  %21 = zext i8 %19 to i32, !dbg !7841
  %22 = zext i8 %20 to i32, !dbg !7842
  %23 = sub nsw i32 %21, %22, !dbg !7843
  ret i32 %23, !dbg !7844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7849, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %1, metadata !7850, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %2, metadata !7851, metadata !DIExpression()), !dbg !7852
  %4 = icmp eq i32 %2, 0, !dbg !7853
  br i1 %4, label %23, label %5, !dbg !7853

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7851, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %7, metadata !7850, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %8, metadata !7849, metadata !DIExpression()), !dbg !7852
  %9 = load i8, i8* %8, align 1, !dbg !7854
  %10 = load i8, i8* %7, align 1, !dbg !7855
  %11 = icmp ne i8 %9, %10, !dbg !7856
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7857
  br i1 %13, label %19, label %14, !dbg !7857

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7858
  call void @llvm.dbg.value(metadata i8* %15, metadata !7849, metadata !DIExpression()), !dbg !7852
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7860
  call void @llvm.dbg.value(metadata i8* %16, metadata !7850, metadata !DIExpression()), !dbg !7852
  %17 = add i32 %6, -1, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %17, metadata !7851, metadata !DIExpression()), !dbg !7852
  %18 = icmp eq i32 %17, 0, !dbg !7853
  br i1 %18, label %23, label %5, !dbg !7853, !llvm.loop !7862

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7865
  %21 = zext i8 %10 to i32, !dbg !7866
  %22 = sub nsw i32 %20, %21, !dbg !7867
  br label %23, !dbg !7868

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7868
  ret i32 %24, !dbg !7869
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7870 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7874, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i8* %1, metadata !7875, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i8** %2, metadata !7876, metadata !DIExpression()), !dbg !7879
  %4 = icmp eq i8* %0, null, !dbg !7880
  br i1 %4, label %5, label %7, !dbg !7880

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7881
  br label %7, !dbg !7880

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7880
  call void @llvm.dbg.value(metadata i8* %8, metadata !7877, metadata !DIExpression()), !dbg !7879
  %9 = load i8, i8* %8, align 1, !dbg !7882
  %10 = icmp eq i8 %9, 0, !dbg !7882
  br i1 %10, label %33, label %11, !dbg !7883

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7877, metadata !DIExpression()), !dbg !7879
  %14 = zext i8 %12 to i32, !dbg !7882
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !7884
  %16 = icmp eq i8* %15, null, !dbg !7883
  br i1 %16, label %21, label %17, !dbg !7885

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7886
  call void @llvm.dbg.value(metadata i8* %18, metadata !7877, metadata !DIExpression()), !dbg !7879
  %19 = load i8, i8* %18, align 1, !dbg !7882
  %20 = icmp eq i8 %19, 0, !dbg !7882
  br i1 %20, label %33, label %11, !dbg !7883, !llvm.loop !7888

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7878, metadata !DIExpression()), !dbg !7879
  %24 = zext i8 %22 to i32, !dbg !7890
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !7891
  %26 = icmp eq i8* %25, null, !dbg !7892
  br i1 %26, label %27, label %31, !dbg !7893

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7894
  call void @llvm.dbg.value(metadata i8* %28, metadata !7878, metadata !DIExpression()), !dbg !7879
  %29 = load i8, i8* %28, align 1, !dbg !7890
  %30 = icmp eq i8 %29, 0, !dbg !7890
  br i1 %30, label %33, label %21, !dbg !7896, !llvm.loop !7897

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7899
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7902
  br label %33, !dbg !7903

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7879
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7879
  store i8* %34, i8** %2, align 4, !dbg !7879
  ret i8* %35, !dbg !7904
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7907, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.value(metadata i8* %1, metadata !7908, metadata !DIExpression()), !dbg !7909
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7910
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7911
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !7912
  ret i8* %0, !dbg !7913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7916, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %1, metadata !7917, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %2, metadata !7918, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %0, metadata !7919, metadata !DIExpression()), !dbg !7921
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %4, metadata !7920, metadata !DIExpression()), !dbg !7921
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7923
  call void @llvm.dbg.value(metadata i8* %5, metadata !7916, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %1, metadata !7917, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %2, metadata !7918, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %2, metadata !7918, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7921
  %6 = icmp eq i32 %2, 0, !dbg !7924
  br i1 %6, label %18, label %7, !dbg !7925

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7926
  call void @llvm.dbg.value(metadata i8* %9, metadata !7916, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %10, metadata !7917, metadata !DIExpression()), !dbg !7921
  %12 = load i8, i8* %10, align 1, !dbg !7927
  %13 = icmp eq i8 %12, 0, !dbg !7928
  br i1 %13, label %18, label %14, !dbg !7929

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7930
  call void @llvm.dbg.value(metadata i8* %15, metadata !7917, metadata !DIExpression()), !dbg !7921
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7932
  call void @llvm.dbg.value(metadata i8* %16, metadata !7916, metadata !DIExpression()), !dbg !7921
  store i8 %12, i8* %9, align 1, !dbg !7933
  call void @llvm.dbg.value(metadata i32 %11, metadata !7918, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %11, metadata !7918, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7921
  %17 = icmp eq i32 %11, 0, !dbg !7924
  br i1 %17, label %18, label %7, !dbg !7925, !llvm.loop !7934

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7921
  store i8 0, i8* %19, align 1, !dbg !7936
  ret i8* %0, !dbg !7937
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7938 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7942, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %1, metadata !7943, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %2, metadata !7944, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %0, metadata !7945, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %1, metadata !7946, metadata !DIExpression()), !dbg !7947
  %4 = icmp eq i32 %2, 0, !dbg !7948
  br i1 %4, label %31, label %5, !dbg !7950

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %0, metadata !7945, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %2, metadata !7944, metadata !DIExpression()), !dbg !7947
  %6 = add i32 %2, -1, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %6, metadata !7944, metadata !DIExpression()), !dbg !7947
  %7 = icmp eq i32 %6, 0, !dbg !7952
  br i1 %7, label %23, label %8, !dbg !7953

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7954
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7954
  br label %11, !dbg !7954

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %14, metadata !7945, metadata !DIExpression()), !dbg !7947
  %15 = load i8, i8* %14, align 1, !dbg !7955
  %16 = load i8, i8* %13, align 1, !dbg !7956
  %17 = icmp eq i8 %15, %16, !dbg !7957
  br i1 %17, label %18, label %23, !dbg !7954

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7958
  call void @llvm.dbg.value(metadata i8* %19, metadata !7945, metadata !DIExpression()), !dbg !7947
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7960
  call void @llvm.dbg.value(metadata i8* %20, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %12, metadata !7944, metadata !DIExpression()), !dbg !7947
  %21 = add i32 %12, -1, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %21, metadata !7944, metadata !DIExpression()), !dbg !7947
  %22 = icmp eq i32 %21, 0, !dbg !7952
  br i1 %22, label %23, label %11, !dbg !7953, !llvm.loop !7961

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7947
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7947
  %26 = load i8, i8* %24, align 1, !dbg !7963
  %27 = zext i8 %26 to i32, !dbg !7963
  %28 = load i8, i8* %25, align 1, !dbg !7964
  %29 = zext i8 %28 to i32, !dbg !7964
  %30 = sub nsw i32 %27, %29, !dbg !7965
  br label %31, !dbg !7966

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7947
  ret i32 %32, !dbg !7967
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7972, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %1, metadata !7973, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %2, metadata !7974, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %0, metadata !7975, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %1, metadata !7976, metadata !DIExpression()), !dbg !7977
  %4 = ptrtoint i8* %0 to i32, !dbg !7978
  %5 = ptrtoint i8* %1 to i32, !dbg !7978
  %6 = sub i32 %4, %5, !dbg !7978
  %7 = icmp ult i32 %6, %2, !dbg !7980
  br i1 %7, label %10, label %8, !dbg !7981

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7976, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %0, metadata !7975, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %2, metadata !7974, metadata !DIExpression()), !dbg !7977
  %9 = icmp eq i32 %2, 0, !dbg !7982
  br i1 %9, label %26, label %17, !dbg !7984

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7974, metadata !DIExpression()), !dbg !7977
  %12 = add i32 %11, -1, !dbg !7985
  call void @llvm.dbg.value(metadata i32 %12, metadata !7974, metadata !DIExpression()), !dbg !7977
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7988
  %14 = load i8, i8* %13, align 1, !dbg !7988
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7989
  store i8 %14, i8* %15, align 1, !dbg !7990
  %16 = icmp eq i32 %12, 0, !dbg !7991
  br i1 %16, label %26, label %10, !dbg !7992, !llvm.loop !7993

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7976, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %19, metadata !7975, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %20, metadata !7974, metadata !DIExpression()), !dbg !7977
  %21 = load i8, i8* %18, align 1, !dbg !7995
  store i8 %21, i8* %19, align 1, !dbg !7997
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7998
  call void @llvm.dbg.value(metadata i8* %22, metadata !7975, metadata !DIExpression()), !dbg !7977
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %23, metadata !7976, metadata !DIExpression()), !dbg !7977
  %24 = add i32 %20, -1, !dbg !8000
  call void @llvm.dbg.value(metadata i32 %24, metadata !7974, metadata !DIExpression()), !dbg !7977
  %25 = icmp eq i32 %24, 0, !dbg !7982
  br i1 %25, label %26, label %17, !dbg !7984, !llvm.loop !8001

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8010, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i8* %1, metadata !8011, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32 %2, metadata !8012, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i8* %0, metadata !8013, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i8* %1, metadata !8014, metadata !DIExpression()), !dbg !8015
  %4 = icmp eq i32 %2, 0, !dbg !8016
  br i1 %4, label %14, label %5, !dbg !8017

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8014, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i8* %7, metadata !8013, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32 %8, metadata !8012, metadata !DIExpression()), !dbg !8015
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8018
  call void @llvm.dbg.value(metadata i8* %9, metadata !8014, metadata !DIExpression()), !dbg !8015
  %10 = load i8, i8* %6, align 1, !dbg !8020
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8021
  call void @llvm.dbg.value(metadata i8* %11, metadata !8013, metadata !DIExpression()), !dbg !8015
  store i8 %10, i8* %7, align 1, !dbg !8022
  %12 = add i32 %8, -1, !dbg !8023
  call void @llvm.dbg.value(metadata i32 %12, metadata !8012, metadata !DIExpression()), !dbg !8015
  %13 = icmp eq i32 %12, 0, !dbg !8016
  br i1 %13, label %14, label %5, !dbg !8017, !llvm.loop !8024

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8026
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8027 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8031, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata i32 %1, metadata !8032, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata i32 %2, metadata !8033, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata i8* %0, metadata !8034, metadata !DIExpression()), !dbg !8036
  %4 = trunc i32 %1 to i8, !dbg !8037
  call void @llvm.dbg.value(metadata i8 %4, metadata !8035, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata i32 %2, metadata !8033, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata i8* %0, metadata !8034, metadata !DIExpression()), !dbg !8036
  %5 = icmp eq i32 %2, 0, !dbg !8038
  br i1 %5, label %12, label %6, !dbg !8039

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8033, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata i8* %8, metadata !8034, metadata !DIExpression()), !dbg !8036
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8040
  call void @llvm.dbg.value(metadata i8* %9, metadata !8034, metadata !DIExpression()), !dbg !8036
  store i8 %4, i8* %8, align 1, !dbg !8042
  %10 = add i32 %7, -1, !dbg !8043
  call void @llvm.dbg.value(metadata i32 %10, metadata !8033, metadata !DIExpression()), !dbg !8036
  %11 = icmp eq i32 %10, 0, !dbg !8038
  br i1 %11, label %12, label %6, !dbg !8039, !llvm.loop !8044

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8046
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8051, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i32 %1, metadata !8052, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i32 %2, metadata !8053, metadata !DIExpression()), !dbg !8057
  %4 = icmp eq i32 %2, 0, !dbg !8058
  br i1 %4, label %17, label %5, !dbg !8059

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8060

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8061
  call void @llvm.dbg.value(metadata i8* %9, metadata !8054, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32 %8, metadata !8053, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i8* %9, metadata !8054, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8061
  %10 = load i8, i8* %9, align 1, !dbg !8062
  %11 = icmp eq i8 %10, %6, !dbg !8065
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8066
  call void @llvm.dbg.value(metadata i8* %12, metadata !8054, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32 %13, metadata !8053, metadata !DIExpression()), !dbg !8057
  br i1 %15, label %16, label %7, !dbg !8066, !llvm.loop !8067

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8069

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8057
  ret i8* %19, !dbg !8070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !8071 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8073, metadata !DIExpression()), !dbg !8074
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8075
  ret void, !dbg !8076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !8077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8079, metadata !DIExpression()), !dbg !8080
  ret i32 -1, !dbg !8081
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8086, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32* %1, metadata !8087, metadata !DIExpression()), !dbg !8088
  %3 = ptrtoint i32* %1 to i32, !dbg !8089
  %4 = and i32 %3, -2, !dbg !8089
  %5 = icmp eq i32 %4, 2, !dbg !8089
  br i1 %5, label %6, label %9, !dbg !8089

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8090
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8090
  br label %9, !dbg !8091

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8091
  ret i32 %10, !dbg !8092
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32* %1, metadata !8096, metadata !DIExpression()), !dbg !8097
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8098
  ret i32 %3, !dbg !8099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8103, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.value(metadata i32* %1, metadata !8104, metadata !DIExpression()), !dbg !8105
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8106, !srcloc !8108
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8109
  ret i32 %3, !dbg !8110
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8111 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8116, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32* %1, metadata !8117, metadata !DIExpression()), !dbg !8120
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8121
  call void @llvm.dbg.value(metadata i32 %3, metadata !8118, metadata !DIExpression()), !dbg !8120
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8122
  call void @llvm.dbg.value(metadata i32 %4, metadata !8119, metadata !DIExpression()), !dbg !8120
  %5 = icmp ne i32 %3, %4, !dbg !8123
  %6 = sext i1 %5 to i32, !dbg !8124
  ret i32 %6, !dbg !8125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8126 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8130, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata i32 %1, metadata !8131, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata i32 %2, metadata !8132, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata i32* %3, metadata !8133, metadata !DIExpression()), !dbg !8134
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8135
  ret i32 %5, !dbg !8136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8139, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32 %1, metadata !8140, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32 %2, metadata !8141, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32* %3, metadata !8142, metadata !DIExpression()), !dbg !8143
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8144, !srcloc !8146
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8147
  ret i32 %5, !dbg !8148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8151, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32 %1, metadata !8152, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32 %2, metadata !8153, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32* %3, metadata !8154, metadata !DIExpression()), !dbg !8159
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8160
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8162
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8162
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8162
  br i1 %11, label %33, label %12, !dbg !8162

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8159
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8159
  call void @llvm.dbg.value(metadata i8* %14, metadata !8157, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32 %13, metadata !8155, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32 %1, metadata !8156, metadata !DIExpression()), !dbg !8159
  br label %15, !dbg !8163

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8165
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8159
  call void @llvm.dbg.value(metadata i8* %17, metadata !8157, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32 %16, metadata !8156, metadata !DIExpression()), !dbg !8159
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8166
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8169
  call void @llvm.dbg.value(metadata i8* %19, metadata !8157, metadata !DIExpression()), !dbg !8159
  %20 = load i8, i8* %17, align 1, !dbg !8170
  %21 = zext i8 %20 to i32, !dbg !8171
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8166
  %23 = icmp eq i32 %22, -1, !dbg !8172
  br i1 %23, label %30, label %24, !dbg !8173

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %25, metadata !8156, metadata !DIExpression()), !dbg !8159
  %26 = icmp eq i32 %25, 0, !dbg !8175
  br i1 %26, label %27, label %15, !dbg !8176, !llvm.loop !8177

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8179
  call void @llvm.dbg.value(metadata i32 %28, metadata !8155, metadata !DIExpression()), !dbg !8159
  %29 = icmp eq i32 %28, 0, !dbg !8180
  br i1 %29, label %30, label %12, !dbg !8181, !llvm.loop !8182

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8159
  call void @llvm.dbg.value(metadata i32 %31, metadata !8155, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.label(metadata !8158), !dbg !8185
  %32 = sub i32 %2, %31, !dbg !8186
  br label %33, !dbg !8187

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8159
  ret i32 %34, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8189 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8193, metadata !DIExpression()), !dbg !8194
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8195
  %3 = icmp eq i32 %2, -1, !dbg !8197
  br i1 %3, label %8, label %4, !dbg !8198

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8199
  %6 = icmp eq i32 %5, -1, !dbg !8200
  %7 = sext i1 %6 to i32, !dbg !8199
  br label %8, !dbg !8201

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8194
  ret i32 %9, !dbg !8202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, ...) local_unnamed_addr #1 !dbg !8203 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8208, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %1, metadata !8209, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i8* %2, metadata !8210, metadata !DIExpression()), !dbg !8225
  %7 = bitcast %struct.__va_list* %4 to i8*, !dbg !8226
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8226
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !8211, metadata !DIExpression()), !dbg !8227
  %8 = bitcast %struct.emitter* %5 to i8*, !dbg !8228
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8228
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8218, metadata !DIExpression()), !dbg !8229
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8230
  %9 = icmp eq i32 %1, 0, !dbg !8231
  %10 = select i1 %9, i8* %6, i8* %0, !dbg !8233
  call void @llvm.dbg.value(metadata i8* %10, metadata !8208, metadata !DIExpression()), !dbg !8225
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8234
  store i8* %10, i8** %11, align 4, !dbg !8235
  %12 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8236
  store i32 %1, i32* %12, align 4, !dbg !8237
  call void @llvm.va_start(i8* nonnull %7), !dbg !8238
  %13 = bitcast %struct.__va_list* %4 to i32*, !dbg !8239
  %14 = load i32, i32* %13, align 4, !dbg !8239
  %15 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !8239
  %16 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %8, i8* noundef %2, [1 x i32] %15) #25, !dbg !8239
  call void @llvm.dbg.value(metadata i32 %16, metadata !8223, metadata !DIExpression()), !dbg !8225
  call void @llvm.va_end(i8* nonnull %7), !dbg !8240
  %17 = load i8*, i8** %11, align 4, !dbg !8241
  store i8 0, i8* %17, align 1, !dbg !8242
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8243
  ret i32 %16, !dbg !8244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.85(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !8245 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8252, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), metadata !8249, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i8* %0, metadata !8250, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i8* %1, metadata !8251, metadata !DIExpression()), !dbg !8253
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !8254
  ret i32 %4, !dbg !8255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @sprintf_out(i32 noundef %0, %struct.emitter* nocapture noundef %1) #11 !dbg !8256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8261, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata %struct.emitter* %1, metadata !8262, metadata !DIExpression()), !dbg !8263
  %3 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 1, !dbg !8264
  %4 = load i32, i32* %3, align 4, !dbg !8264
  %5 = icmp sgt i32 %4, 1, !dbg !8266
  br i1 %5, label %6, label %14, !dbg !8267

6:                                                ; preds = %2
  %7 = trunc i32 %0 to i8, !dbg !8268
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 0, !dbg !8270
  %9 = load i8*, i8** %8, align 4, !dbg !8270
  store i8 %7, i8* %9, align 1, !dbg !8271
  %10 = load i8*, i8** %8, align 4, !dbg !8272
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8272
  store i8* %11, i8** %8, align 4, !dbg !8272
  %12 = load i32, i32* %3, align 4, !dbg !8273
  %13 = add nsw i32 %12, -1, !dbg !8273
  store i32 %13, i32* %3, align 4, !dbg !8273
  br label %14, !dbg !8274

14:                                               ; preds = %6, %2
  ret i32 0, !dbg !8275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sprintf(i8* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !8276 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8280, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata i8* %1, metadata !8281, metadata !DIExpression()), !dbg !8285
  %5 = bitcast %struct.__va_list* %3 to i8*, !dbg !8286
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8286
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !8282, metadata !DIExpression()), !dbg !8287
  %6 = bitcast %struct.emitter* %4 to i8*, !dbg !8288
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8288
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8283, metadata !DIExpression()), !dbg !8289
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8290
  store i8* %0, i8** %7, align 4, !dbg !8291
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8292
  store i32 2147483647, i32* %8, align 4, !dbg !8293
  call void @llvm.va_start(i8* nonnull %5), !dbg !8294
  %9 = bitcast %struct.__va_list* %3 to i32*, !dbg !8295
  %10 = load i32, i32* %9, align 4, !dbg !8295
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !8295
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %6, i8* noundef %1, [1 x i32] %11) #25, !dbg !8295
  call void @llvm.dbg.value(metadata i32 %12, metadata !8284, metadata !DIExpression()), !dbg !8285
  call void @llvm.va_end(i8* nonnull %5), !dbg !8296
  %13 = load i8*, i8** %7, align 4, !dbg !8297
  store i8 0, i8* %13, align 1, !dbg !8298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8299
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8299
  ret i32 %12, !dbg !8300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !8301 {
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8308, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i8* %0, metadata !8305, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i32 %1, metadata !8306, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i8* %2, metadata !8307, metadata !DIExpression()), !dbg !8312
  %7 = bitcast %struct.emitter* %5 to i8*, !dbg !8313
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8313
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8309, metadata !DIExpression()), !dbg !8314
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8315
  %8 = icmp eq i32 %1, 0, !dbg !8316
  %9 = select i1 %8, i8* %6, i8* %0, !dbg !8318
  call void @llvm.dbg.value(metadata i8* %9, metadata !8305, metadata !DIExpression()), !dbg !8312
  %10 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8319
  store i8* %9, i8** %10, align 4, !dbg !8320
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8321
  store i32 %1, i32* %11, align 4, !dbg !8322
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %7, i8* noundef %2, [1 x i32] %3) #25, !dbg !8323
  call void @llvm.dbg.value(metadata i32 %12, metadata !8310, metadata !DIExpression()), !dbg !8312
  %13 = load i8*, i8** %10, align 4, !dbg !8324
  store i8 0, i8* %13, align 1, !dbg !8325
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8326
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8326
  ret i32 %12, !dbg !8327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsprintf(i8* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !8328 {
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !8334, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8* %0, metadata !8332, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8* %1, metadata !8333, metadata !DIExpression()), !dbg !8337
  %5 = bitcast %struct.emitter* %4 to i8*, !dbg !8338
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8338
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8335, metadata !DIExpression()), !dbg !8339
  %6 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8340
  store i8* %0, i8** %6, align 4, !dbg !8341
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8342
  store i32 2147483647, i32* %7, align 4, !dbg !8343
  %8 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %5, i8* noundef %1, [1 x i32] %2) #25, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %8, metadata !8336, metadata !DIExpression()), !dbg !8337
  %9 = load i8*, i8** %6, align 4, !dbg !8345
  store i8 0, i8* %9, align 1, !dbg !8346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8347
  ret i32 %8, !dbg !8348
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8351, metadata !DIExpression()), !dbg !8352
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !8353
  ret void, !dbg !8354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8359, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata i32 %1, metadata !8360, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8361, metadata !DIExpression()), !dbg !8365
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8366
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8366
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8366
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8362, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata i32 %0, metadata !8364, metadata !DIExpression()), !dbg !8365
  %7 = icmp slt i32 %0, %1, !dbg !8367
  br i1 %7, label %8, label %22, !dbg !8370

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8364, metadata !DIExpression()), !dbg !8365
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !8371
  %11 = icmp eq i32 %10, 0, !dbg !8371
  br i1 %11, label %19, label %12, !dbg !8374

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !8375
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8377
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8377
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8379
  br i1 %15, label %19, label %16, !dbg !8380

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8381
  %18 = load i8*, i8** %17, align 4, !dbg !8381
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !8382
  br label %19, !dbg !8383

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %20, metadata !8364, metadata !DIExpression()), !dbg !8365
  %21 = icmp eq i32 %20, %1, !dbg !8367
  br i1 %21, label %22, label %8, !dbg !8370, !llvm.loop !8385

22:                                               ; preds = %19, %3
  ret void, !dbg !8387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !8388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  %2 = shl nuw i32 1, %0, !dbg !8392
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !8395
  ret i32 %3, !dbg !8396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8401, metadata !DIExpression()), !dbg !8402
  %2 = shl nuw i32 1, %0, !dbg !8403
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !8406
  ret void, !dbg !8407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8411, metadata !DIExpression()), !dbg !8412
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8413
  ret void, !dbg !8414
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !8415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8417, metadata !DIExpression()), !dbg !8418
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8419
  %3 = and i32 %2, %0, !dbg !8419
  %4 = icmp eq i32 %3, %0, !dbg !8420
  %5 = zext i1 %4 to i32, !dbg !8420
  ret i32 %5, !dbg !8421
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8422 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8424, metadata !DIExpression()), !dbg !8425
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !8426
  ret void, !dbg !8427
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8430, metadata !DIExpression()), !dbg !8431
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !8432
  ret void, !dbg !8433
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8434 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8436, metadata !DIExpression()), !dbg !8437
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !8438
  ret void, !dbg !8439
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8442, metadata !DIExpression()), !dbg !8443
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !8444
  ret void, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8448, metadata !DIExpression()), !dbg !8449
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !8450
  ret void, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8454, metadata !DIExpression()), !dbg !8455
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !8456
  ret void, !dbg !8457
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8460, metadata !DIExpression()), !dbg !8461
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !8462
  ret void, !dbg !8463
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8466, metadata !DIExpression()), !dbg !8467
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !8468
  ret void, !dbg !8469
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8470 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8472, metadata !DIExpression()), !dbg !8473
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !8474
  ret void, !dbg !8475
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8478, metadata !DIExpression()), !dbg !8479
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !8480
  ret void, !dbg !8481
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8484, metadata !DIExpression()), !dbg !8485
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !8486
  ret i32 0, !dbg !8487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !756 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !760, metadata !DIExpression()), !dbg !8488
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !8489
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !8491
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !8493
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !8495
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !8497
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !8499
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !8501
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !8503
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !8505
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !8507
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !8509
  ret void, !dbg !8511
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8514, metadata !DIExpression()), !dbg !8516
  call void @llvm.dbg.value(metadata i32 0, metadata !8515, metadata !DIExpression()), !dbg !8516
  call void @llvm.dbg.value(metadata i32 undef, metadata !8515, metadata !DIExpression()), !dbg !8516
  %2 = lshr i32 6684671, %0, !dbg !8517
  %3 = and i32 %2, 1, !dbg !8517
  %4 = or i32 %3, %0, !dbg !8519
  %5 = icmp eq i32 %4, 0, !dbg !8519
  br i1 %5, label %6, label %7, !dbg !8519

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8520
  unreachable, !dbg !8520

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8525
  %9 = load i32, i32* %8, align 4, !dbg !8525
  call void @llvm.dbg.value(metadata i32 %9, metadata !8515, metadata !DIExpression()), !dbg !8516
  %10 = shl nuw i32 1, %0, !dbg !8526
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #25, !dbg !8527
  tail call void @arch_irq_enable(i32 noundef %9) #24, !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8532, metadata !DIExpression()), !dbg !8533
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8534
  %3 = or i32 %2, %0, !dbg !8534
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8534
  ret void, !dbg !8535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8538, metadata !DIExpression()), !dbg !8539
  %2 = icmp slt i32 %0, 32, !dbg !8540
  br i1 %2, label %3, label %5, !dbg !8542

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8543
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !8545
  br label %5, !dbg !8546

5:                                                ; preds = %1, %3
  ret void, !dbg !8547
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8550, metadata !DIExpression()), !dbg !8551
  %2 = xor i32 %0, -1, !dbg !8552
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8552
  %4 = and i32 %3, %2, !dbg !8552
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8552
  ret void, !dbg !8553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8558, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.value(metadata i32 %1, metadata !8559, metadata !DIExpression()), !dbg !8560
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8561

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8562
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !8564
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !8565
  br label %11, !dbg !8566

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8567
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !8568
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !8569
  br label %11, !dbg !8570

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8571
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !8572
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !8573
  br label %11, !dbg !8574

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8575
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !8576
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !8577
  br label %11, !dbg !8578

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8582, metadata !DIExpression()), !dbg !8583
  %2 = xor i32 %0, -1, !dbg !8584
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8584
  %4 = and i32 %3, %2, !dbg !8584
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8584
  ret void, !dbg !8585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8588, metadata !DIExpression()), !dbg !8589
  %2 = xor i32 %0, -1, !dbg !8590
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8590
  %4 = and i32 %3, %2, !dbg !8590
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8590
  ret void, !dbg !8591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8594, metadata !DIExpression()), !dbg !8595
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8596
  %3 = or i32 %2, %0, !dbg !8596
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8596
  ret void, !dbg !8597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8600, metadata !DIExpression()), !dbg !8601
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8602
  %3 = or i32 %2, %0, !dbg !8602
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8602
  ret void, !dbg !8603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !8604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8608, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8609, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i8* %2, metadata !8610, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8611, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8613, metadata !DIExpression()), !dbg !8614
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8615
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8615
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8617
  br i1 %6, label %7, label %9, !dbg !8618

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8619
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8620
  store i8* %2, i8** %8, align 4, !dbg !8621
  br label %9, !dbg !8622

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8614
  ret i32 %10, !dbg !8623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !8624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8626, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8627, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8628, metadata !DIExpression()), !dbg !8629
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8630
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8631
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8632
  store i8* null, i8** %3, align 4, !dbg !8633
  ret void, !dbg !8634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8637, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i8* %1, metadata !8638, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i8* %1, metadata !8639, metadata !DIExpression()), !dbg !8642
  %3 = bitcast i8* %1 to i32*, !dbg !8643
  %4 = load i32, i32* %3, align 4, !dbg !8643
  %5 = add i32 %4, -169, !dbg !8643
  %6 = icmp ult i32 %5, -121, !dbg !8643
  br i1 %6, label %15, label %7, !dbg !8645

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8646
  %9 = inttoptr i32 %8 to i32*, !dbg !8647
  call void @llvm.dbg.value(metadata i32* %9, metadata !8640, metadata !DIExpression()), !dbg !8642
  %10 = load volatile i32, i32* %9, align 4, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %10, metadata !8641, metadata !DIExpression()), !dbg !8642
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8649
  %12 = bitcast i8* %11 to i32*, !dbg !8649
  %13 = load i32, i32* %12, align 4, !dbg !8649
  %14 = or i32 %13, %10, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %14, metadata !8641, metadata !DIExpression()), !dbg !8642
  store volatile i32 %14, i32* %9, align 4, !dbg !8651
  br label %15, !dbg !8652

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8642
  ret i32 %16, !dbg !8653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8656, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.value(metadata i8* %1, metadata !8657, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.value(metadata i8* %1, metadata !8658, metadata !DIExpression()), !dbg !8661
  %3 = bitcast i8* %1 to i32*, !dbg !8662
  %4 = load i32, i32* %3, align 4, !dbg !8662
  %5 = add i32 %4, -169, !dbg !8662
  %6 = icmp ult i32 %5, -121, !dbg !8662
  br i1 %6, label %16, label %7, !dbg !8664

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8665
  %9 = inttoptr i32 %8 to i32*, !dbg !8666
  call void @llvm.dbg.value(metadata i32* %9, metadata !8659, metadata !DIExpression()), !dbg !8661
  %10 = load volatile i32, i32* %9, align 4, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %10, metadata !8660, metadata !DIExpression()), !dbg !8661
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8668
  %12 = bitcast i8* %11 to i32*, !dbg !8668
  %13 = load i32, i32* %12, align 4, !dbg !8668
  %14 = xor i32 %13, -1, !dbg !8669
  %15 = and i32 %10, %14, !dbg !8670
  call void @llvm.dbg.value(metadata i32 %15, metadata !8660, metadata !DIExpression()), !dbg !8661
  store volatile i32 %15, i32* %9, align 4, !dbg !8671
  br label %16, !dbg !8672

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8661
  ret i32 %17, !dbg !8673
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8676, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8* %1, metadata !8677, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32* %2, metadata !8678, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8* %1, metadata !8679, metadata !DIExpression()), !dbg !8684
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8685
  call void @llvm.dbg.value(metadata i32 %4, metadata !8680, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 undef, metadata !8681, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 undef, metadata !8682, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 %4, metadata !8683, metadata !DIExpression()), !dbg !8684
  %5 = bitcast i8* %1 to i32*, !dbg !8686
  %6 = load i32, i32* %5, align 4, !dbg !8686
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8687

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #25, !dbg !8688
  call void @llvm.dbg.value(metadata i32 %8, metadata !8681, metadata !DIExpression()), !dbg !8684
  br label %19, !dbg !8689

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !8691
  call void @llvm.dbg.value(metadata i32 %10, metadata !8682, metadata !DIExpression()), !dbg !8684
  br label %19, !dbg !8692

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8693
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !8694
  br label %19, !dbg !8695

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8696
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #25, !dbg !8697
  br label %19, !dbg !8698

17:                                               ; preds = %3
  br label %19, !dbg !8699

18:                                               ; preds = %3
  br label %19, !dbg !8700

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8701
  br label %21, !dbg !8702

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8684
  ret i32 %22, !dbg !8702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8705, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i8* %1, metadata !8706, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i8* %2, metadata !8707, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i8* %1, metadata !8708, metadata !DIExpression()), !dbg !8713
  %4 = bitcast i8* %1 to i32*, !dbg !8714
  %5 = load i32, i32* %4, align 4, !dbg !8714
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %6, metadata !8712, metadata !DIExpression()), !dbg !8713
  %7 = icmp slt i32 %6, 0, !dbg !8716
  br i1 %7, label %22, label %8, !dbg !8718

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8708, metadata !DIExpression()), !dbg !8713
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8719
  %10 = bitcast i8* %9 to i32*, !dbg !8719
  %11 = load i32, i32* %10, align 4, !dbg !8719
  %12 = lshr i32 %11, 16, !dbg !8719
  %13 = and i32 %12, 7, !dbg !8719
  %14 = lshr i32 %11, 8, !dbg !8720
  %15 = and i32 %14, 31, !dbg !8720
  %16 = shl i32 %13, %15, !dbg !8721
  call void @llvm.dbg.value(metadata i32 %16, metadata !8711, metadata !DIExpression()), !dbg !8713
  %17 = and i32 %11, 255, !dbg !8722
  %18 = or i32 %17, 1073887232, !dbg !8723
  %19 = inttoptr i32 %18 to i32*, !dbg !8724
  call void @llvm.dbg.value(metadata i32* %19, metadata !8709, metadata !DIExpression()), !dbg !8713
  %20 = load volatile i32, i32* %19, align 4, !dbg !8725
  call void @llvm.dbg.value(metadata i32 %20, metadata !8710, metadata !DIExpression()), !dbg !8713
  %21 = or i32 %16, %20, !dbg !8726
  call void @llvm.dbg.value(metadata i32 %21, metadata !8710, metadata !DIExpression()), !dbg !8713
  store volatile i32 %21, i32* %19, align 4, !dbg !8727
  br label %22, !dbg !8728

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8713
  ret i32 %23, !dbg !8729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !8730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  %2 = add i32 %0, -1, !dbg !8737
  %3 = icmp ult i32 %2, 6, !dbg !8737
  br i1 %3, label %4, label %7, !dbg !8737

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8737
  %6 = load i32, i32* %5, align 4, !dbg !8737
  call void @llvm.dbg.value(metadata i32 %6, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %7, !dbg !8738

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8736
  ret i32 %8, !dbg !8739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8744, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i32 %1, metadata !8745, metadata !DIExpression()), !dbg !8746
  %3 = udiv i32 %0, %1, !dbg !8747
  ret i32 %3, !dbg !8748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8753, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 12, metadata !8754, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 336, metadata !8755, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 %1, metadata !8756, metadata !DIExpression()), !dbg !8757
  %3 = mul i32 %0, 336, !dbg !8758
  %4 = mul nsw i32 %1, 12, !dbg !8759
  %5 = udiv i32 %3, %4, !dbg !8760
  ret i32 %5, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8764, metadata !DIExpression()), !dbg !8767
  tail call void @config_enable_default_clocks() #24, !dbg !8768
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !8769
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !8769
  %4 = lshr i32 %3, 4, !dbg !8769
  %5 = and i32 %4, 15, !dbg !8769
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8769
  %7 = load i8, i8* %6, align 1, !dbg !8769
  %8 = zext i8 %7 to i32, !dbg !8769
  %9 = lshr i32 %2, %8, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %9, metadata !8765, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8766, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8767
  %10 = icmp ult i32 %9, 168000000, !dbg !8770
  br i1 %10, label %11, label %13, !dbg !8772

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !8773
  br label %13, !dbg !8775

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !8776
  tail call fastcc void @set_up_plls() #25, !dbg !8777
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8778
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !8781
  br label %14, !dbg !8782

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8783
  %16 = icmp eq i32 %15, 8, !dbg !8784
  br i1 %16, label %17, label %14, !dbg !8782, !llvm.loop !8785

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8787
  br i1 %18, label %19, label %21, !dbg !8789

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !8790
  br label %21, !dbg !8792

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8793
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !8794
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !8795
  ret i32 0, !dbg !8796
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !8797 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8799
  %2 = and i32 %1, 240, !dbg !8799
  ret i32 %2, !dbg !8800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8801 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !8802
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !8807
  br label %1, !dbg !8808

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !8809
  %3 = icmp eq i32 %2, 1, !dbg !8810
  br i1 %3, label %4, label %1, !dbg !8808, !llvm.loop !8811

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !8813
  br label %5, !dbg !8816

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !8817
  %7 = icmp eq i32 %6, 1, !dbg !8818
  br i1 %7, label %8, label %5, !dbg !8816, !llvm.loop !8819

8:                                                ; preds = %5
  ret void, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8822 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8823
  %2 = icmp eq i32 %1, 8, !dbg !8825
  br i1 %2, label %3, label %4, !dbg !8826

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8827
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !8829
  br label %4, !dbg !8830

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !8831
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8832
  %6 = and i32 %5, -196609, !dbg !8832
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8832
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8833
  %8 = and i32 %7, -251658241, !dbg !8833
  %9 = or i32 %8, 117440512, !dbg !8833
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8833
  tail call void @config_pll_sysclock() #24, !dbg !8834
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !8835
  br label %10, !dbg !8836

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !8837
  %12 = icmp eq i32 %11, 1, !dbg !8838
  br i1 %12, label %13, label %10, !dbg !8836, !llvm.loop !8839

13:                                               ; preds = %10
  ret void, !dbg !8841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8842 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8844, metadata !DIExpression()), !dbg !8845
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8846
  %2 = and i32 %1, -241, !dbg !8846
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8850, metadata !DIExpression()), !dbg !8851
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8852
  %3 = and i32 %2, -4, !dbg !8852
  %4 = or i32 %3, %0, !dbg !8852
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !8854 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8855
  %2 = and i32 %1, 12, !dbg !8855
  ret i32 %2, !dbg !8856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8857 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8859, metadata !DIExpression()), !dbg !8860
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8861
  %2 = and i32 %1, -7169, !dbg !8861
  %3 = or i32 %2, 5120, !dbg !8861
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8861
  ret void, !dbg !8862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8863 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8865, metadata !DIExpression()), !dbg !8866
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8867
  %2 = and i32 %1, -57345, !dbg !8867
  %3 = or i32 %2, 32768, !dbg !8867
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8867
  ret void, !dbg !8868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8869 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8870
  %2 = icmp eq i32 %1, 1, !dbg !8872
  br i1 %2, label %7, label %3, !dbg !8873

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !8874
  br label %4, !dbg !8876

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8877
  %6 = icmp eq i32 %5, 1, !dbg !8878
  br i1 %6, label %7, label %4, !dbg !8876, !llvm.loop !8879

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !8881
  br label %8, !dbg !8882

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8883
  %10 = icmp eq i32 %9, 0, !dbg !8884
  br i1 %10, label %11, label %8, !dbg !8882, !llvm.loop !8885

11:                                               ; preds = %8
  ret void, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8888 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8889
  %2 = and i32 %1, -16777217, !dbg !8889
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8889
  ret void, !dbg !8890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8891 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8892
  %2 = or i32 %1, 16777216, !dbg !8892
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8892
  ret void, !dbg !8893
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !8894 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8895
  %2 = lshr i32 %1, 25, !dbg !8896
  %3 = and i32 %2, 1, !dbg !8896
  ret i32 %3, !dbg !8897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !8898 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8899
  %2 = lshr i32 %1, 1, !dbg !8900
  %3 = and i32 %2, 1, !dbg !8900
  ret i32 %3, !dbg !8901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8902 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8903
  %2 = or i32 %1, 1, !dbg !8903
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8903
  ret void, !dbg !8904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8905 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8906
  %2 = and i32 %1, -262145, !dbg !8906
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8906
  ret void, !dbg !8907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8908 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8909
  %2 = or i32 %1, 65536, !dbg !8909
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8909
  ret void, !dbg !8910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !8911 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8912
  %2 = lshr i32 %1, 17, !dbg !8913
  %3 = and i32 %2, 1, !dbg !8913
  ret i32 %3, !dbg !8914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8915 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8916
  %2 = or i32 %1, 1, !dbg !8916
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8916
  ret void, !dbg !8917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !8918 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8919
  %2 = lshr i32 %1, 1, !dbg !8920
  %3 = and i32 %2, 1, !dbg !8920
  ret i32 %3, !dbg !8921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !8922 {
  ret i32 12000000, !dbg !8924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8928 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8931 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8935, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 12, metadata !8936, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 336, metadata !8937, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 0, metadata !8938, metadata !DIExpression()), !dbg !8939
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8940
  %2 = and i32 %1, -4227072, !dbg !8940
  %3 = or i32 %2, 4215820, !dbg !8940
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8940
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8941
  %5 = and i32 %4, -196609, !dbg !8941
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8941
  ret void, !dbg !8942
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8943 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !8944
  ret void, !dbg !8945
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8946 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8949, metadata !DIExpression()), !dbg !8951
  %2 = bitcast i32* %1 to i8*, !dbg !8952
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8952
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8950, metadata !DIExpression()), !dbg !8953
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8954
  %4 = or i32 %3, 268435456, !dbg !8954
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8954
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8955
  %6 = and i32 %5, 268435456, !dbg !8955
  store volatile i32 %6, i32* %1, align 4, !dbg !8956
  %7 = load volatile i32, i32* %1, align 4, !dbg !8957
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8958
  ret void, !dbg !8958
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8961, metadata !DIExpression()), !dbg !8962
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !8963
  br i1 %2, label %3, label %4, !dbg !8965

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !8966
  br label %4, !dbg !8967

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8962
  ret i32 %5, !dbg !8968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8974, metadata !DIExpression()), !dbg !8975
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8976, !srcloc !8978
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !8979
  ret i1 %1, !dbg !8980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8981 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !8982
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !8983
  ret void, !dbg !8984
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8987, metadata !DIExpression()), !dbg !8988
  %2 = icmp eq i32 %0, 10, !dbg !8989
  br i1 %2, label %3, label %4, !dbg !8991

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !8992
  br label %4, !dbg !8994

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8995
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !8996
  ret i32 %0, !dbg !8997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8998 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9001, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i8 %0, metadata !9002, metadata !DIExpression()), !dbg !9003
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9004, !srcloc !9006
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9007
  ret void, !dbg !9008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9009 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9011, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i8 %0, metadata !9012, metadata !DIExpression()), !dbg !9014
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9015
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9013, metadata !DIExpression()), !dbg !9014
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9016
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9016
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #24, !dbg !9017
  ret void, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9021, metadata !DIExpression()), !dbg !9022
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #24, !dbg !9023
  ret i1 %1, !dbg !9024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !9025 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9074, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9075, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9076, metadata !DIExpression()), !dbg !9077
  ret void, !dbg !9078
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9079 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9081, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8 %1, metadata !9082, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32 %2, metadata !9083, metadata !DIExpression()), !dbg !9086
  %5 = bitcast i32* %4 to i8*, !dbg !9087
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9087
  call void @llvm.dbg.value(metadata i32* %4, metadata !9085, metadata !DIExpression(DW_OP_deref)), !dbg !9086
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %6, metadata !9084, metadata !DIExpression()), !dbg !9086
  %7 = icmp eq i32 %6, 0, !dbg !9089
  br i1 %7, label %8, label %31, !dbg !9091

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9084, metadata !DIExpression()), !dbg !9086
  %9 = and i32 %2, 131072, !dbg !9092
  %10 = icmp eq i32 %9, 0, !dbg !9094
  br i1 %10, label %28, label %11, !dbg !9095

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9096
  %13 = icmp eq i32 %12, 0, !dbg !9099
  br i1 %13, label %18, label %14, !dbg !9100

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9101
  %16 = shl nuw i32 1, %15, !dbg !9101
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !9103
  br label %25, !dbg !9104

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9105
  %20 = icmp eq i32 %19, 0, !dbg !9107
  %21 = zext i8 %1 to i32, !dbg !9086
  br i1 %20, label %25, label %22, !dbg !9108

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9109
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !9111
  br label %25, !dbg !9112

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9113
  %27 = load i32, i32* %4, align 4, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %30, metadata !9085, metadata !DIExpression()), !dbg !9086
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !9115
  br label %31, !dbg !9116

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9113
  %30 = load i32, i32* %4, align 4, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %30, metadata !9085, metadata !DIExpression()), !dbg !9086
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !9115
  call void @llvm.dbg.value(metadata i32 0, metadata !9084, metadata !DIExpression()), !dbg !9086
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9117
  ret i32 %6, !dbg !9117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !9118 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9122, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata i32* %1, metadata !9123, metadata !DIExpression()), !dbg !9127
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9128
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9128
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9128
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9124, metadata !DIExpression()), !dbg !9127
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9129
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9129
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9129
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9126, metadata !DIExpression()), !dbg !9127
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !9130
  store i32 %9, i32* %1, align 4, !dbg !9131
  ret i32 0, !dbg !9132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9135, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %1, metadata !9136, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %2, metadata !9137, metadata !DIExpression()), !dbg !9141
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9142
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9142
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9142
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9138, metadata !DIExpression()), !dbg !9141
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9143
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9143
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9143
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9139, metadata !DIExpression()), !dbg !9141
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !9144
  call void @llvm.dbg.value(metadata i32 %10, metadata !9140, metadata !DIExpression()), !dbg !9141
  %11 = xor i32 %1, -1, !dbg !9145
  %12 = and i32 %10, %11, !dbg !9146
  %13 = and i32 %2, %1, !dbg !9147
  %14 = or i32 %12, %13, !dbg !9148
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !9149
  ret i32 0, !dbg !9150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9153, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9154, metadata !DIExpression()), !dbg !9157
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9158
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9158
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9158
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9155, metadata !DIExpression()), !dbg !9157
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9159
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9159
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9159
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9156, metadata !DIExpression()), !dbg !9157
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9160
  store volatile i32 %1, i32* %9, align 4, !dbg !9160
  ret i32 0, !dbg !9161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9164, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata i32 %1, metadata !9165, metadata !DIExpression()), !dbg !9168
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9169
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9169
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9169
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9166, metadata !DIExpression()), !dbg !9168
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9170
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9170
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9170
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9167, metadata !DIExpression()), !dbg !9168
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !9171
  ret i32 0, !dbg !9172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9175, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %1, metadata !9176, metadata !DIExpression()), !dbg !9179
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9180
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9180
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9180
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9177, metadata !DIExpression()), !dbg !9179
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9181
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9181
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9181
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9178, metadata !DIExpression()), !dbg !9179
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9182
  %10 = load volatile i32, i32* %9, align 4, !dbg !9182
  %11 = xor i32 %10, %1, !dbg !9182
  store volatile i32 %11, i32* %9, align 4, !dbg !9182
  ret i32 0, !dbg !9183
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9186, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i8 %1, metadata !9187, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 %2, metadata !9188, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 %3, metadata !9189, metadata !DIExpression()), !dbg !9196
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9197
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9197
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9197
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9190, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i8* undef, metadata !9191, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 0, metadata !9193, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 0, metadata !9194, metadata !DIExpression()), !dbg !9196
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9198

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9199
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !9203
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9204
  %12 = load i32, i32* %11, align 4, !dbg !9204
  %13 = icmp eq i32 %10, %12, !dbg !9205
  br i1 %13, label %14, label %29, !dbg !9206

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !9207
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !9209
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !9210
  br label %29, !dbg !9211

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9212
  %17 = load i8*, i8** %16, align 4, !dbg !9212
  call void @llvm.dbg.value(metadata i8* %17, metadata !9191, metadata !DIExpression()), !dbg !9196
  %18 = zext i8 %1 to i32, !dbg !9213
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !9215
  %20 = icmp eq i32 %19, 0, !dbg !9216
  br i1 %20, label %21, label %29, !dbg !9217

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9218
  %23 = load i32, i32* %22, align 4, !dbg !9218
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !9219
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9220

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9193, metadata !DIExpression()), !dbg !9196
  br label %27, !dbg !9221

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9193, metadata !DIExpression()), !dbg !9196
  br label %27, !dbg !9223

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9193, metadata !DIExpression()), !dbg !9196
  br label %27, !dbg !9224

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9196
  call void @llvm.dbg.value(metadata i32 %28, metadata !9193, metadata !DIExpression()), !dbg !9196
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !9225
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !9226
  br label %29, !dbg !9226

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9196
  call void @llvm.dbg.value(metadata i32 %30, metadata !9194, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.label(metadata !9195), !dbg !9227
  ret i32 %30, !dbg !9228
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9231, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9232, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i1 %2, metadata !9233, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9235
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9236
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9236
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9236
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9234, metadata !DIExpression()), !dbg !9235
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9237
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9238
  ret i32 %8, !dbg !9239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9240 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9246, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9247, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.value(metadata i1 %2, metadata !9248, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9249
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9250
  br i1 %4, label %5, label %6, !dbg !9253

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.110, i32 0, i32 0)) #24, !dbg !9254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9254
  unreachable, !dbg !9254

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9256
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9256
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9256
  br i1 %9, label %10, label %11, !dbg !9259

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.112, i32 0, i32 0)) #24, !dbg !9260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9260
  unreachable, !dbg !9260

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9262
  br i1 %12, label %18, label %13, !dbg !9264

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9265
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !9268
  %16 = or i1 %15, %2, !dbg !9269
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9269
  br i1 %2, label %19, label %21, !dbg !9269

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9270

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9271
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !9274
  br label %21, !dbg !9275

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9249
  ret i32 %22, !dbg !9276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9281, metadata !DIExpression()), !dbg !9282
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9283
  %3 = icmp eq %struct._snode* %2, null, !dbg !9283
  ret i1 %3, !dbg !9283
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9288, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9289, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9290, metadata !DIExpression()), !dbg !9292
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9293
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9290, metadata !DIExpression()), !dbg !9292
  %4 = icmp eq %struct._snode* %3, null, !dbg !9295
  br i1 %4, label %15, label %5, !dbg !9293

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9290, metadata !DIExpression()), !dbg !9292
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9297
  br i1 %6, label %9, label %11, !dbg !9300

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9290, metadata !DIExpression()), !dbg !9292
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9297
  br i1 %8, label %9, label %11, !dbg !9300, !llvm.loop !9301

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9302
  br label %15, !dbg !9302

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9290, metadata !DIExpression()), !dbg !9292
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9295
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9291, metadata !DIExpression()), !dbg !9292
  %14 = icmp eq %struct._snode* %13, null, !dbg !9295
  br i1 %14, label %15, label %7, !dbg !9293, !llvm.loop !9301

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !9305 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9309, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9310, metadata !DIExpression()), !dbg !9311
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9312
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9312
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9312
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9313
  %5 = icmp eq %struct._snode* %4, null, !dbg !9313
  br i1 %5, label %6, label %8, !dbg !9312

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9315
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9315
  br label %8, !dbg !9315

8:                                                ; preds = %6, %2
  ret void, !dbg !9312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9317 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9321, metadata !DIExpression()), !dbg !9322
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9323
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9323
  ret %struct._snode* %3, !dbg !9324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9325 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9329, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9330, metadata !DIExpression()), !dbg !9331
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9332
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9333
  ret void, !dbg !9334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9335 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9337, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9338, metadata !DIExpression()), !dbg !9339
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9340
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9341
  ret void, !dbg !9342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9343 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9345, metadata !DIExpression()), !dbg !9346
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9347
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9347
  ret %struct._snode* %3, !dbg !9348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9349 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9351, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9352, metadata !DIExpression()), !dbg !9353
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9354
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9355
  ret void, !dbg !9356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !9357 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9361, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9362, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9363, metadata !DIExpression()), !dbg !9364
  %4 = icmp eq %struct._snode* %1, null, !dbg !9365
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !9367
  br i1 %4, label %6, label %11, !dbg !9368

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !9369
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9371
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9371
  br i1 %8, label %9, label %15, !dbg !9369

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9373
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !9373
  br label %15, !dbg !9373

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !9375
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9377
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9377
  br i1 %13, label %14, label %15, !dbg !9375

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !9379
  br label %15, !dbg !9379

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !9368
  ret void, !dbg !9368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9381 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9385, metadata !DIExpression()), !dbg !9386
  %2 = icmp eq %struct._snode* %0, null, !dbg !9387
  br i1 %2, label %5, label %3, !dbg !9387

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9387
  br label %5, !dbg !9387

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9387
  ret %struct._snode* %6, !dbg !9387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9388 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9390, metadata !DIExpression()), !dbg !9391
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9392
  ret %struct._snode* %2, !dbg !9392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9393 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9395, metadata !DIExpression()), !dbg !9396
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9397
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9397
  ret %struct._snode* %3, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9401, metadata !DIExpression()), !dbg !9404
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !9405, !range !9406
  call void @llvm.dbg.value(metadata i32 %2, metadata !9402, metadata !DIExpression()), !dbg !9404
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !9407
  call void @llvm.dbg.value(metadata i32 %3, metadata !9403, metadata !DIExpression()), !dbg !9404
  ret i32 %3, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9412, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9413, metadata !DIExpression()), !dbg !9414
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9415
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9415
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9416
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9416
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9416
  %8 = shl nuw i32 1, %0, !dbg !9417
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !9418
  ret void, !dbg !9419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9420 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9424, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i32 %1, metadata !9425, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9426, metadata !DIExpression()), !dbg !9430
  %4 = bitcast i64* %3 to i8*, !dbg !9431
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9431
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9428, metadata !DIExpression()), !dbg !9430
  store i64 70368744177732, i64* %3, align 8, !dbg !9432
  call void @llvm.dbg.value(metadata i64* %3, metadata !9428, metadata !DIExpression(DW_OP_deref)), !dbg !9430
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %5, metadata !9429, metadata !DIExpression()), !dbg !9430
  %6 = icmp eq i32 %5, 0, !dbg !9434
  br i1 %6, label %7, label %8, !dbg !9436

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !9437
  br label %8, !dbg !9438

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9439
  ret void, !dbg !9439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9440 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9442, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %0, metadata !9443, metadata !DIExpression()), !dbg !9445
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9446
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9444, metadata !DIExpression()), !dbg !9445
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9447
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9447
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #24, !dbg !9448
  ret i32 %5, !dbg !9449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9452, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %1, metadata !9453, metadata !DIExpression()), !dbg !9455
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %3, metadata !9454, metadata !DIExpression()), !dbg !9455
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !9457
  ret void, !dbg !9458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !9459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9463, metadata !DIExpression()), !dbg !9464
  %2 = sdiv i32 %0, 4, !dbg !9465
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9466
  %6 = add nsw i32 %5, 16, !dbg !9467
  %7 = shl i32 15, %6, !dbg !9468
  %8 = or i32 %7, %2, !dbg !9469
  ret i32 %8, !dbg !9470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9475, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.value(metadata i32 %1, metadata !9476, metadata !DIExpression()), !dbg !9477
  %3 = and i32 %1, 255, !dbg !9478
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9478
  %5 = load volatile i32, i32* %4, align 4, !dbg !9478
  %6 = lshr i32 %1, 16, !dbg !9478
  %7 = xor i32 %6, -1, !dbg !9478
  %8 = and i32 %5, %7, !dbg !9478
  call void @llvm.dbg.value(metadata i32 %6, metadata !9479, metadata !DIExpression()) #23, !dbg !9483
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9485, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %9, metadata !9482, metadata !DIExpression()) #23, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %9, metadata !9487, metadata !DIExpression()) #23, !dbg !9492
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9494, !range !7509
  %11 = shl i32 %0, %10, !dbg !9478
  %12 = or i32 %11, %8, !dbg !9478
  store volatile i32 %12, i32* %4, align 4, !dbg !9478
  ret void, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9500, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9501, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 %2, metadata !9502, metadata !DIExpression()), !dbg !9505
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9506
  %5 = icmp eq %struct._snode* %4, null, !dbg !9506
  br i1 %5, label %24, label %6, !dbg !9506

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !9508
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9504, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9503, metadata !DIExpression()), !dbg !9505
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9509
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9509
  %12 = load i32, i32* %11, align 4, !dbg !9509
  %13 = and i32 %12, %2, !dbg !9513
  %14 = icmp eq i32 %13, 0, !dbg !9513
  br i1 %14, label %22, label %15, !dbg !9514

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9515
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9515
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9515
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9515
  br i1 %19, label %20, label %21, !dbg !9519

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.112, i32 0, i32 0)) #24, !dbg !9520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9520
  unreachable, !dbg !9520

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !9522
  br label %22, !dbg !9523

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9503, metadata !DIExpression()), !dbg !9505
  %23 = icmp eq %struct._snode* %8, null, !dbg !9524
  br i1 %23, label %24, label %6, !dbg !9524

24:                                               ; preds = %22, %3
  ret void, !dbg !9525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9528, metadata !DIExpression()), !dbg !9529
  %2 = and i32 %0, 255, !dbg !9530
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9530
  %4 = load volatile i32, i32* %3, align 4, !dbg !9530
  %5 = lshr i32 %0, 16, !dbg !9530
  %6 = and i32 %4, %5, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %5, metadata !9479, metadata !DIExpression()) #23, !dbg !9531
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9533, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %7, metadata !9482, metadata !DIExpression()) #23, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %7, metadata !9487, metadata !DIExpression()) #23, !dbg !9534
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9536, !range !7509
  %9 = lshr i32 %6, %8, !dbg !9537
  ret i32 %9, !dbg !9538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9539 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9544, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()), !dbg !9546
  %3 = shl i32 %1, 16, !dbg !9547
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9547
  store volatile i32 %3, i32* %4, align 4, !dbg !9547
  ret void, !dbg !9548
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9549 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9553, metadata !DIExpression()), !dbg !9554
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9555
  %3 = load volatile i32, i32* %2, align 4, !dbg !9555
  ret i32 %3, !dbg !9556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9557 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %1, metadata !9560, metadata !DIExpression()), !dbg !9561
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9562
  store volatile i32 %1, i32* %3, align 4, !dbg !9562
  ret void, !dbg !9563
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9564 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9566, metadata !DIExpression()), !dbg !9567
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9568
  %3 = load volatile i32, i32* %2, align 4, !dbg !9568
  ret i32 %3, !dbg !9569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !9570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9574, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32* %1, metadata !9575, metadata !DIExpression()), !dbg !9576
  %3 = and i32 %0, 131072, !dbg !9577
  %4 = icmp eq i32 %3, 0, !dbg !9579
  br i1 %4, label %22, label %5, !dbg !9580

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9581
  %6 = and i32 %0, 2, !dbg !9583
  %7 = icmp eq i32 %6, 0, !dbg !9585
  br i1 %7, label %11, label %8, !dbg !9586

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9587
  %10 = icmp eq i32 %9, 0, !dbg !9587
  br i1 %10, label %33, label %11, !dbg !9590

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9591
  store i32 %12, i32* %1, align 4, !dbg !9591
  %13 = and i32 %0, 16, !dbg !9592
  %14 = icmp eq i32 %13, 0, !dbg !9594
  br i1 %14, label %17, label %15, !dbg !9595

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9596
  br label %31, !dbg !9598

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9599
  %19 = icmp eq i32 %18, 0, !dbg !9601
  br i1 %19, label %33, label %20, !dbg !9602

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9603
  br label %31, !dbg !9605

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9606
  %24 = icmp eq i32 %23, 0, !dbg !9608
  br i1 %24, label %31, label %25, !dbg !9609

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9610
  %27 = icmp eq i32 %26, 0, !dbg !9613
  br i1 %27, label %28, label %31, !dbg !9614

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9615
  br label %33, !dbg !9616

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9576
  ret i32 %34, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9621, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %1, metadata !9622, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9623, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %3, metadata !9624, metadata !DIExpression()), !dbg !9632
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9633
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9633
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9633
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9625, metadata !DIExpression()), !dbg !9632
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9634
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9634
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9634
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9626, metadata !DIExpression()), !dbg !9632
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %11, metadata !9627, metadata !DIExpression()), !dbg !9632
  %12 = and i32 %2, 48, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %12, metadata !9628, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9629, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9630, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9631, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9632
  %13 = lshr i32 %2, 6, !dbg !9637
  %14 = and i32 %13, 1, !dbg !9637
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !9638
  %15 = lshr i32 %2, 7, !dbg !9639
  %16 = and i32 %15, 3, !dbg !9639
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !9640
  %17 = lshr i32 %2, 9, !dbg !9641
  %18 = and i32 %17, 3, !dbg !9641
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !9642
  %19 = icmp eq i32 %12, 32, !dbg !9643
  br i1 %19, label %20, label %24, !dbg !9645

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9646
  br i1 %21, label %22, label %23, !dbg !9649

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9650
  br label %24, !dbg !9652

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9653
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9655
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !9658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9660, metadata !DIExpression()), !dbg !9662
  %2 = shl nuw i32 1, %0, !dbg !9663
  call void @llvm.dbg.value(metadata i32 %2, metadata !9661, metadata !DIExpression()), !dbg !9662
  ret i32 %2, !dbg !9664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9665 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9669, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 %1, metadata !9670, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 %2, metadata !9671, metadata !DIExpression()), !dbg !9672
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9673
  %5 = load volatile i32, i32* %4, align 4, !dbg !9673
  %6 = xor i32 %1, -1, !dbg !9673
  %7 = and i32 %5, %6, !dbg !9673
  %8 = mul i32 %2, %1, !dbg !9673
  %9 = or i32 %7, %8, !dbg !9673
  store volatile i32 %9, i32* %4, align 4, !dbg !9673
  ret void, !dbg !9674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9675 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9677, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %1, metadata !9678, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %2, metadata !9679, metadata !DIExpression()), !dbg !9680
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9681
  %5 = load volatile i32, i32* %4, align 4, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9682
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9684, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9682
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9685
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9687, !range !7509
  %8 = shl nuw nsw i32 %7, 1, !dbg !9681
  %9 = shl i32 3, %8, !dbg !9681
  %10 = xor i32 %9, -1, !dbg !9681
  %11 = and i32 %5, %10, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9690
  %12 = shl i32 %2, %8, !dbg !9681
  %13 = or i32 %11, %12, !dbg !9681
  store volatile i32 %13, i32* %4, align 4, !dbg !9681
  ret void, !dbg !9692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9695, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %1, metadata !9696, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %2, metadata !9697, metadata !DIExpression()), !dbg !9698
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9699
  %5 = load volatile i32, i32* %4, align 4, !dbg !9699
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9700
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9702, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9700
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9703
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9705, !range !7509
  %8 = shl nuw nsw i32 %7, 1, !dbg !9699
  %9 = shl i32 3, %8, !dbg !9699
  %10 = xor i32 %9, -1, !dbg !9699
  %11 = and i32 %5, %10, !dbg !9699
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9708
  %12 = shl i32 %2, %8, !dbg !9699
  %13 = or i32 %11, %12, !dbg !9699
  store volatile i32 %13, i32* %4, align 4, !dbg !9699
  ret void, !dbg !9710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9711 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9713, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 %1, metadata !9714, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 %2, metadata !9715, metadata !DIExpression()), !dbg !9716
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9717
  %5 = load volatile i32, i32* %4, align 4, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9718
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9720, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9718
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9721
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9723, !range !7509
  %8 = shl nuw nsw i32 %7, 2, !dbg !9717
  %9 = shl i32 15, %8, !dbg !9717
  %10 = xor i32 %9, -1, !dbg !9717
  %11 = and i32 %5, %10, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9726
  %12 = shl i32 %2, %8, !dbg !9717
  %13 = or i32 %11, %12, !dbg !9717
  store volatile i32 %13, i32* %4, align 4, !dbg !9717
  ret void, !dbg !9728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9731, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %1, metadata !9732, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %2, metadata !9733, metadata !DIExpression()), !dbg !9734
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9735
  %5 = load volatile i32, i32* %4, align 4, !dbg !9735
  %6 = lshr i32 %1, 8, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %6, metadata !9479, metadata !DIExpression()) #23, !dbg !9736
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9738, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %7, metadata !9482, metadata !DIExpression()) #23, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %7, metadata !9487, metadata !DIExpression()) #23, !dbg !9739
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9741, !range !7509
  %9 = shl nuw nsw i32 %8, 2, !dbg !9735
  %10 = shl i32 15, %9, !dbg !9735
  %11 = xor i32 %10, -1, !dbg !9735
  %12 = and i32 %5, %11, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %6, metadata !9479, metadata !DIExpression()) #23, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %7, metadata !9482, metadata !DIExpression()) #23, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %7, metadata !9487, metadata !DIExpression()) #23, !dbg !9744
  %13 = shl i32 %2, %9, !dbg !9735
  %14 = or i32 %12, %13, !dbg !9735
  store volatile i32 %14, i32* %4, align 4, !dbg !9735
  ret void, !dbg !9746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9747 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9749, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i32 %1, metadata !9750, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i32 %2, metadata !9751, metadata !DIExpression()), !dbg !9752
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9753
  %5 = load volatile i32, i32* %4, align 4, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9754
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9756, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9754
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9757
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9759, !range !7509
  %8 = shl nuw nsw i32 %7, 1, !dbg !9753
  %9 = shl i32 3, %8, !dbg !9753
  %10 = xor i32 %9, -1, !dbg !9753
  %11 = and i32 %5, %10, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9762
  %12 = shl i32 %2, %8, !dbg !9753
  %13 = or i32 %11, %12, !dbg !9753
  store volatile i32 %13, i32* %4, align 4, !dbg !9753
  ret void, !dbg !9764
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9767, metadata !DIExpression()), !dbg !9770
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9771
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9771
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9771
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9768, metadata !DIExpression()), !dbg !9770
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9772
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9773
  %6 = tail call fastcc zeroext i1 @device_is_ready.123() #25, !dbg !9774
  br i1 %6, label %7, label %11, !dbg !9776

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %8, metadata !9769, metadata !DIExpression()), !dbg !9770
  %9 = icmp slt i32 %8, 0, !dbg !9778
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9780
  br label %11, !dbg !9780

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9770
  ret i32 %12, !dbg !9781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.123() unnamed_addr #1 !dbg !9782 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9786, metadata !DIExpression()), !dbg !9787
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9788, !srcloc !9790
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.124() #25, !dbg !9791
  ret i1 %1, !dbg !9792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9793 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9797, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i8 1, metadata !9798, metadata !DIExpression()), !dbg !9802
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9803
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9803
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9803
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9799, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i32 0, metadata !9800, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9801, metadata !DIExpression()), !dbg !9802
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9804
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9807
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !9808
  call void @llvm.dbg.value(metadata i32 %7, metadata !9800, metadata !DIExpression()), !dbg !9802
  ret i32 %7, !dbg !9809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.124() unnamed_addr #1 !dbg !9810 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9812, metadata !DIExpression()), !dbg !9813
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #24, !dbg !9814
  ret i1 %1, !dbg !9815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9816 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9820, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %1, metadata !9821, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %2, metadata !9822, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %3, metadata !9823, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 0, metadata !9824, metadata !DIExpression()), !dbg !9828
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !9829
  %5 = icmp eq i32 %3, 17, !dbg !9830
  br i1 %5, label %6, label %14, !dbg !9831

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9832
  call void @llvm.dbg.value(metadata i32 %7, metadata !9825, metadata !DIExpression()), !dbg !9833
  %8 = icmp eq i32 %7, 0, !dbg !9834
  %9 = shl nuw i32 1, %1, !dbg !9836
  br i1 %8, label %12, label %10, !dbg !9837

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9838
  br label %14, !dbg !9840

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9841
  br label %14, !dbg !9844

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9845
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9848, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8* %1, metadata !9849, metadata !DIExpression()), !dbg !9852
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9853
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9853
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9853
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9850, metadata !DIExpression()), !dbg !9852
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9854
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9854
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !9856
  %9 = icmp eq i32 %8, 0, !dbg !9856
  br i1 %9, label %12, label %10, !dbg !9857

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9858
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !9860
  br label %12, !dbg !9861

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9862
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9864
  %15 = icmp eq i32 %14, 0, !dbg !9864
  br i1 %15, label %19, label %16, !dbg !9865

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9866
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !9867
  store i8 %18, i8* %1, align 1, !dbg !9868
  br label %19, !dbg !9869

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9852
  ret i32 %20, !dbg !9870
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9873, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i8 %1, metadata !9874, metadata !DIExpression()), !dbg !9877
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9878
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9878
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9878
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9875, metadata !DIExpression()), !dbg !9877
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9879

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9880
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !9883
  %10 = icmp eq i32 %9, 0, !dbg !9883
  br i1 %10, label %18, label %11, !dbg !9884

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9885, !srcloc !9892
  call void @llvm.dbg.value(metadata i32 undef, metadata !9888, metadata !DIExpression()) #23, !dbg !9893
  call void @llvm.dbg.value(metadata i32 undef, metadata !9889, metadata !DIExpression()) #23, !dbg !9893
  call void @llvm.dbg.value(metadata i32 undef, metadata !9876, metadata !DIExpression()), !dbg !9877
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9894
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9896
  %15 = icmp eq i32 %14, 0, !dbg !9896
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9885
  br i1 %15, label %17, label %19, !dbg !9897

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9888, metadata !DIExpression()) #23, !dbg !9893
  call void @llvm.dbg.value(metadata i32 %16, metadata !9876, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i32 undef, metadata !9898, metadata !DIExpression()) #23, !dbg !9901
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9903, !srcloc !9904
  br label %18, !dbg !9905

18:                                               ; preds = %17, %7
  br label %7, !dbg !9880, !llvm.loop !9906

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9885
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9908
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %20, metadata !9898, metadata !DIExpression()) #23, !dbg !9910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9912, !srcloc !9904
  ret void, !dbg !9913
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9916, metadata !DIExpression()), !dbg !9919
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9920
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9920
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9920
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9917, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.value(metadata i32 0, metadata !9918, metadata !DIExpression()), !dbg !9919
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9921
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9921
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !9923
  %8 = icmp ne i32 %7, 0, !dbg !9923
  %9 = zext i1 %8 to i32, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %9, metadata !9918, metadata !DIExpression()), !dbg !9919
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9925
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !9927
  %12 = icmp eq i32 %11, 0, !dbg !9927
  %13 = or i32 %9, 2, !dbg !9928
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9928
  call void @llvm.dbg.value(metadata i32 %14, metadata !9918, metadata !DIExpression()), !dbg !9919
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9929
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !9931
  %17 = icmp eq i32 %16, 0, !dbg !9931
  %18 = or i32 %14, 4, !dbg !9932
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9932
  call void @llvm.dbg.value(metadata i32 %19, metadata !9918, metadata !DIExpression()), !dbg !9919
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9933
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !9935
  %22 = icmp eq i32 %21, 0, !dbg !9935
  %23 = or i32 %19, 8, !dbg !9936
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %24, metadata !9918, metadata !DIExpression()), !dbg !9919
  %25 = and i32 %24, 8, !dbg !9937
  %26 = icmp eq i32 %25, 0, !dbg !9937
  br i1 %26, label %29, label %27, !dbg !9939

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9940
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !9942
  br label %29, !dbg !9943

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9944
  %31 = icmp eq i32 %30, 0, !dbg !9944
  br i1 %31, label %34, label %32, !dbg !9946

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9947
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !9949
  br label %34, !dbg !9950

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9951
  %36 = icmp eq i32 %35, 0, !dbg !9951
  br i1 %36, label %39, label %37, !dbg !9953

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9954
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !9956
  br label %39, !dbg !9957

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9958
  %41 = icmp eq i32 %40, 0, !dbg !9958
  br i1 %41, label %44, label %42, !dbg !9960

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9961
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !9963
  br label %44, !dbg !9964

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9965
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !9966
  ret i32 %24, !dbg !9967
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9970, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9971, metadata !DIExpression()), !dbg !9979
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9980
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9980
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9980
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9972, metadata !DIExpression()), !dbg !9979
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9981
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9981
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9981
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9973, metadata !DIExpression()), !dbg !9979
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9982
  %10 = load i8, i8* %9, align 4, !dbg !9982
  %11 = zext i8 %10 to i32, !dbg !9983
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !9984
  call void @llvm.dbg.value(metadata i32 %12, metadata !9975, metadata !DIExpression()), !dbg !9979
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9985
  %14 = load i8, i8* %13, align 1, !dbg !9985
  %15 = zext i8 %14 to i32, !dbg !9986
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %16, metadata !9976, metadata !DIExpression()), !dbg !9979
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9988
  %18 = load i8, i8* %17, align 2, !dbg !9988
  %19 = zext i8 %18 to i32, !dbg !9989
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %20, metadata !9977, metadata !DIExpression()), !dbg !9979
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9991
  %22 = load i8, i8* %21, align 1, !dbg !9991
  %23 = zext i8 %22 to i32, !dbg !9992
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !9993
  call void @llvm.dbg.value(metadata i32 %24, metadata !9978, metadata !DIExpression()), !dbg !9979
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9994

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9996
  br i1 %26, label %69, label %27, !dbg !9998

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9999

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10000
  br i1 %29, label %65, label %30, !dbg !10000

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10002
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9979
  br i1 %31, label %38, label %34, !dbg !10004

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10005
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !10005

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10008
  br i1 %37, label %38, label %69, !dbg !10009

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10010
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !10011
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !10012
  %41 = icmp eq i32 %12, %40, !dbg !10014
  br i1 %41, label %43, label %42, !dbg !10015

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !10016
  br label %43, !dbg !10018

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !10019
  %45 = icmp eq i32 %16, %44, !dbg !10021
  br i1 %45, label %47, label %46, !dbg !10022

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !10023
  br label %47, !dbg !10025

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !10026
  %49 = icmp eq i32 %20, %48, !dbg !10028
  br i1 %49, label %51, label %50, !dbg !10029

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !10030
  br label %51, !dbg !10032

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !10033
  %53 = icmp eq i32 %24, %52, !dbg !10035
  br i1 %53, label %55, label %54, !dbg !10036

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !10037
  br label %55, !dbg !10039

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10040
  %57 = load i32, i32* %56, align 4, !dbg !10040
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10042
  %59 = load i32, i32* %58, align 4, !dbg !10042
  %60 = icmp eq i32 %57, %59, !dbg !10043
  br i1 %60, label %63, label %61, !dbg !10044

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !10045
  %62 = load i32, i32* %56, align 4, !dbg !10047
  store i32 %62, i32* %58, align 4, !dbg !10048
  br label %63, !dbg !10049

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10050
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !10051
  br label %69, !dbg !10052

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10000
  %67 = and i8 %66, 1, !dbg !10000
  %68 = icmp eq i8 %67, 0, !dbg !10000
  br i1 %68, label %30, label %69, !dbg !10000

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9979
  ret i32 %70, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10056, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10057, metadata !DIExpression()), !dbg !10059
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10060
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10060
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10060
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10058, metadata !DIExpression()), !dbg !10059
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10061
  %7 = load i32, i32* %6, align 4, !dbg !10061
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10062
  store i32 %7, i32* %8, align 4, !dbg !10063
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10064, !range !10065
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !10066
  %11 = trunc i32 %10 to i8, !dbg !10066
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10067
  store i8 %11, i8* %12, align 4, !dbg !10068
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !10069, !range !10070
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !10071
  %15 = trunc i32 %14 to i8, !dbg !10071
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10072
  store i8 %15, i8* %16, align 1, !dbg !10073
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !10074
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10075, !range !10065
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !10076
  %20 = trunc i32 %19 to i8, !dbg !10076
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10077
  store i8 %20, i8* %21, align 2, !dbg !10078
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !10079, !range !10080
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !10081
  %24 = trunc i32 %23 to i8, !dbg !10081
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10082
  store i8 %24, i8* %25, align 1, !dbg !10083
  ret i32 0, !dbg !10084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10089, metadata !DIExpression()), !dbg !10091
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10092
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10092
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10092
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10090, metadata !DIExpression()), !dbg !10091
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10093
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10093
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !10094
  ret i32 %7, !dbg !10095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !10096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10100, metadata !DIExpression()), !dbg !10101
  %2 = icmp eq i32 %0, 1024, !dbg !10102
  %3 = select i1 %2, i32 2, i32 0, !dbg !10102
  %4 = icmp eq i32 %0, 1536, !dbg !10102
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10102
  ret i32 %5, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10106, metadata !DIExpression()), !dbg !10108
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10109
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10109
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10109
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10107, metadata !DIExpression()), !dbg !10108
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10110
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10110
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !10111
  ret i32 %7, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !10113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10117, metadata !DIExpression()), !dbg !10118
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10119
  %3 = icmp ult i32 %2, 4, !dbg !10119
  br i1 %3, label %4, label %7, !dbg !10119

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10119
  %6 = load i32, i32* %5, align 4, !dbg !10119
  br label %7, !dbg !10119

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10120
  ret i32 %8, !dbg !10122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10123 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10125, metadata !DIExpression()), !dbg !10127
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10128
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10128
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10128
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10126, metadata !DIExpression()), !dbg !10127
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10129
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10129
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !10130
  ret i32 %7, !dbg !10131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10136, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 %1, metadata !10137, metadata !DIExpression()), !dbg !10138
  %3 = icmp eq i32 %0, 4096, !dbg !10139
  %4 = icmp eq i32 %1, 0, !dbg !10139
  %5 = select i1 %4, i32 4, i32 3, !dbg !10139
  %6 = select i1 %4, i32 3, i32 2, !dbg !10139
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10139
  ret i32 %7, !dbg !10140
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10143, metadata !DIExpression()), !dbg !10145
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10146
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10146
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10146
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10144, metadata !DIExpression()), !dbg !10145
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10147
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10147
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !10148
  ret i32 %7, !dbg !10149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = icmp eq i32 %0, 768, !dbg !10156
  %3 = zext i1 %2 to i32, !dbg !10155
  ret i32 %3, !dbg !10158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10164, metadata !DIExpression()), !dbg !10165
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10166
  %3 = load volatile i32, i32* %2, align 4, !dbg !10166
  %4 = and i32 %3, 768, !dbg !10166
  ret i32 %4, !dbg !10167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10168 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10170, metadata !DIExpression()), !dbg !10171
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10172
  %3 = load volatile i32, i32* %2, align 4, !dbg !10172
  %4 = and i32 %3, 4096, !dbg !10172
  ret i32 %4, !dbg !10173
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10178
  %3 = load volatile i32, i32* %2, align 4, !dbg !10178
  %4 = and i32 %3, 12288, !dbg !10178
  ret i32 %4, !dbg !10179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10180 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10182, metadata !DIExpression()), !dbg !10183
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10184
  %3 = load volatile i32, i32* %2, align 4, !dbg !10184
  %4 = and i32 %3, 1536, !dbg !10184
  ret i32 %4, !dbg !10185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !10186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10190, metadata !DIExpression()), !dbg !10191
  %2 = icmp eq i32 %0, 2, !dbg !10192
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10192
  %4 = icmp eq i32 %0, 1, !dbg !10192
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10192
  ret i32 %5, !dbg !10193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !10194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10198, metadata !DIExpression()), !dbg !10199
  %2 = icmp ult i32 %0, 3, !dbg !10200
  br i1 %2, label %3, label %6, !dbg !10200

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10200
  %5 = load i32, i32* %4, align 4, !dbg !10200
  br label %6, !dbg !10200

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10201
  ret i32 %7, !dbg !10203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10208, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %1, metadata !10209, metadata !DIExpression()), !dbg !10210
  %3 = icmp eq i32 %0, 4, !dbg !10211
  %4 = icmp eq i32 %1, 0, !dbg !10211
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10211
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10211
  ret i32 %6, !dbg !10212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10217, metadata !DIExpression()), !dbg !10218
  %2 = icmp eq i32 %0, 1, !dbg !10219
  %3 = select i1 %2, i32 768, i32 0, !dbg !10218
  ret i32 %3, !dbg !10221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10222 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10226, metadata !DIExpression()), !dbg !10227
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10228
  %3 = load volatile i32, i32* %2, align 4, !dbg !10228
  %4 = and i32 %3, -8193, !dbg !10228
  store volatile i32 %4, i32* %2, align 4, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10234, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i32 %1, metadata !10235, metadata !DIExpression()), !dbg !10237
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10238
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10238
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10238
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10236, metadata !DIExpression()), !dbg !10237
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10239
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10239
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10240
  ret void, !dbg !10241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %1, metadata !10245, metadata !DIExpression()), !dbg !10247
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10248
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10248
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10248
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10246, metadata !DIExpression()), !dbg !10247
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10249
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10249
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10250
  ret void, !dbg !10251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10254, metadata !DIExpression()), !dbg !10257
  call void @llvm.dbg.value(metadata i32 %1, metadata !10255, metadata !DIExpression()), !dbg !10257
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10258
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10258
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10258
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10256, metadata !DIExpression()), !dbg !10257
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10259
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10259
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10260
  ret void, !dbg !10261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10264, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.value(metadata i32 %1, metadata !10265, metadata !DIExpression()), !dbg !10267
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10268
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10268
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10268
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10266, metadata !DIExpression()), !dbg !10267
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10269
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10269
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10272 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10274, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i32 %1, metadata !10275, metadata !DIExpression()), !dbg !10279
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10280
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10280
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10280
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10276, metadata !DIExpression()), !dbg !10279
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10281
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10281
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10281
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10277, metadata !DIExpression()), !dbg !10279
  %10 = bitcast i32* %3 to i8*, !dbg !10282
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10282
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10283
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10283
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10287
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10287
  %15 = load i8*, i8** %14, align 4, !dbg !10287
  call void @llvm.dbg.value(metadata i32* %3, metadata !10278, metadata !DIExpression(DW_OP_deref)), !dbg !10279
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !10288
  %17 = icmp slt i32 %16, 0, !dbg !10289
  br i1 %17, label %18, label %21, !dbg !10290

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #25, !dbg !10291
  %20 = zext i8 %19 to i32, !dbg !10291
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef %20) #24, !dbg !10291
  br label %31, !dbg !10297

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10298
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10298
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #25, !dbg !10299
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10300
  %25 = load i32, i32* %3, align 4, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %25, metadata !10278, metadata !DIExpression()), !dbg !10279
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #25, !dbg !10302
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10303
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10303
  %28 = load volatile i32, i32* %27, align 4, !dbg !10303
  %29 = icmp ugt i32 %28, 16, !dbg !10303
  br i1 %29, label %31, label %30, !dbg !10306

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.132, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.133, i32 0, i32 0), i32 noundef 190) #24, !dbg !10307
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.134, i32 0, i32 0)) #24, !dbg !10307
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.133, i32 0, i32 0), i32 noundef 190) #24, !dbg !10307
  unreachable, !dbg !10307

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10309
  ret void, !dbg !10309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10310 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10312, metadata !DIExpression()), !dbg !10313
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10314
  %3 = load volatile i32, i32* %2, align 4, !dbg !10314
  %4 = or i32 %3, 8192, !dbg !10314
  store volatile i32 %4, i32* %2, align 4, !dbg !10314
  ret void, !dbg !10315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10318, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i8* %1, metadata !10319, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32* %2, metadata !10320, metadata !DIExpression()), !dbg !10322
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10323
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10323
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10323
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10321, metadata !DIExpression()), !dbg !10322
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10324
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10324
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10326
  br i1 %9, label %12, label %10, !dbg !10327

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !10328
  br label %12, !dbg !10329

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10322
  ret i32 %13, !dbg !10330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef %0) unnamed_addr #6 !dbg !10331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10333, metadata !DIExpression()), !dbg !10334
  %2 = icmp eq i32 %0, 2, !dbg !10335
  %3 = select i1 %2, i8 87, i8 63, !dbg !10335
  %4 = icmp eq i32 %0, 1, !dbg !10335
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10335
  ret i8 %5, !dbg !10336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10337 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10341, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 0, metadata !10342, metadata !DIExpression()), !dbg !10343
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10344
  %3 = load volatile i32, i32* %2, align 4, !dbg !10344
  %4 = and i32 %3, -32769, !dbg !10344
  store volatile i32 %4, i32* %2, align 4, !dbg !10344
  ret void, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10350, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %1, metadata !10351, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 0, metadata !10352, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %2, metadata !10353, metadata !DIExpression()), !dbg !10354
  %4 = zext i32 %1 to i64, !dbg !10355
  %5 = mul nuw nsw i64 %4, 25, !dbg !10355
  %6 = zext i32 %2 to i64, !dbg !10355
  %7 = shl nuw nsw i64 %6, 2, !dbg !10355
  %8 = udiv i64 %5, %7, !dbg !10355
  %9 = trunc i64 %8 to i32, !dbg !10355
  %10 = udiv i32 %9, 100, !dbg !10355
  %11 = shl nuw nsw i32 %10, 4, !dbg !10355
  %12 = mul i32 %10, -100, !dbg !10355
  %13 = add i32 %12, %9, !dbg !10355
  %14 = shl i32 %13, 4, !dbg !10355
  %15 = add i32 %14, 50, !dbg !10355
  %16 = udiv i32 %15, 100, !dbg !10355
  %17 = and i32 %16, 240, !dbg !10355
  %18 = add nuw nsw i32 %17, %11, !dbg !10355
  %19 = and i32 %16, 15, !dbg !10355
  %20 = and i32 %18, 65520, !dbg !10358
  %21 = or i32 %20, %19, !dbg !10358
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10359
  store volatile i32 %21, i32* %22, align 4, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %1, metadata !10365, metadata !DIExpression()), !dbg !10366
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10367
  %4 = load volatile i32, i32* %3, align 4, !dbg !10367
  %5 = and i32 %4, -769, !dbg !10367
  %6 = or i32 %5, %1, !dbg !10367
  store volatile i32 %6, i32* %3, align 4, !dbg !10367
  ret void, !dbg !10368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10371, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.value(metadata i32 %1, metadata !10372, metadata !DIExpression()), !dbg !10373
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10374
  %4 = load volatile i32, i32* %3, align 4, !dbg !10374
  %5 = and i32 %4, -4097, !dbg !10374
  %6 = or i32 %5, %1, !dbg !10374
  store volatile i32 %6, i32* %3, align 4, !dbg !10374
  ret void, !dbg !10375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %1, metadata !10379, metadata !DIExpression()), !dbg !10380
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10381
  %4 = load volatile i32, i32* %3, align 4, !dbg !10381
  %5 = and i32 %4, -12289, !dbg !10381
  %6 = or i32 %5, %1, !dbg !10381
  store volatile i32 %6, i32* %3, align 4, !dbg !10381
  ret void, !dbg !10382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10383 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10385, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i32 %1, metadata !10386, metadata !DIExpression()), !dbg !10387
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10388
  %4 = load volatile i32, i32* %3, align 4, !dbg !10388
  %5 = and i32 %4, -1537, !dbg !10388
  %6 = or i32 %5, %1, !dbg !10388
  store volatile i32 %6, i32* %3, align 4, !dbg !10388
  ret void, !dbg !10389
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10390 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10392, metadata !DIExpression()), !dbg !10393
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10394
  %3 = load volatile i32, i32* %2, align 4, !dbg !10394
  %4 = lshr i32 %3, 3, !dbg !10395
  %5 = and i32 %4, 1, !dbg !10395
  ret i32 %5, !dbg !10396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10399, metadata !DIExpression()), !dbg !10400
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10401
  %3 = load volatile i32, i32* %2, align 4, !dbg !10401
  %4 = and i32 %3, 1, !dbg !10401
  ret i32 %4, !dbg !10402
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10403 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10405, metadata !DIExpression()), !dbg !10406
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10407
  %3 = load volatile i32, i32* %2, align 4, !dbg !10407
  %4 = lshr i32 %3, 1, !dbg !10408
  %5 = and i32 %4, 1, !dbg !10408
  ret i32 %5, !dbg !10409
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10410 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10412, metadata !DIExpression()), !dbg !10413
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10414
  %3 = load volatile i32, i32* %2, align 4, !dbg !10414
  %4 = lshr i32 %3, 8, !dbg !10415
  %5 = and i32 %4, 1, !dbg !10415
  ret i32 %5, !dbg !10416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10417 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10419, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10421
  store volatile i32 -257, i32* %2, align 4, !dbg !10421
  ret void, !dbg !10422
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10423 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10425, metadata !DIExpression()), !dbg !10427
  %3 = bitcast i32* %2 to i8*, !dbg !10428
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10428
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10426, metadata !DIExpression()), !dbg !10429
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10430
  %5 = load volatile i32, i32* %4, align 4, !dbg !10430
  store volatile i32 %5, i32* %2, align 4, !dbg !10431
  %6 = load volatile i32, i32* %2, align 4, !dbg !10432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10433
  %8 = load volatile i32, i32* %7, align 4, !dbg !10433
  store volatile i32 %8, i32* %2, align 4, !dbg !10434
  %9 = load volatile i32, i32* %2, align 4, !dbg !10435
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10436
  ret void, !dbg !10436
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10437 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10439, metadata !DIExpression()), !dbg !10441
  %3 = bitcast i32* %2 to i8*, !dbg !10442
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10442
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10440, metadata !DIExpression()), !dbg !10443
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10444
  %5 = load volatile i32, i32* %4, align 4, !dbg !10444
  store volatile i32 %5, i32* %2, align 4, !dbg !10445
  %6 = load volatile i32, i32* %2, align 4, !dbg !10446
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10447
  %8 = load volatile i32, i32* %7, align 4, !dbg !10447
  store volatile i32 %8, i32* %2, align 4, !dbg !10448
  %9 = load volatile i32, i32* %2, align 4, !dbg !10449
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10450
  ret void, !dbg !10450
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10451 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10453, metadata !DIExpression()), !dbg !10455
  %3 = bitcast i32* %2 to i8*, !dbg !10456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10456
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10454, metadata !DIExpression()), !dbg !10457
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10458
  %5 = load volatile i32, i32* %4, align 4, !dbg !10458
  store volatile i32 %5, i32* %2, align 4, !dbg !10459
  %6 = load volatile i32, i32* %2, align 4, !dbg !10460
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10461
  %8 = load volatile i32, i32* %7, align 4, !dbg !10461
  store volatile i32 %8, i32* %2, align 4, !dbg !10462
  %9 = load volatile i32, i32* %2, align 4, !dbg !10463
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10464
  ret void, !dbg !10464
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10465 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10467, metadata !DIExpression()), !dbg !10469
  %3 = bitcast i32* %2 to i8*, !dbg !10470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10470
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10468, metadata !DIExpression()), !dbg !10471
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10472
  %5 = load volatile i32, i32* %4, align 4, !dbg !10472
  store volatile i32 %5, i32* %2, align 4, !dbg !10473
  %6 = load volatile i32, i32* %2, align 4, !dbg !10474
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10475
  %8 = load volatile i32, i32* %7, align 4, !dbg !10475
  store volatile i32 %8, i32* %2, align 4, !dbg !10476
  %9 = load volatile i32, i32* %2, align 4, !dbg !10477
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10478
  ret void, !dbg !10478
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10479 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10483
  %3 = load volatile i32, i32* %2, align 4, !dbg !10483
  %4 = lshr i32 %3, 7, !dbg !10484
  %5 = and i32 %4, 1, !dbg !10484
  ret i32 %5, !dbg !10485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10486 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10490, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i8 %1, metadata !10491, metadata !DIExpression()), !dbg !10492
  %3 = zext i8 %1 to i32, !dbg !10493
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10494
  store volatile i32 %3, i32* %4, align 4, !dbg !10495
  ret void, !dbg !10496
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10497 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10499, metadata !DIExpression()), !dbg !10500
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10501
  %3 = load volatile i32, i32* %2, align 4, !dbg !10501
  %4 = lshr i32 %3, 5, !dbg !10502
  %5 = and i32 %4, 1, !dbg !10502
  ret i32 %5, !dbg !10503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10504 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10508, metadata !DIExpression()), !dbg !10509
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10510
  %3 = load volatile i32, i32* %2, align 4, !dbg !10510
  %4 = trunc i32 %3 to i8, !dbg !10511
  ret i8 %4, !dbg !10512
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10515, metadata !DIExpression()), !dbg !10521
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10522
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10522
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10522
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10516, metadata !DIExpression()), !dbg !10521
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10523
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10523
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10523
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10517, metadata !DIExpression()), !dbg !10521
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !10524
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10525
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10525
  %10 = tail call fastcc zeroext i1 @device_is_ready.136(%struct.device* noundef %9) #25, !dbg !10527
  br i1 %10, label %14, label %11, !dbg !10528

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #25, !dbg !10529
  %13 = zext i8 %12 to i32, !dbg !10529
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.137, i32 0, i32 0), i32 noundef %13) #24, !dbg !10529
  br label %62, !dbg !10535

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10536
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10537
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10537
  %18 = load i8*, i8** %17, align 4, !dbg !10537
  %19 = tail call fastcc i32 @clock_control_on.138(%struct.device* noundef %15, i8* noundef %18) #25, !dbg !10538
  call void @llvm.dbg.value(metadata i32 %19, metadata !10520, metadata !DIExpression()), !dbg !10521
  %20 = icmp eq i32 %19, 0, !dbg !10539
  br i1 %20, label %24, label %21, !dbg !10541

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #25, !dbg !10542
  %23 = zext i8 %22 to i32, !dbg !10542
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.139, i32 0, i32 0), i32 noundef %23) #24, !dbg !10542
  br label %62, !dbg !10548

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10549
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10549
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %27, metadata !10520, metadata !DIExpression()), !dbg !10521
  %28 = icmp slt i32 %27, 0, !dbg !10551
  br i1 %28, label %62, label %29, !dbg !10553

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10554
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10554
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #25, !dbg !10555
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10556
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #25, !dbg !10557
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10558
  %34 = load i32, i32* %33, align 4, !dbg !10558
  %35 = icmp ult i32 %34, 3, !dbg !10560
  br i1 %35, label %39, label %36, !dbg !10560

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 2) #25, !dbg !10561
  %38 = zext i8 %37 to i32, !dbg !10561
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.140, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #24, !dbg !10561
  call void @llvm.dbg.value(metadata i32 0, metadata !10518, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 0, metadata !10519, metadata !DIExpression()), !dbg !10521
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10560
  %41 = load i32, i32* %40, align 4, !dbg !10560
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10560
  %43 = load i32, i32* %42, align 4, !dbg !10560
  br label %44, !dbg !10560

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10570
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10570
  call void @llvm.dbg.value(metadata i32 %46, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 %45, metadata !10518, metadata !DIExpression()), !dbg !10521
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10571
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #25, !dbg !10572
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10573
  %49 = load i8, i8* %48, align 4, !dbg !10573, !range !6672
  %50 = icmp eq i8 %49, 0, !dbg !10573
  br i1 %50, label %52, label %51, !dbg !10575

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !10576
  br label %52, !dbg !10578

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10579
  %54 = load i32, i32* %53, align 4, !dbg !10579
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #25, !dbg !10580
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10581
  %56 = load i8, i8* %55, align 4, !dbg !10581, !range !6672
  %57 = icmp eq i8 %56, 0, !dbg !10581
  br i1 %57, label %60, label %58, !dbg !10583

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10584
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #25, !dbg !10586
  br label %60, !dbg !10587

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10588
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #25, !dbg !10589
  br label %62, !dbg !10590

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10521
  ret i32 %63, !dbg !10591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !10592 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10596, metadata !DIExpression()), !dbg !10600
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10601
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10601
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10601
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10597, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10598, metadata !DIExpression()), !dbg !10600
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10602
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10603
  ret void, !dbg !10604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.136(%struct.device* noundef %0) unnamed_addr #1 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10609, metadata !DIExpression()), !dbg !10610
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10611, !srcloc !10613
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.141(%struct.device* noundef %0) #25, !dbg !10614
  ret i1 %2, !dbg !10615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.138(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10618, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i8* %1, metadata !10619, metadata !DIExpression()), !dbg !10621
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10622
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10622
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10622
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10620, metadata !DIExpression()), !dbg !10621
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10623
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10623
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !10624
  ret i32 %8, !dbg !10625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10626 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10630, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata i8 0, metadata !10631, metadata !DIExpression()), !dbg !10634
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10635
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10635
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10633, metadata !DIExpression(DW_OP_deref)), !dbg !10634
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %4, metadata !10632, metadata !DIExpression()), !dbg !10634
  %5 = icmp slt i32 %4, 0, !dbg !10637
  br i1 %5, label %9, label %6, !dbg !10639

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10640
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10633, metadata !DIExpression()), !dbg !10634
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10641
  br label %9, !dbg !10642

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10634
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10643
  ret i32 %10, !dbg !10643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10644 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10646, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 12, metadata !10647, metadata !DIExpression()), !dbg !10650
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10651

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10652, metadata !DIExpression()) #23, !dbg !10658
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10661, !srcloc !10662
  call void @llvm.dbg.value(metadata i32 %4, metadata !10657, metadata !DIExpression()) #23, !dbg !10658
  %5 = or i32 %4, 12, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %5, metadata !10648, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 %5, metadata !10665, metadata !DIExpression()) #23, !dbg !10672
  call void @llvm.dbg.value(metadata i32* %2, metadata !10670, metadata !DIExpression()) #23, !dbg !10672
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10674, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 %6, metadata !10671, metadata !DIExpression()) #23, !dbg !10672
  %7 = icmp eq i32 %6, 0, !dbg !10651
  br i1 %7, label %8, label %3, !dbg !10663, !llvm.loop !10676

8:                                                ; preds = %3
  ret void, !dbg !10677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10678 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10680, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 %1, metadata !10681, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 %2, metadata !10682, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 0, metadata !10683, metadata !DIExpression()), !dbg !10684
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10685
  %5 = load volatile i32, i32* %4, align 4, !dbg !10685
  %6 = and i32 %5, -5633, !dbg !10685
  %7 = or i32 %2, %1, !dbg !10685
  %8 = or i32 %7, %6, !dbg !10685
  store volatile i32 %8, i32* %4, align 4, !dbg !10685
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10686
  %10 = load volatile i32, i32* %9, align 4, !dbg !10686
  %11 = and i32 %10, -12289, !dbg !10686
  store volatile i32 %11, i32* %9, align 4, !dbg !10686
  ret void, !dbg !10687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10688 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10690, metadata !DIExpression()), !dbg !10691
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10692
  %3 = load volatile i32, i32* %2, align 4, !dbg !10692
  %4 = or i32 %3, 8, !dbg !10692
  store volatile i32 %4, i32* %2, align 4, !dbg !10692
  ret void, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10698, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10699, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.value(metadata i32 0, metadata !10700, metadata !DIExpression()), !dbg !10701
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10702
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10702
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10703
  %5 = load i8, i8* %4, align 4, !dbg !10703
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10704
  ret i32 %6, !dbg !10705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.141(%struct.device* noundef %0) unnamed_addr #1 !dbg !10706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10708, metadata !DIExpression()), !dbg !10709
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !10710
  ret i1 %2, !dbg !10711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10714, metadata !DIExpression()), !dbg !10715
  tail call fastcc void @__NVIC_SetPriority.143() #25, !dbg !10716
  store i32 16799, i32* @last_load, align 4, !dbg !10717
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10718
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10719
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10720
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10721
  %3 = or i32 %2, 7, !dbg !10721
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10721
  ret i32 0, !dbg !10722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.143() unnamed_addr #15 !dbg !10723 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10725, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 1, metadata !10726, metadata !DIExpression()), !dbg !10727
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10728
  ret void, !dbg !10731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10734, metadata !DIExpression()), !dbg !10736
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10737
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10738
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10739
  %5 = add i32 %4, %3, !dbg !10739
  store i32 %5, i32* @cycle_count, align 4, !dbg !10739
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10740
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10741
  %7 = sub i32 %5, %6, !dbg !10744
  %8 = udiv i32 %7, 16800, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %8, metadata !10735, metadata !DIExpression()), !dbg !10736
  %9 = mul nuw i32 %8, 16800, !dbg !10746
  %10 = add i32 %9, %6, !dbg !10747
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10747
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10748
  tail call void @z_arm_int_exit() #24, !dbg !10749
  ret void, !dbg !10750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10751 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %1, metadata !10753, metadata !DIExpression()), !dbg !10757
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %2, metadata !10754, metadata !DIExpression()), !dbg !10757
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %3, metadata !10755, metadata !DIExpression()), !dbg !10757
  %4 = and i32 %2, 65536, !dbg !10760
  %5 = icmp ne i32 %4, 0, !dbg !10760
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10762
  %8 = load i32, i32* @last_load, align 4, !dbg !10757
  br i1 %7, label %9, label %13, !dbg !10762

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10763
  %11 = add i32 %10, %8, !dbg !10763
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10763
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10765
  br label %13, !dbg !10766

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10767
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10768
  %16 = add i32 %14, %15, !dbg !10769
  ret i32 %16, !dbg !10770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10775, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata i1 %1, metadata !10776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10788
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10789
  br i1 %4, label %5, label %8, !dbg !10789

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10791
  %7 = and i32 %6, -2, !dbg !10791
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10791
  store i32 -16777216, i32* @last_load, align 4, !dbg !10793
  br label %60, !dbg !10794

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %9, metadata !10780, metadata !DIExpression()), !dbg !10788
  br i1 %3, label %18, label %10, !dbg !10796

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10796
  call void @llvm.dbg.value(metadata i32 undef, metadata !10775, metadata !DIExpression()), !dbg !10788
  %12 = icmp slt i32 %11, 1, !dbg !10797
  br i1 %12, label %18, label %13, !dbg !10797

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10797
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10797
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10797
  %17 = add nuw nsw i32 %16, 16799, !dbg !10797
  br label %18, !dbg !10797

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10775, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10798, metadata !DIExpression()) #23, !dbg !10805
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10807, !srcloc !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10805
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10815
  br i1 %21, label %23, label %22, !dbg !10818

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #24, !dbg !10819
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.147, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10819
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #24, !dbg !10819
  unreachable, !dbg !10819

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %24, metadata !10810, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %24, metadata !10804, metadata !DIExpression()) #23, !dbg !10805
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %24, metadata !10781, metadata !DIExpression()), !dbg !10788
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %25, metadata !10786, metadata !DIExpression()), !dbg !10788
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %26, metadata !10778, metadata !DIExpression()), !dbg !10788
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10824
  %28 = add i32 %27, %25, !dbg !10824
  store i32 %28, i32* @cycle_count, align 4, !dbg !10824
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10825
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10826
  %30 = sub i32 %28, %29, !dbg !10827
  call void @llvm.dbg.value(metadata i32 %30, metadata !10787, metadata !DIExpression()), !dbg !10788
  %31 = icmp slt i32 %30, 0, !dbg !10828
  br i1 %31, label %41, label %32, !dbg !10830

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10777, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata i32 undef, metadata !10777, metadata !DIExpression()), !dbg !10788
  %33 = add nuw i32 %19, %30, !dbg !10831
  %34 = urem i32 %33, 16800, !dbg !10833
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10777, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10788
  %35 = sub nuw nsw i32 %19, %34, !dbg !10834
  call void @llvm.dbg.value(metadata i32 %35, metadata !10777, metadata !DIExpression()), !dbg !10788
  %36 = icmp ugt i32 %35, 1050, !dbg !10835
  br i1 %36, label %37, label %39, !dbg !10835

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10777, metadata !DIExpression()), !dbg !10788
  %38 = icmp ugt i32 %35, 16749600, !dbg !10836
  br i1 %38, label %41, label %39, !dbg !10838

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10839
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10840
  call void @llvm.dbg.value(metadata i32 %43, metadata !10779, metadata !DIExpression()), !dbg !10788
  %44 = add nsw i32 %42, -1, !dbg !10841
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10842
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10843
  %45 = icmp ult i32 %26, %43, !dbg !10844
  br i1 %45, label %46, label %51, !dbg !10846

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10847
  %48 = add i32 %26, %9, !dbg !10849
  %49 = sub i32 %48, %43, !dbg !10850
  %50 = add i32 %49, %47, !dbg !10847
  br label %55, !dbg !10851

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10852
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10854
  %54 = add i32 %52, %53, !dbg !10854
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10855
  store i32 %56, i32* @cycle_count, align 4, !dbg !10855
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10861, metadata !DIExpression()) #23, !dbg !10862
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10864
  br i1 %57, label %59, label %58, !dbg !10867

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #24, !dbg !10868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #24, !dbg !10868
  unreachable, !dbg !10868

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10856, metadata !DIExpression()) #23, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %24, metadata !10870, metadata !DIExpression()) #23, !dbg !10873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10875, !srcloc !10876
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10877
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10878 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10798, metadata !DIExpression()) #23, !dbg !10882
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10884, !srcloc !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10882
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10887
  br i1 %2, label %4, label %3, !dbg !10888

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #24, !dbg !10889
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.147, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10889
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #24, !dbg !10889
  unreachable, !dbg !10889

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10882
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10890
  call void @llvm.dbg.value(metadata i32 undef, metadata !10880, metadata !DIExpression()), !dbg !10891
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10892
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10893
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10894
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10881, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10891
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10861, metadata !DIExpression()) #23, !dbg !10895
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10897
  br i1 %8, label %10, label %9, !dbg !10898

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #24, !dbg !10899
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #24, !dbg !10899
  unreachable, !dbg !10899

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10900
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10881, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10891
  %12 = sub i32 %11, %7, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %12, metadata !10881, metadata !DIExpression()), !dbg !10891
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %13, metadata !10810, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %13, metadata !10804, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %13, metadata !10880, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10895
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10902
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10904, !srcloc !10876
  %14 = udiv i32 %12, 16800, !dbg !10905
  ret i32 %14, !dbg !10906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10907 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10798, metadata !DIExpression()) #23, !dbg !10911
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10913, !srcloc !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10911
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10916
  br i1 %2, label %4, label %3, !dbg !10917

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #24, !dbg !10918
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.147, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #24, !dbg !10918
  unreachable, !dbg !10918

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10911
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10919
  call void @llvm.dbg.value(metadata i32 undef, metadata !10909, metadata !DIExpression()), !dbg !10920
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10921
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10922
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10910, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10861, metadata !DIExpression()) #23, !dbg !10923
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10925
  br i1 %7, label %9, label %8, !dbg !10926

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #24, !dbg !10927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #24, !dbg !10927
  unreachable, !dbg !10927

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %10, metadata !10910, metadata !DIExpression()), !dbg !10920
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10913
  call void @llvm.dbg.value(metadata i32 %11, metadata !10810, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 %11, metadata !10804, metadata !DIExpression()) #23, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %11, metadata !10909, metadata !DIExpression()), !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10923
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10931, !srcloc !10876
  ret i32 %10, !dbg !10932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10933 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10934
  %2 = icmp eq i32 %1, -16777216, !dbg !10936
  br i1 %2, label %3, label %6, !dbg !10937

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10938
  %5 = or i32 %4, 1, !dbg !10938
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10938
  br label %6, !dbg !10940

6:                                                ; preds = %3, %0
  ret void, !dbg !10941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10942 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10943
  %2 = and i32 %1, -2, !dbg !10943
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10943
  ret void, !dbg !10944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10945 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10971, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i8 %1, metadata !10972, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10973, metadata !DIExpression()), !dbg !10974
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10975
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10975
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10974
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10976
  %8 = load i8, i8* %6, align 4, !dbg !10977
  %9 = zext i8 %8 to i32, !dbg !10978
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10978
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10979
  br i1 %11, label %18, label %24, !dbg !10980

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10974
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10976
  %14 = load i8, i8* %6, align 4, !dbg !10977
  %15 = zext i8 %14 to i32, !dbg !10978
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10978
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10979
  br i1 %17, label %18, label %24, !dbg !10980, !llvm.loop !10981

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10983
  %21 = load i8, i8* %20, align 1, !dbg !10983
  %22 = icmp eq i8 %21, %1, !dbg !10986
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10987
  br i1 %22, label %24, label %12, !dbg !10988

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10974
  ret i32 %25, !dbg !10989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10990 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11001, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i8 %1, metadata !11002, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 %2, metadata !11003, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 0, metadata !11006, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 0, metadata !11007, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i8 0, metadata !11008, metadata !DIExpression()), !dbg !11018
  %4 = icmp eq i8 %1, 0, !dbg !11019
  br i1 %4, label %35, label %5, !dbg !11020

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11019
  br label %9, !dbg !11020

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11008, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i32 %29, metadata !11006, metadata !DIExpression()), !dbg !11017
  %8 = icmp eq i32 %34, %6, !dbg !11019
  br i1 %8, label %35, label %9, !dbg !11020, !llvm.loop !11021

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11008, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i32 %11, metadata !11006, metadata !DIExpression()), !dbg !11017
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11023
  %13 = load i32, i32* %12, align 4, !dbg !11023
  call void @llvm.dbg.value(metadata i32 %13, metadata !11005, metadata !DIExpression()), !dbg !11017
  %14 = and i32 %13, 31, !dbg !11024
  %15 = icmp ult i32 %14, 16, !dbg !11025
  br i1 %15, label %16, label %20, !dbg !11026

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11027
  %18 = load i32, i32* %17, align 4, !dbg !11027
  %19 = or i32 %18, 32, !dbg !11029
  call void @llvm.dbg.value(metadata i32 %19, metadata !11006, metadata !DIExpression()), !dbg !11017
  br label %28, !dbg !11030

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11031

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11032
  %23 = load i32, i32* %22, align 4, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %23, metadata !11010, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11033
  %24 = lshr i32 %23, 7, !dbg !11034
  %25 = and i32 %24, 16, !dbg !11034
  %26 = or i32 %25, %23, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %26, metadata !11006, metadata !DIExpression()), !dbg !11017
  br label %28, !dbg !11035

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11017
  call void @llvm.dbg.value(metadata i32 %29, metadata !11006, metadata !DIExpression()), !dbg !11017
  %30 = lshr i32 %13, 5, !dbg !11036
  %31 = and i32 %30, 255, !dbg !11036
  call void @llvm.dbg.value(metadata i32 %31, metadata !11004, metadata !DIExpression()), !dbg !11017
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !11037
  call void @llvm.dbg.value(metadata i32 %32, metadata !11007, metadata !DIExpression()), !dbg !11017
  %33 = icmp slt i32 %32, 0, !dbg !11038
  %34 = add nuw nsw i32 %10, 1, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %34, metadata !11008, metadata !DIExpression()), !dbg !11018
  br i1 %33, label %35, label %7, !dbg !11041

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11047, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %1, metadata !11048, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %2, metadata !11049, metadata !DIExpression()), !dbg !11051
  %4 = icmp ugt i32 %0, 175, !dbg !11052
  br i1 %4, label %16, label %5, !dbg !11054

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11055
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11056
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11056
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11050, metadata !DIExpression()), !dbg !11051
  %9 = add nsw i32 %6, -9, !dbg !11057
  %10 = icmp ult i32 %9, 2, !dbg !11057
  br i1 %10, label %16, label %11, !dbg !11059

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.156(%struct.device* noundef %8) #25, !dbg !11060
  br i1 %12, label %13, label %16, !dbg !11061

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11062
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !11063
  br label %16, !dbg !11064

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11051
  ret i32 %17, !dbg !11065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.156(%struct.device* noundef %0) unnamed_addr #1 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11070, metadata !DIExpression()), !dbg !11071
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11072, !srcloc !11074
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.157(%struct.device* noundef %0) #25, !dbg !11075
  ret i1 %2, !dbg !11076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.157(%struct.device* noundef %0) unnamed_addr #1 !dbg !11077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11079, metadata !DIExpression()), !dbg !11080
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !11081
  ret i1 %2, !dbg !11082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !11083 {
  ret void, !dbg !11084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !11085 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11087, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 0, metadata !11088, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 2, metadata !11089, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 0, metadata !11090, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 2, metadata !11091, metadata !DIExpression()), !dbg !11092
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11093
  %2 = and i32 %1, 12, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %2, metadata !11087, metadata !DIExpression()), !dbg !11092
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11095

3:                                                ; preds = %0
  br label %21, !dbg !11096

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %5, metadata !11090, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11092
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11099
  %7 = and i32 %6, 63, !dbg !11100
  call void @llvm.dbg.value(metadata i32 %7, metadata !11091, metadata !DIExpression()), !dbg !11092
  %8 = and i32 %5, 4194304, !dbg !11101
  %9 = icmp eq i32 %8, 0, !dbg !11101
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !11103
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11103
  %13 = lshr i32 %12, 6, !dbg !11103
  %14 = and i32 %13, 511, !dbg !11103
  %15 = mul i32 %14, %11, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %15, metadata !11088, metadata !DIExpression()), !dbg !11092
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11104
  %17 = lshr i32 %16, 15, !dbg !11105
  %18 = and i32 %17, 6, !dbg !11105
  %19 = add nuw nsw i32 %18, 2, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %19, metadata !11089, metadata !DIExpression()), !dbg !11092
  %20 = udiv i32 %15, %19, !dbg !11106
  br label %21, !dbg !11107

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11108
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11109
  %24 = lshr i32 %23, 4, !dbg !11110
  %25 = and i32 %24, 15, !dbg !11110
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11111
  %27 = load i8, i8* %26, align 1, !dbg !11111
  %28 = zext i8 %27 to i32, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %28, metadata !11087, metadata !DIExpression()), !dbg !11092
  %29 = lshr i32 %22, %28, !dbg !11112
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11112
  ret void, !dbg !11113
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11114 {
  ret i32 0, !dbg !11119
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11120 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11146, metadata !DIExpression()), !dbg !11157
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11158
  br i1 %3, label %311, label %4, !dbg !11160

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11161
  %6 = load i32, i32* %5, align 4, !dbg !11161
  %7 = and i32 %6, 1, !dbg !11163
  %8 = icmp eq i32 %7, 0, !dbg !11164
  br i1 %8, label %66, label %9, !dbg !11165

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11166
  %11 = and i32 %10, 12, !dbg !11166
  %12 = icmp eq i32 %11, 4, !dbg !11169
  br i1 %12, label %21, label %13, !dbg !11170

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11171
  %15 = and i32 %14, 12, !dbg !11171
  %16 = icmp eq i32 %15, 8, !dbg !11172
  br i1 %16, label %17, label %29, !dbg !11173

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11174
  %19 = and i32 %18, 4194304, !dbg !11175
  %20 = icmp eq i32 %19, 0, !dbg !11176
  br i1 %20, label %29, label %21, !dbg !11177

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11178
  %23 = and i32 %22, 131072, !dbg !11178
  %24 = icmp eq i32 %23, 0, !dbg !11178
  br i1 %24, label %66, label %25, !dbg !11181

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11182
  %27 = load i32, i32* %26, align 4, !dbg !11182
  %28 = icmp eq i32 %27, 0, !dbg !11183
  br i1 %28, label %311, label %66, !dbg !11184

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11185
  %31 = load i32, i32* %30, align 4, !dbg !11185
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11189

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11190
  %34 = or i32 %33, 65536, !dbg !11190
  br label %45, !dbg !11190

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11192
  %37 = or i32 %36, 262144, !dbg !11192
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11192
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11192
  %39 = or i32 %38, 65536, !dbg !11192
  br label %45, !dbg !11192

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11195
  %42 = and i32 %41, -65537, !dbg !11195
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11195
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11195
  %44 = and i32 %43, -262145, !dbg !11195
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11197
  %47 = load i32, i32* %30, align 4, !dbg !11198
  %48 = icmp eq i32 %47, 0, !dbg !11200
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !11201
  call void @llvm.dbg.value(metadata i32 %49, metadata !11147, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %49, metadata !11147, metadata !DIExpression()), !dbg !11157
  br i1 %48, label %58, label %50, !dbg !11202

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11203
  %52 = and i32 %51, 131072, !dbg !11205
  %53 = icmp eq i32 %52, 0, !dbg !11205
  br i1 %53, label %54, label %66, !dbg !11206

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !11207
  %56 = sub i32 %55, %49, !dbg !11210
  %57 = icmp ugt i32 %56, 100, !dbg !11211
  br i1 %57, label %311, label %50, !dbg !11212, !llvm.loop !11213

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11215
  %60 = and i32 %59, 131072, !dbg !11215
  %61 = icmp eq i32 %60, 0, !dbg !11215
  br i1 %61, label %66, label %62, !dbg !11217

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !11218
  %64 = sub i32 %63, %49, !dbg !11221
  %65 = icmp ugt i32 %64, 100, !dbg !11222
  br i1 %65, label %311, label %58, !dbg !11223, !llvm.loop !11224

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11226
  %68 = and i32 %67, 2, !dbg !11228
  %69 = icmp eq i32 %68, 0, !dbg !11229
  br i1 %69, label %121, label %70, !dbg !11230

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11231
  %72 = and i32 %71, 12, !dbg !11231
  %73 = icmp eq i32 %72, 0, !dbg !11234
  br i1 %73, label %82, label %74, !dbg !11235

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11236
  %76 = and i32 %75, 12, !dbg !11236
  %77 = icmp eq i32 %76, 8, !dbg !11237
  br i1 %77, label %78, label %90, !dbg !11238

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11239
  %80 = and i32 %79, 4194304, !dbg !11240
  %81 = icmp eq i32 %80, 0, !dbg !11241
  br i1 %81, label %82, label %90, !dbg !11242

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11243
  %84 = and i32 %83, 2, !dbg !11243
  %85 = icmp eq i32 %84, 0, !dbg !11243
  br i1 %85, label %114, label %86, !dbg !11246

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11247
  %88 = load i32, i32* %87, align 4, !dbg !11247
  %89 = icmp eq i32 %88, 1, !dbg !11248
  br i1 %89, label %114, label %311, !dbg !11249

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11250
  %92 = load i32, i32* %91, align 4, !dbg !11250
  %93 = icmp eq i32 %92, 0, !dbg !11253
  br i1 %93, label %104, label %94, !dbg !11254

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11255
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !11257
  call void @llvm.dbg.value(metadata i32 %95, metadata !11147, metadata !DIExpression()), !dbg !11157
  br label %96, !dbg !11258

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11259
  %98 = and i32 %97, 2, !dbg !11260
  %99 = icmp eq i32 %98, 0, !dbg !11260
  br i1 %99, label %100, label %114, !dbg !11258

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !11261
  %102 = sub i32 %101, %95, !dbg !11264
  %103 = icmp ugt i32 %102, 2, !dbg !11265
  br i1 %103, label %311, label %96, !dbg !11266, !llvm.loop !11267

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11269
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %105, metadata !11147, metadata !DIExpression()), !dbg !11157
  br label %106, !dbg !11272

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11273
  %108 = and i32 %107, 2, !dbg !11273
  %109 = icmp eq i32 %108, 0, !dbg !11273
  br i1 %109, label %121, label %110, !dbg !11272

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !11274
  %112 = sub i32 %111, %105, !dbg !11277
  %113 = icmp ugt i32 %112, 2, !dbg !11278
  br i1 %113, label %311, label %106, !dbg !11279, !llvm.loop !11280

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11282
  %116 = and i32 %115, -249, !dbg !11282
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11282
  %118 = load i32, i32* %117, align 4, !dbg !11282
  %119 = shl i32 %118, 3, !dbg !11282
  %120 = or i32 %119, %116, !dbg !11282
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11282
  br label %121, !dbg !11283

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11283
  %123 = and i32 %122, 8, !dbg !11285
  %124 = icmp eq i32 %123, 0, !dbg !11286
  br i1 %124, label %149, label %125, !dbg !11287

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11288
  %127 = load i32, i32* %126, align 4, !dbg !11288
  %128 = icmp eq i32 %127, 0, !dbg !11291
  br i1 %128, label %139, label %129, !dbg !11292

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11293
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !11295
  call void @llvm.dbg.value(metadata i32 %130, metadata !11147, metadata !DIExpression()), !dbg !11157
  br label %131, !dbg !11296

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11297
  %133 = and i32 %132, 2, !dbg !11298
  %134 = icmp eq i32 %133, 0, !dbg !11298
  br i1 %134, label %135, label %149, !dbg !11296

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !11299
  %137 = sub i32 %136, %130, !dbg !11302
  %138 = icmp ugt i32 %137, 2, !dbg !11303
  br i1 %138, label %311, label %131, !dbg !11304, !llvm.loop !11305

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11307
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !11309
  call void @llvm.dbg.value(metadata i32 %140, metadata !11147, metadata !DIExpression()), !dbg !11157
  br label %141, !dbg !11310

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11311
  %143 = and i32 %142, 2, !dbg !11311
  %144 = icmp eq i32 %143, 0, !dbg !11311
  br i1 %144, label %149, label %145, !dbg !11310

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !11312
  %147 = sub i32 %146, %140, !dbg !11315
  %148 = icmp ugt i32 %147, 2, !dbg !11316
  br i1 %148, label %311, label %141, !dbg !11317, !llvm.loop !11318

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11320
  %151 = and i32 %150, 4, !dbg !11321
  %152 = icmp eq i32 %151, 0, !dbg !11322
  br i1 %152, label %221, label %153, !dbg !11323

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11149, metadata !DIExpression()), !dbg !11324
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11325
  %155 = and i32 %154, 268435456, !dbg !11325
  %156 = icmp eq i32 %155, 0, !dbg !11325
  br i1 %156, label %157, label %164, !dbg !11326

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11327
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11327
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11153, metadata !DIExpression()), !dbg !11327
  store volatile i32 0, i32* %2, align 4, !dbg !11327
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11327
  %160 = or i32 %159, 268435456, !dbg !11327
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11327
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11327
  %162 = and i32 %161, 268435456, !dbg !11327
  store volatile i32 %162, i32* %2, align 4, !dbg !11327
  %163 = load volatile i32, i32* %2, align 4, !dbg !11327
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11328
  call void @llvm.dbg.value(metadata i32 1, metadata !11149, metadata !DIExpression()), !dbg !11324
  br label %164, !dbg !11329

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11149, metadata !DIExpression()), !dbg !11324
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11330
  %166 = and i32 %165, 256, !dbg !11330
  %167 = icmp eq i32 %166, 0, !dbg !11330
  br i1 %167, label %168, label %180, !dbg !11332

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11333
  %170 = or i32 %169, 256, !dbg !11333
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11333
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %171, metadata !11147, metadata !DIExpression()), !dbg !11157
  br label %172, !dbg !11336

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11337
  %174 = and i32 %173, 256, !dbg !11337
  %175 = icmp eq i32 %174, 0, !dbg !11337
  br i1 %175, label %176, label %180, !dbg !11336

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !11338
  %178 = sub i32 %177, %171, !dbg !11341
  %179 = icmp ugt i32 %178, 2, !dbg !11342
  br i1 %179, label %311, label %172, !dbg !11343, !llvm.loop !11344

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11346
  %182 = load i32, i32* %181, align 4, !dbg !11346
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11349

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11350
  %185 = or i32 %184, 1, !dbg !11350
  br label %196, !dbg !11350

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11352
  %188 = or i32 %187, 4, !dbg !11352
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11352
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11352
  %190 = or i32 %189, 1, !dbg !11352
  br label %196, !dbg !11352

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11355
  %193 = and i32 %192, -2, !dbg !11355
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11355
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11355
  %195 = and i32 %194, -5, !dbg !11355
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11357
  %198 = load i32, i32* %181, align 4, !dbg !11358
  %199 = icmp eq i32 %198, 0, !dbg !11360
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %200, metadata !11147, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %200, metadata !11147, metadata !DIExpression()), !dbg !11157
  br i1 %199, label %209, label %201, !dbg !11362

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11363
  %203 = and i32 %202, 2, !dbg !11365
  %204 = icmp eq i32 %203, 0, !dbg !11365
  br i1 %204, label %205, label %217, !dbg !11366

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !11367
  %207 = sub i32 %206, %200, !dbg !11370
  %208 = icmp ugt i32 %207, 5000, !dbg !11371
  br i1 %208, label %311, label %201, !dbg !11372, !llvm.loop !11373

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11375
  %211 = and i32 %210, 2, !dbg !11375
  %212 = icmp eq i32 %211, 0, !dbg !11375
  br i1 %212, label %217, label %213, !dbg !11377

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !11378
  %215 = sub i32 %214, %200, !dbg !11381
  %216 = icmp ugt i32 %215, 5000, !dbg !11382
  br i1 %216, label %311, label %209, !dbg !11383, !llvm.loop !11384

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11386

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11387
  %220 = and i32 %219, -268435457, !dbg !11387
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11387
  br label %221, !dbg !11390

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11391
  %223 = load i32, i32* %222, align 4, !dbg !11391
  %224 = icmp eq i32 %223, 0, !dbg !11393
  br i1 %224, label %310, label %225, !dbg !11394

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11395
  %227 = and i32 %226, 12, !dbg !11395
  %228 = icmp eq i32 %227, 8, !dbg !11398
  br i1 %228, label %277, label %229, !dbg !11399

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11400
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11403
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %231, metadata !11147, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %231, metadata !11147, metadata !DIExpression()), !dbg !11157
  br i1 %230, label %232, label %269, !dbg !11404

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11405
  %234 = and i32 %233, 33554432, !dbg !11405
  %235 = icmp eq i32 %234, 0, !dbg !11405
  br i1 %235, label %240, label %236, !dbg !11407

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !11408
  %238 = sub i32 %237, %231, !dbg !11411
  %239 = icmp ugt i32 %238, 2, !dbg !11412
  br i1 %239, label %311, label %232, !dbg !11413, !llvm.loop !11414

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11416
  %242 = load i32, i32* %241, align 4, !dbg !11416
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11416
  %244 = load i32, i32* %243, align 4, !dbg !11416
  %245 = or i32 %244, %242, !dbg !11416
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11416
  %247 = load i32, i32* %246, align 4, !dbg !11416
  %248 = shl i32 %247, 6, !dbg !11416
  %249 = or i32 %245, %248, !dbg !11416
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11416
  %251 = load i32, i32* %250, align 4, !dbg !11416
  %252 = shl i32 %251, 15, !dbg !11416
  %253 = add i32 %252, -65536, !dbg !11416
  %254 = and i32 %253, -65536, !dbg !11416
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11416
  %256 = load i32, i32* %255, align 4, !dbg !11416
  %257 = shl i32 %256, 24, !dbg !11416
  %258 = or i32 %249, %257, !dbg !11416
  %259 = or i32 %258, %254, !dbg !11416
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11416
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11417
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !11418
  call void @llvm.dbg.value(metadata i32 %260, metadata !11147, metadata !DIExpression()), !dbg !11157
  br label %261, !dbg !11419

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11420
  %263 = and i32 %262, 33554432, !dbg !11421
  %264 = icmp eq i32 %263, 0, !dbg !11421
  br i1 %264, label %265, label %310, !dbg !11419

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !11422
  %267 = sub i32 %266, %260, !dbg !11425
  %268 = icmp ugt i32 %267, 2, !dbg !11426
  br i1 %268, label %311, label %261, !dbg !11427, !llvm.loop !11428

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11430
  %271 = and i32 %270, 33554432, !dbg !11430
  %272 = icmp eq i32 %271, 0, !dbg !11430
  br i1 %272, label %310, label %273, !dbg !11432

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !11433
  %275 = sub i32 %274, %231, !dbg !11436
  %276 = icmp ugt i32 %275, 2, !dbg !11437
  br i1 %276, label %311, label %269, !dbg !11438, !llvm.loop !11439

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11441
  br i1 %278, label %311, label %279, !dbg !11444

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11445
  call void @llvm.dbg.value(metadata i32 %280, metadata !11148, metadata !DIExpression()), !dbg !11157
  %281 = and i32 %280, 4194304, !dbg !11447
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11449
  %283 = load i32, i32* %282, align 4, !dbg !11449
  %284 = icmp eq i32 %281, %283, !dbg !11450
  br i1 %284, label %285, label %311, !dbg !11451

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11452
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11453
  %288 = load i32, i32* %287, align 4, !dbg !11453
  %289 = icmp eq i32 %286, %288, !dbg !11454
  br i1 %289, label %290, label %311, !dbg !11455

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11456
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11457
  %293 = load i32, i32* %292, align 4, !dbg !11457
  %294 = shl i32 %293, 6, !dbg !11458
  %295 = icmp eq i32 %291, %294, !dbg !11459
  br i1 %295, label %296, label %311, !dbg !11460

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11461
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11462
  %299 = load i32, i32* %298, align 4, !dbg !11462
  %300 = shl i32 %299, 15, !dbg !11463
  %301 = add i32 %300, -65536, !dbg !11463
  %302 = and i32 %301, -65536, !dbg !11463
  %303 = icmp eq i32 %297, %302, !dbg !11464
  br i1 %303, label %304, label %311, !dbg !11465

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11466
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11467
  %307 = load i32, i32* %306, align 4, !dbg !11467
  %308 = shl i32 %307, 24, !dbg !11468
  %309 = icmp eq i32 %305, %308, !dbg !11469
  br i1 %309, label %310, label %311, !dbg !11470

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11471

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11157
  ret i32 %312, !dbg !11472
}

; Function Attrs: optsize
declare !dbg !11473 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11475 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11488, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.value(metadata i32 %1, metadata !11489, metadata !DIExpression()), !dbg !11491
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11492
  br i1 %3, label %115, label %4, !dbg !11494

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11495
  %6 = and i32 %5, 7, !dbg !11495
  %7 = icmp ult i32 %6, %1, !dbg !11497
  br i1 %7, label %8, label %13, !dbg !11498

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11499
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11499
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11501
  %11 = and i32 %10, 7, !dbg !11501
  %12 = icmp eq i32 %11, %1, !dbg !11503
  br i1 %12, label %13, label %115, !dbg !11504

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11505
  %15 = load i32, i32* %14, align 4, !dbg !11505
  %16 = and i32 %15, 2, !dbg !11507
  %17 = icmp eq i32 %16, 0, !dbg !11508
  br i1 %17, label %39, label %18, !dbg !11509

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11510
  %20 = icmp eq i32 %19, 0, !dbg !11513
  br i1 %20, label %25, label %21, !dbg !11514

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11515
  %23 = or i32 %22, 7168, !dbg !11515
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11515
  %24 = load i32, i32* %14, align 4, !dbg !11517
  br label %25, !dbg !11519

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11517
  %27 = and i32 %26, 8, !dbg !11520
  %28 = icmp eq i32 %27, 0, !dbg !11521
  br i1 %28, label %32, label %29, !dbg !11522

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11523
  %31 = or i32 %30, 57344, !dbg !11523
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11523
  br label %32, !dbg !11525

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11526
  %34 = and i32 %33, -241, !dbg !11526
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11526
  %36 = load i32, i32* %35, align 4, !dbg !11526
  %37 = or i32 %34, %36, !dbg !11526
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11526
  %38 = load i32, i32* %14, align 4, !dbg !11527
  br label %39, !dbg !11529

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11527
  %41 = and i32 %40, 1, !dbg !11530
  %42 = icmp eq i32 %41, 0, !dbg !11531
  br i1 %42, label %73, label %43, !dbg !11532

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11533
  %45 = load i32, i32* %44, align 4, !dbg !11533
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11536

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11537
  %48 = and i32 %47, 131072, !dbg !11540
  %49 = icmp eq i32 %48, 0, !dbg !11540
  br i1 %49, label %115, label %58, !dbg !11541

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11542
  %52 = and i32 %51, 33554432, !dbg !11546
  %53 = icmp eq i32 %52, 0, !dbg !11546
  br i1 %53, label %115, label %58, !dbg !11547

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11548
  %56 = and i32 %55, 2, !dbg !11551
  %57 = icmp eq i32 %56, 0, !dbg !11551
  br i1 %57, label %115, label %58, !dbg !11552

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11553
  %60 = and i32 %59, -4, !dbg !11553
  %61 = or i32 %60, %45, !dbg !11553
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11553
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %62, metadata !11490, metadata !DIExpression()), !dbg !11491
  br label %63, !dbg !11555

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11556
  %65 = and i32 %64, 12, !dbg !11556
  %66 = load i32, i32* %44, align 4, !dbg !11557
  %67 = shl i32 %66, 2, !dbg !11558
  %68 = icmp eq i32 %65, %67, !dbg !11559
  br i1 %68, label %73, label %69, !dbg !11555

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !11560
  %71 = sub i32 %70, %62, !dbg !11563
  %72 = icmp ugt i32 %71, 5000, !dbg !11564
  br i1 %72, label %115, label %63, !dbg !11565, !llvm.loop !11566

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11568
  %75 = and i32 %74, 7, !dbg !11568
  %76 = icmp ugt i32 %75, %1, !dbg !11570
  br i1 %76, label %77, label %82, !dbg !11571

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11572
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11572
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11574
  %80 = and i32 %79, 7, !dbg !11574
  %81 = icmp eq i32 %80, %1, !dbg !11576
  br i1 %81, label %82, label %115, !dbg !11577

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11578
  %84 = and i32 %83, 4, !dbg !11580
  %85 = icmp eq i32 %84, 0, !dbg !11581
  br i1 %85, label %93, label %86, !dbg !11582

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11583
  %88 = and i32 %87, -7169, !dbg !11583
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11583
  %90 = load i32, i32* %89, align 4, !dbg !11583
  %91 = or i32 %88, %90, !dbg !11583
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11583
  %92 = load i32, i32* %14, align 4, !dbg !11585
  br label %93, !dbg !11587

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11585
  %95 = and i32 %94, 8, !dbg !11588
  %96 = icmp eq i32 %95, 0, !dbg !11589
  br i1 %96, label %104, label %97, !dbg !11590

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11591
  %99 = and i32 %98, -57345, !dbg !11591
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11591
  %101 = load i32, i32* %100, align 4, !dbg !11591
  %102 = shl i32 %101, 3, !dbg !11591
  %103 = or i32 %102, %99, !dbg !11591
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11591
  br label %104, !dbg !11593

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !11594
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11595
  %107 = lshr i32 %106, 4, !dbg !11596
  %108 = and i32 %107, 15, !dbg !11596
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11597
  %110 = load i8, i8* %109, align 1, !dbg !11597
  %111 = zext i8 %110 to i32, !dbg !11597
  %112 = lshr i32 %105, %111, !dbg !11598
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11599
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11600
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !11601
  br label %115, !dbg !11602

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11491
  ret i32 %116, !dbg !11603
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11604 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11606, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 0, metadata !11607, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 0, metadata !11608, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 0, metadata !11609, metadata !DIExpression()), !dbg !11610
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11611
  %2 = and i32 %1, 12, !dbg !11612
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11613

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !11609, metadata !DIExpression()), !dbg !11610
  br label %24, !dbg !11614

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11617
  %6 = and i32 %5, 63, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %6, metadata !11606, metadata !DIExpression()), !dbg !11610
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11620
  %8 = and i32 %7, 4194304, !dbg !11620
  %9 = icmp eq i32 %8, 0, !dbg !11622
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11623
  %11 = lshr i32 %10, 6, !dbg !11623
  %12 = and i32 %11, 511, !dbg !11623
  %13 = zext i32 %12 to i64, !dbg !11623
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11623
  %16 = zext i32 %6 to i64, !dbg !11623
  %17 = udiv i64 %15, %16, !dbg !11623
  %18 = trunc i64 %17 to i32, !dbg !11623
  call void @llvm.dbg.value(metadata i32 %18, metadata !11607, metadata !DIExpression()), !dbg !11610
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11624
  %20 = lshr i32 %19, 15, !dbg !11625
  %21 = and i32 %20, 6, !dbg !11625
  %22 = add nuw nsw i32 %21, 2, !dbg !11625
  call void @llvm.dbg.value(metadata i32 %22, metadata !11608, metadata !DIExpression()), !dbg !11610
  %23 = udiv i32 %18, %22, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %23, metadata !11609, metadata !DIExpression()), !dbg !11610
  br label %24, !dbg !11627

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !11628
  call void @llvm.dbg.value(metadata i32 %25, metadata !11609, metadata !DIExpression()), !dbg !11610
  ret i32 %25, !dbg !11629
}

; Function Attrs: optsize
declare !dbg !11630 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11633 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11637, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i32 %1, metadata !11638, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i32 %2, metadata !11639, metadata !DIExpression()), !dbg !11657
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11658
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11658
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11640, metadata !DIExpression()), !dbg !11659
  %8 = icmp eq i32 %0, 0, !dbg !11660
  br i1 %8, label %9, label %23, !dbg !11661

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11662
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11662
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11650, metadata !DIExpression()), !dbg !11662
  store volatile i32 0, i32* %5, align 4, !dbg !11662
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11662
  %12 = or i32 %11, 1, !dbg !11662
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11662
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11662
  %14 = and i32 %13, 1, !dbg !11662
  store volatile i32 %14, i32* %5, align 4, !dbg !11662
  %15 = load volatile i32, i32* %5, align 4, !dbg !11662
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11663
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11664
  store i32 256, i32* %16, align 4, !dbg !11665
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11666
  store i32 2, i32* %17, align 4, !dbg !11667
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11668
  store i32 3, i32* %18, align 4, !dbg !11669
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11670
  store i32 0, i32* %19, align 4, !dbg !11671
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11672
  store i32 0, i32* %20, align 4, !dbg !11673
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11674
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11675
  %22 = and i32 %21, -123731969, !dbg !11675
  br label %38, !dbg !11676

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11677
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11677
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11654, metadata !DIExpression()), !dbg !11677
  store volatile i32 0, i32* %6, align 4, !dbg !11677
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11677
  %26 = or i32 %25, 4, !dbg !11677
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11677
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11677
  %28 = and i32 %27, 4, !dbg !11677
  store volatile i32 %28, i32* %6, align 4, !dbg !11677
  %29 = load volatile i32, i32* %6, align 4, !dbg !11677
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11678
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11679
  store i32 512, i32* %30, align 4, !dbg !11680
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11681
  store i32 2, i32* %31, align 4, !dbg !11682
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11683
  store i32 3, i32* %32, align 4, !dbg !11684
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11685
  store i32 0, i32* %33, align 4, !dbg !11686
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11687
  store i32 0, i32* %34, align 4, !dbg !11688
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11689
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11690
  %36 = and i32 %35, 134217727, !dbg !11690
  %37 = shl i32 %2, 3, !dbg !11690
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11691
  %42 = or i32 %41, %40, !dbg !11691
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11691
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11692
  ret void, !dbg !11692
}

; Function Attrs: optsize
declare !dbg !11693 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11697 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11698
  ret void, !dbg !11699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11700 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11701
  ret void, !dbg !11702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !11703 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11704
  ret i32 %1, !dbg !11705
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !11706 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11707
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11708
  %3 = lshr i32 %2, 10, !dbg !11709
  %4 = and i32 %3, 7, !dbg !11709
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11710
  %6 = load i8, i8* %5, align 1, !dbg !11710
  %7 = zext i8 %6 to i32, !dbg !11710
  %8 = lshr i32 %1, %7, !dbg !11711
  ret i32 %8, !dbg !11712
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !11713 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11714
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11715
  %3 = lshr i32 %2, 13, !dbg !11716
  %4 = and i32 %3, 7, !dbg !11716
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11717
  %6 = load i8, i8* %5, align 1, !dbg !11717
  %7 = zext i8 %6 to i32, !dbg !11717
  %8 = lshr i32 %1, %7, !dbg !11718
  ret i32 %8, !dbg !11719
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11720 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11724, metadata !DIExpression()), !dbg !11725
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11726
  store i32 15, i32* %2, align 4, !dbg !11727
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11728
  %4 = and i32 %3, 262144, !dbg !11730
  %5 = icmp eq i32 %4, 0, !dbg !11731
  br i1 %5, label %8, label %6, !dbg !11732

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11733
  store i32 327680, i32* %7, align 4, !dbg !11735
  br label %15, !dbg !11736

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11737
  %10 = and i32 %9, 65536, !dbg !11739
  %11 = icmp eq i32 %10, 0, !dbg !11740
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11741
  br i1 %11, label %14, label %13, !dbg !11742

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11743
  br label %15, !dbg !11745

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11746
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11748
  %17 = and i32 %16, 1, !dbg !11750
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11751
  store i32 %17, i32* %18, align 4, !dbg !11753
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11754
  %20 = lshr i32 %19, 3, !dbg !11755
  %21 = and i32 %20, 31, !dbg !11755
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11756
  store i32 %21, i32* %22, align 4, !dbg !11757
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11758
  %24 = and i32 %23, 4, !dbg !11760
  %25 = icmp eq i32 %24, 0, !dbg !11761
  br i1 %25, label %28, label %26, !dbg !11762

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11763
  store i32 5, i32* %27, align 4, !dbg !11765
  br label %35, !dbg !11766

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11767
  %30 = and i32 %29, 1, !dbg !11769
  %31 = icmp eq i32 %30, 0, !dbg !11770
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11771
  br i1 %31, label %34, label %33, !dbg !11772

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11773
  br label %35, !dbg !11775

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11776
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11778
  %37 = and i32 %36, 1, !dbg !11780
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11781
  store i32 %37, i32* %38, align 4, !dbg !11783
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11784
  %40 = and i32 %39, 16777216, !dbg !11786
  %41 = icmp eq i32 %40, 0, !dbg !11787
  %42 = select i1 %41, i32 1, i32 2, !dbg !11788
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11789
  store i32 %42, i32* %43, align 4, !dbg !11791
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11792
  %45 = and i32 %44, 4194304, !dbg !11793
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11794
  store i32 %45, i32* %46, align 4, !dbg !11795
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11796
  %48 = and i32 %47, 63, !dbg !11797
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11798
  store i32 %48, i32* %49, align 4, !dbg !11799
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11800
  %51 = lshr i32 %50, 6, !dbg !11801
  %52 = and i32 %51, 511, !dbg !11801
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11802
  store i32 %52, i32* %53, align 4, !dbg !11803
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11804
  %55 = shl i32 %54, 1, !dbg !11805
  %56 = and i32 %55, 393216, !dbg !11805
  %57 = add nuw nsw i32 %56, 131072, !dbg !11805
  %58 = lshr exact i32 %57, 16, !dbg !11806
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11807
  store i32 %58, i32* %59, align 4, !dbg !11808
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11809
  %61 = lshr i32 %60, 24, !dbg !11810
  %62 = and i32 %61, 15, !dbg !11810
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11811
  store i32 %62, i32* %63, align 4, !dbg !11812
  ret void, !dbg !11813
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !11814 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11818, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32* %1, metadata !11819, metadata !DIExpression()), !dbg !11820
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11821
  store i32 15, i32* %3, align 4, !dbg !11822
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11823
  %5 = and i32 %4, 3, !dbg !11824
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11825
  store i32 %5, i32* %6, align 4, !dbg !11826
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11827
  %8 = and i32 %7, 240, !dbg !11828
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11829
  store i32 %8, i32* %9, align 4, !dbg !11830
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11831
  %11 = and i32 %10, 7168, !dbg !11832
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11833
  store i32 %11, i32* %12, align 4, !dbg !11834
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11835
  %14 = lshr i32 %13, 3, !dbg !11836
  %15 = and i32 %14, 7168, !dbg !11836
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11837
  store i32 %15, i32* %16, align 4, !dbg !11838
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11839
  %18 = and i32 %17, 7, !dbg !11840
  store i32 %18, i32* %1, align 4, !dbg !11841
  ret void, !dbg !11842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11843 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11844
  %2 = and i32 %1, 128, !dbg !11844
  %3 = icmp eq i32 %2, 0, !dbg !11844
  br i1 %3, label %5, label %4, !dbg !11846

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !11847
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11849
  br label %5, !dbg !11850

5:                                                ; preds = %4, %0
  ret void, !dbg !11851
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11852 {
  ret void, !dbg !11853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11857, metadata !DIExpression()), !dbg !11858
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !11859
  ret void, !dbg !11860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11864, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i32 1000, metadata !11865, metadata !DIExpression()), !dbg !11866
  %2 = udiv i32 %0, 1000, !dbg !11867
  %3 = add nsw i32 %2, -1, !dbg !11868
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11869
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11870
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11871
  ret void, !dbg !11872
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11873 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11875, metadata !DIExpression()), !dbg !11877
  %3 = bitcast i32* %2 to i8*, !dbg !11878
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11878
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11876, metadata !DIExpression()), !dbg !11879
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11880
  store volatile i32 %4, i32* %2, align 4, !dbg !11879
  %5 = load volatile i32, i32* %2, align 4, !dbg !11881
  %6 = icmp eq i32 %0, -1, !dbg !11882
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11875, metadata !DIExpression()), !dbg !11877
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %8, metadata !11875, metadata !DIExpression()), !dbg !11877
  br label %9, !dbg !11884

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11875, metadata !DIExpression()), !dbg !11877
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11885
  call void @llvm.dbg.value(metadata i32 undef, metadata !11875, metadata !DIExpression()), !dbg !11877
  %12 = shl i32 %11, 15, !dbg !11877
  %13 = ashr i32 %12, 31, !dbg !11877
  %14 = add i32 %13, %10, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %14, metadata !11875, metadata !DIExpression()), !dbg !11877
  %15 = icmp eq i32 %14, 0, !dbg !11884
  br i1 %15, label %16, label %9, !dbg !11884

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11888
  ret void, !dbg !11888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !11889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11891, metadata !DIExpression()), !dbg !11892
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11893
  ret void, !dbg !11894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11900, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i32 0, metadata !11903, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i32 0, metadata !11904, metadata !DIExpression()), !dbg !11905
  %2 = icmp eq i32 %0, 0, !dbg !11906
  br i1 %2, label %52, label %3, !dbg !11908

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11909
  %5 = icmp eq i32 %4, 16384, !dbg !11912
  br i1 %5, label %6, label %21, !dbg !11913

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11914
  %8 = select i1 %7, i32 0, i32 5, !dbg !11917
  call void @llvm.dbg.value(metadata i32 %8, metadata !11903, metadata !DIExpression()), !dbg !11905
  %9 = add i32 %0, -120000001, !dbg !11918
  %10 = icmp ult i32 %9, 30000000, !dbg !11918
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %11, metadata !11903, metadata !DIExpression()), !dbg !11905
  %12 = icmp ult i32 %9, -30000000, !dbg !11920
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11920
  call void @llvm.dbg.value(metadata i32 %13, metadata !11903, metadata !DIExpression()), !dbg !11905
  %14 = icmp ugt i32 %0, 60000000, !dbg !11922
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11924
  br i1 %16, label %21, label %17, !dbg !11924

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11925
  %19 = and i1 %18, %15, !dbg !11928
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11928
  br label %21, !dbg !11928

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11905
  call void @llvm.dbg.value(metadata i32 %22, metadata !11903, metadata !DIExpression()), !dbg !11905
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11929
  %24 = icmp eq i32 %23, 0, !dbg !11931
  br i1 %24, label %25, label %41, !dbg !11932

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !11933
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11936
  %29 = select i1 %28, i32 4, i32 %22, !dbg !11936
  call void @llvm.dbg.value(metadata i32 %29, metadata !11903, metadata !DIExpression()), !dbg !11905
  %30 = icmp ugt i32 %0, 90000000, !dbg !11937
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11939
  %33 = select i1 %32, i32 3, i32 %29, !dbg !11939
  call void @llvm.dbg.value(metadata i32 %33, metadata !11903, metadata !DIExpression()), !dbg !11905
  %34 = icmp ugt i32 %0, 60000000, !dbg !11940
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !11942
  br i1 %36, label %41, label %37, !dbg !11942

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !11943
  %39 = and i1 %38, %35, !dbg !11946
  %40 = select i1 %39, i32 1, i32 %33, !dbg !11946
  br label %41, !dbg !11946

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !11947
  call void @llvm.dbg.value(metadata i32 %42, metadata !11903, metadata !DIExpression()), !dbg !11905
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #25, !dbg !11948
  call void @llvm.dbg.value(metadata i32 2, metadata !11901, metadata !DIExpression()), !dbg !11905
  br label %43, !dbg !11949

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !11947
  call void @llvm.dbg.value(metadata i32 %44, metadata !11901, metadata !DIExpression()), !dbg !11905
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !11950
  call void @llvm.dbg.value(metadata i32 %45, metadata !11902, metadata !DIExpression()), !dbg !11905
  %46 = add nsw i32 %44, -1, !dbg !11952
  call void @llvm.dbg.value(metadata i32 %46, metadata !11901, metadata !DIExpression()), !dbg !11905
  %47 = icmp ne i32 %45, %42, !dbg !11953
  %48 = icmp ne i32 %46, 0, !dbg !11954
  %49 = select i1 %47, i1 %48, i1 false, !dbg !11954
  br i1 %49, label %43, label %50, !dbg !11955, !llvm.loop !11956

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !11958
  call void @llvm.dbg.value(metadata i32 %53, metadata !11904, metadata !DIExpression()), !dbg !11905
  ret i32 %53, !dbg !11959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !11960 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11962
  %2 = and i32 %1, 16384, !dbg !11962
  ret i32 %2, !dbg !11963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11966, metadata !DIExpression()), !dbg !11967
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11968
  %3 = and i32 %2, -8, !dbg !11968
  %4 = or i32 %3, %0, !dbg !11968
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11968
  ret void, !dbg !11969
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !11970 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11971
  %2 = and i32 %1, 7, !dbg !11971
  ret i32 %2, !dbg !11972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11973 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11991, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11992, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i32 0, metadata !11993, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i32 0, metadata !11994, metadata !DIExpression()), !dbg !11995
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !11996
  %4 = icmp eq i32 %3, 0, !dbg !11998
  br i1 %4, label %5, label %21, !dbg !11999

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !12000
  call void @llvm.dbg.value(metadata i32 %6, metadata !11994, metadata !DIExpression()), !dbg !11995
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.166() #25, !dbg !12002
  %8 = icmp eq i32 %7, 1, !dbg !12004
  br i1 %8, label %13, label %9, !dbg !12005

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.167() #25, !dbg !12006
  br label %10, !dbg !12008

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.166() #25, !dbg !12009
  %12 = icmp eq i32 %11, 1, !dbg !12010
  br i1 %12, label %13, label %10, !dbg !12008, !llvm.loop !12011

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12013
  %15 = load i32, i32* %14, align 4, !dbg !12013
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12014
  %17 = load i32, i32* %16, align 4, !dbg !12014
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12015
  %19 = load i32, i32* %18, align 4, !dbg !12015
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.168(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !12016
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %20, metadata !11993, metadata !DIExpression()), !dbg !11995
  br label %21, !dbg !12018

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12019
  call void @llvm.dbg.value(metadata i32 %22, metadata !11993, metadata !DIExpression()), !dbg !11995
  ret i32 %22, !dbg !12020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !12021 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12025, metadata !DIExpression()), !dbg !12026
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.170() #25, !dbg !12027
  %2 = icmp ne i32 %1, 0, !dbg !12029
  call void @llvm.dbg.value(metadata i1 %2, metadata !12025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12026
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !12030
  %4 = icmp ne i32 %3, 0, !dbg !12032
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12033
  %6 = zext i1 %5 to i32, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %6, metadata !12025, metadata !DIExpression()), !dbg !12026
  ret i32 %6, !dbg !12034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !12035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12039, metadata !DIExpression()), !dbg !12042
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12040, metadata !DIExpression()), !dbg !12042
  call void @llvm.dbg.value(metadata i32 0, metadata !12041, metadata !DIExpression()), !dbg !12042
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12043
  %4 = load i32, i32* %3, align 4, !dbg !12043
  %5 = and i32 %4, 63, !dbg !12044
  %6 = udiv i32 %0, %5, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %6, metadata !12041, metadata !DIExpression()), !dbg !12042
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12046
  %8 = load i32, i32* %7, align 4, !dbg !12046
  %9 = and i32 %8, 511, !dbg !12047
  %10 = mul i32 %9, %6, !dbg !12048
  call void @llvm.dbg.value(metadata i32 %10, metadata !12041, metadata !DIExpression()), !dbg !12042
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12049
  %12 = load i32, i32* %11, align 4, !dbg !12049
  %13 = lshr i32 %12, 15, !dbg !12050
  %14 = and i32 %13, 131070, !dbg !12050
  %15 = add nuw nsw i32 %14, 2, !dbg !12050
  %16 = udiv i32 %10, %15, !dbg !12051
  call void @llvm.dbg.value(metadata i32 %16, metadata !12041, metadata !DIExpression()), !dbg !12042
  ret i32 %16, !dbg !12052
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.166() unnamed_addr #5 !dbg !12053 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12054
  %2 = lshr i32 %1, 1, !dbg !12055
  %3 = and i32 %2, 1, !dbg !12055
  ret i32 %3, !dbg !12056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.167() unnamed_addr #15 !dbg !12057 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12058
  %2 = or i32 %1, 1, !dbg !12058
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12058
  ret void, !dbg !12059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.168(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12062, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i32 %1, metadata !12063, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i32 %2, metadata !12064, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i32 %3, metadata !12065, metadata !DIExpression()), !dbg !12066
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12067
  %6 = and i32 %5, -4227072, !dbg !12067
  %7 = or i32 %1, %0, !dbg !12067
  %8 = shl i32 %2, 6, !dbg !12067
  %9 = or i32 %7, %8, !dbg !12067
  %10 = or i32 %9, %6, !dbg !12067
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12067
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12068
  %12 = and i32 %11, -196609, !dbg !12068
  %13 = or i32 %12, %3, !dbg !12068
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12068
  ret void, !dbg !12069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12074, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12075, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.value(metadata i32 0, metadata !12076, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.value(metadata i32 0, metadata !12077, metadata !DIExpression()), !dbg !12078
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12079
  %4 = load i32, i32* %3, align 4, !dbg !12079
  %5 = lshr i32 %4, 4, !dbg !12079
  %6 = and i32 %5, 15, !dbg !12079
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12079
  %8 = load i8, i8* %7, align 1, !dbg !12079
  %9 = zext i8 %8 to i32, !dbg !12079
  %10 = lshr i32 %0, %9, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %10, metadata !12077, metadata !DIExpression()), !dbg !12078
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12080
  %12 = icmp ult i32 %11, %10, !dbg !12082
  br i1 %12, label %13, label %16, !dbg !12083

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %14, metadata !12076, metadata !DIExpression()), !dbg !12078
  %15 = icmp eq i32 %14, 0, !dbg !12086
  br i1 %15, label %16, label %30, !dbg !12088

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.169() #25, !dbg !12089
  br label %17, !dbg !12091

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.170() #25, !dbg !12092
  %19 = icmp eq i32 %18, 1, !dbg !12093
  br i1 %19, label %20, label %17, !dbg !12091, !llvm.loop !12094

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12096
  tail call fastcc void @LL_RCC_SetAHBPrescaler.171(i32 noundef %21) #25, !dbg !12097
  tail call fastcc void @LL_RCC_SetSysClkSource.172() #25, !dbg !12098
  br label %22, !dbg !12099

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.173() #25, !dbg !12100
  %24 = icmp eq i32 %23, 8, !dbg !12101
  br i1 %24, label %25, label %22, !dbg !12099, !llvm.loop !12102

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12104
  %27 = load i32, i32* %26, align 4, !dbg !12104
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.174(i32 noundef %27) #25, !dbg !12105
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12106
  %29 = load i32, i32* %28, align 4, !dbg !12106
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.175(i32 noundef %29) #25, !dbg !12107
  br label %30, !dbg !12108

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12109
  %33 = icmp ugt i32 %32, %10, !dbg !12111
  br i1 %33, label %34, label %36, !dbg !12112

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12113
  call void @llvm.dbg.value(metadata i32 %35, metadata !12076, metadata !DIExpression()), !dbg !12078
  br label %36, !dbg !12115

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12078
  call void @llvm.dbg.value(metadata i32 %37, metadata !12076, metadata !DIExpression()), !dbg !12078
  %38 = icmp eq i32 %37, 0, !dbg !12116
  br i1 %38, label %39, label %40, !dbg !12118

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !12119
  br label %40, !dbg !12121

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.169() unnamed_addr #15 !dbg !12123 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12124
  %2 = or i32 %1, 16777216, !dbg !12124
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12124
  ret void, !dbg !12125
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.170() unnamed_addr #5 !dbg !12126 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12127
  %2 = lshr i32 %1, 25, !dbg !12128
  %3 = and i32 %2, 1, !dbg !12128
  ret i32 %3, !dbg !12129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.171(i32 noundef %0) unnamed_addr #15 !dbg !12130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12132, metadata !DIExpression()), !dbg !12133
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12134
  %3 = and i32 %2, -241, !dbg !12134
  %4 = or i32 %3, %0, !dbg !12134
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12134
  ret void, !dbg !12135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.172() unnamed_addr #15 !dbg !12136 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12138, metadata !DIExpression()), !dbg !12139
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12140
  %2 = and i32 %1, -4, !dbg !12140
  %3 = or i32 %2, 2, !dbg !12140
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12140
  ret void, !dbg !12141
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.173() unnamed_addr #5 !dbg !12142 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12143
  %2 = and i32 %1, 12, !dbg !12143
  ret i32 %2, !dbg !12144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.174(i32 noundef %0) unnamed_addr #15 !dbg !12145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12147, metadata !DIExpression()), !dbg !12148
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12149
  %3 = and i32 %2, -7169, !dbg !12149
  %4 = or i32 %3, %0, !dbg !12149
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12149
  ret void, !dbg !12150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.175(i32 noundef %0) unnamed_addr #15 !dbg !12151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12153, metadata !DIExpression()), !dbg !12154
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12155
  %3 = and i32 %2, -57345, !dbg !12155
  %4 = or i32 %3, %0, !dbg !12155
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12155
  ret void, !dbg !12156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !12157 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12158
  %2 = lshr i32 %1, 27, !dbg !12159
  %3 = and i32 %2, 1, !dbg !12159
  ret i32 %3, !dbg !12160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12165, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32 %1, metadata !12166, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12167, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12168, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32 0, metadata !12169, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32 0, metadata !12170, metadata !DIExpression()), !dbg !12171
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12172
  %6 = icmp eq i32 %5, 0, !dbg !12174
  br i1 %6, label %7, label %27, !dbg !12175

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !12176
  call void @llvm.dbg.value(metadata i32 %8, metadata !12170, metadata !DIExpression()), !dbg !12171
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.176() #25, !dbg !12178
  %10 = icmp eq i32 %9, 1, !dbg !12180
  br i1 %10, label %19, label %11, !dbg !12181

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12182
  br i1 %12, label %13, label %14, !dbg !12185

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !12186
  br label %15, !dbg !12188

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.177() #25, !dbg !12189
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.178() #25, !dbg !12191
  br label %16, !dbg !12192

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.176() #25, !dbg !12193
  %18 = icmp eq i32 %17, 1, !dbg !12194
  br i1 %18, label %19, label %16, !dbg !12192, !llvm.loop !12195

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12197
  %21 = load i32, i32* %20, align 4, !dbg !12197
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12198
  %23 = load i32, i32* %22, align 4, !dbg !12198
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12199
  %25 = load i32, i32* %24, align 4, !dbg !12199
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.168(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !12200
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !12201
  call void @llvm.dbg.value(metadata i32 %26, metadata !12169, metadata !DIExpression()), !dbg !12171
  br label %27, !dbg !12202

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12203
  call void @llvm.dbg.value(metadata i32 %28, metadata !12169, metadata !DIExpression()), !dbg !12171
  ret i32 %28, !dbg !12204
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.176() unnamed_addr #5 !dbg !12205 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12206
  %2 = lshr i32 %1, 17, !dbg !12207
  %3 = and i32 %2, 1, !dbg !12207
  ret i32 %3, !dbg !12208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12209 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12210
  %2 = or i32 %1, 262144, !dbg !12210
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12210
  ret void, !dbg !12211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.177() unnamed_addr #15 !dbg !12212 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12213
  %2 = and i32 %1, -262145, !dbg !12213
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12213
  ret void, !dbg !12214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.178() unnamed_addr #15 !dbg !12215 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12216
  %2 = or i32 %1, 65536, !dbg !12216
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12216
  ret void, !dbg !12217
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12218 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12221, metadata !DIExpression()), !dbg !12237
  call void @llvm.dbg.value(metadata i32 undef, metadata !12221, metadata !DIExpression()), !dbg !12237
  call void @llvm.dbg.value(metadata i32 undef, metadata !12221, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12237
  ret void, !dbg !12238
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12243, metadata !DIExpression()), !dbg !12245
  %2 = icmp eq i8* %0, null, !dbg !12246
  br i1 %2, label %29, label %3, !dbg !12248

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12249
  %5 = icmp eq i8 %4, 0, !dbg !12250
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12251
  br i1 %6, label %29, label %8, !dbg !12251

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12244, metadata !DIExpression()), !dbg !12245
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12252

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12244, metadata !DIExpression()), !dbg !12245
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12254
  br i1 %10, label %11, label %15, !dbg !12259

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12260
  %13 = load i8*, i8** %12, align 4, !dbg !12260
  %14 = icmp eq i8* %13, %0, !dbg !12261
  br i1 %14, label %29, label %15, !dbg !12262

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12263
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12244, metadata !DIExpression()), !dbg !12245
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12264
  br i1 %17, label %7, label %8, !dbg !12265, !llvm.loop !12266

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12244, metadata !DIExpression()), !dbg !12245
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12268
  br i1 %20, label %21, label %26, !dbg !12272

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12273
  %23 = load i8*, i8** %22, align 4, !dbg !12273
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12274
  %25 = icmp eq i32 %24, 0, !dbg !12275
  br i1 %25, label %29, label %26, !dbg !12276

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12277
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12244, metadata !DIExpression()), !dbg !12245
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12278
  br i1 %28, label %29, label %18, !dbg !12252, !llvm.loop !12279

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12245
  ret %struct.device* %30, !dbg !12281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12286, metadata !DIExpression()), !dbg !12287
  %2 = icmp eq %struct.device* %0, null, !dbg !12288
  br i1 %2, label %14, label %3, !dbg !12290

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12291
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12291
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12292
  %7 = load i8, i8* %6, align 1, !dbg !12292
  %8 = and i8 %7, 1, !dbg !12292
  %9 = icmp eq i8 %8, 0, !dbg !12292
  br i1 %9, label %14, label %10, !dbg !12293

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12294
  %12 = load i8, i8* %11, align 1, !dbg !12294
  %13 = icmp eq i8 %12, 0, !dbg !12295
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12287
  ret i1 %15, !dbg !12296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12297 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12302, metadata !DIExpression()), !dbg !12303
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12304
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12306 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12314, metadata !DIExpression()), !dbg !12319
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12315, metadata !DIExpression()), !dbg !12319
  call void @llvm.dbg.value(metadata i8* %2, metadata !12316, metadata !DIExpression()), !dbg !12319
  %5 = bitcast i32* %4 to i8*, !dbg !12320
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12320
  call void @llvm.dbg.value(metadata i32 0, metadata !12317, metadata !DIExpression()), !dbg !12319
  store i32 0, i32* %4, align 4, !dbg !12321
  call void @llvm.dbg.value(metadata i32* %4, metadata !12317, metadata !DIExpression(DW_OP_deref)), !dbg !12319
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12322
  call void @llvm.dbg.value(metadata i16* %6, metadata !12318, metadata !DIExpression()), !dbg !12319
  %7 = load i32, i32* %4, align 4, !dbg !12323
  call void @llvm.dbg.value(metadata i32 %7, metadata !12317, metadata !DIExpression()), !dbg !12319
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12324
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12325
  ret i32 %8, !dbg !12326
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12327 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12331, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.value(metadata i32* %1, metadata !12332, metadata !DIExpression()), !dbg !12337
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12338
  %4 = load i16*, i16** %3, align 4, !dbg !12338
  call void @llvm.dbg.value(metadata i16* %4, metadata !12333, metadata !DIExpression()), !dbg !12337
  %5 = icmp eq i16* %4, null, !dbg !12339
  br i1 %5, label %14, label %6, !dbg !12340

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12341
  call void @llvm.dbg.value(metadata i32 %7, metadata !12334, metadata !DIExpression()), !dbg !12341
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12342
  %9 = load i16, i16* %8, align 2, !dbg !12342
  %10 = add i16 %9, -32767, !dbg !12343
  %11 = icmp ult i16 %10, 2, !dbg !12343
  %12 = add i32 %7, 1, !dbg !12344
  call void @llvm.dbg.value(metadata i32 %12, metadata !12334, metadata !DIExpression()), !dbg !12341
  br i1 %11, label %13, label %6, !dbg !12343, !llvm.loop !12346

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12349
  br label %14, !dbg !12350

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12352 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12356, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i32 %1, metadata !12357, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12358, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i8* %3, metadata !12359, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i32 0, metadata !12360, metadata !DIExpression()), !dbg !12368
  %5 = icmp eq i32 %1, 0, !dbg !12369
  br i1 %5, label %16, label %8, !dbg !12370

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12360, metadata !DIExpression()), !dbg !12368
  %7 = icmp eq i32 %15, %1, !dbg !12369
  br i1 %7, label %16, label %8, !dbg !12370, !llvm.loop !12371

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12360, metadata !DIExpression()), !dbg !12368
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12373
  %11 = load i16, i16* %10, align 2, !dbg !12373
  call void @llvm.dbg.value(metadata i16 %11, metadata !12362, metadata !DIExpression()), !dbg !12374
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12375
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12365, metadata !DIExpression()), !dbg !12374
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12376
  call void @llvm.dbg.value(metadata i32 %13, metadata !12366, metadata !DIExpression()), !dbg !12374
  %14 = icmp slt i32 %13, 0, !dbg !12377
  %15 = add nuw i32 %9, 1, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %15, metadata !12360, metadata !DIExpression()), !dbg !12368
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !12381 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12385, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12386, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12387, metadata !DIExpression()), !dbg !12388
  %2 = sext i16 %0 to i32, !dbg !12389
  %3 = icmp slt i16 %0, 1, !dbg !12391
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12392
  %6 = add nsw i32 %2, -1, !dbg !12392
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12392
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12392
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12386, metadata !DIExpression()), !dbg !12388
  ret %struct.device* %8, !dbg !12393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12394 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12396, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12397, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.value(metadata i8* %2, metadata !12398, metadata !DIExpression()), !dbg !12401
  %5 = bitcast i32* %4 to i8*, !dbg !12402
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12402
  call void @llvm.dbg.value(metadata i32 0, metadata !12399, metadata !DIExpression()), !dbg !12401
  store i32 0, i32* %4, align 4, !dbg !12403
  call void @llvm.dbg.value(metadata i32* %4, metadata !12399, metadata !DIExpression(DW_OP_deref)), !dbg !12401
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12404
  call void @llvm.dbg.value(metadata i16* %6, metadata !12400, metadata !DIExpression()), !dbg !12401
  %7 = load i32, i32* %4, align 4, !dbg !12405
  call void @llvm.dbg.value(metadata i32 %7, metadata !12399, metadata !DIExpression()), !dbg !12401
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12406
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12407
  ret i32 %8, !dbg !12408
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12411, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i32* %1, metadata !12412, metadata !DIExpression()), !dbg !12416
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12417
  %4 = load i16*, i16** %3, align 4, !dbg !12417
  call void @llvm.dbg.value(metadata i16* %4, metadata !12413, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i32 0, metadata !12414, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i32 0, metadata !12415, metadata !DIExpression()), !dbg !12416
  %5 = icmp eq i16* %4, null, !dbg !12418
  br i1 %5, label %22, label %6, !dbg !12420

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12414, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i16* %8, metadata !12413, metadata !DIExpression()), !dbg !12416
  %9 = load i16, i16* %8, align 2, !dbg !12421
  %10 = icmp eq i16 %9, -32768, !dbg !12425
  call void @llvm.dbg.value(metadata i32 undef, metadata !12414, metadata !DIExpression()), !dbg !12416
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12426
  call void @llvm.dbg.value(metadata i16* %11, metadata !12413, metadata !DIExpression()), !dbg !12416
  %12 = zext i1 %10 to i32, !dbg !12427
  %13 = add i32 %7, %12, !dbg !12427
  call void @llvm.dbg.value(metadata i32 %13, metadata !12414, metadata !DIExpression()), !dbg !12416
  %14 = icmp eq i32 %13, 2, !dbg !12428
  br i1 %14, label %15, label %6, !dbg !12429

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12416
  call void @llvm.dbg.value(metadata i32 %16, metadata !12415, metadata !DIExpression()), !dbg !12416
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12430
  %18 = load i16, i16* %17, align 2, !dbg !12430
  %19 = icmp eq i16 %18, 32767, !dbg !12431
  %20 = add i32 %16, 1, !dbg !12432
  call void @llvm.dbg.value(metadata i32 %20, metadata !12415, metadata !DIExpression()), !dbg !12416
  br i1 %19, label %21, label %15, !dbg !12434, !llvm.loop !12435

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12437
  br label %22, !dbg !12438

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12439
  call void @llvm.dbg.value(metadata i16* %23, metadata !12413, metadata !DIExpression()), !dbg !12416
  ret i16* %23, !dbg !12440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !12441 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12444
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12445
  ret i32* %2, !dbg !12446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !12447 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12598, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12599, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12600, metadata !DIExpression()), !dbg !12601
  ret void, !dbg !12602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12607, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i32 %1, metadata !12608, metadata !DIExpression()), !dbg !12609
  ret void, !dbg !12610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12615, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i32 %1, metadata !12616, metadata !DIExpression()), !dbg !12617
  ret void, !dbg !12618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12623, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i8* %1, metadata !12624, metadata !DIExpression()), !dbg !12625
  ret i32 -134, !dbg !12626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12631, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i8* %1, metadata !12632, metadata !DIExpression()), !dbg !12633
  ret i32 -134, !dbg !12634
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12638, metadata !DIExpression()), !dbg !12639
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12640, !srcloc !12646
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()) #23, !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12644, metadata !DIExpression()) #23, !dbg !12647
  br label %3, !dbg !12648

3:                                                ; preds = %3, %1
  br label %3, !dbg !12649, !llvm.loop !12652
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12659, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12660, metadata !DIExpression()), !dbg !12661
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.183, i32 0, i32 0), i32 noundef 69) #24, !dbg !12662
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12667
  unreachable, !dbg !12667
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12670, metadata !DIExpression()), !dbg !12671
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12672
  unreachable, !dbg !12672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12675, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12676, metadata !DIExpression()), !dbg !12679
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12680, !srcloc !12646
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %4, metadata !12643, metadata !DIExpression()) #23, !dbg !12682
  call void @llvm.dbg.value(metadata i32 undef, metadata !12644, metadata !DIExpression()) #23, !dbg !12682
  call void @llvm.dbg.value(metadata i32 %4, metadata !12677, metadata !DIExpression()), !dbg !12679
  %5 = tail call fastcc %struct.k_thread* @k_current_get.186() #26, !dbg !12683
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12678, metadata !DIExpression()), !dbg !12679
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12684
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.187, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #24, !dbg !12684
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12689
  br i1 %7, label %20, label %8, !dbg !12691

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12692, metadata !DIExpression()), !dbg !12697
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12699
  %10 = load i32, i32* %9, align 4, !dbg !12699
  %11 = and i32 %10, 511, !dbg !12700
  %12 = icmp eq i32 %11, 0, !dbg !12701
  br i1 %12, label %14, label %13, !dbg !12702

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 69) #24, !dbg !12703
  br label %14, !dbg !12709

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12710
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.189, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #24, !dbg !12710
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !12715
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12692, metadata !DIExpression()), !dbg !12716
  %16 = load i32, i32* %9, align 4, !dbg !12721
  %17 = and i32 %16, 511, !dbg !12722
  %18 = icmp eq i32 %17, 0, !dbg !12723
  br i1 %18, label %22, label %19, !dbg !12724

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12725, metadata !DIExpression()) #23, !dbg !12728
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12731, !srcloc !12732
  br label %25, !dbg !12733

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12710
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.189, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #24, !dbg !12710
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !12715
  br label %22, !dbg !12734

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %4, metadata !12725, metadata !DIExpression()) #23, !dbg !12738
  call void @llvm.dbg.value(metadata i32 %4, metadata !12725, metadata !DIExpression()) #23, !dbg !12741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12679
  br i1 %23, label %25, label %24, !dbg !12743

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.190(%struct.k_thread* noundef %5) #25, !dbg !12744
  br label %25, !dbg !12747

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12747
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.186() unnamed_addr #13 !dbg !12748 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.198() #26, !dbg !12752
  ret %struct.k_thread* %1, !dbg !12753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !12754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12758, metadata !DIExpression()), !dbg !12759
  %2 = icmp ult i32 %0, 5, !dbg !12760
  br i1 %2, label %3, label %6, !dbg !12760

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12760
  %5 = load i8*, i8** %4, align 4, !dbg !12760
  br label %6, !dbg !12760

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.192, i32 0, i32 0), %1 ], !dbg !12761
  ret i8* %7, !dbg !12763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12764 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12768, metadata !DIExpression()), !dbg !12770
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12771
  br i1 %2, label %9, label %3, !dbg !12772

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12773
  call void @llvm.dbg.value(metadata i8* %4, metadata !12769, metadata !DIExpression()), !dbg !12770
  %5 = icmp eq i8* %4, null, !dbg !12774
  br i1 %5, label %9, label %6, !dbg !12776

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12777
  %8 = icmp eq i8 %7, 0, !dbg !12778
  br i1 %8, label %9, label %10, !dbg !12779

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.191, i32 0, i32 0), metadata !12769, metadata !DIExpression()), !dbg !12770
  br label %10, !dbg !12780

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.191, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12770
  call void @llvm.dbg.value(metadata i8* %11, metadata !12769, metadata !DIExpression()), !dbg !12770
  ret i8* %11, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.190(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12783 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12787, metadata !DIExpression()), !dbg !12788
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12789, !srcloc !12791
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12792
  ret void, !dbg !12793
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.198() unnamed_addr #13 !dbg !12794 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12795, !srcloc !12797
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12798
  ret %struct.k_thread* %1, !dbg !12799
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12804, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.value(metadata i32 %1, metadata !12805, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.value(metadata i32 %2, metadata !12806, metadata !DIExpression()), !dbg !12807
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12808
  ret void, !dbg !12809
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12814, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i8* %1, metadata !12815, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 %2, metadata !12816, metadata !DIExpression()), !dbg !12817
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12818
  ret void, !dbg !12819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12820 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12821
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #25, !dbg !12822
  ret void, !dbg !12823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12826, metadata !DIExpression()), !dbg !12827
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12828
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12829
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12830
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12831
  %4 = trunc i32 %0 to i8, !dbg !12832
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12833
  store i8 %4, i8* %5, align 4, !dbg !12834
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12835
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !12836
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12837
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12838
  store i8* %8, i8** %9, align 4, !dbg !12839
  ret void, !dbg !12840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12843, metadata !DIExpression()), !dbg !12849
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12850
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12844, metadata !DIExpression()), !dbg !12849
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12851
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12845, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.205, i32 0, i32 0), metadata !12848, metadata !DIExpression()), !dbg !12849
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12852
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12853
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.205, i32 0, i32 0)) #24, !dbg !12854
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !12855
  ret void, !dbg !12856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !12857 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12861, metadata !DIExpression()), !dbg !12862
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12863
  ret i8* %2, !dbg !12864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !12865 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12870, metadata !DIExpression()), !dbg !12871
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12872
  %3 = load i8, i8* %2, align 1, !dbg !12873
  %4 = and i8 %3, -5, !dbg !12873
  store i8 %4, i8* %2, align 1, !dbg !12873
  ret void, !dbg !12874
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !12875 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !12878
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !12879
  %3 = ptrtoint i8* %2 to i32, !dbg !12888
  %4 = add i32 %3, 2048, !dbg !12889
  call void @llvm.dbg.value(metadata i32 %4, metadata !12883, metadata !DIExpression()) #23, !dbg !12890
  call void @llvm.dbg.value(metadata i32 %4, metadata !12891, metadata !DIExpression()) #23, !dbg !12894
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12896, !srcloc !12897
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12898
  %6 = or i32 %5, 512, !dbg !12898
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12898
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -2, i32 noundef 255) #24, !dbg !12899
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -5, i32 noundef 0) #24, !dbg !12902
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -12, i32 noundef 0) #24, !dbg !12903
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -11, i32 noundef 0) #24, !dbg !12904
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -10, i32 noundef 0) #24, !dbg !12905
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -4, i32 noundef 0) #24, !dbg !12906
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12907
  %8 = or i32 %7, 458752, !dbg !12907
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12907
  tail call void @z_arm_fault_init() #24, !dbg !12908
  tail call void @z_arm_cpu_idle_init() #24, !dbg !12909
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12910
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12913
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !12914
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !12915
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12916
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12916
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12877, metadata !DIExpression()), !dbg !12917
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !12918
  call void @z_device_state_init() #24, !dbg !12919
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !12920
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !12921
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !12922
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12923
  unreachable, !dbg !12923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2069, metadata !DIExpression()), !dbg !12924
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12925
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12925
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2070, metadata !DIExpression()), !dbg !12924
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2070, metadata !DIExpression()), !dbg !12924
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12926
  br i1 %7, label %8, label %35, !dbg !12927

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2070, metadata !DIExpression()), !dbg !12924
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12928
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12928
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2080, metadata !DIExpression()), !dbg !12929
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12930
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12930
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !12931
  call void @llvm.dbg.value(metadata i32 %14, metadata !2084, metadata !DIExpression()), !dbg !12929
  %15 = icmp eq %struct.device* %11, null, !dbg !12932
  br i1 %15, label %32, label %16, !dbg !12934

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12935
  br i1 %17, label %26, label %18, !dbg !12938

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12939
  call void @llvm.dbg.value(metadata i32 %19, metadata !2084, metadata !DIExpression()), !dbg !12929
  %20 = icmp ult i32 %19, 255, !dbg !12941
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12941
  call void @llvm.dbg.value(metadata i32 %21, metadata !2084, metadata !DIExpression()), !dbg !12929
  %22 = trunc i32 %21 to i8, !dbg !12942
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12943
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12943
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12944
  store i8 %22, i8* %25, align 1, !dbg !12945
  br label %26, !dbg !12946

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12947
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12947
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12948
  %30 = load i8, i8* %29, align 1, !dbg !12949
  %31 = or i8 %30, 1, !dbg !12949
  store i8 %31, i8* %29, align 1, !dbg !12949
  br label %32, !dbg !12950

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12951
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2070, metadata !DIExpression()), !dbg !12924
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12926
  br i1 %34, label %8, label %35, !dbg !12927, !llvm.loop !12952

35:                                               ; preds = %32, %1
  ret void, !dbg !12954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.208(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12957, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata i32 %1, metadata !12958, metadata !DIExpression()), !dbg !12959
  %3 = trunc i32 %1 to i8, !dbg !12960
  %4 = shl i8 %3, 4, !dbg !12960
  %5 = and i32 %0, 15, !dbg !12963
  %6 = add nsw i32 %5, -4, !dbg !12964
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12965
  store volatile i8 %4, i8* %7, align 1, !dbg !12966
  ret void, !dbg !12967
}

; Function Attrs: optsize
declare !dbg !12968 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !12969 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12972, metadata !DIExpression()), !dbg !12973
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12974
  store i8 1, i8* %2, align 1, !dbg !12975
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12976
  store i8 1, i8* %3, align 4, !dbg !12977
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12978
  store i32 0, i32* %4, align 4, !dbg !12979
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12980
  store i32 0, i32* %5, align 4, !dbg !12981
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12982
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12983
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12984
  ret void, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12986 {
  tail call void @z_sched_init() #24, !dbg !12991
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12992
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 11, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.209, i32 0, i32 0)) #24, !dbg !12993
  call void @llvm.dbg.value(metadata i8* %1, metadata !12990, metadata !DIExpression()), !dbg !12994
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12995
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12996
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !12997
  ret i8* %1, !dbg !12998
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !12999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13003, metadata !DIExpression()), !dbg !13004
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !13005
  unreachable, !dbg !13006
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13007 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13009, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.value(metadata i8* %1, metadata !13010, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.value(metadata i8* %2, metadata !13011, metadata !DIExpression()), !dbg !13012
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13013
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !13014
  tail call void @boot_banner() #24, !dbg !13015
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !13016
  tail call void @z_init_static_threads() #24, !dbg !13017
  tail call void @main() #24, !dbg !13018
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13019
  %5 = and i8 %4, -2, !dbg !13019
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13021 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13031, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.value(metadata i8* %1, metadata !13032, metadata !DIExpression()), !dbg !13033
  ret void, !dbg !13034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13035 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13037, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata i8* %1, metadata !13038, metadata !DIExpression()), !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13041 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13042, !srcloc !13049
  call void @llvm.dbg.value(metadata i32 %1, metadata !13045, metadata !DIExpression()) #23, !dbg !13050
  %2 = icmp ne i32 %1, 0, !dbg !13051
  ret i1 %2, !dbg !13052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13053 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13054
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13055
  %3 = load i8, i8* %2, align 4, !dbg !13056
  %4 = or i8 %3, 1, !dbg !13056
  store i8 %4, i8* %2, align 4, !dbg !13056
  ret void, !dbg !13057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13058 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13059
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13060
  %3 = load i8, i8* %2, align 4, !dbg !13061
  %4 = and i8 %3, -2, !dbg !13061
  store i8 %4, i8* %2, align 4, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13063 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13065
  %3 = load i8, i8* %2, align 4, !dbg !13065
  %4 = and i8 %3, 1, !dbg !13066
  %5 = icmp ne i8 %4, 0, !dbg !13067
  ret i1 %5, !dbg !13068
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13073, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i8* %1, metadata !13074, metadata !DIExpression()), !dbg !13075
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13076
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13078
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13073, metadata !DIExpression()), !dbg !13075
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13079
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !13080
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13081
  store i8 0, i8* %8, align 1, !dbg !13082
  ret i32 0, !dbg !13083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #6 !dbg !13084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13088, metadata !DIExpression()), !dbg !13089
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13090
  ret i8* %2, !dbg !13091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13096, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i8* %1, metadata !13097, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 %2, metadata !13098, metadata !DIExpression()), !dbg !13099
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13100
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !13101
  ret i32 0, !dbg !13102
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2093 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2210, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i8* %1, metadata !2211, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i32 %2, metadata !2212, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i32 0, metadata !2213, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i8 undef, metadata !2215, metadata !DIExpression()), !dbg !13103
  %4 = icmp eq i8* %1, null, !dbg !13104
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13106
  br i1 %6, label %46, label %7, !dbg !13106

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13107
  %9 = load i8, i8* %8, align 1, !dbg !13107
  call void @llvm.dbg.value(metadata i8 %9, metadata !2215, metadata !DIExpression()), !dbg !13103
  %10 = add i32 %2, -1, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %10, metadata !2212, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i8 0, metadata !2216, metadata !DIExpression()), !dbg !13109
  call void @llvm.dbg.value(metadata i8 %9, metadata !2215, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i32 0, metadata !2213, metadata !DIExpression()), !dbg !13103
  %11 = icmp eq i8 %9, 0, !dbg !13110
  br i1 %11, label %12, label %15, !dbg !13112

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13113
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13114
  store i8 0, i8* %14, align 1, !dbg !13115
  br label %46, !dbg !13116

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2216, metadata !DIExpression()), !dbg !13109
  call void @llvm.dbg.value(metadata i8 %17, metadata !2215, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i32 %18, metadata !2213, metadata !DIExpression()), !dbg !13103
  %19 = zext i8 %17 to i32, !dbg !13117
  %20 = zext i8 %16 to i32, !dbg !13118
  %21 = shl nuw i32 1, %20, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %21, metadata !2214, metadata !DIExpression()), !dbg !13103
  %22 = and i32 %21, %19, !dbg !13120
  %23 = icmp eq i32 %22, 0, !dbg !13122
  br i1 %23, label %42, label %24, !dbg !13123

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13124
  %26 = sub i32 %10, %18, !dbg !13125
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13126
  %28 = load i8*, i8** %27, align 4, !dbg !13126
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13127
  %30 = load i32, i32* %29, align 4, !dbg !13127
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13128
  %32 = add i32 %31, %18, !dbg !13129
  call void @llvm.dbg.value(metadata i32 %32, metadata !2213, metadata !DIExpression()), !dbg !13103
  %33 = trunc i32 %21 to i8, !dbg !13130
  %34 = xor i8 %33, -1, !dbg !13130
  %35 = and i8 %17, %34, !dbg !13130
  call void @llvm.dbg.value(metadata i8 %35, metadata !2215, metadata !DIExpression()), !dbg !13103
  %36 = icmp eq i8 %35, 0, !dbg !13131
  br i1 %36, label %12, label %37, !dbg !13133

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13134
  %39 = sub i32 %10, %32, !dbg !13136
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.212, i32 0, i32 0), i32 noundef 1) #25, !dbg !13137
  %41 = add i32 %40, %32, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %41, metadata !2213, metadata !DIExpression()), !dbg !13103
  br label %42, !dbg !13139

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13103
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13103
  call void @llvm.dbg.value(metadata i8 %44, metadata !2215, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata i32 %43, metadata !2213, metadata !DIExpression()), !dbg !13103
  %45 = add i8 %16, 1, !dbg !13140
  call void @llvm.dbg.value(metadata i8 %45, metadata !2216, metadata !DIExpression()), !dbg !13109
  br label %15, !dbg !13112

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.213, i32 0, i32 0), %3 ], !dbg !13103
  ret i8* %47, !dbg !13141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13146, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 %1, metadata !13147, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i8* %2, metadata !13148, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 %3, metadata !13149, metadata !DIExpression()), !dbg !13151
  %5 = icmp ult i32 %1, %3, !dbg !13152
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13152
  call void @llvm.dbg.value(metadata i32 %6, metadata !13150, metadata !DIExpression()), !dbg !13151
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13153
  ret i32 %6, !dbg !13154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13159, metadata !DIExpression()), !dbg !13160
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13161
  ret void, !dbg !13162
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13172, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13173, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i32 %2, metadata !13174, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13175, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i8* %4, metadata !13176, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i8* %5, metadata !13177, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i8* %6, metadata !13178, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i32 %7, metadata !13179, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i32 %8, metadata !13180, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i8* %9, metadata !13181, metadata !DIExpression()), !dbg !13183
  %11 = icmp eq i32 %7, 15, !dbg !13184
  br i1 %11, label %12, label %15, !dbg !13184

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13184
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13184
  br i1 %14, label %19, label %18, !dbg !13184

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13184
  %17 = icmp ult i32 %16, 31, !dbg !13184
  br i1 %17, label %19, label %18, !dbg !13184

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 536) #24, !dbg !13188
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.226, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13188
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 536) #24, !dbg !13188
  unreachable, !dbg !13188

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13190
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #25, !dbg !13191
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13192
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13193
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13194
  call void @llvm.dbg.value(metadata i8* %22, metadata !13182, metadata !DIExpression()), !dbg !13183
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13195
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13196
  store i8* null, i8** %23, align 4, !dbg !13197
  %24 = icmp eq i8* %9, null, !dbg !13198
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13200
  br i1 %24, label %29, label %26, !dbg !13201

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !13202
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13204
  store i8 0, i8* %28, align 1, !dbg !13205
  br label %30, !dbg !13206

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13207
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13209
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13209
  br i1 %32, label %36, label %33, !dbg !13211

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13212
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13212
  br label %36, !dbg !13213

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13183
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13214
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13216
  ret i8* %22, !dbg !13217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !13218 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13222, metadata !DIExpression()), !dbg !13223
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13224
  ret i1 %2, !dbg !13225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13226 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13233
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13234
  ret void, !dbg !13235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13236 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13241, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.value(metadata i32 %1, metadata !13242, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.value(metadata i32 %2, metadata !13243, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.value(metadata i32 %3, metadata !13244, metadata !DIExpression()), !dbg !13245
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13246
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13247
  %6 = trunc i32 %3 to i8, !dbg !13248
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13249
  store i8 %6, i8* %7, align 4, !dbg !13250
  %8 = trunc i32 %2 to i8, !dbg !13251
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13252
  store i8 %8, i8* %9, align 1, !dbg !13253
  %10 = trunc i32 %1 to i8, !dbg !13254
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13255
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13255
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13255
  store i8 %10, i8* %13, align 2, !dbg !13256
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13257
  store i8 0, i8* %14, align 1, !dbg !13258
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13259
  ret void, !dbg !13260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !13261 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13265, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13266, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %2, metadata !13267, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 0, metadata !13272, metadata !DIExpression()), !dbg !13273
  %4 = add i32 %2, 7, !dbg !13274
  %5 = and i32 %4, -8, !dbg !13274
  %6 = add i32 %5, 64, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %6, metadata !13268, metadata !DIExpression()), !dbg !13273
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.227(%struct.z_thread_stack_element* noundef %1) #25, !dbg !13276
  call void @llvm.dbg.value(metadata i8* %7, metadata !13271, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %5, metadata !13269, metadata !DIExpression()), !dbg !13273
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13277
  call void @llvm.dbg.value(metadata i8* %8, metadata !13270, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 0, metadata !13272, metadata !DIExpression()), !dbg !13273
  %9 = ptrtoint i8* %7 to i32, !dbg !13278
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13279
  store i32 %9, i32* %10, align 4, !dbg !13280
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13281
  store i32 %5, i32* %11, align 4, !dbg !13282
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13283
  store i32 0, i32* %12, align 4, !dbg !13284
  call void @llvm.dbg.value(metadata i8* %8, metadata !13270, metadata !DIExpression()), !dbg !13273
  ret i8* %8, !dbg !13285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.227(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13286 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13290, metadata !DIExpression()), !dbg !13291
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13292
  ret i8* %2, !dbg !13293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13294 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13299, metadata !DIExpression()), !dbg !13300
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13301
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13302
  ret void, !dbg !13303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13304 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13306, metadata !DIExpression()), !dbg !13307
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13308
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13309
  ret void, !dbg !13310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13311 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13315, metadata !DIExpression()), !dbg !13316
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13317
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13318
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13319
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13320
  ret void, !dbg !13321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13322 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13327, metadata !DIExpression()), !dbg !13328
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13329
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13330
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13331
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13332
  ret void, !dbg !13333
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13334 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13351, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13342, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13343, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i32 %2, metadata !13344, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13345, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i8* %4, metadata !13346, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i8* %5, metadata !13347, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i8* %6, metadata !13348, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i32 %7, metadata !13349, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i32 %8, metadata !13350, metadata !DIExpression()), !dbg !13352
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13353, !srcloc !13049
  call void @llvm.dbg.value(metadata i32 %11, metadata !13045, metadata !DIExpression()) #23, !dbg !13358
  %12 = icmp eq i32 %11, 0, !dbg !13359
  br i1 %12, label %14, label %13, !dbg !13360

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 647) #24, !dbg !13361
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.231, i32 0, i32 0)) #24, !dbg !13361
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 647) #24, !dbg !13361
  unreachable, !dbg !13361

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13351, metadata !DIExpression()), !dbg !13352
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !13363
  %17 = icmp eq i64 %15, -1, !dbg !13364
  br i1 %17, label %19, label %18, !dbg !13366

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !13367
  br label %19, !dbg !13369

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13371 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13376, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13375, metadata !DIExpression()), !dbg !13377
  %4 = icmp eq i64 %3, 0, !dbg !13378
  br i1 %4, label %5, label %6, !dbg !13380

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13381
  br label %7, !dbg !13383

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13384
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13391, metadata !DIExpression()), !dbg !13392
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13393, !srcloc !13395
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13396
  ret void, !dbg !13397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13398 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13401, metadata !DIExpression()), !dbg !13402
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13400, metadata !DIExpression()), !dbg !13402
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13403
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13404
  ret void, !dbg !13405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13406 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13408, metadata !DIExpression()), !dbg !13428
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13429

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 750) #24, !dbg !13433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.235, i32 0, i32 0)) #24, !dbg !13433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 750) #24, !dbg !13433
  unreachable, !dbg !13433

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13408, metadata !DIExpression()), !dbg !13428
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13436
  br i1 %4, label %6, label %5, !dbg !13437

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13438
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13426, metadata !DIExpression()), !dbg !13439
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13440

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13444
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13444
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13446
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13446
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13447
  %12 = load i32, i32* %11, align 4, !dbg !13447
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13448
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13448
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13449
  %16 = load i8*, i8** %15, align 4, !dbg !13449
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13450
  %18 = load i8*, i8** %17, align 4, !dbg !13450
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13451
  %20 = load i8*, i8** %19, align 4, !dbg !13451
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13452
  %22 = load i32, i32* %21, align 4, !dbg !13452
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13453
  %24 = load i32, i32* %23, align 4, !dbg !13453
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13454
  %26 = load i8*, i8** %25, align 4, !dbg !13454
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #25, !dbg !13455
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13456
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13457
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13458
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13458
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13459
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13408, metadata !DIExpression()), !dbg !13428
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13460
  br i1 %32, label %1, label %2, !dbg !13429, !llvm.loop !13461

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 781) #24, !dbg !13463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.235, i32 0, i32 0)) #24, !dbg !13463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 781) #24, !dbg !13463
  unreachable, !dbg !13463

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13426, metadata !DIExpression()), !dbg !13439
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13466
  br i1 %36, label %38, label %37, !dbg !13467

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #24, !dbg !13468
  ret void, !dbg !13469

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13470
  %40 = load i32, i32* %39, align 4, !dbg !13470
  %41 = icmp eq i32 %40, -1, !dbg !13473
  br i1 %41, label %50, label %42, !dbg !13474

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13475
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13475
  %45 = icmp sgt i32 %40, 0, !dbg !13477
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13477
  %47 = zext i32 %46 to i64, !dbg !13477
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.236(i64 noundef %47) #25, !dbg !13477
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13478
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #25, !dbg !13478
  br label %50, !dbg !13479

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13480
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13426, metadata !DIExpression()), !dbg !13439
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13481
  br i1 %52, label %33, label %34, !dbg !13440, !llvm.loop !13482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.236(i64 noundef %0) unnamed_addr #6 !dbg !13484 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13486, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i64 %0, metadata !13488, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i32 1000, metadata !13491, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i32 10000, metadata !13492, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i8 1, metadata !13493, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i8 0, metadata !13494, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i8 1, metadata !13495, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i8 0, metadata !13496, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i8 1, metadata !13497, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i8 0, metadata !13498, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i64 0, metadata !13499, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i64 0, metadata !13499, metadata !DIExpression()), !dbg !13503
  %2 = mul i64 %0, 10, !dbg !13505
  ret i64 %2, !dbg !13511
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !13512 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13514, metadata !DIExpression()), !dbg !13518
  call void @llvm.dbg.value(metadata i8* %1, metadata !13515, metadata !DIExpression()), !dbg !13518
  call void @llvm.dbg.value(metadata i8* %2, metadata !13516, metadata !DIExpression()), !dbg !13518
  call void @llvm.dbg.value(metadata i8* %3, metadata !13517, metadata !DIExpression()), !dbg !13518
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13519
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13520
  %7 = load i8, i8* %6, align 4, !dbg !13521
  %8 = or i8 %7, 4, !dbg !13521
  store i8 %8, i8* %6, align 4, !dbg !13521
  tail call void @z_thread_essential_clear() #25, !dbg !13522
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13523
  unreachable, !dbg !13523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !13524 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13529, metadata !DIExpression()), !dbg !13531
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13532
  %3 = load i32, i32* %2, align 4, !dbg !13532
  call void @llvm.dbg.value(metadata i32 %3, metadata !13530, metadata !DIExpression()), !dbg !13531
  %4 = icmp eq i32 %3, 0, !dbg !13533
  br i1 %4, label %10, label %5, !dbg !13535

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13536
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13539
  %8 = zext i8 %7 to i32, !dbg !13540
  %9 = icmp eq i32 %6, %8, !dbg !13541
  br i1 %9, label %11, label %10, !dbg !13542

10:                                               ; preds = %5, %1
  br label %11, !dbg !13543

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13531
  ret i1 %12, !dbg !13544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !13545 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13547, metadata !DIExpression()), !dbg !13548
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13549
  %3 = load i32, i32* %2, align 4, !dbg !13549
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13551
  %5 = zext i8 %4 to i32, !dbg !13552
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13553
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13554
  %8 = or i32 %7, %5, !dbg !13555
  %9 = icmp eq i32 %3, %8, !dbg !13556
  br i1 %9, label %10, label %11, !dbg !13557

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13558
  br label %11, !dbg !13559

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !13561 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13565, metadata !DIExpression()), !dbg !13566
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13567
  %3 = zext i8 %2 to i32, !dbg !13568
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13569
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13570
  %6 = or i32 %5, %3, !dbg !13571
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13572
  store i32 %6, i32* %7, align 4, !dbg !13573
  ret void, !dbg !13574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !13575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13579, metadata !DIExpression()), !dbg !13580
  ret i32 -134, !dbg !13581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13586, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i32 %1, metadata !13587, metadata !DIExpression()), !dbg !13588
  ret i32 -134, !dbg !13589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !13590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13597, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13598, metadata !DIExpression()), !dbg !13599
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13600
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13602
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13599
  ret i32 %6, !dbg !13603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !13604 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13608, metadata !DIExpression()), !dbg !13609
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13610
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13609
  ret i32 %3, !dbg !13612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13613 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13615
  ret void, !dbg !13616
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !13617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13619, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.value(metadata i8* %1, metadata !13620, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.value(metadata i8* %2, metadata !13621, metadata !DIExpression()), !dbg !13622
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13623
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13623
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13623
  %7 = load i8, i8* %6, align 2, !dbg !13623
  %8 = icmp sgt i8 %7, -1, !dbg !13623
  br i1 %8, label %10, label %9, !dbg !13626

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.247, i32 0, i32 0), i32 noundef 39) #24, !dbg !13627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.247, i32 0, i32 0), i32 noundef 39) #24, !dbg !13627
  unreachable, !dbg !13627

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13629, !srcloc !13636
  call void @llvm.dbg.value(metadata i32 undef, metadata !13632, metadata !DIExpression()) #23, !dbg !13637
  call void @llvm.dbg.value(metadata i32 undef, metadata !13633, metadata !DIExpression()) #23, !dbg !13637
  tail call fastcc void @k_cpu_idle() #25, !dbg !13638
  br label %10, !dbg !13639, !llvm.loop !13640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13642 {
  tail call void @arch_cpu_idle() #24, !dbg !13643
  ret void, !dbg !13644
}

; Function Attrs: optsize
declare !dbg !13645 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !13646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13650, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13651, metadata !DIExpression()), !dbg !13654
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13655
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13655
  %5 = load i8, i8* %4, align 2, !dbg !13655
  call void @llvm.dbg.value(metadata i8 %5, metadata !13652, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13654
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13656
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13656
  %8 = load i8, i8* %7, align 2, !dbg !13656
  call void @llvm.dbg.value(metadata i8 %8, metadata !13653, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13654
  %9 = icmp eq i8 %8, %5, !dbg !13657
  %10 = sext i8 %5 to i32, !dbg !13659
  %11 = sext i8 %8 to i32, !dbg !13659
  %12 = sub nsw i32 %11, %10, !dbg !13659
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13659
  ret i32 %13, !dbg !13660
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13665, metadata !DIExpression()), !dbg !13666
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !13667
  %3 = icmp eq i32 %2, 0, !dbg !13669
  br i1 %3, label %8, label %4, !dbg !13670

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !13671
  %6 = add i32 %5, %2, !dbg !13673
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13674
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !13675
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !13676
  br label %8, !dbg !13677

8:                                                ; preds = %4, %1
  ret void, !dbg !13678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !13679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13683, metadata !DIExpression()), !dbg !13685
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13686
  call void @llvm.dbg.value(metadata i32 %1, metadata !13684, metadata !DIExpression()), !dbg !13685
  ret i32 %1, !dbg !13687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13692, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.value(metadata i32 %1, metadata !13693, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.value(metadata i32 0, metadata !13694, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !13710
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13712, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !13719
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !13719
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !13710
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13720
  br i1 %4, label %6, label %5, !dbg !13723

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13724
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13724
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13724
  unreachable, !dbg !13724

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !13719
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !13710
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13726
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13694, metadata !DIExpression()), !dbg !13702
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13727
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !13730
  %8 = icmp sgt i32 %0, 0, !dbg !13731
  %9 = icmp sgt i32 %7, 2, !dbg !13733
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13733
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13733
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13734
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13735
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13736
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !13743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !13743
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13745
  br i1 %12, label %14, label %13, !dbg !13748

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13749
  unreachable, !dbg !13749

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13712
  call void @llvm.dbg.value(metadata i32 %15, metadata !13715, metadata !DIExpression()) #23, !dbg !13719
  call void @llvm.dbg.value(metadata i32 %15, metadata !13709, metadata !DIExpression()) #23, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %15, metadata !13700, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !13743
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !13754
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13756, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !13694, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13694, metadata !DIExpression()), !dbg !13702
  ret void, !dbg !13758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !13759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13761, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.value(metadata i32 %0, metadata !13763, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13778
  call void @llvm.dbg.value(metadata i32 1000, metadata !13766, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i32 10000, metadata !13767, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i8 1, metadata !13768, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i1 true, metadata !13769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13778
  call void @llvm.dbg.value(metadata i1 true, metadata !13770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13778
  call void @llvm.dbg.value(metadata i8 0, metadata !13771, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i1 true, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13778
  call void @llvm.dbg.value(metadata i1 false, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13778
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !13778
  %2 = mul i32 %0, 10, !dbg !13780
  ret i32 %2, !dbg !13786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13789, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !13792
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13794, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !13796
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !13796
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !13792
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13797
  br i1 %3, label %5, label %4, !dbg !13798

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13799
  unreachable, !dbg !13799

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13794
  call void @llvm.dbg.value(metadata i32 %6, metadata !13715, metadata !DIExpression()) #23, !dbg !13796
  call void @llvm.dbg.value(metadata i32 %6, metadata !13709, metadata !DIExpression()) #23, !dbg !13792
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13800
  call void @llvm.dbg.value(metadata i32 %6, metadata !13790, metadata !DIExpression()), !dbg !13791
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13801
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13803
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13804
  br i1 %9, label %10, label %14, !dbg !13805

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13806
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !13808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !13808
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13810
  br i1 %11, label %13, label %12, !dbg !13811

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13812
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13812
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13812
  unreachable, !dbg !13812

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13737, metadata !DIExpression()) #23, !dbg !13808
  call void @llvm.dbg.value(metadata i32 %6, metadata !13751, metadata !DIExpression()) #23, !dbg !13813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13815, !srcloc !13757
  br label %33, !dbg !13816

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13817
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !13818
  %16 = icmp eq i32 %15, 0, !dbg !13818
  br i1 %16, label %27, label %17, !dbg !13820

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !13821
  br i1 %18, label %19, label %27, !dbg !13822

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13823
  %21 = icmp sgt i32 %20, %0, !dbg !13826
  br i1 %21, label %25, label %22, !dbg !13827

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13828
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !13828
  call void @llvm.dbg.value(metadata i32 %24, metadata !13790, metadata !DIExpression()), !dbg !13791
  br label %28, !dbg !13830

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13831
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13831
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13833
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13791
  call void @llvm.dbg.value(metadata i32 %29, metadata !13790, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !13835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !13835
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13837
  br i1 %30, label %32, label %31, !dbg !13838

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13839
  unreachable, !dbg !13839

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13737, metadata !DIExpression()) #23, !dbg !13835
  call void @llvm.dbg.value(metadata i32 %29, metadata !13751, metadata !DIExpression()) #23, !dbg !13840
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13842, !srcloc !13757
  br label %33, !dbg !13843

33:                                               ; preds = %32, %13
  ret void, !dbg !13843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13848, metadata !DIExpression()), !dbg !13850
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !13851
  %3 = icmp eq i32 %2, 0, !dbg !13851
  br i1 %3, label %16, label %4, !dbg !13852

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !13853
  br i1 %5, label %16, label %6, !dbg !13854

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13855
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13855
  %9 = load i8, i8* %8, align 2, !dbg !13855
  %10 = sext i8 %9 to i32, !dbg !13856
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13857
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !13858
  br i1 %12, label %16, label %13, !dbg !13859

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !13860
  %15 = xor i1 %14, true, !dbg !13861
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13850
  call void @llvm.dbg.value(metadata i1 %17, metadata !13849, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13850
  ret i1 %17, !dbg !13862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13863 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13867, metadata !DIExpression()), !dbg !13869
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13870
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13868, metadata !DIExpression()), !dbg !13869
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !13871
  br i1 %3, label %5, label %4, !dbg !13873

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !13874
  br label %5, !dbg !13876

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13867, metadata !DIExpression()), !dbg !13869
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13877
  ret i32 %6, !dbg !13878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()), !dbg !13883
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13884
  %3 = load i8, i8* %2, align 1, !dbg !13884
  call void @llvm.dbg.value(metadata i8 %3, metadata !13882, metadata !DIExpression()), !dbg !13883
  %4 = and i8 %3, 31, !dbg !13885
  %5 = icmp ne i8 %4, 0, !dbg !13886
  ret i1 %5, !dbg !13887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13890, metadata !DIExpression()), !dbg !13891
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13892
  br i1 %2, label %3, label %7, !dbg !13894

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13895, metadata !DIExpression()) #23, !dbg !13898
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13901
  %5 = load i8, i8* %4, align 1, !dbg !13902
  %6 = and i8 %5, 127, !dbg !13902
  store i8 %6, i8* %4, align 1, !dbg !13902
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13903, metadata !DIExpression()) #23, !dbg !13906
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13910
  br label %7, !dbg !13911

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13912, metadata !DIExpression()) #23, !dbg !13915
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13917
  %9 = load i8, i8* %8, align 1, !dbg !13918
  %10 = or i8 %9, -128, !dbg !13918
  store i8 %10, i8* %8, align 1, !dbg !13918
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13919, metadata !DIExpression()) #23, !dbg !13922
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13926, metadata !DIExpression()) #23, !dbg !13934
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13932, metadata !DIExpression()) #23, !dbg !13934
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !13936
  br i1 %11, label %12, label %13, !dbg !13939

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !13940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !13940
  unreachable, !dbg !13940

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13942
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13933, metadata !DIExpression()) #23, !dbg !13934
  %15 = icmp eq %struct._dnode* %14, null, !dbg !13944
  br i1 %15, label %26, label %16, !dbg !13942

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13933, metadata !DIExpression()) #23, !dbg !13934
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !13946
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !13933, metadata !DIExpression()) #23, !dbg !13934
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !13947
  %20 = icmp sgt i32 %19, 0, !dbg !13950
  br i1 %20, label %21, label %23, !dbg !13951

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13952
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !13954
  br label %28, !dbg !13955

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !13944
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13933, metadata !DIExpression()) #23, !dbg !13934
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13944
  br i1 %25, label %26, label %16, !dbg !13942, !llvm.loop !13956

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13958
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !13959
  br label %28, !dbg !13960

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13961
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !13962
  %31 = zext i1 %30 to i32, !dbg !13962
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !13963
  ret void, !dbg !13964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13965 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13967, metadata !DIExpression()), !dbg !13968
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !13969
  ret i1 %2, !dbg !13970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13971 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13973, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13974, metadata !DIExpression()), !dbg !13975
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !13976
  br i1 %3, label %4, label %5, !dbg !13979

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13980
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13980
  unreachable, !dbg !13980

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13982
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !13983
  ret void, !dbg !13984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !13985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13987, metadata !DIExpression()), !dbg !13988
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13989
  ret i1 %2, !dbg !13990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !13991 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13995, metadata !DIExpression()), !dbg !13996
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !13997
  br i1 %2, label %6, label %3, !dbg !13997

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13998
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13998
  br label %6, !dbg !13997

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13997
  ret %struct._dnode* %7, !dbg !13999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14000 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14004, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14005, metadata !DIExpression()), !dbg !14008
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14009
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14009
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14006, metadata !DIExpression()), !dbg !14008
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14010
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14011
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14012
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14013
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14014
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14015
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14016
  ret void, !dbg !14017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14018 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14022, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14023, metadata !DIExpression()), !dbg !14024
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14025
  br i1 %3, label %6, label %4, !dbg !14026

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14027
  br label %6, !dbg !14026

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14026
  ret %struct._dnode* %7, !dbg !14028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14029 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14033, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14034, metadata !DIExpression()), !dbg !14036
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14037
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14037
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14035, metadata !DIExpression()), !dbg !14036
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14038
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14039
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14040
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14041
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14042
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14043
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14044
  ret void, !dbg !14045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14048, metadata !DIExpression()), !dbg !14050
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14051
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14058, metadata !DIExpression()) #23, !dbg !14060
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14061
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14062
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14062
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14049, metadata !DIExpression()), !dbg !14050
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14063, metadata !DIExpression()) #23, !dbg !14069
  call void @llvm.dbg.value(metadata i32 %0, metadata !14068, metadata !DIExpression()) #23, !dbg !14069
  %6 = icmp eq i32 %0, 0, !dbg !14072
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14074
  br i1 %6, label %8, label %18, !dbg !14075

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14076
  br i1 %9, label %10, label %11, !dbg !14079

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 137) #24, !dbg !14080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !14080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 137) #24, !dbg !14080
  unreachable, !dbg !14080

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !14082
  br i1 %12, label %18, label %13, !dbg !14084

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14085
  br i1 %14, label %18, label %15, !dbg !14087

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !14088
  %17 = icmp eq i32 %16, 0, !dbg !14088
  br i1 %17, label %21, label %18, !dbg !14090

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14091
  br i1 %19, label %21, label %20, !dbg !14094

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14095
  br label %21, !dbg !14097

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14074
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14074
  ret void, !dbg !14098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14099 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14103, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14104, metadata !DIExpression()), !dbg !14106
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !14107
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14105, metadata !DIExpression()), !dbg !14106
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14104, metadata !DIExpression()), !dbg !14106
  ret %struct.k_thread* %3, !dbg !14108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14111, metadata !DIExpression()), !dbg !14112
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14113
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14114
  %4 = xor i1 %3, true, !dbg !14115
  ret i1 %4, !dbg !14116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14119, metadata !DIExpression()), !dbg !14120
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14121
  %3 = load i16, i16* %2, align 2, !dbg !14121
  %4 = icmp ult i16 %3, 128, !dbg !14122
  %5 = zext i1 %4 to i32, !dbg !14122
  ret i32 %5, !dbg !14123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14124 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14130, metadata !DIExpression()), !dbg !14131
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14132
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14133
  %4 = xor i1 %3, true, !dbg !14134
  ret i1 %4, !dbg !14135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14136 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14142, metadata !DIExpression()), !dbg !14143
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14144
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14144
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14145
  ret i1 %4, !dbg !14146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14147 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14149, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14150, metadata !DIExpression()), !dbg !14151
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14152
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14152
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14153
  br i1 %5, label %9, label %6, !dbg !14154

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14155
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14155
  br label %9, !dbg !14154

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14154
  ret %struct._dnode* %10, !dbg !14156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14157 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14161, metadata !DIExpression()), !dbg !14162
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14163
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14163
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14164
  ret i1 %4, !dbg !14165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14170, metadata !DIExpression()), !dbg !14173
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14174
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14174
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14171, metadata !DIExpression()), !dbg !14173
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14175
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14175
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14172, metadata !DIExpression()), !dbg !14173
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14176
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14177
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14178
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14179
  tail call fastcc void @sys_dnode_init.258(%struct._dnode* noundef %0) #25, !dbg !14180
  ret void, !dbg !14181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.258(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14182 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14184, metadata !DIExpression()), !dbg !14185
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14186
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14187
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14188
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14189
  ret void, !dbg !14190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !14191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14195, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i32 %1, metadata !14196, metadata !DIExpression()), !dbg !14197
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14198
  %4 = load i8, i8* %3, align 1, !dbg !14198
  %5 = zext i8 %4 to i32, !dbg !14199
  %6 = and i32 %5, %1, !dbg !14200
  %7 = icmp ne i32 %6, 0, !dbg !14201
  ret i1 %7, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14207, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i32 %1, metadata !14208, metadata !DIExpression()), !dbg !14209
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14210
  ret i1 %3, !dbg !14211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14214, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.value(metadata i32 %1, metadata !14215, metadata !DIExpression()), !dbg !14216
  %3 = icmp slt i32 %0, %1, !dbg !14217
  ret i1 %3, !dbg !14218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14221, metadata !DIExpression()), !dbg !14225
  call void @llvm.dbg.value(metadata i32 0, metadata !14222, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14227
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14229, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14227
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14232
  br i1 %3, label %5, label %4, !dbg !14233

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14234
  unreachable, !dbg !14234

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14227
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14235
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()), !dbg !14226
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14236
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14241
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14243
  br i1 %6, label %8, label %7, !dbg !14244

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14245
  unreachable, !dbg !14245

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14229
  call void @llvm.dbg.value(metadata i32 %9, metadata !13715, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %9, metadata !13709, metadata !DIExpression()) #23, !dbg !14227
  call void @llvm.dbg.value(metadata i32 %9, metadata !14224, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14241
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !14246
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14248, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14222, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()), !dbg !14226
  ret void, !dbg !14249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14252, metadata !DIExpression()), !dbg !14253
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14254
  br i1 %2, label %27, label %3, !dbg !14256

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14257
  br i1 %4, label %5, label %27, !dbg !14258

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13912, metadata !DIExpression()) #23, !dbg !14259
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14262
  %7 = load i8, i8* %6, align 1, !dbg !14263
  %8 = or i8 %7, -128, !dbg !14263
  store i8 %8, i8* %6, align 1, !dbg !14263
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13919, metadata !DIExpression()) #23, !dbg !14264
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13926, metadata !DIExpression()) #23, !dbg !14266
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13932, metadata !DIExpression()) #23, !dbg !14266
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14268
  br i1 %9, label %10, label %11, !dbg !14269

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !14270
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !14270
  unreachable, !dbg !14270

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14271
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13933, metadata !DIExpression()) #23, !dbg !14266
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14272
  br i1 %13, label %24, label %14, !dbg !14271

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13933, metadata !DIExpression()) #23, !dbg !14266
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14273
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13933, metadata !DIExpression()) #23, !dbg !14266
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !14274
  %18 = icmp sgt i32 %17, 0, !dbg !14275
  br i1 %18, label %19, label %21, !dbg !14276

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14277
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !14278
  br label %26, !dbg !14279

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !14272
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !13933, metadata !DIExpression()) #23, !dbg !14266
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14272
  br i1 %23, label %24, label %14, !dbg !14271, !llvm.loop !14280

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14282
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !14283
  br label %26, !dbg !14284

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14285
  br label %27, !dbg !14286

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14288 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14290, metadata !DIExpression()), !dbg !14291
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14292
  br i1 %2, label %6, label %3, !dbg !14293

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14294
  %5 = xor i1 %4, true, !dbg !14293
  br label %6, !dbg !14293

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14298, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i32 0, metadata !14299, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14304
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14306, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14308
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14308
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14304
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14309
  br i1 %3, label %5, label %4, !dbg !14310

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14311
  unreachable, !dbg !14311

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14308
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14304
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14301, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i32 undef, metadata !14299, metadata !DIExpression()), !dbg !14303
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14313
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14316
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14318
  br i1 %6, label %8, label %7, !dbg !14319

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14320
  unreachable, !dbg !14320

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %9, metadata !13715, metadata !DIExpression()) #23, !dbg !14308
  call void @llvm.dbg.value(metadata i32 %9, metadata !13709, metadata !DIExpression()) #23, !dbg !14304
  call void @llvm.dbg.value(metadata i32 %9, metadata !14301, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14316
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !14321
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14323, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14299, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i32 undef, metadata !14299, metadata !DIExpression()), !dbg !14303
  ret void, !dbg !14324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14325 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14327, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14330
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14332, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14334
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14334
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14330
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14335
  br i1 %3, label %5, label %4, !dbg !14336

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14337
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14337
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14337
  unreachable, !dbg !14337

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14332
  call void @llvm.dbg.value(metadata i32 %6, metadata !13715, metadata !DIExpression()) #23, !dbg !14334
  call void @llvm.dbg.value(metadata i32 %6, metadata !13709, metadata !DIExpression()) #23, !dbg !14330
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14338
  call void @llvm.dbg.value(metadata i32 %6, metadata !14328, metadata !DIExpression()), !dbg !14329
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14339
  br i1 %7, label %8, label %12, !dbg !14341

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14342
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14345
  br i1 %9, label %11, label %10, !dbg !14346

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14347
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14347
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14347
  unreachable, !dbg !14347

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13737, metadata !DIExpression()) #23, !dbg !14342
  call void @llvm.dbg.value(metadata i32 %6, metadata !13751, metadata !DIExpression()) #23, !dbg !14348
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14350, !srcloc !13757
  br label %14, !dbg !14351

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.263(%struct.k_thread* noundef %0) #25, !dbg !14352
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14353
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14354
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14354
  br label %14, !dbg !14355

14:                                               ; preds = %12, %11
  ret void, !dbg !14355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14358, metadata !DIExpression()), !dbg !14359
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14360
  %3 = load i8, i8* %2, align 1, !dbg !14360
  %4 = and i8 %3, 4, !dbg !14361
  %5 = icmp eq i8 %4, 0, !dbg !14362
  ret i1 %5, !dbg !14363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.263(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14366, metadata !DIExpression()), !dbg !14367
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14368
  %3 = load i8, i8* %2, align 1, !dbg !14369
  %4 = and i8 %3, -5, !dbg !14369
  store i8 %4, i8* %2, align 1, !dbg !14369
  ret void, !dbg !14370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14371 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14373, metadata !DIExpression()), !dbg !14375
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !14376
  br i1 %4, label %5, label %12, !dbg !14378

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !14379
  br i1 %6, label %7, label %12, !dbg !14380

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14386, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !14395
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14397
  br i1 %8, label %10, label %9, !dbg !14400

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !14401
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !14401
  unreachable, !dbg !14401

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14381, metadata !DIExpression()) #23, !dbg !14387
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14403
  br label %16, !dbg !14404

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13742, metadata !DIExpression()) #23, !dbg !14405
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14408
  br i1 %13, label %15, label %14, !dbg !14409

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14410
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14410
  unreachable, !dbg !14410

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13737, metadata !DIExpression()) #23, !dbg !14405
  call void @llvm.dbg.value(metadata i32 %3, metadata !13751, metadata !DIExpression()) #23, !dbg !14411
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14413, !srcloc !13757
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14419, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata i32 %0, metadata !14421, metadata !DIExpression()), !dbg !14426
  %2 = icmp eq i32 %0, 0, !dbg !14428
  br i1 %2, label %3, label %6, !dbg !14429

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14430, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %4, metadata !14433, metadata !DIExpression()) #23, !dbg !14438
  %5 = icmp eq i32 %4, 0, !dbg !14439
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14420
  ret i1 %7, !dbg !14440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !14441 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14444
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14443, metadata !DIExpression()), !dbg !14445
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14446
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14447
  ret i1 %3, !dbg !14448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14451, metadata !DIExpression()), !dbg !14453
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !14454
  call void @llvm.dbg.value(metadata i32 %2, metadata !14452, metadata !DIExpression()), !dbg !14453
  ret i32 %2, !dbg !14455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14458, metadata !DIExpression()), !dbg !14462
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14463
  call void @llvm.dbg.value(metadata i32 0, metadata !14459, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14465
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14467, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14469
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14469
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14465
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14470
  br i1 %4, label %6, label %5, !dbg !14471

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14472
  unreachable, !dbg !14472

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14467
  call void @llvm.dbg.value(metadata i32 %7, metadata !13715, metadata !DIExpression()) #23, !dbg !14469
  call void @llvm.dbg.value(metadata i32 %7, metadata !13709, metadata !DIExpression()) #23, !dbg !14465
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14473
  call void @llvm.dbg.value(metadata i32 %7, metadata !14461, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14459, metadata !DIExpression()), !dbg !14464
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14474
  br i1 %8, label %9, label %13, !dbg !14478

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13895, metadata !DIExpression()) #23, !dbg !14479
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14482
  %11 = load i8, i8* %10, align 1, !dbg !14483
  %12 = and i8 %11, 127, !dbg !14483
  store i8 %12, i8* %10, align 1, !dbg !14483
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13903, metadata !DIExpression()) #23, !dbg !14484
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14486
  br label %13, !dbg !14487

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !14488
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14489
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14490
  %16 = zext i1 %15 to i32, !dbg !14490
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !14491
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14492
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14494
  br i1 %17, label %19, label %18, !dbg !14495

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14496
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14496
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14496
  unreachable, !dbg !14496

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13737, metadata !DIExpression()) #23, !dbg !14492
  call void @llvm.dbg.value(metadata i32 %7, metadata !13751, metadata !DIExpression()) #23, !dbg !14497
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14499, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14459, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14459, metadata !DIExpression()), !dbg !14464
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14500
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14502
  br i1 %21, label %22, label %23, !dbg !14503

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !14504
  br label %23, !dbg !14506

23:                                               ; preds = %22, %19
  ret void, !dbg !14507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14510, metadata !DIExpression()), !dbg !14511
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14512
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14513
  ret i32 %3, !dbg !14514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14517, metadata !DIExpression()), !dbg !14518
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14519
  %3 = load i8, i8* %2, align 1, !dbg !14520
  %4 = or i8 %3, 16, !dbg !14520
  store i8 %4, i8* %2, align 1, !dbg !14520
  ret void, !dbg !14521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14522 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14523, !srcloc !13718
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %2, metadata !13715, metadata !DIExpression()) #23, !dbg !14525
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14525
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !14526
  ret void, !dbg !14527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14530, metadata !DIExpression()), !dbg !14531
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !14532
  br i1 %2, label %3, label %5, !dbg !14534

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14535
  br label %6, !dbg !14537

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13751, metadata !DIExpression()) #23, !dbg !14538
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14541, !srcloc !13757
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14545, metadata !DIExpression()), !dbg !14547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14548
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14550, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14548
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14553
  br i1 %3, label %5, label %4, !dbg !14554

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14555
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14555
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14555
  unreachable, !dbg !14555

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14550
  call void @llvm.dbg.value(metadata i32 %6, metadata !13715, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %6, metadata !13709, metadata !DIExpression()) #23, !dbg !14548
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14556
  call void @llvm.dbg.value(metadata i32 %6, metadata !14546, metadata !DIExpression()), !dbg !14547
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !14557
  br i1 %7, label %12, label %8, !dbg !14559

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14560
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14563
  br i1 %9, label %11, label %10, !dbg !14564

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14565
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14565
  unreachable, !dbg !14565

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13737, metadata !DIExpression()) #23, !dbg !14560
  call void @llvm.dbg.value(metadata i32 %6, metadata !13751, metadata !DIExpression()) #23, !dbg !14566
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14568, !srcloc !13757
  br label %14, !dbg !14569

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !14570
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14571
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14572
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14572
  br label %14, !dbg !14573

14:                                               ; preds = %12, %11
  ret void, !dbg !14573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14574 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14576, metadata !DIExpression()), !dbg !14577
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14578
  %3 = load i8, i8* %2, align 1, !dbg !14578
  %4 = and i8 %3, 16, !dbg !14579
  %5 = icmp ne i8 %4, 0, !dbg !14580
  ret i1 %5, !dbg !14581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14584, metadata !DIExpression()), !dbg !14585
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14586
  %3 = load i8, i8* %2, align 1, !dbg !14587
  %4 = and i8 %3, -17, !dbg !14587
  store i8 %4, i8* %2, align 1, !dbg !14587
  ret void, !dbg !14588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14589 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14599, metadata !DIExpression()), !dbg !14603
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14597, metadata !DIExpression()), !dbg !14603
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14598, metadata !DIExpression()), !dbg !14603
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14604
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14604
  br i1 %5, label %9, label %6, !dbg !14604

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !14604
  br i1 %7, label %9, label %8, !dbg !14607

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 773) #24, !dbg !14608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 773) #24, !dbg !14608
  unreachable, !dbg !14608

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14600, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14611
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14613, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14611
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14616
  br i1 %11, label %13, label %12, !dbg !14617

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14618
  unreachable, !dbg !14618

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14611
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !14602, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14600, metadata !DIExpression()), !dbg !14610
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14620
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14623
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14625
  br i1 %14, label %16, label %15, !dbg !14626

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14627
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14627
  unreachable, !dbg !14627

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %17, metadata !13715, metadata !DIExpression()) #23, !dbg !14615
  call void @llvm.dbg.value(metadata i32 %17, metadata !13709, metadata !DIExpression()) #23, !dbg !14611
  call void @llvm.dbg.value(metadata i32 %17, metadata !14602, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !14628
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14630, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14600, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14600, metadata !DIExpression()), !dbg !14610
  ret void, !dbg !14631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14632 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14634, metadata !DIExpression()), !dbg !14635
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14636
  %3 = load i8, i8* %2, align 1, !dbg !14636
  %4 = and i8 %3, 1, !dbg !14637
  %5 = icmp ne i8 %4, 0, !dbg !14638
  ret i1 %5, !dbg !14639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14640 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14644, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14642, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14643, metadata !DIExpression()), !dbg !14645
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !14646
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !14647
  ret void, !dbg !14648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14653, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14654, metadata !DIExpression()), !dbg !14655
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !14656
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !14657
  %3 = icmp eq %union.anon* %1, null, !dbg !14658
  br i1 %3, label %24, label %4, !dbg !14660

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14661
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14663
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14664
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13926, metadata !DIExpression()) #23, !dbg !14665
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13932, metadata !DIExpression()) #23, !dbg !14665
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14667
  br i1 %7, label %8, label %9, !dbg !14668

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !14669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !14669
  unreachable, !dbg !14669

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !14670
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13933, metadata !DIExpression()) #23, !dbg !14665
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14671
  br i1 %11, label %22, label %12, !dbg !14670

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13933, metadata !DIExpression()) #23, !dbg !14665
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14672
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13933, metadata !DIExpression()) #23, !dbg !14665
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !14673
  %16 = icmp sgt i32 %15, 0, !dbg !14674
  br i1 %16, label %17, label %19, !dbg !14675

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14676
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !14677
  br label %24, !dbg !14678

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !14671
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13933, metadata !DIExpression()) #23, !dbg !14665
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14671
  br i1 %21, label %22, label %12, !dbg !14670, !llvm.loop !14679

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14681
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !14682
  br label %24, !dbg !14683

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14685 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14690, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()), !dbg !14691
  %4 = icmp eq i64 %3, -1, !dbg !14692
  br i1 %4, label %6, label %5, !dbg !14694

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.265(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14695
  br label %6, !dbg !14697

6:                                                ; preds = %5, %2
  ret void, !dbg !14698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.265(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14699 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14702, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14701, metadata !DIExpression()), !dbg !14703
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14704
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14705
  ret void, !dbg !14706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14707 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14709, metadata !DIExpression()), !dbg !14717
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14718
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14710, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata i32 0, metadata !14711, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14720
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14722, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14720
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14725
  br i1 %5, label %7, label %6, !dbg !14726

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14727
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14727
  unreachable, !dbg !14727

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14720
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()), !dbg !14719
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14729
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14730
  %10 = load i8, i8* %9, align 1, !dbg !14730
  %11 = and i8 %10, 40, !dbg !14731
  %12 = icmp eq i8 %11, 0, !dbg !14731
  call void @llvm.dbg.value(metadata i1 %12, metadata !14714, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14732
  br i1 %12, label %13, label %20, !dbg !14733

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14734
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !14734
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !14734
  %17 = icmp eq %union.anon* %16, null, !dbg !14738
  br i1 %17, label %19, label %18, !dbg !14739

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !14740
  br label %19, !dbg !14742

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.263(%struct.k_thread* noundef nonnull %3) #25, !dbg !14743
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !14744
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !14745
  br label %20, !dbg !14746

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14747
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14749
  br i1 %21, label %23, label %22, !dbg !14750

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14751
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14751
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14751
  unreachable, !dbg !14751

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14722
  call void @llvm.dbg.value(metadata i32 %24, metadata !13715, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata i32 %24, metadata !13709, metadata !DIExpression()) #23, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %24, metadata !14713, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14747
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !14752
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14754, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14711, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()), !dbg !14719
  ret void, !dbg !14755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14758, metadata !DIExpression()), !dbg !14759
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !14760
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14761
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !14762
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14763
  store %union.anon* null, %union.anon** %3, align 8, !dbg !14764
  ret void, !dbg !14765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14766 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14770, metadata !DIExpression()), !dbg !14771
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14772
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !14772
  %4 = icmp eq %union.anon* %3, null, !dbg !14772
  br i1 %4, label %5, label %6, !dbg !14775

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 726) #24, !dbg !14776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 726) #24, !dbg !14776
  unreachable, !dbg !14776

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !14778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14779 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14781, metadata !DIExpression()), !dbg !14782
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14783
  %3 = load i8, i8* %2, align 1, !dbg !14784
  %4 = and i8 %3, -3, !dbg !14784
  store i8 %4, i8* %2, align 1, !dbg !14784
  ret void, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14786 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14788, metadata !DIExpression()), !dbg !14789
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14790
  br i1 %2, label %3, label %7, !dbg !14792

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13895, metadata !DIExpression()) #23, !dbg !14793
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14796
  %5 = load i8, i8* %4, align 1, !dbg !14797
  %6 = and i8 %5, 127, !dbg !14797
  store i8 %6, i8* %4, align 1, !dbg !14797
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13903, metadata !DIExpression()) #23, !dbg !14798
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14800
  br label %7, !dbg !14801

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14802
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14803
  %10 = zext i1 %9 to i32, !dbg !14803
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !14804
  ret void, !dbg !14805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14808, metadata !DIExpression()), !dbg !14809
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14810
  %3 = load i8, i8* %2, align 1, !dbg !14811
  %4 = or i8 %3, 2, !dbg !14811
  store i8 %4, i8* %2, align 1, !dbg !14811
  ret void, !dbg !14812
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14813 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i32 0, metadata !14816, metadata !DIExpression()), !dbg !14820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14821
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14823, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14821
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14826
  br i1 %3, label %5, label %4, !dbg !14827

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14828
  unreachable, !dbg !14828

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14821
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14818, metadata !DIExpression()), !dbg !14820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14816, metadata !DIExpression()), !dbg !14820
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14830
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14833
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14835
  br i1 %6, label %8, label %7, !dbg !14836

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14837
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14837
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14837
  unreachable, !dbg !14837

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %9, metadata !13715, metadata !DIExpression()) #23, !dbg !14825
  call void @llvm.dbg.value(metadata i32 %9, metadata !13709, metadata !DIExpression()) #23, !dbg !14821
  call void @llvm.dbg.value(metadata i32 %9, metadata !14818, metadata !DIExpression()), !dbg !14820
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14833
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !14838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14840, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14816, metadata !DIExpression()), !dbg !14820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14816, metadata !DIExpression()), !dbg !14820
  ret void, !dbg !14841
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14842 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14848, metadata !DIExpression()), !dbg !14853
  call void @llvm.dbg.value(metadata i32 %0, metadata !14846, metadata !DIExpression()), !dbg !14853
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14847, metadata !DIExpression()), !dbg !14853
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14854
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14855
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14856
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14857
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14858
  call void @llvm.dbg.value(metadata i32 %6, metadata !14849, metadata !DIExpression()), !dbg !14853
  call void @llvm.dbg.value(metadata i32 0, metadata !14850, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14860
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14862, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14860
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14865
  br i1 %8, label %10, label %9, !dbg !14866

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14867
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14867
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14867
  unreachable, !dbg !14867

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14860
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14868
  call void @llvm.dbg.value(metadata i32 undef, metadata !14852, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()), !dbg !14859
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14869
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14873
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !14874
  br i1 %13, label %14, label %15, !dbg !14875

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14876
  br label %15, !dbg !14878

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14879
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14881
  br i1 %16, label %18, label %17, !dbg !14882

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14883
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14883
  unreachable, !dbg !14883

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !14862
  call void @llvm.dbg.value(metadata i32 %19, metadata !13715, metadata !DIExpression()) #23, !dbg !14864
  call void @llvm.dbg.value(metadata i32 %19, metadata !13709, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata i32 %19, metadata !14852, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !14884
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !14886, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14850, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()), !dbg !14859
  ret i32 %6, !dbg !14887
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14888 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.value(metadata i64 undef, metadata !14895, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14892, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14894, metadata !DIExpression()), !dbg !14896
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14897
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14898
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !14899
  br i1 %6, label %7, label %8, !dbg !14902

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 846) #24, !dbg !14903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 846) #24, !dbg !14903
  unreachable, !dbg !14903

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14905
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14907, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14905
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14910
  br i1 %10, label %12, label %11, !dbg !14911

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14912
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14912
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14912
  unreachable, !dbg !14912

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14905
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14913
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14914
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !14916
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14918
  br i1 %14, label %16, label %15, !dbg !14919

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !14920
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !14920
  unreachable, !dbg !14920

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !14921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14386, metadata !DIExpression()) #23, !dbg !14921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14390, metadata !DIExpression()) #23, !dbg !14923
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14925
  br i1 %17, label %19, label %18, !dbg !14926

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !14927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !14927
  unreachable, !dbg !14927

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14381, metadata !DIExpression()) #23, !dbg !14921
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !14928
  ret i32 %21, !dbg !14929
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14930 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14934, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14935, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata i32 0, metadata !14936, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14941
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14943, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14945
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14945
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14941
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14946
  br i1 %3, label %5, label %4, !dbg !14947

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14948
  unreachable, !dbg !14948

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14945
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14941
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14949
  call void @llvm.dbg.value(metadata i32 undef, metadata !14938, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14935, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata i32 undef, metadata !14936, metadata !DIExpression()), !dbg !14940
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14950
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14935, metadata !DIExpression()), !dbg !14939
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14953
  br i1 %8, label %10, label %9, !dbg !14955

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14956
  br label %10, !dbg !14958

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14959
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14961
  br i1 %11, label %13, label %12, !dbg !14962

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !14963
  unreachable, !dbg !14963

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14943
  call void @llvm.dbg.value(metadata i32 %14, metadata !13715, metadata !DIExpression()) #23, !dbg !14945
  call void @llvm.dbg.value(metadata i32 %14, metadata !13709, metadata !DIExpression()) #23, !dbg !14941
  call void @llvm.dbg.value(metadata i32 %14, metadata !14938, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !14964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14966, !srcloc !13757
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14935, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata i32 undef, metadata !14936, metadata !DIExpression()), !dbg !14940
  ret %struct.k_thread* %7, !dbg !14967
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14968 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14970, metadata !DIExpression()), !dbg !14975
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14971, metadata !DIExpression()), !dbg !14975
  call void @llvm.dbg.value(metadata i32 0, metadata !14972, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !14977
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14979, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14981
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !14981
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14977
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14982
  br i1 %3, label %5, label %4, !dbg !14983

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !14984
  unreachable, !dbg !14984

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !14981
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !14977
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14974, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14971, metadata !DIExpression()), !dbg !14975
  call void @llvm.dbg.value(metadata i32 undef, metadata !14972, metadata !DIExpression()), !dbg !14976
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14971, metadata !DIExpression()), !dbg !14975
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14989
  br i1 %8, label %11, label %9, !dbg !14991

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14992
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14994
  br label %11, !dbg !14995

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !14996
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14998
  br i1 %12, label %14, label %13, !dbg !14999

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15000
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15000
  unreachable, !dbg !15000

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !14979
  call void @llvm.dbg.value(metadata i32 %15, metadata !13715, metadata !DIExpression()) #23, !dbg !14981
  call void @llvm.dbg.value(metadata i32 %15, metadata !13709, metadata !DIExpression()) #23, !dbg !14977
  call void @llvm.dbg.value(metadata i32 %15, metadata !14974, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !14996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !15001
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15003, !srcloc !13757
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14971, metadata !DIExpression()), !dbg !14975
  call void @llvm.dbg.value(metadata i32 undef, metadata !14972, metadata !DIExpression()), !dbg !14976
  ret %struct.k_thread* %7, !dbg !15004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15005 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15007, metadata !DIExpression()), !dbg !15008
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()) #23, !dbg !15009
  call void @llvm.dbg.value(metadata i32 0, metadata !14816, metadata !DIExpression()) #23, !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15012
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15014, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15016
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15016
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15012
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15017
  br i1 %3, label %5, label %4, !dbg !15018

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15019
  unreachable, !dbg !15019

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15016
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15012
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14818, metadata !DIExpression()) #23, !dbg !15011
  call void @llvm.dbg.value(metadata i32 undef, metadata !14816, metadata !DIExpression()) #23, !dbg !15011
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15021
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15022
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15024
  br i1 %6, label %8, label %7, !dbg !15025

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15026
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15026
  unreachable, !dbg !15026

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15014
  call void @llvm.dbg.value(metadata i32 %9, metadata !13715, metadata !DIExpression()) #23, !dbg !15016
  call void @llvm.dbg.value(metadata i32 %9, metadata !13709, metadata !DIExpression()) #23, !dbg !15012
  call void @llvm.dbg.value(metadata i32 %9, metadata !14818, metadata !DIExpression()) #23, !dbg !15011
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !15027
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15029, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !14816, metadata !DIExpression()) #23, !dbg !15011
  call void @llvm.dbg.value(metadata i32 undef, metadata !14816, metadata !DIExpression()) #23, !dbg !15011
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15030
  ret void, !dbg !15031
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15034, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata i32 %1, metadata !15035, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata i8 0, metadata !15036, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata i32 0, metadata !15037, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15042
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15044, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15046
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15046
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15042
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15047
  br i1 %4, label %6, label %5, !dbg !15048

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15049
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15049
  unreachable, !dbg !15049

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15046
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15042
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15050
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i8 poison, metadata !15036, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata i32 undef, metadata !15037, metadata !DIExpression()), !dbg !15041
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15051
  call void @llvm.dbg.value(metadata i1 %9, metadata !15036, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15040
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15054

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13895, metadata !DIExpression()) #23, !dbg !15055
  %14 = load i8, i8* %7, align 1, !dbg !15061
  %15 = and i8 %14, 127, !dbg !15061
  store i8 %15, i8* %7, align 1, !dbg !15061
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13903, metadata !DIExpression()) #23, !dbg !15062
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15064
  store i8 %12, i8* %11, align 2, !dbg !15065
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13912, metadata !DIExpression()) #23, !dbg !15066
  %16 = load i8, i8* %7, align 1, !dbg !15068
  %17 = or i8 %16, -128, !dbg !15068
  store i8 %17, i8* %7, align 1, !dbg !15068
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13919, metadata !DIExpression()) #23, !dbg !15069
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13926, metadata !DIExpression()) #23, !dbg !15071
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13932, metadata !DIExpression()) #23, !dbg !15071
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15073
  br i1 %18, label %19, label %20, !dbg !15074

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !15075
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !15075
  unreachable, !dbg !15075

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15076
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13933, metadata !DIExpression()) #23, !dbg !15071
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15077
  br i1 %22, label %32, label %23, !dbg !15076

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13933, metadata !DIExpression()) #23, !dbg !15071
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !13933, metadata !DIExpression()) #23, !dbg !15071
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !15079
  %27 = icmp sgt i32 %26, 0, !dbg !15080
  br i1 %27, label %28, label %29, !dbg !15081

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !15082
  br label %33, !dbg !15083

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !15077
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13933, metadata !DIExpression()) #23, !dbg !15071
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15077
  br i1 %31, label %32, label %23, !dbg !15076, !llvm.loop !15084

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !15086
  br label %33, !dbg !15087

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15088
  br label %35, !dbg !15089

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15090
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15092
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15094
  br i1 %36, label %38, label %37, !dbg !15095

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15096
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15096
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15096
  unreachable, !dbg !15096

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15044
  call void @llvm.dbg.value(metadata i32 %39, metadata !13715, metadata !DIExpression()) #23, !dbg !15046
  call void @llvm.dbg.value(metadata i32 %39, metadata !13709, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %39, metadata !15039, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !15097
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15099, !srcloc !13757
  call void @llvm.dbg.value(metadata i8 poison, metadata !15036, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata i32 undef, metadata !15037, metadata !DIExpression()), !dbg !15041
  ret i1 %9, !dbg !15100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15105, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata i32 %1, metadata !15106, metadata !DIExpression()), !dbg !15108
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15109
  call void @llvm.dbg.value(metadata i1 %3, metadata !15107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15108
  br i1 %3, label %4, label %12, !dbg !15110

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15112
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15113
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15113
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15113
  %9 = load i8, i8* %8, align 1, !dbg !15113
  %10 = icmp eq i8 %9, 0, !dbg !15114
  br i1 %10, label %11, label %12, !dbg !15115

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15116
  br label %12, !dbg !15118

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15120 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15122, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15126
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15128, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15126
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15131
  br i1 %2, label %4, label %3, !dbg !15132

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15133
  unreachable, !dbg !15133

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15126
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15124, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata i32 undef, metadata !15122, metadata !DIExpression()), !dbg !15125
  tail call fastcc void @z_sched_lock() #25, !dbg !15135
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15138
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15140
  br i1 %5, label %7, label %6, !dbg !15141

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15142
  unreachable, !dbg !15142

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15128
  call void @llvm.dbg.value(metadata i32 %8, metadata !13715, metadata !DIExpression()) #23, !dbg !15130
  call void @llvm.dbg.value(metadata i32 %8, metadata !13709, metadata !DIExpression()) #23, !dbg !15126
  call void @llvm.dbg.value(metadata i32 %8, metadata !15124, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !15143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15145, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !15122, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata i32 undef, metadata !15122, metadata !DIExpression()), !dbg !15125
  ret void, !dbg !15146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15147 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15148, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %1, metadata !14433, metadata !DIExpression()) #23, !dbg !15153
  %2 = icmp eq i32 %1, 0, !dbg !15154
  br i1 %2, label %4, label %3, !dbg !15155

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.273, i32 0, i32 0), i32 noundef 253) #24, !dbg !15156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.273, i32 0, i32 0), i32 noundef 253) #24, !dbg !15156
  unreachable, !dbg !15156

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15158
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15158
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15158
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15158
  %9 = load i8, i8* %8, align 1, !dbg !15158
  %10 = icmp eq i8 %9, 1, !dbg !15158
  br i1 %10, label %11, label %12, !dbg !15161

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.273, i32 0, i32 0), i32 noundef 254) #24, !dbg !15162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.273, i32 0, i32 0), i32 noundef 254) #24, !dbg !15162
  unreachable, !dbg !15162

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15164
  store i8 %13, i8* %8, align 1, !dbg !15164
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15165, !srcloc !15167
  ret void, !dbg !15168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15169 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15171, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15175
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15177, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15175
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15180
  br i1 %2, label %4, label %3, !dbg !15181

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15182
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15182
  unreachable, !dbg !15182

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15175
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !15173, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()), !dbg !15174
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15184
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15184
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15184
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15184
  %9 = load i8, i8* %8, align 1, !dbg !15184
  %10 = icmp eq i8 %9, 0, !dbg !15184
  br i1 %10, label %11, label %12, !dbg !15189

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 999) #24, !dbg !15190
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 999) #24, !dbg !15190
  unreachable, !dbg !15190

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15192, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %13, metadata !14433, metadata !DIExpression()) #23, !dbg !15197
  %14 = icmp eq i32 %13, 0, !dbg !15198
  br i1 %14, label %16, label %15, !dbg !15199

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15200
  unreachable, !dbg !15200

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15202
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15203
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15203
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15203
  %21 = load i8, i8* %20, align 1, !dbg !15204
  %22 = add i8 %21, 1, !dbg !15204
  store i8 %22, i8* %20, align 1, !dbg !15204
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15205
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15206
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15208
  br i1 %23, label %25, label %24, !dbg !15209

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15210
  unreachable, !dbg !15210

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15177
  call void @llvm.dbg.value(metadata i32 %26, metadata !13715, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata i32 %26, metadata !13709, metadata !DIExpression()) #23, !dbg !15175
  call void @llvm.dbg.value(metadata i32 %26, metadata !15173, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15206
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !15211
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15213, !srcloc !13757
  call void @llvm.dbg.value(metadata i32 1, metadata !15171, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()), !dbg !15174
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15214
  ret void, !dbg !15215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15216 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15217
  ret %struct.k_thread* %1, !dbg !15218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15219 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15223, metadata !DIExpression()), !dbg !15228
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15224, metadata !DIExpression()), !dbg !15228
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15229
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15225, metadata !DIExpression()), !dbg !15228
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15230
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15226, metadata !DIExpression()), !dbg !15228
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15231
  call void @llvm.dbg.value(metadata i32 %5, metadata !15227, metadata !DIExpression()), !dbg !15228
  %6 = icmp sgt i32 %5, 0, !dbg !15232
  br i1 %6, label %17, label %7, !dbg !15234

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15235
  br i1 %8, label %17, label %9, !dbg !15237

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15238
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15238
  %12 = load i32, i32* %11, align 8, !dbg !15238
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15240
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15240
  %15 = load i32, i32* %14, align 8, !dbg !15240
  %16 = icmp ult i32 %12, %15, !dbg !15241
  br label %17, !dbg !15242

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15243
  ret i1 %18, !dbg !15244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15245 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15262, metadata !DIExpression()), !dbg !15277
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15263, metadata !DIExpression()), !dbg !15277
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15278
  br i1 %4, label %5, label %6, !dbg !15281

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15282
  unreachable, !dbg !15282

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15284
  %8 = load i32, i32* %7, align 4, !dbg !15285
  %9 = add nsw i32 %8, 1, !dbg !15285
  store i32 %9, i32* %7, align 4, !dbg !15285
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15286
  store i32 %8, i32* %10, align 8, !dbg !15287
  %11 = load i32, i32* %7, align 4, !dbg !15288
  %12 = icmp eq i32 %11, 0, !dbg !15289
  br i1 %12, label %13, label %35, !dbg !15290

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15291
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15291
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15265, metadata !DIExpression()), !dbg !15291
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15291
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15291
  %17 = load i32, i32* %16, align 4, !dbg !15291
  %18 = shl i32 %17, 2, !dbg !15291
  %19 = alloca i8, i32 %18, align 8, !dbg !15291
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15291
  store i8* %19, i8** %20, align 4, !dbg !15291
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15291
  %22 = alloca i8, i32 %17, align 8, !dbg !15291
  store i8* %22, i8** %21, align 4, !dbg !15291
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15291
  store i32 -1, i32* %23, align 4, !dbg !15291
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15292
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15274, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15264, metadata !DIExpression()), !dbg !15277
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15294
  br i1 %25, label %26, label %27, !dbg !15291

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15294
  br label %35, !dbg !15295

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15264, metadata !DIExpression()), !dbg !15277
  %29 = load i32, i32* %7, align 4, !dbg !15296
  %30 = add nsw i32 %29, 1, !dbg !15296
  store i32 %30, i32* %7, align 4, !dbg !15296
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15298
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15298
  store i32 %29, i32* %32, align 8, !dbg !15299
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15292
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15274, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15264, metadata !DIExpression()), !dbg !15277
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15294
  br i1 %34, label %26, label %27, !dbg !15291, !llvm.loop !15300

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15302
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15303
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !15304
  ret void, !dbg !15305
}

; Function Attrs: optsize
declare !dbg !15306 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15311 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15314 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15316, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15317, metadata !DIExpression()), !dbg !15318
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15319
  br i1 %3, label %4, label %5, !dbg !15322

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15323
  unreachable, !dbg !15323

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15325
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15326
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !15327
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15328
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15328
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15330
  br i1 %10, label %11, label %13, !dbg !15331

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15332
  store i32 0, i32* %12, align 4, !dbg !15334
  br label %13, !dbg !15335

13:                                               ; preds = %11, %5
  ret void, !dbg !15336
}

; Function Attrs: optsize
declare !dbg !15337 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15338 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15342, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15343, metadata !DIExpression()), !dbg !15345
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15346
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !15347
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15344, metadata !DIExpression()), !dbg !15345
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15343, metadata !DIExpression()), !dbg !15345
  ret %struct.k_thread* %4, !dbg !15348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15349 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15353, metadata !DIExpression()), !dbg !15354
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !15355
  ret %struct.rbnode* %2, !dbg !15356
}

; Function Attrs: optsize
declare !dbg !15357 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15360 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15370, metadata !DIExpression()), !dbg !15374
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15375
  %3 = load i32, i32* %2, align 4, !dbg !15375
  %4 = icmp eq i32 %3, 0, !dbg !15377
  br i1 %4, label %10, label %5, !dbg !15378

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15371, metadata !DIExpression()), !dbg !15374
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15379, !range !7509
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15380
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15372, metadata !DIExpression()), !dbg !15374
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !15381
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15373, metadata !DIExpression()), !dbg !15374
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15371, metadata !DIExpression()), !dbg !15374
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15374
  ret %struct.k_thread* %11, !dbg !15382
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15383 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15387, metadata !DIExpression()), !dbg !15390
  call void @llvm.dbg.value(metadata i32 0, metadata !15388, metadata !DIExpression()), !dbg !15390
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15391
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15389, metadata !DIExpression()), !dbg !15390
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15392
  br i1 %3, label %8, label %4, !dbg !15393

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15394
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15396
  call void @llvm.dbg.value(metadata i32 1, metadata !15388, metadata !DIExpression()), !dbg !15390
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15391
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15389, metadata !DIExpression()), !dbg !15390
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15392
  br i1 %7, label %8, label %4, !dbg !15393, !llvm.loop !15397

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15390
  ret i32 %9, !dbg !15399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !15400 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15402, metadata !DIExpression()), !dbg !15403
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15404
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !15405
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15406
  ret %struct.k_thread* %4, !dbg !15407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15408 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15417, metadata !DIExpression()), !dbg !15418
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15419
  tail call fastcc void @sys_dlist_init.278(%struct._dnode* noundef nonnull %2) #25, !dbg !15420
  ret void, !dbg !15421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.278(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15422 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15426, metadata !DIExpression()), !dbg !15427
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15428
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15429
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15430
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15431
  ret void, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15433 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !15434
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !15435
  ret void, !dbg !15436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !15437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15442, metadata !DIExpression()), !dbg !15443
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15444
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15444
  %4 = load i8, i8* %3, align 2, !dbg !15444
  %5 = sext i8 %4 to i32, !dbg !15445
  ret i32 %5, !dbg !15446
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15451, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i32 %1, metadata !15452, metadata !DIExpression()), !dbg !15454
  %3 = add i32 %1, 16, !dbg !15455
  %4 = icmp ult i32 %3, 31, !dbg !15455
  br i1 %4, label %6, label %5, !dbg !15455

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.282, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !15459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15459
  unreachable, !dbg !15459

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15461, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %7, metadata !14433, metadata !DIExpression()) #23, !dbg !15466
  %8 = icmp eq i32 %7, 0, !dbg !15467
  br i1 %8, label %10, label %9, !dbg !15468

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15469
  unreachable, !dbg !15469

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15453, metadata !DIExpression()), !dbg !15454
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15471
  ret void, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15473 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !15474
  br i1 %1, label %8, label %2, !dbg !15475

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15476
  br i1 %3, label %8, label %4, !dbg !15477

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15478
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !15479
  %7 = xor i1 %6, true, !dbg !15477
  br label %8, !dbg !15477

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !15481 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15482, !range !6672
  %2 = icmp eq i8 %1, 0, !dbg !15482
  ret i1 %2, !dbg !15483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15484 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15487, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %1, metadata !14433, metadata !DIExpression()) #23, !dbg !15492
  %2 = icmp eq i32 %1, 0, !dbg !15493
  br i1 %2, label %4, label %3, !dbg !15494

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15495
  unreachable, !dbg !15495

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15497
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15499, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15497
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15502
  br i1 %6, label %8, label %7, !dbg !15503

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15504
  unreachable, !dbg !15504

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15497
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !15486, metadata !DIExpression()), !dbg !15506
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15507
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13895, metadata !DIExpression()) #23, !dbg !15510
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15512
  %11 = load i8, i8* %10, align 1, !dbg !15513
  %12 = and i8 %11, 127, !dbg !15513
  store i8 %12, i8* %10, align 1, !dbg !15513
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13903, metadata !DIExpression()) #23, !dbg !15514
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !15516
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15517
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13912, metadata !DIExpression()) #23, !dbg !15518
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15520
  %15 = load i8, i8* %14, align 1, !dbg !15521
  %16 = or i8 %15, -128, !dbg !15521
  store i8 %16, i8* %14, align 1, !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13919, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13926, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13932, metadata !DIExpression()) #23, !dbg !15524
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !15526
  br i1 %17, label %18, label %19, !dbg !15527

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !15528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 186) #24, !dbg !15528
  unreachable, !dbg !15528

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15529
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13933, metadata !DIExpression()) #23, !dbg !15524
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15530
  br i1 %21, label %32, label %22, !dbg !15529

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !13933, metadata !DIExpression()) #23, !dbg !15524
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15531
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13933, metadata !DIExpression()) #23, !dbg !15524
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !15532
  %26 = icmp sgt i32 %25, 0, !dbg !15533
  br i1 %26, label %27, label %29, !dbg !15534

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15535
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !15536
  br label %34, !dbg !15537

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !15530
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13933, metadata !DIExpression()) #23, !dbg !15524
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15530
  br i1 %31, label %32, label %22, !dbg !15529, !llvm.loop !15538

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15540
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !15541
  br label %34, !dbg !15542

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !15544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14386, metadata !DIExpression()) #23, !dbg !15544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14390, metadata !DIExpression()) #23, !dbg !15546
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15548
  br i1 %35, label %37, label %36, !dbg !15549

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15550
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15550
  unreachable, !dbg !15550

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15499
  call void @llvm.dbg.value(metadata i32 %38, metadata !13715, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %38, metadata !13709, metadata !DIExpression()) #23, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %38, metadata !15486, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !15544
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !15551
  ret void, !dbg !15552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15553 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15557, metadata !DIExpression()), !dbg !15560
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15561, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %3, metadata !14433, metadata !DIExpression()) #23, !dbg !15566
  %4 = icmp eq i32 %3, 0, !dbg !15567
  br i1 %4, label %6, label %5, !dbg !15568

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15569
  unreachable, !dbg !15569

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15571
  br i1 %7, label %8, label %10, !dbg !15573

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15574
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !15576
  br label %15, !dbg !15577

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15558, metadata !DIExpression()), !dbg !15560
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !15578
  %12 = sext i32 %11 to i64, !dbg !15578
  call void @llvm.dbg.value(metadata i64 %12, metadata !15558, metadata !DIExpression()), !dbg !15560
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !15579
  %14 = trunc i64 %13 to i32, !dbg !15579
  call void @llvm.dbg.value(metadata i32 %14, metadata !15559, metadata !DIExpression()), !dbg !15560
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15560
  ret i32 %16, !dbg !15580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15581 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15585, metadata !DIExpression()), !dbg !15586
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15587, !srcloc !15589
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !15590
  ret void, !dbg !15591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15592 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15596, metadata !DIExpression()), !dbg !15600
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15601, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %2, metadata !14433, metadata !DIExpression()) #23, !dbg !15606
  %3 = icmp eq i32 %2, 0, !dbg !15607
  br i1 %3, label %5, label %4, !dbg !15608

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15609
  unreachable, !dbg !15609

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15611
  br i1 %6, label %7, label %8, !dbg !15613

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !15614
  br label %43, !dbg !15616

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15598, metadata !DIExpression()), !dbg !15600
  %9 = icmp sgt i64 %0, -3, !dbg !15617
  br i1 %9, label %10, label %14, !dbg !15619

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15620
  %12 = trunc i64 %0 to i32, !dbg !15622
  %13 = add i32 %11, %12, !dbg !15622
  call void @llvm.dbg.value(metadata i32 %13, metadata !15597, metadata !DIExpression()), !dbg !15600
  br label %17, !dbg !15623

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15624
  %16 = sub i32 -2, %15, !dbg !15624
  call void @llvm.dbg.value(metadata i32 %16, metadata !15597, metadata !DIExpression()), !dbg !15600
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15626
  call void @llvm.dbg.value(metadata i32 %18, metadata !15597, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15627
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15629, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15627
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15632
  br i1 %20, label %22, label %21, !dbg !15633

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15634
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15634
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15634
  unreachable, !dbg !15634

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15627
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !15599, metadata !DIExpression()), !dbg !15600
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15636
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15637
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !15638
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15639
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15640
  tail call fastcc void @z_add_thread_timeout.265(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !15640
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15641
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !15643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14386, metadata !DIExpression()) #23, !dbg !15643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14390, metadata !DIExpression()) #23, !dbg !15645
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15647
  br i1 %27, label %29, label %28, !dbg !15648

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15649
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15649
  unreachable, !dbg !15649

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15629
  call void @llvm.dbg.value(metadata i32 %30, metadata !13715, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata i32 %30, metadata !13709, metadata !DIExpression()) #23, !dbg !15627
  call void @llvm.dbg.value(metadata i32 %30, metadata !15599, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !15643
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !15650
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15651
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !15651
  br i1 %33, label %34, label %35, !dbg !15654

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.257, i32 0, i32 0)) #24, !dbg !15655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15655
  unreachable, !dbg !15655

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15657
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15658
  %38 = zext i32 %37 to i64, !dbg !15658
  %39 = sub nsw i64 %36, %38, !dbg !15659
  call void @llvm.dbg.value(metadata i64 %39, metadata !15596, metadata !DIExpression()), !dbg !15600
  %40 = icmp sgt i64 %39, 0, !dbg !15660
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15660
  %42 = trunc i64 %41 to i32, !dbg !15660
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15600
  ret i32 %44, !dbg !15661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15662 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15664, metadata !DIExpression()), !dbg !15665
  call void @llvm.dbg.value(metadata i64 %0, metadata !13763, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i32 10000, metadata !13766, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i32 1000, metadata !13767, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i8 1, metadata !13768, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i1 false, metadata !13769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15666
  call void @llvm.dbg.value(metadata i1 false, metadata !13770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15666
  call void @llvm.dbg.value(metadata i8 0, metadata !13771, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i1 false, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15666
  call void @llvm.dbg.value(metadata i1 true, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15666
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i64 %0, metadata !13763, metadata !DIExpression()), !dbg !15666
  %2 = udiv i64 %0, 10, !dbg !15668
  ret i64 %2, !dbg !15672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15673 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15674, !srcloc !15676
  tail call void @z_impl_k_yield() #25, !dbg !15677
  ret void, !dbg !15678
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15683, metadata !DIExpression()), !dbg !15685
  %2 = sext i32 %0 to i64, !dbg !15686
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !15687
  call void @llvm.dbg.value(metadata i64 %3, metadata !15684, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15685
  %4 = shl i64 %3, 32, !dbg !15688
  %5 = ashr exact i64 %4, 32, !dbg !15688
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !15689
  call void @llvm.dbg.value(metadata i32 %6, metadata !15684, metadata !DIExpression()), !dbg !15685
  %7 = sext i32 %6 to i64, !dbg !15690
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !15691
  %9 = trunc i64 %8 to i32, !dbg !15691
  ret i32 %9, !dbg !15692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !15693 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15695, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata i64 %0, metadata !13763, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13766, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i32 10000, metadata !13767, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i8 1, metadata !13768, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i1 false, metadata !13769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15697
  call void @llvm.dbg.value(metadata i1 true, metadata !13770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15697
  call void @llvm.dbg.value(metadata i8 0, metadata !13771, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i1 false, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15697
  call void @llvm.dbg.value(metadata i1 true, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15697
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !15697
  %2 = add i64 %0, 99, !dbg !15699
  call void @llvm.dbg.value(metadata i64 %2, metadata !13763, metadata !DIExpression()), !dbg !15697
  %3 = udiv i64 %2, 100, !dbg !15700
  ret i64 %3, !dbg !15701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15702 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15704, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata i64 %0, metadata !13763, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i32 10000, metadata !13766, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13767, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i8 1, metadata !13768, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i1 false, metadata !13769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15706
  call void @llvm.dbg.value(metadata i1 false, metadata !13770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15706
  call void @llvm.dbg.value(metadata i8 0, metadata !13771, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i1 true, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15706
  call void @llvm.dbg.value(metadata i1 false, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15706
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i64 0, metadata !13774, metadata !DIExpression()), !dbg !15706
  %2 = mul i64 %0, 100, !dbg !15708
  ret i64 %2, !dbg !15710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15711 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15713, metadata !DIExpression()), !dbg !15714
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !15715
  br i1 %2, label %14, label %3, !dbg !15717

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15718
  %5 = icmp slt i32 %4, 0, !dbg !15720
  br i1 %5, label %6, label %10, !dbg !15721

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15722
  %8 = load i8, i8* %7, align 1, !dbg !15722
  %9 = icmp eq i8 %8, 16, !dbg !15725
  br i1 %9, label %10, label %14, !dbg !15726

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15727
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15728
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15729, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %11, metadata !14433, metadata !DIExpression()) #23, !dbg !15733
  %12 = icmp eq i32 %11, 0, !dbg !15734
  br i1 %12, label %13, label %14, !dbg !15735

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15736
  br label %14, !dbg !15738

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15742, metadata !DIExpression()), !dbg !15743
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15744
  %3 = load i8, i8* %2, align 1, !dbg !15744
  %4 = and i8 %3, 2, !dbg !15745
  %5 = icmp ne i8 %4, 0, !dbg !15746
  ret i1 %5, !dbg !15747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !15748 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15753
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15752, metadata !DIExpression()), !dbg !15754
  ret %struct.k_thread* %1, !dbg !15755
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15756 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15757, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %1, metadata !14433, metadata !DIExpression()) #23, !dbg !15760
  %2 = icmp eq i32 %1, 0, !dbg !15761
  br i1 %2, label %3, label %8, !dbg !15762

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15763
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !15764
  %6 = icmp ne i32 %5, 0, !dbg !15762
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15766 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15768, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15771
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15773, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15771
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15776
  br i1 %3, label %5, label %4, !dbg !15777

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15778
  unreachable, !dbg !15778

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15773
  call void @llvm.dbg.value(metadata i32 %6, metadata !13715, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 %6, metadata !13709, metadata !DIExpression()) #23, !dbg !15771
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15779
  call void @llvm.dbg.value(metadata i32 %6, metadata !15769, metadata !DIExpression()), !dbg !15770
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15780
  %8 = load i8, i8* %7, align 4, !dbg !15780
  %9 = and i8 %8, 1, !dbg !15782
  %10 = icmp eq i8 %9, 0, !dbg !15783
  br i1 %10, label %15, label %11, !dbg !15784

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15785
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15788
  br i1 %12, label %14, label %13, !dbg !15789

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15790
  unreachable, !dbg !15790

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13737, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 %6, metadata !13751, metadata !DIExpression()) #23, !dbg !15791
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15793, !srcloc !13757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.291, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !15794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15794
  unreachable, !dbg !15794

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15798
  %17 = load i8, i8* %16, align 1, !dbg !15798
  %18 = and i8 %17, 8, !dbg !15800
  %19 = icmp eq i8 %18, 0, !dbg !15801
  br i1 %19, label %24, label %20, !dbg !15802

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15803
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15806
  br i1 %21, label %23, label %22, !dbg !15807

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15808
  unreachable, !dbg !15808

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13737, metadata !DIExpression()) #23, !dbg !15803
  call void @llvm.dbg.value(metadata i32 %6, metadata !13751, metadata !DIExpression()) #23, !dbg !15809
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15811, !srcloc !13757
  br label %39, !dbg !15812

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !15813
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15814
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15816
  br i1 %26, label %27, label %35, !dbg !15817

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15818, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %28, metadata !14433, metadata !DIExpression()) #23, !dbg !15821
  %29 = icmp eq i32 %28, 0, !dbg !15822
  br i1 %29, label %30, label %35, !dbg !15823

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14386, metadata !DIExpression()) #23, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14390, metadata !DIExpression()) #23, !dbg !15827
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15829
  br i1 %31, label %33, label %32, !dbg !15830

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15831
  unreachable, !dbg !15831

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14381, metadata !DIExpression()) #23, !dbg !15824
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !15832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.292, i32 0, i32 0)) #24, !dbg !15833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15833
  unreachable, !dbg !15833

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15837
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15839
  br i1 %36, label %38, label %37, !dbg !15840

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15841
  unreachable, !dbg !15841

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13737, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %6, metadata !13751, metadata !DIExpression()) #23, !dbg !15842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15844, !srcloc !13757
  br label %39, !dbg !15845

39:                                               ; preds = %38, %23
  ret void, !dbg !15845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15846 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15848, metadata !DIExpression()), !dbg !15849
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15850
  %3 = load i8, i8* %2, align 1, !dbg !15850
  %4 = and i8 %3, 8, !dbg !15852
  %5 = icmp eq i8 %4, 0, !dbg !15853
  br i1 %5, label %6, label %20, !dbg !15854

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15855
  %8 = or i8 %7, 8, !dbg !15855
  store i8 %8, i8* %2, align 1, !dbg !15855
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !15857
  br i1 %9, label %10, label %12, !dbg !15859

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13895, metadata !DIExpression()) #23, !dbg !15860
  %11 = and i8 %8, 95, !dbg !15863
  store i8 %11, i8* %2, align 1, !dbg !15863
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13903, metadata !DIExpression()) #23, !dbg !15864
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !15866
  br label %12, !dbg !15867

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15868
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !15868
  %15 = icmp eq %union.anon* %14, null, !dbg !15870
  br i1 %15, label %17, label %16, !dbg !15871

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15872
  br label %17, !dbg !15874

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15875
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15876
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !15877
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15878
  br label %20, !dbg !15879

20:                                               ; preds = %17, %1
  ret void, !dbg !15880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !15881 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15885, metadata !DIExpression()), !dbg !15887
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15886, metadata !DIExpression()), !dbg !15887
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15889
  br i1 %3, label %10, label %4, !dbg !15890

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15891
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15893
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15894, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 0, metadata !15899, metadata !DIExpression()), !dbg !15900
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !15902
  store i32 0, i32* %7, align 4, !dbg !15903
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15904
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15886, metadata !DIExpression()), !dbg !15887
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15889
  br i1 %9, label %10, label %4, !dbg !15890, !llvm.loop !15905

10:                                               ; preds = %4, %1
  ret void, !dbg !15907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15908 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15913, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15912, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15917
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15919, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15917
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15922
  br i1 %4, label %6, label %5, !dbg !15923

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15924
  unreachable, !dbg !15924

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %7, metadata !13715, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %7, metadata !13709, metadata !DIExpression()) #23, !dbg !15917
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %7, metadata !15914, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata i32 0, metadata !15915, metadata !DIExpression()), !dbg !15916
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15926
  %9 = load i8, i8* %8, align 1, !dbg !15926
  %10 = and i8 %9, 8, !dbg !15928
  %11 = icmp eq i8 %10, 0, !dbg !15929
  br i1 %11, label %12, label %35, !dbg !15930

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !15913, metadata !DIExpression()), !dbg !15916
  %14 = icmp eq i64 %13, 0, !dbg !15931
  br i1 %14, label %35, label %15, !dbg !15933

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15934
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15936
  br i1 %17, label %35, label %18, !dbg !15937

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15938
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !15938
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !15939
  %22 = icmp eq %union.anon* %20, %21, !dbg !15940
  br i1 %22, label %35, label %23, !dbg !15941

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15942, !srcloc !14437
  call void @llvm.dbg.value(metadata i32 %24, metadata !14433, metadata !DIExpression()) #23, !dbg !15948
  %25 = icmp eq i32 %24, 0, !dbg !15949
  br i1 %25, label %27, label %26, !dbg !15950

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15951
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.293, i32 0, i32 0)) #24, !dbg !15951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15951
  unreachable, !dbg !15951

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15953
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15954
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #25, !dbg !15955
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15956
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14386, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14390, metadata !DIExpression()) #23, !dbg !15960
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15962
  br i1 %31, label %33, label %32, !dbg !15963

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 225) #24, !dbg !15964
  unreachable, !dbg !15964

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14381, metadata !DIExpression()) #23, !dbg !15958
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %34, metadata !15915, metadata !DIExpression()), !dbg !15916
  br label %40, !dbg !15966

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !15967
  call void @llvm.dbg.value(metadata i32 %36, metadata !15915, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !15968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !15968
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15970
  br i1 %37, label %39, label %38, !dbg !15971

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15972
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !15972
  unreachable, !dbg !15972

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13737, metadata !DIExpression()) #23, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %7, metadata !13751, metadata !DIExpression()) #23, !dbg !15973
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15975, !srcloc !13757
  br label %40, !dbg !15976

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !15916
  ret i32 %41, !dbg !15977
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15978 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15982, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i32 %1, metadata !15983, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i8* %2, metadata !15984, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i8 0, metadata !15986, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i32 0, metadata !15987, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13703, metadata !DIExpression()) #23, !dbg !15992
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15994, !srcloc !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13716, metadata !DIExpression()) #23, !dbg !15996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15992
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15997
  br i1 %5, label %7, label %6, !dbg !15998

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15999
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15999
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !15999
  unreachable, !dbg !15999

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #23, !dbg !15996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !15992
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16000
  call void @llvm.dbg.value(metadata i32 undef, metadata !15989, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i8 poison, metadata !15986, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !15987, metadata !DIExpression()), !dbg !15991
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !16001
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15985, metadata !DIExpression()), !dbg !15990
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16004
  br i1 %10, label %15, label %11, !dbg !16006

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16007, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata i32 %1, metadata !16013, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata i8* %2, metadata !16014, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15894, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i32 %1, metadata !15899, metadata !DIExpression()), !dbg !16018
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16020
  store i32 %1, i32* %12, align 4, !dbg !16021
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16022
  store i8* %2, i8** %13, align 4, !dbg !16023
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16024
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16025
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !16026
  call void @llvm.dbg.value(metadata i8 1, metadata !15986, metadata !DIExpression()), !dbg !15990
  br label %15, !dbg !16027

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !15986, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13742, metadata !DIExpression()) #23, !dbg !16028
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16030
  br i1 %16, label %18, label %17, !dbg !16031

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !16032
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16032
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !16032
  unreachable, !dbg !16032

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !15990
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !15994
  call void @llvm.dbg.value(metadata i32 %20, metadata !13715, metadata !DIExpression()) #23, !dbg !15996
  call void @llvm.dbg.value(metadata i32 %20, metadata !13709, metadata !DIExpression()) #23, !dbg !15992
  call void @llvm.dbg.value(metadata i32 %20, metadata !15989, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #23, !dbg !16028
  call void @llvm.dbg.value(metadata i32 undef, metadata !13751, metadata !DIExpression()) #23, !dbg !16033
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16035, !srcloc !13757
  call void @llvm.dbg.value(metadata i8 poison, metadata !15986, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !15987, metadata !DIExpression()), !dbg !15991
  ret i1 %19, !dbg !16036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16037 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16043, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata i64 undef, metadata !16045, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16042, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16044, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata i8** %4, metadata !16046, metadata !DIExpression()), !dbg !16048
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !16049
  call void @llvm.dbg.value(metadata i32 %6, metadata !16047, metadata !DIExpression()), !dbg !16048
  %7 = icmp eq i8** %4, null, !dbg !16050
  br i1 %7, label %12, label %8, !dbg !16052

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16053
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16055
  %11 = load i8*, i8** %10, align 4, !dbg !16055
  store i8* %11, i8** %4, align 4, !dbg !16056
  br label %12, !dbg !16057

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16059 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !16061
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !16062
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #24, !dbg !16063
  ret void, !dbg !16064
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16065 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16075, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16073, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16074, metadata !DIExpression()), !dbg !16092
  %5 = icmp eq i64 %4, -1, !dbg !16093
  br i1 %5, label %63, label %6, !dbg !16095

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16096
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.298(%struct._dnode* noundef %7) #25, !dbg !16096
  br i1 %8, label %9, label %10, !dbg !16099

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 99) #24, !dbg !16100
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.302, i32 0, i32 0)) #24, !dbg !16100
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 99) #24, !dbg !16100
  unreachable, !dbg !16100

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16102
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16103
  call void @llvm.dbg.value(metadata i32 0, metadata !16076, metadata !DIExpression()), !dbg !16104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16112
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16114, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16112
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16122
  br i1 %13, label %15, label %14, !dbg !16125

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16126
  unreachable, !dbg !16126

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %16, metadata !16117, metadata !DIExpression()) #23, !dbg !16121
  call void @llvm.dbg.value(metadata i32 %16, metadata !16111, metadata !DIExpression()) #23, !dbg !16112
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16128
  call void @llvm.dbg.value(metadata i32 %16, metadata !16082, metadata !DIExpression()), !dbg !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16104
  %17 = icmp slt i64 %4, -1, !dbg !16129
  br i1 %17, label %18, label %24, !dbg !16130

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16131
  %20 = add i64 %4, %19, !dbg !16132
  %21 = sub i64 -2, %20, !dbg !16132
  call void @llvm.dbg.value(metadata i64 %21, metadata !16086, metadata !DIExpression()), !dbg !16133
  %22 = icmp sgt i64 %21, 1, !dbg !16134
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16134
  br label %29, !dbg !16135

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16136
  %26 = tail call fastcc i32 @elapsed.306() #25, !dbg !16138
  %27 = sext i32 %26 to i64, !dbg !16138
  %28 = add nsw i64 %25, %27, !dbg !16139
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16140
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16141
  store i64 %30, i64* %31, align 8, !dbg !16142
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !16143
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16083, metadata !DIExpression()), !dbg !16145
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16146
  br i1 %33, label %48, label %34, !dbg !16146

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16147
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16083, metadata !DIExpression()), !dbg !16145
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16151
  %38 = load i64, i64* %37, align 8, !dbg !16151
  %39 = icmp slt i64 %35, %38, !dbg !16152
  br i1 %39, label %40, label %44, !dbg !16153

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16151
  %42 = sub nsw i64 %38, %35, !dbg !16154
  store i64 %42, i64* %41, align 8, !dbg !16154
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16156
  tail call fastcc void @sys_dlist_insert.307(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !16157
  br label %49, !dbg !16158

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16159
  store i64 %45, i64* %31, align 8, !dbg !16159
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !16160
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16083, metadata !DIExpression()), !dbg !16145
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16146
  br i1 %47, label %48, label %34, !dbg !16146, !llvm.loop !16161

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.308(%struct._dnode* noundef nonnull %7) #25, !dbg !16163
  br label %49, !dbg !16166

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !16167
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16168
  br i1 %51, label %52, label %59, !dbg !16169

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !16170
  call void @llvm.dbg.value(metadata i32 %53, metadata !16089, metadata !DIExpression()), !dbg !16171
  %54 = icmp ne i32 %53, 0, !dbg !16172
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16174
  br i1 %57, label %59, label %58, !dbg !16174

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !16175
  br label %59, !dbg !16177

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16184
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16184
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16186
  br i1 %60, label %62, label %61, !dbg !16189

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16190
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16190
  unreachable, !dbg !16190

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16178, metadata !DIExpression()) #23, !dbg !16184
  call void @llvm.dbg.value(metadata i32 %16, metadata !16192, metadata !DIExpression()) #23, !dbg !16195
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16197, !srcloc !16198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16104
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.298(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16200 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16206, metadata !DIExpression()), !dbg !16207
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16208
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16208
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16209
  ret i1 %4, !dbg !16210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.306() unnamed_addr #1 !dbg !16211 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16214
  %2 = icmp eq i32 %1, 0, !dbg !16215
  br i1 %2, label %3, label %5, !dbg !16214

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !16216
  br label %5, !dbg !16214

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16214
  ret i32 %6, !dbg !16217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16218 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.313() #25, !dbg !16224
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16222, metadata !DIExpression()), !dbg !16225
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16226
  ret %struct._timeout* %2, !dbg !16227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.307(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16228 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16232, metadata !DIExpression()), !dbg !16236
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16233, metadata !DIExpression()), !dbg !16236
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16237
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16237
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16234, metadata !DIExpression()), !dbg !16236
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16238
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16239
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16240
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16241
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16242
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16243
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16244
  ret void, !dbg !16245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16246 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16250, metadata !DIExpression()), !dbg !16252
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16253
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.311(%struct._dnode* noundef %2) #25, !dbg !16254
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16251, metadata !DIExpression()), !dbg !16252
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16255
  ret %struct._timeout* %4, !dbg !16256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.308(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16257 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16262, metadata !DIExpression()), !dbg !16265
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16263, metadata !DIExpression()), !dbg !16265
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16266
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16264, metadata !DIExpression()), !dbg !16265
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16267
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16268
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16269
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16270
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16271
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16272
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16273
  ret void, !dbg !16274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16275 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16280
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16277, metadata !DIExpression()), !dbg !16281
  %2 = tail call fastcc i32 @elapsed.306() #25, !dbg !16282
  call void @llvm.dbg.value(metadata i32 %2, metadata !16278, metadata !DIExpression()), !dbg !16281
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16283
  br i1 %3, label %14, label %4, !dbg !16285

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16286
  %6 = load i64, i64* %5, align 8, !dbg !16286
  %7 = sext i32 %2 to i64, !dbg !16287
  %8 = sub nsw i64 %6, %7, !dbg !16288
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16289
  br i1 %9, label %14, label %10, !dbg !16290

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16291
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16291
  %13 = trunc i64 %12 to i32, !dbg !16291
  call void @llvm.dbg.value(metadata i32 %13, metadata !16279, metadata !DIExpression()), !dbg !16281
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16293
  call void @llvm.dbg.value(metadata i32 %15, metadata !16279, metadata !DIExpression()), !dbg !16281
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16294
  %17 = icmp ne i32 %16, 0, !dbg !16296
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16297
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16297
  call void @llvm.dbg.value(metadata i32 %20, metadata !16279, metadata !DIExpression()), !dbg !16281
  ret i32 %20, !dbg !16298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.311(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16299 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16303, metadata !DIExpression()), !dbg !16305
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16304, metadata !DIExpression()), !dbg !16305
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16306
  br i1 %2, label %5, label %3, !dbg !16307

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.312(%struct._dnode* noundef nonnull %0) #25, !dbg !16308
  br label %5, !dbg !16307

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16307
  ret %struct._dnode* %6, !dbg !16309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.312(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16310 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16312, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16313, metadata !DIExpression()), !dbg !16314
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16315
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16316
  br i1 %3, label %7, label %4, !dbg !16317

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16318
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16318
  br label %7, !dbg !16317

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16317
  ret %struct._dnode* %8, !dbg !16319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.313() unnamed_addr #10 !dbg !16320 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16324, metadata !DIExpression()), !dbg !16325
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.314() #25, !dbg !16326
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16326
  ret %struct._dnode* %3, !dbg !16327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.314() unnamed_addr #10 !dbg !16328 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16332, metadata !DIExpression()), !dbg !16333
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16334
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16335
  ret i1 %2, !dbg !16336
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16337 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16341, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 -22, metadata !16342, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 0, metadata !16343, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16348
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16350, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16348
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16353
  br i1 %3, label %5, label %4, !dbg !16354

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16355
  unreachable, !dbg !16355

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16348
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16345, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i32 -22, metadata !16342, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 undef, metadata !16343, metadata !DIExpression()), !dbg !16347
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16342, metadata !DIExpression()), !dbg !16346
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.298(%struct._dnode* noundef %6) #25, !dbg !16357
  br i1 %7, label %8, label %9, !dbg !16361

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !16362
  call void @llvm.dbg.value(metadata i32 0, metadata !16342, metadata !DIExpression()), !dbg !16346
  br label %9, !dbg !16364

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16346
  call void @llvm.dbg.value(metadata i32 %10, metadata !16342, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16365
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16367
  br i1 %11, label %13, label %12, !dbg !16368

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16369
  unreachable, !dbg !16369

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16350
  call void @llvm.dbg.value(metadata i32 %14, metadata !16117, metadata !DIExpression()) #23, !dbg !16352
  call void @llvm.dbg.value(metadata i32 %14, metadata !16111, metadata !DIExpression()) #23, !dbg !16348
  call void @llvm.dbg.value(metadata i32 %14, metadata !16345, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16365
  call void @llvm.dbg.value(metadata i32 undef, metadata !16192, metadata !DIExpression()) #23, !dbg !16370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16372, !srcloc !16198
  call void @llvm.dbg.value(metadata i32 %10, metadata !16342, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 undef, metadata !16343, metadata !DIExpression()), !dbg !16347
  ret i32 %10, !dbg !16373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16374 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16376, metadata !DIExpression()), !dbg !16377
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !16378
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16380
  br i1 %3, label %10, label %4, !dbg !16381

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16382
  %6 = load i64, i64* %5, align 8, !dbg !16382
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16384
  %8 = load i64, i64* %7, align 8, !dbg !16385
  %9 = add nsw i64 %8, %6, !dbg !16385
  store i64 %9, i64* %7, align 8, !dbg !16385
  br label %10, !dbg !16386

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16387
  tail call fastcc void @sys_dlist_remove.317(%struct._dnode* noundef %11) #25, !dbg !16388
  ret void, !dbg !16389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.317(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16390 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16394, metadata !DIExpression()), !dbg !16397
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16398
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16398
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16395, metadata !DIExpression()), !dbg !16397
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16399
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16399
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16396, metadata !DIExpression()), !dbg !16397
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16400
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16401
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16402
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16403
  tail call fastcc void @sys_dnode_init.318(%struct._dnode* noundef %0) #25, !dbg !16404
  ret void, !dbg !16405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.318(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16406 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16408, metadata !DIExpression()), !dbg !16409
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16410
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16411
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16412
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16413
  ret void, !dbg !16414
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16415 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16421, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i64 0, metadata !16422, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i32 0, metadata !16423, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16428
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16430, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16432
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16432
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16428
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16433
  br i1 %3, label %5, label %4, !dbg !16434

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16435
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16435
  unreachable, !dbg !16435

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16432
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16428
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16436
  call void @llvm.dbg.value(metadata i32 undef, metadata !16425, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i64 0, metadata !16422, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !16423, metadata !DIExpression()), !dbg !16427
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i64 %6, metadata !16422, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16440
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16442
  br i1 %7, label %9, label %8, !dbg !16443

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16444
  unreachable, !dbg !16444

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16430
  call void @llvm.dbg.value(metadata i32 %10, metadata !16117, metadata !DIExpression()) #23, !dbg !16432
  call void @llvm.dbg.value(metadata i32 %10, metadata !16111, metadata !DIExpression()) #23, !dbg !16428
  call void @llvm.dbg.value(metadata i32 %10, metadata !16425, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 undef, metadata !16192, metadata !DIExpression()) #23, !dbg !16445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16447, !srcloc !16198
  call void @llvm.dbg.value(metadata i64 %6, metadata !16422, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !16423, metadata !DIExpression()), !dbg !16427
  ret i64 %6, !dbg !16448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16449 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16451, metadata !DIExpression()), !dbg !16455
  call void @llvm.dbg.value(metadata i64 0, metadata !16452, metadata !DIExpression()), !dbg !16455
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.319(%struct._timeout* noundef %0) #25, !dbg !16456
  br i1 %2, label %21, label %3, !dbg !16458

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !16459
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16453, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i64 0, metadata !16452, metadata !DIExpression()), !dbg !16455
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16461
  br i1 %5, label %16, label %6, !dbg !16463

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16453, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i64 %8, metadata !16452, metadata !DIExpression()), !dbg !16455
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16464
  %10 = load i64, i64* %9, align 8, !dbg !16464
  %11 = add nsw i64 %10, %8, !dbg !16466
  call void @llvm.dbg.value(metadata i64 %11, metadata !16452, metadata !DIExpression()), !dbg !16455
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16467
  br i1 %12, label %16, label %13, !dbg !16469

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !16470
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16453, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i64 %11, metadata !16452, metadata !DIExpression()), !dbg !16455
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16461
  br i1 %15, label %16, label %6, !dbg !16463, !llvm.loop !16471

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16455
  call void @llvm.dbg.value(metadata i64 %17, metadata !16452, metadata !DIExpression()), !dbg !16455
  %18 = tail call fastcc i32 @elapsed.306() #25, !dbg !16473
  %19 = sext i32 %18 to i64, !dbg !16473
  %20 = sub nsw i64 %17, %19, !dbg !16474
  br label %21, !dbg !16475

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16455
  ret i64 %22, !dbg !16476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.319(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16477 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16481, metadata !DIExpression()), !dbg !16482
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16483
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.298(%struct._dnode* noundef %2) #25, !dbg !16484
  %4 = xor i1 %3, true, !dbg !16485
  ret i1 %4, !dbg !16486
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16487 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16489, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i64 0, metadata !16490, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 0, metadata !16491, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16496
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16498, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16496
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16501
  br i1 %3, label %5, label %4, !dbg !16502

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16503
  unreachable, !dbg !16503

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16496
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16504
  call void @llvm.dbg.value(metadata i32 undef, metadata !16493, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata i64 0, metadata !16490, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()), !dbg !16495
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16505
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16508
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16490, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16509
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16511
  br i1 %8, label %10, label %9, !dbg !16512

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16513
  unreachable, !dbg !16513

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %11, metadata !16117, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %11, metadata !16111, metadata !DIExpression()) #23, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %11, metadata !16493, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16490, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16509
  call void @llvm.dbg.value(metadata i32 undef, metadata !16192, metadata !DIExpression()) #23, !dbg !16514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16516, !srcloc !16198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()), !dbg !16495
  %12 = add i64 %7, %6, !dbg !16517
  ret i64 %12, !dbg !16518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16519 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16521, metadata !DIExpression()), !dbg !16525
  call void @llvm.dbg.value(metadata i32 0, metadata !16522, metadata !DIExpression()), !dbg !16526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16527
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16529, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16527
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16532
  br i1 %2, label %4, label %3, !dbg !16533

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16534
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16534
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16534
  unreachable, !dbg !16534

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16527
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16526
  call void @llvm.dbg.value(metadata i32 -1, metadata !16521, metadata !DIExpression()), !dbg !16525
  call void @llvm.dbg.value(metadata i32 undef, metadata !16522, metadata !DIExpression()), !dbg !16526
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %5, metadata !16521, metadata !DIExpression()), !dbg !16525
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16539
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16541
  br i1 %6, label %8, label %7, !dbg !16542

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16543
  unreachable, !dbg !16543

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %9, metadata !16117, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %9, metadata !16111, metadata !DIExpression()) #23, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %9, metadata !16524, metadata !DIExpression()), !dbg !16526
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16192, metadata !DIExpression()) #23, !dbg !16544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16546, !srcloc !16198
  call void @llvm.dbg.value(metadata i32 %5, metadata !16521, metadata !DIExpression()), !dbg !16525
  call void @llvm.dbg.value(metadata i32 undef, metadata !16522, metadata !DIExpression()), !dbg !16526
  ret i32 %5, !dbg !16547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16550, metadata !DIExpression()), !dbg !16560
  call void @llvm.dbg.value(metadata i1 %1, metadata !16551, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16560
  call void @llvm.dbg.value(metadata i32 0, metadata !16552, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16562
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16564, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16562
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16567
  br i1 %4, label %6, label %5, !dbg !16568

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16569
  unreachable, !dbg !16569

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16562
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16570
  call void @llvm.dbg.value(metadata i32 undef, metadata !16554, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()), !dbg !16561
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !16571
  call void @llvm.dbg.value(metadata i32 %7, metadata !16555, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i1 undef, metadata !16558, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16572
  %8 = icmp slt i32 %7, 2, !dbg !16573
  call void @llvm.dbg.value(metadata i1 %8, metadata !16559, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16572
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16574
  call void @llvm.dbg.value(metadata i1 %9, metadata !16558, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16572
  br i1 %10, label %14, label %11, !dbg !16574

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16576
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16576
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !16578
  br label %14, !dbg !16579

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16580
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16582
  br i1 %15, label %17, label %16, !dbg !16583

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16584
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16584
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16584
  unreachable, !dbg !16584

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16564
  call void @llvm.dbg.value(metadata i32 %18, metadata !16117, metadata !DIExpression()) #23, !dbg !16566
  call void @llvm.dbg.value(metadata i32 %18, metadata !16111, metadata !DIExpression()) #23, !dbg !16562
  call void @llvm.dbg.value(metadata i32 %18, metadata !16554, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !16192, metadata !DIExpression()) #23, !dbg !16585
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16587, !srcloc !16198
  call void @llvm.dbg.value(metadata i32 1, metadata !16552, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()), !dbg !16561
  ret void, !dbg !16588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16593, metadata !DIExpression()), !dbg !16598
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16600
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16602, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16600
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16605
  br i1 %3, label %5, label %4, !dbg !16606

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16607
  unreachable, !dbg !16607

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16600
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16598
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16598
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !16609
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16610
  br i1 %7, label %37, label %8, !dbg !16611

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16598
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16612
  %14 = load i64, i64* %13, align 8, !dbg !16612
  %15 = sext i32 %11 to i64, !dbg !16613
  %16 = icmp sgt i64 %14, %15, !dbg !16614
  br i1 %16, label %35, label %17, !dbg !16615

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16595, metadata !DIExpression()), !dbg !16616
  %18 = trunc i64 %14 to i32, !dbg !16617
  call void @llvm.dbg.value(metadata i32 %18, metadata !16597, metadata !DIExpression()), !dbg !16616
  %19 = sext i32 %18 to i64, !dbg !16618
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16619
  %21 = add i64 %20, %19, !dbg !16619
  store i64 %21, i64* @curr_tick, align 8, !dbg !16619
  store i64 0, i64* %13, align 8, !dbg !16620
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16622
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16624
  br i1 %22, label %24, label %23, !dbg !16625

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16626
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16626
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16626
  unreachable, !dbg !16626

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16178, metadata !DIExpression()) #23, !dbg !16622
  call void @llvm.dbg.value(metadata i32 %12, metadata !16192, metadata !DIExpression()) #23, !dbg !16627
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16629, !srcloc !16198
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16630
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16630
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !16631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16632
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16634, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16632
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16637
  br i1 %28, label %30, label %29, !dbg !16638

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16639
  unreachable, !dbg !16639

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16632
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16640
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16598
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16641
  %32 = sub nsw i32 %31, %18, !dbg !16641
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16598
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !16609
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16610
  br i1 %34, label %37, label %8, !dbg !16611, !llvm.loop !16642

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16644
  store i64 %36, i64* %13, align 8, !dbg !16644
  br label %41, !dbg !16647

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16598
  %40 = sext i32 %39 to i64, !dbg !16648
  br label %41, !dbg !16648

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16648
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16649
  %45 = add i64 %44, %42, !dbg !16649
  store i64 %45, i64* @curr_tick, align 8, !dbg !16649
  store i32 0, i32* @announce_remaining, align 4, !dbg !16650
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !16651
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !16652
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16653
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16655
  br i1 %47, label %49, label %48, !dbg !16656

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16657
  unreachable, !dbg !16657

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16598
  call void @llvm.dbg.value(metadata i32 %50, metadata !16178, metadata !DIExpression()) #23, !dbg !16653
  call void @llvm.dbg.value(metadata i32 %50, metadata !16192, metadata !DIExpression()) #23, !dbg !16658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16660, !srcloc !16198
  ret void, !dbg !16661
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16662 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i32 0, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16105, metadata !DIExpression()) #23, !dbg !16672
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16674, !srcloc !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16676
  call void @llvm.dbg.value(metadata i32 undef, metadata !16118, metadata !DIExpression()) #23, !dbg !16676
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16672
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16677
  br i1 %2, label %4, label %3, !dbg !16678

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16679
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16679
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !16679
  unreachable, !dbg !16679

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16117, metadata !DIExpression()) #23, !dbg !16676
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()) #23, !dbg !16672
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16680
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16667, metadata !DIExpression()), !dbg !16671
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16681
  %6 = tail call fastcc i32 @elapsed.306() #25, !dbg !16684
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16666, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16183, metadata !DIExpression()) #23, !dbg !16685
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16687
  br i1 %7, label %9, label %8, !dbg !16688

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !16689
  unreachable, !dbg !16689

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %10, metadata !16117, metadata !DIExpression()) #23, !dbg !16676
  call void @llvm.dbg.value(metadata i32 %10, metadata !16111, metadata !DIExpression()) #23, !dbg !16672
  call void @llvm.dbg.value(metadata i32 %10, metadata !16669, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16666, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16666, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata i32 undef, metadata !16192, metadata !DIExpression()) #23, !dbg !16690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16692, !srcloc !16198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16667, metadata !DIExpression()), !dbg !16671
  %11 = sext i32 %6 to i64, !dbg !16684
  %12 = add i64 %5, %11, !dbg !16693
  ret i64 %12, !dbg !16694
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16695 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16696
  %2 = trunc i64 %1 to i32, !dbg !16697
  ret i32 %2, !dbg !16698
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16699 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16700
  ret i64 %1, !dbg !16701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16704, metadata !DIExpression()), !dbg !16711
  %2 = icmp eq i32 %0, 0, !dbg !16712
  br i1 %2, label %10, label %3, !dbg !16714

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.326() #25, !dbg !16715
  call void @llvm.dbg.value(metadata i32 %4, metadata !16705, metadata !DIExpression()), !dbg !16711
  %5 = mul i32 %0, 168, !dbg !16716
  call void @llvm.dbg.value(metadata i32 %5, metadata !16706, metadata !DIExpression()), !dbg !16711
  br label %6, !dbg !16717

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.326() #25, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %7, metadata !16707, metadata !DIExpression()), !dbg !16719
  %8 = sub i32 %7, %4, !dbg !16720
  %9 = icmp ult i32 %8, %5, !dbg !16722
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.326() unnamed_addr #1 !dbg !16724 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.327() #25, !dbg !16725
  ret i32 %1, !dbg !16726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.327() unnamed_addr #1 !dbg !16727 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !16728
  ret i32 %1, !dbg !16729
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16730 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16734, metadata !DIExpression()), !dbg !16736
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16737

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !16738
  br label %14, !dbg !16742

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16735, metadata !DIExpression()), !dbg !16736
  %6 = icmp slt i64 %2, -1, !dbg !16743
  br i1 %6, label %7, label %9, !dbg !16746

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16747
  br label %14, !dbg !16748

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !16750
  %11 = icmp ugt i64 %2, 1, !dbg !16751
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16751
  %13 = add nsw i64 %10, %12, !dbg !16752
  br label %14, !dbg !16753

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16754
  ret i64 %15, !dbg !16755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16756 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.330, i32 0, i32 0)) #24, !dbg !16758
  ret void, !dbg !16759
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!793, !2, !2378, !27, !270, !295, !2380, !2382, !2416, !2418, !305, !356, !2420, !2423, !2434, !2480, !2482, !2510, !2538, !2581, !2653, !2698, !385, !528, !2726, !564, !2731, !574, !599, !827, !2734, !962, !1028, !1343, !1567, !2771, !1682, !1772, !2773, !2857, !2920, !1820, !2923, !1827, !2201, !2941, !2221, !2943, !2339, !2946}
!llvm.ident = !{!2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948, !2948}
!llvm.module.flags = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "tthread", scope: !27, file: !125, line: 29, type: !141, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !122, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !108, !113, !114, !118, !119, !120}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !104, line: 22, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !109, line: 46, baseType: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !113, !113, !113}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !115, line: 46, baseType: !116)
!115 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !117)
!117 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !121)
!121 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!122 = !{!123, !25, !134, !139}
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "tstack", scope: !27, file: !125, line: 28, type: !126, isLocal: true, isDefinition: true, align: 512)
!125 = !DIFile(filename: "zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 573440, elements: !131)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !127, file: !128, line: 48, baseType: !107, size: 8)
!131 = !{!132, !133}
!132 = !DISubrange(count: 16)
!133 = !DISubrange(count: 4480)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "buffer", scope: !27, file: !125, line: 30, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 30848, elements: !137)
!137 = !{!132, !138}
!138 = !DISubrange(count: 241)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "counter", scope: !27, file: !125, line: 31, type: !103, isLocal: true, isDefinition: true)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 20480, elements: !267)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !214, !227, !228, !229, !233, !234, !242, !262}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !142, file: !143, line: 247, baseType: !146, size: 384)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !147)
!147 = !{!148, !176, !184, !187, !188, !201, !202, !203}
!148 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 60, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 60, size: 64, elements: !150)
!150 = !{!151, !167}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !149, file: !143, line: 61, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !155)
!155 = !{!156, !162}
!156 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 38, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 38, size: 32, elements: !158)
!158 = !{!159, !161}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !157, file: !153, line: 39, baseType: !160, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !157, file: !153, line: 40, baseType: !160, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 42, baseType: !163, size: 32, offset: 32)
!163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 42, size: 32, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !163, file: !153, line: 43, baseType: !160, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !163, file: !153, line: 44, baseType: !160, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !149, file: !143, line: 62, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !170)
!169 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!170 = !{!171}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !168, file: !169, line: 50, baseType: !172, size: 64)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 64, elements: !174)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!174 = !{!175}
!175 = !DISubrange(count: 2)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !146, file: !143, line: 68, baseType: !177, size: 32, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !180)
!179 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !181)
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !180, file: !179, line: 232, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !154)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !146, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !146, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !143, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !143, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !143, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !143, line: 100, baseType: !199, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !200)
!200 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !146, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !146, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !146, file: !143, line: 131, baseType: !204, size: 192, offset: 192)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !205)
!205 = !{!206, !207, !213}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !204, file: !179, line: 245, baseType: !152, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !204, file: !179, line: 246, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !212}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !204, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !142, file: !143, line: 250, baseType: !215, size: 288, offset: 384)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !215, file: !216, line: 26, baseType: !118, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !215, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !215, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !215, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !215, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !215, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !215, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !215, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !215, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !142, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !142, file: !143, line: 256, baseType: !178, size: 64, offset: 704)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !142, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !142, file: !143, line: 300, baseType: !235, size: 96, offset: 1056)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !236)
!236 = !{!237, !238, !241}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !235, file: !143, line: 153, baseType: !22, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !235, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !240, line: 214, baseType: !32)
!240 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !235, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !142, file: !143, line: 325, baseType: !243, size: 32, offset: 1152)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !256, !257}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 5074, baseType: !248, size: 96)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251, !254, !255}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !248, file: !249, line: 57, baseType: !252, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !249, line: 57, flags: DIFlagFwdDecl)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !248, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !248, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !244, file: !245, line: 5075, baseType: !178, size: 64, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !244, file: !245, line: 5076, baseType: !258, size: 32, offset: 160)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !260)
!259 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !258, file: !259, line: 52, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !142, file: !143, line: 343, baseType: !263, size: 64, offset: 1184)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !264)
!264 = !{!265, !266}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !263, file: !216, line: 63, baseType: !118, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !263, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!267 = !{!132}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !270, file: !286, line: 18, type: !287, isLocal: false, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !272, globals: !285, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!272 = !{!22, !113, !24, !273, !275, !277, !239, !119, !280, !281, !282, !283, !106, !284, !199, !278}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!285 = !{!268}
!286 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 17, baseType: !278, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !288, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "_char_out", scope: !295, file: !299, line: 54, type: !300, isLocal: false, isDefinition: true)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !298, splitDebugInlining: false, nameTableKind: None)
!296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!297 = !{!113, !119}
!298 = !{!293}
!299 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DISubroutineType(types: !302)
!302 = !{!119, !119}
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !305, file: !322, line: 56, type: !323, isLocal: true, isDefinition: true, align: 32)
!305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !307, globals: !321, splitDebugInlining: false, nameTableKind: None)
!306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 369, baseType: !311)
!310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 360, size: 224, elements: !312)
!312 = !{!313, !315, !316, !317, !318, !319, !320}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !311, file: !310, line: 362, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !118)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !311, file: !310, line: 363, baseType: !314, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !311, file: !310, line: 364, baseType: !314, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !311, file: !310, line: 365, baseType: !314, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !311, file: !310, line: 366, baseType: !314, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !311, file: !310, line: 367, baseType: !314, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !311, file: !310, line: 368, baseType: !314, size: 32, offset: 192)
!321 = !{!303}
!322 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !353}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !324, file: !325, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!119, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !346, !347}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !334, line: 380, baseType: !278, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !334, line: 386, baseType: !340, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !341, file: !334, line: 359, baseType: !185, size: 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !341, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!345 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !334, line: 43, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !352)
!352 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !325, line: 65, baseType: !331, size: 32, offset: 32)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !356, file: !359, line: 71, type: !360, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !358, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!358 = !{!354}
!359 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !362)
!362 = !{!363, !382}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !361, file: !325, line: 60, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{!119, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !370)
!370 = !{!371, !372, !373, !374, !380, !381}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !369, file: !334, line: 380, baseType: !278, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !369, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !369, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !369, file: !334, line: 386, baseType: !375, size: 32, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !376, file: !334, line: 359, baseType: !185, size: 8)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !376, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !369, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !369, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !361, file: !325, line: 65, baseType: !367, size: 32, offset: 32)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !385, file: !392, line: 17, type: !521, isLocal: false, isDefinition: true)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !387, globals: !388, splitDebugInlining: false, nameTableKind: None)
!386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!387 = !{!239, !119, !118, !113}
!388 = !{!383, !389, !517}
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !391, file: !392, line: 198, type: !503, isLocal: true, isDefinition: true)
!391 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !392, file: !392, line: 175, type: !393, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !498)
!392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !DISubroutineType(types: !394)
!394 = !{null, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !397)
!397 = !{!398, !456, !468, !469, !470, !471, !472, !478, !493}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !396, file: !143, line: 247, baseType: !399, size: 384)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !400)
!400 = !{!401, !425, !432, !433, !434, !443, !444, !445}
!401 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 60, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 60, size: 64, elements: !403)
!403 = !{!404, !419}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !402, file: !143, line: 61, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !407)
!407 = !{!408, !414}
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 38, baseType: !409, size: 32)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 38, size: 32, elements: !410)
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !409, file: !153, line: 39, baseType: !412, size: 32)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !409, file: !153, line: 40, baseType: !412, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 42, baseType: !415, size: 32, offset: 32)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 42, size: 32, elements: !416)
!416 = !{!417, !418}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !415, file: !153, line: 43, baseType: !412, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !415, file: !153, line: 44, baseType: !412, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !402, file: !143, line: 62, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !420, file: !169, line: 50, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 64, elements: !174)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !399, file: !143, line: 68, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !428, file: !179, line: 232, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !406)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !399, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !399, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 90, baseType: !435, size: 16, offset: 112)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 90, size: 16, elements: !436)
!436 = !{!437, !442}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !143, line: 91, baseType: !438, size: 16)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !143, line: 91, size: 16, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !438, file: !143, line: 96, baseType: !195, size: 8)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !438, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !435, file: !143, line: 100, baseType: !199, size: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !399, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !399, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !399, file: !143, line: 131, baseType: !446, size: 192, offset: 192)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !447)
!447 = !{!448, !449, !455}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !446, file: !179, line: 245, baseType: !405, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !446, file: !179, line: 246, baseType: !450, size: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !454}
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !446, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !396, file: !143, line: 250, baseType: !457, size: 288, offset: 384)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !457, file: !216, line: 26, baseType: !118, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !457, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !457, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !457, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !457, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !457, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !457, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !457, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !457, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !396, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !396, file: !143, line: 256, baseType: !427, size: 64, offset: 704)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !396, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !396, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !396, file: !143, line: 300, baseType: !473, size: 96, offset: 1056)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !474)
!474 = !{!475, !476, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !143, line: 153, baseType: !22, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !473, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !396, file: !143, line: 325, baseType: !479, size: 32, offset: 1152)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !481)
!481 = !{!482, !488, !489}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !480, file: !245, line: 5074, baseType: !483, size: 96)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !483, file: !249, line: 57, baseType: !252, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !483, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !483, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !245, line: 5075, baseType: !427, size: 64, offset: 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !245, line: 5076, baseType: !490, size: 32, offset: 160)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !491)
!491 = !{!492}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !490, file: !259, line: 52, baseType: !22, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !396, file: !143, line: 343, baseType: !494, size: 64, offset: 1184)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !494, file: !216, line: 63, baseType: !118, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !494, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!498 = !{!499, !500, !501, !502}
!499 = !DILocalVariable(name: "thread", arg: 1, scope: !391, file: !392, line: 175, type: !395)
!500 = !DILocalVariable(name: "region_num", scope: !391, file: !392, line: 200, type: !185)
!501 = !DILocalVariable(name: "guard_start", scope: !391, file: !392, line: 265, type: !22)
!502 = !DILocalVariable(name: "guard_size", scope: !391, file: !392, line: 266, type: !239)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 96, elements: !515)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !506)
!505 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = !{!507, !508, !509}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !504, file: !505, line: 53, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !504, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !504, file: !505, line: 55, baseType: !510, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !512)
!511 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !512, file: !511, line: 150, baseType: !118, size: 32)
!515 = !{!516}
!516 = !DISubrange(count: 1)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "static_regions", scope: !385, file: !392, line: 62, type: !519, isLocal: true, isDefinition: true)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 96, elements: !515)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !289, line: 17, baseType: !278, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !522, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !528, file: !561, line: 39, type: !185, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !560, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!530 = !{!531, !113, !119, !548, !185}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !533, line: 1226, baseType: !534)
!533 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 1213, size: 352, elements: !535)
!535 = !{!536, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !534, file: !533, line: 1215, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !534, file: !533, line: 1216, baseType: !314, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !534, file: !533, line: 1217, baseType: !314, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !534, file: !533, line: 1218, baseType: !314, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !534, file: !533, line: 1219, baseType: !314, size: 32, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !534, file: !533, line: 1220, baseType: !314, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !534, file: !533, line: 1221, baseType: !314, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !534, file: !533, line: 1222, baseType: !314, size: 32, offset: 224)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !534, file: !533, line: 1223, baseType: !314, size: 32, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !534, file: !533, line: 1224, baseType: !314, size: 32, offset: 288)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !534, file: !533, line: 1225, baseType: !314, size: 32, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !550, file: !551, line: 29, baseType: !118, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !550, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !550, file: !551, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !511, line: 143, baseType: !118, size: 32)
!560 = !{!526}
!561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !564, file: !571, line: 21, type: !300, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !566, globals: !570, splitDebugInlining: false, nameTableKind: None)
!565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!566 = !{!567, !119, !113}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !569, line: 22, baseType: !119)
!569 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !{!562}
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !574, file: !579, line: 13, type: !596, isLocal: true, isDefinition: true)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !576, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!576 = !{!577, !572}
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "mpu_config", scope: !574, file: !579, line: 37, type: !580, isLocal: false, isDefinition: true)
!579 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !551, line: 41, size: 64, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !581, file: !551, line: 43, baseType: !118, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !581, file: !551, line: 45, baseType: !585, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !588)
!588 = !{!589, !590, !591}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !587, file: !551, line: 29, baseType: !118, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !587, file: !551, line: 37, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !594)
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !593, file: !511, line: 143, baseType: !118, size: 32)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 192, elements: !174)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !599, file: !704, line: 72, type: !788, isLocal: true, isDefinition: true)
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !601, retainedTypes: !690, globals: !701, splitDebugInlining: false, nameTableKind: None)
!600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!601 = !{!30, !602}
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !310, line: 65, baseType: !119, size: 32, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!604 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!605 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!606 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!607 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!608 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!609 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!610 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!611 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!612 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!613 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!614 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!615 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!616 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!617 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!618 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!619 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!620 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!621 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!622 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!623 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!624 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!625 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!626 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!627 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!628 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!629 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!630 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!631 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!632 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!633 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!634 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!635 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!636 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!637 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!638 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!639 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!640 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!641 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!642 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!643 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!644 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!645 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!646 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!647 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!648 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!649 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!650 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!651 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!652 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!653 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!654 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!655 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!656 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!657 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!658 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!659 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!660 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!661 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!662 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!663 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!664 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!665 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!666 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!667 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!668 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!669 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!670 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!671 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!672 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!673 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!674 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!675 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!676 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!677 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!678 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!679 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!680 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!681 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!682 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!683 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!684 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!685 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!686 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!687 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!688 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!689 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!690 = !{!239, !119, !113, !691}
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !310, line: 354, baseType: !693)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 346, size: 192, elements: !694)
!694 = !{!695, !696, !697, !698, !699, !700}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !693, file: !310, line: 348, baseType: !314, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !693, file: !310, line: 349, baseType: !314, size: 32, offset: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !693, file: !310, line: 350, baseType: !314, size: 32, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !693, file: !310, line: 351, baseType: !314, size: 32, offset: 96)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !693, file: !310, line: 352, baseType: !314, size: 32, offset: 128)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !693, file: !310, line: 353, baseType: !314, size: 32, offset: 160)
!701 = !{!702, !708, !724, !735, !752, !597, !754, !768, !770, !772, !774, !776, !778, !780, !782, !784, !786}
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !599, file: !704, line: 424, type: !705, isLocal: false, isDefinition: true, align: 16)
!704 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 64, elements: !706)
!706 = !{!707}
!707 = !DISubrange(count: 4)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !599, file: !704, line: 424, type: !710, isLocal: false, isDefinition: true, align: 32)
!710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !711)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !712)
!712 = !{!713, !714, !715, !716, !722, !723}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !711, file: !334, line: 380, baseType: !278, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !711, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !711, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !711, file: !334, line: 386, baseType: !717, size: 32, offset: 96)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !719)
!719 = !{!720, !721}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !718, file: !334, line: 359, baseType: !185, size: 8)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !718, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !711, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !711, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !599, file: !704, line: 424, type: !726, isLocal: true, isDefinition: true, align: 32)
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !728)
!728 = !{!729, !734}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !727, file: !325, line: 60, baseType: !730, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!731 = !DISubroutineType(types: !732)
!732 = !{!119, !733}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !727, file: !325, line: 65, baseType: !733, size: 32, offset: 32)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "exti_data", scope: !599, file: !704, line: 423, type: !737, isLocal: true, isDefinition: true)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !704, line: 107, size: 1472, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !737, file: !704, line: 109, baseType: !740, size: 1472)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, size: 1472, elements: !750)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !704, line: 101, size: 64, elements: !742)
!742 = !{!743, !749}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !741, file: !704, line: 102, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !745, line: 63, baseType: !746)
!745 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!747 = !DISubroutineType(types: !748)
!748 = !{null, !119, !113}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !741, file: !704, line: 103, baseType: !113, size: 32, offset: 32)
!750 = !{!751}
!751 = !DISubrange(count: 23)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !599, file: !704, line: 424, type: !718, isLocal: true, isDefinition: true, align: 8)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !756, file: !704, line: 493, type: !761, isLocal: true, isDefinition: true, align: 32)
!756 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !704, file: !704, line: 460, type: !757, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !759)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !733}
!759 = !{!760}
!760 = !DILocalVariable(name: "dev", arg: 1, scope: !756, file: !704, line: 460, type: !733)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !762)
!762 = !{!763, !765, !766, !767}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !761, file: !10, line: 55, baseType: !764, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !119)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !761, file: !10, line: 57, baseType: !764, size: 32, offset: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !761, file: !10, line: 59, baseType: !113, size: 32, offset: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !761, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !756, file: !704, line: 497, type: !761, isLocal: true, isDefinition: true, align: 32)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !756, file: !704, line: 507, type: !761, isLocal: true, isDefinition: true, align: 32)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !756, file: !704, line: 512, type: !761, isLocal: true, isDefinition: true, align: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !756, file: !704, line: 516, type: !761, isLocal: true, isDefinition: true, align: 32)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !756, file: !704, line: 523, type: !761, isLocal: true, isDefinition: true, align: 32)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !756, file: !704, line: 527, type: !761, isLocal: true, isDefinition: true, align: 32)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !756, file: !704, line: 581, type: !761, isLocal: true, isDefinition: true, align: 32)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !756, file: !704, line: 586, type: !761, isLocal: true, isDefinition: true, align: 32)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !756, file: !704, line: 591, type: !761, isLocal: true, isDefinition: true, align: 32)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !756, file: !704, line: 595, type: !761, isLocal: true, isDefinition: true, align: 32)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !789, size: 736, elements: !750)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !310, line: 155, baseType: !602)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !793, file: !798, line: 23, type: !822, isLocal: false, isDefinition: true, align: 16)
!793 = distinct !DICompileUnit(language: DW_LANG_C99, file: !794, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !795, splitDebugInlining: false, nameTableKind: None)
!794 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!795 = !{!796, !791, !802, !804, !806, !808, !810, !812, !814, !816, !818, !820}
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !793, file: !798, line: 18, type: !799, isLocal: false, isDefinition: true, align: 16)
!798 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 208, elements: !800)
!800 = !{!801}
!801 = !DISubrange(count: 13)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !793, file: !798, line: 30, type: !705, isLocal: false, isDefinition: true, align: 16)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !793, file: !798, line: 37, type: !705, isLocal: false, isDefinition: true, align: 16)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !793, file: !798, line: 44, type: !705, isLocal: false, isDefinition: true, align: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !793, file: !798, line: 51, type: !705, isLocal: false, isDefinition: true, align: 16)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !793, file: !798, line: 58, type: !705, isLocal: false, isDefinition: true, align: 16)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !793, file: !798, line: 65, type: !705, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !793, file: !798, line: 72, type: !705, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !793, file: !798, line: 79, type: !705, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !793, file: !798, line: 86, type: !705, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !793, file: !798, line: 93, type: !705, isLocal: false, isDefinition: true, align: 16)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 48, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 3)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !827, file: !888, line: 398, type: !921, isLocal: true, isDefinition: true)
!827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !828, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !829, retainedTypes: !842, globals: !885, splitDebugInlining: false, nameTableKind: None)
!828 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!829 = !{!830, !30, !835}
!830 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !831, line: 197, baseType: !32, size: 32, elements: !832)
!831 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!832 = !{!833, !834}
!833 = !DIEnumerator(name: "SUCCESS", value: 0)
!834 = !DIEnumerator(name: "ERROR", value: 1)
!835 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !836, line: 44, baseType: !32, size: 32, elements: !837)
!836 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!837 = !{!838, !839, !840, !841}
!838 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!839 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!840 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!841 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!842 = !{!113, !119, !118, !843, !878, !884}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 532, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 500, size: 1088, elements: !846)
!846 = !{!847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !845, file: !310, line: 502, baseType: !314, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !845, file: !310, line: 503, baseType: !314, size: 32, offset: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !845, file: !310, line: 504, baseType: !314, size: 32, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !845, file: !310, line: 505, baseType: !314, size: 32, offset: 96)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !845, file: !310, line: 506, baseType: !314, size: 32, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !845, file: !310, line: 507, baseType: !314, size: 32, offset: 160)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !845, file: !310, line: 508, baseType: !314, size: 32, offset: 192)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !845, file: !310, line: 509, baseType: !118, size: 32, offset: 224)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !845, file: !310, line: 510, baseType: !314, size: 32, offset: 256)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !845, file: !310, line: 511, baseType: !314, size: 32, offset: 288)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !845, file: !310, line: 512, baseType: !858, size: 64, offset: 320)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 64, elements: !174)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !845, file: !310, line: 513, baseType: !314, size: 32, offset: 384)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !845, file: !310, line: 514, baseType: !314, size: 32, offset: 416)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !845, file: !310, line: 515, baseType: !314, size: 32, offset: 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !845, file: !310, line: 516, baseType: !118, size: 32, offset: 480)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !845, file: !310, line: 517, baseType: !314, size: 32, offset: 512)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !845, file: !310, line: 518, baseType: !314, size: 32, offset: 544)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !845, file: !310, line: 519, baseType: !858, size: 64, offset: 576)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !845, file: !310, line: 520, baseType: !314, size: 32, offset: 640)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !845, file: !310, line: 521, baseType: !314, size: 32, offset: 672)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !845, file: !310, line: 522, baseType: !314, size: 32, offset: 704)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !845, file: !310, line: 523, baseType: !118, size: 32, offset: 736)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !845, file: !310, line: 524, baseType: !314, size: 32, offset: 768)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !845, file: !310, line: 525, baseType: !314, size: 32, offset: 800)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !845, file: !310, line: 526, baseType: !858, size: 64, offset: 832)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !845, file: !310, line: 527, baseType: !314, size: 32, offset: 896)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !845, file: !310, line: 528, baseType: !314, size: 32, offset: 928)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !845, file: !310, line: 529, baseType: !858, size: 64, offset: 960)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !845, file: !310, line: 530, baseType: !314, size: 32, offset: 1024)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !845, file: !310, line: 531, baseType: !314, size: 32, offset: 1056)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !881)
!880 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!881 = !{!882, !883}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !879, file: !880, line: 344, baseType: !118, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !879, file: !880, line: 345, baseType: !118, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!885 = !{!886, !892, !908, !919, !825}
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !827, file: !888, line: 752, type: !889, isLocal: false, isDefinition: true, align: 16)
!888 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 928, elements: !890)
!890 = !{!891}
!891 = !DISubrange(count: 58)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !827, file: !888, line: 752, type: !894, isLocal: false, isDefinition: true, align: 32)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !896)
!896 = !{!897, !898, !899, !900, !906, !907}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !895, file: !334, line: 380, baseType: !278, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !895, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !895, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !895, file: !334, line: 386, baseType: !901, size: 32, offset: 96)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !903)
!903 = !{!904, !905}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !902, file: !334, line: 359, baseType: !185, size: 8)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !902, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !895, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !895, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !827, file: !888, line: 752, type: !910, isLocal: true, isDefinition: true, align: 32)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !912)
!912 = !{!913, !918}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !911, file: !325, line: 60, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!119, !917}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !911, file: !325, line: 65, baseType: !917, size: 32, offset: 32)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !827, file: !888, line: 752, type: !902, isLocal: true, isDefinition: true, align: 8)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !836, line: 100, size: 224, elements: !922)
!922 = !{!923, !929, !930, !939, !944, !949, !955}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !921, file: !836, line: 101, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !836, line: 76, baseType: !925)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!119, !917, !928}
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !836, line: 56, baseType: !113)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !921, file: !836, line: 102, baseType: !924, size: 32, offset: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !921, file: !836, line: 103, baseType: !931, size: 32, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !836, line: 83, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!119, !917, !928, !935, !113}
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !836, line: 72, baseType: !936)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !917, !928, !113}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !921, file: !836, line: 104, baseType: !940, size: 32, offset: 96)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !836, line: 79, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!119, !917, !928, !884}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !921, file: !836, line: 105, baseType: !945, size: 32, offset: 128)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !836, line: 88, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DISubroutineType(types: !948)
!948 = !{!835, !917, !928}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !921, file: !836, line: 106, baseType: !950, size: 32, offset: 160)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !836, line: 92, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{!119, !917, !928, !954}
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !836, line: 64, baseType: !113)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !921, file: !836, line: 107, baseType: !956, size: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !836, line: 96, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!119, !917, !928, !113}
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !962, file: !1019, line: 603, type: !1021, isLocal: true, isDefinition: true, align: 32)
!962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !964, globals: !1016, splitDebugInlining: false, nameTableKind: None)
!963 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!964 = !{!113, !119, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !968, line: 336, size: 160, elements: !969)
!968 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!969 = !{!970, !990, !994, !998, !1011}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !967, file: !968, line: 365, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!119, !974, !989}
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !977)
!977 = !{!978, !979, !980, !981, !987, !988}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !976, file: !334, line: 380, baseType: !278, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !976, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !976, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !976, file: !334, line: 386, baseType: !982, size: 32, offset: 96)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !984)
!984 = !{!985, !986}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !983, file: !334, line: 359, baseType: !185, size: 8)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !983, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !976, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !976, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !967, file: !968, line: 366, baseType: !991, size: 32, offset: 32)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !974, !186}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !967, file: !968, line: 374, baseType: !995, size: 32, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!119, !974}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !967, file: !968, line: 377, baseType: !999, size: 32, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!119, !974, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !968, line: 122, size: 64, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1004, file: !968, line: 123, baseType: !118, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1004, file: !968, line: 124, baseType: !185, size: 8, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1004, file: !968, line: 125, baseType: !185, size: 8, offset: 40)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1004, file: !968, line: 126, baseType: !185, size: 8, offset: 48)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1004, file: !968, line: 127, baseType: !185, size: 8, offset: 56)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !967, file: !968, line: 379, baseType: !1012, size: 32, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!119, !974, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1016 = !{!960, !1017}
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !962, file: !1019, line: 38, type: !1020, isLocal: true, isDefinition: true)
!1019 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1022, file: !325, line: 60, baseType: !995, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1022, file: !325, line: 65, baseType: !974, size: 32, offset: 32)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1028, file: !1197, line: 762, type: !1316, isLocal: true, isDefinition: true)
!1028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1030, retainedTypes: !1048, globals: !1194, splitDebugInlining: false, nameTableKind: None)
!1029 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!1030 = !{!30, !1031, !1037, !1042, !835}
!1031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1032, line: 506, baseType: !32, size: 32, elements: !1033)
!1032 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1033 = !{!1034, !1035, !1036}
!1034 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1035 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1036 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1037 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1032, line: 512, baseType: !32, size: 32, elements: !1038)
!1038 = !{!1039, !1040, !1041}
!1039 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1040 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1041 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !745, line: 43, baseType: !32, size: 32, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047}
!1044 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1045 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1046 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1047 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1048 = !{!113, !119, !1049, !1119, !1124, !1084, !1037, !1031, !1129, !1130, !118, !1144, !1099, !106, !1154, !1155}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1032, line: 523, size: 288, elements: !1052)
!1052 = !{!1053, !1074, !1080, !1085, !1089, !1090, !1091, !1095, !1115}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1051, file: !1032, line: 524, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!119, !1057, !1072, !1073}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1060)
!1060 = !{!1061, !1062, !1063, !1064, !1070, !1071}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1059, file: !334, line: 380, baseType: !278, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1059, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1059, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1059, file: !334, line: 386, baseType: !1065, size: 32, offset: 96)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1066, file: !334, line: 359, baseType: !185, size: 8)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1066, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1059, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1059, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1032, line: 237, baseType: !185)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1032, line: 257, baseType: !118)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1051, file: !1032, line: 530, baseType: !1075, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!119, !1057, !1078}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1032, line: 229, baseType: !118)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1051, file: !1032, line: 532, baseType: !1081, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!119, !1057, !1084, !1079}
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1032, line: 216, baseType: !118)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1051, file: !1032, line: 535, baseType: !1086, size: 32, offset: 96)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!119, !1057, !1084}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1051, file: !1032, line: 537, baseType: !1086, size: 32, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1051, file: !1032, line: 539, baseType: !1086, size: 32, offset: 160)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1051, file: !1032, line: 541, baseType: !1092, size: 32, offset: 192)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!119, !1057, !1072, !1031, !1037}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1051, file: !1032, line: 544, baseType: !1096, size: 32, offset: 224)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!119, !1057, !1099, !345}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1032, line: 478, size: 96, elements: !1101)
!1101 = !{!1102, !1109, !1114}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1100, file: !1032, line: 482, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1104, line: 33, baseType: !1105)
!1104 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1104, line: 29, size: 32, elements: !1106)
!1106 = !{!1107}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1105, file: !1104, line: 30, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1100, file: !1032, line: 485, baseType: !1110, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1032, line: 464, baseType: !1111)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1057, !1099, !1084}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1100, file: !1032, line: 493, baseType: !1084, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1051, file: !1032, line: 547, baseType: !1116, size: 32, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!118, !1057}
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1032, line: 428, size: 32, elements: !1122)
!1122 = !{!1123}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1121, file: !1032, line: 434, baseType: !1084, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1032, line: 441, size: 32, elements: !1127)
!1127 = !{!1128}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1126, file: !1032, line: 447, baseType: !1084, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 441, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 430, size: 320, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1132, file: !310, line: 432, baseType: !314, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1132, file: !310, line: 433, baseType: !314, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1132, file: !310, line: 434, baseType: !314, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1132, file: !310, line: 435, baseType: !314, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1132, file: !310, line: 436, baseType: !314, size: 32, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1132, file: !310, line: 437, baseType: !314, size: 32, offset: 160)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1132, file: !310, line: 438, baseType: !314, size: 32, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1132, file: !310, line: 439, baseType: !314, size: 32, offset: 224)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1132, file: !310, line: 440, baseType: !1143, size: 64, offset: 256)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, elements: !174)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !310, line: 454, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 447, size: 288, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1152, !1153}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1146, file: !310, line: 449, baseType: !314, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1146, file: !310, line: 450, baseType: !314, size: 32, offset: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1146, file: !310, line: 451, baseType: !1151, size: 128, offset: 64)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 128, elements: !706)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1146, file: !310, line: 452, baseType: !858, size: 64, offset: 192)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1146, file: !310, line: 453, baseType: !314, size: 32, offset: 256)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !836, line: 100, size: 224, elements: !1158)
!1158 = !{!1159, !1164, !1165, !1174, !1179, !1184, !1189}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1157, file: !836, line: 101, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !836, line: 76, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!119, !1057, !928}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1157, file: !836, line: 102, baseType: !1160, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1157, file: !836, line: 103, baseType: !1166, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !836, line: 83, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!119, !1057, !928, !1170, !113}
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !836, line: 72, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !1057, !928, !113}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1157, file: !836, line: 104, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !836, line: 79, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!119, !1057, !928, !884}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1157, file: !836, line: 105, baseType: !1180, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !836, line: 88, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!835, !1057, !928}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1157, file: !836, line: 106, baseType: !1185, size: 32, offset: 160)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !836, line: 92, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!119, !1057, !928, !954}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1157, file: !836, line: 107, baseType: !1190, size: 32, offset: 192)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !836, line: 96, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!119, !1057, !928, !113}
!1194 = !{!1195, !1201, !1203, !1213, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1278, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1026, !1312, !1314, !1327, !1329, !1331, !1333, !1335, !1337, !1339}
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1197 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 96, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: 6)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1207)
!1207 = !{!1208, !1212}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1206, file: !325, line: 60, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!119, !1057}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1206, file: !325, line: 65, baseType: !1057, size: 32, offset: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 80, elements: !1216)
!1216 = !{!1217}
!1217 = !DISubrange(count: 5)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1028, file: !1197, line: 762, type: !1266, isLocal: true, isDefinition: true)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1267, line: 237, size: 128, elements: !1268)
!1267 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1266, file: !1267, line: 239, baseType: !1126, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1266, file: !1267, line: 241, baseType: !1057, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1266, file: !1267, line: 243, baseType: !1272, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1104, line: 40, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1104, line: 35, size: 64, elements: !1274)
!1274 = !{!1275, !1277}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1273, file: !1104, line: 36, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1273, file: !1104, line: 37, baseType: !1276, size: 32, offset: 32)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1028, file: !1197, line: 766, type: !1266, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1028, file: !1197, line: 770, type: !1266, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1028, file: !1197, line: 774, type: !1266, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1028, file: !1197, line: 778, type: !1266, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1028, file: !1197, line: 782, type: !1266, isLocal: true, isDefinition: true)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1028, file: !1197, line: 786, type: !1266, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1028, file: !1197, line: 790, type: !1266, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1028, file: !1197, line: 794, type: !1266, isLocal: true, isDefinition: true)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1028, file: !1197, line: 656, type: !1050, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1028, file: !1197, line: 766, type: !1316, isLocal: true, isDefinition: true)
!1316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1267, line: 224, size: 160, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1317, file: !1267, line: 226, baseType: !1121, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1317, file: !1267, line: 228, baseType: !884, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1317, file: !1267, line: 230, baseType: !119, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1317, file: !1267, line: 231, baseType: !1323, size: 64, offset: 96)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1323, file: !880, line: 344, baseType: !118, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1323, file: !880, line: 345, baseType: !118, size: 32, offset: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1028, file: !1197, line: 770, type: !1316, isLocal: true, isDefinition: true)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1028, file: !1197, line: 774, type: !1316, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1028, file: !1197, line: 778, type: !1316, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1028, file: !1197, line: 782, type: !1316, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1028, file: !1197, line: 786, type: !1316, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1028, file: !1197, line: 790, type: !1316, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1028, file: !1197, line: 794, type: !1316, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1343, file: !1482, line: 44, type: !1560, isLocal: false, isDefinition: true)
!1343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1345, retainedTypes: !1378, globals: !1479, splitDebugInlining: false, nameTableKind: None)
!1344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!1345 = !{!30, !1346, !1353, !1360, !1367, !1373, !835}
!1346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !968, line: 47, baseType: !32, size: 32, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352}
!1348 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1349 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1350 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1351 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1352 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !968, line: 75, baseType: !32, size: 32, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1356 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1357 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1358 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1359 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !968, line: 92, baseType: !32, size: 32, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366}
!1362 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1363 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1364 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1365 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1366 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !968, line: 84, baseType: !32, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372}
!1369 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1370 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1371 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1372 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !968, line: 107, baseType: !32, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377}
!1375 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1376 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1377 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1378 = !{!113, !119, !1379, !186, !185, !1428, !118, !928, !1439, !199, !120, !1478}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !968, line: 336, size: 160, elements: !1382)
!1382 = !{!1383, !1402, !1406, !1410, !1423}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1381, file: !968, line: 365, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!119, !1387, !989}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1400, !1401}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !334, line: 380, baseType: !278, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1389, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1389, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1389, file: !334, line: 386, baseType: !1395, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1396, file: !334, line: 359, baseType: !185, size: 8)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1396, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1389, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1389, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1381, file: !968, line: 366, baseType: !1403, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{null, !1387, !186}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1381, file: !968, line: 374, baseType: !1407, size: 32, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!119, !1387}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1381, file: !968, line: 377, baseType: !1411, size: 32, offset: 96)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!119, !1387, !1414}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !968, line: 122, size: 64, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1416, file: !968, line: 123, baseType: !118, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1416, file: !968, line: 124, baseType: !185, size: 8, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1416, file: !968, line: 125, baseType: !185, size: 8, offset: 40)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1416, file: !968, line: 126, baseType: !185, size: 8, offset: 48)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1416, file: !968, line: 127, baseType: !185, size: 8, offset: 56)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1381, file: !968, line: 379, baseType: !1424, size: 32, offset: 128)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!119, !1387, !1427}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !310, line: 670, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 661, size: 224, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436, !1437, !1438}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1430, file: !310, line: 663, baseType: !314, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1430, file: !310, line: 664, baseType: !314, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1430, file: !310, line: 665, baseType: !314, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1430, file: !310, line: 666, baseType: !314, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1430, file: !310, line: 667, baseType: !314, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1430, file: !310, line: 668, baseType: !314, size: 32, offset: 160)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1430, file: !310, line: 669, baseType: !314, size: 32, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !836, line: 100, size: 224, elements: !1442)
!1442 = !{!1443, !1448, !1449, !1458, !1463, !1468, !1473}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1441, file: !836, line: 101, baseType: !1444, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !836, line: 76, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!119, !1387, !928}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1441, file: !836, line: 102, baseType: !1444, size: 32, offset: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1441, file: !836, line: 103, baseType: !1450, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !836, line: 83, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!119, !1387, !928, !1454, !113}
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !836, line: 72, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1387, !928, !113}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1441, file: !836, line: 104, baseType: !1459, size: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !836, line: 79, baseType: !1460)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!119, !1387, !928, !884}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1441, file: !836, line: 105, baseType: !1464, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !836, line: 88, baseType: !1465)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!835, !1387, !928}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1441, file: !836, line: 106, baseType: !1469, size: 32, offset: 160)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !836, line: 92, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!119, !1387, !928, !954}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1441, file: !836, line: 107, baseType: !1474, size: 32, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !836, line: 96, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!119, !1387, !928, !113}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!1479 = !{!1341, !1480, !1486, !1488, !1495, !1497, !1541, !1544, !1546, !1549, !1552, !1554}
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1483, isLocal: false, isDefinition: true, align: 16)
!1482 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 128, elements: !1484)
!1484 = !{!1485}
!1485 = !DISubrange(count: 8)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1490, isLocal: true, isDefinition: true, align: 32)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1492)
!1492 = !{!1493, !1494}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1491, file: !325, line: 60, baseType: !1407, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1491, file: !325, line: 65, baseType: !1387, size: 32, offset: 32)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1343, file: !1482, line: 1914, type: !1499, isLocal: true, isDefinition: true)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1501, line: 22, size: 224, elements: !1502)
!1501 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1502 = !{!1503, !1504, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1500, file: !1501, line: 24, baseType: !1428, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1500, file: !1501, line: 26, baseType: !1505, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !1508)
!1508 = !{!1509, !1510}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1507, file: !880, line: 344, baseType: !118, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1507, file: !880, line: 345, baseType: !118, size: 32, offset: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1500, file: !1501, line: 28, baseType: !239, size: 32, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1500, file: !1501, line: 30, baseType: !345, size: 8, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1500, file: !1501, line: 32, baseType: !119, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1500, file: !1501, line: 34, baseType: !345, size: 8, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1500, file: !1501, line: 36, baseType: !345, size: 8, offset: 168)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1500, file: !1501, line: 38, baseType: !345, size: 8, offset: 176)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1500, file: !1501, line: 40, baseType: !345, size: 8, offset: 184)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1500, file: !1501, line: 41, baseType: !1519, size: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1522, line: 60, size: 64, elements: !1523)
!1522 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1523 = !{!1524, !1540}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1521, file: !1522, line: 69, baseType: !1525, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1522, line: 50, size: 64, elements: !1528)
!1528 = !{!1529, !1538, !1539}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1527, file: !1522, line: 52, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1533, line: 37, baseType: !1534)
!1533 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1533, line: 32, size: 64, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1534, file: !1533, line: 34, baseType: !118, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1534, file: !1533, line: 36, baseType: !118, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1527, file: !1522, line: 54, baseType: !185, size: 8, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1527, file: !1522, line: 56, baseType: !185, size: 8, offset: 40)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1521, file: !1522, line: 71, baseType: !185, size: 8, offset: 32)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1343, file: !1482, line: 1914, type: !1543, isLocal: true, isDefinition: true)
!1543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1506, size: 64, elements: !515)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1520, isLocal: true, isDefinition: true)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1548, isLocal: true, isDefinition: true)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 64, elements: !515)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1551, isLocal: true, isDefinition: true)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 128, elements: !174)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1343, file: !1482, line: 1539, type: !1380, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1343, file: !1482, line: 1914, type: !1556, isLocal: true, isDefinition: true)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1501, line: 74, size: 64, elements: !1557)
!1557 = !{!1558, !1559}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1556, file: !1501, line: 76, baseType: !118, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1556, file: !1501, line: 78, baseType: !1387, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !1562)
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1561, file: !289, line: 17, baseType: !278, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1561, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1567, file: !1645, line: 65, type: !314, isLocal: true, isDefinition: true)
!1567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !1570, globals: !1642, splitDebugInlining: false, nameTableKind: None)
!1568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!1569 = !{!602}
!1570 = !{!114, !1571, !764, !185, !118, !1579, !1610}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1573, file: !533, line: 766, baseType: !314, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1573, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1573, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1573, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1582)
!1582 = !{!1583, !1585, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1600, !1605, !1609}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1581, file: !533, line: 413, baseType: !1584, size: 256)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !1484)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1581, file: !533, line: 414, baseType: !1586, size: 768, offset: 256)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 768, elements: !1587)
!1587 = !{!1588}
!1588 = !DISubrange(count: 24)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1581, file: !533, line: 415, baseType: !1584, size: 256, offset: 1024)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1581, file: !533, line: 416, baseType: !1586, size: 768, offset: 1280)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1581, file: !533, line: 417, baseType: !1584, size: 256, offset: 2048)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1581, file: !533, line: 418, baseType: !1586, size: 768, offset: 2304)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1581, file: !533, line: 419, baseType: !1584, size: 256, offset: 3072)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1581, file: !533, line: 420, baseType: !1586, size: 768, offset: 3328)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1581, file: !533, line: 421, baseType: !1584, size: 256, offset: 4096)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1581, file: !533, line: 422, baseType: !1597, size: 1792, offset: 4352)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 1792, elements: !1598)
!1598 = !{!1599}
!1599 = !DISubrange(count: 56)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1581, file: !533, line: 423, baseType: !1601, size: 1920, offset: 6144)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 1920, elements: !1603)
!1602 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1603 = !{!1604}
!1604 = !DISubrange(count: 240)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1581, file: !533, line: 424, baseType: !1606, size: 20608, offset: 8064)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 20608, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 644)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1581, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1633, !1634, !1635, !1637, !1639, !1641}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1612, file: !533, line: 447, baseType: !537, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1612, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1612, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1612, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1612, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1612, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1612, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 96, elements: !1622)
!1622 = !{!1623}
!1623 = !DISubrange(count: 12)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1612, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1612, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1612, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1612, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1612, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1612, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1612, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1612, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 64, elements: !174)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1612, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1612, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1612, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 128, elements: !706)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1612, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 160, elements: !1216)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1612, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 160, elements: !1216)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1612, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1642 = !{!1643, !1669, !1674, !1676, !1678, !1565}
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1567, file: !1645, line: 285, type: !1646, isLocal: true, isDefinition: true, align: 32)
!1645 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1648)
!1648 = !{!1649, !1668}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1647, file: !325, line: 60, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!119, !1653}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1656)
!1656 = !{!1657, !1658, !1659, !1660, !1666, !1667}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1655, file: !334, line: 380, baseType: !278, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1655, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1655, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1655, file: !334, line: 386, baseType: !1661, size: 32, offset: 96)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1663)
!1663 = !{!1664, !1665}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1662, file: !334, line: 359, baseType: !185, size: 8)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1662, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1655, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1655, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1647, file: !325, line: 65, baseType: !1653, size: 32, offset: 32)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "lock", scope: !1567, file: !1645, line: 34, type: !1671, isLocal: true, isDefinition: true)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !1672)
!1672 = !{!1673}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1671, file: !259, line: 52, baseType: !22, size: 32)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "last_load", scope: !1567, file: !1645, line: 36, type: !118, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1567, file: !1645, line: 48, type: !118, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1567, file: !1645, line: 54, type: !118, isLocal: true, isDefinition: true)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1682, file: !1764, line: 22, type: !1766, isLocal: true, isDefinition: true)
!1682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1684, retainedTypes: !1685, globals: !1761, splitDebugInlining: false, nameTableKind: None)
!1683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!1684 = !{!1031, !1037}
!1685 = !{!1686, !1750, !1755, !1084, !1037, !1031, !1760, !113}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1032, line: 523, size: 288, elements: !1689)
!1689 = !{!1690, !1709, !1713, !1717, !1721, !1722, !1723, !1727, !1746}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1688, file: !1032, line: 524, baseType: !1691, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!119, !1694, !1072, !1073}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1707, !1708}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1696, file: !334, line: 380, baseType: !278, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1696, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1696, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1696, file: !334, line: 386, baseType: !1702, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1703, file: !334, line: 359, baseType: !185, size: 8)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1703, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1696, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1696, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1688, file: !1032, line: 530, baseType: !1710, size: 32, offset: 32)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!119, !1694, !1078}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1688, file: !1032, line: 532, baseType: !1714, size: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!119, !1694, !1084, !1079}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1688, file: !1032, line: 535, baseType: !1718, size: 32, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!119, !1694, !1084}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1688, file: !1032, line: 537, baseType: !1718, size: 32, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1688, file: !1032, line: 539, baseType: !1718, size: 32, offset: 160)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1688, file: !1032, line: 541, baseType: !1724, size: 32, offset: 192)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!119, !1694, !1072, !1031, !1037}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1688, file: !1032, line: 544, baseType: !1728, size: 32, offset: 224)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!119, !1694, !1731, !345}
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1032, line: 478, size: 96, elements: !1733)
!1733 = !{!1734, !1740, !1745}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1732, file: !1032, line: 482, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1104, line: 33, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1104, line: 29, size: 32, elements: !1737)
!1737 = !{!1738}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1736, file: !1104, line: 30, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1732, file: !1032, line: 485, baseType: !1741, size: 32, offset: 32)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1032, line: 464, baseType: !1742)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !1694, !1731, !1084}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1732, file: !1032, line: 493, baseType: !1084, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1688, file: !1032, line: 547, baseType: !1747, size: 32, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!118, !1694}
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1032, line: 428, size: 32, elements: !1753)
!1753 = !{!1754}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1752, file: !1032, line: 434, baseType: !1084, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1032, line: 441, size: 32, elements: !1758)
!1758 = !{!1759}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1757, file: !1032, line: 447, baseType: !1084, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1761 = !{!1762, !1680}
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1763 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1682, file: !1764, line: 37, type: !1765, isLocal: true, isDefinition: true)
!1764 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 352, elements: !1768)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1768 = !{!1769}
!1769 = !DISubrange(count: 11)
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1772, file: !1812, line: 139, type: !1817, isLocal: false, isDefinition: true)
!1772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1773, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1774, globals: !1809, splitDebugInlining: false, nameTableKind: None)
!1773 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!1774 = !{!1775}
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 532, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 500, size: 1088, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1777, file: !310, line: 502, baseType: !314, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1777, file: !310, line: 503, baseType: !314, size: 32, offset: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1777, file: !310, line: 504, baseType: !314, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1777, file: !310, line: 505, baseType: !314, size: 32, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1777, file: !310, line: 506, baseType: !314, size: 32, offset: 128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1777, file: !310, line: 507, baseType: !314, size: 32, offset: 160)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1777, file: !310, line: 508, baseType: !314, size: 32, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1777, file: !310, line: 509, baseType: !118, size: 32, offset: 224)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1777, file: !310, line: 510, baseType: !314, size: 32, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1777, file: !310, line: 511, baseType: !314, size: 32, offset: 288)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1777, file: !310, line: 512, baseType: !858, size: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1777, file: !310, line: 513, baseType: !314, size: 32, offset: 384)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1777, file: !310, line: 514, baseType: !314, size: 32, offset: 416)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1777, file: !310, line: 515, baseType: !314, size: 32, offset: 448)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1777, file: !310, line: 516, baseType: !118, size: 32, offset: 480)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1777, file: !310, line: 517, baseType: !314, size: 32, offset: 512)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1777, file: !310, line: 518, baseType: !314, size: 32, offset: 544)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1777, file: !310, line: 519, baseType: !858, size: 64, offset: 576)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1777, file: !310, line: 520, baseType: !314, size: 32, offset: 640)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1777, file: !310, line: 521, baseType: !314, size: 32, offset: 672)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1777, file: !310, line: 522, baseType: !314, size: 32, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1777, file: !310, line: 523, baseType: !118, size: 32, offset: 736)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1777, file: !310, line: 524, baseType: !314, size: 32, offset: 768)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1777, file: !310, line: 525, baseType: !314, size: 32, offset: 800)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1777, file: !310, line: 526, baseType: !858, size: 64, offset: 832)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1777, file: !310, line: 527, baseType: !314, size: 32, offset: 896)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1777, file: !310, line: 528, baseType: !314, size: 32, offset: 928)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1777, file: !310, line: 529, baseType: !858, size: 64, offset: 960)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1777, file: !310, line: 530, baseType: !314, size: 32, offset: 1024)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1777, file: !310, line: 531, baseType: !314, size: 32, offset: 1056)
!1809 = !{!1810, !1813, !1770}
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1772, file: !1812, line: 137, type: !118, isLocal: false, isDefinition: true)
!1812 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1772, file: !1812, line: 138, type: !1815, isLocal: false, isDefinition: true)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 128, elements: !267)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 64, elements: !1484)
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1820, file: !1823, line: 23, type: !1824, isLocal: false, isDefinition: true)
!1820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1821, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !1822, splitDebugInlining: false, nameTableKind: None)
!1821 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!1822 = !{!1818}
!1823 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1827, file: !1831, line: 37, type: !2086, isLocal: false, isDefinition: true)
!1827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1828, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1829, retainedTypes: !1838, globals: !1911, splitDebugInlining: false, nameTableKind: None)
!1828 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!1829 = !{!1830, !30, !602}
!1830 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1831, line: 63, baseType: !32, size: 32, elements: !1832)
!1831 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1832 = !{!1833, !1834, !1835, !1836, !1837}
!1833 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1834 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1835 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1836 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1837 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1838 = !{!22, !239, !113, !119, !1839, !106, !118, !1869, !764, !185, !1894}
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1841)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1842, line: 51, size: 64, elements: !1843)
!1842 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1843 = !{!1844, !1864}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1841, file: !1842, line: 52, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1842, line: 38, baseType: !1846)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!119, !1849, !284, !199}
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1856, !1862, !1863}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1851, file: !334, line: 380, baseType: !278, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1851, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1851, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1851, file: !334, line: 386, baseType: !1857, size: 32, offset: 96)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1858, file: !334, line: 359, baseType: !185, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1858, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1851, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1851, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1841, file: !1842, line: 53, baseType: !1865, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1842, line: 47, baseType: !1866)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!119, !1849, !284, !199, !118}
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1871, file: !533, line: 447, baseType: !537, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1871, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1871, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1871, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1871, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1871, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1871, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1871, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1871, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1871, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1871, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1871, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1871, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1871, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1871, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1871, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1871, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1871, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1871, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1871, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1871, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1897)
!1897 = !{!1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1896, file: !533, line: 413, baseType: !1584, size: 256)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1896, file: !533, line: 414, baseType: !1586, size: 768, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1896, file: !533, line: 415, baseType: !1584, size: 256, offset: 1024)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1896, file: !533, line: 416, baseType: !1586, size: 768, offset: 1280)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1896, file: !533, line: 417, baseType: !1584, size: 256, offset: 2048)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1896, file: !533, line: 418, baseType: !1586, size: 768, offset: 2304)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1896, file: !533, line: 419, baseType: !1584, size: 256, offset: 3072)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1896, file: !533, line: 420, baseType: !1586, size: 768, offset: 3328)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1896, file: !533, line: 421, baseType: !1584, size: 256, offset: 4096)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1896, file: !533, line: 422, baseType: !1597, size: 1792, offset: 4352)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1896, file: !533, line: 423, baseType: !1601, size: 1920, offset: 6144)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1896, file: !533, line: 424, baseType: !1606, size: 20608, offset: 8064)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1896, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1911 = !{!1825, !1912, !2038, !2046, !2048, !2051, !2056, !2058, !2063}
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "_kernel", scope: !1827, file: !1831, line: 40, type: !1914, isLocal: false, isDefinition: true)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !179, line: 158, size: 288, elements: !1915)
!1915 = !{!1916, !2033}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1914, file: !179, line: 159, baseType: !1917, size: 192)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1918, size: 192, elements: !515)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !179, line: 100, size: 192, elements: !1919)
!1919 = !{!1920, !1921, !1922, !2026, !2027, !2028, !2029}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1918, file: !179, line: 102, baseType: !118, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1918, file: !179, line: 105, baseType: !106, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1918, file: !179, line: 108, baseType: !1923, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !1925)
!1925 = !{!1926, !1984, !1996, !1997, !1998, !1999, !2000, !2006, !2021}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1924, file: !143, line: 247, baseType: !1927, size: 384)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !1928)
!1928 = !{!1929, !1953, !1960, !1961, !1962, !1971, !1972, !1973}
!1929 = !DIDerivedType(tag: DW_TAG_member, scope: !1927, file: !143, line: 60, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1927, file: !143, line: 60, size: 64, elements: !1931)
!1931 = !{!1932, !1947}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1930, file: !143, line: 61, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !1935)
!1935 = !{!1936, !1942}
!1936 = !DIDerivedType(tag: DW_TAG_member, scope: !1934, file: !153, line: 38, baseType: !1937, size: 32)
!1937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1934, file: !153, line: 38, size: 32, elements: !1938)
!1938 = !{!1939, !1941}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1937, file: !153, line: 39, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1937, file: !153, line: 40, baseType: !1940, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, scope: !1934, file: !153, line: 42, baseType: !1943, size: 32, offset: 32)
!1943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1934, file: !153, line: 42, size: 32, elements: !1944)
!1944 = !{!1945, !1946}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1943, file: !153, line: 43, baseType: !1940, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1943, file: !153, line: 44, baseType: !1940, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1930, file: !143, line: 62, baseType: !1948, size: 64)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !1949)
!1949 = !{!1950}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1948, file: !169, line: 50, baseType: !1951, size: 64)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1952, size: 64, elements: !174)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1927, file: !143, line: 68, baseType: !1954, size: 32, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !1957)
!1957 = !{!1958}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1956, file: !179, line: 232, baseType: !1959, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !1934)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1927, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1927, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!1962 = !DIDerivedType(tag: DW_TAG_member, scope: !1927, file: !143, line: 90, baseType: !1963, size: 16, offset: 112)
!1963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1927, file: !143, line: 90, size: 16, elements: !1964)
!1964 = !{!1965, !1970}
!1965 = !DIDerivedType(tag: DW_TAG_member, scope: !1963, file: !143, line: 91, baseType: !1966, size: 16)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1963, file: !143, line: 91, size: 16, elements: !1967)
!1967 = !{!1968, !1969}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1966, file: !143, line: 96, baseType: !195, size: 8)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1966, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1963, file: !143, line: 100, baseType: !199, size: 16)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1927, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1927, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1927, file: !143, line: 131, baseType: !1974, size: 192, offset: 192)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !1975)
!1975 = !{!1976, !1977, !1983}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1974, file: !179, line: 245, baseType: !1933, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1974, file: !179, line: 246, baseType: !1978, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !1979)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1982}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1974, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1924, file: !143, line: 250, baseType: !1985, size: 288, offset: 384)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1985, file: !216, line: 26, baseType: !118, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1985, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1985, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1985, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1985, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1985, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1985, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1985, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1985, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1924, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1924, file: !143, line: 256, baseType: !1955, size: 64, offset: 704)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1924, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1924, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1924, file: !143, line: 300, baseType: !2001, size: 96, offset: 1056)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2002)
!2002 = !{!2003, !2004, !2005}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2001, file: !143, line: 153, baseType: !22, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2001, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2001, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1924, file: !143, line: 325, baseType: !2007, size: 32, offset: 1152)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2009)
!2009 = !{!2010, !2016, !2017}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2008, file: !245, line: 5074, baseType: !2011, size: 96)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2012)
!2012 = !{!2013, !2014, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2011, file: !249, line: 57, baseType: !252, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2011, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2011, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2008, file: !245, line: 5075, baseType: !1955, size: 64, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2008, file: !245, line: 5076, baseType: !2018, size: 32, offset: 160)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2019)
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2018, file: !259, line: 52, baseType: !22, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1924, file: !143, line: 343, baseType: !2022, size: 64, offset: 1184)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2023)
!2023 = !{!2024, !2025}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2022, file: !216, line: 63, baseType: !118, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2022, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1918, file: !179, line: 111, baseType: !1923, size: 32, offset: 96)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1918, file: !179, line: 124, baseType: !119, size: 32, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1918, file: !179, line: 127, baseType: !185, size: 8, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1918, file: !179, line: 153, baseType: !2030, offset: 168)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2031, line: 33, elements: !2032)
!2031 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2032 = !{}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1914, file: !179, line: 170, baseType: !2034, size: 96, offset: 192)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2034, file: !179, line: 86, baseType: !1923, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2034, file: !179, line: 90, baseType: !1959, size: 64, offset: 32)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1827, file: !1831, line: 43, type: !2040, isLocal: false, isDefinition: true, align: 512)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 8704, elements: !2044)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2041, file: !128, line: 48, baseType: !107, size: 8)
!2044 = !{!2045}
!2045 = !DISubrange(count: 1088)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1827, file: !1831, line: 44, type: !1924, isLocal: false, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1827, file: !1831, line: 48, type: !2050, isLocal: false, isDefinition: true)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 1280, elements: !515)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1827, file: !1831, line: 86, type: !2053, isLocal: false, isDefinition: true, align: 512)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 16896, elements: !2054)
!2054 = !{!516, !2055}
!2055 = !DISubrange(count: 2112)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1827, file: !1831, line: 217, type: !345, isLocal: false, isDefinition: true)
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1827, file: !1831, line: 50, type: !2060, isLocal: true, isDefinition: true, align: 512)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 3072, elements: !2061)
!2061 = !{!516, !2062}
!2062 = !DISubrange(count: 384)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "levels", scope: !2065, file: !1831, line: 232, type: !2085, isLocal: true, isDefinition: true)
!2065 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1831, file: !1831, line: 230, type: !2066, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !2068)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{null, !1830}
!2068 = !{!2069, !2070, !2080, !2084}
!2069 = !DILocalVariable(name: "level", arg: 1, scope: !2065, file: !1831, line: 230, type: !1830)
!2070 = !DILocalVariable(name: "entry", scope: !2065, file: !1831, line: 244, type: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !2074)
!2074 = !{!2075, !2079}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2073, file: !325, line: 60, baseType: !2076, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!119, !1849}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2073, file: !325, line: 65, baseType: !1849, size: 32, offset: 32)
!2080 = !DILocalVariable(name: "dev", scope: !2081, file: !1831, line: 247, type: !1849)
!2081 = distinct !DILexicalBlock(scope: !2082, file: !1831, line: 246, column: 64)
!2082 = distinct !DILexicalBlock(scope: !2083, file: !1831, line: 246, column: 2)
!2083 = distinct !DILexicalBlock(scope: !2065, file: !1831, line: 246, column: 2)
!2084 = !DILocalVariable(name: "rc", scope: !2081, file: !1831, line: 248, type: !119)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2071, size: 192, elements: !1199)
!2086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2087, file: !289, line: 17, baseType: !278, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2087, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "states_str", scope: !2093, file: !2094, line: 276, type: !2218, isLocal: true, isDefinition: true)
!2093 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2094, file: !2094, line: 271, type: !2095, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !2209)
!2094 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!278, !2097, !106, !239}
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2100)
!2100 = !{!2101, !2159, !2171, !2172, !2173, !2174, !2175, !2181, !2196}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2099, file: !143, line: 247, baseType: !2102, size: 384)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2103)
!2103 = !{!2104, !2128, !2135, !2136, !2137, !2146, !2147, !2148}
!2104 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !143, line: 60, baseType: !2105, size: 64)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !143, line: 60, size: 64, elements: !2106)
!2106 = !{!2107, !2122}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2105, file: !143, line: 61, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2110)
!2110 = !{!2111, !2117}
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !153, line: 38, baseType: !2112, size: 32)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !153, line: 38, size: 32, elements: !2113)
!2113 = !{!2114, !2116}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2112, file: !153, line: 39, baseType: !2115, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2112, file: !153, line: 40, baseType: !2115, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !153, line: 42, baseType: !2118, size: 32, offset: 32)
!2118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !153, line: 42, size: 32, elements: !2119)
!2119 = !{!2120, !2121}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2118, file: !153, line: 43, baseType: !2115, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2118, file: !153, line: 44, baseType: !2115, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2105, file: !143, line: 62, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2124)
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2123, file: !169, line: 50, baseType: !2126, size: 64)
!2126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2127, size: 64, elements: !174)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2102, file: !143, line: 68, baseType: !2129, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2131)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2132)
!2132 = !{!2133}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2131, file: !179, line: 232, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2109)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2102, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2102, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !143, line: 90, baseType: !2138, size: 16, offset: 112)
!2138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !143, line: 90, size: 16, elements: !2139)
!2139 = !{!2140, !2145}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !143, line: 91, baseType: !2141, size: 16)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2138, file: !143, line: 91, size: 16, elements: !2142)
!2142 = !{!2143, !2144}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2141, file: !143, line: 96, baseType: !195, size: 8)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2141, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2138, file: !143, line: 100, baseType: !199, size: 16)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2102, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2102, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2102, file: !143, line: 131, baseType: !2149, size: 192, offset: 192)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2150)
!2150 = !{!2151, !2152, !2158}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2149, file: !179, line: 245, baseType: !2108, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2149, file: !179, line: 246, baseType: !2153, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2154)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 32)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{null, !2157}
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2149, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2099, file: !143, line: 250, baseType: !2160, size: 288, offset: 384)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2161)
!2161 = !{!2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2160, file: !216, line: 26, baseType: !118, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2160, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2160, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2160, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2160, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2160, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2160, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2160, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2160, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2099, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2099, file: !143, line: 256, baseType: !2130, size: 64, offset: 704)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2099, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2099, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2099, file: !143, line: 300, baseType: !2176, size: 96, offset: 1056)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2177)
!2177 = !{!2178, !2179, !2180}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2176, file: !143, line: 153, baseType: !22, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2176, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2176, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2099, file: !143, line: 325, baseType: !2182, size: 32, offset: 1152)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2184)
!2184 = !{!2185, !2191, !2192}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2183, file: !245, line: 5074, baseType: !2186, size: 96)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2187)
!2187 = !{!2188, !2189, !2190}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2186, file: !249, line: 57, baseType: !252, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2186, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2186, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2183, file: !245, line: 5075, baseType: !2130, size: 64, offset: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2183, file: !245, line: 5076, baseType: !2193, size: 32, offset: 160)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2194)
!2194 = !{!2195}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2193, file: !259, line: 52, baseType: !22, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2099, file: !143, line: 343, baseType: !2197, size: 64, offset: 1184)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2198)
!2198 = !{!2199, !2200}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2197, file: !216, line: 63, baseType: !118, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2197, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2201 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2202, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2203, globals: !2205, splitDebugInlining: false, nameTableKind: None)
!2202 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2203 = !{!113, !278, !114, !185, !22, !119, !2204, !24, !239, !106, !118, !120}
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2205 = !{!2091, !2206}
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "states_sz", scope: !2093, file: !2094, line: 279, type: !2208, isLocal: true, isDefinition: true)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1765, size: 256, elements: !1484)
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2210 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2093, file: !2094, line: 271, type: !2097)
!2211 = !DILocalVariable(name: "buf", arg: 2, scope: !2093, file: !2094, line: 271, type: !106)
!2212 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2093, file: !2094, line: 271, type: !239)
!2213 = !DILocalVariable(name: "off", scope: !2093, file: !2094, line: 273, type: !239)
!2214 = !DILocalVariable(name: "bit", scope: !2093, file: !2094, line: 274, type: !185)
!2215 = !DILocalVariable(name: "thread_state", scope: !2093, file: !2094, line: 275, type: !185)
!2216 = !DILocalVariable(name: "index", scope: !2217, file: !2094, line: 293, type: !185)
!2217 = distinct !DILexicalBlock(scope: !2093, file: !2094, line: 293, column: 2)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !1484)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2221, file: !2332, line: 56, type: !2319, isLocal: false, isDefinition: true)
!2221 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2222, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2223, globals: !2329, splitDebugInlining: false, nameTableKind: None)
!2222 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2223 = !{!2224, !106, !113, !2327, !284, !114, !764, !119, !118, !120, !2328}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2226)
!2226 = !{!2227, !2285, !2297, !2298, !2299, !2300, !2301, !2307, !2322}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2225, file: !143, line: 247, baseType: !2228, size: 384)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2229)
!2229 = !{!2230, !2254, !2261, !2262, !2263, !2272, !2273, !2274}
!2230 = !DIDerivedType(tag: DW_TAG_member, scope: !2228, file: !143, line: 60, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2228, file: !143, line: 60, size: 64, elements: !2232)
!2232 = !{!2233, !2248}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2231, file: !143, line: 61, baseType: !2234, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2236)
!2236 = !{!2237, !2243}
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !2235, file: !153, line: 38, baseType: !2238, size: 32)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2235, file: !153, line: 38, size: 32, elements: !2239)
!2239 = !{!2240, !2242}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2238, file: !153, line: 39, baseType: !2241, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2238, file: !153, line: 40, baseType: !2241, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2235, file: !153, line: 42, baseType: !2244, size: 32, offset: 32)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2235, file: !153, line: 42, size: 32, elements: !2245)
!2245 = !{!2246, !2247}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2244, file: !153, line: 43, baseType: !2241, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2244, file: !153, line: 44, baseType: !2241, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2231, file: !143, line: 62, baseType: !2249, size: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2250)
!2250 = !{!2251}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2249, file: !169, line: 50, baseType: !2252, size: 64)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2253, size: 64, elements: !174)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2228, file: !143, line: 68, baseType: !2255, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2258)
!2258 = !{!2259}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2257, file: !179, line: 232, baseType: !2260, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2235)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2228, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2228, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2263 = !DIDerivedType(tag: DW_TAG_member, scope: !2228, file: !143, line: 90, baseType: !2264, size: 16, offset: 112)
!2264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2228, file: !143, line: 90, size: 16, elements: !2265)
!2265 = !{!2266, !2271}
!2266 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !143, line: 91, baseType: !2267, size: 16)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2264, file: !143, line: 91, size: 16, elements: !2268)
!2268 = !{!2269, !2270}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2267, file: !143, line: 96, baseType: !195, size: 8)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2267, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2264, file: !143, line: 100, baseType: !199, size: 16)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2228, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2228, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2228, file: !143, line: 131, baseType: !2275, size: 192, offset: 192)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2276)
!2276 = !{!2277, !2278, !2284}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2275, file: !179, line: 245, baseType: !2234, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2275, file: !179, line: 246, baseType: !2279, size: 32, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2280)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 32)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{null, !2283}
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2275, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2225, file: !143, line: 250, baseType: !2286, size: 288, offset: 384)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2287)
!2287 = !{!2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2286, file: !216, line: 26, baseType: !118, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2286, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2286, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2286, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2286, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2286, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2286, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2286, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2286, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2225, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2225, file: !143, line: 256, baseType: !2256, size: 64, offset: 704)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2225, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2225, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2225, file: !143, line: 300, baseType: !2302, size: 96, offset: 1056)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2303)
!2303 = !{!2304, !2305, !2306}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2302, file: !143, line: 153, baseType: !22, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2302, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2302, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2225, file: !143, line: 325, baseType: !2308, size: 32, offset: 1152)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2310)
!2310 = !{!2311, !2317, !2318}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2309, file: !245, line: 5074, baseType: !2312, size: 96)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2313)
!2313 = !{!2314, !2315, !2316}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2312, file: !249, line: 57, baseType: !252, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2312, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2312, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2309, file: !245, line: 5075, baseType: !2256, size: 64, offset: 96)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2309, file: !245, line: 5076, baseType: !2319, size: 32, offset: 160)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2320)
!2320 = !{!2321}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2319, file: !259, line: 52, baseType: !22, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2225, file: !143, line: 343, baseType: !2323, size: 64, offset: 1184)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2324)
!2324 = !{!2325, !2326}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2323, file: !216, line: 63, baseType: !118, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2323, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2329 = !{!2219, !2330, !2333, !2335}
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2221, file: !2332, line: 404, type: !119, isLocal: true, isDefinition: true)
!2332 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2221, file: !2332, line: 405, type: !119, isLocal: true, isDefinition: true)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "pending_current", scope: !2221, file: !2332, line: 425, type: !2224, isLocal: true, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2339, file: !2369, line: 19, type: !2375, isLocal: true, isDefinition: true)
!2339 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2340, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2341, globals: !2366, splitDebugInlining: false, nameTableKind: None)
!2340 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2341 = !{!114, !113, !764, !118, !120, !119, !2342, !106, !116}
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 32)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2344)
!2344 = !{!2345, !2360, !2365}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2343, file: !179, line: 245, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2347)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2348)
!2348 = !{!2349, !2355}
!2349 = !DIDerivedType(tag: DW_TAG_member, scope: !2347, file: !153, line: 38, baseType: !2350, size: 32)
!2350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2347, file: !153, line: 38, size: 32, elements: !2351)
!2351 = !{!2352, !2354}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2350, file: !153, line: 39, baseType: !2353, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2350, file: !153, line: 40, baseType: !2353, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, scope: !2347, file: !153, line: 42, baseType: !2356, size: 32, offset: 32)
!2356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2347, file: !153, line: 42, size: 32, elements: !2357)
!2357 = !{!2358, !2359}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2356, file: !153, line: 43, baseType: !2353, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2356, file: !153, line: 44, baseType: !2353, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2343, file: !179, line: 246, baseType: !2361, size: 32, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2362)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{null, !2342}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2343, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2366 = !{!2367, !2337, !2370, !2372}
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2339, file: !2369, line: 15, type: !120, isLocal: true, isDefinition: true)
!2369 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2339, file: !2369, line: 25, type: !119, isLocal: true, isDefinition: true)
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2339, file: !2369, line: 17, type: !2374, isLocal: true, isDefinition: true)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2347)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2376)
!2376 = !{!2377}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2375, file: !259, line: 52, baseType: !22, size: 32)
!2378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2379, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2379 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2381 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2382 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2383, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2384, retainedTypes: !2404, splitDebugInlining: false, nameTableKind: None)
!2383 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2384 = !{!2385, !2393}
!2385 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2386, line: 69, baseType: !32, size: 32, elements: !2387)
!2386 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2387 = !{!2388, !2389, !2390, !2391, !2392}
!2388 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2389 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2390 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2391 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2392 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2393 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2386, line: 56, baseType: !32, size: 32, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403}
!2395 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2396 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2397 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2398 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2399 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2400 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2401 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2402 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2403 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2404 = !{!119, !2385, !2393, !2405, !196, !352, !2407, !2408, !186, !200, !278, !239, !113, !22, !32, !280, !2410, !2411, !105, !281, !117, !282, !2406, !2412, !2413, !2414, !2415}
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2386, line: 31, baseType: !2406)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !117)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !240, line: 329, baseType: !32)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2386, line: 32, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !121)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !240, line: 145, baseType: !119)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2417, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2417 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2419, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2419 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2422, splitDebugInlining: false, nameTableKind: None)
!2421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2422 = !{!278, !186, !119, !32}
!2423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2425, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2425 = !{!2426, !30}
!2426 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2427, line: 27, baseType: !32, size: 32, elements: !2428)
!2427 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2428 = !{!2429, !2430, !2431, !2432, !2433}
!2429 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2430 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2431 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2432 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2433 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2434 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2435, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2436, retainedTypes: !2437, splitDebugInlining: false, nameTableKind: None)
!2435 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2436 = !{!602, !2426, !30}
!2437 = !{!790, !2438, !113, !119, !764, !118, !185, !2455}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2441)
!2441 = !{!2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2440, file: !533, line: 413, baseType: !1584, size: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2440, file: !533, line: 414, baseType: !1586, size: 768, offset: 256)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2440, file: !533, line: 415, baseType: !1584, size: 256, offset: 1024)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2440, file: !533, line: 416, baseType: !1586, size: 768, offset: 1280)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2440, file: !533, line: 417, baseType: !1584, size: 256, offset: 2048)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2440, file: !533, line: 418, baseType: !1586, size: 768, offset: 2304)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2440, file: !533, line: 419, baseType: !1584, size: 256, offset: 3072)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2440, file: !533, line: 420, baseType: !1586, size: 768, offset: 3328)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2440, file: !533, line: 421, baseType: !1584, size: 256, offset: 4096)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2440, file: !533, line: 422, baseType: !1597, size: 1792, offset: 4352)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2440, file: !533, line: 423, baseType: !1601, size: 1920, offset: 6144)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2440, file: !533, line: 424, baseType: !1606, size: 20608, offset: 8064)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2440, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2457, file: !533, line: 447, baseType: !537, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2457, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2457, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2457, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2457, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2457, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2457, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2457, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2457, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2457, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2457, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2457, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2457, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2457, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2457, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2457, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2457, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2457, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2457, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2457, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2457, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2483, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2484, splitDebugInlining: false, nameTableKind: None)
!2483 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2484 = !{!113, !119, !22, !2485}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2487, file: !533, line: 447, baseType: !537, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2487, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2487, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2487, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2487, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2487, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2487, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2487, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2487, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2487, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2487, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2487, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2487, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2487, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2487, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2487, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2487, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2487, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2487, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2487, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2487, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2512, splitDebugInlining: false, nameTableKind: None)
!2511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2512 = !{!2513, !113, !119}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2515)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2516)
!2516 = !{!2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2515, file: !533, line: 447, baseType: !537, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2515, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2515, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2515, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2515, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2515, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2515, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2515, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2515, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2515, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2515, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2515, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2515, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2515, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2515, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2515, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2515, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2515, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2515, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2515, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2515, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2540, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2540 = !{!2541, !118, !113, !119}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !2544)
!2543 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2544 = !{!2545, !2550, !2555, !2560, !2565, !2570, !2575, !2580}
!2545 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 99, baseType: !2546, size: 32)
!2546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 99, size: 32, elements: !2547)
!2547 = !{!2548, !2549}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2546, file: !2543, line: 99, baseType: !118, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2546, file: !2543, line: 99, baseType: !118, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 100, baseType: !2551, size: 32, offset: 32)
!2551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 100, size: 32, elements: !2552)
!2552 = !{!2553, !2554}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2551, file: !2543, line: 100, baseType: !118, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2551, file: !2543, line: 100, baseType: !118, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 101, baseType: !2556, size: 32, offset: 64)
!2556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 101, size: 32, elements: !2557)
!2557 = !{!2558, !2559}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2556, file: !2543, line: 101, baseType: !118, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2556, file: !2543, line: 101, baseType: !118, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 102, baseType: !2561, size: 32, offset: 96)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 102, size: 32, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2561, file: !2543, line: 102, baseType: !118, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2561, file: !2543, line: 102, baseType: !118, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 103, baseType: !2566, size: 32, offset: 128)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 103, size: 32, elements: !2567)
!2567 = !{!2568, !2569}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2566, file: !2543, line: 103, baseType: !118, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2566, file: !2543, line: 103, baseType: !118, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 104, baseType: !2571, size: 32, offset: 160)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 104, size: 32, elements: !2572)
!2572 = !{!2573, !2574}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2571, file: !2543, line: 104, baseType: !118, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2571, file: !2543, line: 104, baseType: !118, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 105, baseType: !2576, size: 32, offset: 192)
!2576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 105, size: 32, elements: !2577)
!2577 = !{!2578, !2579}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2576, file: !2543, line: 105, baseType: !118, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2576, file: !2543, line: 105, baseType: !118, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2542, file: !2543, line: 106, baseType: !118, size: 32, offset: 224)
!2581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2425, retainedTypes: !2583, splitDebugInlining: false, nameTableKind: None)
!2582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2583 = !{!2584, !113, !119, !2609, !2652, !118}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2586, file: !533, line: 447, baseType: !537, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2586, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2586, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2586, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2586, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2586, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2586, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2586, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2586, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2586, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2586, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2586, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2586, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2586, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2586, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2586, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2586, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2586, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2586, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2586, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2586, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2543, line: 141, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2543, line: 97, size: 256, elements: !2612)
!2612 = !{!2613}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2611, file: !2543, line: 107, baseType: !2614, size: 256)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !2615)
!2615 = !{!2616, !2621, !2626, !2631, !2636, !2641, !2646, !2651}
!2616 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 99, baseType: !2617, size: 32)
!2617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 99, size: 32, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2617, file: !2543, line: 99, baseType: !118, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2617, file: !2543, line: 99, baseType: !118, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 100, baseType: !2622, size: 32, offset: 32)
!2622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 100, size: 32, elements: !2623)
!2623 = !{!2624, !2625}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2622, file: !2543, line: 100, baseType: !118, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2622, file: !2543, line: 100, baseType: !118, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 101, baseType: !2627, size: 32, offset: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 101, size: 32, elements: !2628)
!2628 = !{!2629, !2630}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2627, file: !2543, line: 101, baseType: !118, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2627, file: !2543, line: 101, baseType: !118, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 102, baseType: !2632, size: 32, offset: 96)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 102, size: 32, elements: !2633)
!2633 = !{!2634, !2635}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2632, file: !2543, line: 102, baseType: !118, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2632, file: !2543, line: 102, baseType: !118, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 103, baseType: !2637, size: 32, offset: 128)
!2637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 103, size: 32, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2637, file: !2543, line: 103, baseType: !118, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2637, file: !2543, line: 103, baseType: !118, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 104, baseType: !2642, size: 32, offset: 160)
!2642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 104, size: 32, elements: !2643)
!2643 = !{!2644, !2645}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2642, file: !2543, line: 104, baseType: !118, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2642, file: !2543, line: 104, baseType: !118, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 105, baseType: !2647, size: 32, offset: 192)
!2647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 105, size: 32, elements: !2648)
!2648 = !{!2649, !2650}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2647, file: !2543, line: 105, baseType: !118, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2647, file: !2543, line: 105, baseType: !118, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2614, file: !2543, line: 106, baseType: !118, size: 32, offset: 224)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!2653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !2655, splitDebugInlining: false, nameTableKind: None)
!2654 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2655 = !{!790, !764, !185, !118, !2656, !2673}
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2658, file: !533, line: 413, baseType: !1584, size: 256)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2658, file: !533, line: 414, baseType: !1586, size: 768, offset: 256)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2658, file: !533, line: 415, baseType: !1584, size: 256, offset: 1024)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2658, file: !533, line: 416, baseType: !1586, size: 768, offset: 1280)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2658, file: !533, line: 417, baseType: !1584, size: 256, offset: 2048)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2658, file: !533, line: 418, baseType: !1586, size: 768, offset: 2304)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2658, file: !533, line: 419, baseType: !1584, size: 256, offset: 3072)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2658, file: !533, line: 420, baseType: !1586, size: 768, offset: 3328)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2658, file: !533, line: 421, baseType: !1584, size: 256, offset: 4096)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2658, file: !533, line: 422, baseType: !1597, size: 1792, offset: 4352)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2658, file: !533, line: 423, baseType: !1601, size: 1920, offset: 6144)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2658, file: !533, line: 424, baseType: !1606, size: 20608, offset: 8064)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2658, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2676)
!2676 = !{!2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2675, file: !533, line: 447, baseType: !537, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2675, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2675, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2675, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2675, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2675, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2675, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2675, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2675, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2675, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2675, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2675, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2675, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2675, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2675, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2675, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2675, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2675, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2675, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2675, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2675, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2700, splitDebugInlining: false, nameTableKind: None)
!2699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2700 = !{!2701, !113, !119}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2704)
!2704 = !{!2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2703, file: !533, line: 447, baseType: !537, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2703, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2703, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2703, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2703, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2703, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2703, file: !533, line: 453, baseType: !1621, size: 96, offset: 192)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2703, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2703, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2703, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2703, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2703, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2703, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2703, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2703, file: !533, line: 461, baseType: !1632, size: 64, offset: 512)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2703, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2703, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2703, file: !533, line: 464, baseType: !1636, size: 128, offset: 640)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2703, file: !533, line: 465, baseType: !1638, size: 160, offset: 768)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2703, file: !533, line: 466, baseType: !1640, size: 160, offset: 928)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2703, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2728, splitDebugInlining: false, nameTableKind: None)
!2727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2728 = !{!107, !106, !239, !989, !2729, !186, !113}
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2733, splitDebugInlining: false, nameTableKind: None)
!2732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2733 = !{!119, !113}
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2736, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2736 = !{!2737}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 532, baseType: !2739)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 500, size: 1088, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2739, file: !310, line: 502, baseType: !314, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2739, file: !310, line: 503, baseType: !314, size: 32, offset: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2739, file: !310, line: 504, baseType: !314, size: 32, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2739, file: !310, line: 505, baseType: !314, size: 32, offset: 96)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2739, file: !310, line: 506, baseType: !314, size: 32, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2739, file: !310, line: 507, baseType: !314, size: 32, offset: 160)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2739, file: !310, line: 508, baseType: !314, size: 32, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2739, file: !310, line: 509, baseType: !118, size: 32, offset: 224)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2739, file: !310, line: 510, baseType: !314, size: 32, offset: 256)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2739, file: !310, line: 511, baseType: !314, size: 32, offset: 288)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2739, file: !310, line: 512, baseType: !858, size: 64, offset: 320)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2739, file: !310, line: 513, baseType: !314, size: 32, offset: 384)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2739, file: !310, line: 514, baseType: !314, size: 32, offset: 416)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2739, file: !310, line: 515, baseType: !314, size: 32, offset: 448)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2739, file: !310, line: 516, baseType: !118, size: 32, offset: 480)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2739, file: !310, line: 517, baseType: !314, size: 32, offset: 512)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2739, file: !310, line: 518, baseType: !314, size: 32, offset: 544)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2739, file: !310, line: 519, baseType: !858, size: 64, offset: 576)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2739, file: !310, line: 520, baseType: !314, size: 32, offset: 640)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2739, file: !310, line: 521, baseType: !314, size: 32, offset: 672)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2739, file: !310, line: 522, baseType: !314, size: 32, offset: 704)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2739, file: !310, line: 523, baseType: !118, size: 32, offset: 736)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2739, file: !310, line: 524, baseType: !314, size: 32, offset: 768)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2739, file: !310, line: 525, baseType: !314, size: 32, offset: 800)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2739, file: !310, line: 526, baseType: !858, size: 64, offset: 832)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2739, file: !310, line: 527, baseType: !314, size: 32, offset: 896)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2739, file: !310, line: 528, baseType: !314, size: 32, offset: 928)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2739, file: !310, line: 529, baseType: !858, size: 64, offset: 960)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2739, file: !310, line: 530, baseType: !314, size: 32, offset: 1024)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2739, file: !310, line: 531, baseType: !314, size: 32, offset: 1056)
!2771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2772 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2773 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2774, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2775, retainedTypes: !2791, splitDebugInlining: false, nameTableKind: None)
!2774 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2775 = !{!2776, !2783, !2787}
!2776 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2777, line: 38, baseType: !32, size: 32, elements: !2778)
!2777 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2778 = !{!2779, !2780, !2781, !2782}
!2779 = !DIEnumerator(name: "HAL_OK", value: 0)
!2780 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2781 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2782 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2783 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !831, line: 184, baseType: !32, size: 32, elements: !2784)
!2784 = !{!2785, !2786}
!2785 = !DIEnumerator(name: "RESET", value: 0)
!2786 = !DIEnumerator(name: "SET", value: 1)
!2787 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !831, line: 190, baseType: !32, size: 32, elements: !2788)
!2788 = !{!2789, !2790}
!2789 = !DIEnumerator(name: "DISABLE", value: 0)
!2790 = !DIEnumerator(name: "ENABLE", value: 1)
!2791 = !{!113, !2792, !185, !118, !1478, !2826, !2832, !2843, !199, !2844, !120}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 532, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 500, size: 1088, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2794, file: !310, line: 502, baseType: !314, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2794, file: !310, line: 503, baseType: !314, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2794, file: !310, line: 504, baseType: !314, size: 32, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2794, file: !310, line: 505, baseType: !314, size: 32, offset: 96)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2794, file: !310, line: 506, baseType: !314, size: 32, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2794, file: !310, line: 507, baseType: !314, size: 32, offset: 160)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2794, file: !310, line: 508, baseType: !314, size: 32, offset: 192)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2794, file: !310, line: 509, baseType: !118, size: 32, offset: 224)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2794, file: !310, line: 510, baseType: !314, size: 32, offset: 256)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2794, file: !310, line: 511, baseType: !314, size: 32, offset: 288)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2794, file: !310, line: 512, baseType: !858, size: 64, offset: 320)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2794, file: !310, line: 513, baseType: !314, size: 32, offset: 384)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2794, file: !310, line: 514, baseType: !314, size: 32, offset: 416)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2794, file: !310, line: 515, baseType: !314, size: 32, offset: 448)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2794, file: !310, line: 516, baseType: !118, size: 32, offset: 480)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2794, file: !310, line: 517, baseType: !314, size: 32, offset: 512)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2794, file: !310, line: 518, baseType: !314, size: 32, offset: 544)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2794, file: !310, line: 519, baseType: !858, size: 64, offset: 576)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2794, file: !310, line: 520, baseType: !314, size: 32, offset: 640)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2794, file: !310, line: 521, baseType: !314, size: 32, offset: 672)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2794, file: !310, line: 522, baseType: !314, size: 32, offset: 704)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2794, file: !310, line: 523, baseType: !118, size: 32, offset: 736)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2794, file: !310, line: 524, baseType: !314, size: 32, offset: 768)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2794, file: !310, line: 525, baseType: !314, size: 32, offset: 800)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2794, file: !310, line: 526, baseType: !858, size: 64, offset: 832)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2794, file: !310, line: 527, baseType: !314, size: 32, offset: 896)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2794, file: !310, line: 528, baseType: !314, size: 32, offset: 928)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2794, file: !310, line: 529, baseType: !858, size: 64, offset: 960)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2794, file: !310, line: 530, baseType: !314, size: 32, offset: 1024)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2794, file: !310, line: 531, baseType: !314, size: 32, offset: 1056)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 494, baseType: !2828)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 490, size: 64, elements: !2829)
!2829 = !{!2830, !2831}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2828, file: !310, line: 492, baseType: !314, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2828, file: !310, line: 493, baseType: !314, size: 32, offset: 32)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 369, baseType: !2834)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 360, size: 224, elements: !2835)
!2835 = !{!2836, !2837, !2838, !2839, !2840, !2841, !2842}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2834, file: !310, line: 362, baseType: !314, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2834, file: !310, line: 363, baseType: !314, size: 32, offset: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2834, file: !310, line: 364, baseType: !314, size: 32, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2834, file: !310, line: 365, baseType: !314, size: 32, offset: 96)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2834, file: !310, line: 366, baseType: !314, size: 32, offset: 128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2834, file: !310, line: 367, baseType: !314, size: 32, offset: 160)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2834, file: !310, line: 368, baseType: !314, size: 32, offset: 192)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 441, baseType: !2846)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 430, size: 320, elements: !2847)
!2847 = !{!2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2846, file: !310, line: 432, baseType: !314, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2846, file: !310, line: 433, baseType: !314, size: 32, offset: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2846, file: !310, line: 434, baseType: !314, size: 32, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2846, file: !310, line: 435, baseType: !314, size: 32, offset: 96)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2846, file: !310, line: 436, baseType: !314, size: 32, offset: 128)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2846, file: !310, line: 437, baseType: !314, size: 32, offset: 160)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2846, file: !310, line: 438, baseType: !314, size: 32, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2846, file: !310, line: 439, baseType: !314, size: 32, offset: 224)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2846, file: !310, line: 440, baseType: !1143, size: 64, offset: 256)
!2857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2858, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2859, retainedTypes: !2860, splitDebugInlining: false, nameTableKind: None)
!2858 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2859 = !{!830}
!2860 = !{!2861, !118, !2869, !2875, !2886}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !2863)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2863, file: !533, line: 766, baseType: !314, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2863, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2863, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2863, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 494, baseType: !2871)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 490, size: 64, elements: !2872)
!2872 = !{!2873, !2874}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2871, file: !310, line: 492, baseType: !314, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2871, file: !310, line: 493, baseType: !314, size: 32, offset: 32)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 369, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 360, size: 224, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2877, file: !310, line: 362, baseType: !314, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2877, file: !310, line: 363, baseType: !314, size: 32, offset: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2877, file: !310, line: 364, baseType: !314, size: 32, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2877, file: !310, line: 365, baseType: !314, size: 32, offset: 96)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2877, file: !310, line: 366, baseType: !314, size: 32, offset: 128)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2877, file: !310, line: 367, baseType: !314, size: 32, offset: 160)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2877, file: !310, line: 368, baseType: !314, size: 32, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 532, baseType: !2888)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 500, size: 1088, elements: !2889)
!2889 = !{!2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2888, file: !310, line: 502, baseType: !314, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2888, file: !310, line: 503, baseType: !314, size: 32, offset: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2888, file: !310, line: 504, baseType: !314, size: 32, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2888, file: !310, line: 505, baseType: !314, size: 32, offset: 96)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2888, file: !310, line: 506, baseType: !314, size: 32, offset: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2888, file: !310, line: 507, baseType: !314, size: 32, offset: 160)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2888, file: !310, line: 508, baseType: !314, size: 32, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2888, file: !310, line: 509, baseType: !118, size: 32, offset: 224)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2888, file: !310, line: 510, baseType: !314, size: 32, offset: 256)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2888, file: !310, line: 511, baseType: !314, size: 32, offset: 288)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2888, file: !310, line: 512, baseType: !858, size: 64, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2888, file: !310, line: 513, baseType: !314, size: 32, offset: 384)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2888, file: !310, line: 514, baseType: !314, size: 32, offset: 416)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2888, file: !310, line: 515, baseType: !314, size: 32, offset: 448)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2888, file: !310, line: 516, baseType: !118, size: 32, offset: 480)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2888, file: !310, line: 517, baseType: !314, size: 32, offset: 512)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2888, file: !310, line: 518, baseType: !314, size: 32, offset: 544)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2888, file: !310, line: 519, baseType: !858, size: 64, offset: 576)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2888, file: !310, line: 520, baseType: !314, size: 32, offset: 640)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2888, file: !310, line: 521, baseType: !314, size: 32, offset: 672)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2888, file: !310, line: 522, baseType: !314, size: 32, offset: 704)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2888, file: !310, line: 523, baseType: !118, size: 32, offset: 736)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2888, file: !310, line: 524, baseType: !314, size: 32, offset: 768)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2888, file: !310, line: 525, baseType: !314, size: 32, offset: 800)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2888, file: !310, line: 526, baseType: !858, size: 64, offset: 832)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2888, file: !310, line: 527, baseType: !314, size: 32, offset: 896)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2888, file: !310, line: 528, baseType: !314, size: 32, offset: 928)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2888, file: !310, line: 529, baseType: !858, size: 64, offset: 960)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2888, file: !310, line: 530, baseType: !314, size: 32, offset: 1024)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2888, file: !310, line: 531, baseType: !314, size: 32, offset: 1056)
!2920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2922, splitDebugInlining: false, nameTableKind: None)
!2921 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2922 = !{!113, !239}
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2925, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2925 = !{!2926, !2933, !2426, !30}
!2926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2927, line: 14, baseType: !32, size: 32, elements: !2928)
!2927 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2928 = !{!2929, !2930, !2931, !2932}
!2929 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2930 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2931 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2932 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2927, line: 42, baseType: !32, size: 32, elements: !2934)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940}
!2935 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2936 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2937 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2938 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2939 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2940 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2943 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2944, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2945, splitDebugInlining: false, nameTableKind: None)
!2944 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2945 = !{!22, !113, !119}
!2946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!2948 = !{!"Ubuntu clang version 14.0.6"}
!2949 = !{i32 7, !"Dwarf Version", i32 4}
!2950 = !{i32 2, !"Debug Info Version", i32 3}
!2951 = !{i32 1, !"wchar_size", i32 4}
!2952 = !{i32 1, !"min_enum_size", i32 4}
!2953 = !{i32 1, !"branch-target-enforcement", i32 0}
!2954 = !{i32 1, !"sign-return-address", i32 0}
!2955 = !{i32 1, !"sign-return-address-all", i32 0}
!2956 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2957 = !{i32 7, !"frame-pointer", i32 2}
!2958 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2959, file: !2959, line: 26, type: !2960, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !2032)
!2959 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2960 = !DISubroutineType(types: !2961)
!2961 = !{null}
!2962 = !DILocation(line: 28, column: 1, scope: !2958)
!2963 = !{i64 2155128993, i64 2155129013, i64 2155129076}
!2964 = !DILocation(line: 29, column: 1, scope: !2958)
!2965 = !{i64 2155129408, i64 2155129428, i64 2155129491}
!2966 = !DILocation(line: 30, column: 1, scope: !2958)
!2967 = !{i64 2155129827, i64 2155129847, i64 2155129910}
!2968 = !DILocation(line: 31, column: 1, scope: !2958)
!2969 = !{i64 2155130246, i64 2155130266, i64 2155130329}
!2970 = !DILocation(line: 33, column: 1, scope: !2958)
!2971 = !{i64 2155130538, i64 2155130558, i64 2155130621}
!2972 = !DILocation(line: 35, column: 1, scope: !2958)
!2973 = !{i64 2155130863, i64 2155130883, i64 2155130946}
!2974 = !DILocation(line: 50, column: 1, scope: !2958)
!2975 = !{i64 2155131290, i64 2155131310, i64 2155131373}
!2976 = !DILocation(line: 54, column: 1, scope: !2958)
!2977 = !{i64 2155131729, i64 2155131749, i64 2155131812}
!2978 = !DILocation(line: 61, column: 1, scope: !2958)
!2979 = !{i64 2155132046, i64 2155132066, i64 2155132129}
!2980 = !DILocation(line: 63, column: 1, scope: !2958)
!2981 = !{i64 2155132426, i64 2155132446, i64 2155132509}
!2982 = !DILocation(line: 64, column: 1, scope: !2958)
!2983 = !{i64 2155132948, i64 2155132968, i64 2155133031}
!2984 = !DILocation(line: 65, column: 1, scope: !2958)
!2985 = !{i64 2155133446, i64 2155133466, i64 2155133529}
!2986 = !DILocation(line: 66, column: 1, scope: !2958)
!2987 = !{i64 2155133928, i64 2155133948, i64 2155134011}
!2988 = !DILocation(line: 67, column: 1, scope: !2958)
!2989 = !{i64 2155134435, i64 2155134455, i64 2155134518}
!2990 = !DILocation(line: 68, column: 1, scope: !2958)
!2991 = !{i64 2155134923, i64 2155134943, i64 2155135006}
!2992 = !DILocation(line: 70, column: 1, scope: !2958)
!2993 = !{i64 2155139452, i64 2155139472, i64 2155139535}
!2994 = !DILocation(line: 71, column: 1, scope: !2958)
!2995 = !{i64 2155139894, i64 2155139914, i64 2155139977}
!2996 = !DILocation(line: 72, column: 1, scope: !2958)
!2997 = !{i64 2155140352, i64 2155140372, i64 2155140435}
!2998 = !DILocation(line: 79, column: 1, scope: !2958)
!2999 = !{i64 2155140806, i64 2155140826, i64 2155140889}
!3000 = !DILocation(line: 80, column: 1, scope: !2958)
!3001 = !{i64 2155141317, i64 2155141337, i64 2155141400}
!3002 = !DILocation(line: 82, column: 1, scope: !2958)
!3003 = !{i64 2155141808, i64 2155141828, i64 2155141891}
!3004 = !DILocation(line: 97, column: 1, scope: !2958)
!3005 = !{i64 2155142145, i64 2155142165, i64 2155142228}
!3006 = !DILocation(line: 99, column: 1, scope: !2958)
!3007 = !{i64 2155142363, i64 2155142383, i64 2155142446}
!3008 = !DILocation(line: 102, column: 1, scope: !2958)
!3009 = !{i64 2155142620, i64 2155142640, i64 2155142703}
!3010 = !DILocation(line: 105, column: 1, scope: !2958)
!3011 = !{i64 2155142860, i64 2155142880, i64 2155142943}
!3012 = !DILocation(line: 115, column: 1, scope: !2958)
!3013 = !{i64 2155143199, i64 2155143219, i64 2155143282}
!3014 = !DILocation(line: 118, column: 1, scope: !2958)
!3015 = !{i64 2155143543, i64 2155143563, i64 2155143626}
!3016 = !DILocation(line: 32, column: 1, scope: !3017)
!3017 = !DILexicalBlockFile(scope: !2958, file: !3018, discriminator: 0)
!3018 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3019 = !{i64 2155143899, i64 2155143919, i64 2155143982}
!3020 = !DILocation(line: 33, column: 1, scope: !3017)
!3021 = !{i64 2155144411, i64 2155144431, i64 2155144494}
!3022 = !DILocation(line: 53, column: 1, scope: !3017)
!3023 = !{i64 2155144919, i64 2155144939, i64 2155145002}
!3024 = !DILocation(line: 54, column: 1, scope: !3017)
!3025 = !{i64 2155145337, i64 2155145357, i64 2155145420}
!3026 = !DILocation(line: 55, column: 1, scope: !3017)
!3027 = !{i64 2155145755, i64 2155145775, i64 2155145838}
!3028 = !DILocation(line: 56, column: 1, scope: !3017)
!3029 = !{i64 2155146173, i64 2155146193, i64 2155146256}
!3030 = !DILocation(line: 57, column: 1, scope: !3017)
!3031 = !{i64 2155146591, i64 2155146611, i64 2155146674}
!3032 = !DILocation(line: 58, column: 1, scope: !3017)
!3033 = !{i64 2155147009, i64 2155147029, i64 2155147092}
!3034 = !DILocation(line: 59, column: 1, scope: !3017)
!3035 = !{i64 2155147427, i64 2155147447, i64 2155147510}
!3036 = !DILocation(line: 60, column: 1, scope: !3017)
!3037 = !{i64 2155147851, i64 2155147871, i64 2155147934}
!3038 = !DILocation(line: 61, column: 1, scope: !3017)
!3039 = !{i64 2155148168, i64 2155148188, i64 2155148251}
!3040 = !DILocation(line: 70, column: 1, scope: !3017)
!3041 = !{i64 2155148397, i64 2155148417, i64 2155148480}
!3042 = !DILocation(line: 72, column: 1, scope: !3017)
!3043 = !{i64 2155148729, i64 2155148749, i64 2155148812}
!3044 = !DILocation(line: 73, column: 1, scope: !3017)
!3045 = !{i64 2155153240, i64 2155153260, i64 2155153323}
!3046 = !DILocation(line: 74, column: 1, scope: !3017)
!3047 = !{i64 2155153690, i64 2155153710, i64 2155153773}
!3048 = !DILocation(line: 75, column: 1, scope: !3017)
!3049 = !{i64 2155154140, i64 2155154160, i64 2155154223}
!3050 = !DILocation(line: 76, column: 1, scope: !3017)
!3051 = !{i64 2155154590, i64 2155154610, i64 2155154673}
!3052 = !DILocation(line: 77, column: 1, scope: !3017)
!3053 = !{i64 2155155040, i64 2155155060, i64 2155155123}
!3054 = !DILocation(line: 78, column: 1, scope: !3017)
!3055 = !{i64 2155155490, i64 2155155510, i64 2155155573}
!3056 = !DILocation(line: 79, column: 1, scope: !3017)
!3057 = !{i64 2155155940, i64 2155155960, i64 2155156023}
!3058 = !DILocation(line: 80, column: 1, scope: !3017)
!3059 = !{i64 2155156393, i64 2155156413, i64 2155156476}
!3060 = !DILocation(line: 84, column: 1, scope: !3017)
!3061 = !{i64 2155156725, i64 2155156745, i64 2155156808}
!3062 = !DILocation(line: 91, column: 1, scope: !3017)
!3063 = !{i64 2155157122, i64 2155157142, i64 2155157205}
!3064 = !DILocation(line: 93, column: 1, scope: !3017)
!3065 = !{i64 2155157489, i64 2155157509, i64 2155157572}
!3066 = !DILocation(line: 106, column: 1, scope: !3017)
!3067 = !{i64 2155157759, i64 2155157779, i64 2155157842}
!3068 = !DILocation(line: 11, column: 1, scope: !3069)
!3069 = !DILexicalBlockFile(scope: !2958, file: !3070, discriminator: 0)
!3070 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3071 = distinct !DISubprogram(name: "test_thread", scope: !125, file: !125, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3072)
!3072 = !{!3073, !3074, !3075, !3076, !3077, !3078, !3082, !3083, !3084, !3085, !3089}
!3073 = !DILocalVariable(name: "arg1", arg: 1, scope: !3071, file: !125, line: 33, type: !113)
!3074 = !DILocalVariable(name: "arg2", arg: 2, scope: !3071, file: !125, line: 33, type: !113)
!3075 = !DILocalVariable(name: "arg3", arg: 3, scope: !3071, file: !125, line: 33, type: !113)
!3076 = !DILocalVariable(name: "counter", scope: !3071, file: !125, line: 35, type: !102)
!3077 = !DILocalVariable(name: "buffer", scope: !3071, file: !125, line: 36, type: !106)
!3078 = !DILocalVariable(name: "array", scope: !3071, file: !125, line: 52, type: !3079)
!3079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 26912, elements: !3080)
!3080 = !{!3081}
!3081 = !DISubrange(count: 841)
!3082 = !DILocalVariable(name: "carry", scope: !3071, file: !125, line: 53, type: !119)
!3083 = !DILocalVariable(name: "i", scope: !3071, file: !125, line: 54, type: !119)
!3084 = !DILocalVariable(name: "j", scope: !3071, file: !125, line: 54, type: !119)
!3085 = !DILocalVariable(name: "sum", scope: !3086, file: !125, line: 61, type: !119)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !125, line: 60, column: 35)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !125, line: 60, column: 2)
!3088 = distinct !DILexicalBlock(scope: !3071, file: !125, line: 60, column: 2)
!3089 = !DILocalVariable(name: "value", scope: !3086, file: !125, line: 61, type: !119)
!3090 = !DILocation(line: 0, scope: !3071)
!3091 = !DILocation(line: 52, column: 2, scope: !3071)
!3092 = !DILocation(line: 52, column: 6, scope: !3071)
!3093 = !DILocation(line: 56, column: 2, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3071, file: !125, line: 56, column: 2)
!3095 = !DILocation(line: 57, column: 3, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3097, file: !125, line: 56, column: 31)
!3097 = distinct !DILexicalBlock(scope: !3094, file: !125, line: 56, column: 2)
!3098 = !DILocation(line: 57, column: 12, scope: !3096)
!3099 = !DILocation(line: 56, column: 27, scope: !3097)
!3100 = !DILocation(line: 56, column: 16, scope: !3097)
!3101 = distinct !{!3101, !3093, !3102}
!3102 = !DILocation(line: 58, column: 2, scope: !3094)
!3103 = !DILocation(line: 0, scope: !3086)
!3104 = !DILocation(line: 63, column: 3, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3086, file: !125, line: 63, column: 3)
!3106 = !DILocation(line: 64, column: 14, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3108, file: !125, line: 63, column: 27)
!3108 = distinct !DILexicalBlock(scope: !3105, file: !125, line: 63, column: 3)
!3109 = !DILocation(line: 64, column: 31, scope: !3107)
!3110 = !DILocation(line: 64, column: 29, scope: !3107)
!3111 = !DILocation(line: 64, column: 18, scope: !3107)
!3112 = !DILocation(line: 65, column: 24, scope: !3107)
!3113 = !DILocation(line: 65, column: 28, scope: !3107)
!3114 = !DILocation(line: 66, column: 8, scope: !3107)
!3115 = !DILocation(line: 65, column: 13, scope: !3107)
!3116 = !DILocation(line: 63, column: 22, scope: !3108)
!3117 = !DILocation(line: 63, column: 17, scope: !3108)
!3118 = distinct !{!3118, !3104, !3119}
!3119 = !DILocation(line: 67, column: 3, scope: !3105)
!3120 = !DILocation(line: 69, column: 23, scope: !3086)
!3121 = !DILocation(line: 69, column: 17, scope: !3086)
!3122 = !DILocation(line: 73, column: 3, scope: !3086)
!3123 = !DILocation(line: 74, column: 10, scope: !3086)
!3124 = !DILocation(line: 60, column: 28, scope: !3087)
!3125 = !DILocation(line: 60, column: 21, scope: !3087)
!3126 = !DILocation(line: 60, column: 2, scope: !3088)
!3127 = distinct !{!3127, !3126, !3128}
!3128 = !DILocation(line: 75, column: 2, scope: !3088)
!3129 = !DILocation(line: 35, column: 22, scope: !3071)
!3130 = !DILocation(line: 77, column: 2, scope: !3071)
!3131 = !DILocation(line: 78, column: 1, scope: !3071)
!3132 = distinct !DISubprogram(name: "atomic_dec", scope: !3133, file: !3133, line: 141, type: !3134, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3137)
!3133 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3134 = !DISubroutineType(types: !3135)
!3135 = !{!3136, !102}
!3136 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !104, line: 23, baseType: !103)
!3137 = !{!3138}
!3138 = !DILocalVariable(name: "target", arg: 1, scope: !3132, file: !3133, line: 141, type: !102)
!3139 = !DILocation(line: 0, scope: !3132)
!3140 = !DILocation(line: 143, column: 9, scope: !3132)
!3141 = !DILocation(line: 143, column: 2, scope: !3132)
!3142 = distinct !DISubprogram(name: "atomic_sub", scope: !3133, file: !3133, line: 105, type: !3143, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3145)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{!3136, !102, !3136}
!3145 = !{!3146, !3147}
!3146 = !DILocalVariable(name: "target", arg: 1, scope: !3142, file: !3133, line: 105, type: !102)
!3147 = !DILocalVariable(name: "value", arg: 2, scope: !3142, file: !3133, line: 105, type: !3136)
!3148 = !DILocation(line: 0, scope: !3142)
!3149 = !DILocation(line: 107, column: 9, scope: !3142)
!3150 = !DILocation(line: 107, column: 2, scope: !3142)
!3151 = distinct !DISubprogram(name: "main", scope: !125, file: !125, line: 80, type: !2960, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3152)
!3152 = !{!3153, !3154, !3155, !3156, !3157}
!3153 = !DILocalVariable(name: "start_time", scope: !3151, file: !125, line: 82, type: !118)
!3154 = !DILocalVariable(name: "stop_time", scope: !3151, file: !125, line: 82, type: !118)
!3155 = !DILocalVariable(name: "cycles_spent", scope: !3151, file: !125, line: 82, type: !118)
!3156 = !DILocalVariable(name: "nanoseconds_spent", scope: !3151, file: !125, line: 82, type: !118)
!3157 = !DILocalVariable(name: "i", scope: !3151, file: !125, line: 83, type: !119)
!3158 = !DILocation(line: 85, column: 2, scope: !3151)
!3159 = !DILocation(line: 89, column: 15, scope: !3151)
!3160 = !DILocation(line: 0, scope: !3151)
!3161 = !DILocation(line: 91, column: 2, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3151, file: !125, line: 91, column: 2)
!3163 = !DILocation(line: 99, column: 9, scope: !3151)
!3164 = !DILocation(line: 99, column: 2, scope: !3151)
!3165 = !DILocation(line: 92, column: 20, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !125, line: 91, column: 36)
!3167 = distinct !DILexicalBlock(scope: !3162, file: !125, line: 91, column: 2)
!3168 = !DILocation(line: 92, column: 32, scope: !3166)
!3169 = !DILocation(line: 94, column: 37, scope: !3166)
!3170 = !DILocation(line: 92, column: 3, scope: !3166)
!3171 = !DILocation(line: 91, column: 32, scope: !3167)
!3172 = !DILocation(line: 91, column: 16, scope: !3167)
!3173 = distinct !{!3173, !3161, !3174}
!3174 = !DILocation(line: 96, column: 2, scope: !3162)
!3175 = !DILocation(line: 100, column: 3, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3151, file: !125, line: 99, column: 18)
!3177 = distinct !{!3177, !3164, !3178}
!3178 = !DILocation(line: 101, column: 2, scope: !3151)
!3179 = !DILocation(line: 104, column: 14, scope: !3151)
!3180 = !DILocation(line: 109, column: 2, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3151, file: !125, line: 109, column: 2)
!3182 = !DILocation(line: 110, column: 56, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3184, file: !125, line: 109, column: 36)
!3184 = distinct !DILexicalBlock(scope: !3181, file: !125, line: 109, column: 2)
!3185 = !DILocation(line: 110, column: 3, scope: !3183)
!3186 = !DILocation(line: 109, column: 32, scope: !3184)
!3187 = !DILocation(line: 109, column: 16, scope: !3184)
!3188 = distinct !{!3188, !3180, !3189}
!3189 = !DILocation(line: 111, column: 2, scope: !3181)
!3190 = !DILocation(line: 106, column: 27, scope: !3151)
!3191 = !DILocation(line: 107, column: 52, scope: !3151)
!3192 = !DILocation(line: 107, column: 32, scope: !3151)
!3193 = !DILocation(line: 107, column: 22, scope: !3151)
!3194 = !DILocation(line: 114, column: 45, scope: !3151)
!3195 = !DILocation(line: 113, column: 2, scope: !3151)
!3196 = !DILocation(line: 115, column: 1, scope: !3151)
!3197 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3198, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2032)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!118}
!3200 = !DILocation(line: 1677, column: 9, scope: !3197)
!3201 = !DILocation(line: 1677, column: 2, scope: !3197)
!3202 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3203, file: !3203, line: 403, type: !3204, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3206)
!3203 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!120, !120}
!3206 = !{!3207}
!3207 = !DILocalVariable(name: "t", arg: 1, scope: !3202, file: !3203, line: 403, type: !120)
!3208 = !DILocation(line: 0, scope: !3202)
!3209 = !DILocation(line: 406, column: 2, scope: !3202)
!3210 = distinct !DISubprogram(name: "k_thread_create", scope: !3211, file: !3211, line: 24, type: !3212, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3222)
!3211 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!3212 = !DISubroutineType(types: !3213)
!3213 = !{!3214, !3215, !3216, !239, !108, !113, !113, !113, !119, !118, !3218}
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !3215)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !127)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !3219)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !3220)
!3220 = !{!3221}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3219, file: !115, line: 66, baseType: !114, size: 64)
!3222 = !{!3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232}
!3223 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3210, file: !3211, line: 24, type: !3215)
!3224 = !DILocalVariable(name: "stack", arg: 2, scope: !3210, file: !3211, line: 24, type: !3216)
!3225 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3210, file: !3211, line: 24, type: !239)
!3226 = !DILocalVariable(name: "entry", arg: 4, scope: !3210, file: !3211, line: 24, type: !108)
!3227 = !DILocalVariable(name: "p1", arg: 5, scope: !3210, file: !3211, line: 24, type: !113)
!3228 = !DILocalVariable(name: "p2", arg: 6, scope: !3210, file: !3211, line: 24, type: !113)
!3229 = !DILocalVariable(name: "p3", arg: 7, scope: !3210, file: !3211, line: 24, type: !113)
!3230 = !DILocalVariable(name: "prio", arg: 8, scope: !3210, file: !3211, line: 24, type: !119)
!3231 = !DILocalVariable(name: "options", arg: 9, scope: !3210, file: !3211, line: 24, type: !118)
!3232 = !DILocalVariable(name: "delay", arg: 10, scope: !3210, file: !3211, line: 24, type: !3218)
!3233 = !DILocation(line: 0, scope: !3210)
!3234 = !DILocation(line: 49, column: 2, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3210, file: !3211, line: 49, column: 2)
!3236 = !{i64 2154847577}
!3237 = !DILocation(line: 50, column: 9, scope: !3210)
!3238 = !DILocation(line: 50, column: 2, scope: !3210)
!3239 = distinct !DISubprogram(name: "k_sleep", scope: !3211, file: !3211, line: 91, type: !3240, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3242)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{!764, !3218}
!3242 = !{!3243}
!3243 = !DILocalVariable(name: "timeout", arg: 1, scope: !3239, file: !3211, line: 91, type: !3218)
!3244 = !DILocation(line: 0, scope: !3239)
!3245 = !DILocation(line: 99, column: 2, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3239, file: !3211, line: 99, column: 2)
!3247 = !{i64 2154847781}
!3248 = !DILocation(line: 100, column: 9, scope: !3239)
!3249 = !DILocation(line: 100, column: 2, scope: !3239)
!3250 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !3203, file: !3203, line: 935, type: !3204, scopeLine: 936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3251)
!3251 = !{!3252}
!3252 = !DILocalVariable(name: "t", arg: 1, scope: !3250, file: !3203, line: 935, type: !120)
!3253 = !DILocation(line: 0, scope: !3250)
!3254 = !DILocalVariable(name: "t", arg: 1, scope: !3255, file: !3203, line: 102, type: !120)
!3255 = distinct !DISubprogram(name: "z_tmcvt", scope: !3203, file: !3203, line: 102, type: !3256, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3258)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!120, !120, !118, !118, !345, !345, !345, !345}
!3258 = !{!3254, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268}
!3259 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3255, file: !3203, line: 102, type: !118)
!3260 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3255, file: !3203, line: 103, type: !118)
!3261 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3255, file: !3203, line: 103, type: !345)
!3262 = !DILocalVariable(name: "result32", arg: 5, scope: !3255, file: !3203, line: 104, type: !345)
!3263 = !DILocalVariable(name: "round_up", arg: 6, scope: !3255, file: !3203, line: 104, type: !345)
!3264 = !DILocalVariable(name: "round_off", arg: 7, scope: !3255, file: !3203, line: 105, type: !345)
!3265 = !DILocalVariable(name: "mul_ratio", scope: !3255, file: !3203, line: 107, type: !345)
!3266 = !DILocalVariable(name: "div_ratio", scope: !3255, file: !3203, line: 109, type: !345)
!3267 = !DILocalVariable(name: "off", scope: !3255, file: !3203, line: 116, type: !120)
!3268 = !DILocalVariable(name: "rdivisor", scope: !3269, file: !3203, line: 119, type: !118)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3203, line: 118, column: 18)
!3270 = distinct !DILexicalBlock(scope: !3255, file: !3203, line: 118, column: 6)
!3271 = !DILocation(line: 0, scope: !3255, inlinedAt: !3272)
!3272 = distinct !DILocation(line: 938, column: 9, scope: !3250)
!3273 = !DILocation(line: 161, column: 14, scope: !3274, inlinedAt: !3272)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !3203, line: 157, column: 10)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !3203, line: 150, column: 14)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !3203, line: 148, column: 7)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3203, line: 147, column: 9)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !3203, line: 141, column: 13)
!3279 = distinct !DILexicalBlock(scope: !3255, file: !3203, line: 134, column: 6)
!3280 = !DILocation(line: 161, column: 25, scope: !3274, inlinedAt: !3272)
!3281 = !DILocation(line: 161, column: 50, scope: !3274, inlinedAt: !3272)
!3282 = !DILocation(line: 161, column: 65, scope: !3274, inlinedAt: !3272)
!3283 = !DILocation(line: 161, column: 33, scope: !3274, inlinedAt: !3272)
!3284 = !DILocation(line: 938, column: 2, scope: !3250)
!3285 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3286, file: !3286, line: 24, type: !3198, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2032)
!3286 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3287 = !DILocation(line: 26, column: 9, scope: !3285)
!3288 = !DILocation(line: 26, column: 2, scope: !3285)
!3289 = distinct !DISubprogram(name: "cbvprintf_package", scope: !286, file: !286, line: 233, type: !3290, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3299)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!119, !113, !239, !118, !278, !3292}
!3292 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3293, line: 99, baseType: !3294)
!3293 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3293, line: 40, baseType: !3295)
!3295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3296)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3297)
!3297 = !{!3298}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3296, file: !286, line: 18, baseType: !113, size: 32)
!3299 = !{!3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3335, !3344, !3347, !3348, !3351, !3354, !3357, !3360, !3366}
!3300 = !DILocalVariable(name: "packaged", arg: 1, scope: !3289, file: !286, line: 233, type: !113)
!3301 = !DILocalVariable(name: "len", arg: 2, scope: !3289, file: !286, line: 233, type: !239)
!3302 = !DILocalVariable(name: "flags", arg: 3, scope: !3289, file: !286, line: 233, type: !118)
!3303 = !DILocalVariable(name: "fmt", arg: 4, scope: !3289, file: !286, line: 234, type: !278)
!3304 = !DILocalVariable(name: "ap", arg: 5, scope: !3289, file: !286, line: 234, type: !3292)
!3305 = !DILocalVariable(name: "buf0", scope: !3289, file: !286, line: 247, type: !284)
!3306 = !DILocalVariable(name: "buf", scope: !3289, file: !286, line: 248, type: !284)
!3307 = !DILocalVariable(name: "size", scope: !3289, file: !286, line: 249, type: !32)
!3308 = !DILocalVariable(name: "align", scope: !3289, file: !286, line: 250, type: !32)
!3309 = !DILocalVariable(name: "str_ptr_pos", scope: !3289, file: !286, line: 251, type: !3310)
!3310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !267)
!3311 = !DILocalVariable(name: "str_ptr_arg", scope: !3289, file: !286, line: 252, type: !3310)
!3312 = !DILocalVariable(name: "s_idx", scope: !3289, file: !286, line: 253, type: !32)
!3313 = !DILocalVariable(name: "s_rw_cnt", scope: !3289, file: !286, line: 254, type: !32)
!3314 = !DILocalVariable(name: "s_ro_cnt", scope: !3289, file: !286, line: 255, type: !32)
!3315 = !DILocalVariable(name: "arg_idx", scope: !3289, file: !286, line: 256, type: !119)
!3316 = !DILocalVariable(name: "i", scope: !3289, file: !286, line: 257, type: !32)
!3317 = !DILocalVariable(name: "s", scope: !3289, file: !286, line: 258, type: !278)
!3318 = !DILocalVariable(name: "parsing", scope: !3289, file: !286, line: 259, type: !345)
!3319 = !DILocalVariable(name: "rws_pos_en", scope: !3289, file: !286, line: 263, type: !345)
!3320 = !DILocalVariable(name: "fros_cnt", scope: !3289, file: !286, line: 268, type: !119)
!3321 = !DILocalVariable(name: "is_str_arg", scope: !3289, file: !286, line: 269, type: !345)
!3322 = !DILocalVariable(name: "pkg_hdr", scope: !3289, file: !286, line: 270, type: !3323)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 32)
!3324 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3325, line: 78, size: 32, elements: !3326)
!3325 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3326 = !{!3327, !3334}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3324, file: !3325, line: 80, baseType: !3328, size: 32)
!3328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3325, line: 45, size: 32, elements: !3329)
!3329 = !{!3330, !3331, !3332, !3333}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3328, file: !3325, line: 47, baseType: !185, size: 8)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3328, file: !3325, line: 50, baseType: !185, size: 8, offset: 8)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3328, file: !3325, line: 53, baseType: !185, size: 8, offset: 16)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3328, file: !3325, line: 56, baseType: !185, size: 8, offset: 24)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3324, file: !3325, line: 82, baseType: !113, size: 32)
!3335 = !DILocalVariable(name: "v", scope: !3336, file: !286, line: 567, type: !3340)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !286, line: 562, column: 14)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !286, line: 481, column: 18)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !286, line: 466, column: 3)
!3339 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 343, column: 15)
!3340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3289, file: !286, line: 567, size: 64, elements: !3341)
!3341 = !{!3342, !3343}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3340, file: !286, line: 567, baseType: !276, size: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3340, file: !286, line: 567, baseType: !274, size: 64)
!3344 = !DILocalVariable(name: "is_ro", scope: !3345, file: !286, line: 620, type: !345)
!3345 = distinct !DILexicalBlock(scope: !3346, file: !286, line: 613, column: 19)
!3346 = distinct !DILexicalBlock(scope: !3339, file: !286, line: 613, column: 7)
!3347 = !DILocalVariable(name: "do_ro", scope: !3345, file: !286, line: 621, type: !345)
!3348 = !DILocalVariable(name: "s_ptr_idx", scope: !3349, file: !286, line: 626, type: !118)
!3349 = distinct !DILexicalBlock(scope: !3350, file: !286, line: 625, column: 11)
!3350 = distinct !DILexicalBlock(scope: !3345, file: !286, line: 623, column: 8)
!3351 = !DILocalVariable(name: "v", scope: !3352, file: !286, line: 684, type: !119)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !286, line: 683, column: 35)
!3353 = distinct !DILexicalBlock(scope: !3346, file: !286, line: 683, column: 14)
!3354 = !DILocalVariable(name: "v", scope: !3355, file: !286, line: 691, type: !105)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !286, line: 690, column: 36)
!3356 = distinct !DILexicalBlock(scope: !3353, file: !286, line: 690, column: 14)
!3357 = !DILocalVariable(name: "v", scope: !3358, file: !286, line: 698, type: !117)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !286, line: 697, column: 41)
!3359 = distinct !DILexicalBlock(scope: !3356, file: !286, line: 697, column: 14)
!3360 = !DILocalVariable(name: "pos", scope: !3361, file: !286, line: 762, type: !185)
!3361 = distinct !DILexicalBlock(scope: !3362, file: !286, line: 757, column: 31)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !286, line: 757, column: 3)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !286, line: 757, column: 3)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !286, line: 756, column: 16)
!3365 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 756, column: 6)
!3366 = !DILabel(scope: !3345, name: "process_string", file: !286, line: 615)
!3367 = !DILocation(line: 0, scope: !3289)
!3368 = !DILocation(line: 251, column: 2, scope: !3289)
!3369 = !DILocation(line: 251, column: 10, scope: !3289)
!3370 = !DILocation(line: 252, column: 2, scope: !3289)
!3371 = !DILocation(line: 252, column: 10, scope: !3289)
!3372 = !DILocation(line: 263, column: 29, scope: !3289)
!3373 = !DILocation(line: 263, column: 21, scope: !3289)
!3374 = !DILocation(line: 268, column: 21, scope: !3289)
!3375 = !DILocation(line: 268, column: 19, scope: !3289)
!3376 = !DILocation(line: 273, column: 6, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 273, column: 6)
!3378 = !DILocation(line: 273, column: 26, scope: !3377)
!3379 = !DILocation(line: 273, column: 6, scope: !3289)
!3380 = !DILocation(line: 297, column: 6, scope: !3289)
!3381 = !DILocation(line: 305, column: 11, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 305, column: 6)
!3383 = !DILocation(line: 305, column: 6, scope: !3289)
!3384 = !DILocation(line: 327, column: 19, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 327, column: 6)
!3386 = !DILocation(line: 327, column: 22, scope: !3385)
!3387 = !DILocation(line: 327, column: 33, scope: !3385)
!3388 = !DILocation(line: 327, column: 50, scope: !3385)
!3389 = !DILocation(line: 327, column: 6, scope: !3289)
!3390 = !DILocation(line: 338, column: 9, scope: !3289)
!3391 = !DILocation(line: 341, column: 2, scope: !3289)
!3392 = !DILocation(line: 472, column: 8, scope: !3338)
!3393 = !DILocation(line: 473, column: 14, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !286, line: 473, column: 9)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !286, line: 472, column: 18)
!3396 = distinct !DILexicalBlock(scope: !3338, file: !286, line: 472, column: 8)
!3397 = !DILocation(line: 473, column: 9, scope: !3395)
!3398 = !DILocation(line: 479, column: 5, scope: !3395)
!3399 = !DILocation(line: 468, column: 9, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3338, file: !286, line: 468, column: 8)
!3401 = !DILocation(line: 468, column: 8, scope: !3400)
!3402 = !DILocation(line: 468, column: 15, scope: !3400)
!3403 = !DILocation(line: 468, column: 8, scope: !3338)
!3404 = distinct !{!3404, !3405, !3406}
!3405 = !DILocation(line: 343, column: 2, scope: !3289)
!3406 = !DILocation(line: 712, column: 2, scope: !3289)
!3407 = !DILocation(line: 481, column: 4, scope: !3338)
!3408 = !DILocation(line: 484, column: 12, scope: !3337)
!3409 = !DILocation(line: 485, column: 5, scope: !3337)
!3410 = !DILocation(line: 505, column: 5, scope: !3337)
!3411 = !DILocation(line: 518, column: 5, scope: !3337)
!3412 = !DILocation(line: 523, column: 5, scope: !3337)
!3413 = !DILocation(line: 532, column: 9, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3337, file: !286, line: 532, column: 9)
!3415 = !DILocation(line: 532, column: 17, scope: !3414)
!3416 = !DILocation(line: 532, column: 9, scope: !3337)
!3417 = !DILocation(line: 533, column: 10, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !286, line: 533, column: 10)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !286, line: 532, column: 25)
!3420 = !DILocation(line: 533, column: 18, scope: !3418)
!3421 = !DILocation(line: 0, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3336, file: !286, line: 569, column: 9)
!3423 = !DILocation(line: 0, scope: !3336)
!3424 = !DILocation(line: 579, column: 20, scope: !3336)
!3425 = !DILocation(line: 579, column: 11, scope: !3336)
!3426 = !DILocation(line: 580, column: 9, scope: !3336)
!3427 = !DILocation(line: 582, column: 21, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !286, line: 582, column: 10)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !286, line: 580, column: 23)
!3430 = distinct !DILexicalBlock(scope: !3336, file: !286, line: 580, column: 9)
!3431 = !DILocation(line: 582, column: 28, scope: !3428)
!3432 = !DILocation(line: 582, column: 10, scope: !3429)
!3433 = !DILocation(line: 0, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !286, line: 587, column: 17)
!3435 = distinct !DILexicalBlock(scope: !3429, file: !286, line: 585, column: 10)
!3436 = !DILocation(line: 593, column: 9, scope: !3336)
!3437 = !DILocation(line: 600, column: 5, scope: !3337)
!3438 = !DILocation(line: 605, column: 18, scope: !3339)
!3439 = !DILocation(line: 605, column: 9, scope: !3339)
!3440 = !DILocation(line: 608, column: 20, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3339, file: !286, line: 608, column: 7)
!3442 = !DILocation(line: 608, column: 23, scope: !3441)
!3443 = !DILocation(line: 608, column: 34, scope: !3441)
!3444 = !DILocation(line: 608, column: 41, scope: !3441)
!3445 = !DILocation(line: 608, column: 7, scope: !3339)
!3446 = !DILocation(line: 613, column: 7, scope: !3339)
!3447 = !DILocation(line: 614, column: 8, scope: !3345)
!3448 = !DILocation(line: 614, column: 4, scope: !3345)
!3449 = !DILocation(line: 256, column: 6, scope: !3289)
!3450 = !DILocation(line: 254, column: 15, scope: !3289)
!3451 = !DILocation(line: 320, column: 7, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3382, file: !286, line: 305, column: 20)
!3453 = !DILocation(line: 615, column: 1, scope: !3345)
!3454 = !DILocation(line: 616, column: 8, scope: !3345)
!3455 = !DILocation(line: 617, column: 5, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !286, line: 616, column: 22)
!3457 = distinct !DILexicalBlock(scope: !3345, file: !286, line: 616, column: 8)
!3458 = !DILocation(line: 617, column: 25, scope: !3456)
!3459 = !DILocation(line: 618, column: 4, scope: !3456)
!3460 = !DILocation(line: 620, column: 26, scope: !3345)
!3461 = !DILocation(line: 620, column: 29, scope: !3345)
!3462 = !DILocation(line: 620, column: 17, scope: !3345)
!3463 = !DILocation(line: 620, column: 43, scope: !3345)
!3464 = !DILocation(line: 0, scope: !3345)
!3465 = !DILocation(line: 623, column: 14, scope: !3350)
!3466 = !DILocation(line: 626, column: 26, scope: !3349)
!3467 = !DILocation(line: 626, column: 37, scope: !3349)
!3468 = !DILocation(line: 0, scope: !3349)
!3469 = !DILocation(line: 634, column: 15, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3349, file: !286, line: 634, column: 9)
!3471 = !DILocation(line: 635, column: 6, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !286, line: 635, column: 6)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !286, line: 635, column: 6)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !286, line: 635, column: 6)
!3475 = distinct !DILexicalBlock(scope: !3470, file: !286, line: 634, column: 44)
!3476 = !DILocation(line: 639, column: 15, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3349, file: !286, line: 639, column: 9)
!3478 = !DILocation(line: 639, column: 9, scope: !3349)
!3479 = !DILocation(line: 640, column: 6, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !286, line: 640, column: 6)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !286, line: 640, column: 6)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !286, line: 640, column: 6)
!3483 = distinct !DILexicalBlock(scope: !3477, file: !286, line: 639, column: 43)
!3484 = !DILocation(line: 644, column: 9, scope: !3349)
!3485 = !DILocation(line: 649, column: 27, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !286, line: 644, column: 23)
!3487 = distinct !DILexicalBlock(scope: !3349, file: !286, line: 644, column: 9)
!3488 = !DILocation(line: 649, column: 6, scope: !3486)
!3489 = !DILocation(line: 649, column: 25, scope: !3486)
!3490 = !DILocation(line: 650, column: 27, scope: !3486)
!3491 = !DILocation(line: 650, column: 6, scope: !3486)
!3492 = !DILocation(line: 650, column: 25, scope: !3486)
!3493 = !DILocation(line: 651, column: 10, scope: !3486)
!3494 = !DILocation(line: 653, column: 26, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !286, line: 651, column: 17)
!3496 = distinct !DILexicalBlock(scope: !3486, file: !286, line: 651, column: 10)
!3497 = !DILocation(line: 654, column: 15, scope: !3495)
!3498 = !DILocation(line: 655, column: 6, scope: !3495)
!3499 = !DILocation(line: 656, column: 15, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !286, line: 655, column: 13)
!3501 = !DILocation(line: 658, column: 16, scope: !3487)
!3502 = !DILocation(line: 663, column: 10, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !286, line: 658, column: 23)
!3504 = distinct !DILexicalBlock(scope: !3487, file: !286, line: 658, column: 16)
!3505 = !DILocation(line: 664, column: 5, scope: !3503)
!3506 = !DILocation(line: 664, column: 16, scope: !3504)
!3507 = !DILocation(line: 669, column: 10, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !286, line: 664, column: 28)
!3509 = distinct !DILexicalBlock(scope: !3504, file: !286, line: 664, column: 16)
!3510 = !DILocation(line: 670, column: 5, scope: !3508)
!3511 = !DILocation(line: 675, column: 13, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3509, file: !286, line: 670, column: 12)
!3513 = !DILocation(line: 675, column: 27, scope: !3512)
!3514 = !DILocation(line: 675, column: 10, scope: !3512)
!3515 = !DILocation(line: 678, column: 10, scope: !3349)
!3516 = !DILocation(line: 680, column: 8, scope: !3345)
!3517 = !DILocation(line: 683, column: 14, scope: !3346)
!3518 = !DILocation(line: 684, column: 12, scope: !3352)
!3519 = !DILocation(line: 0, scope: !3352)
!3520 = !DILocation(line: 686, column: 8, scope: !3352)
!3521 = !DILocation(line: 687, column: 5, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !286, line: 686, column: 22)
!3523 = distinct !DILexicalBlock(scope: !3352, file: !286, line: 686, column: 8)
!3524 = !DILocation(line: 687, column: 17, scope: !3522)
!3525 = !DILocation(line: 688, column: 4, scope: !3522)
!3526 = !DILocation(line: 698, column: 18, scope: !3358)
!3527 = !DILocation(line: 0, scope: !3358)
!3528 = !DILocation(line: 700, column: 8, scope: !3358)
!3529 = !DILocation(line: 704, column: 6, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !286, line: 703, column: 12)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !286, line: 701, column: 9)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !286, line: 700, column: 22)
!3533 = distinct !DILexicalBlock(scope: !3358, file: !286, line: 700, column: 8)
!3534 = !DILocation(line: 704, column: 24, scope: !3530)
!3535 = !DILocation(line: 706, column: 4, scope: !3532)
!3536 = !DILocation(line: 709, column: 4, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !286, line: 709, column: 4)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !286, line: 709, column: 4)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !286, line: 709, column: 4)
!3540 = distinct !DILexicalBlock(scope: !3359, file: !286, line: 708, column: 10)
!3541 = !DILocation(line: 0, scope: !3353)
!3542 = !DILocation(line: 0, scope: !3339)
!3543 = !DILocation(line: 720, column: 6, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 720, column: 6)
!3545 = !DILocation(line: 720, column: 17, scope: !3544)
!3546 = !DILocation(line: 720, column: 31, scope: !3544)
!3547 = !DILocation(line: 720, column: 6, scope: !3289)
!3548 = !DILocation(line: 721, column: 3, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !286, line: 721, column: 3)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !286, line: 721, column: 3)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !286, line: 721, column: 3)
!3552 = distinct !DILexicalBlock(scope: !3544, file: !286, line: 720, column: 38)
!3553 = !DILocation(line: 729, column: 6, scope: !3289)
!3554 = !DILocation(line: 730, column: 21, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !286, line: 729, column: 20)
!3556 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 729, column: 6)
!3557 = !DILocation(line: 730, column: 27, scope: !3555)
!3558 = !DILocation(line: 730, column: 3, scope: !3555)
!3559 = !DILocation(line: 737, column: 22, scope: !3289)
!3560 = !DILocation(line: 737, column: 20, scope: !3289)
!3561 = !DILocation(line: 0, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 739, column: 6)
!3563 = !DILocation(line: 745, column: 17, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3562, file: !286, line: 743, column: 9)
!3565 = !DILocation(line: 745, column: 25, scope: !3564)
!3566 = !DILocation(line: 746, column: 17, scope: !3564)
!3567 = !DILocation(line: 746, column: 28, scope: !3564)
!3568 = !DILocation(line: 749, column: 29, scope: !3289)
!3569 = !DILocation(line: 749, column: 16, scope: !3289)
!3570 = !DILocation(line: 749, column: 27, scope: !3289)
!3571 = !DILocation(line: 756, column: 6, scope: !3365)
!3572 = !DILocation(line: 756, column: 6, scope: !3289)
!3573 = !DILocation(line: 757, column: 3, scope: !3363)
!3574 = !DILocation(line: 758, column: 10, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3361, file: !286, line: 758, column: 8)
!3576 = !DILocation(line: 758, column: 25, scope: !3575)
!3577 = !DILocation(line: 758, column: 8, scope: !3361)
!3578 = !DILocation(line: 0, scope: !3361)
!3579 = !DILocation(line: 765, column: 8, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3361, file: !286, line: 765, column: 8)
!3581 = !DILocation(line: 765, column: 19, scope: !3580)
!3582 = !DILocation(line: 765, column: 23, scope: !3580)
!3583 = !DILocation(line: 765, column: 8, scope: !3361)
!3584 = !DILocation(line: 762, column: 33, scope: !3361)
!3585 = !DILocation(line: 769, column: 8, scope: !3361)
!3586 = !DILocation(line: 769, column: 11, scope: !3361)
!3587 = !DILocation(line: 757, column: 27, scope: !3362)
!3588 = !DILocation(line: 757, column: 17, scope: !3362)
!3589 = distinct !{!3589, !3573, !3590}
!3590 = !DILocation(line: 770, column: 3, scope: !3363)
!3591 = !DILocation(line: 774, column: 16, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !286, line: 774, column: 2)
!3593 = distinct !DILexicalBlock(scope: !3289, file: !286, line: 774, column: 2)
!3594 = !DILocation(line: 774, column: 2, scope: !3593)
!3595 = !DILocation(line: 776, column: 16, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !286, line: 776, column: 7)
!3597 = distinct !DILexicalBlock(scope: !3592, file: !286, line: 774, column: 30)
!3598 = !DILocation(line: 776, column: 19, scope: !3596)
!3599 = !DILocation(line: 776, column: 34, scope: !3596)
!3600 = !DILocation(line: 776, column: 7, scope: !3597)
!3601 = !DILocation(line: 780, column: 7, scope: !3597)
!3602 = !DILocation(line: 782, column: 13, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !286, line: 780, column: 19)
!3604 = distinct !DILexicalBlock(scope: !3597, file: !286, line: 780, column: 7)
!3605 = !DILocation(line: 782, column: 8, scope: !3603)
!3606 = !DILocation(line: 782, column: 11, scope: !3603)
!3607 = !DILocation(line: 783, column: 3, scope: !3603)
!3608 = !DILocation(line: 785, column: 26, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3604, file: !286, line: 783, column: 10)
!3610 = !DILocation(line: 785, column: 41, scope: !3609)
!3611 = !DILocation(line: 785, column: 24, scope: !3609)
!3612 = !DILocation(line: 785, column: 8, scope: !3609)
!3613 = !DILocation(line: 787, column: 52, scope: !3609)
!3614 = !DILocation(line: 789, column: 11, scope: !3609)
!3615 = !DILocation(line: 789, column: 21, scope: !3609)
!3616 = !DILocation(line: 0, scope: !3604)
!3617 = !DILocation(line: 793, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3597, file: !286, line: 793, column: 7)
!3619 = !DILocation(line: 793, column: 18, scope: !3618)
!3620 = !DILocation(line: 793, column: 22, scope: !3618)
!3621 = !DILocation(line: 793, column: 29, scope: !3618)
!3622 = !DILocation(line: 793, column: 7, scope: !3597)
!3623 = !DILocation(line: 797, column: 12, scope: !3597)
!3624 = !DILocation(line: 797, column: 7, scope: !3597)
!3625 = !DILocation(line: 797, column: 10, scope: !3597)
!3626 = !DILocation(line: 799, column: 3, scope: !3597)
!3627 = !DILocation(line: 800, column: 7, scope: !3597)
!3628 = !DILocation(line: 801, column: 2, scope: !3597)
!3629 = !DILocation(line: 338, column: 4, scope: !3289)
!3630 = !DILocation(line: 774, column: 26, scope: !3592)
!3631 = distinct !{!3631, !3594, !3632}
!3632 = !DILocation(line: 801, column: 2, scope: !3593)
!3633 = !DILocation(line: 808, column: 9, scope: !3289)
!3634 = !DILocation(line: 808, column: 2, scope: !3289)
!3635 = !DILocation(line: 813, column: 1, scope: !3289)
!3636 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !286, file: !286, line: 33, type: !3637, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3639)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!345, !278}
!3639 = !{!3640}
!3640 = !DILocalVariable(name: "addr", arg: 1, scope: !3636, file: !286, line: 33, type: !278)
!3641 = !DILocation(line: 0, scope: !3636)
!3642 = !DILocation(line: 41, column: 9, scope: !3636)
!3643 = !DILocation(line: 41, column: 2, scope: !3636)
!3644 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3645, file: !3645, line: 24, type: !3646, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3648)
!3645 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3646 = !DISubroutineType(types: !3647)
!3647 = !{!345, !13}
!3648 = !{!3649}
!3649 = !DILocalVariable(name: "addr", arg: 1, scope: !3644, file: !3645, line: 24, type: !13)
!3650 = !DILocation(line: 0, scope: !3644)
!3651 = !DILocation(line: 49, column: 30, scope: !3644)
!3652 = !DILocation(line: 49, column: 57, scope: !3644)
!3653 = !DILocation(line: 49, column: 2, scope: !3644)
!3654 = distinct !DISubprogram(name: "cbprintf_package", scope: !286, file: !286, line: 815, type: !3655, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3657)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!119, !113, !239, !118, !278, null}
!3657 = !{!3658, !3659, !3660, !3661, !3662, !3663}
!3658 = !DILocalVariable(name: "packaged", arg: 1, scope: !3654, file: !286, line: 815, type: !113)
!3659 = !DILocalVariable(name: "len", arg: 2, scope: !3654, file: !286, line: 815, type: !239)
!3660 = !DILocalVariable(name: "flags", arg: 3, scope: !3654, file: !286, line: 815, type: !118)
!3661 = !DILocalVariable(name: "format", arg: 4, scope: !3654, file: !286, line: 816, type: !278)
!3662 = !DILocalVariable(name: "ap", scope: !3654, file: !286, line: 818, type: !3292)
!3663 = !DILocalVariable(name: "ret", scope: !3654, file: !286, line: 819, type: !119)
!3664 = !DILocation(line: 0, scope: !3654)
!3665 = !DILocation(line: 818, column: 2, scope: !3654)
!3666 = !DILocation(line: 818, column: 10, scope: !3654)
!3667 = !DILocation(line: 821, column: 2, scope: !3654)
!3668 = !DILocation(line: 822, column: 8, scope: !3654)
!3669 = !DILocation(line: 823, column: 2, scope: !3654)
!3670 = !DILocation(line: 825, column: 1, scope: !3654)
!3671 = !DILocation(line: 824, column: 2, scope: !3654)
!3672 = distinct !DISubprogram(name: "cbpprintf_external", scope: !286, file: !286, line: 827, type: !3673, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3683)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!119, !3675, !3679, !113, !113}
!3675 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3325, line: 297, baseType: !3676)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 32)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!119, null}
!3679 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3325, line: 328, baseType: !3680)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 32)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!119, !3675, !113, !278, !3292}
!3683 = !{!3684, !3685, !3686, !3687, !3688, !3689, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702}
!3684 = !DILocalVariable(name: "out", arg: 1, scope: !3672, file: !286, line: 827, type: !3675)
!3685 = !DILocalVariable(name: "formatter", arg: 2, scope: !3672, file: !286, line: 828, type: !3679)
!3686 = !DILocalVariable(name: "ctx", arg: 3, scope: !3672, file: !286, line: 829, type: !113)
!3687 = !DILocalVariable(name: "packaged", arg: 4, scope: !3672, file: !286, line: 829, type: !113)
!3688 = !DILocalVariable(name: "buf", scope: !3672, file: !286, line: 831, type: !284)
!3689 = !DILocalVariable(name: "hdr", scope: !3672, file: !286, line: 832, type: !3690)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 32)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3325, line: 96, size: 64, elements: !3692)
!3692 = !{!3693, !3694}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3691, file: !3325, line: 98, baseType: !3324, size: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3691, file: !3325, line: 101, baseType: !106, size: 32, offset: 32)
!3695 = !DILocalVariable(name: "s", scope: !3672, file: !286, line: 833, type: !106)
!3696 = !DILocalVariable(name: "ps", scope: !3672, file: !286, line: 833, type: !283)
!3697 = !DILocalVariable(name: "i", scope: !3672, file: !286, line: 834, type: !32)
!3698 = !DILocalVariable(name: "args_size", scope: !3672, file: !286, line: 834, type: !32)
!3699 = !DILocalVariable(name: "s_nbr", scope: !3672, file: !286, line: 834, type: !32)
!3700 = !DILocalVariable(name: "ros_nbr", scope: !3672, file: !286, line: 834, type: !32)
!3701 = !DILocalVariable(name: "rws_nbr", scope: !3672, file: !286, line: 834, type: !32)
!3702 = !DILocalVariable(name: "s_idx", scope: !3672, file: !286, line: 834, type: !32)
!3703 = !DILocation(line: 0, scope: !3672)
!3704 = !DILocation(line: 836, column: 10, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3672, file: !286, line: 836, column: 6)
!3706 = !DILocation(line: 836, column: 6, scope: !3672)
!3707 = !DILocation(line: 842, column: 28, scope: !3672)
!3708 = !DILocation(line: 842, column: 14, scope: !3672)
!3709 = !DILocation(line: 852, column: 16, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !286, line: 852, column: 2)
!3711 = distinct !DILexicalBlock(scope: !3672, file: !286, line: 852, column: 2)
!3712 = !DILocation(line: 852, column: 2, scope: !3711)
!3713 = !DILocation(line: 841, column: 28, scope: !3672)
!3714 = !DILocation(line: 841, column: 14, scope: !3672)
!3715 = !DILocation(line: 841, column: 32, scope: !3672)
!3716 = !DILocation(line: 847, column: 19, scope: !3672)
!3717 = !DILocation(line: 843, column: 28, scope: !3672)
!3718 = !DILocation(line: 843, column: 14, scope: !3672)
!3719 = !DILocation(line: 847, column: 31, scope: !3672)
!3720 = !DILocation(line: 844, column: 28, scope: !3672)
!3721 = !DILocation(line: 844, column: 14, scope: !3672)
!3722 = !DILocation(line: 847, column: 45, scope: !3672)
!3723 = !DILocation(line: 847, column: 41, scope: !3672)
!3724 = !DILocation(line: 854, column: 24, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3710, file: !286, line: 852, column: 30)
!3726 = !DILocation(line: 854, column: 11, scope: !3725)
!3727 = !DILocation(line: 855, column: 30, scope: !3725)
!3728 = !DILocation(line: 855, column: 22, scope: !3725)
!3729 = !DILocation(line: 855, column: 8, scope: !3725)
!3730 = !DILocation(line: 857, column: 7, scope: !3725)
!3731 = !DILocation(line: 859, column: 8, scope: !3725)
!3732 = !DILocation(line: 859, column: 18, scope: !3725)
!3733 = !DILocation(line: 859, column: 5, scope: !3725)
!3734 = !DILocation(line: 852, column: 26, scope: !3710)
!3735 = distinct !{!3735, !3712, !3736}
!3736 = !DILocation(line: 860, column: 2, scope: !3711)
!3737 = !DILocation(line: 863, column: 6, scope: !3672)
!3738 = !DILocation(line: 866, column: 56, scope: !3672)
!3739 = !DILocation(line: 866, column: 9, scope: !3672)
!3740 = !DILocation(line: 866, column: 2, scope: !3672)
!3741 = !DILocation(line: 867, column: 1, scope: !3672)
!3742 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !286, file: !286, line: 179, type: !3743, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3745)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!119, !3675, !3679, !113, !278, !113}
!3745 = !{!3746, !3747, !3748, !3749, !3750, !3751}
!3746 = !DILocalVariable(name: "out", arg: 1, scope: !3742, file: !286, line: 179, type: !3675)
!3747 = !DILocalVariable(name: "formatter", arg: 2, scope: !3742, file: !286, line: 180, type: !3679)
!3748 = !DILocalVariable(name: "ctx", arg: 3, scope: !3742, file: !286, line: 181, type: !113)
!3749 = !DILocalVariable(name: "fmt", arg: 4, scope: !3742, file: !286, line: 182, type: !278)
!3750 = !DILocalVariable(name: "buf", arg: 5, scope: !3742, file: !286, line: 182, type: !113)
!3751 = !DILocalVariable(name: "u", scope: !3742, file: !286, line: 187, type: !3752)
!3752 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3742, file: !286, line: 184, size: 32, elements: !3753)
!3753 = !{!3754, !3755}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3752, file: !286, line: 185, baseType: !3292, size: 32)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3752, file: !286, line: 186, baseType: !113, size: 32)
!3756 = !DILocation(line: 0, scope: !3742)
!3757 = !DILocation(line: 191, column: 9, scope: !3742)
!3758 = !DILocation(line: 191, column: 2, scope: !3742)
!3759 = distinct !DISubprogram(name: "is_ptr", scope: !286, file: !286, line: 881, type: !3760, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3762)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!345, !278, !119}
!3762 = !{!3763, !3764, !3765, !3766, !3767}
!3763 = !DILocalVariable(name: "fmt", arg: 1, scope: !3759, file: !286, line: 881, type: !278)
!3764 = !DILocalVariable(name: "n", arg: 2, scope: !3759, file: !286, line: 881, type: !119)
!3765 = !DILocalVariable(name: "c", scope: !3759, file: !286, line: 883, type: !107)
!3766 = !DILocalVariable(name: "mod", scope: !3759, file: !286, line: 884, type: !345)
!3767 = !DILocalVariable(name: "cnt", scope: !3759, file: !286, line: 885, type: !119)
!3768 = !DILocation(line: 0, scope: !3759)
!3769 = !DILocation(line: 887, column: 14, scope: !3759)
!3770 = !DILocation(line: 887, column: 22, scope: !3759)
!3771 = !DILocation(line: 887, column: 2, scope: !3759)
!3772 = !DILocation(line: 887, column: 18, scope: !3759)
!3773 = !DILocation(line: 888, column: 7, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3759, file: !286, line: 887, column: 31)
!3775 = !DILocation(line: 889, column: 12, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !286, line: 889, column: 8)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !286, line: 888, column: 12)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !286, line: 888, column: 7)
!3779 = !DILocation(line: 889, column: 8, scope: !3777)
!3780 = !DILocation(line: 890, column: 11, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !286, line: 890, column: 9)
!3782 = distinct !DILexicalBlock(scope: !3776, file: !286, line: 889, column: 18)
!3783 = !DILocation(line: 890, column: 9, scope: !3782)
!3784 = !DILocation(line: 892, column: 16, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3781, file: !286, line: 892, column: 16)
!3786 = !DILocation(line: 892, column: 16, scope: !3781)
!3787 = !DILocation(line: 895, column: 15, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3776, file: !286, line: 895, column: 15)
!3789 = !DILocation(line: 895, column: 15, scope: !3776)
!3790 = !DILocation(line: 900, column: 9, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3774, file: !286, line: 900, column: 7)
!3792 = !DILocation(line: 900, column: 7, scope: !3774)
!3793 = distinct !{!3793, !3771, !3794}
!3794 = !DILocation(line: 903, column: 2, scope: !3759)
!3795 = !DILocation(line: 906, column: 1, scope: !3759)
!3796 = distinct !DISubprogram(name: "is_fmt_spec", scope: !286, file: !286, line: 873, type: !3797, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3799)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!345, !107}
!3799 = !{!3800}
!3800 = !DILocalVariable(name: "c", arg: 1, scope: !3796, file: !286, line: 873, type: !107)
!3801 = !DILocation(line: 0, scope: !3796)
!3802 = !DILocation(line: 875, column: 19, scope: !3796)
!3803 = !DILocation(line: 875, column: 2, scope: !3796)
!3804 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !286, file: !286, line: 908, type: !3805, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3811)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!119, !113, !239, !3807, !113, !118, !2652, !239}
!3807 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3325, line: 308, baseType: !3808)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 32)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!119, !13, !239, !113}
!3811 = !{!3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3829, !3830, !3831, !3832, !3833, !3839, !3842, !3843, !3844, !3846, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3862, !3865, !3866, !3867, !3868, !3869, !3870, !3872, !3875, !3876, !3877}
!3812 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3804, file: !286, line: 908, type: !113)
!3813 = !DILocalVariable(name: "in_len", arg: 2, scope: !3804, file: !286, line: 909, type: !239)
!3814 = !DILocalVariable(name: "cb", arg: 3, scope: !3804, file: !286, line: 910, type: !3807)
!3815 = !DILocalVariable(name: "ctx", arg: 4, scope: !3804, file: !286, line: 911, type: !113)
!3816 = !DILocalVariable(name: "flags", arg: 5, scope: !3804, file: !286, line: 912, type: !118)
!3817 = !DILocalVariable(name: "strl", arg: 6, scope: !3804, file: !286, line: 913, type: !2652)
!3818 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3804, file: !286, line: 914, type: !239)
!3819 = !DILocalVariable(name: "buf", scope: !3804, file: !286, line: 918, type: !284)
!3820 = !DILocalVariable(name: "buf32", scope: !3804, file: !286, line: 919, type: !884)
!3821 = !DILocalVariable(name: "args_size", scope: !3804, file: !286, line: 920, type: !32)
!3822 = !DILocalVariable(name: "ros_nbr", scope: !3804, file: !286, line: 920, type: !32)
!3823 = !DILocalVariable(name: "rws_nbr", scope: !3804, file: !286, line: 920, type: !32)
!3824 = !DILocalVariable(name: "fmt_present", scope: !3804, file: !286, line: 921, type: !345)
!3825 = !DILocalVariable(name: "rw_cpy", scope: !3804, file: !286, line: 922, type: !345)
!3826 = !DILocalVariable(name: "ro_cpy", scope: !3804, file: !286, line: 923, type: !345)
!3827 = !DILocalVariable(name: "in_desc", scope: !3804, file: !286, line: 924, type: !3828)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 32)
!3829 = !DILocalVariable(name: "out_len", scope: !3804, file: !286, line: 960, type: !119)
!3830 = !DILocalVariable(name: "fmt", scope: !3804, file: !286, line: 965, type: !278)
!3831 = !DILocalVariable(name: "str_pos", scope: !3804, file: !286, line: 966, type: !284)
!3832 = !DILocalVariable(name: "strl_cnt", scope: !3804, file: !286, line: 967, type: !239)
!3833 = !DILocalVariable(name: "i", scope: !3834, file: !286, line: 973, type: !119)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !286, line: 973, column: 4)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !286, line: 972, column: 15)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !286, line: 972, column: 7)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !286, line: 970, column: 18)
!3838 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 970, column: 6)
!3839 = !DILocalVariable(name: "str", scope: !3840, file: !286, line: 974, type: !278)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !286, line: 973, column: 38)
!3841 = distinct !DILexicalBlock(scope: !3834, file: !286, line: 973, column: 4)
!3842 = !DILocalVariable(name: "len", scope: !3840, file: !286, line: 975, type: !119)
!3843 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3837, file: !286, line: 990, type: !345)
!3844 = !DILocalVariable(name: "i", scope: !3845, file: !286, line: 995, type: !119)
!3845 = distinct !DILexicalBlock(scope: !3837, file: !286, line: 995, column: 3)
!3846 = !DILocalVariable(name: "arg_idx", scope: !3847, file: !286, line: 996, type: !185)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !286, line: 995, column: 37)
!3848 = distinct !DILexicalBlock(scope: !3845, file: !286, line: 995, column: 3)
!3849 = !DILocalVariable(name: "arg_pos", scope: !3847, file: !286, line: 997, type: !185)
!3850 = !DILocalVariable(name: "str", scope: !3847, file: !286, line: 998, type: !278)
!3851 = !DILocalVariable(name: "is_ro", scope: !3847, file: !286, line: 999, type: !345)
!3852 = !DILocalVariable(name: "len", scope: !3847, file: !286, line: 1000, type: !119)
!3853 = !DILocalVariable(name: "out_desc", scope: !3804, file: !286, line: 1038, type: !3328)
!3854 = !DILocalVariable(name: "cpy_str_pos", scope: !3804, file: !286, line: 1040, type: !3310)
!3855 = !DILocalVariable(name: "keep_str_pos", scope: !3804, file: !286, line: 1042, type: !3310)
!3856 = !DILocalVariable(name: "scpy_cnt", scope: !3804, file: !286, line: 1043, type: !185)
!3857 = !DILocalVariable(name: "keep_cnt", scope: !3804, file: !286, line: 1044, type: !185)
!3858 = !DILocalVariable(name: "dst", scope: !3804, file: !286, line: 1045, type: !284)
!3859 = !DILocalVariable(name: "rv", scope: !3804, file: !286, line: 1046, type: !119)
!3860 = !DILocalVariable(name: "i", scope: !3861, file: !286, line: 1074, type: !119)
!3861 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 1074, column: 2)
!3862 = !DILocalVariable(name: "arg_idx", scope: !3863, file: !286, line: 1075, type: !185)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !286, line: 1074, column: 36)
!3864 = distinct !DILexicalBlock(scope: !3861, file: !286, line: 1074, column: 2)
!3865 = !DILocalVariable(name: "arg_pos", scope: !3863, file: !286, line: 1076, type: !185)
!3866 = !DILocalVariable(name: "str", scope: !3863, file: !286, line: 1077, type: !278)
!3867 = !DILocalVariable(name: "is_ro", scope: !3863, file: !286, line: 1078, type: !345)
!3868 = !DILocalVariable(name: "in_desc_backup", scope: !3804, file: !286, line: 1114, type: !3328)
!3869 = !DILocalVariable(name: "strs_len", scope: !3804, file: !286, line: 1134, type: !239)
!3870 = !DILocalVariable(name: "i", scope: !3871, file: !286, line: 1143, type: !119)
!3871 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 1143, column: 2)
!3872 = !DILocalVariable(name: "loc", scope: !3873, file: !286, line: 1144, type: !185)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !286, line: 1143, column: 37)
!3874 = distinct !DILexicalBlock(scope: !3871, file: !286, line: 1143, column: 2)
!3875 = !DILocalVariable(name: "str", scope: !3873, file: !286, line: 1145, type: !278)
!3876 = !DILocalVariable(name: "str_len", scope: !3873, file: !286, line: 1146, type: !199)
!3877 = !DILabel(scope: !3878, name: "calculate_string_length", file: !286, line: 1021)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !286, line: 1020, column: 56)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !286, line: 1020, column: 15)
!3880 = distinct !DILexicalBlock(scope: !3847, file: !286, line: 1014, column: 8)
!3881 = !DILocation(line: 0, scope: !3804)
!3882 = !DILocation(line: 916, column: 2, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !286, line: 916, column: 2)
!3884 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 916, column: 2)
!3885 = !DILocation(line: 916, column: 2, scope: !3884)
!3886 = !DILocation(line: 916, column: 2, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !286, line: 916, column: 2)
!3888 = !DILocation(line: 919, column: 20, scope: !3804)
!3889 = !DILocation(line: 921, column: 27, scope: !3804)
!3890 = !DILocation(line: 921, column: 21, scope: !3804)
!3891 = !DILocation(line: 926, column: 18, scope: !3804)
!3892 = !DILocation(line: 926, column: 11, scope: !3804)
!3893 = !DILocation(line: 926, column: 34, scope: !3804)
!3894 = !DILocation(line: 931, column: 21, scope: !3804)
!3895 = !DILocation(line: 931, column: 12, scope: !3804)
!3896 = !DILocation(line: 932, column: 11, scope: !3804)
!3897 = !DILocation(line: 932, column: 19, scope: !3804)
!3898 = !DILocation(line: 938, column: 21, scope: !3804)
!3899 = !DILocation(line: 938, column: 12, scope: !3804)
!3900 = !DILocation(line: 939, column: 19, scope: !3804)
!3901 = !DILocation(line: 939, column: 23, scope: !3804)
!3902 = !DILocation(line: 946, column: 14, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 946, column: 6)
!3904 = !DILocation(line: 947, column: 7, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !286, line: 947, column: 7)
!3906 = distinct !DILexicalBlock(scope: !3903, file: !286, line: 946, column: 26)
!3907 = !DILocation(line: 947, column: 7, scope: !3906)
!3908 = !DILocation(line: 948, column: 4, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !286, line: 947, column: 11)
!3910 = !DILocation(line: 949, column: 3, scope: !3909)
!3911 = !DILocation(line: 958, column: 23, scope: !3804)
!3912 = !DILocation(line: 958, column: 14, scope: !3804)
!3913 = !DILocation(line: 958, column: 27, scope: !3804)
!3914 = !DILocation(line: 965, column: 41, scope: !3804)
!3915 = !DILocation(line: 965, column: 20, scope: !3804)
!3916 = !DILocation(line: 966, column: 22, scope: !3804)
!3917 = !DILocation(line: 970, column: 9, scope: !3838)
!3918 = !DILocation(line: 970, column: 6, scope: !3804)
!3919 = !DILocation(line: 972, column: 7, scope: !3837)
!3920 = !DILocation(line: 0, scope: !3834)
!3921 = !DILocation(line: 973, column: 4, scope: !3834)
!3922 = !DILocation(line: 974, column: 46, scope: !3840)
!3923 = !DILocation(line: 974, column: 40, scope: !3840)
!3924 = !DILocation(line: 974, column: 23, scope: !3840)
!3925 = !DILocation(line: 0, scope: !3840)
!3926 = !DILocation(line: 975, column: 15, scope: !3840)
!3927 = !DILocation(line: 978, column: 14, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3840, file: !286, line: 978, column: 9)
!3929 = !DILocation(line: 979, column: 25, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3928, file: !286, line: 978, column: 38)
!3931 = !DILocation(line: 979, column: 19, scope: !3930)
!3932 = !DILocation(line: 979, column: 6, scope: !3930)
!3933 = !DILocation(line: 979, column: 23, scope: !3930)
!3934 = !DILocation(line: 980, column: 5, scope: !3930)
!3935 = !DILocation(line: 981, column: 13, scope: !3840)
!3936 = !DILocation(line: 982, column: 12, scope: !3840)
!3937 = !DILocation(line: 973, column: 34, scope: !3841)
!3938 = !DILocation(line: 973, column: 22, scope: !3841)
!3939 = distinct !{!3939, !3921, !3940}
!3940 = !DILocation(line: 983, column: 4, scope: !3834)
!3941 = !DILocation(line: 985, column: 16, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !286, line: 985, column: 8)
!3943 = distinct !DILexicalBlock(scope: !3836, file: !286, line: 984, column: 10)
!3944 = !DILocation(line: 967, column: 9, scope: !3804)
!3945 = !DILocation(line: 971, column: 11, scope: !3837)
!3946 = !DILocation(line: 0, scope: !3837)
!3947 = !DILocation(line: 0, scope: !3845)
!3948 = !DILocation(line: 995, column: 21, scope: !3848)
!3949 = !DILocation(line: 995, column: 3, scope: !3845)
!3950 = !DILocation(line: 990, column: 34, scope: !3837)
!3951 = !DILocation(line: 990, column: 26, scope: !3837)
!3952 = !DILocation(line: 996, column: 30, scope: !3847)
!3953 = !DILocation(line: 0, scope: !3847)
!3954 = !DILocation(line: 997, column: 30, scope: !3847)
!3955 = !DILocation(line: 997, column: 22, scope: !3847)
!3956 = !DILocation(line: 998, column: 39, scope: !3847)
!3957 = !DILocation(line: 998, column: 22, scope: !3847)
!3958 = !DILocation(line: 999, column: 17, scope: !3847)
!3959 = !DILocation(line: 1002, column: 20, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3847, file: !286, line: 1002, column: 8)
!3961 = !DILocation(line: 996, column: 22, scope: !3847)
!3962 = !DILocation(line: 1002, column: 35, scope: !3960)
!3963 = !DILocation(line: 1002, column: 23, scope: !3960)
!3964 = !DILocation(line: 1002, column: 8, scope: !3847)
!3965 = !DILocation(line: 1003, column: 5, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !286, line: 1003, column: 5)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !286, line: 1003, column: 5)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !286, line: 1003, column: 5)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !286, line: 1003, column: 5)
!3970 = distinct !DILexicalBlock(scope: !3960, file: !286, line: 1002, column: 45)
!3971 = !DILocation(line: 1010, column: 13, scope: !3970)
!3972 = !DILocation(line: 1011, column: 5, scope: !3970)
!3973 = !DILocation(line: 1014, column: 8, scope: !3847)
!3974 = !DILocation(line: 1015, column: 9, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3880, file: !286, line: 1014, column: 15)
!3976 = !DILocation(line: 1018, column: 14, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !286, line: 1017, column: 12)
!3978 = distinct !DILexicalBlock(scope: !3975, file: !286, line: 1015, column: 9)
!3979 = !DILocation(line: 1020, column: 4, scope: !3975)
!3980 = !DILocation(line: 1020, column: 15, scope: !3880)
!3981 = !DILocation(line: 1021, column: 1, scope: !3878)
!3982 = !DILocation(line: 1022, column: 11, scope: !3878)
!3983 = !DILocation(line: 1025, column: 14, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3878, file: !286, line: 1025, column: 9)
!3985 = !DILocation(line: 1026, column: 25, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3984, file: !286, line: 1025, column: 38)
!3987 = !DILocation(line: 1026, column: 19, scope: !3986)
!3988 = !DILocation(line: 1026, column: 6, scope: !3986)
!3989 = !DILocation(line: 1026, column: 23, scope: !3986)
!3990 = !DILocation(line: 1027, column: 5, scope: !3986)
!3991 = !DILocation(line: 1031, column: 21, scope: !3878)
!3992 = !DILocation(line: 1031, column: 13, scope: !3878)
!3993 = !DILocation(line: 1032, column: 4, scope: !3878)
!3994 = !DILocation(line: 995, column: 33, scope: !3848)
!3995 = distinct !{!3995, !3949, !3996}
!3996 = !DILocation(line: 1033, column: 3, scope: !3845)
!3997 = !DILocation(line: 1040, column: 10, scope: !3804)
!3998 = !DILocation(line: 1042, column: 10, scope: !3804)
!3999 = !DILocation(line: 1052, column: 6, scope: !3804)
!4000 = !DILocation(line: 1055, column: 9, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !286, line: 1052, column: 14)
!4002 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 1052, column: 6)
!4003 = !DILocation(line: 1056, column: 2, scope: !4001)
!4004 = !DILocation(line: 1056, column: 21, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4002, file: !286, line: 1056, column: 13)
!4006 = !DILocation(line: 1066, column: 3, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !286, line: 1065, column: 11)
!4008 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 1065, column: 6)
!4009 = !DILocation(line: 1067, column: 2, scope: !4007)
!4010 = !DILocation(line: 1068, column: 10, scope: !3804)
!4011 = !DILocation(line: 0, scope: !3861)
!4012 = !DILocation(line: 1074, column: 20, scope: !3864)
!4013 = !DILocation(line: 1074, column: 2, scope: !3861)
!4014 = !DILocation(line: 1110, column: 24, scope: !3804)
!4015 = !DILocation(line: 1053, column: 12, scope: !4001)
!4016 = !DILocation(line: 1054, column: 12, scope: !4001)
!4017 = !DILocation(line: 1108, column: 30, scope: !3804)
!4018 = !DILocation(line: 1108, column: 40, scope: !3804)
!4019 = !DILocation(line: 1108, column: 38, scope: !3804)
!4020 = !DILocation(line: 1109, column: 31, scope: !3804)
!4021 = !DILocation(line: 1109, column: 24, scope: !3804)
!4022 = !DILocation(line: 1110, column: 31, scope: !3804)
!4023 = !DILocation(line: 1114, column: 31, scope: !3804)
!4024 = !DILocation(line: 1114, column: 48, scope: !3804)
!4025 = !DILocation(line: 1115, column: 13, scope: !3804)
!4026 = !DILocation(line: 1118, column: 7, scope: !3804)
!4027 = !DILocation(line: 1119, column: 9, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 1119, column: 6)
!4029 = !DILocation(line: 1119, column: 6, scope: !3804)
!4030 = !DILocation(line: 1075, column: 29, scope: !3863)
!4031 = !DILocation(line: 1075, column: 21, scope: !3863)
!4032 = !DILocation(line: 0, scope: !3863)
!4033 = !DILocation(line: 1076, column: 29, scope: !3863)
!4034 = !DILocation(line: 1076, column: 21, scope: !3863)
!4035 = !DILocation(line: 1077, column: 38, scope: !3863)
!4036 = !DILocation(line: 1077, column: 21, scope: !3863)
!4037 = !DILocation(line: 1078, column: 16, scope: !3863)
!4038 = !DILocation(line: 1080, column: 19, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1080, column: 7)
!4040 = !DILocation(line: 1080, column: 34, scope: !4039)
!4041 = !DILocation(line: 1080, column: 22, scope: !4039)
!4042 = !DILocation(line: 1080, column: 7, scope: !3863)
!4043 = !DILocation(line: 1084, column: 7, scope: !3863)
!4044 = !DILocation(line: 1085, column: 8, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !286, line: 1084, column: 14)
!4046 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1084, column: 7)
!4047 = !DILocation(line: 1086, column: 5, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !286, line: 1086, column: 5)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !286, line: 1086, column: 5)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !286, line: 1085, column: 49)
!4051 = distinct !DILexicalBlock(scope: !4045, file: !286, line: 1085, column: 8)
!4052 = !DILocation(line: 1086, column: 5, scope: !4049)
!4053 = !DILocation(line: 1086, column: 5, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4048, file: !286, line: 1086, column: 5)
!4055 = !DILocation(line: 1087, column: 25, scope: !4050)
!4056 = !DILocation(line: 1087, column: 5, scope: !4050)
!4057 = !DILocation(line: 1088, column: 4, scope: !4050)
!4058 = !DILocation(line: 1088, column: 15, scope: !4051)
!4059 = !DILocation(line: 1089, column: 5, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !286, line: 1089, column: 5)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !286, line: 1089, column: 5)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !286, line: 1088, column: 61)
!4063 = distinct !DILexicalBlock(scope: !4051, file: !286, line: 1088, column: 15)
!4064 = !DILocation(line: 1089, column: 5, scope: !4061)
!4065 = !DILocation(line: 1089, column: 5, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4060, file: !286, line: 1089, column: 5)
!4067 = !DILocation(line: 1090, column: 26, scope: !4062)
!4068 = !DILocation(line: 1090, column: 5, scope: !4062)
!4069 = !DILocation(line: 1091, column: 4, scope: !4062)
!4070 = !DILocation(line: 1095, column: 8, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4046, file: !286, line: 1094, column: 10)
!4072 = !DILocation(line: 1096, column: 5, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !286, line: 1096, column: 5)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !286, line: 1096, column: 5)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !286, line: 1095, column: 49)
!4076 = distinct !DILexicalBlock(scope: !4071, file: !286, line: 1095, column: 8)
!4077 = !DILocation(line: 1096, column: 5, scope: !4074)
!4078 = !DILocation(line: 1096, column: 5, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4073, file: !286, line: 1096, column: 5)
!4080 = !DILocation(line: 1097, column: 25, scope: !4075)
!4081 = !DILocation(line: 1097, column: 5, scope: !4075)
!4082 = !DILocation(line: 1098, column: 4, scope: !4075)
!4083 = !DILocation(line: 1099, column: 5, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !286, line: 1099, column: 5)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !286, line: 1099, column: 5)
!4086 = distinct !DILexicalBlock(scope: !4076, file: !286, line: 1098, column: 11)
!4087 = !DILocation(line: 1099, column: 5, scope: !4085)
!4088 = !DILocation(line: 1099, column: 5, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4084, file: !286, line: 1099, column: 5)
!4090 = !DILocation(line: 1100, column: 26, scope: !4086)
!4091 = !DILocation(line: 1100, column: 5, scope: !4086)
!4092 = !DILocation(line: 1100, column: 30, scope: !4086)
!4093 = !DILocation(line: 1101, column: 26, scope: !4086)
!4094 = !DILocation(line: 1101, column: 5, scope: !4086)
!4095 = !DILocation(line: 0, scope: !4046)
!4096 = !DILocation(line: 1074, column: 32, scope: !3864)
!4097 = distinct !{!4097, !4013, !4098}
!4098 = !DILocation(line: 1104, column: 2, scope: !3861)
!4099 = !DILocation(line: 1124, column: 13, scope: !3804)
!4100 = !DILocation(line: 1127, column: 10, scope: !3804)
!4101 = !DILocation(line: 1127, column: 7, scope: !3804)
!4102 = !DILocation(line: 1128, column: 9, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 1128, column: 6)
!4104 = !DILocation(line: 1128, column: 6, scope: !3804)
!4105 = !DILocation(line: 1134, column: 27, scope: !3804)
!4106 = !DILocation(line: 1136, column: 7, scope: !3804)
!4107 = !DILocation(line: 1137, column: 9, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 1137, column: 6)
!4109 = !DILocation(line: 1137, column: 6, scope: !3804)
!4110 = !DILocation(line: 1131, column: 10, scope: !3804)
!4111 = !DILocation(line: 1140, column: 10, scope: !3804)
!4112 = !DILocation(line: 0, scope: !3871)
!4113 = !DILocation(line: 1143, column: 20, scope: !3874)
!4114 = !DILocation(line: 1143, column: 2, scope: !3871)
!4115 = !DILocation(line: 1144, column: 3, scope: !3873)
!4116 = !DILocation(line: 1144, column: 17, scope: !3873)
!4117 = !DILocation(line: 0, scope: !3873)
!4118 = !DILocation(line: 1144, column: 11, scope: !3873)
!4119 = !DILocation(line: 1145, column: 38, scope: !3873)
!4120 = !DILocation(line: 1145, column: 21, scope: !3873)
!4121 = !DILocation(line: 1146, column: 22, scope: !3873)
!4122 = !DILocation(line: 1146, column: 29, scope: !3873)
!4123 = !DILocation(line: 1148, column: 8, scope: !3873)
!4124 = !DILocation(line: 1149, column: 10, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !3873, file: !286, line: 1149, column: 7)
!4126 = !DILocation(line: 1149, column: 7, scope: !3873)
!4127 = !DILocation(line: 1154, column: 8, scope: !3873)
!4128 = !DILocation(line: 1155, column: 10, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !3873, file: !286, line: 1155, column: 7)
!4130 = !DILocation(line: 1155, column: 7, scope: !3873)
!4131 = !DILocation(line: 1159, column: 2, scope: !3874)
!4132 = !DILocation(line: 1152, column: 11, scope: !3873)
!4133 = !DILocation(line: 1158, column: 11, scope: !3873)
!4134 = !DILocation(line: 1143, column: 33, scope: !3874)
!4135 = distinct !{!4135, !4114, !4136}
!4136 = !DILocation(line: 1159, column: 2, scope: !3871)
!4137 = !DILocation(line: 1162, column: 8, scope: !3804)
!4138 = !DILocation(line: 1164, column: 2, scope: !3804)
!4139 = !DILocation(line: 1165, column: 1, scope: !3804)
!4140 = distinct !DISubprogram(name: "get_package_len", scope: !286, file: !286, line: 196, type: !4141, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4143)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!239, !113}
!4143 = !{!4144, !4145, !4146, !4147, !4148, !4149, !4150}
!4144 = !DILocalVariable(name: "packaged", arg: 1, scope: !4140, file: !286, line: 196, type: !113)
!4145 = !DILocalVariable(name: "buf", scope: !4140, file: !286, line: 200, type: !284)
!4146 = !DILocalVariable(name: "start", scope: !4140, file: !286, line: 201, type: !284)
!4147 = !DILocalVariable(name: "args_size", scope: !4140, file: !286, line: 202, type: !32)
!4148 = !DILocalVariable(name: "s_nbr", scope: !4140, file: !286, line: 202, type: !32)
!4149 = !DILocalVariable(name: "ros_nbr", scope: !4140, file: !286, line: 202, type: !32)
!4150 = !DILocalVariable(name: "i", scope: !4151, file: !286, line: 215, type: !119)
!4151 = distinct !DILexicalBlock(scope: !4140, file: !286, line: 215, column: 2)
!4152 = !DILocation(line: 0, scope: !4140)
!4153 = !DILocation(line: 198, column: 2, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !286, line: 198, column: 2)
!4155 = distinct !DILexicalBlock(scope: !4140, file: !286, line: 198, column: 2)
!4156 = !DILocation(line: 198, column: 2, scope: !4155)
!4157 = !DILocation(line: 198, column: 2, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4154, file: !286, line: 198, column: 2)
!4159 = !DILocation(line: 204, column: 14, scope: !4140)
!4160 = !DILocation(line: 204, column: 21, scope: !4140)
!4161 = !DILocation(line: 205, column: 14, scope: !4140)
!4162 = !DILocation(line: 206, column: 14, scope: !4140)
!4163 = !DILocation(line: 209, column: 6, scope: !4140)
!4164 = !DILocation(line: 212, column: 6, scope: !4140)
!4165 = !DILocation(line: 0, scope: !4151)
!4166 = !DILocation(line: 215, column: 20, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4151, file: !286, line: 215, column: 2)
!4168 = !DILocation(line: 215, column: 2, scope: !4151)
!4169 = !DILocation(line: 220, column: 33, scope: !4140)
!4170 = !DILocation(line: 220, column: 2, scope: !4140)
!4171 = !DILocation(line: 216, column: 6, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4167, file: !286, line: 215, column: 34)
!4173 = !DILocation(line: 217, column: 10, scope: !4172)
!4174 = !DILocation(line: 217, column: 36, scope: !4172)
!4175 = !DILocation(line: 217, column: 7, scope: !4172)
!4176 = !DILocation(line: 215, column: 30, scope: !4167)
!4177 = distinct !{!4177, !4168, !4178}
!4178 = !DILocation(line: 218, column: 2, scope: !4151)
!4179 = distinct !DISubprogram(name: "append_string", scope: !286, file: !286, line: 223, type: !4180, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4182)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!119, !3807, !113, !278, !199}
!4182 = !{!4183, !4184, !4185, !4186}
!4183 = !DILocalVariable(name: "cb", arg: 1, scope: !4179, file: !286, line: 223, type: !3807)
!4184 = !DILocalVariable(name: "ctx", arg: 2, scope: !4179, file: !286, line: 223, type: !113)
!4185 = !DILocalVariable(name: "str", arg: 3, scope: !4179, file: !286, line: 223, type: !278)
!4186 = !DILocalVariable(name: "strl", arg: 4, scope: !4179, file: !286, line: 223, type: !199)
!4187 = !DILocation(line: 0, scope: !4179)
!4188 = !DILocation(line: 225, column: 9, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4179, file: !286, line: 225, column: 6)
!4190 = !DILocation(line: 225, column: 6, scope: !4179)
!4191 = !DILocation(line: 226, column: 14, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4189, file: !286, line: 225, column: 18)
!4193 = !DILocation(line: 226, column: 12, scope: !4192)
!4194 = !DILocation(line: 226, column: 3, scope: !4192)
!4195 = !DILocation(line: 229, column: 14, scope: !4179)
!4196 = !DILocation(line: 229, column: 9, scope: !4179)
!4197 = !DILocation(line: 229, column: 27, scope: !4179)
!4198 = !DILocation(line: 229, column: 39, scope: !4179)
!4199 = !DILocation(line: 230, column: 17, scope: !4179)
!4200 = !DILocation(line: 230, column: 9, scope: !4179)
!4201 = !DILocation(line: 230, column: 2, scope: !4179)
!4202 = !DILocation(line: 231, column: 1, scope: !4179)
!4203 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !299, file: !299, line: 45, type: !301, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4204)
!4204 = !{!4205}
!4205 = !DILocalVariable(name: "c", arg: 1, scope: !4203, file: !299, line: 45, type: !119)
!4206 = !DILocation(line: 0, scope: !4203)
!4207 = !DILocation(line: 50, column: 2, scope: !4203)
!4208 = distinct !DISubprogram(name: "__printk_hook_install", scope: !299, file: !299, line: 63, type: !4209, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{null, !300}
!4211 = !{!4212}
!4212 = !DILocalVariable(name: "fn", arg: 1, scope: !4208, file: !299, line: 63, type: !300)
!4213 = !DILocation(line: 0, scope: !4208)
!4214 = !DILocation(line: 65, column: 12, scope: !4208)
!4215 = !DILocation(line: 66, column: 1, scope: !4208)
!4216 = distinct !DISubprogram(name: "__printk_get_hook", scope: !299, file: !299, line: 76, type: !4217, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !2032)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!113}
!4219 = !DILocation(line: 78, column: 9, scope: !4216)
!4220 = !DILocation(line: 78, column: 2, scope: !4216)
!4221 = distinct !DISubprogram(name: "vprintk", scope: !299, file: !299, line: 113, type: !4222, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4230)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{null, !278, !4224}
!4224 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3293, line: 99, baseType: !4225)
!4225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3293, line: 40, baseType: !4226)
!4226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !299, baseType: !4227)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4228)
!4228 = !{!4229}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4227, file: !299, line: 79, baseType: !113, size: 32)
!4230 = !{!4231, !4232, !4233}
!4231 = !DILocalVariable(name: "fmt", arg: 1, scope: !4221, file: !299, line: 113, type: !278)
!4232 = !DILocalVariable(name: "ap", arg: 2, scope: !4221, file: !299, line: 113, type: !4224)
!4233 = !DILocalVariable(name: "ctx", scope: !4234, file: !299, line: 121, type: !4236)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !299, line: 120, column: 27)
!4235 = distinct !DILexicalBlock(scope: !4221, file: !299, line: 120, column: 6)
!4236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !299, line: 81, size: 32, elements: !4237)
!4237 = !{!4238, !4239}
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4236, file: !299, line: 85, baseType: !32, size: 32)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4236, file: !299, line: 86, baseType: !4240, offset: 32)
!4240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !4241)
!4241 = !{!4242}
!4242 = !DISubrange(count: 0)
!4243 = !DILocation(line: 0, scope: !4221)
!4244 = !DILocation(line: 148, column: 3, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4235, file: !299, line: 138, column: 9)
!4246 = !DILocation(line: 155, column: 1, scope: !4221)
!4247 = distinct !DISubprogram(name: "char_out", scope: !299, file: !299, line: 107, type: !4248, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4250)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!119, !119, !113}
!4250 = !{!4251, !4252}
!4251 = !DILocalVariable(name: "c", arg: 1, scope: !4247, file: !299, line: 107, type: !119)
!4252 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4247, file: !299, line: 107, type: !113)
!4253 = !DILocation(line: 0, scope: !4247)
!4254 = !DILocation(line: 110, column: 9, scope: !4247)
!4255 = !DILocation(line: 110, column: 2, scope: !4247)
!4256 = distinct !DISubprogram(name: "cbvprintf", scope: !3325, file: !3325, line: 739, type: !4257, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4259)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{!119, !3675, !113, !278, !4224}
!4259 = !{!4260, !4261, !4262, !4263}
!4260 = !DILocalVariable(name: "out", arg: 1, scope: !4256, file: !3325, line: 739, type: !3675)
!4261 = !DILocalVariable(name: "ctx", arg: 2, scope: !4256, file: !3325, line: 739, type: !113)
!4262 = !DILocalVariable(name: "format", arg: 3, scope: !4256, file: !3325, line: 739, type: !278)
!4263 = !DILocalVariable(name: "ap", arg: 4, scope: !4256, file: !3325, line: 739, type: !4224)
!4264 = !DILocation(line: 0, scope: !4256)
!4265 = !DILocation(line: 741, column: 9, scope: !4256)
!4266 = !DILocation(line: 741, column: 2, scope: !4256)
!4267 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !299, file: !299, line: 157, type: !4268, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4270)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{null, !106, !239}
!4270 = !{!4271, !4272, !4273}
!4271 = !DILocalVariable(name: "c", arg: 1, scope: !4267, file: !299, line: 157, type: !106)
!4272 = !DILocalVariable(name: "n", arg: 2, scope: !4267, file: !299, line: 157, type: !239)
!4273 = !DILocalVariable(name: "i", scope: !4267, file: !299, line: 159, type: !239)
!4274 = !DILocation(line: 0, scope: !4267)
!4275 = !DILocation(line: 164, column: 16, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !299, line: 164, column: 2)
!4277 = distinct !DILexicalBlock(scope: !4267, file: !299, line: 164, column: 2)
!4278 = !DILocation(line: 164, column: 2, scope: !4277)
!4279 = !DILocation(line: 165, column: 3, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4276, file: !299, line: 164, column: 26)
!4281 = !DILocation(line: 165, column: 13, scope: !4280)
!4282 = !DILocation(line: 164, column: 22, scope: !4276)
!4283 = distinct !{!4283, !4278, !4284}
!4284 = !DILocation(line: 166, column: 2, scope: !4277)
!4285 = !DILocation(line: 171, column: 1, scope: !4267)
!4286 = distinct !DISubprogram(name: "printk", scope: !299, file: !299, line: 203, type: !4287, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{null, !278, null}
!4289 = !{!4290, !4291}
!4290 = !DILocalVariable(name: "fmt", arg: 1, scope: !4286, file: !299, line: 203, type: !278)
!4291 = !DILocalVariable(name: "ap", scope: !4286, file: !299, line: 205, type: !4224)
!4292 = !DILocation(line: 0, scope: !4286)
!4293 = !DILocation(line: 205, column: 2, scope: !4286)
!4294 = !DILocation(line: 205, column: 10, scope: !4286)
!4295 = !DILocation(line: 207, column: 2, scope: !4286)
!4296 = !DILocation(line: 209, column: 2, scope: !4286)
!4297 = !DILocation(line: 211, column: 2, scope: !4286)
!4298 = !DILocation(line: 212, column: 1, scope: !4286)
!4299 = distinct !DISubprogram(name: "snprintk", scope: !299, file: !299, line: 239, type: !4300, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!119, !106, !239, !278, null}
!4302 = !{!4303, !4304, !4305, !4306, !4307}
!4303 = !DILocalVariable(name: "str", arg: 1, scope: !4299, file: !299, line: 239, type: !106)
!4304 = !DILocalVariable(name: "size", arg: 2, scope: !4299, file: !299, line: 239, type: !239)
!4305 = !DILocalVariable(name: "fmt", arg: 3, scope: !4299, file: !299, line: 239, type: !278)
!4306 = !DILocalVariable(name: "ap", scope: !4299, file: !299, line: 241, type: !4224)
!4307 = !DILocalVariable(name: "ret", scope: !4299, file: !299, line: 242, type: !119)
!4308 = !DILocation(line: 0, scope: !4299)
!4309 = !DILocation(line: 241, column: 2, scope: !4299)
!4310 = !DILocation(line: 241, column: 10, scope: !4299)
!4311 = !DILocation(line: 244, column: 2, scope: !4299)
!4312 = !DILocation(line: 245, column: 8, scope: !4299)
!4313 = !DILocation(line: 246, column: 2, scope: !4299)
!4314 = !DILocation(line: 249, column: 1, scope: !4299)
!4315 = !DILocation(line: 248, column: 2, scope: !4299)
!4316 = distinct !DISubprogram(name: "vsnprintk", scope: !299, file: !299, line: 251, type: !4317, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4319)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!119, !106, !239, !278, !4224}
!4319 = !{!4320, !4321, !4322, !4323, !4324}
!4320 = !DILocalVariable(name: "str", arg: 1, scope: !4316, file: !299, line: 251, type: !106)
!4321 = !DILocalVariable(name: "size", arg: 2, scope: !4316, file: !299, line: 251, type: !239)
!4322 = !DILocalVariable(name: "fmt", arg: 3, scope: !4316, file: !299, line: 251, type: !278)
!4323 = !DILocalVariable(name: "ap", arg: 4, scope: !4316, file: !299, line: 251, type: !4224)
!4324 = !DILocalVariable(name: "ctx", scope: !4316, file: !299, line: 253, type: !4325)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !299, line: 217, size: 96, elements: !4326)
!4326 = !{!4327, !4328, !4329}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4325, file: !299, line: 218, baseType: !106, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4325, file: !299, line: 219, baseType: !119, size: 32, offset: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4325, file: !299, line: 220, baseType: !119, size: 32, offset: 64)
!4330 = !DILocation(line: 0, scope: !4316)
!4331 = !DILocation(line: 253, column: 2, scope: !4316)
!4332 = !DILocation(line: 253, column: 21, scope: !4316)
!4333 = !DILocation(line: 253, column: 27, scope: !4316)
!4334 = !DILocation(line: 255, column: 2, scope: !4316)
!4335 = !DILocation(line: 257, column: 10, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4316, file: !299, line: 257, column: 6)
!4337 = !DILocation(line: 257, column: 22, scope: !4336)
!4338 = !DILocation(line: 257, column: 16, scope: !4336)
!4339 = !DILocation(line: 257, column: 6, scope: !4316)
!4340 = !DILocation(line: 258, column: 3, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4336, file: !299, line: 257, column: 27)
!4342 = !DILocation(line: 258, column: 18, scope: !4341)
!4343 = !DILocation(line: 259, column: 2, scope: !4341)
!4344 = !DILocation(line: 262, column: 1, scope: !4316)
!4345 = !DILocation(line: 261, column: 2, scope: !4316)
!4346 = distinct !DISubprogram(name: "str_out", scope: !299, file: !299, line: 223, type: !4347, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4350)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!119, !119, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 32)
!4350 = !{!4351, !4352}
!4351 = !DILocalVariable(name: "c", arg: 1, scope: !4346, file: !299, line: 223, type: !119)
!4352 = !DILocalVariable(name: "ctx", arg: 2, scope: !4346, file: !299, line: 223, type: !4349)
!4353 = !DILocation(line: 0, scope: !4346)
!4354 = !DILocation(line: 225, column: 11, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4346, file: !299, line: 225, column: 6)
!4356 = !DILocation(line: 225, column: 15, scope: !4355)
!4357 = !DILocation(line: 0, scope: !4355)
!4358 = !DILocation(line: 225, column: 23, scope: !4355)
!4359 = !DILocation(line: 225, column: 45, scope: !4355)
!4360 = !DILocation(line: 225, column: 37, scope: !4355)
!4361 = !DILocation(line: 225, column: 6, scope: !4346)
!4362 = !DILocation(line: 226, column: 8, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4355, file: !299, line: 225, column: 50)
!4364 = !DILocation(line: 226, column: 13, scope: !4363)
!4365 = !DILocation(line: 227, column: 3, scope: !4363)
!4366 = !DILocation(line: 230, column: 29, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4346, file: !299, line: 230, column: 6)
!4368 = !DILocation(line: 230, column: 17, scope: !4367)
!4369 = !DILocation(line: 230, column: 6, scope: !4346)
!4370 = !DILocation(line: 231, column: 22, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4367, file: !299, line: 230, column: 34)
!4372 = !DILocation(line: 231, column: 3, scope: !4371)
!4373 = !DILocation(line: 231, column: 26, scope: !4371)
!4374 = !DILocation(line: 232, column: 2, scope: !4371)
!4375 = !DILocation(line: 233, column: 28, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4367, file: !299, line: 232, column: 9)
!4377 = !DILocation(line: 233, column: 22, scope: !4376)
!4378 = !DILocation(line: 233, column: 3, scope: !4376)
!4379 = !DILocation(line: 233, column: 26, scope: !4376)
!4380 = !DILocation(line: 237, column: 1, scope: !4346)
!4381 = distinct !DISubprogram(name: "z_thread_entry", scope: !4382, file: !4382, line: 30, type: !4383, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !4385)
!4382 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4383 = !DISubroutineType(types: !4384)
!4384 = !{null, !108, !113, !113, !113}
!4385 = !{!4386, !4387, !4388, !4389}
!4386 = !DILocalVariable(name: "entry", arg: 1, scope: !4381, file: !4382, line: 30, type: !108)
!4387 = !DILocalVariable(name: "p1", arg: 2, scope: !4381, file: !4382, line: 31, type: !113)
!4388 = !DILocalVariable(name: "p2", arg: 3, scope: !4381, file: !4382, line: 31, type: !113)
!4389 = !DILocalVariable(name: "p3", arg: 4, scope: !4381, file: !4382, line: 31, type: !113)
!4390 = !DILocation(line: 0, scope: !4381)
!4391 = !DILocation(line: 36, column: 2, scope: !4381)
!4392 = !DILocation(line: 38, column: 17, scope: !4381)
!4393 = !DILocation(line: 38, column: 2, scope: !4381)
!4394 = !DILocation(line: 45, column: 2, scope: !4381)
!4395 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !4396, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !2032)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!4398}
!4398 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !4399)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 32)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !4401)
!4401 = !{!4402, !4460, !4472, !4473, !4474, !4475, !4476, !4482, !4497}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4400, file: !143, line: 247, baseType: !4403, size: 384)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !4404)
!4404 = !{!4405, !4429, !4436, !4437, !4438, !4447, !4448, !4449}
!4405 = !DIDerivedType(tag: DW_TAG_member, scope: !4403, file: !143, line: 60, baseType: !4406, size: 64)
!4406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4403, file: !143, line: 60, size: 64, elements: !4407)
!4407 = !{!4408, !4423}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4406, file: !143, line: 61, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !4410)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !4411)
!4411 = !{!4412, !4418}
!4412 = !DIDerivedType(tag: DW_TAG_member, scope: !4410, file: !153, line: 38, baseType: !4413, size: 32)
!4413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4410, file: !153, line: 38, size: 32, elements: !4414)
!4414 = !{!4415, !4417}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4413, file: !153, line: 39, baseType: !4416, size: 32)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 32)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4413, file: !153, line: 40, baseType: !4416, size: 32)
!4418 = !DIDerivedType(tag: DW_TAG_member, scope: !4410, file: !153, line: 42, baseType: !4419, size: 32, offset: 32)
!4419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4410, file: !153, line: 42, size: 32, elements: !4420)
!4420 = !{!4421, !4422}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4419, file: !153, line: 43, baseType: !4416, size: 32)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4419, file: !153, line: 44, baseType: !4416, size: 32)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4406, file: !143, line: 62, baseType: !4424, size: 64)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !4425)
!4425 = !{!4426}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4424, file: !169, line: 50, baseType: !4427, size: 64)
!4427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4428, size: 64, elements: !174)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 32)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4403, file: !143, line: 68, baseType: !4430, size: 32, offset: 64)
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 32)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !4432)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !4433)
!4433 = !{!4434}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4432, file: !179, line: 232, baseType: !4435, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !4410)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4403, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4403, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!4438 = !DIDerivedType(tag: DW_TAG_member, scope: !4403, file: !143, line: 90, baseType: !4439, size: 16, offset: 112)
!4439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4403, file: !143, line: 90, size: 16, elements: !4440)
!4440 = !{!4441, !4446}
!4441 = !DIDerivedType(tag: DW_TAG_member, scope: !4439, file: !143, line: 91, baseType: !4442, size: 16)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4439, file: !143, line: 91, size: 16, elements: !4443)
!4443 = !{!4444, !4445}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4442, file: !143, line: 96, baseType: !195, size: 8)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4442, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4439, file: !143, line: 100, baseType: !199, size: 16)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4403, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4403, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4403, file: !143, line: 131, baseType: !4450, size: 192, offset: 192)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !4451)
!4451 = !{!4452, !4453, !4459}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4450, file: !179, line: 245, baseType: !4409, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4450, file: !179, line: 246, baseType: !4454, size: 32, offset: 64)
!4454 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !4455)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 32)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{null, !4458}
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4450, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4400, file: !143, line: 250, baseType: !4461, size: 288, offset: 384)
!4461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !4462)
!4462 = !{!4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4461, file: !216, line: 26, baseType: !118, size: 32)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4461, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4461, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4461, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4461, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4461, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4461, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4461, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4461, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4400, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4400, file: !143, line: 256, baseType: !4431, size: 64, offset: 704)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4400, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4400, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4400, file: !143, line: 300, baseType: !4477, size: 96, offset: 1056)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !4478)
!4478 = !{!4479, !4480, !4481}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4477, file: !143, line: 153, baseType: !22, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4477, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4477, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4400, file: !143, line: 325, baseType: !4483, size: 32, offset: 1152)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 32)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !4485)
!4485 = !{!4486, !4492, !4493}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4484, file: !245, line: 5074, baseType: !4487, size: 96)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !4488)
!4488 = !{!4489, !4490, !4491}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4487, file: !249, line: 57, baseType: !252, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4487, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4487, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4484, file: !245, line: 5075, baseType: !4431, size: 64, offset: 96)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4484, file: !245, line: 5076, baseType: !4494, size: 32, offset: 160)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !4495)
!4495 = !{!4496}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4494, file: !259, line: 52, baseType: !22, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4400, file: !143, line: 343, baseType: !4498, size: 64, offset: 1184)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !4499)
!4499 = !{!4500, !4501}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4498, file: !216, line: 63, baseType: !118, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4498, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!4502 = !DILocation(line: 535, column: 9, scope: !4395)
!4503 = !DILocation(line: 535, column: 2, scope: !4395)
!4504 = distinct !DISubprogram(name: "k_thread_abort", scope: !3211, file: !3211, line: 188, type: !4505, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !4507)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{null, !4398}
!4507 = !{!4508}
!4508 = !DILocalVariable(name: "thread", arg: 1, scope: !4504, file: !3211, line: 188, type: !4398)
!4509 = !DILocation(line: 0, scope: !4504)
!4510 = !DILocation(line: 197, column: 2, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4504, file: !3211, line: 197, column: 2)
!4512 = !{i64 2154846433}
!4513 = !DILocation(line: 198, column: 2, scope: !4504)
!4514 = !DILocation(line: 199, column: 1, scope: !4504)
!4515 = distinct !DISubprogram(name: "z_current_get", scope: !3211, file: !3211, line: 173, type: !4396, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !2032)
!4516 = !DILocation(line: 180, column: 2, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4515, file: !3211, line: 180, column: 2)
!4518 = !{i64 2154846365}
!4519 = !DILocation(line: 181, column: 9, scope: !4515)
!4520 = !DILocation(line: 181, column: 2, scope: !4515)
!4521 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2386, file: !2386, line: 1338, type: !4522, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !4530)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{!119, !3675, !113, !278, !4524, !118}
!4524 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3293, line: 99, baseType: !4525)
!4525 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3293, line: 40, baseType: !4526)
!4526 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2386, baseType: !4527)
!4527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4528)
!4528 = !{!4529}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4527, file: !2386, baseType: !113, size: 32)
!4530 = !{!4531, !4532, !4533, !4534, !4535, !4536, !4540, !4541, !4542, !4544, !4549, !4592, !4595, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4607, !4608, !4609, !4613, !4616, !4618, !4621, !4622, !4623, !4628, !4634, !4637, !4641, !4647, !4651, !4654, !4656, !4659}
!4531 = !DILocalVariable(name: "out", arg: 1, scope: !4521, file: !2386, line: 1338, type: !3675)
!4532 = !DILocalVariable(name: "ctx", arg: 2, scope: !4521, file: !2386, line: 1338, type: !113)
!4533 = !DILocalVariable(name: "fp", arg: 3, scope: !4521, file: !2386, line: 1338, type: !278)
!4534 = !DILocalVariable(name: "ap", arg: 4, scope: !4521, file: !2386, line: 1339, type: !4524)
!4535 = !DILocalVariable(name: "flags", arg: 5, scope: !4521, file: !2386, line: 1339, type: !118)
!4536 = !DILocalVariable(name: "buf", scope: !4521, file: !2386, line: 1341, type: !4537)
!4537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !4538)
!4538 = !{!4539}
!4539 = !DISubrange(count: 22)
!4540 = !DILocalVariable(name: "count", scope: !4521, file: !2386, line: 1342, type: !239)
!4541 = !DILocalVariable(name: "sint", scope: !4521, file: !2386, line: 1343, type: !2405)
!4542 = !DILocalVariable(name: "tagged_ap", scope: !4521, file: !2386, line: 1345, type: !4543)
!4543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!4544 = !DILocalVariable(name: "rc", scope: !4545, file: !2386, line: 1377, type: !119)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2386, line: 1377, column: 4)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2386, line: 1376, column: 19)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1376, column: 7)
!4548 = distinct !DILexicalBlock(scope: !4521, file: !2386, line: 1375, column: 19)
!4549 = !DILocalVariable(name: "state", scope: !4548, file: !2386, line: 1395, type: !4550)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4521, file: !2386, line: 1392, size: 192, elements: !4551)
!4551 = !{!4552, !4560}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4550, file: !2386, line: 1393, baseType: !4553, size: 64)
!4553 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2386, line: 166, size: 64, elements: !4554)
!4554 = !{!4555, !4556, !4557, !4558, !4559}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4553, file: !2386, line: 168, baseType: !2405, size: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4553, file: !2386, line: 171, baseType: !2408, size: 64)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4553, file: !2386, line: 174, baseType: !276, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4553, file: !2386, line: 177, baseType: !274, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4553, file: !2386, line: 180, baseType: !113, size: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4550, file: !2386, line: 1394, baseType: !4561, size: 96, offset: 64)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2386, line: 189, size: 96, elements: !4562)
!4562 = !{!4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4587}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4561, file: !2386, line: 191, baseType: !345, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4561, file: !2386, line: 194, baseType: !345, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4561, file: !2386, line: 197, baseType: !345, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4561, file: !2386, line: 200, baseType: !345, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4561, file: !2386, line: 203, baseType: !345, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4561, file: !2386, line: 206, baseType: !345, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4561, file: !2386, line: 209, baseType: !345, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4561, file: !2386, line: 212, baseType: !345, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4561, file: !2386, line: 219, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4561, file: !2386, line: 222, baseType: !345, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4561, file: !2386, line: 229, baseType: !345, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4561, file: !2386, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4561, file: !2386, line: 238, baseType: !345, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4561, file: !2386, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4561, file: !2386, line: 244, baseType: !345, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4561, file: !2386, line: 247, baseType: !345, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4561, file: !2386, line: 252, baseType: !345, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4561, file: !2386, line: 257, baseType: !345, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4561, file: !2386, line: 260, baseType: !186, size: 8, offset: 24)
!4582 = !DIDerivedType(tag: DW_TAG_member, scope: !4561, file: !2386, line: 262, baseType: !4583, size: 32, offset: 32)
!4583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4561, file: !2386, line: 262, size: 32, elements: !4584)
!4584 = !{!4585, !4586}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4583, file: !2386, line: 267, baseType: !119, size: 32)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4583, file: !2386, line: 289, baseType: !119, size: 32)
!4587 = !DIDerivedType(tag: DW_TAG_member, scope: !4561, file: !2386, line: 292, baseType: !4588, size: 32, offset: 64)
!4588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4561, file: !2386, line: 292, size: 32, elements: !4589)
!4589 = !{!4590, !4591}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4588, file: !2386, line: 297, baseType: !119, size: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4588, file: !2386, line: 306, baseType: !119, size: 32)
!4592 = !DILocalVariable(name: "conv", scope: !4548, file: !2386, line: 1400, type: !4593)
!4593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4594)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 32)
!4595 = !DILocalVariable(name: "value", scope: !4548, file: !2386, line: 1401, type: !4596)
!4596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4597)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 32)
!4598 = !DILocalVariable(name: "sp", scope: !4548, file: !2386, line: 1402, type: !278)
!4599 = !DILocalVariable(name: "width", scope: !4548, file: !2386, line: 1403, type: !119)
!4600 = !DILocalVariable(name: "precision", scope: !4548, file: !2386, line: 1404, type: !119)
!4601 = !DILocalVariable(name: "bps", scope: !4548, file: !2386, line: 1405, type: !278)
!4602 = !DILocalVariable(name: "bpe", scope: !4548, file: !2386, line: 1406, type: !278)
!4603 = !DILocalVariable(name: "sign", scope: !4548, file: !2386, line: 1407, type: !107)
!4604 = !DILocalVariable(name: "arg", scope: !4605, file: !2386, line: 1432, type: !119)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !2386, line: 1431, column: 24)
!4606 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1431, column: 7)
!4607 = !DILocalVariable(name: "specifier_cat", scope: !4548, file: !2386, line: 1468, type: !2385)
!4608 = !DILocalVariable(name: "length_mod", scope: !4548, file: !2386, line: 1470, type: !2393)
!4609 = !DILocalVariable(name: "rc", scope: !4610, file: !2386, line: 1575, type: !119)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !2386, line: 1575, column: 4)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !2386, line: 1574, column: 43)
!4612 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1574, column: 7)
!4613 = !DILocalVariable(name: "rc", scope: !4614, file: !2386, line: 1584, type: !119)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !2386, line: 1584, column: 4)
!4615 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1582, column: 28)
!4616 = !DILocalVariable(name: "len", scope: !4617, file: !2386, line: 1589, type: !239)
!4617 = distinct !DILexicalBlock(scope: !4615, file: !2386, line: 1586, column: 13)
!4618 = !DILocalVariable(name: "len", scope: !4619, file: !2386, line: 1641, type: !239)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2386, line: 1640, column: 24)
!4620 = distinct !DILexicalBlock(scope: !4615, file: !2386, line: 1640, column: 8)
!4621 = !DILocalVariable(name: "nj_len", scope: !4548, file: !2386, line: 1722, type: !239)
!4622 = !DILocalVariable(name: "pad_len", scope: !4548, file: !2386, line: 1723, type: !119)
!4623 = !DILocalVariable(name: "pad", scope: !4624, file: !2386, line: 1751, type: !107)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2386, line: 1750, column: 26)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2386, line: 1750, column: 8)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2386, line: 1747, column: 18)
!4627 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1747, column: 7)
!4628 = !DILocalVariable(name: "rc", scope: !4629, file: !2386, line: 1758, type: !119)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2386, line: 1758, column: 7)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !2386, line: 1757, column: 21)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !2386, line: 1757, column: 10)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2386, line: 1756, column: 26)
!4633 = distinct !DILexicalBlock(scope: !4624, file: !2386, line: 1756, column: 9)
!4634 = !DILocalVariable(name: "rc", scope: !4635, file: !2386, line: 1765, type: !119)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !2386, line: 1765, column: 6)
!4636 = distinct !DILexicalBlock(scope: !4624, file: !2386, line: 1764, column: 25)
!4637 = !DILocalVariable(name: "rc", scope: !4638, file: !2386, line: 1774, type: !119)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !2386, line: 1774, column: 4)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2386, line: 1773, column: 18)
!4640 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1773, column: 7)
!4641 = !DILocalVariable(name: "rc", scope: !4642, file: !2386, line: 1819, type: !119)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !2386, line: 1819, column: 5)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2386, line: 1818, column: 44)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !2386, line: 1818, column: 8)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2386, line: 1817, column: 10)
!4646 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1777, column: 7)
!4647 = !DILocalVariable(name: "rc", scope: !4648, file: !2386, line: 1823, type: !119)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2386, line: 1823, column: 5)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !2386, line: 1822, column: 26)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !2386, line: 1822, column: 8)
!4651 = !DILocalVariable(name: "rc", scope: !4652, file: !2386, line: 1828, type: !119)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2386, line: 1828, column: 5)
!4653 = distinct !DILexicalBlock(scope: !4645, file: !2386, line: 1827, column: 26)
!4654 = !DILocalVariable(name: "rc", scope: !4655, file: !2386, line: 1831, type: !119)
!4655 = distinct !DILexicalBlock(scope: !4645, file: !2386, line: 1831, column: 4)
!4656 = !DILocalVariable(name: "rc", scope: !4657, file: !2386, line: 1836, type: !119)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2386, line: 1836, column: 4)
!4658 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1835, column: 21)
!4659 = !DILabel(scope: !4615, name: "prec_int_pad0", file: !2386, line: 1634)
!4660 = !DILocation(line: 0, scope: !4521)
!4661 = !DILocation(line: 1341, column: 2, scope: !4521)
!4662 = !DILocation(line: 1341, column: 7, scope: !4521)
!4663 = !DILocation(line: 1375, column: 2, scope: !4521)
!4664 = !DILocation(line: 1342, column: 9, scope: !4521)
!4665 = !DILocation(line: 1375, column: 9, scope: !4521)
!4666 = !DILocation(line: 1377, column: 4, scope: !4545)
!4667 = !DILocation(line: 0, scope: !4545)
!4668 = !DILocation(line: 1377, column: 4, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4545, file: !2386, line: 1377, column: 4)
!4670 = distinct !{!4670, !4663, !4671}
!4671 = !DILocation(line: 1839, column: 2, scope: !4521)
!4672 = !DILocation(line: 1392, column: 3, scope: !4548)
!4673 = !DILocation(line: 1395, column: 5, scope: !4548)
!4674 = !DILocation(line: 0, scope: !4548)
!4675 = !DILocation(line: 1409, column: 8, scope: !4548)
!4676 = !DILocation(line: 1414, column: 13, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1414, column: 7)
!4678 = !DILocation(line: 1414, column: 7, scope: !4548)
!4679 = !DILocation(line: 1415, column: 12, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4677, file: !2386, line: 1414, column: 25)
!4681 = !DILocation(line: 1417, column: 14, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4680, file: !2386, line: 1417, column: 8)
!4683 = !DILocation(line: 1417, column: 8, scope: !4680)
!4684 = !DILocation(line: 1418, column: 21, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !2386, line: 1417, column: 19)
!4686 = !DILocation(line: 1419, column: 13, scope: !4685)
!4687 = !DILocation(line: 1420, column: 4, scope: !4685)
!4688 = !DILocation(line: 1421, column: 20, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4677, file: !2386, line: 1421, column: 14)
!4690 = !DILocation(line: 1421, column: 14, scope: !4677)
!4691 = !DILocation(line: 1431, column: 13, scope: !4606)
!4692 = !DILocation(line: 1431, column: 7, scope: !4548)
!4693 = !DILocation(line: 1432, column: 14, scope: !4605)
!4694 = !DILocation(line: 0, scope: !4605)
!4695 = !DILocation(line: 1434, column: 12, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4605, file: !2386, line: 1434, column: 8)
!4697 = !DILocation(line: 1434, column: 8, scope: !4605)
!4698 = !DILocation(line: 1435, column: 24, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4696, file: !2386, line: 1434, column: 17)
!4700 = !DILocation(line: 1436, column: 4, scope: !4699)
!4701 = !DILocation(line: 1439, column: 20, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4606, file: !2386, line: 1439, column: 14)
!4703 = !DILocation(line: 1439, column: 14, scope: !4606)
!4704 = !DILocation(line: 1469, column: 37, scope: !4548)
!4705 = !DILocation(line: 1448, column: 20, scope: !4548)
!4706 = !DILocation(line: 1449, column: 22, scope: !4548)
!4707 = !DILocation(line: 1471, column: 34, scope: !4548)
!4708 = !DILocation(line: 1478, column: 7, scope: !4548)
!4709 = !DILocation(line: 1479, column: 4, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2386, line: 1478, column: 40)
!4711 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1478, column: 7)
!4712 = !DILocation(line: 1484, column: 19, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4710, file: !2386, line: 1479, column: 24)
!4714 = !DILocation(line: 1484, column: 17, scope: !4713)
!4715 = !DILocation(line: 1485, column: 5, scope: !4713)
!4716 = !DILocation(line: 1492, column: 20, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2386, line: 1491, column: 12)
!4718 = distinct !DILexicalBlock(scope: !4713, file: !2386, line: 1487, column: 9)
!4719 = !DILocation(line: 1492, column: 18, scope: !4717)
!4720 = !DILocation(line: 1494, column: 5, scope: !4713)
!4721 = !DILocation(line: 1497, column: 23, scope: !4713)
!4722 = !DILocation(line: 1496, column: 17, scope: !4713)
!4723 = !DILocation(line: 1498, column: 5, scope: !4713)
!4724 = !DILocation(line: 1501, column: 23, scope: !4713)
!4725 = !DILocation(line: 1500, column: 17, scope: !4713)
!4726 = !DILocation(line: 1502, column: 5, scope: !4713)
!4727 = !DILocation(line: 1513, column: 23, scope: !4713)
!4728 = !DILocation(line: 1513, column: 6, scope: !4713)
!4729 = !DILocation(line: 1512, column: 17, scope: !4713)
!4730 = !DILocation(line: 1514, column: 5, scope: !4713)
!4731 = !DILocation(line: 0, scope: !4713)
!4732 = !DILocation(line: 1516, column: 8, scope: !4710)
!4733 = !DILocation(line: 1517, column: 19, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !2386, line: 1516, column: 33)
!4735 = distinct !DILexicalBlock(scope: !4710, file: !2386, line: 1516, column: 8)
!4736 = !DILocation(line: 1517, column: 17, scope: !4734)
!4737 = !DILocation(line: 1518, column: 4, scope: !4734)
!4738 = !DILocation(line: 1519, column: 19, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2386, line: 1518, column: 39)
!4740 = distinct !DILexicalBlock(scope: !4735, file: !2386, line: 1518, column: 15)
!4741 = !DILocation(line: 1519, column: 17, scope: !4739)
!4742 = !DILocation(line: 1520, column: 4, scope: !4739)
!4743 = !DILocation(line: 1522, column: 4, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !2386, line: 1521, column: 47)
!4745 = distinct !DILexicalBlock(scope: !4711, file: !2386, line: 1521, column: 14)
!4746 = !DILocation(line: 1527, column: 19, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4744, file: !2386, line: 1522, column: 24)
!4748 = !DILocation(line: 1527, column: 17, scope: !4747)
!4749 = !DILocation(line: 1528, column: 5, scope: !4747)
!4750 = !DILocation(line: 0, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4747, file: !2386, line: 1530, column: 9)
!4752 = !DILocation(line: 1540, column: 23, scope: !4747)
!4753 = !DILocation(line: 1539, column: 17, scope: !4747)
!4754 = !DILocation(line: 1542, column: 5, scope: !4747)
!4755 = !DILocation(line: 1545, column: 23, scope: !4747)
!4756 = !DILocation(line: 1544, column: 17, scope: !4747)
!4757 = !DILocation(line: 1547, column: 5, scope: !4747)
!4758 = !DILocation(line: 1551, column: 23, scope: !4747)
!4759 = !DILocation(line: 1551, column: 6, scope: !4747)
!4760 = !DILocation(line: 1550, column: 17, scope: !4747)
!4761 = !DILocation(line: 1552, column: 5, scope: !4747)
!4762 = !DILocation(line: 0, scope: !4747)
!4763 = !DILocation(line: 1554, column: 8, scope: !4744)
!4764 = !DILocation(line: 1555, column: 19, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !2386, line: 1554, column: 33)
!4766 = distinct !DILexicalBlock(scope: !4744, file: !2386, line: 1554, column: 8)
!4767 = !DILocation(line: 1555, column: 17, scope: !4765)
!4768 = !DILocation(line: 1556, column: 4, scope: !4765)
!4769 = !DILocation(line: 1557, column: 19, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !2386, line: 1556, column: 39)
!4771 = distinct !DILexicalBlock(scope: !4766, file: !2386, line: 1556, column: 15)
!4772 = !DILocation(line: 1557, column: 17, scope: !4770)
!4773 = !DILocation(line: 1558, column: 4, scope: !4770)
!4774 = !DILocation(line: 0, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !2386, line: 1560, column: 8)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !2386, line: 1559, column: 45)
!4777 = distinct !DILexicalBlock(scope: !4745, file: !2386, line: 1559, column: 14)
!4778 = !DILocation(line: 1566, column: 17, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !2386, line: 1565, column: 46)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !2386, line: 1565, column: 14)
!4781 = !DILocation(line: 1566, column: 15, scope: !4779)
!4782 = !DILocation(line: 1567, column: 3, scope: !4779)
!4783 = !DILocation(line: 1574, column: 21, scope: !4612)
!4784 = !DILocation(line: 1575, column: 4, scope: !4610)
!4785 = !DILocation(line: 0, scope: !4610)
!4786 = !DILocation(line: 1575, column: 4, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4610, file: !2386, line: 1575, column: 4)
!4788 = !DILocation(line: 1582, column: 17, scope: !4548)
!4789 = !DILocation(line: 1582, column: 3, scope: !4548)
!4790 = !DILocation(line: 1584, column: 4, scope: !4614)
!4791 = !DILocation(line: 0, scope: !4614)
!4792 = !DILocation(line: 1584, column: 4, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4614, file: !2386, line: 1584, column: 4)
!4794 = !DILocation(line: 1587, column: 31, scope: !4617)
!4795 = !DILocation(line: 1591, column: 18, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4617, file: !2386, line: 1591, column: 8)
!4797 = !DILocation(line: 1591, column: 8, scope: !4617)
!4798 = !DILocation(line: 1592, column: 11, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !2386, line: 1591, column: 24)
!4800 = !DILocation(line: 0, scope: !4617)
!4801 = !DILocation(line: 1593, column: 4, scope: !4799)
!4802 = !DILocation(line: 1594, column: 11, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4796, file: !2386, line: 1593, column: 11)
!4804 = !DILocation(line: 1604, column: 51, scope: !4615)
!4805 = !DILocation(line: 1604, column: 13, scope: !4615)
!4806 = !DILocation(line: 1604, column: 11, scope: !4615)
!4807 = !DILocation(line: 1606, column: 4, scope: !4615)
!4808 = !DILocation(line: 1609, column: 14, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4615, file: !2386, line: 1609, column: 8)
!4810 = !DILocation(line: 1609, column: 8, scope: !4615)
!4811 = !DILocation(line: 1619, column: 18, scope: !4615)
!4812 = !DILocation(line: 1620, column: 13, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4615, file: !2386, line: 1620, column: 8)
!4814 = !DILocation(line: 1620, column: 8, scope: !4615)
!4815 = !DILocation(line: 1622, column: 36, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4813, file: !2386, line: 1620, column: 18)
!4817 = !DILocation(line: 1622, column: 17, scope: !4816)
!4818 = !DILocation(line: 1623, column: 4, scope: !4816)
!4819 = !DILocation(line: 1632, column: 29, scope: !4615)
!4820 = !DILocation(line: 1632, column: 10, scope: !4615)
!4821 = !DILocation(line: 1632, column: 4, scope: !4615)
!4822 = !DILocation(line: 1407, column: 8, scope: !4548)
!4823 = !DILocation(line: 0, scope: !4615)
!4824 = !DILocation(line: 1634, column: 3, scope: !4615)
!4825 = !DILocation(line: 1640, column: 18, scope: !4620)
!4826 = !DILocation(line: 1640, column: 8, scope: !4615)
!4827 = !DILocation(line: 1729, column: 13, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1729, column: 7)
!4829 = !DILocation(line: 1641, column: 22, scope: !4619)
!4830 = !DILocation(line: 0, scope: !4619)
!4831 = !DILocation(line: 1646, column: 21, scope: !4619)
!4832 = !DILocation(line: 1649, column: 13, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4619, file: !2386, line: 1649, column: 9)
!4834 = !DILocation(line: 1649, column: 9, scope: !4619)
!4835 = !DILocation(line: 1650, column: 35, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4833, file: !2386, line: 1649, column: 34)
!4837 = !DILocation(line: 1650, column: 23, scope: !4836)
!4838 = !DILocation(line: 1651, column: 5, scope: !4836)
!4839 = !DILocation(line: 1660, column: 15, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4615, file: !2386, line: 1660, column: 8)
!4841 = !DILocation(line: 1660, column: 19, scope: !4840)
!4842 = !DILocation(line: 1660, column: 8, scope: !4615)
!4843 = !DILocation(line: 1661, column: 23, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !2386, line: 1660, column: 28)
!4845 = !DILocation(line: 1661, column: 11, scope: !4844)
!4846 = !DILocation(line: 1665, column: 22, scope: !4844)
!4847 = !DILocation(line: 1666, column: 21, scope: !4844)
!4848 = !DILocation(line: 1668, column: 5, scope: !4844)
!4849 = !DILocation(line: 1677, column: 30, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !2386, line: 1676, column: 49)
!4851 = distinct !DILexicalBlock(scope: !4615, file: !2386, line: 1676, column: 8)
!4852 = !DILocation(line: 1677, column: 5, scope: !4850)
!4853 = !DILocation(line: 1680, column: 4, scope: !4615)
!4854 = !DILocation(line: 0, scope: !4796)
!4855 = !DILocation(line: 1597, column: 14, scope: !4617)
!4856 = !DILocation(line: 1699, column: 11, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1699, column: 7)
!4858 = !DILocation(line: 1699, column: 7, scope: !4548)
!4859 = !DILocation(line: 1725, column: 7, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1725, column: 7)
!4861 = !DILocation(line: 1725, column: 12, scope: !4860)
!4862 = !DILocation(line: 1747, column: 13, scope: !4627)
!4863 = !DILocation(line: 1747, column: 7, scope: !4548)
!4864 = !DILocation(line: 1722, column: 24, scope: !4548)
!4865 = !DILocation(line: 1725, column: 7, scope: !4548)
!4866 = !DILocation(line: 1729, column: 7, scope: !4548)
!4867 = !DILocation(line: 1736, column: 13, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4548, file: !2386, line: 1736, column: 7)
!4869 = !DILocation(line: 1735, column: 19, scope: !4548)
!4870 = !DILocation(line: 1736, column: 7, scope: !4548)
!4871 = !DILocation(line: 1748, column: 10, scope: !4626)
!4872 = !DILocation(line: 1750, column: 15, scope: !4625)
!4873 = !DILocation(line: 1750, column: 8, scope: !4626)
!4874 = !DILocation(line: 0, scope: !4624)
!4875 = !DILocation(line: 1756, column: 15, scope: !4633)
!4876 = !DILocation(line: 1756, column: 9, scope: !4624)
!4877 = !DILocation(line: 1758, column: 7, scope: !4629)
!4878 = !DILocation(line: 0, scope: !4629)
!4879 = !DILocation(line: 1758, column: 7, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4629, file: !2386, line: 1758, column: 7)
!4881 = !DILocation(line: 1764, column: 5, scope: !4624)
!4882 = !DILocation(line: 0, scope: !4626)
!4883 = !DILocation(line: 1764, column: 20, scope: !4624)
!4884 = !DILocation(line: 1764, column: 17, scope: !4624)
!4885 = !DILocation(line: 1765, column: 6, scope: !4635)
!4886 = !DILocation(line: 0, scope: !4635)
!4887 = !DILocation(line: 1765, column: 6, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4635, file: !2386, line: 1765, column: 6)
!4889 = distinct !{!4889, !4881, !4890}
!4890 = !DILocation(line: 1766, column: 5, scope: !4624)
!4891 = !DILocation(line: 1773, column: 12, scope: !4640)
!4892 = !DILocation(line: 1773, column: 7, scope: !4548)
!4893 = !DILocation(line: 1773, column: 7, scope: !4640)
!4894 = !DILocation(line: 1774, column: 4, scope: !4638)
!4895 = !DILocation(line: 0, scope: !4638)
!4896 = !DILocation(line: 1774, column: 4, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4638, file: !2386, line: 1774, column: 4)
!4898 = !DILocation(line: 1818, column: 8, scope: !4644)
!4899 = !DILocation(line: 1818, column: 27, scope: !4644)
!4900 = !DILocation(line: 1818, column: 25, scope: !4644)
!4901 = !DILocation(line: 1818, column: 8, scope: !4645)
!4902 = !DILocation(line: 1819, column: 5, scope: !4642)
!4903 = !DILocation(line: 0, scope: !4642)
!4904 = !DILocation(line: 1819, column: 5, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4642, file: !2386, line: 1819, column: 5)
!4906 = !DILocation(line: 1822, column: 14, scope: !4650)
!4907 = !DILocation(line: 1822, column: 8, scope: !4645)
!4908 = !DILocation(line: 1823, column: 5, scope: !4648)
!4909 = !DILocation(line: 0, scope: !4648)
!4910 = !DILocation(line: 1823, column: 5, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4648, file: !2386, line: 1823, column: 5)
!4912 = !DILocation(line: 1826, column: 20, scope: !4645)
!4913 = !DILocation(line: 1827, column: 4, scope: !4645)
!4914 = !DILocation(line: 0, scope: !4645)
!4915 = !DILocation(line: 1827, column: 21, scope: !4645)
!4916 = !DILocation(line: 1827, column: 18, scope: !4645)
!4917 = !DILocation(line: 1828, column: 5, scope: !4652)
!4918 = !DILocation(line: 0, scope: !4652)
!4919 = !DILocation(line: 1828, column: 5, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4652, file: !2386, line: 1828, column: 5)
!4921 = distinct !{!4921, !4913, !4922}
!4922 = !DILocation(line: 1829, column: 4, scope: !4645)
!4923 = !DILocation(line: 1831, column: 4, scope: !4655)
!4924 = !DILocation(line: 0, scope: !4655)
!4925 = !DILocation(line: 1831, column: 4, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4655, file: !2386, line: 1831, column: 4)
!4927 = !DILocation(line: 1835, column: 16, scope: !4548)
!4928 = !DILocation(line: 1835, column: 3, scope: !4548)
!4929 = !DILocation(line: 1836, column: 4, scope: !4657)
!4930 = !DILocation(line: 0, scope: !4657)
!4931 = !DILocation(line: 1836, column: 4, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4657, file: !2386, line: 1836, column: 4)
!4933 = !DILocation(line: 1837, column: 4, scope: !4658)
!4934 = distinct !{!4934, !4928, !4935}
!4935 = !DILocation(line: 1838, column: 3, scope: !4548)
!4936 = !DILocation(line: 1844, column: 1, scope: !4521)
!4937 = distinct !DISubprogram(name: "extract_conversion", scope: !2386, file: !2386, line: 642, type: !4938, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !4940)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!278, !4594, !278}
!4940 = !{!4941, !4942}
!4941 = !DILocalVariable(name: "conv", arg: 1, scope: !4937, file: !2386, line: 642, type: !4594)
!4942 = !DILocalVariable(name: "sp", arg: 2, scope: !4937, file: !2386, line: 643, type: !278)
!4943 = !DILocation(line: 0, scope: !4937)
!4944 = !DILocation(line: 645, column: 10, scope: !4937)
!4945 = !DILocation(line: 653, column: 2, scope: !4937)
!4946 = !DILocation(line: 654, column: 6, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4937, file: !2386, line: 654, column: 6)
!4948 = !DILocation(line: 654, column: 10, scope: !4947)
!4949 = !DILocation(line: 654, column: 6, scope: !4937)
!4950 = !DILocation(line: 655, column: 24, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4947, file: !2386, line: 654, column: 18)
!4952 = !DILocation(line: 655, column: 19, scope: !4951)
!4953 = !DILocation(line: 656, column: 3, scope: !4951)
!4954 = !DILocation(line: 659, column: 7, scope: !4937)
!4955 = !DILocation(line: 660, column: 7, scope: !4937)
!4956 = !DILocation(line: 661, column: 7, scope: !4937)
!4957 = !DILocation(line: 662, column: 7, scope: !4937)
!4958 = !DILocation(line: 663, column: 7, scope: !4937)
!4959 = !DILocation(line: 665, column: 2, scope: !4937)
!4960 = !DILocation(line: 666, column: 1, scope: !4937)
!4961 = distinct !DISubprogram(name: "outs", scope: !2386, file: !2386, line: 1319, type: !4962, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !4964)
!4962 = !DISubroutineType(types: !4963)
!4963 = !{!119, !3675, !113, !278, !278}
!4964 = !{!4965, !4966, !4967, !4968, !4969, !4970}
!4965 = !DILocalVariable(name: "out", arg: 1, scope: !4961, file: !2386, line: 1319, type: !3675)
!4966 = !DILocalVariable(name: "ctx", arg: 2, scope: !4961, file: !2386, line: 1320, type: !113)
!4967 = !DILocalVariable(name: "sp", arg: 3, scope: !4961, file: !2386, line: 1321, type: !278)
!4968 = !DILocalVariable(name: "ep", arg: 4, scope: !4961, file: !2386, line: 1322, type: !278)
!4969 = !DILocalVariable(name: "count", scope: !4961, file: !2386, line: 1324, type: !239)
!4970 = !DILocalVariable(name: "rc", scope: !4971, file: !2386, line: 1327, type: !119)
!4971 = distinct !DILexicalBlock(scope: !4961, file: !2386, line: 1326, column: 45)
!4972 = !DILocation(line: 0, scope: !4961)
!4973 = !DILocation(line: 1326, column: 2, scope: !4961)
!4974 = !DILocation(line: 1324, column: 9, scope: !4961)
!4975 = !DILocation(line: 1326, column: 13, scope: !4961)
!4976 = !DILocation(line: 1326, column: 19, scope: !4961)
!4977 = !DILocation(line: 1327, column: 21, scope: !4971)
!4978 = !DILocation(line: 1326, column: 36, scope: !4961)
!4979 = !DILocation(line: 1326, column: 39, scope: !4961)
!4980 = !DILocation(line: 1327, column: 24, scope: !4971)
!4981 = !DILocation(line: 1327, column: 16, scope: !4971)
!4982 = !DILocation(line: 1327, column: 12, scope: !4971)
!4983 = !DILocation(line: 0, scope: !4971)
!4984 = !DILocation(line: 1329, column: 10, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4971, file: !2386, line: 1329, column: 7)
!4986 = !DILocation(line: 1329, column: 7, scope: !4971)
!4987 = distinct !{!4987, !4973, !4988}
!4988 = !DILocation(line: 1333, column: 2, scope: !4961)
!4989 = !DILocation(line: 1336, column: 1, scope: !4961)
!4990 = distinct !DISubprogram(name: "encode_uint", scope: !2386, file: !2386, line: 788, type: !4991, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !4993)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!106, !2408, !4594, !106, !278}
!4993 = !{!4994, !4995, !4996, !4997, !4998, !4999, !5001, !5002}
!4994 = !DILocalVariable(name: "value", arg: 1, scope: !4990, file: !2386, line: 788, type: !2408)
!4995 = !DILocalVariable(name: "conv", arg: 2, scope: !4990, file: !2386, line: 789, type: !4594)
!4996 = !DILocalVariable(name: "bps", arg: 3, scope: !4990, file: !2386, line: 790, type: !106)
!4997 = !DILocalVariable(name: "bpe", arg: 4, scope: !4990, file: !2386, line: 791, type: !278)
!4998 = !DILocalVariable(name: "upcase", scope: !4990, file: !2386, line: 793, type: !345)
!4999 = !DILocalVariable(name: "radix", scope: !4990, file: !2386, line: 794, type: !5000)
!5000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5001 = !DILocalVariable(name: "bp", scope: !4990, file: !2386, line: 795, type: !106)
!5002 = !DILocalVariable(name: "lsv", scope: !5003, file: !2386, line: 798, type: !32)
!5003 = distinct !DILexicalBlock(scope: !4990, file: !2386, line: 797, column: 5)
!5004 = !DILocation(line: 0, scope: !4990)
!5005 = !DILocation(line: 793, column: 35, scope: !4990)
!5006 = !DILocation(line: 793, column: 24, scope: !4990)
!5007 = !DILocation(line: 793, column: 16, scope: !4990)
!5008 = !DILocation(line: 794, column: 29, scope: !4990)
!5009 = !DILocation(line: 795, column: 24, scope: !4990)
!5010 = !DILocation(line: 795, column: 17, scope: !4990)
!5011 = !DILocation(line: 797, column: 2, scope: !4990)
!5012 = !DILocation(line: 802, column: 9, scope: !5003)
!5013 = !DILocation(line: 798, column: 22, scope: !5003)
!5014 = !DILocation(line: 0, scope: !5003)
!5015 = !DILocation(line: 800, column: 16, scope: !5003)
!5016 = !DILocation(line: 800, column: 11, scope: !5003)
!5017 = !DILocation(line: 800, column: 4, scope: !5003)
!5018 = !DILocation(line: 800, column: 9, scope: !5003)
!5019 = !DILocation(line: 803, column: 18, scope: !4990)
!5020 = !DILocation(line: 803, column: 24, scope: !4990)
!5021 = !DILocation(line: 803, column: 2, scope: !5003)
!5022 = distinct !{!5022, !5011, !5023}
!5023 = !DILocation(line: 803, column: 37, scope: !4990)
!5024 = !DILocation(line: 808, column: 12, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4990, file: !2386, line: 808, column: 6)
!5026 = !DILocation(line: 808, column: 6, scope: !4990)
!5027 = !DILocation(line: 809, column: 7, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5025, file: !2386, line: 808, column: 23)
!5029 = !DILocation(line: 813, column: 3, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !2386, line: 811, column: 27)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !2386, line: 811, column: 14)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !2386, line: 809, column: 7)
!5033 = !DILocation(line: 0, scope: !5032)
!5034 = !DILocation(line: 818, column: 2, scope: !4990)
!5035 = distinct !DISubprogram(name: "store_count", scope: !2386, file: !2386, line: 1280, type: !5036, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5040)
!5036 = !DISubroutineType(types: !5037)
!5037 = !{null, !5038, !113, !119}
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 32)
!5039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4561)
!5040 = !{!5041, !5042, !5043}
!5041 = !DILocalVariable(name: "conv", arg: 1, scope: !5035, file: !2386, line: 1280, type: !5038)
!5042 = !DILocalVariable(name: "dp", arg: 2, scope: !5035, file: !2386, line: 1281, type: !113)
!5043 = !DILocalVariable(name: "count", arg: 3, scope: !5035, file: !2386, line: 1282, type: !119)
!5044 = !DILocation(line: 0, scope: !5035)
!5045 = !DILocation(line: 1284, column: 38, scope: !5035)
!5046 = !DILocation(line: 1284, column: 2, scope: !5035)
!5047 = !DILocation(line: 1286, column: 4, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5035, file: !2386, line: 1284, column: 50)
!5049 = !DILocation(line: 1286, column: 14, scope: !5048)
!5050 = !DILocation(line: 1287, column: 3, scope: !5048)
!5051 = !DILocation(line: 1289, column: 24, scope: !5048)
!5052 = !DILocation(line: 1289, column: 22, scope: !5048)
!5053 = !DILocation(line: 1290, column: 3, scope: !5048)
!5054 = !DILocation(line: 1292, column: 18, scope: !5048)
!5055 = !DILocation(line: 1292, column: 4, scope: !5048)
!5056 = !DILocation(line: 1292, column: 16, scope: !5048)
!5057 = !DILocation(line: 1293, column: 3, scope: !5048)
!5058 = !DILocation(line: 1295, column: 4, scope: !5048)
!5059 = !DILocation(line: 1295, column: 15, scope: !5048)
!5060 = !DILocation(line: 1296, column: 3, scope: !5048)
!5061 = !DILocation(line: 1298, column: 22, scope: !5048)
!5062 = !DILocation(line: 1298, column: 4, scope: !5048)
!5063 = !DILocation(line: 1298, column: 20, scope: !5048)
!5064 = !DILocation(line: 1299, column: 3, scope: !5048)
!5065 = !DILocation(line: 1301, column: 21, scope: !5048)
!5066 = !DILocation(line: 1301, column: 4, scope: !5048)
!5067 = !DILocation(line: 1301, column: 19, scope: !5048)
!5068 = !DILocation(line: 1302, column: 3, scope: !5048)
!5069 = !DILocation(line: 1304, column: 4, scope: !5048)
!5070 = !DILocation(line: 1304, column: 17, scope: !5048)
!5071 = !DILocation(line: 1305, column: 3, scope: !5048)
!5072 = !DILocation(line: 1307, column: 4, scope: !5048)
!5073 = !DILocation(line: 1307, column: 20, scope: !5048)
!5074 = !DILocation(line: 1308, column: 3, scope: !5048)
!5075 = !DILocation(line: 1316, column: 1, scope: !5035)
!5076 = distinct !DISubprogram(name: "isupper", scope: !5077, file: !5077, line: 16, type: !301, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5078)
!5077 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5078 = !{!5079}
!5079 = !DILocalVariable(name: "a", arg: 1, scope: !5076, file: !5077, line: 16, type: !119)
!5080 = !DILocation(line: 0, scope: !5076)
!5081 = !DILocation(line: 18, column: 29, scope: !5076)
!5082 = !DILocation(line: 18, column: 45, scope: !5076)
!5083 = !DILocation(line: 18, column: 2, scope: !5076)
!5084 = distinct !DISubprogram(name: "conversion_radix", scope: !2386, file: !2386, line: 761, type: !5085, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5087)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{!239, !107}
!5087 = !{!5088}
!5088 = !DILocalVariable(name: "specifier", arg: 1, scope: !5084, file: !2386, line: 761, type: !107)
!5089 = !DILocation(line: 0, scope: !5084)
!5090 = !DILocation(line: 763, column: 2, scope: !5084)
!5091 = !DILocation(line: 770, column: 3, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5084, file: !2386, line: 763, column: 21)
!5093 = !DILocation(line: 774, column: 3, scope: !5092)
!5094 = !DILocation(line: 0, scope: !5092)
!5095 = !DILocation(line: 776, column: 1, scope: !5084)
!5096 = distinct !DISubprogram(name: "extract_flags", scope: !2386, file: !2386, line: 339, type: !4938, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5097)
!5097 = !{!5098, !5099, !5100}
!5098 = !DILocalVariable(name: "conv", arg: 1, scope: !5096, file: !2386, line: 339, type: !4594)
!5099 = !DILocalVariable(name: "sp", arg: 2, scope: !5096, file: !2386, line: 340, type: !278)
!5100 = !DILocalVariable(name: "loop", scope: !5096, file: !2386, line: 342, type: !345)
!5101 = !DILocation(line: 0, scope: !5096)
!5102 = !DILocation(line: 344, column: 2, scope: !5096)
!5103 = !DILocation(line: 345, column: 11, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5096, file: !2386, line: 344, column: 5)
!5105 = !DILocation(line: 345, column: 3, scope: !5104)
!5106 = !DILocation(line: 351, column: 4, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5104, file: !2386, line: 345, column: 16)
!5108 = !DILocation(line: 354, column: 4, scope: !5107)
!5109 = !DILocation(line: 357, column: 4, scope: !5107)
!5110 = !DILocation(line: 360, column: 4, scope: !5107)
!5111 = !DILocation(line: 0, scope: !5107)
!5112 = !DILocation(line: 370, column: 12, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5096, file: !2386, line: 370, column: 6)
!5114 = !DILocation(line: 370, column: 22, scope: !5113)
!5115 = !DILocation(line: 371, column: 19, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5113, file: !2386, line: 370, column: 42)
!5117 = !DILocation(line: 372, column: 2, scope: !5116)
!5118 = !DILocation(line: 376, column: 2, scope: !5096)
!5119 = distinct !DISubprogram(name: "extract_width", scope: !2386, file: !2386, line: 388, type: !4938, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5120)
!5120 = !{!5121, !5122, !5123, !5124}
!5121 = !DILocalVariable(name: "conv", arg: 1, scope: !5119, file: !2386, line: 388, type: !4594)
!5122 = !DILocalVariable(name: "sp", arg: 2, scope: !5119, file: !2386, line: 389, type: !278)
!5123 = !DILocalVariable(name: "wp", scope: !5119, file: !2386, line: 398, type: !278)
!5124 = !DILocalVariable(name: "width", scope: !5119, file: !2386, line: 399, type: !239)
!5125 = !DILocation(line: 0, scope: !5119)
!5126 = !DILocation(line: 391, column: 8, scope: !5119)
!5127 = !DILocation(line: 391, column: 22, scope: !5119)
!5128 = !DILocation(line: 393, column: 6, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5119, file: !2386, line: 393, column: 6)
!5130 = !DILocation(line: 393, column: 10, scope: !5129)
!5131 = !DILocation(line: 393, column: 6, scope: !5119)
!5132 = !DILocation(line: 394, column: 20, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !2386, line: 393, column: 18)
!5134 = !DILocation(line: 395, column: 10, scope: !5133)
!5135 = !DILocation(line: 395, column: 3, scope: !5133)
!5136 = !DILocation(line: 399, column: 17, scope: !5119)
!5137 = !DILocation(line: 401, column: 6, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5119, file: !2386, line: 401, column: 6)
!5139 = !DILocation(line: 401, column: 9, scope: !5138)
!5140 = !DILocation(line: 401, column: 6, scope: !5119)
!5141 = !DILocation(line: 402, column: 23, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5138, file: !2386, line: 401, column: 16)
!5143 = !DILocation(line: 403, column: 9, scope: !5142)
!5144 = !DILocation(line: 403, column: 21, scope: !5142)
!5145 = !DILocation(line: 405, column: 11, scope: !5142)
!5146 = !DILocation(line: 404, column: 21, scope: !5142)
!5147 = !DILocation(line: 406, column: 2, scope: !5142)
!5148 = !DILocation(line: 409, column: 1, scope: !5119)
!5149 = distinct !DISubprogram(name: "extract_prec", scope: !2386, file: !2386, line: 420, type: !4938, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5150)
!5150 = !{!5151, !5152, !5153}
!5151 = !DILocalVariable(name: "conv", arg: 1, scope: !5149, file: !2386, line: 420, type: !4594)
!5152 = !DILocalVariable(name: "sp", arg: 2, scope: !5149, file: !2386, line: 421, type: !278)
!5153 = !DILocalVariable(name: "prec", scope: !5149, file: !2386, line: 435, type: !239)
!5154 = !DILocation(line: 0, scope: !5149)
!5155 = !DILocation(line: 423, column: 24, scope: !5149)
!5156 = !DILocation(line: 423, column: 28, scope: !5149)
!5157 = !DILocation(line: 423, column: 8, scope: !5149)
!5158 = !DILocation(line: 423, column: 21, scope: !5149)
!5159 = !DILocation(line: 425, column: 6, scope: !5149)
!5160 = !DILocation(line: 428, column: 2, scope: !5149)
!5161 = !DILocation(line: 430, column: 6, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5149, file: !2386, line: 430, column: 6)
!5163 = !DILocation(line: 430, column: 10, scope: !5162)
!5164 = !DILocation(line: 430, column: 6, scope: !5149)
!5165 = !DILocation(line: 431, column: 19, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5162, file: !2386, line: 430, column: 18)
!5167 = !DILocation(line: 432, column: 10, scope: !5166)
!5168 = !DILocation(line: 432, column: 3, scope: !5166)
!5169 = !DILocation(line: 435, column: 16, scope: !5149)
!5170 = !DILocation(line: 437, column: 8, scope: !5149)
!5171 = !DILocation(line: 437, column: 19, scope: !5149)
!5172 = !DILocation(line: 439, column: 10, scope: !5149)
!5173 = !DILocation(line: 438, column: 20, scope: !5149)
!5174 = !DILocation(line: 441, column: 9, scope: !5149)
!5175 = !DILocation(line: 442, column: 1, scope: !5149)
!5176 = distinct !DISubprogram(name: "extract_length", scope: !2386, file: !2386, line: 453, type: !4938, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5177)
!5177 = !{!5178, !5179}
!5178 = !DILocalVariable(name: "conv", arg: 1, scope: !5176, file: !2386, line: 453, type: !4594)
!5179 = !DILocalVariable(name: "sp", arg: 2, scope: !5176, file: !2386, line: 454, type: !278)
!5180 = !DILocation(line: 0, scope: !5176)
!5181 = !DILocation(line: 456, column: 10, scope: !5176)
!5182 = !DILocation(line: 456, column: 2, scope: !5176)
!5183 = !DILocation(line: 458, column: 8, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !2386, line: 458, column: 7)
!5185 = distinct !DILexicalBlock(scope: !5176, file: !2386, line: 456, column: 15)
!5186 = !DILocation(line: 458, column: 7, scope: !5184)
!5187 = !DILocation(line: 458, column: 13, scope: !5184)
!5188 = !DILocation(line: 0, scope: !5184)
!5189 = !DILocation(line: 458, column: 7, scope: !5185)
!5190 = !DILocation(line: 459, column: 21, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5184, file: !2386, line: 458, column: 21)
!5192 = !DILocation(line: 460, column: 4, scope: !5191)
!5193 = !DILocation(line: 461, column: 3, scope: !5191)
!5194 = !DILocation(line: 462, column: 21, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5184, file: !2386, line: 461, column: 10)
!5196 = !DILocation(line: 466, column: 8, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5185, file: !2386, line: 466, column: 7)
!5198 = !DILocation(line: 466, column: 7, scope: !5197)
!5199 = !DILocation(line: 466, column: 13, scope: !5197)
!5200 = !DILocation(line: 0, scope: !5197)
!5201 = !DILocation(line: 466, column: 7, scope: !5185)
!5202 = !DILocation(line: 467, column: 21, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5197, file: !2386, line: 466, column: 21)
!5204 = !DILocation(line: 468, column: 4, scope: !5203)
!5205 = !DILocation(line: 469, column: 3, scope: !5203)
!5206 = !DILocation(line: 470, column: 21, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5197, file: !2386, line: 469, column: 10)
!5208 = !DILocation(line: 474, column: 9, scope: !5185)
!5209 = !DILocation(line: 474, column: 20, scope: !5185)
!5210 = !DILocation(line: 475, column: 3, scope: !5185)
!5211 = !DILocation(line: 476, column: 3, scope: !5185)
!5212 = !DILocation(line: 478, column: 9, scope: !5185)
!5213 = !DILocation(line: 478, column: 20, scope: !5185)
!5214 = !DILocation(line: 479, column: 3, scope: !5185)
!5215 = !DILocation(line: 480, column: 3, scope: !5185)
!5216 = !DILocation(line: 482, column: 9, scope: !5185)
!5217 = !DILocation(line: 482, column: 20, scope: !5185)
!5218 = !DILocation(line: 483, column: 3, scope: !5185)
!5219 = !DILocation(line: 484, column: 3, scope: !5185)
!5220 = !DILocation(line: 486, column: 9, scope: !5185)
!5221 = !DILocation(line: 486, column: 20, scope: !5185)
!5222 = !DILocation(line: 487, column: 3, scope: !5185)
!5223 = !DILocation(line: 492, column: 21, scope: !5185)
!5224 = !DILocation(line: 493, column: 3, scope: !5185)
!5225 = !DILocation(line: 495, column: 9, scope: !5185)
!5226 = !DILocation(line: 495, column: 20, scope: !5185)
!5227 = !DILocation(line: 496, column: 3, scope: !5185)
!5228 = !DILocation(line: 498, column: 2, scope: !5176)
!5229 = distinct !DISubprogram(name: "extract_specifier", scope: !2386, file: !2386, line: 513, type: !4938, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5230)
!5230 = !{!5231, !5232, !5233, !5234}
!5231 = !DILocalVariable(name: "conv", arg: 1, scope: !5229, file: !2386, line: 513, type: !4594)
!5232 = !DILocalVariable(name: "sp", arg: 2, scope: !5229, file: !2386, line: 514, type: !278)
!5233 = !DILocalVariable(name: "unsupported", scope: !5229, file: !2386, line: 516, type: !345)
!5234 = !DILabel(scope: !5235, name: "int_conv", file: !2386, line: 526)
!5235 = distinct !DILexicalBlock(scope: !5229, file: !2386, line: 520, column: 27)
!5236 = !DILocation(line: 0, scope: !5229)
!5237 = !DILocation(line: 518, column: 20, scope: !5229)
!5238 = !DILocation(line: 518, column: 8, scope: !5229)
!5239 = !DILocation(line: 518, column: 18, scope: !5229)
!5240 = !DILocation(line: 520, column: 2, scope: !5229)
!5241 = !DILocation(line: 525, column: 3, scope: !5235)
!5242 = !DILocation(line: 0, scope: !5235)
!5243 = !DILocation(line: 526, column: 1, scope: !5235)
!5244 = !DILocation(line: 528, column: 24, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5235, file: !2386, line: 528, column: 7)
!5246 = !DILocation(line: 528, column: 7, scope: !5235)
!5247 = !DILocation(line: 535, column: 23, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5235, file: !2386, line: 535, column: 7)
!5249 = !DILocation(line: 535, column: 7, scope: !5235)
!5250 = !DILocation(line: 536, column: 36, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5248, file: !2386, line: 535, column: 31)
!5252 = !DILocation(line: 537, column: 3, scope: !5251)
!5253 = !DILocation(line: 570, column: 9, scope: !5235)
!5254 = !DILocation(line: 570, column: 23, scope: !5235)
!5255 = !DILocation(line: 575, column: 4, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !2386, line: 573, column: 48)
!5257 = distinct !DILexicalBlock(scope: !5235, file: !2386, line: 573, column: 7)
!5258 = !DILocation(line: 603, column: 9, scope: !5235)
!5259 = !DILocation(line: 603, column: 23, scope: !5235)
!5260 = !DILocation(line: 605, column: 24, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5235, file: !2386, line: 605, column: 7)
!5262 = !DILocation(line: 605, column: 7, scope: !5235)
!5263 = !DILocation(line: 612, column: 9, scope: !5235)
!5264 = !DILocation(line: 612, column: 23, scope: !5235)
!5265 = !DILocation(line: 619, column: 24, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5235, file: !2386, line: 619, column: 7)
!5267 = !DILocation(line: 619, column: 7, scope: !5235)
!5268 = !DILocation(line: 625, column: 9, scope: !5235)
!5269 = !DILocation(line: 625, column: 17, scope: !5235)
!5270 = !DILocation(line: 626, column: 3, scope: !5235)
!5271 = !DILocation(line: 629, column: 20, scope: !5229)
!5272 = !DILocation(line: 629, column: 8, scope: !5229)
!5273 = !DILocation(line: 518, column: 23, scope: !5229)
!5274 = !DILocation(line: 631, column: 2, scope: !5229)
!5275 = distinct !DISubprogram(name: "extract_decimal", scope: !2386, file: !2386, line: 318, type: !5276, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!239, !277}
!5278 = !{!5279, !5280, !5281}
!5279 = !DILocalVariable(name: "str", arg: 1, scope: !5275, file: !2386, line: 318, type: !277)
!5280 = !DILocalVariable(name: "sp", scope: !5275, file: !2386, line: 320, type: !278)
!5281 = !DILocalVariable(name: "val", scope: !5275, file: !2386, line: 321, type: !239)
!5282 = !DILocation(line: 0, scope: !5275)
!5283 = !DILocation(line: 320, column: 19, scope: !5275)
!5284 = !DILocation(line: 323, column: 37, scope: !5275)
!5285 = !DILocation(line: 323, column: 17, scope: !5275)
!5286 = !DILocation(line: 323, column: 9, scope: !5275)
!5287 = !DILocation(line: 323, column: 2, scope: !5275)
!5288 = !DILocation(line: 324, column: 13, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5275, file: !2386, line: 323, column: 43)
!5290 = !DILocation(line: 324, column: 24, scope: !5289)
!5291 = !DILocation(line: 324, column: 19, scope: !5289)
!5292 = !DILocation(line: 324, column: 27, scope: !5289)
!5293 = distinct !{!5293, !5287, !5294}
!5294 = !DILocation(line: 325, column: 2, scope: !5275)
!5295 = !DILocation(line: 326, column: 7, scope: !5275)
!5296 = !DILocation(line: 327, column: 2, scope: !5275)
!5297 = distinct !DISubprogram(name: "isdigit", scope: !5077, file: !5077, line: 43, type: !301, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !5298)
!5298 = !{!5299}
!5299 = !DILocalVariable(name: "a", arg: 1, scope: !5297, file: !5077, line: 43, type: !119)
!5300 = !DILocation(line: 0, scope: !5297)
!5301 = !DILocation(line: 45, column: 29, scope: !5297)
!5302 = !DILocation(line: 45, column: 45, scope: !5297)
!5303 = !DILocation(line: 45, column: 2, scope: !5297)
!5304 = distinct !DISubprogram(name: "assert_post_action", scope: !5305, file: !5305, line: 26, type: !5306, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2416, retainedNodes: !5308)
!5305 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5306 = !DISubroutineType(types: !5307)
!5307 = !{null, !278, !32}
!5308 = !{!5309, !5310}
!5309 = !DILocalVariable(name: "file", arg: 1, scope: !5304, file: !5305, line: 26, type: !278)
!5310 = !DILocalVariable(name: "line", arg: 2, scope: !5304, file: !5305, line: 26, type: !32)
!5311 = !DILocation(line: 0, scope: !5304)
!5312 = !DILocation(line: 43, column: 2, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5304, file: !5305, line: 43, column: 2)
!5314 = !{i64 2154851777, i64 2154851793, i64 2154851819, i64 2154851847, i64 2154851867}
!5315 = !DILocation(line: 44, column: 1, scope: !5304)
!5316 = distinct !DISubprogram(name: "assert_print", scope: !5305, file: !5305, line: 46, type: !4287, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2416, retainedNodes: !5317)
!5317 = !{!5318, !5319}
!5318 = !DILocalVariable(name: "fmt", arg: 1, scope: !5316, file: !5305, line: 46, type: !278)
!5319 = !DILocalVariable(name: "ap", scope: !5316, file: !5305, line: 48, type: !5320)
!5320 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3293, line: 99, baseType: !5321)
!5321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3293, line: 40, baseType: !5322)
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5305, baseType: !5323)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5324)
!5324 = !{!5325}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5323, file: !5305, line: 48, baseType: !113, size: 32)
!5326 = !DILocation(line: 0, scope: !5316)
!5327 = !DILocation(line: 48, column: 2, scope: !5316)
!5328 = !DILocation(line: 48, column: 10, scope: !5316)
!5329 = !DILocation(line: 50, column: 2, scope: !5316)
!5330 = !DILocation(line: 52, column: 2, scope: !5316)
!5331 = !DILocation(line: 54, column: 2, scope: !5316)
!5332 = !DILocation(line: 55, column: 1, scope: !5316)
!5333 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5334, file: !5334, line: 9, type: !2960, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !2032)
!5334 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!5335 = !DILocation(line: 11, column: 1, scope: !5333)
!5336 = !{i64 2147565454, i64 2147565497, i64 2147565537}
!5337 = !DILocation(line: 12, column: 1, scope: !5333)
!5338 = !{i64 2147569681, i64 2147569724, i64 2147569764}
!5339 = !DILocation(line: 13, column: 1, scope: !5333)
!5340 = !{i64 2147569890, i64 2147569933, i64 2147569973}
!5341 = !DILocation(line: 14, column: 1, scope: !5333)
!5342 = !{i64 2147570059, i64 2147570102, i64 2147570142}
!5343 = !DILocation(line: 15, column: 1, scope: !5333)
!5344 = !{i64 2147570222, i64 2147570265, i64 2147570305}
!5345 = !DILocation(line: 16, column: 1, scope: !5333)
!5346 = !{i64 2147570406, i64 2147570449, i64 2147570489}
!5347 = !DILocation(line: 17, column: 1, scope: !5333)
!5348 = !{i64 2147570585, i64 2147570628, i64 2147570668}
!5349 = !DILocation(line: 18, column: 1, scope: !5333)
!5350 = !{i64 2147570828, i64 2147570871, i64 2147570911}
!5351 = !DILocation(line: 19, column: 1, scope: !5333)
!5352 = !{i64 2147571063, i64 2147571106, i64 2147571146}
!5353 = !DILocation(line: 20, column: 1, scope: !5333)
!5354 = !{i64 2147571250, i64 2147571293, i64 2147571333}
!5355 = !DILocation(line: 21, column: 1, scope: !5333)
!5356 = !{i64 2147571466, i64 2147571509, i64 2147571549}
!5357 = !DILocation(line: 22, column: 1, scope: !5333)
!5358 = !{i64 2147571669, i64 2147571712, i64 2147571752}
!5359 = !DILocation(line: 23, column: 1, scope: !5333)
!5360 = !{i64 2147571872, i64 2147571915, i64 2147571955}
!5361 = !DILocation(line: 24, column: 1, scope: !5333)
!5362 = !{i64 2147572047, i64 2147572090, i64 2147572130}
!5363 = !DILocation(line: 25, column: 1, scope: !5333)
!5364 = !{i64 2147572255, i64 2147572298, i64 2147572338}
!5365 = !DILocation(line: 26, column: 1, scope: !5333)
!5366 = !{i64 2147572459, i64 2147572502, i64 2147572542}
!5367 = !DILocation(line: 27, column: 1, scope: !5333)
!5368 = !{i64 2147572652, i64 2147572695, i64 2147572735}
!5369 = !DILocation(line: 28, column: 1, scope: !5333)
!5370 = !{i64 2147572854, i64 2147572897, i64 2147572937}
!5371 = !DILocation(line: 29, column: 1, scope: !5333)
!5372 = !{i64 2147573053, i64 2147573096, i64 2147573136}
!5373 = !DILocation(line: 30, column: 1, scope: !5333)
!5374 = !{i64 2147573280, i64 2147573323, i64 2147573363}
!5375 = !DILocation(line: 31, column: 1, scope: !5333)
!5376 = !{i64 2147573482, i64 2147573525, i64 2147573565}
!5377 = !DILocation(line: 32, column: 1, scope: !5333)
!5378 = !{i64 2147573697, i64 2147573740, i64 2147573780}
!5379 = !DILocation(line: 33, column: 1, scope: !5333)
!5380 = !{i64 2147573914, i64 2147573957, i64 2147573997}
!5381 = !DILocation(line: 34, column: 1, scope: !5333)
!5382 = !{i64 2147574086, i64 2147574129, i64 2147574169}
!5383 = !DILocation(line: 35, column: 1, scope: !5333)
!5384 = !{i64 2147574288, i64 2147574331, i64 2147574371}
!5385 = !DILocation(line: 36, column: 1, scope: !5333)
!5386 = !{i64 2147574514, i64 2147574557, i64 2147574597}
!5387 = !DILocation(line: 37, column: 1, scope: !5333)
!5388 = !{i64 2147574713, i64 2147574756, i64 2147574796}
!5389 = !DILocation(line: 38, column: 1, scope: !5333)
!5390 = !{i64 2147574888, i64 2147574931, i64 2147574971}
!5391 = !DILocation(line: 39, column: 1, scope: !5333)
!5392 = !{i64 2147575156, i64 2147575199, i64 2147575239}
!5393 = !DILocation(line: 40, column: 1, scope: !5333)
!5394 = !{i64 2147575409, i64 2147575452, i64 2147575492}
!5395 = !DILocation(line: 41, column: 1, scope: !5333)
!5396 = !{i64 2147575650, i64 2147575693, i64 2147575733}
!5397 = !DILocation(line: 42, column: 1, scope: !5333)
!5398 = !{i64 2147575885, i64 2147575928, i64 2147575968}
!5399 = !DILocation(line: 43, column: 1, scope: !5333)
!5400 = !{i64 2147576117, i64 2147576160, i64 2147576200}
!5401 = !DILocation(line: 44, column: 1, scope: !5333)
!5402 = !{i64 2147576343, i64 2147576386, i64 2147576426}
!5403 = !DILocation(line: 45, column: 1, scope: !5333)
!5404 = !{i64 2147576581, i64 2147576624, i64 2147576664}
!5405 = !DILocation(line: 46, column: 1, scope: !5333)
!5406 = !{i64 2147576807, i64 2147576850, i64 2147576890}
!5407 = !DILocation(line: 47, column: 1, scope: !5333)
!5408 = !{i64 2147577042, i64 2147577085, i64 2147577125}
!5409 = !DILocation(line: 48, column: 1, scope: !5333)
!5410 = !{i64 2147577277, i64 2147577320, i64 2147577360}
!5411 = !DILocation(line: 49, column: 1, scope: !5333)
!5412 = !{i64 2147577515, i64 2147577558, i64 2147577598}
!5413 = !DILocation(line: 50, column: 1, scope: !5333)
!5414 = !{i64 2147577789, i64 2147577832, i64 2147577872}
!5415 = !DILocation(line: 51, column: 1, scope: !5333)
!5416 = !{i64 2147578027, i64 2147578070, i64 2147578110}
!5417 = !DILocation(line: 52, column: 1, scope: !5333)
!5418 = !{i64 2147578280, i64 2147578323, i64 2147578363}
!5419 = !DILocation(line: 53, column: 1, scope: !5333)
!5420 = !{i64 2147582585, i64 2147582628, i64 2147582668}
!5421 = !DILocation(line: 54, column: 1, scope: !5333)
!5422 = !{i64 2147582835, i64 2147582878, i64 2147582918}
!5423 = !DILocation(line: 55, column: 1, scope: !5333)
!5424 = !{i64 2147583076, i64 2147583119, i64 2147583159}
!5425 = !DILocation(line: 56, column: 1, scope: !5333)
!5426 = !{i64 2147583323, i64 2147583366, i64 2147583406}
!5427 = !DILocation(line: 57, column: 1, scope: !5333)
!5428 = !{i64 2147583558, i64 2147583601, i64 2147583641}
!5429 = !DILocation(line: 58, column: 1, scope: !5333)
!5430 = !{i64 2147583793, i64 2147583836, i64 2147583876}
!5431 = !DILocation(line: 59, column: 1, scope: !5333)
!5432 = !{i64 2147584028, i64 2147584071, i64 2147584111}
!5433 = !DILocation(line: 60, column: 1, scope: !5333)
!5434 = !{i64 2147584266, i64 2147584309, i64 2147584349}
!5435 = !DILocation(line: 61, column: 1, scope: !5333)
!5436 = !{i64 2147584507, i64 2147584550, i64 2147584590}
!5437 = !DILocation(line: 62, column: 1, scope: !5333)
!5438 = !{i64 2147584787, i64 2147584830, i64 2147584870}
!5439 = !DILocation(line: 63, column: 1, scope: !5333)
!5440 = !{i64 2147585046, i64 2147585089, i64 2147585129}
!5441 = !DILocation(line: 64, column: 1, scope: !5333)
!5442 = !{i64 2147585284, i64 2147585327, i64 2147585367}
!5443 = !DILocation(line: 65, column: 1, scope: !5333)
!5444 = !{i64 2147585543, i64 2147585586, i64 2147585626}
!5445 = !DILocation(line: 66, column: 1, scope: !5333)
!5446 = !{i64 2147585772, i64 2147585815, i64 2147585855}
!5447 = !DILocation(line: 67, column: 1, scope: !5333)
!5448 = !{i64 2147585980, i64 2147586023, i64 2147586063}
!5449 = !DILocation(line: 68, column: 1, scope: !5333)
!5450 = !{i64 2147586191, i64 2147586234, i64 2147586274}
!5451 = !DILocation(line: 69, column: 1, scope: !5333)
!5452 = !{i64 2147586426, i64 2147586469, i64 2147586509}
!5453 = !DILocation(line: 70, column: 1, scope: !5333)
!5454 = !{i64 2147586655, i64 2147586698, i64 2147586738}
!5455 = !DILocation(line: 71, column: 1, scope: !5333)
!5456 = !{i64 2147586872, i64 2147586915, i64 2147586955}
!5457 = !DILocation(line: 72, column: 1, scope: !5333)
!5458 = !{i64 2147587101, i64 2147587144, i64 2147587184}
!5459 = !DILocation(line: 73, column: 1, scope: !5333)
!5460 = !{i64 2147587339, i64 2147587382, i64 2147587422}
!5461 = !DILocation(line: 74, column: 1, scope: !5333)
!5462 = !{i64 2147587571, i64 2147587614, i64 2147587654}
!5463 = !DILocation(line: 75, column: 1, scope: !5333)
!5464 = !{i64 2147587797, i64 2147587840, i64 2147587880}
!5465 = !DILocation(line: 76, column: 1, scope: !5333)
!5466 = !{i64 2147588014, i64 2147588057, i64 2147588097}
!5467 = !DILocation(line: 77, column: 1, scope: !5333)
!5468 = !{i64 2147588246, i64 2147588289, i64 2147588329}
!5469 = !DILocation(line: 78, column: 1, scope: !5333)
!5470 = !{i64 2147588472, i64 2147588515, i64 2147588555}
!5471 = !DILocation(line: 79, column: 1, scope: !5333)
!5472 = !{i64 2147588686, i64 2147588729, i64 2147588769}
!5473 = !DILocation(line: 80, column: 1, scope: !5333)
!5474 = !{i64 2147588906, i64 2147588949, i64 2147588989}
!5475 = !DILocation(line: 81, column: 1, scope: !5333)
!5476 = !{i64 2147589138, i64 2147589181, i64 2147589221}
!5477 = !DILocation(line: 82, column: 1, scope: !5333)
!5478 = !{i64 2147589346, i64 2147589389, i64 2147589429}
!5479 = !DILocation(line: 83, column: 1, scope: !5333)
!5480 = !{i64 2147589551, i64 2147589594, i64 2147589634}
!5481 = !DILocation(line: 84, column: 1, scope: !5333)
!5482 = !{i64 2147589768, i64 2147589811, i64 2147589851}
!5483 = !DILocation(line: 85, column: 1, scope: !5333)
!5484 = !{i64 2147589982, i64 2147590025, i64 2147590065}
!5485 = !DILocation(line: 86, column: 1, scope: !5333)
!5486 = !{i64 2147590208, i64 2147590251, i64 2147590291}
!5487 = !DILocation(line: 87, column: 1, scope: !5333)
!5488 = !{i64 2147590428, i64 2147590471, i64 2147590511}
!5489 = !DILocation(line: 88, column: 1, scope: !5333)
!5490 = !{i64 2147594694, i64 2147594737, i64 2147594777}
!5491 = !DILocation(line: 89, column: 1, scope: !5333)
!5492 = !{i64 2147594926, i64 2147594969, i64 2147595009}
!5493 = !DILocation(line: 90, column: 1, scope: !5333)
!5494 = !{i64 2147595161, i64 2147595204, i64 2147595244}
!5495 = !DILocation(line: 91, column: 1, scope: !5333)
!5496 = !{i64 2147595411, i64 2147595454, i64 2147595494}
!5497 = !DILocation(line: 92, column: 1, scope: !5333)
!5498 = !{i64 2147595661, i64 2147595704, i64 2147595744}
!5499 = !DILocation(line: 93, column: 1, scope: !5333)
!5500 = !{i64 2147595899, i64 2147595942, i64 2147595982}
!5501 = !DILocation(line: 94, column: 1, scope: !5333)
!5502 = !{i64 2147596110, i64 2147596153, i64 2147596193}
!5503 = !DILocation(line: 95, column: 1, scope: !5333)
!5504 = !{i64 2147596327, i64 2147596370, i64 2147596410}
!5505 = !DILocation(line: 96, column: 1, scope: !5333)
!5506 = !{i64 2147596523, i64 2147596566, i64 2147596606}
!5507 = !DILocation(line: 97, column: 1, scope: !5333)
!5508 = !{i64 2147596725, i64 2147596768, i64 2147596808}
!5509 = !DILocation(line: 98, column: 1, scope: !5333)
!5510 = !{i64 2147596918, i64 2147596961, i64 2147597001}
!5511 = !DILocation(line: 99, column: 1, scope: !5333)
!5512 = !{i64 2147597126, i64 2147597169, i64 2147597209}
!5513 = !DILocation(line: 100, column: 1, scope: !5333)
!5514 = !{i64 2147597322, i64 2147597365, i64 2147597405}
!5515 = !DILocation(line: 101, column: 1, scope: !5333)
!5516 = !{i64 2147597572, i64 2147597615, i64 2147597655}
!5517 = !DILocation(line: 102, column: 1, scope: !5333)
!5518 = !{i64 2147597783, i64 2147597826, i64 2147597866}
!5519 = !DILocation(line: 103, column: 1, scope: !5333)
!5520 = !{i64 2147597982, i64 2147598025, i64 2147598065}
!5521 = !DILocation(line: 104, column: 1, scope: !5333)
!5522 = !{i64 2147598157, i64 2147598200, i64 2147598240}
!5523 = !DILocation(line: 105, column: 1, scope: !5333)
!5524 = !{i64 2147598341, i64 2147598384, i64 2147598424}
!5525 = !DILocation(line: 106, column: 1, scope: !5333)
!5526 = !{i64 2147598543, i64 2147598586, i64 2147598626}
!5527 = !DILocation(line: 107, column: 1, scope: !5333)
!5528 = !{i64 2147598724, i64 2147598767, i64 2147598807}
!5529 = !DILocation(line: 108, column: 1, scope: !5333)
!5530 = !{i64 2147598923, i64 2147598966, i64 2147599006}
!5531 = !DILocation(line: 109, column: 1, scope: !5333)
!5532 = !{i64 2147599128, i64 2147599171, i64 2147599211}
!5533 = !DILocation(line: 110, column: 1, scope: !5333)
!5534 = !{i64 2147599321, i64 2147599364, i64 2147599404}
!5535 = !DILocation(line: 111, column: 1, scope: !5333)
!5536 = !{i64 2147599487, i64 2147599530, i64 2147599570}
!5537 = !DILocation(line: 112, column: 1, scope: !5333)
!5538 = !{i64 2147599671, i64 2147599714, i64 2147599754}
!5539 = !DILocation(line: 113, column: 1, scope: !5333)
!5540 = !{i64 2147599861, i64 2147599904, i64 2147599944}
!5541 = !DILocation(line: 114, column: 1, scope: !5333)
!5542 = !{i64 2147600045, i64 2147600088, i64 2147600128}
!5543 = !DILocation(line: 115, column: 1, scope: !5333)
!5544 = !{i64 2147600259, i64 2147600302, i64 2147600342}
!5545 = !DILocation(line: 116, column: 1, scope: !5333)
!5546 = !{i64 2147600470, i64 2147600513, i64 2147600553}
!5547 = !DILocation(line: 117, column: 1, scope: !5333)
!5548 = !{i64 2147600693, i64 2147600736, i64 2147600776}
!5549 = !DILocation(line: 118, column: 1, scope: !5333)
!5550 = !{i64 2147600877, i64 2147600920, i64 2147600960}
!5551 = !DILocation(line: 119, column: 1, scope: !5333)
!5552 = !{i64 2147601091, i64 2147601134, i64 2147601174}
!5553 = !DILocation(line: 120, column: 1, scope: !5333)
!5554 = !{i64 2147601257, i64 2147601300, i64 2147601340}
!5555 = !DILocation(line: 121, column: 1, scope: !5333)
!5556 = !{i64 2147601438, i64 2147601481, i64 2147601521}
!5557 = !DILocation(line: 122, column: 1, scope: !5333)
!5558 = !{i64 2147601631, i64 2147601674, i64 2147601714}
!5559 = !DILocation(line: 123, column: 1, scope: !5333)
!5560 = !{i64 2147601857, i64 2147601900, i64 2147601940}
!5561 = !DILocation(line: 124, column: 1, scope: !5333)
!5562 = !{i64 2147602071, i64 2147602114, i64 2147602154}
!5563 = !DILocation(line: 125, column: 1, scope: !5333)
!5564 = !{i64 2147602297, i64 2147602340, i64 2147602380}
!5565 = !DILocation(line: 126, column: 1, scope: !5333)
!5566 = !{i64 2147602514, i64 2147602557, i64 2147602597}
!5567 = !DILocation(line: 127, column: 1, scope: !5333)
!5568 = !{i64 2147602791, i64 2147602834, i64 2147602874}
!5569 = !DILocation(line: 128, column: 1, scope: !5333)
!5570 = !{i64 2147603017, i64 2147603060, i64 2147603100}
!5571 = !DILocation(line: 129, column: 1, scope: !5333)
!5572 = !{i64 2147603225, i64 2147603268, i64 2147603308}
!5573 = !DILocation(line: 130, column: 1, scope: !5333)
!5574 = !{i64 2147603421, i64 2147603464, i64 2147603504}
!5575 = !DILocation(line: 131, column: 1, scope: !5333)
!5576 = !{i64 2147603686, i64 2147603729, i64 2147603769}
!5577 = !DILocation(line: 132, column: 1, scope: !5333)
!5578 = !{i64 2147607961, i64 2147608004, i64 2147608044}
!5579 = !DILocation(line: 133, column: 1, scope: !5333)
!5580 = !{i64 2147608136, i64 2147608179, i64 2147608219}
!5581 = !DILocation(line: 134, column: 1, scope: !5333)
!5582 = !{i64 2147608390, i64 2147608433, i64 2147608473}
!5583 = !DILocation(line: 135, column: 1, scope: !5333)
!5584 = !{i64 2147608589, i64 2147608632, i64 2147608672}
!5585 = !DILocation(line: 136, column: 1, scope: !5333)
!5586 = !{i64 2147608831, i64 2147608874, i64 2147608914}
!5587 = !DILocation(line: 137, column: 1, scope: !5333)
!5588 = !{i64 2147608994, i64 2147609037, i64 2147609077}
!5589 = !DILocation(line: 138, column: 1, scope: !5333)
!5590 = !{i64 2147609181, i64 2147609224, i64 2147609264}
!5591 = !DILocation(line: 139, column: 1, scope: !5333)
!5592 = !{i64 2147609389, i64 2147609432, i64 2147609472}
!5593 = !DILocation(line: 140, column: 1, scope: !5333)
!5594 = !{i64 2147609585, i64 2147609628, i64 2147609668}
!5595 = !DILocation(line: 141, column: 1, scope: !5333)
!5596 = !{i64 2147609778, i64 2147609821, i64 2147609861}
!5597 = !DILocation(line: 142, column: 1, scope: !5333)
!5598 = !{i64 2147609961, i64 2147610004, i64 2147610044}
!5599 = !DILocation(line: 143, column: 1, scope: !5333)
!5600 = !{i64 2147610175, i64 2147610218, i64 2147610258}
!5601 = !DILocation(line: 144, column: 1, scope: !5333)
!5602 = !{i64 2147610386, i64 2147610429, i64 2147610469}
!5603 = !DILocation(line: 145, column: 1, scope: !5333)
!5604 = !{i64 2147610606, i64 2147610649, i64 2147610689}
!5605 = !DILocation(line: 146, column: 1, scope: !5333)
!5606 = !{i64 2147610813, i64 2147610856, i64 2147610896}
!5607 = !DILocation(line: 147, column: 1, scope: !5333)
!5608 = !{i64 2147611086, i64 2147611129, i64 2147611169}
!5609 = !DILocation(line: 148, column: 1, scope: !5333)
!5610 = !{i64 2147611334, i64 2147611377, i64 2147611417}
!5611 = !DILocation(line: 149, column: 1, scope: !5333)
!5612 = !{i64 2147611533, i64 2147611576, i64 2147611616}
!5613 = !DILocation(line: 150, column: 1, scope: !5333)
!5614 = !{i64 2147611768, i64 2147611811, i64 2147611851}
!5615 = !DILocation(line: 151, column: 1, scope: !5333)
!5616 = !{i64 2147612018, i64 2147612061, i64 2147612101}
!5617 = !DILocation(line: 152, column: 1, scope: !5333)
!5618 = !{i64 2147612220, i64 2147612263, i64 2147612303}
!5619 = !DILocation(line: 153, column: 1, scope: !5333)
!5620 = !{i64 2147612443, i64 2147612486, i64 2147612526}
!5621 = !DILocation(line: 154, column: 1, scope: !5333)
!5622 = !{i64 2147612657, i64 2147612700, i64 2147612740}
!5623 = !DILocation(line: 155, column: 1, scope: !5333)
!5624 = !{i64 2147612901, i64 2147612944, i64 2147612984}
!5625 = !DILocation(line: 156, column: 1, scope: !5333)
!5626 = !{i64 2147613130, i64 2147613173, i64 2147613213}
!5627 = !DILocation(line: 157, column: 1, scope: !5333)
!5628 = !{i64 2147613359, i64 2147613402, i64 2147613442}
!5629 = !DILocation(line: 158, column: 1, scope: !5333)
!5630 = !{i64 2147613567, i64 2147613610, i64 2147613650}
!5631 = !DILocation(line: 159, column: 1, scope: !5333)
!5632 = !{i64 2147613805, i64 2147613848, i64 2147613888}
!5633 = !DILocation(line: 160, column: 1, scope: !5333)
!5634 = !{i64 2147614031, i64 2147614074, i64 2147614114}
!5635 = !DILocation(line: 161, column: 1, scope: !5333)
!5636 = !{i64 2147614290, i64 2147614333, i64 2147614373}
!5637 = !DILocation(line: 162, column: 1, scope: !5333)
!5638 = !{i64 2147614510, i64 2147614553, i64 2147614593}
!5639 = !DILocation(line: 163, column: 1, scope: !5333)
!5640 = !{i64 2147614742, i64 2147614785, i64 2147614825}
!5641 = !DILocation(line: 164, column: 1, scope: !5333)
!5642 = !{i64 2147614983, i64 2147615026, i64 2147615066}
!5643 = !DILocation(line: 165, column: 1, scope: !5333)
!5644 = !{i64 2147615224, i64 2147615267, i64 2147615307}
!5645 = !DILocation(line: 166, column: 1, scope: !5333)
!5646 = !{i64 2147615447, i64 2147615490, i64 2147615530}
!5647 = !DILocation(line: 167, column: 1, scope: !5333)
!5648 = !{i64 2147615664, i64 2147615707, i64 2147615747}
!5649 = !DILocation(line: 168, column: 1, scope: !5333)
!5650 = !{i64 2147615905, i64 2147615948, i64 2147615988}
!5651 = !DILocation(line: 169, column: 1, scope: !5333)
!5652 = !{i64 2147616092, i64 2147616135, i64 2147616175}
!5653 = !DILocation(line: 170, column: 1, scope: !5333)
!5654 = !{i64 2147616279, i64 2147616322, i64 2147616362}
!5655 = !DILocation(line: 171, column: 1, scope: !5333)
!5656 = !{i64 2147616442, i64 2147616485, i64 2147616525}
!5657 = !DILocation(line: 172, column: 1, scope: !5333)
!5658 = !{i64 2147620708, i64 2147620751, i64 2147620791}
!5659 = !DILocation(line: 173, column: 1, scope: !5333)
!5660 = !{i64 2147620901, i64 2147620944, i64 2147620984}
!5661 = !DILocation(line: 174, column: 1, scope: !5333)
!5662 = !{i64 2147621160, i64 2147621203, i64 2147621243}
!5663 = !DILocation(line: 175, column: 1, scope: !5333)
!5664 = !{i64 2147621383, i64 2147621426, i64 2147621466}
!5665 = !DILocation(line: 176, column: 1, scope: !5333)
!5666 = !{i64 2147621612, i64 2147621655, i64 2147621695}
!5667 = !DILocation(line: 177, column: 1, scope: !5333)
!5668 = !{i64 2147621826, i64 2147621869, i64 2147621909}
!5669 = !DILocation(line: 178, column: 1, scope: !5333)
!5670 = !{i64 2147622028, i64 2147622071, i64 2147622111}
!5671 = !DILocation(line: 179, column: 1, scope: !5333)
!5672 = !{i64 2147622224, i64 2147622267, i64 2147622307}
!5673 = !DILocation(line: 180, column: 1, scope: !5333)
!5674 = !{i64 2147622436, i64 2147622479, i64 2147622519}
!5675 = !DILocation(line: 181, column: 1, scope: !5333)
!5676 = !{i64 2147622657, i64 2147622700, i64 2147622740}
!5677 = !DILocation(line: 182, column: 1, scope: !5333)
!5678 = !{i64 2147622872, i64 2147622915, i64 2147622955}
!5679 = !DILocation(line: 183, column: 1, scope: !5333)
!5680 = !{i64 2147623062, i64 2147623105, i64 2147623145}
!5681 = !DILocation(line: 184, column: 1, scope: !5333)
!5682 = !{i64 2147623261, i64 2147623304, i64 2147623344}
!5683 = !DILocation(line: 185, column: 1, scope: !5333)
!5684 = !{i64 2147623466, i64 2147623509, i64 2147623549}
!5685 = !DILocation(line: 186, column: 1, scope: !5333)
!5686 = !{i64 2147623686, i64 2147623729, i64 2147623769}
!5687 = !DILocation(line: 187, column: 1, scope: !5333)
!5688 = !{i64 2147623887, i64 2147623930, i64 2147623970}
!5689 = !DILocation(line: 188, column: 1, scope: !5333)
!5690 = !{i64 2147624086, i64 2147624129, i64 2147624169}
!5691 = !DILocation(line: 189, column: 1, scope: !5333)
!5692 = !{i64 2147624291, i64 2147624334, i64 2147624374}
!5693 = !DILocation(line: 190, column: 1, scope: !5333)
!5694 = !{i64 2147624460, i64 2147624503, i64 2147624543}
!5695 = !DILocation(line: 191, column: 1, scope: !5333)
!5696 = !{i64 2147624644, i64 2147624687, i64 2147624727}
!5697 = !DILocation(line: 192, column: 1, scope: !5333)
!5698 = !{i64 2147624828, i64 2147624871, i64 2147624911}
!5699 = !DILocation(line: 193, column: 1, scope: !5333)
!5700 = !{i64 2147625015, i64 2147625058, i64 2147625098}
!5701 = !DILocation(line: 194, column: 1, scope: !5333)
!5702 = !{i64 2147625199, i64 2147625242, i64 2147625282}
!5703 = !DILocation(line: 195, column: 1, scope: !5333)
!5704 = !{i64 2147625386, i64 2147625429, i64 2147625469}
!5705 = !DILocation(line: 196, column: 1, scope: !5333)
!5706 = !{i64 2147625598, i64 2147625641, i64 2147625681}
!5707 = !DILocation(line: 197, column: 1, scope: !5333)
!5708 = !{i64 2147625836, i64 2147625879, i64 2147625919}
!5709 = !DILocation(line: 198, column: 1, scope: !5333)
!5710 = !{i64 2147626066, i64 2147626109, i64 2147626149}
!5711 = !DILocation(line: 199, column: 1, scope: !5333)
!5712 = !{i64 2147626295, i64 2147626338, i64 2147626378}
!5713 = !DILocation(line: 200, column: 1, scope: !5333)
!5714 = !{i64 2147626482, i64 2147626525, i64 2147626565}
!5715 = !DILocation(line: 201, column: 1, scope: !5333)
!5716 = !{i64 2147626678, i64 2147626721, i64 2147626761}
!5717 = !DILocation(line: 202, column: 1, scope: !5333)
!5718 = !{i64 2147626886, i64 2147626929, i64 2147626969}
!5719 = !DILocation(line: 203, column: 1, scope: !5333)
!5720 = !{i64 2147627098, i64 2147627141, i64 2147627181}
!5721 = !DILocation(line: 204, column: 1, scope: !5333)
!5722 = !{i64 2147627297, i64 2147627340, i64 2147627380}
!5723 = !DILocation(line: 205, column: 1, scope: !5333)
!5724 = !{i64 2147627535, i64 2147627578, i64 2147627618}
!5725 = !DILocation(line: 206, column: 1, scope: !5333)
!5726 = !{i64 2147627731, i64 2147627774, i64 2147627814}
!5727 = !DILocation(line: 207, column: 1, scope: !5333)
!5728 = !{i64 2147627933, i64 2147627976, i64 2147628016}
!5729 = !DILocation(line: 208, column: 1, scope: !5333)
!5730 = !{i64 2147628126, i64 2147628169, i64 2147628209}
!5731 = !DILocation(line: 209, column: 1, scope: !5333)
!5732 = !{i64 2147628360, i64 2147628403, i64 2147628443}
!5733 = !DILocation(line: 210, column: 1, scope: !5333)
!5734 = !{i64 2147628523, i64 2147628566, i64 2147628606}
!5735 = !DILocation(line: 211, column: 1, scope: !5333)
!5736 = !{i64 2147628762, i64 2147628805, i64 2147628845}
!5737 = !DILocation(line: 212, column: 1, scope: !5333)
!5738 = !{i64 2147629001, i64 2147629044, i64 2147629084}
!5739 = !DILocation(line: 213, column: 1, scope: !5333)
!5740 = !{i64 2147629237, i64 2147629280, i64 2147629320}
!5741 = !DILocation(line: 214, column: 1, scope: !5333)
!5742 = !{i64 2147629467, i64 2147629510, i64 2147629550}
!5743 = !DILocation(line: 215, column: 1, scope: !5333)
!5744 = !{i64 2147629654, i64 2147629697, i64 2147629737}
!5745 = !DILocation(line: 216, column: 1, scope: !5333)
!5746 = !{i64 2147633914, i64 2147633957, i64 2147633997}
!5747 = !DILocation(line: 217, column: 1, scope: !5333)
!5748 = !{i64 2147634185, i64 2147634228, i64 2147634268}
!5749 = !DILocation(line: 218, column: 1, scope: !5333)
!5750 = !{i64 2147634360, i64 2147634403, i64 2147634443}
!5751 = !DILocation(line: 219, column: 1, scope: !5333)
!5752 = !{i64 2147634594, i64 2147634637, i64 2147634677}
!5753 = !DILocation(line: 220, column: 1, scope: !5333)
!5754 = !{i64 2147634802, i64 2147634845, i64 2147634885}
!5755 = !DILocation(line: 221, column: 1, scope: !5333)
!5756 = !{i64 2147635020, i64 2147635063, i64 2147635103}
!5757 = !DILocation(line: 222, column: 1, scope: !5333)
!5758 = !{i64 2147635210, i64 2147635253, i64 2147635293}
!5759 = !DILocation(line: 223, column: 1, scope: !5333)
!5760 = !{i64 2147635442, i64 2147635485, i64 2147635525}
!5761 = !DILocation(line: 224, column: 1, scope: !5333)
!5762 = !{i64 2147635662, i64 2147635705, i64 2147635745}
!5763 = !DILocation(line: 225, column: 1, scope: !5333)
!5764 = !{i64 2147635858, i64 2147635901, i64 2147635941}
!5765 = !DILocation(line: 226, column: 1, scope: !5333)
!5766 = !{i64 2147636064, i64 2147636107, i64 2147636147}
!5767 = !DILocation(line: 227, column: 1, scope: !5333)
!5768 = !{i64 2147636269, i64 2147636312, i64 2147636352}
!5769 = !DILocation(line: 228, column: 1, scope: !5333)
!5770 = !{i64 2147636495, i64 2147636538, i64 2147636578}
!5771 = !DILocation(line: 229, column: 1, scope: !5333)
!5772 = !{i64 2147636703, i64 2147636746, i64 2147636786}
!5773 = !DILocation(line: 230, column: 1, scope: !5333)
!5774 = !{i64 2147636899, i64 2147636942, i64 2147636982}
!5775 = !DILocation(line: 231, column: 1, scope: !5333)
!5776 = !{i64 2147637131, i64 2147637174, i64 2147637214}
!5777 = !DILocation(line: 232, column: 1, scope: !5333)
!5778 = !{i64 2147637315, i64 2147637358, i64 2147637398}
!5779 = !DILocation(line: 233, column: 1, scope: !5333)
!5780 = !{i64 2147637524, i64 2147637567, i64 2147637607}
!5781 = !DILocation(line: 234, column: 1, scope: !5333)
!5782 = !{i64 2147637732, i64 2147637775, i64 2147637815}
!5783 = !DILocation(line: 235, column: 1, scope: !5333)
!5784 = !{i64 2147637928, i64 2147637971, i64 2147638011}
!5785 = !DILocation(line: 236, column: 1, scope: !5333)
!5786 = !{i64 2147638112, i64 2147638155, i64 2147638195}
!5787 = !DILocation(line: 237, column: 1, scope: !5333)
!5788 = !{i64 2147638338, i64 2147638381, i64 2147638421}
!5789 = !DILocation(line: 238, column: 1, scope: !5333)
!5790 = !{i64 2147638564, i64 2147638607, i64 2147638647}
!5791 = !DILocation(line: 239, column: 1, scope: !5333)
!5792 = !{i64 2147638790, i64 2147638833, i64 2147638873}
!5793 = !DILocation(line: 240, column: 1, scope: !5333)
!5794 = !{i64 2147639016, i64 2147639059, i64 2147639099}
!5795 = !DILocation(line: 241, column: 1, scope: !5333)
!5796 = !{i64 2147639242, i64 2147639285, i64 2147639325}
!5797 = !DILocation(line: 242, column: 1, scope: !5333)
!5798 = !{i64 2147639474, i64 2147639517, i64 2147639557}
!5799 = !DILocation(line: 243, column: 1, scope: !5333)
!5800 = !{i64 2147639712, i64 2147639755, i64 2147639795}
!5801 = !DILocation(line: 244, column: 1, scope: !5333)
!5802 = !{i64 2147639932, i64 2147639975, i64 2147640015}
!5803 = !DILocation(line: 245, column: 1, scope: !5333)
!5804 = !{i64 2147640176, i64 2147640219, i64 2147640259}
!5805 = !DILocation(line: 246, column: 1, scope: !5333)
!5806 = !{i64 2147640417, i64 2147640460, i64 2147640500}
!5807 = !DILocation(line: 247, column: 1, scope: !5333)
!5808 = !{i64 2147640652, i64 2147640695, i64 2147640735}
!5809 = !DILocation(line: 248, column: 1, scope: !5333)
!5810 = !{i64 2147640884, i64 2147640927, i64 2147640967}
!5811 = !DILocation(line: 249, column: 1, scope: !5333)
!5812 = !{i64 2147641086, i64 2147641129, i64 2147641169}
!5813 = !DILocation(line: 250, column: 1, scope: !5333)
!5814 = !{i64 2147641336, i64 2147641379, i64 2147641419}
!5815 = !DILocation(line: 251, column: 1, scope: !5333)
!5816 = !{i64 2147641574, i64 2147641617, i64 2147641657}
!5817 = !DILocation(line: 252, column: 1, scope: !5333)
!5818 = !{i64 2147641782, i64 2147641825, i64 2147641865}
!5819 = !DILocation(line: 253, column: 1, scope: !5333)
!5820 = !{i64 2147641978, i64 2147642021, i64 2147642061}
!5821 = !DILocation(line: 254, column: 1, scope: !5333)
!5822 = !{i64 2147642162, i64 2147642205, i64 2147642245}
!5823 = !DILocation(line: 255, column: 1, scope: !5333)
!5824 = !{i64 2147642379, i64 2147642422, i64 2147642462}
!5825 = !DILocation(line: 256, column: 1, scope: !5333)
!5826 = !{i64 2147646645, i64 2147646688, i64 2147646728}
!5827 = !DILocation(line: 257, column: 1, scope: !5333)
!5828 = !{i64 2147646880, i64 2147646923, i64 2147646963}
!5829 = !DILocation(line: 258, column: 1, scope: !5333)
!5830 = !{i64 2147647103, i64 2147647146, i64 2147647186}
!5831 = !DILocation(line: 259, column: 1, scope: !5333)
!5832 = !{i64 2147647327, i64 2147647370, i64 2147647410}
!5833 = !DILocation(line: 260, column: 1, scope: !5333)
!5834 = !{i64 2147647565, i64 2147647608, i64 2147647648}
!5835 = !DILocation(line: 261, column: 1, scope: !5333)
!5836 = !{i64 2147647803, i64 2147647846, i64 2147647886}
!5837 = !DILocation(line: 262, column: 1, scope: !5333)
!5838 = !{i64 2147648020, i64 2147648063, i64 2147648103}
!5839 = !DILocation(line: 263, column: 1, scope: !5333)
!5840 = !{i64 2147648225, i64 2147648268, i64 2147648308}
!5841 = !DILocation(line: 264, column: 1, scope: !5333)
!5842 = !{i64 2147648418, i64 2147648461, i64 2147648501}
!5843 = !DILocation(line: 265, column: 1, scope: !5333)
!5844 = !{i64 2147648671, i64 2147648714, i64 2147648754}
!5845 = !DILocation(line: 266, column: 1, scope: !5333)
!5846 = !{i64 2147648879, i64 2147648922, i64 2147648962}
!5847 = !DILocation(line: 267, column: 1, scope: !5333)
!5848 = !{i64 2147649075, i64 2147649118, i64 2147649158}
!5849 = !DILocation(line: 268, column: 1, scope: !5333)
!5850 = !{i64 2147649289, i64 2147649332, i64 2147649372}
!5851 = !DILocation(line: 269, column: 1, scope: !5333)
!5852 = !{i64 2147649497, i64 2147649540, i64 2147649580}
!5853 = !DILocation(line: 270, column: 1, scope: !5333)
!5854 = !{i64 2147649687, i64 2147649730, i64 2147649770}
!5855 = !DILocation(line: 271, column: 1, scope: !5333)
!5856 = !{i64 2147649901, i64 2147649944, i64 2147649984}
!5857 = !DILocation(line: 272, column: 1, scope: !5333)
!5858 = !{i64 2147650163, i64 2147650206, i64 2147650246}
!5859 = !DILocation(line: 273, column: 1, scope: !5333)
!5860 = !{i64 2147650374, i64 2147650417, i64 2147650457}
!5861 = !DILocation(line: 274, column: 1, scope: !5333)
!5862 = !{i64 2147650618, i64 2147650661, i64 2147650701}
!5863 = !DILocation(line: 275, column: 1, scope: !5333)
!5864 = !{i64 2147650829, i64 2147650872, i64 2147650912}
!5865 = !DILocation(line: 276, column: 1, scope: !5333)
!5866 = !{i64 2147651058, i64 2147651101, i64 2147651141}
!5867 = !DILocation(line: 277, column: 1, scope: !5333)
!5868 = !{i64 2147651323, i64 2147651366, i64 2147651406}
!5869 = !DILocation(line: 278, column: 1, scope: !5333)
!5870 = !{i64 2147651528, i64 2147651571, i64 2147651611}
!5871 = !DILocation(line: 279, column: 1, scope: !5333)
!5872 = !{i64 2147651724, i64 2147651767, i64 2147651807}
!5873 = !DILocation(line: 280, column: 1, scope: !5333)
!5874 = !{i64 2147651947, i64 2147651990, i64 2147652030}
!5875 = !DILocation(line: 281, column: 1, scope: !5333)
!5876 = !{i64 2147652110, i64 2147652153, i64 2147652193}
!5877 = !DILocation(line: 282, column: 1, scope: !5333)
!5878 = !{i64 2147652315, i64 2147652358, i64 2147652398}
!5879 = !DILocation(line: 283, column: 1, scope: !5333)
!5880 = !{i64 2147652535, i64 2147652578, i64 2147652618}
!5881 = !DILocation(line: 284, column: 1, scope: !5333)
!5882 = !{i64 2147652749, i64 2147652792, i64 2147652832}
!5883 = !DILocation(line: 285, column: 1, scope: !5333)
!5884 = !{i64 2147652993, i64 2147653036, i64 2147653076}
!5885 = !DILocation(line: 286, column: 1, scope: !5333)
!5886 = !{i64 2147653225, i64 2147653268, i64 2147653308}
!5887 = !DILocation(line: 287, column: 1, scope: !5333)
!5888 = !{i64 2147653439, i64 2147653482, i64 2147653522}
!5889 = !DILocation(line: 288, column: 1, scope: !5333)
!5890 = !{i64 2147653650, i64 2147653693, i64 2147653733}
!5891 = !DILocation(line: 289, column: 1, scope: !5333)
!5892 = !{i64 2147653843, i64 2147653886, i64 2147653926}
!5893 = !DILocation(line: 290, column: 1, scope: !5333)
!5894 = !{i64 2147654042, i64 2147654085, i64 2147654125}
!5895 = !DILocation(line: 291, column: 1, scope: !5333)
!5896 = !{i64 2147654214, i64 2147654257, i64 2147654297}
!5897 = !DILocation(line: 292, column: 1, scope: !5333)
!5898 = !{i64 2147654407, i64 2147654450, i64 2147654490}
!5899 = !DILocation(line: 293, column: 1, scope: !5333)
!5900 = !{i64 2147654579, i64 2147654622, i64 2147654662}
!5901 = !DILocation(line: 294, column: 1, scope: !5333)
!5902 = !{i64 2147654769, i64 2147654812, i64 2147654852}
!5903 = !DILocation(line: 295, column: 1, scope: !5333)
!5904 = !{i64 2147654962, i64 2147655005, i64 2147655045}
!5905 = !DILocation(line: 296, column: 1, scope: !5333)
!5906 = !{i64 2147655158, i64 2147655201, i64 2147655241}
!5907 = !DILocation(line: 297, column: 1, scope: !5333)
!5908 = !{i64 2147655321, i64 2147655364, i64 2147655404}
!5909 = !DILocation(line: 298, column: 1, scope: !5333)
!5910 = !{i64 2147659584, i64 2147659627, i64 2147659667}
!5911 = !DILocation(line: 299, column: 1, scope: !5333)
!5912 = !{i64 2147659795, i64 2147659838, i64 2147659878}
!5913 = !DILocation(line: 300, column: 1, scope: !5333)
!5914 = !{i64 2147660000, i64 2147660043, i64 2147660083}
!5915 = !DILocation(line: 301, column: 1, scope: !5333)
!5916 = !{i64 2147660208, i64 2147660251, i64 2147660291}
!5917 = !DILocation(line: 302, column: 1, scope: !5333)
!5918 = !{i64 2147660401, i64 2147660444, i64 2147660484}
!5919 = !DILocation(line: 303, column: 1, scope: !5333)
!5920 = !{i64 2147660588, i64 2147660631, i64 2147660671}
!5921 = !DILocation(line: 304, column: 1, scope: !5333)
!5922 = !{i64 2147660754, i64 2147660797, i64 2147660837}
!5923 = !DILocation(line: 305, column: 1, scope: !5333)
!5924 = !{i64 2147660981, i64 2147661024, i64 2147661064}
!5925 = !DILocation(line: 306, column: 1, scope: !5333)
!5926 = !{i64 2147661198, i64 2147661241, i64 2147661281}
!5927 = !DILocation(line: 307, column: 1, scope: !5333)
!5928 = !{i64 2147661424, i64 2147661467, i64 2147661507}
!5929 = !DILocation(line: 308, column: 1, scope: !5333)
!5930 = !{i64 2147661629, i64 2147661672, i64 2147661712}
!5931 = !DILocation(line: 309, column: 1, scope: !5333)
!5932 = !{i64 2147661846, i64 2147661889, i64 2147661929}
!5933 = !DILocation(line: 310, column: 1, scope: !5333)
!5934 = !{i64 2147662138, i64 2147662181, i64 2147662221}
!5935 = !DILocation(line: 311, column: 1, scope: !5333)
!5936 = !{i64 2147662370, i64 2147662413, i64 2147662453}
!5937 = !DILocation(line: 312, column: 1, scope: !5333)
!5938 = !{i64 2147662587, i64 2147662630, i64 2147662670}
!5939 = !DILocation(line: 313, column: 1, scope: !5333)
!5940 = !{i64 2147662794, i64 2147662837, i64 2147662877}
!5941 = !DILocation(line: 314, column: 1, scope: !5333)
!5942 = !{i64 2147662995, i64 2147663038, i64 2147663078}
!5943 = !DILocation(line: 315, column: 1, scope: !5333)
!5944 = !{i64 2147663227, i64 2147663270, i64 2147663310}
!5945 = !DILocation(line: 316, column: 1, scope: !5333)
!5946 = !{i64 2147663435, i64 2147663478, i64 2147663518}
!5947 = !DILocation(line: 317, column: 1, scope: !5333)
!5948 = !{i64 2147663625, i64 2147663668, i64 2147663708}
!5949 = !DILocation(line: 318, column: 1, scope: !5333)
!5950 = !{i64 2147663851, i64 2147663894, i64 2147663934}
!5951 = !DILocation(line: 319, column: 1, scope: !5333)
!5952 = !{i64 2147664040, i64 2147664083, i64 2147664123}
!5953 = !DILocation(line: 320, column: 1, scope: !5333)
!5954 = !{i64 2147664311, i64 2147664354, i64 2147664394}
!5955 = !DILocation(line: 321, column: 1, scope: !5333)
!5956 = !{i64 2147664531, i64 2147664574, i64 2147664614}
!5957 = !DILocation(line: 322, column: 1, scope: !5333)
!5958 = !{i64 2147664784, i64 2147664827, i64 2147664867}
!5959 = !DILocation(line: 323, column: 1, scope: !5333)
!5960 = !{i64 2147664992, i64 2147665035, i64 2147665075}
!5961 = !DILocation(line: 324, column: 1, scope: !5333)
!5962 = !{i64 2147665224, i64 2147665267, i64 2147665307}
!5963 = !DILocation(line: 325, column: 1, scope: !5333)
!5964 = !{i64 2147665435, i64 2147665478, i64 2147665518}
!5965 = !DILocation(line: 326, column: 1, scope: !5333)
!5966 = !{i64 2147665625, i64 2147665668, i64 2147665708}
!5967 = !DILocation(line: 327, column: 1, scope: !5333)
!5968 = !{i64 2147665839, i64 2147665882, i64 2147665922}
!5969 = !DILocation(line: 328, column: 1, scope: !5333)
!5970 = !{i64 2147666038, i64 2147666081, i64 2147666121}
!5971 = !DILocation(line: 329, column: 1, scope: !5333)
!5972 = !{i64 2147666225, i64 2147666268, i64 2147666308}
!5973 = !DILocation(line: 330, column: 1, scope: !5333)
!5974 = !{i64 2147666433, i64 2147666476, i64 2147666516}
!5975 = !DILocation(line: 331, column: 1, scope: !5333)
!5976 = !{i64 2147666662, i64 2147666705, i64 2147666745}
!5977 = !DILocation(line: 332, column: 1, scope: !5333)
!5978 = !{i64 2147666864, i64 2147666907, i64 2147666947}
!5979 = !DILocation(line: 333, column: 1, scope: !5333)
!5980 = !{i64 2147667063, i64 2147667106, i64 2147667146}
!5981 = !DILocation(line: 334, column: 1, scope: !5333)
!5982 = !{i64 2147667280, i64 2147667323, i64 2147667363}
!5983 = !DILocation(line: 336, column: 1, scope: !5333)
!5984 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !322, file: !322, line: 30, type: !329, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !5985)
!5985 = !{!5986, !5987}
!5986 = !DILocalVariable(name: "arg", arg: 1, scope: !5984, file: !322, line: 30, type: !331)
!5987 = !DILocalVariable(name: "key", scope: !5984, file: !322, line: 32, type: !118)
!5988 = !DILocation(line: 0, scope: !5984)
!5989 = !DILocation(line: 37, column: 2, scope: !5984)
!5990 = !DILocation(line: 38, column: 2, scope: !5984)
!5991 = !DILocation(line: 55, column: 2, scope: !5992, inlinedAt: !5999)
!5992 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !5996)
!5993 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!32}
!5996 = !{!5997, !5998}
!5997 = !DILocalVariable(name: "key", scope: !5992, file: !5993, line: 44, type: !32)
!5998 = !DILocalVariable(name: "tmp", scope: !5992, file: !5993, line: 53, type: !32)
!5999 = distinct !DILocation(line: 40, column: 8, scope: !5984)
!6000 = !{i64 2110128}
!6001 = !DILocation(line: 0, scope: !5992, inlinedAt: !5999)
!6002 = !DILocalVariable(name: "key", arg: 1, scope: !6003, file: !5993, line: 84, type: !32)
!6003 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !32}
!6006 = !{!6002}
!6007 = !DILocation(line: 0, scope: !6003, inlinedAt: !6008)
!6008 = distinct !DILocation(line: 47, column: 2, scope: !5984)
!6009 = !DILocation(line: 95, column: 2, scope: !6003, inlinedAt: !6008)
!6010 = !{i64 2110945}
!6011 = !DILocation(line: 51, column: 18, scope: !5984)
!6012 = !DILocation(line: 53, column: 2, scope: !5984)
!6013 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6014, file: !6014, line: 1609, type: !2960, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2032)
!6014 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6015 = !DILocation(line: 1611, column: 3, scope: !6013)
!6016 = !DILocation(line: 1612, column: 1, scope: !6013)
!6017 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6014, file: !6014, line: 1629, type: !2960, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2032)
!6018 = !DILocation(line: 1631, column: 3, scope: !6017)
!6019 = !DILocation(line: 1632, column: 1, scope: !6017)
!6020 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !359, file: !359, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !6021)
!6021 = !{!6022}
!6022 = !DILocalVariable(name: "dev", arg: 1, scope: !6020, file: !359, line: 26, type: !367)
!6023 = !DILocation(line: 0, scope: !6020)
!6024 = !DILocation(line: 68, column: 2, scope: !6020)
!6025 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6026, file: !6026, line: 14, type: !4287, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !6027)
!6026 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6027 = !{!6028, !6029}
!6028 = !DILocalVariable(name: "fmt", arg: 1, scope: !6025, file: !6026, line: 14, type: !278)
!6029 = !DILocalVariable(name: "ap", scope: !6025, file: !6026, line: 16, type: !6030)
!6030 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3293, line: 99, baseType: !6031)
!6031 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3293, line: 40, baseType: !6032)
!6032 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6026, baseType: !6033)
!6033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6034)
!6034 = !{!6035}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6033, file: !6026, line: 16, baseType: !113, size: 32)
!6036 = !DILocation(line: 0, scope: !6025)
!6037 = !DILocation(line: 16, column: 2, scope: !6025)
!6038 = !DILocation(line: 16, column: 10, scope: !6025)
!6039 = !DILocation(line: 18, column: 2, scope: !6025)
!6040 = !DILocation(line: 19, column: 2, scope: !6025)
!6041 = !DILocation(line: 20, column: 2, scope: !6025)
!6042 = !DILocation(line: 21, column: 1, scope: !6025)
!6043 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6026, file: !6026, line: 23, type: !6044, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !278, !6030}
!6046 = !{!6047, !6048}
!6047 = !DILocalVariable(name: "fmt", arg: 1, scope: !6043, file: !6026, line: 23, type: !278)
!6048 = !DILocalVariable(name: "ap", arg: 2, scope: !6043, file: !6026, line: 23, type: !6030)
!6049 = !DILocation(line: 0, scope: !6043)
!6050 = !DILocation(line: 25, column: 2, scope: !6043)
!6051 = !DILocation(line: 26, column: 1, scope: !6043)
!6052 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6026, file: !6026, line: 52, type: !6053, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !6055)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{null, !119, !13, !239}
!6055 = !{!6056, !6057, !6058, !6059}
!6056 = !DILocalVariable(name: "level", arg: 1, scope: !6052, file: !6026, line: 52, type: !119)
!6057 = !DILocalVariable(name: "data", arg: 2, scope: !6052, file: !6026, line: 52, type: !13)
!6058 = !DILocalVariable(name: "size", arg: 3, scope: !6052, file: !6026, line: 52, type: !239)
!6059 = !DILocalVariable(name: "data_buffer", scope: !6052, file: !6026, line: 54, type: !278)
!6060 = !DILocation(line: 0, scope: !6052)
!6061 = !DILocation(line: 55, column: 14, scope: !6052)
!6062 = !DILocation(line: 55, column: 2, scope: !6052)
!6063 = !DILocation(line: 56, column: 3, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6052, file: !6026, line: 55, column: 20)
!6065 = !DILocation(line: 57, column: 3, scope: !6064)
!6066 = !DILocation(line: 59, column: 7, scope: !6064)
!6067 = distinct !{!6067, !6062, !6068}
!6068 = !DILocation(line: 65, column: 2, scope: !6052)
!6069 = !DILocation(line: 66, column: 1, scope: !6052)
!6070 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6071, file: !6071, line: 175, type: !6072, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !6074)
!6071 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!107, !119}
!6074 = !{!6075}
!6075 = !DILocalVariable(name: "level", arg: 1, scope: !6070, file: !6071, line: 175, type: !119)
!6076 = !DILocation(line: 0, scope: !6070)
!6077 = !DILocation(line: 177, column: 2, scope: !6070)
!6078 = !DILocation(line: 189, column: 1, scope: !6070)
!6079 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6026, file: !6026, line: 28, type: !6080, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !6082)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{null, !278, !239}
!6082 = !{!6083, !6084, !6085, !6087, !6089}
!6083 = !DILocalVariable(name: "data", arg: 1, scope: !6079, file: !6026, line: 28, type: !278)
!6084 = !DILocalVariable(name: "length", arg: 2, scope: !6079, file: !6026, line: 28, type: !239)
!6085 = !DILocalVariable(name: "i", scope: !6086, file: !6026, line: 30, type: !239)
!6086 = distinct !DILexicalBlock(scope: !6079, file: !6026, line: 30, column: 2)
!6087 = !DILocalVariable(name: "i", scope: !6088, file: !6026, line: 40, type: !239)
!6088 = distinct !DILexicalBlock(scope: !6079, file: !6026, line: 40, column: 2)
!6089 = !DILocalVariable(name: "c", scope: !6090, file: !6026, line: 42, type: !186)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !6026, line: 41, column: 19)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !6026, line: 41, column: 7)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !6026, line: 40, column: 54)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !6026, line: 40, column: 2)
!6094 = !DILocation(line: 0, scope: !6079)
!6095 = !DILocation(line: 0, scope: !6086)
!6096 = !DILocation(line: 30, column: 2, scope: !6086)
!6097 = !DILocation(line: 38, column: 2, scope: !6079)
!6098 = !DILocation(line: 0, scope: !6088)
!6099 = !DILocation(line: 40, column: 2, scope: !6088)
!6100 = !DILocation(line: 31, column: 9, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !6026, line: 31, column: 7)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !6026, line: 30, column: 54)
!6103 = distinct !DILexicalBlock(scope: !6086, file: !6026, line: 30, column: 2)
!6104 = !DILocation(line: 31, column: 7, scope: !6102)
!6105 = !DILocation(line: 32, column: 35, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6101, file: !6026, line: 31, column: 19)
!6107 = !DILocation(line: 32, column: 20, scope: !6106)
!6108 = !DILocation(line: 32, column: 4, scope: !6106)
!6109 = !DILocation(line: 33, column: 3, scope: !6106)
!6110 = !DILocation(line: 34, column: 4, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6101, file: !6026, line: 33, column: 10)
!6112 = !DILocation(line: 30, column: 50, scope: !6103)
!6113 = !DILocation(line: 30, column: 24, scope: !6103)
!6114 = distinct !{!6114, !6096, !6115}
!6115 = !DILocation(line: 36, column: 2, scope: !6086)
!6116 = !DILocation(line: 49, column: 2, scope: !6079)
!6117 = !DILocation(line: 50, column: 1, scope: !6079)
!6118 = !DILocation(line: 41, column: 9, scope: !6091)
!6119 = !DILocation(line: 41, column: 7, scope: !6092)
!6120 = !DILocation(line: 42, column: 22, scope: !6090)
!6121 = !DILocation(line: 0, scope: !6090)
!6122 = !DILocation(line: 44, column: 25, scope: !6090)
!6123 = !DILocation(line: 44, column: 17, scope: !6090)
!6124 = !DILocation(line: 44, column: 33, scope: !6090)
!6125 = !DILocation(line: 44, column: 4, scope: !6090)
!6126 = !DILocation(line: 45, column: 3, scope: !6090)
!6127 = !DILocation(line: 46, column: 4, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6091, file: !6026, line: 45, column: 10)
!6129 = !DILocation(line: 40, column: 50, scope: !6093)
!6130 = !DILocation(line: 40, column: 24, scope: !6093)
!6131 = distinct !{!6131, !6099, !6132}
!6132 = !DILocation(line: 48, column: 2, scope: !6088)
!6133 = distinct !DISubprogram(name: "isprint", scope: !5077, file: !5077, line: 37, type: !301, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !6134)
!6134 = !{!6135}
!6135 = !DILocalVariable(name: "c", arg: 1, scope: !6133, file: !5077, line: 37, type: !119)
!6136 = !DILocation(line: 0, scope: !6133)
!6137 = !DILocation(line: 39, column: 38, scope: !6133)
!6138 = !DILocation(line: 39, column: 2, scope: !6133)
!6139 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6140, file: !6140, line: 57, type: !6141, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !6187)
!6140 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6141 = !DISubroutineType(types: !6142)
!6142 = !{null, !32, !6143}
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 32)
!6144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6145)
!6145 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2543, line: 141, baseType: !6146)
!6146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2543, line: 97, size: 256, elements: !6147)
!6147 = !{!6148}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6146, file: !2543, line: 107, baseType: !6149, size: 256)
!6149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !6150)
!6150 = !{!6151, !6156, !6161, !6166, !6171, !6176, !6181, !6186}
!6151 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !2543, line: 99, baseType: !6152, size: 32)
!6152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !2543, line: 99, size: 32, elements: !6153)
!6153 = !{!6154, !6155}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6152, file: !2543, line: 99, baseType: !118, size: 32)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6152, file: !2543, line: 99, baseType: !118, size: 32)
!6156 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !2543, line: 100, baseType: !6157, size: 32, offset: 32)
!6157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !2543, line: 100, size: 32, elements: !6158)
!6158 = !{!6159, !6160}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6157, file: !2543, line: 100, baseType: !118, size: 32)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6157, file: !2543, line: 100, baseType: !118, size: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !2543, line: 101, baseType: !6162, size: 32, offset: 64)
!6162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !2543, line: 101, size: 32, elements: !6163)
!6163 = !{!6164, !6165}
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6162, file: !2543, line: 101, baseType: !118, size: 32)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6162, file: !2543, line: 101, baseType: !118, size: 32)
!6166 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !2543, line: 102, baseType: !6167, size: 32, offset: 96)
!6167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !2543, line: 102, size: 32, elements: !6168)
!6168 = !{!6169, !6170}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6167, file: !2543, line: 102, baseType: !118, size: 32)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6167, file: !2543, line: 102, baseType: !118, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !2543, line: 103, baseType: !6172, size: 32, offset: 128)
!6172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !2543, line: 103, size: 32, elements: !6173)
!6173 = !{!6174, !6175}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6172, file: !2543, line: 103, baseType: !118, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6172, file: !2543, line: 103, baseType: !118, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !2543, line: 104, baseType: !6177, size: 32, offset: 160)
!6177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !2543, line: 104, size: 32, elements: !6178)
!6178 = !{!6179, !6180}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6177, file: !2543, line: 104, baseType: !118, size: 32)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6177, file: !2543, line: 104, baseType: !118, size: 32)
!6181 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !2543, line: 105, baseType: !6182, size: 32, offset: 192)
!6182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !2543, line: 105, size: 32, elements: !6183)
!6183 = !{!6184, !6185}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6182, file: !2543, line: 105, baseType: !118, size: 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6182, file: !2543, line: 105, baseType: !118, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6149, file: !2543, line: 106, baseType: !118, size: 32, offset: 224)
!6187 = !{!6188, !6189}
!6188 = !DILocalVariable(name: "reason", arg: 1, scope: !6139, file: !6140, line: 57, type: !32)
!6189 = !DILocalVariable(name: "esf", arg: 2, scope: !6139, file: !6140, line: 57, type: !6143)
!6190 = !DILocation(line: 0, scope: !6139)
!6191 = !DILocation(line: 60, column: 10, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6139, file: !6140, line: 60, column: 6)
!6193 = !DILocation(line: 60, column: 6, scope: !6139)
!6194 = !DILocation(line: 61, column: 3, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6192, file: !6140, line: 60, column: 19)
!6196 = !DILocation(line: 62, column: 2, scope: !6195)
!6197 = !DILocation(line: 63, column: 2, scope: !6139)
!6198 = !DILocation(line: 64, column: 1, scope: !6139)
!6199 = distinct !DISubprogram(name: "esf_dump", scope: !6140, file: !6140, line: 20, type: !6200, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !6202)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{null, !6143}
!6202 = !{!6203}
!6203 = !DILocalVariable(name: "esf", arg: 1, scope: !6199, file: !6140, line: 20, type: !6143)
!6204 = !DILocation(line: 0, scope: !6199)
!6205 = !DILocation(line: 22, column: 2, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !6140, line: 22, column: 2)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !6140, line: 22, column: 2)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !6140, line: 22, column: 2)
!6209 = distinct !DILexicalBlock(scope: !6199, file: !6140, line: 22, column: 2)
!6210 = !DILocation(line: 24, column: 2, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6212, file: !6140, line: 24, column: 2)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !6140, line: 24, column: 2)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !6140, line: 24, column: 2)
!6214 = distinct !DILexicalBlock(scope: !6199, file: !6140, line: 24, column: 2)
!6215 = !DILocation(line: 26, column: 2, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !6140, line: 26, column: 2)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !6140, line: 26, column: 2)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !6140, line: 26, column: 2)
!6219 = distinct !DILexicalBlock(scope: !6199, file: !6140, line: 26, column: 2)
!6220 = !DILocation(line: 53, column: 2, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !6140, line: 53, column: 2)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !6140, line: 53, column: 2)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !6140, line: 53, column: 2)
!6224 = distinct !DILexicalBlock(scope: !6199, file: !6140, line: 53, column: 2)
!6225 = !DILocation(line: 55, column: 1, scope: !6199)
!6226 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6140, file: !6140, line: 82, type: !6227, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !6242)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{null, !6143, !6229}
!6229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6230, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6231)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6232)
!6232 = !{!6233, !6234, !6235, !6236, !6237, !6238, !6239, !6240, !6241}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6231, file: !216, line: 26, baseType: !118, size: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6231, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6231, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6231, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6231, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6231, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6231, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6231, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6231, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6242 = !{!6243, !6244, !6245}
!6243 = !DILocalVariable(name: "esf", arg: 1, scope: !6226, file: !6140, line: 82, type: !6143)
!6244 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6226, file: !6140, line: 82, type: !6229)
!6245 = !DILocalVariable(name: "reason", scope: !6226, file: !6140, line: 88, type: !32)
!6246 = !DILocation(line: 0, scope: !6226)
!6247 = !DILocation(line: 88, column: 35, scope: !6226)
!6248 = !DILocation(line: 108, column: 2, scope: !6226)
!6249 = !DILocation(line: 131, column: 1, scope: !6226)
!6250 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6140, file: !6140, line: 133, type: !6251, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !6253)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{null, !113}
!6253 = !{!6254, !6255, !6256}
!6254 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6250, file: !6140, line: 133, type: !113)
!6255 = !DILocalVariable(name: "ssf_contents", scope: !6250, file: !6140, line: 135, type: !884)
!6256 = !DILocalVariable(name: "oops_esf", scope: !6250, file: !6140, line: 136, type: !6145)
!6257 = !DILocation(line: 0, scope: !6250)
!6258 = !DILocation(line: 136, column: 2, scope: !6250)
!6259 = !DILocation(line: 136, column: 15, scope: !6250)
!6260 = !DILocation(line: 139, column: 22, scope: !6250)
!6261 = !DILocation(line: 139, column: 17, scope: !6250)
!6262 = !DILocation(line: 139, column: 20, scope: !6250)
!6263 = !DILocation(line: 141, column: 2, scope: !6250)
!6264 = !DILocation(line: 142, column: 2, scope: !6250)
!6265 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6266, file: !6266, line: 40, type: !6004, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6267)
!6266 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6267 = !{!6268}
!6268 = !DILocalVariable(name: "irq", arg: 1, scope: !6265, file: !6266, line: 40, type: !32)
!6269 = !DILocation(line: 0, scope: !6265)
!6270 = !DILocation(line: 42, column: 2, scope: !6265)
!6271 = !DILocation(line: 43, column: 1, scope: !6265)
!6272 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !533, file: !533, line: 1684, type: !6273, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6275)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{null, !790}
!6275 = !{!6276}
!6276 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6272, file: !533, line: 1684, type: !790)
!6277 = !DILocation(line: 0, scope: !6272)
!6278 = !DILocation(line: 1686, column: 23, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6272, file: !533, line: 1686, column: 7)
!6280 = !DILocation(line: 1686, column: 7, scope: !6272)
!6281 = !DILocation(line: 1688, column: 5, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6279, file: !533, line: 1687, column: 3)
!6283 = !{i64 2151073246}
!6284 = !DILocation(line: 1689, column: 81, scope: !6282)
!6285 = !DILocation(line: 1689, column: 60, scope: !6282)
!6286 = !DILocation(line: 1689, column: 34, scope: !6282)
!6287 = !DILocation(line: 1689, column: 5, scope: !6282)
!6288 = !DILocation(line: 1689, column: 43, scope: !6282)
!6289 = !DILocation(line: 1690, column: 5, scope: !6282)
!6290 = !{i64 2151073360}
!6291 = !DILocation(line: 1691, column: 3, scope: !6282)
!6292 = !DILocation(line: 1692, column: 1, scope: !6272)
!6293 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6266, file: !6266, line: 45, type: !6004, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6294)
!6294 = !{!6295}
!6295 = !DILocalVariable(name: "irq", arg: 1, scope: !6293, file: !6266, line: 45, type: !32)
!6296 = !DILocation(line: 0, scope: !6293)
!6297 = !DILocation(line: 47, column: 2, scope: !6293)
!6298 = !DILocation(line: 48, column: 1, scope: !6293)
!6299 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !533, file: !533, line: 1722, type: !6273, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6300)
!6300 = !{!6301}
!6301 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6299, file: !533, line: 1722, type: !790)
!6302 = !DILocation(line: 0, scope: !6299)
!6303 = !DILocation(line: 1724, column: 23, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6299, file: !533, line: 1724, column: 7)
!6305 = !DILocation(line: 1724, column: 7, scope: !6299)
!6306 = !DILocation(line: 1726, column: 81, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6304, file: !533, line: 1725, column: 3)
!6308 = !DILocation(line: 1726, column: 60, scope: !6307)
!6309 = !DILocation(line: 1726, column: 34, scope: !6307)
!6310 = !DILocation(line: 1726, column: 5, scope: !6307)
!6311 = !DILocation(line: 1726, column: 43, scope: !6307)
!6312 = !DILocation(line: 271, column: 3, scope: !6313, inlinedAt: !6315)
!6313 = distinct !DISubprogram(name: "__DSB", scope: !6314, file: !6314, line: 269, type: !2960, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !2032)
!6314 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6315 = distinct !DILocation(line: 1727, column: 5, scope: !6307)
!6316 = !{i64 3527629}
!6317 = !DILocation(line: 260, column: 3, scope: !6318, inlinedAt: !6319)
!6318 = distinct !DISubprogram(name: "__ISB", scope: !6314, file: !6314, line: 258, type: !2960, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !2032)
!6319 = distinct !DILocation(line: 1728, column: 5, scope: !6307)
!6320 = !{i64 3527346}
!6321 = !DILocation(line: 1729, column: 3, scope: !6307)
!6322 = !DILocation(line: 1730, column: 1, scope: !6299)
!6323 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6266, file: !6266, line: 50, type: !6324, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6326)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!119, !32}
!6326 = !{!6327}
!6327 = !DILocalVariable(name: "irq", arg: 1, scope: !6323, file: !6266, line: 50, type: !32)
!6328 = !DILocation(line: 0, scope: !6323)
!6329 = !DILocation(line: 52, column: 20, scope: !6323)
!6330 = !DILocation(line: 52, column: 9, scope: !6323)
!6331 = !DILocation(line: 52, column: 41, scope: !6323)
!6332 = !DILocation(line: 52, column: 39, scope: !6323)
!6333 = !DILocation(line: 52, column: 2, scope: !6323)
!6334 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6266, file: !6266, line: 64, type: !6335, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6337)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{null, !32, !32, !118}
!6337 = !{!6338, !6339, !6340}
!6338 = !DILocalVariable(name: "irq", arg: 1, scope: !6334, file: !6266, line: 64, type: !32)
!6339 = !DILocalVariable(name: "prio", arg: 2, scope: !6334, file: !6266, line: 64, type: !32)
!6340 = !DILocalVariable(name: "flags", arg: 3, scope: !6334, file: !6266, line: 64, type: !118)
!6341 = !DILocation(line: 0, scope: !6334)
!6342 = !DILocation(line: 83, column: 8, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !6266, line: 82, column: 9)
!6344 = distinct !DILexicalBlock(scope: !6334, file: !6266, line: 76, column: 6)
!6345 = !DILocation(line: 91, column: 2, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !6266, line: 91, column: 2)
!6347 = distinct !DILexicalBlock(scope: !6334, file: !6266, line: 91, column: 2)
!6348 = !DILocation(line: 91, column: 2, scope: !6347)
!6349 = !DILocation(line: 91, column: 2, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6346, file: !6266, line: 91, column: 2)
!6351 = !DILocation(line: 95, column: 2, scope: !6334)
!6352 = !DILocation(line: 96, column: 1, scope: !6334)
!6353 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6354, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6356)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{null, !790, !118}
!6356 = !{!6357, !6358}
!6357 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6353, file: !533, line: 1814, type: !790)
!6358 = !DILocalVariable(name: "priority", arg: 2, scope: !6353, file: !533, line: 1814, type: !118)
!6359 = !DILocation(line: 0, scope: !6353)
!6360 = !DILocation(line: 0, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6353, file: !533, line: 1816, column: 7)
!6362 = !DILocation(line: 1816, column: 7, scope: !6353)
!6363 = !DILocation(line: 1824, column: 1, scope: !6353)
!6364 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6266, file: !6266, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !6365)
!6365 = !{!6366}
!6366 = !DILocalVariable(name: "unused", arg: 1, scope: !6364, file: !6266, line: 155, type: !13)
!6367 = !DILocation(line: 0, scope: !6364)
!6368 = !DILocation(line: 159, column: 2, scope: !6364)
!6369 = !DILocation(line: 160, column: 1, scope: !6364)
!6370 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6371, file: !6371, line: 87, type: !2960, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2032)
!6371 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6372 = !DILocation(line: 89, column: 2, scope: !6370)
!6373 = !DILocation(line: 90, column: 2, scope: !6370)
!6374 = !DILocation(line: 91, column: 1, scope: !6370)
!6375 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6371, file: !6371, line: 23, type: !2960, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!6376 = !DISubprogram(name: "z_arm_int_exit", scope: !6377, file: !6377, line: 153, type: !2960, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!6377 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6378 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6379, file: !6379, line: 256, type: !2960, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2032)
!6379 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6380 = !DILocation(line: 258, column: 2, scope: !6378)
!6381 = !DILocation(line: 260, column: 2, scope: !6378)
!6382 = !DILocation(line: 262, column: 2, scope: !6378)
!6383 = !DILocation(line: 263, column: 2, scope: !6378)
!6384 = !DILocation(line: 267, column: 2, scope: !6378)
!6385 = !DILocation(line: 268, column: 2, scope: !6378)
!6386 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6379, file: !6379, line: 53, type: !2960, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2032)
!6387 = !DILocation(line: 55, column: 12, scope: !6386)
!6388 = !DILocation(line: 271, column: 3, scope: !6389, inlinedAt: !6390)
!6389 = distinct !DISubprogram(name: "__DSB", scope: !6314, file: !6314, line: 269, type: !2960, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2032)
!6390 = distinct !DILocation(line: 56, column: 2, scope: !6386)
!6391 = !{i64 3526300}
!6392 = !DILocation(line: 260, column: 3, scope: !6393, inlinedAt: !6394)
!6393 = distinct !DISubprogram(name: "__ISB", scope: !6314, file: !6314, line: 258, type: !2960, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2032)
!6394 = distinct !DILocation(line: 57, column: 2, scope: !6386)
!6395 = !{i64 3526017}
!6396 = !DILocation(line: 58, column: 1, scope: !6386)
!6397 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6379, file: !6379, line: 96, type: !2960, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2032)
!6398 = !DILocation(line: 103, column: 13, scope: !6397)
!6399 = !DILocation(line: 975, column: 3, scope: !6400, inlinedAt: !6403)
!6400 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6314, file: !6314, line: 971, type: !3198, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !6401)
!6401 = !{!6402}
!6402 = !DILocalVariable(name: "result", scope: !6400, file: !6314, line: 973, type: !118)
!6403 = distinct !DILocation(line: 189, column: 16, scope: !6397)
!6404 = !{i64 3547130}
!6405 = !DILocation(line: 0, scope: !6400, inlinedAt: !6403)
!6406 = !DILocation(line: 189, column: 32, scope: !6397)
!6407 = !DILocalVariable(name: "control", arg: 1, scope: !6408, file: !6314, line: 1001, type: !118)
!6408 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6314, file: !6314, line: 1001, type: !6409, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !6411)
!6409 = !DISubroutineType(types: !6410)
!6410 = !{null, !118}
!6411 = !{!6407}
!6412 = !DILocation(line: 0, scope: !6408, inlinedAt: !6413)
!6413 = distinct !DILocation(line: 189, column: 2, scope: !6397)
!6414 = !DILocation(line: 1003, column: 3, scope: !6408, inlinedAt: !6413)
!6415 = !{i64 3547850}
!6416 = !DILocation(line: 260, column: 3, scope: !6393, inlinedAt: !6417)
!6417 = distinct !DILocation(line: 1004, column: 3, scope: !6408, inlinedAt: !6413)
!6418 = !DILocation(line: 191, column: 1, scope: !6397)
!6419 = distinct !DISubprogram(name: "arch_swap", scope: !6420, file: !6420, line: 33, type: !6324, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !6421)
!6420 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6421 = !{!6422}
!6422 = !DILocalVariable(name: "key", arg: 1, scope: !6419, file: !6420, line: 33, type: !32)
!6423 = !DILocation(line: 0, scope: !6419)
!6424 = !DILocation(line: 36, column: 2, scope: !6419)
!6425 = !DILocation(line: 36, column: 17, scope: !6419)
!6426 = !DILocation(line: 36, column: 25, scope: !6419)
!6427 = !DILocation(line: 37, column: 37, scope: !6419)
!6428 = !DILocation(line: 37, column: 17, scope: !6419)
!6429 = !DILocation(line: 37, column: 35, scope: !6419)
!6430 = !DILocation(line: 41, column: 12, scope: !6419)
!6431 = !DILocalVariable(name: "key", arg: 1, scope: !6432, file: !5993, line: 84, type: !32)
!6432 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !6433)
!6433 = !{!6431}
!6434 = !DILocation(line: 0, scope: !6432, inlinedAt: !6435)
!6435 = distinct !DILocation(line: 44, column: 2, scope: !6419)
!6436 = !DILocation(line: 95, column: 2, scope: !6432, inlinedAt: !6435)
!6437 = !{i64 2225622}
!6438 = !DILocation(line: 53, column: 9, scope: !6419)
!6439 = !DILocation(line: 53, column: 24, scope: !6419)
!6440 = !DILocation(line: 53, column: 2, scope: !6419)
!6441 = distinct !DISubprogram(name: "arch_new_thread", scope: !6442, file: !6442, line: 56, type: !6443, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !6553)
!6442 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6443 = !DISubroutineType(types: !6444)
!6444 = !{null, !6445, !6548, !106, !108, !113, !113, !113}
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6446, size: 32)
!6446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !6447)
!6447 = !{!6448, !6506, !6518, !6519, !6520, !6521, !6522, !6528, !6543}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6446, file: !143, line: 247, baseType: !6449, size: 384)
!6449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !6450)
!6450 = !{!6451, !6475, !6482, !6483, !6484, !6493, !6494, !6495}
!6451 = !DIDerivedType(tag: DW_TAG_member, scope: !6449, file: !143, line: 60, baseType: !6452, size: 64)
!6452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6449, file: !143, line: 60, size: 64, elements: !6453)
!6453 = !{!6454, !6469}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6452, file: !143, line: 61, baseType: !6455, size: 64)
!6455 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !6456)
!6456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !6457)
!6457 = !{!6458, !6464}
!6458 = !DIDerivedType(tag: DW_TAG_member, scope: !6456, file: !153, line: 38, baseType: !6459, size: 32)
!6459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6456, file: !153, line: 38, size: 32, elements: !6460)
!6460 = !{!6461, !6463}
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6459, file: !153, line: 39, baseType: !6462, size: 32)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 32)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6459, file: !153, line: 40, baseType: !6462, size: 32)
!6464 = !DIDerivedType(tag: DW_TAG_member, scope: !6456, file: !153, line: 42, baseType: !6465, size: 32, offset: 32)
!6465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6456, file: !153, line: 42, size: 32, elements: !6466)
!6466 = !{!6467, !6468}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6465, file: !153, line: 43, baseType: !6462, size: 32)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6465, file: !153, line: 44, baseType: !6462, size: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6452, file: !143, line: 62, baseType: !6470, size: 64)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !6471)
!6471 = !{!6472}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6470, file: !169, line: 50, baseType: !6473, size: 64)
!6473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6474, size: 64, elements: !174)
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 32)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6449, file: !143, line: 68, baseType: !6476, size: 32, offset: 64)
!6476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6477, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !6478)
!6478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !6479)
!6479 = !{!6480}
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6478, file: !179, line: 232, baseType: !6481, size: 64)
!6481 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !6456)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6449, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6449, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!6484 = !DIDerivedType(tag: DW_TAG_member, scope: !6449, file: !143, line: 90, baseType: !6485, size: 16, offset: 112)
!6485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6449, file: !143, line: 90, size: 16, elements: !6486)
!6486 = !{!6487, !6492}
!6487 = !DIDerivedType(tag: DW_TAG_member, scope: !6485, file: !143, line: 91, baseType: !6488, size: 16)
!6488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6485, file: !143, line: 91, size: 16, elements: !6489)
!6489 = !{!6490, !6491}
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6488, file: !143, line: 96, baseType: !195, size: 8)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6488, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6485, file: !143, line: 100, baseType: !199, size: 16)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6449, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6449, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6449, file: !143, line: 131, baseType: !6496, size: 192, offset: 192)
!6496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !6497)
!6497 = !{!6498, !6499, !6505}
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6496, file: !179, line: 245, baseType: !6455, size: 64)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6496, file: !179, line: 246, baseType: !6500, size: 32, offset: 64)
!6500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !6501)
!6501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6502, size: 32)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{null, !6504}
!6504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6496, size: 32)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6496, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6446, file: !143, line: 250, baseType: !6507, size: 288, offset: 384)
!6507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6508)
!6508 = !{!6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6507, file: !216, line: 26, baseType: !118, size: 32)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6507, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6507, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6507, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6507, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6507, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6507, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6507, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6507, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6446, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6446, file: !143, line: 256, baseType: !6477, size: 64, offset: 704)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6446, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6446, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6446, file: !143, line: 300, baseType: !6523, size: 96, offset: 1056)
!6523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !6524)
!6524 = !{!6525, !6526, !6527}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6523, file: !143, line: 153, baseType: !22, size: 32)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6523, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6523, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6446, file: !143, line: 325, baseType: !6529, size: 32, offset: 1152)
!6529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6530, size: 32)
!6530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !6531)
!6531 = !{!6532, !6538, !6539}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6530, file: !245, line: 5074, baseType: !6533, size: 96)
!6533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !6534)
!6534 = !{!6535, !6536, !6537}
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6533, file: !249, line: 57, baseType: !252, size: 32)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6533, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6533, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6530, file: !245, line: 5075, baseType: !6477, size: 64, offset: 96)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6530, file: !245, line: 5076, baseType: !6540, size: 32, offset: 160)
!6540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !6541)
!6541 = !{!6542}
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6540, file: !259, line: 52, baseType: !22, size: 32)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6446, file: !143, line: 343, baseType: !6544, size: 64, offset: 1184)
!6544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !6545)
!6545 = !{!6546, !6547}
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6544, file: !216, line: 63, baseType: !118, size: 32)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6544, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 32)
!6549 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !6550)
!6550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !6551)
!6551 = !{!6552}
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6550, file: !128, line: 48, baseType: !107, size: 8)
!6553 = !{!6554, !6555, !6556, !6557, !6558, !6559, !6560, !6561}
!6554 = !DILocalVariable(name: "thread", arg: 1, scope: !6441, file: !6442, line: 56, type: !6445)
!6555 = !DILocalVariable(name: "stack", arg: 2, scope: !6441, file: !6442, line: 56, type: !6548)
!6556 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6441, file: !6442, line: 57, type: !106)
!6557 = !DILocalVariable(name: "entry", arg: 4, scope: !6441, file: !6442, line: 57, type: !108)
!6558 = !DILocalVariable(name: "p1", arg: 5, scope: !6441, file: !6442, line: 58, type: !113)
!6559 = !DILocalVariable(name: "p2", arg: 6, scope: !6441, file: !6442, line: 58, type: !113)
!6560 = !DILocalVariable(name: "p3", arg: 7, scope: !6441, file: !6442, line: 58, type: !113)
!6561 = !DILocalVariable(name: "iframe", scope: !6441, file: !6442, line: 60, type: !2541)
!6562 = !DILocation(line: 0, scope: !6441)
!6563 = !DILocation(line: 85, column: 11, scope: !6441)
!6564 = !DILocation(line: 93, column: 10, scope: !6441)
!6565 = !DILocation(line: 98, column: 13, scope: !6441)
!6566 = !DILocation(line: 100, column: 15, scope: !6441)
!6567 = !DILocation(line: 100, column: 10, scope: !6441)
!6568 = !DILocation(line: 100, column: 13, scope: !6441)
!6569 = !DILocation(line: 101, column: 15, scope: !6441)
!6570 = !DILocation(line: 101, column: 10, scope: !6441)
!6571 = !DILocation(line: 101, column: 13, scope: !6441)
!6572 = !DILocation(line: 102, column: 15, scope: !6441)
!6573 = !DILocation(line: 102, column: 10, scope: !6441)
!6574 = !DILocation(line: 102, column: 13, scope: !6441)
!6575 = !DILocation(line: 103, column: 15, scope: !6441)
!6576 = !DILocation(line: 103, column: 10, scope: !6441)
!6577 = !DILocation(line: 103, column: 13, scope: !6441)
!6578 = !DILocation(line: 106, column: 10, scope: !6441)
!6579 = !DILocation(line: 106, column: 15, scope: !6441)
!6580 = !DILocation(line: 122, column: 29, scope: !6441)
!6581 = !DILocation(line: 122, column: 23, scope: !6441)
!6582 = !DILocation(line: 122, column: 27, scope: !6441)
!6583 = !DILocation(line: 123, column: 15, scope: !6441)
!6584 = !DILocation(line: 123, column: 23, scope: !6441)
!6585 = !DILocation(line: 143, column: 1, scope: !6441)
!6586 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6442, file: !6442, line: 385, type: !6587, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !6590)
!6587 = !DISubroutineType(types: !6588)
!6588 = !{!118, !6589, !6589}
!6589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!6590 = !{!6591, !6592, !6593, !6596}
!6591 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6586, file: !6442, line: 385, type: !6589)
!6592 = !DILocalVariable(name: "psp", arg: 2, scope: !6586, file: !6442, line: 385, type: !6589)
!6593 = !DILocalVariable(name: "thread", scope: !6586, file: !6442, line: 388, type: !6594)
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6595, size: 32)
!6595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6446)
!6596 = !DILocalVariable(name: "guard_len", scope: !6586, file: !6442, line: 405, type: !118)
!6597 = !DILocation(line: 0, scope: !6586)
!6598 = !DILocation(line: 388, column: 34, scope: !6586)
!6599 = !DILocation(line: 390, column: 13, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6586, file: !6442, line: 390, column: 6)
!6601 = !DILocation(line: 390, column: 6, scope: !6586)
!6602 = !DILocation(line: 438, column: 6, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6586, file: !6442, line: 438, column: 6)
!6604 = !DILocation(line: 438, column: 6, scope: !6586)
!6605 = !DILocation(line: 442, column: 3, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6603, file: !6442, line: 440, column: 22)
!6607 = !DILocation(line: 455, column: 1, scope: !6586)
!6608 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6442, file: !6442, line: 530, type: !6609, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !6611)
!6609 = !DISubroutineType(types: !6610)
!6610 = !{null, !6445, !106, !108}
!6611 = !{!6612, !6613, !6614}
!6612 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6608, file: !6442, line: 530, type: !6445)
!6613 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6608, file: !6442, line: 530, type: !106)
!6614 = !DILocalVariable(name: "_main", arg: 3, scope: !6608, file: !6442, line: 531, type: !108)
!6615 = !DILocation(line: 0, scope: !6608)
!6616 = !DILocation(line: 535, column: 11, scope: !6608)
!6617 = !DILocation(line: 560, column: 2, scope: !6608)
!6618 = !DILocation(line: 576, column: 2, scope: !6608)
!6619 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6620 = !DILocation(line: 603, column: 2, scope: !6608)
!6621 = distinct !DISubprogram(name: "z_arm_fault", scope: !6622, file: !6622, line: 1036, type: !6623, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6638)
!6622 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6623 = !DISubroutineType(types: !6624)
!6624 = !{null, !118, !118, !118, !6625}
!6625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6626, size: 32)
!6626 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6627)
!6627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6628)
!6628 = !{!6629, !6630, !6631, !6632, !6633, !6634, !6635, !6636, !6637}
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6627, file: !216, line: 26, baseType: !118, size: 32)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6627, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6627, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6627, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6627, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6627, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6627, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6627, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6627, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6638 = !{!6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648}
!6639 = !DILocalVariable(name: "msp", arg: 1, scope: !6621, file: !6622, line: 1036, type: !118)
!6640 = !DILocalVariable(name: "psp", arg: 2, scope: !6621, file: !6622, line: 1036, type: !118)
!6641 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6621, file: !6622, line: 1036, type: !118)
!6642 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6621, file: !6622, line: 1037, type: !6625)
!6643 = !DILocalVariable(name: "reason", scope: !6621, file: !6622, line: 1039, type: !118)
!6644 = !DILocalVariable(name: "fault", scope: !6621, file: !6622, line: 1040, type: !119)
!6645 = !DILocalVariable(name: "recoverable", scope: !6621, file: !6622, line: 1041, type: !345)
!6646 = !DILocalVariable(name: "nested_exc", scope: !6621, file: !6622, line: 1041, type: !345)
!6647 = !DILocalVariable(name: "esf", scope: !6621, file: !6622, line: 1042, type: !2609)
!6648 = !DILocalVariable(name: "esf_copy", scope: !6621, file: !6622, line: 1047, type: !2610)
!6649 = !DILocation(line: 0, scope: !6621)
!6650 = !DILocation(line: 1040, column: 19, scope: !6621)
!6651 = !DILocation(line: 1041, column: 2, scope: !6621)
!6652 = !DILocation(line: 1047, column: 2, scope: !6621)
!6653 = !DILocation(line: 1047, column: 15, scope: !6621)
!6654 = !DILocalVariable(name: "key", arg: 1, scope: !6655, file: !5993, line: 84, type: !32)
!6655 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6656)
!6656 = !{!6654}
!6657 = !DILocation(line: 0, scope: !6655, inlinedAt: !6658)
!6658 = distinct !DILocation(line: 1050, column: 2, scope: !6621)
!6659 = !DILocation(line: 95, column: 2, scope: !6655, inlinedAt: !6658)
!6660 = !{i64 2258866}
!6661 = !DILocation(line: 1055, column: 9, scope: !6621)
!6662 = !DILocation(line: 1056, column: 2, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !6622, line: 1056, column: 2)
!6664 = distinct !DILexicalBlock(scope: !6621, file: !6622, line: 1056, column: 2)
!6665 = !DILocation(line: 1056, column: 2, scope: !6664)
!6666 = !DILocation(line: 1056, column: 2, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !6622, line: 1056, column: 2)
!6668 = !DILocation(line: 1040, column: 24, scope: !6621)
!6669 = !DILocation(line: 1063, column: 11, scope: !6621)
!6670 = !DILocation(line: 1064, column: 6, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6621, file: !6622, line: 1064, column: 6)
!6672 = !{i8 0, i8 2}
!6673 = !DILocation(line: 1064, column: 6, scope: !6621)
!6674 = !DILocation(line: 1070, column: 20, scope: !6621)
!6675 = !DILocation(line: 1070, column: 2, scope: !6621)
!6676 = !DILocation(line: 1089, column: 6, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6621, file: !6622, line: 1089, column: 6)
!6678 = !DILocation(line: 0, scope: !6677)
!6679 = !DILocation(line: 1089, column: 6, scope: !6621)
!6680 = !DILocation(line: 1090, column: 28, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !6622, line: 1090, column: 7)
!6682 = distinct !DILexicalBlock(scope: !6677, file: !6622, line: 1089, column: 18)
!6683 = !DILocation(line: 1090, column: 44, scope: !6681)
!6684 = !DILocation(line: 1090, column: 7, scope: !6682)
!6685 = !DILocation(line: 1091, column: 24, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6681, file: !6622, line: 1090, column: 50)
!6687 = !DILocation(line: 1092, column: 3, scope: !6686)
!6688 = !DILocation(line: 1094, column: 23, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6677, file: !6622, line: 1093, column: 9)
!6690 = !DILocation(line: 1097, column: 2, scope: !6621)
!6691 = !DILocation(line: 1098, column: 1, scope: !6621)
!6692 = distinct !DISubprogram(name: "get_esf", scope: !6622, file: !6622, line: 894, type: !6693, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6696)
!6693 = !DISubroutineType(types: !6694)
!6694 = !{!2609, !118, !118, !118, !6695}
!6695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!6696 = !{!6697, !6698, !6699, !6700, !6701, !6702}
!6697 = !DILocalVariable(name: "msp", arg: 1, scope: !6692, file: !6622, line: 894, type: !118)
!6698 = !DILocalVariable(name: "psp", arg: 2, scope: !6692, file: !6622, line: 894, type: !118)
!6699 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6692, file: !6622, line: 894, type: !118)
!6700 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6692, file: !6622, line: 895, type: !6695)
!6701 = !DILocalVariable(name: "alternative_state_exc", scope: !6692, file: !6622, line: 897, type: !345)
!6702 = !DILocalVariable(name: "ptr_esf", scope: !6692, file: !6622, line: 898, type: !2609)
!6703 = !DILocation(line: 0, scope: !6692)
!6704 = !DILocation(line: 900, column: 14, scope: !6692)
!6705 = !DILocation(line: 902, column: 49, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6692, file: !6622, line: 902, column: 6)
!6707 = !DILocation(line: 902, column: 6, scope: !6692)
!6708 = !DILocation(line: 983, column: 44, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6692, file: !6622, line: 983, column: 6)
!6710 = !DILocation(line: 985, column: 3, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !6622, line: 985, column: 3)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !6622, line: 985, column: 3)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !6622, line: 985, column: 3)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !6622, line: 985, column: 3)
!6715 = distinct !DILexicalBlock(scope: !6709, file: !6622, line: 984, column: 47)
!6716 = !DILocation(line: 986, column: 3, scope: !6715)
!6717 = !DILocation(line: 983, column: 18, scope: !6709)
!6718 = !DILocation(line: 991, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !6622, line: 990, column: 30)
!6720 = distinct !DILexicalBlock(scope: !6692, file: !6622, line: 990, column: 6)
!6721 = !DILocation(line: 998, column: 16, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !6622, line: 995, column: 10)
!6723 = distinct !DILexicalBlock(scope: !6719, file: !6622, line: 991, column: 7)
!6724 = !DILocation(line: 1002, column: 2, scope: !6692)
!6725 = !DILocation(line: 1003, column: 1, scope: !6692)
!6726 = distinct !DISubprogram(name: "fault_handle", scope: !6622, file: !6622, line: 786, type: !6727, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6729)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!118, !2609, !119, !6695}
!6729 = !{!6730, !6731, !6732, !6733}
!6730 = !DILocalVariable(name: "esf", arg: 1, scope: !6726, file: !6622, line: 786, type: !2609)
!6731 = !DILocalVariable(name: "fault", arg: 2, scope: !6726, file: !6622, line: 786, type: !119)
!6732 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6726, file: !6622, line: 786, type: !6695)
!6733 = !DILocalVariable(name: "reason", scope: !6726, file: !6622, line: 788, type: !118)
!6734 = !DILocation(line: 0, scope: !6726)
!6735 = !DILocation(line: 790, column: 15, scope: !6726)
!6736 = !DILocation(line: 792, column: 2, scope: !6726)
!6737 = !DILocation(line: 794, column: 12, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6726, file: !6622, line: 792, column: 17)
!6739 = !DILocation(line: 795, column: 3, scope: !6738)
!6740 = !DILocation(line: 800, column: 12, scope: !6738)
!6741 = !DILocation(line: 801, column: 3, scope: !6738)
!6742 = !DILocation(line: 803, column: 12, scope: !6738)
!6743 = !DILocation(line: 804, column: 3, scope: !6738)
!6744 = !DILocation(line: 806, column: 12, scope: !6738)
!6745 = !DILocation(line: 807, column: 3, scope: !6738)
!6746 = !DILocation(line: 814, column: 3, scope: !6738)
!6747 = !DILocation(line: 815, column: 3, scope: !6738)
!6748 = !DILocation(line: 820, column: 3, scope: !6738)
!6749 = !DILocation(line: 821, column: 3, scope: !6738)
!6750 = !DILocation(line: 829, column: 2, scope: !6726)
!6751 = distinct !DISubprogram(name: "hard_fault", scope: !6622, file: !6622, line: 709, type: !6752, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6754)
!6752 = !DISubroutineType(types: !6753)
!6753 = !{!118, !2609, !6695}
!6754 = !{!6755, !6756, !6757}
!6755 = !DILocalVariable(name: "esf", arg: 1, scope: !6751, file: !6622, line: 709, type: !2609)
!6756 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6751, file: !6622, line: 709, type: !6695)
!6757 = !DILocalVariable(name: "reason", scope: !6751, file: !6622, line: 711, type: !118)
!6758 = !DILocation(line: 0, scope: !6751)
!6759 = !DILocation(line: 713, column: 2, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !6622, line: 713, column: 2)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !6622, line: 713, column: 2)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6622, line: 713, column: 2)
!6763 = distinct !DILexicalBlock(scope: !6751, file: !6622, line: 713, column: 2)
!6764 = !DILocation(line: 732, column: 15, scope: !6751)
!6765 = !DILocation(line: 734, column: 12, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6751, file: !6622, line: 734, column: 6)
!6767 = !DILocation(line: 734, column: 17, scope: !6766)
!6768 = !DILocation(line: 734, column: 41, scope: !6766)
!6769 = !DILocation(line: 734, column: 6, scope: !6751)
!6770 = !DILocation(line: 735, column: 3, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !6622, line: 735, column: 3)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !6622, line: 735, column: 3)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !6622, line: 735, column: 3)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !6622, line: 735, column: 3)
!6775 = distinct !DILexicalBlock(scope: !6766, file: !6622, line: 734, column: 47)
!6776 = !DILocation(line: 736, column: 2, scope: !6775)
!6777 = !DILocation(line: 736, column: 19, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6766, file: !6622, line: 736, column: 13)
!6779 = !DILocation(line: 736, column: 49, scope: !6778)
!6780 = !DILocation(line: 736, column: 13, scope: !6766)
!6781 = !DILocation(line: 737, column: 3, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6622, line: 737, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6622, line: 737, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6622, line: 737, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !6622, line: 737, column: 3)
!6786 = distinct !DILexicalBlock(scope: !6778, file: !6622, line: 736, column: 55)
!6787 = !DILocation(line: 738, column: 2, scope: !6786)
!6788 = !DILocation(line: 738, column: 19, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6778, file: !6622, line: 738, column: 13)
!6790 = !DILocation(line: 738, column: 24, scope: !6789)
!6791 = !DILocation(line: 738, column: 47, scope: !6789)
!6792 = !DILocation(line: 738, column: 13, scope: !6778)
!6793 = !DILocation(line: 739, column: 3, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6622, line: 739, column: 3)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6622, line: 739, column: 3)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6622, line: 739, column: 3)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !6622, line: 739, column: 3)
!6798 = distinct !DILexicalBlock(scope: !6789, file: !6622, line: 738, column: 53)
!6799 = !DILocation(line: 740, column: 7, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6798, file: !6622, line: 740, column: 7)
!6801 = !DILocation(line: 740, column: 7, scope: !6798)
!6802 = !DILocation(line: 741, column: 4, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6622, line: 741, column: 4)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6622, line: 741, column: 4)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6622, line: 741, column: 4)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6622, line: 741, column: 4)
!6807 = distinct !DILexicalBlock(scope: !6800, file: !6622, line: 740, column: 38)
!6808 = !DILocation(line: 742, column: 24, scope: !6807)
!6809 = !DILocation(line: 743, column: 3, scope: !6807)
!6810 = !DILocation(line: 743, column: 20, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6800, file: !6622, line: 743, column: 14)
!6812 = !DILocation(line: 743, column: 25, scope: !6811)
!6813 = !DILocation(line: 743, column: 52, scope: !6811)
!6814 = !DILocation(line: 743, column: 14, scope: !6800)
!6815 = !DILocation(line: 744, column: 13, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6811, file: !6622, line: 743, column: 58)
!6817 = !DILocation(line: 745, column: 3, scope: !6816)
!6818 = !DILocation(line: 745, column: 20, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6811, file: !6622, line: 745, column: 14)
!6820 = !DILocation(line: 745, column: 25, scope: !6819)
!6821 = !DILocation(line: 745, column: 52, scope: !6819)
!6822 = !DILocation(line: 745, column: 14, scope: !6811)
!6823 = !DILocation(line: 746, column: 13, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6819, file: !6622, line: 745, column: 58)
!6825 = !DILocation(line: 747, column: 3, scope: !6824)
!6826 = !DILocation(line: 747, column: 20, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6819, file: !6622, line: 747, column: 14)
!6828 = !DILocation(line: 747, column: 52, scope: !6827)
!6829 = !DILocation(line: 747, column: 14, scope: !6819)
!6830 = !DILocation(line: 748, column: 13, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6827, file: !6622, line: 747, column: 58)
!6832 = !DILocation(line: 754, column: 4, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6622, line: 754, column: 4)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6622, line: 754, column: 4)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6622, line: 754, column: 4)
!6836 = distinct !DILexicalBlock(scope: !6827, file: !6622, line: 753, column: 10)
!6837 = !DILocation(line: 758, column: 3, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6622, line: 758, column: 3)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6622, line: 758, column: 3)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6622, line: 758, column: 3)
!6841 = distinct !DILexicalBlock(scope: !6789, file: !6622, line: 757, column: 9)
!6842 = !DILocation(line: 766, column: 2, scope: !6751)
!6843 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6622, file: !6622, line: 229, type: !6727, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6844)
!6844 = !{!6845, !6846, !6847, !6848, !6849, !6850, !6853}
!6845 = !DILocalVariable(name: "esf", arg: 1, scope: !6843, file: !6622, line: 229, type: !2609)
!6846 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6843, file: !6622, line: 229, type: !119)
!6847 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6843, file: !6622, line: 230, type: !6695)
!6848 = !DILocalVariable(name: "reason", scope: !6843, file: !6622, line: 232, type: !118)
!6849 = !DILocalVariable(name: "mmfar", scope: !6843, file: !6622, line: 233, type: !118)
!6850 = !DILocalVariable(name: "temp", scope: !6851, file: !6622, line: 254, type: !118)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6622, line: 244, column: 48)
!6852 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 244, column: 6)
!6853 = !DILocalVariable(name: "min_stack_ptr", scope: !6854, file: !6622, line: 309, type: !118)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6622, line: 308, column: 43)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6622, line: 308, column: 7)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !6622, line: 289, column: 40)
!6857 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 288, column: 6)
!6858 = !DILocation(line: 0, scope: !6843)
!6859 = !DILocation(line: 235, column: 2, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6622, line: 235, column: 2)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !6622, line: 235, column: 2)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !6622, line: 235, column: 2)
!6863 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 235, column: 2)
!6864 = !DILocation(line: 237, column: 12, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 237, column: 6)
!6866 = !DILocation(line: 237, column: 17, scope: !6865)
!6867 = !DILocation(line: 237, column: 41, scope: !6865)
!6868 = !DILocation(line: 237, column: 6, scope: !6843)
!6869 = !DILocation(line: 238, column: 3, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6622, line: 238, column: 3)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6622, line: 238, column: 3)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6622, line: 238, column: 3)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6622, line: 238, column: 3)
!6874 = distinct !DILexicalBlock(scope: !6865, file: !6622, line: 237, column: 47)
!6875 = !DILocation(line: 240, column: 2, scope: !6874)
!6876 = !DILocation(line: 241, column: 12, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 241, column: 6)
!6878 = !DILocation(line: 241, column: 17, scope: !6877)
!6879 = !DILocation(line: 241, column: 43, scope: !6877)
!6880 = !DILocation(line: 241, column: 6, scope: !6843)
!6881 = !DILocation(line: 242, column: 3, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6622, line: 242, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6622, line: 242, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !6622, line: 242, column: 3)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6622, line: 242, column: 3)
!6886 = distinct !DILexicalBlock(scope: !6877, file: !6622, line: 241, column: 49)
!6887 = !DILocation(line: 243, column: 2, scope: !6886)
!6888 = !DILocation(line: 244, column: 12, scope: !6852)
!6889 = !DILocation(line: 244, column: 17, scope: !6852)
!6890 = !DILocation(line: 244, column: 42, scope: !6852)
!6891 = !DILocation(line: 244, column: 6, scope: !6843)
!6892 = !DILocation(line: 245, column: 3, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6622, line: 245, column: 3)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !6622, line: 245, column: 3)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !6622, line: 245, column: 3)
!6896 = distinct !DILexicalBlock(scope: !6851, file: !6622, line: 245, column: 3)
!6897 = !DILocation(line: 254, column: 24, scope: !6851)
!6898 = !DILocation(line: 0, scope: !6851)
!6899 = !DILocation(line: 256, column: 13, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6851, file: !6622, line: 256, column: 7)
!6901 = !DILocation(line: 256, column: 18, scope: !6900)
!6902 = !DILocation(line: 256, column: 44, scope: !6900)
!6903 = !DILocation(line: 256, column: 7, scope: !6851)
!6904 = !DILocation(line: 258, column: 4, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6622, line: 258, column: 4)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6622, line: 258, column: 4)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6622, line: 258, column: 4)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6622, line: 258, column: 4)
!6909 = distinct !DILexicalBlock(scope: !6900, file: !6622, line: 256, column: 50)
!6910 = !DILocation(line: 259, column: 24, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6909, file: !6622, line: 259, column: 8)
!6912 = !DILocation(line: 259, column: 8, scope: !6909)
!6913 = !DILocation(line: 261, column: 15, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6911, file: !6622, line: 259, column: 30)
!6915 = !DILocation(line: 262, column: 4, scope: !6914)
!6916 = !DILocation(line: 265, column: 12, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 265, column: 6)
!6918 = !DILocation(line: 265, column: 17, scope: !6917)
!6919 = !DILocation(line: 265, column: 42, scope: !6917)
!6920 = !DILocation(line: 265, column: 6, scope: !6843)
!6921 = !DILocation(line: 266, column: 3, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6622, line: 266, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !6622, line: 266, column: 3)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !6622, line: 266, column: 3)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6622, line: 266, column: 3)
!6926 = distinct !DILexicalBlock(scope: !6917, file: !6622, line: 265, column: 48)
!6927 = !DILocation(line: 267, column: 2, scope: !6926)
!6928 = !DILocation(line: 269, column: 12, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 269, column: 6)
!6930 = !DILocation(line: 269, column: 17, scope: !6929)
!6931 = !DILocation(line: 269, column: 41, scope: !6929)
!6932 = !DILocation(line: 269, column: 6, scope: !6843)
!6933 = !DILocation(line: 270, column: 3, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6622, line: 270, column: 3)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6622, line: 270, column: 3)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6622, line: 270, column: 3)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6622, line: 270, column: 3)
!6938 = distinct !DILexicalBlock(scope: !6929, file: !6622, line: 269, column: 47)
!6939 = !DILocation(line: 272, column: 2, scope: !6938)
!6940 = !DILocation(line: 288, column: 12, scope: !6857)
!6941 = !DILocation(line: 288, column: 17, scope: !6857)
!6942 = !DILocation(line: 288, column: 41, scope: !6857)
!6943 = !DILocation(line: 289, column: 9, scope: !6857)
!6944 = !DILocation(line: 289, column: 14, scope: !6857)
!6945 = !DILocation(line: 288, column: 6, scope: !6843)
!6946 = !DILocation(line: 308, column: 12, scope: !6855)
!6947 = !DILocation(line: 308, column: 17, scope: !6855)
!6948 = !DILocation(line: 308, column: 7, scope: !6856)
!6949 = !DILocation(line: 310, column: 6, scope: !6854)
!6950 = !DILocation(line: 309, column: 29, scope: !6854)
!6951 = !DILocation(line: 0, scope: !6854)
!6952 = !DILocation(line: 312, column: 8, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6854, file: !6622, line: 312, column: 8)
!6954 = !DILocation(line: 312, column: 8, scope: !6854)
!6955 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6956, file: !6314, line: 1099, type: !118)
!6956 = distinct !DISubprogram(name: "__set_PSP", scope: !6314, file: !6314, line: 1099, type: !6409, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6957)
!6957 = !{!6955}
!6958 = !DILocation(line: 0, scope: !6956, inlinedAt: !6959)
!6959 = distinct !DILocation(line: 338, column: 5, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6953, file: !6622, line: 312, column: 23)
!6961 = !DILocation(line: 1101, column: 3, scope: !6956, inlinedAt: !6959)
!6962 = !{i64 3577269}
!6963 = !DILocation(line: 341, column: 4, scope: !6960)
!6964 = !DILocation(line: 342, column: 5, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6622, line: 342, column: 5)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6622, line: 342, column: 5)
!6967 = distinct !DILexicalBlock(scope: !6953, file: !6622, line: 341, column: 11)
!6968 = !DILocation(line: 342, column: 5, scope: !6966)
!6969 = !DILocation(line: 342, column: 5, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6965, file: !6622, line: 342, column: 5)
!6971 = !DILocation(line: 360, column: 12, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6843, file: !6622, line: 360, column: 6)
!6973 = !DILocation(line: 360, column: 17, scope: !6972)
!6974 = !DILocation(line: 360, column: 41, scope: !6972)
!6975 = !DILocation(line: 360, column: 6, scope: !6843)
!6976 = !DILocation(line: 361, column: 14, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6972, file: !6622, line: 360, column: 47)
!6978 = !DILocation(line: 362, column: 2, scope: !6977)
!6979 = !DILocation(line: 366, column: 12, scope: !6843)
!6980 = !DILocation(line: 369, column: 15, scope: !6843)
!6981 = !DILocation(line: 371, column: 2, scope: !6843)
!6982 = distinct !DISubprogram(name: "bus_fault", scope: !6622, file: !6622, line: 383, type: !6983, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !6985)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!119, !2609, !119, !6695}
!6985 = !{!6986, !6987, !6988, !6989, !6990}
!6986 = !DILocalVariable(name: "esf", arg: 1, scope: !6982, file: !6622, line: 383, type: !2609)
!6987 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6982, file: !6622, line: 383, type: !119)
!6988 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6982, file: !6622, line: 383, type: !6695)
!6989 = !DILocalVariable(name: "reason", scope: !6982, file: !6622, line: 385, type: !118)
!6990 = !DILocalVariable(name: "bfar", scope: !6991, file: !6622, line: 405, type: !118)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !6622, line: 395, column: 42)
!6992 = distinct !DILexicalBlock(scope: !6982, file: !6622, line: 395, column: 6)
!6993 = !DILocation(line: 0, scope: !6982)
!6994 = !DILocation(line: 387, column: 2, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6622, line: 387, column: 2)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6622, line: 387, column: 2)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6622, line: 387, column: 2)
!6998 = distinct !DILexicalBlock(scope: !6982, file: !6622, line: 387, column: 2)
!6999 = !DILocation(line: 389, column: 11, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6982, file: !6622, line: 389, column: 6)
!7001 = !DILocation(line: 389, column: 16, scope: !7000)
!7002 = !DILocation(line: 389, column: 6, scope: !6982)
!7003 = !DILocation(line: 390, column: 3, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6622, line: 390, column: 3)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6622, line: 390, column: 3)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6622, line: 390, column: 3)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6622, line: 390, column: 3)
!7008 = distinct !DILexicalBlock(scope: !7000, file: !6622, line: 389, column: 39)
!7009 = !DILocation(line: 391, column: 2, scope: !7008)
!7010 = !DILocation(line: 392, column: 11, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6982, file: !6622, line: 392, column: 6)
!7012 = !DILocation(line: 392, column: 16, scope: !7011)
!7013 = !DILocation(line: 392, column: 6, scope: !6982)
!7014 = !DILocation(line: 393, column: 3, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !6622, line: 393, column: 3)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6622, line: 393, column: 3)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6622, line: 393, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6622, line: 393, column: 3)
!7019 = distinct !DILexicalBlock(scope: !7011, file: !6622, line: 392, column: 41)
!7020 = !DILocation(line: 394, column: 2, scope: !7019)
!7021 = !DILocation(line: 395, column: 11, scope: !6992)
!7022 = !DILocation(line: 395, column: 16, scope: !6992)
!7023 = !DILocation(line: 395, column: 6, scope: !6982)
!7024 = !DILocation(line: 396, column: 3, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6622, line: 396, column: 3)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6622, line: 396, column: 3)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6622, line: 396, column: 3)
!7028 = distinct !DILexicalBlock(scope: !6991, file: !6622, line: 396, column: 3)
!7029 = !DILocation(line: 405, column: 3, scope: !6991)
!7030 = !DILocation(line: 0, scope: !6991)
!7031 = !DILocation(line: 407, column: 13, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !6991, file: !6622, line: 407, column: 7)
!7033 = !DILocation(line: 407, column: 18, scope: !7032)
!7034 = !DILocation(line: 407, column: 44, scope: !7032)
!7035 = !DILocation(line: 407, column: 7, scope: !6991)
!7036 = !DILocation(line: 408, column: 4, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6622, line: 408, column: 4)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6622, line: 408, column: 4)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !6622, line: 408, column: 4)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6622, line: 408, column: 4)
!7041 = distinct !DILexicalBlock(scope: !7032, file: !6622, line: 407, column: 50)
!7042 = !DILocation(line: 409, column: 24, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7041, file: !6622, line: 409, column: 8)
!7044 = !DILocation(line: 409, column: 8, scope: !7041)
!7045 = !DILocation(line: 411, column: 15, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7043, file: !6622, line: 409, column: 30)
!7047 = !DILocation(line: 412, column: 4, scope: !7046)
!7048 = !DILocation(line: 415, column: 11, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !6982, file: !6622, line: 415, column: 6)
!7050 = !DILocation(line: 415, column: 16, scope: !7049)
!7051 = !DILocation(line: 415, column: 6, scope: !6982)
!7052 = !DILocation(line: 416, column: 3, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !6622, line: 416, column: 3)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !6622, line: 416, column: 3)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !6622, line: 416, column: 3)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6622, line: 416, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7049, file: !6622, line: 415, column: 44)
!7058 = !DILocation(line: 417, column: 2, scope: !7057)
!7059 = !DILocation(line: 418, column: 12, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !6982, file: !6622, line: 418, column: 6)
!7061 = !DILocation(line: 418, column: 17, scope: !7060)
!7062 = !DILocation(line: 418, column: 41, scope: !7060)
!7063 = !DILocation(line: 418, column: 6, scope: !6982)
!7064 = !DILocation(line: 423, column: 18, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7060, file: !6622, line: 423, column: 13)
!7066 = !DILocation(line: 423, column: 23, scope: !7065)
!7067 = !DILocation(line: 423, column: 13, scope: !7060)
!7068 = !DILocation(line: 0, scope: !7060)
!7069 = !DILocation(line: 524, column: 12, scope: !6982)
!7070 = !DILocation(line: 526, column: 15, scope: !6982)
!7071 = !DILocation(line: 528, column: 2, scope: !6982)
!7072 = distinct !DISubprogram(name: "usage_fault", scope: !6622, file: !6622, line: 539, type: !7073, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7077)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!118, !7075}
!7075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7076, size: 32)
!7076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2610)
!7077 = !{!7078, !7079}
!7078 = !DILocalVariable(name: "esf", arg: 1, scope: !7072, file: !6622, line: 539, type: !7075)
!7079 = !DILocalVariable(name: "reason", scope: !7072, file: !6622, line: 541, type: !118)
!7080 = !DILocation(line: 0, scope: !7072)
!7081 = !DILocation(line: 543, column: 2, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6622, line: 543, column: 2)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6622, line: 543, column: 2)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6622, line: 543, column: 2)
!7085 = distinct !DILexicalBlock(scope: !7072, file: !6622, line: 543, column: 2)
!7086 = !DILocation(line: 546, column: 12, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7072, file: !6622, line: 546, column: 6)
!7088 = !DILocation(line: 546, column: 17, scope: !7087)
!7089 = !DILocation(line: 546, column: 43, scope: !7087)
!7090 = !DILocation(line: 546, column: 6, scope: !7072)
!7091 = !DILocation(line: 547, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6622, line: 547, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6622, line: 547, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6622, line: 547, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6622, line: 547, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7087, file: !6622, line: 546, column: 49)
!7097 = !DILocation(line: 548, column: 2, scope: !7096)
!7098 = !DILocation(line: 549, column: 12, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7072, file: !6622, line: 549, column: 6)
!7100 = !DILocation(line: 549, column: 17, scope: !7099)
!7101 = !DILocation(line: 549, column: 43, scope: !7099)
!7102 = !DILocation(line: 549, column: 6, scope: !7072)
!7103 = !DILocation(line: 550, column: 3, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6622, line: 550, column: 3)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6622, line: 550, column: 3)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !6622, line: 550, column: 3)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !6622, line: 550, column: 3)
!7108 = distinct !DILexicalBlock(scope: !7099, file: !6622, line: 549, column: 49)
!7109 = !DILocation(line: 551, column: 2, scope: !7108)
!7110 = !DILocation(line: 567, column: 12, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7072, file: !6622, line: 567, column: 6)
!7112 = !DILocation(line: 567, column: 17, scope: !7111)
!7113 = !DILocation(line: 567, column: 38, scope: !7111)
!7114 = !DILocation(line: 567, column: 6, scope: !7072)
!7115 = !DILocation(line: 568, column: 3, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6622, line: 568, column: 3)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !6622, line: 568, column: 3)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !6622, line: 568, column: 3)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !6622, line: 568, column: 3)
!7120 = distinct !DILexicalBlock(scope: !7111, file: !6622, line: 567, column: 44)
!7121 = !DILocation(line: 569, column: 2, scope: !7120)
!7122 = !DILocation(line: 570, column: 12, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7072, file: !6622, line: 570, column: 6)
!7124 = !DILocation(line: 570, column: 17, scope: !7123)
!7125 = !DILocation(line: 570, column: 39, scope: !7123)
!7126 = !DILocation(line: 570, column: 6, scope: !7072)
!7127 = !DILocation(line: 571, column: 3, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !6622, line: 571, column: 3)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !6622, line: 571, column: 3)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6622, line: 571, column: 3)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6622, line: 571, column: 3)
!7132 = distinct !DILexicalBlock(scope: !7123, file: !6622, line: 570, column: 45)
!7133 = !DILocation(line: 572, column: 2, scope: !7132)
!7134 = !DILocation(line: 573, column: 12, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7072, file: !6622, line: 573, column: 6)
!7136 = !DILocation(line: 573, column: 17, scope: !7135)
!7137 = !DILocation(line: 573, column: 42, scope: !7135)
!7138 = !DILocation(line: 573, column: 6, scope: !7072)
!7139 = !DILocation(line: 574, column: 3, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7141, file: !6622, line: 574, column: 3)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !6622, line: 574, column: 3)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !6622, line: 574, column: 3)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !6622, line: 574, column: 3)
!7144 = distinct !DILexicalBlock(scope: !7135, file: !6622, line: 573, column: 48)
!7145 = !DILocation(line: 575, column: 2, scope: !7144)
!7146 = !DILocation(line: 576, column: 12, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7072, file: !6622, line: 576, column: 6)
!7148 = !DILocation(line: 576, column: 17, scope: !7147)
!7149 = !DILocation(line: 576, column: 44, scope: !7147)
!7150 = !DILocation(line: 576, column: 6, scope: !7072)
!7151 = !DILocation(line: 577, column: 3, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !6622, line: 577, column: 3)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !6622, line: 577, column: 3)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !6622, line: 577, column: 3)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !6622, line: 577, column: 3)
!7156 = distinct !DILexicalBlock(scope: !7147, file: !6622, line: 576, column: 50)
!7157 = !DILocation(line: 578, column: 2, scope: !7156)
!7158 = !DILocation(line: 581, column: 12, scope: !7072)
!7159 = !DILocation(line: 583, column: 2, scope: !7072)
!7160 = distinct !DISubprogram(name: "debug_monitor", scope: !6622, file: !6622, line: 632, type: !7161, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7163)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{null, !2609, !6695}
!7163 = !{!7164, !7165}
!7164 = !DILocalVariable(name: "esf", arg: 1, scope: !7160, file: !6622, line: 632, type: !2609)
!7165 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7160, file: !6622, line: 632, type: !6695)
!7166 = !DILocation(line: 0, scope: !7160)
!7167 = !DILocation(line: 634, column: 15, scope: !7160)
!7168 = !DILocation(line: 636, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !6622, line: 636, column: 2)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !6622, line: 636, column: 2)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !6622, line: 636, column: 2)
!7172 = distinct !DILexicalBlock(scope: !7160, file: !6622, line: 636, column: 2)
!7173 = !DILocation(line: 652, column: 1, scope: !7160)
!7174 = distinct !DISubprogram(name: "reserved_exception", scope: !6622, file: !6622, line: 776, type: !7175, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7177)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{null, !7075, !119}
!7177 = !{!7178, !7179}
!7178 = !DILocalVariable(name: "esf", arg: 1, scope: !7174, file: !6622, line: 776, type: !7075)
!7179 = !DILocalVariable(name: "fault", arg: 2, scope: !7174, file: !6622, line: 776, type: !119)
!7180 = !DILocation(line: 0, scope: !7174)
!7181 = !DILocation(line: 780, column: 2, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !6622, line: 780, column: 2)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !6622, line: 780, column: 2)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !6622, line: 780, column: 2)
!7185 = distinct !DILexicalBlock(scope: !7174, file: !6622, line: 780, column: 2)
!7186 = !DILocation(line: 783, column: 1, scope: !7174)
!7187 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6622, file: !6622, line: 658, type: !7188, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7190)
!7188 = !DISubroutineType(types: !7189)
!7189 = !{!345, !2609}
!7190 = !{!7191, !7192, !7193}
!7191 = !DILocalVariable(name: "esf", arg: 1, scope: !7187, file: !6622, line: 658, type: !2609)
!7192 = !DILocalVariable(name: "ret_addr", scope: !7187, file: !6622, line: 660, type: !2652)
!7193 = !DILocalVariable(name: "fault_insn", scope: !7187, file: !6622, line: 686, type: !199)
!7194 = !DILocation(line: 0, scope: !7187)
!7195 = !DILocation(line: 660, column: 46, scope: !7187)
!7196 = !DILocation(line: 660, column: 23, scope: !7187)
!7197 = !DILocation(line: 682, column: 11, scope: !7187)
!7198 = !DILocation(line: 271, column: 3, scope: !7199, inlinedAt: !7200)
!7199 = distinct !DISubprogram(name: "__DSB", scope: !6314, file: !6314, line: 269, type: !2960, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !2032)
!7200 = distinct !DILocation(line: 683, column: 2, scope: !7187)
!7201 = !{i64 3553404}
!7202 = !DILocation(line: 260, column: 3, scope: !7203, inlinedAt: !7204)
!7203 = distinct !DISubprogram(name: "__ISB", scope: !6314, file: !6314, line: 258, type: !2960, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !2032)
!7204 = distinct !DILocation(line: 684, column: 2, scope: !7187)
!7205 = !{i64 3553121}
!7206 = !DILocation(line: 686, column: 35, scope: !7187)
!7207 = !DILocation(line: 686, column: 24, scope: !7187)
!7208 = !DILocation(line: 688, column: 11, scope: !7187)
!7209 = !DILocation(line: 271, column: 3, scope: !7199, inlinedAt: !7210)
!7210 = distinct !DILocation(line: 689, column: 2, scope: !7187)
!7211 = !DILocation(line: 260, column: 3, scope: !7203, inlinedAt: !7212)
!7212 = distinct !DILocation(line: 690, column: 2, scope: !7187)
!7213 = !DILocation(line: 693, column: 45, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7187, file: !6622, line: 693, column: 6)
!7215 = !DILocation(line: 699, column: 1, scope: !7187)
!7216 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6622, file: !6622, line: 1107, type: !2960, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !2032)
!7217 = !DILocation(line: 1111, column: 11, scope: !7216)
!7218 = !DILocation(line: 1136, column: 1, scope: !7216)
!7219 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7220, file: !7220, line: 26, type: !2960, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7221)
!7220 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7221 = !{!7222}
!7222 = !DILocalVariable(name: "irq", scope: !7219, file: !7220, line: 28, type: !119)
!7223 = !DILocation(line: 0, scope: !7219)
!7224 = !DILocation(line: 30, column: 2, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7219, file: !7220, line: 30, column: 2)
!7226 = !DILocation(line: 31, column: 3, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !7220, line: 30, column: 39)
!7228 = distinct !DILexicalBlock(scope: !7225, file: !7220, line: 30, column: 2)
!7229 = !DILocation(line: 30, column: 35, scope: !7228)
!7230 = !DILocation(line: 30, column: 13, scope: !7228)
!7231 = distinct !{!7231, !7224, !7232}
!7232 = !DILocation(line: 32, column: 2, scope: !7225)
!7233 = !DILocation(line: 33, column: 1, scope: !7219)
!7234 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6354, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7235)
!7235 = !{!7236, !7237}
!7236 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7234, file: !533, line: 1814, type: !790)
!7237 = !DILocalVariable(name: "priority", arg: 2, scope: !7234, file: !533, line: 1814, type: !118)
!7238 = !DILocation(line: 0, scope: !7234)
!7239 = !DILocation(line: 1816, column: 7, scope: !7234)
!7240 = !DILocation(line: 0, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7234, file: !533, line: 1816, column: 7)
!7242 = !DILocation(line: 1824, column: 1, scope: !7234)
!7243 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7244, file: !7244, line: 27, type: !7245, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7351)
!7244 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7245 = !DISubroutineType(types: !7246)
!7246 = !{null, !7247}
!7247 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !7248)
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7249, size: 32)
!7249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !7250)
!7250 = !{!7251, !7309, !7321, !7322, !7323, !7324, !7325, !7331, !7346}
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7249, file: !143, line: 247, baseType: !7252, size: 384)
!7252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !7253)
!7253 = !{!7254, !7278, !7285, !7286, !7287, !7296, !7297, !7298}
!7254 = !DIDerivedType(tag: DW_TAG_member, scope: !7252, file: !143, line: 60, baseType: !7255, size: 64)
!7255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7252, file: !143, line: 60, size: 64, elements: !7256)
!7256 = !{!7257, !7272}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7255, file: !143, line: 61, baseType: !7258, size: 64)
!7258 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !7259)
!7259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !7260)
!7260 = !{!7261, !7267}
!7261 = !DIDerivedType(tag: DW_TAG_member, scope: !7259, file: !153, line: 38, baseType: !7262, size: 32)
!7262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7259, file: !153, line: 38, size: 32, elements: !7263)
!7263 = !{!7264, !7266}
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7262, file: !153, line: 39, baseType: !7265, size: 32)
!7265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7259, size: 32)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7262, file: !153, line: 40, baseType: !7265, size: 32)
!7267 = !DIDerivedType(tag: DW_TAG_member, scope: !7259, file: !153, line: 42, baseType: !7268, size: 32, offset: 32)
!7268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7259, file: !153, line: 42, size: 32, elements: !7269)
!7269 = !{!7270, !7271}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7268, file: !153, line: 43, baseType: !7265, size: 32)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7268, file: !153, line: 44, baseType: !7265, size: 32)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7255, file: !143, line: 62, baseType: !7273, size: 64)
!7273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !7274)
!7274 = !{!7275}
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7273, file: !169, line: 50, baseType: !7276, size: 64)
!7276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7277, size: 64, elements: !174)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7273, size: 32)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7252, file: !143, line: 68, baseType: !7279, size: 32, offset: 64)
!7279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7280, size: 32)
!7280 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !7281)
!7281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !7282)
!7282 = !{!7283}
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7281, file: !179, line: 232, baseType: !7284, size: 64)
!7284 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !7259)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7252, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7252, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!7287 = !DIDerivedType(tag: DW_TAG_member, scope: !7252, file: !143, line: 90, baseType: !7288, size: 16, offset: 112)
!7288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7252, file: !143, line: 90, size: 16, elements: !7289)
!7289 = !{!7290, !7295}
!7290 = !DIDerivedType(tag: DW_TAG_member, scope: !7288, file: !143, line: 91, baseType: !7291, size: 16)
!7291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7288, file: !143, line: 91, size: 16, elements: !7292)
!7292 = !{!7293, !7294}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7291, file: !143, line: 96, baseType: !195, size: 8)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7291, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7288, file: !143, line: 100, baseType: !199, size: 16)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7252, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7252, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7252, file: !143, line: 131, baseType: !7299, size: 192, offset: 192)
!7299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !7300)
!7300 = !{!7301, !7302, !7308}
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7299, file: !179, line: 245, baseType: !7258, size: 64)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7299, file: !179, line: 246, baseType: !7303, size: 32, offset: 64)
!7303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !7304)
!7304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7305, size: 32)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{null, !7307}
!7307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7299, size: 32)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7299, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7249, file: !143, line: 250, baseType: !7310, size: 288, offset: 384)
!7310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !7311)
!7311 = !{!7312, !7313, !7314, !7315, !7316, !7317, !7318, !7319, !7320}
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7310, file: !216, line: 26, baseType: !118, size: 32)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7310, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7310, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7310, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7310, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7310, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7310, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7310, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7310, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7249, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7249, file: !143, line: 256, baseType: !7280, size: 64, offset: 704)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7249, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7249, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7249, file: !143, line: 300, baseType: !7326, size: 96, offset: 1056)
!7326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !7327)
!7327 = !{!7328, !7329, !7330}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7326, file: !143, line: 153, baseType: !22, size: 32)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7326, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7326, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7249, file: !143, line: 325, baseType: !7332, size: 32, offset: 1152)
!7332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7333, size: 32)
!7333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !7334)
!7334 = !{!7335, !7341, !7342}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7333, file: !245, line: 5074, baseType: !7336, size: 96)
!7336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !7337)
!7337 = !{!7338, !7339, !7340}
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7336, file: !249, line: 57, baseType: !252, size: 32)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7336, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7336, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7333, file: !245, line: 5075, baseType: !7280, size: 64, offset: 96)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7333, file: !245, line: 5076, baseType: !7343, size: 32, offset: 160)
!7343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !7344)
!7344 = !{!7345}
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7343, file: !259, line: 52, baseType: !22, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7249, file: !143, line: 343, baseType: !7347, size: 64, offset: 1184)
!7347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !7348)
!7348 = !{!7349, !7350}
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7347, file: !216, line: 63, baseType: !118, size: 32)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7347, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!7351 = !{!7352}
!7352 = !DILocalVariable(name: "thread", arg: 1, scope: !7243, file: !7244, line: 27, type: !7247)
!7353 = !DILocation(line: 0, scope: !7243)
!7354 = !DILocation(line: 29, column: 6, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7243, file: !7244, line: 29, column: 6)
!7356 = !DILocation(line: 29, column: 15, scope: !7355)
!7357 = !DILocation(line: 29, column: 6, scope: !7243)
!7358 = !DILocation(line: 1031, column: 3, scope: !7359, inlinedAt: !7362)
!7359 = distinct !DISubprogram(name: "__get_IPSR", scope: !6314, file: !6314, line: 1027, type: !3198, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7360)
!7360 = !{!7361}
!7361 = !DILocalVariable(name: "result", scope: !7359, file: !6314, line: 1029, type: !118)
!7362 = distinct !DILocation(line: 48, column: 10, scope: !7363, inlinedAt: !7367)
!7363 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7364, file: !7364, line: 46, type: !7365, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2032)
!7364 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7365 = !DISubroutineType(types: !7366)
!7366 = !{!345}
!7367 = distinct !DILocation(line: 30, column: 7, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !7244, line: 30, column: 7)
!7369 = distinct !DILexicalBlock(scope: !7355, file: !7244, line: 29, column: 26)
!7370 = !{i64 3542252}
!7371 = !DILocation(line: 0, scope: !7359, inlinedAt: !7362)
!7372 = !DILocation(line: 48, column: 9, scope: !7363, inlinedAt: !7367)
!7373 = !DILocation(line: 30, column: 7, scope: !7369)
!7374 = !DILocation(line: 42, column: 14, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7368, file: !7244, line: 30, column: 25)
!7376 = !DILocation(line: 48, column: 15, scope: !7375)
!7377 = !DILocation(line: 49, column: 3, scope: !7375)
!7378 = !DILocation(line: 52, column: 2, scope: !7243)
!7379 = !DILocation(line: 53, column: 1, scope: !7243)
!7380 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !392, file: !392, line: 127, type: !2960, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !2032)
!7381 = !DILocation(line: 134, column: 2, scope: !7380)
!7382 = !DILocation(line: 156, column: 1, scope: !7380)
!7383 = !DILocation(line: 0, scope: !391)
!7384 = !DILocation(line: 289, column: 36, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !391, file: !392, line: 285, column: 2)
!7386 = !DILocation(line: 289, column: 42, scope: !7385)
!7387 = !DILocation(line: 300, column: 36, scope: !391)
!7388 = !DILocation(line: 301, column: 35, scope: !391)
!7389 = !DILocation(line: 302, column: 37, scope: !391)
!7390 = !DILocation(line: 311, column: 2, scope: !391)
!7391 = !DILocation(line: 316, column: 1, scope: !391)
!7392 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !561, file: !561, line: 180, type: !2960, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2032)
!7393 = !DILocation(line: 188, column: 12, scope: !7392)
!7394 = !DILocation(line: 271, column: 3, scope: !7395, inlinedAt: !7396)
!7395 = distinct !DISubprogram(name: "__DSB", scope: !6314, file: !6314, line: 269, type: !2960, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2032)
!7396 = distinct !DILocation(line: 192, column: 2, scope: !7392)
!7397 = !{i64 3705918}
!7398 = !DILocation(line: 260, column: 3, scope: !7399, inlinedAt: !7400)
!7399 = distinct !DISubprogram(name: "__ISB", scope: !6314, file: !6314, line: 258, type: !2960, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2032)
!7400 = distinct !DILocation(line: 193, column: 2, scope: !7392)
!7401 = !{i64 3705635}
!7402 = !DILocation(line: 194, column: 1, scope: !7392)
!7403 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !561, file: !561, line: 199, type: !2960, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2032)
!7404 = !DILocation(line: 282, column: 3, scope: !7405, inlinedAt: !7406)
!7405 = distinct !DISubprogram(name: "__DMB", scope: !6314, file: !6314, line: 280, type: !2960, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2032)
!7406 = distinct !DILocation(line: 202, column: 2, scope: !7403)
!7407 = !{i64 3706194}
!7408 = !DILocation(line: 205, column: 12, scope: !7403)
!7409 = !DILocation(line: 206, column: 1, scope: !7403)
!7410 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !561, file: !561, line: 275, type: !7411, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7424)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{null, !7413, !1816, !6589, !6589}
!7413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7414, size: 32)
!7414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7415)
!7415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !7416)
!7416 = !{!7417, !7418, !7419}
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7415, file: !505, line: 53, baseType: !22, size: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7415, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7415, file: !505, line: 55, baseType: !7420, size: 32, offset: 64)
!7420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !7421)
!7421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !7422)
!7422 = !{!7423}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7421, file: !511, line: 150, baseType: !118, size: 32)
!7424 = !{!7425, !7426, !7427, !7428}
!7425 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7410, file: !561, line: 276, type: !7413)
!7426 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7410, file: !561, line: 276, type: !1816)
!7427 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7410, file: !561, line: 277, type: !6589)
!7428 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7410, file: !561, line: 277, type: !6589)
!7429 = !DILocation(line: 0, scope: !7410)
!7430 = !DILocation(line: 279, column: 6, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7410, file: !561, line: 279, column: 6)
!7432 = !DILocation(line: 280, column: 57, scope: !7431)
!7433 = !DILocation(line: 279, column: 6, scope: !7410)
!7434 = !DILocation(line: 282, column: 3, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !561, line: 282, column: 3)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !561, line: 282, column: 3)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !561, line: 282, column: 3)
!7438 = distinct !DILexicalBlock(scope: !7431, file: !561, line: 280, column: 69)
!7439 = !DILocation(line: 285, column: 1, scope: !7410)
!7440 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7441, file: !7441, line: 220, type: !7442, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7444)
!7441 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7442 = !DISubroutineType(types: !7443)
!7443 = !{!119, !7413, !1816, !6589, !6589}
!7444 = !{!7445, !7446, !7447, !7448, !7449}
!7445 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7440, file: !7441, line: 221, type: !7413)
!7446 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7440, file: !7441, line: 221, type: !1816)
!7447 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7440, file: !7441, line: 222, type: !6589)
!7448 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7440, file: !7441, line: 223, type: !6589)
!7449 = !DILocalVariable(name: "mpu_reg_index", scope: !7440, file: !7441, line: 225, type: !119)
!7450 = !DILocation(line: 0, scope: !7440)
!7451 = !DILocation(line: 225, column: 22, scope: !7440)
!7452 = !DILocation(line: 233, column: 18, scope: !7440)
!7453 = !DILocation(line: 236, column: 23, scope: !7440)
!7454 = !DILocation(line: 236, column: 21, scope: !7440)
!7455 = !DILocation(line: 238, column: 2, scope: !7440)
!7456 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !561, file: !561, line: 105, type: !7457, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7459)
!7457 = !DISubroutineType(types: !7458)
!7458 = !{!119, !7413, !185, !185, !345}
!7459 = !{!7460, !7461, !7462, !7463, !7464, !7465}
!7460 = !DILocalVariable(name: "regions", arg: 1, scope: !7456, file: !561, line: 106, type: !7413)
!7461 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7456, file: !561, line: 106, type: !185)
!7462 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7456, file: !561, line: 106, type: !185)
!7463 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7456, file: !561, line: 107, type: !345)
!7464 = !DILocalVariable(name: "i", scope: !7456, file: !561, line: 109, type: !119)
!7465 = !DILocalVariable(name: "reg_index", scope: !7456, file: !561, line: 110, type: !119)
!7466 = !DILocation(line: 0, scope: !7456)
!7467 = !DILocation(line: 110, column: 18, scope: !7456)
!7468 = !DILocation(line: 112, column: 16, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7470, file: !561, line: 112, column: 2)
!7470 = distinct !DILexicalBlock(scope: !7456, file: !561, line: 112, column: 2)
!7471 = !DILocation(line: 112, column: 2, scope: !7470)
!7472 = !DILocation(line: 113, column: 7, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !561, line: 113, column: 7)
!7474 = distinct !DILexicalBlock(scope: !7469, file: !561, line: 112, column: 36)
!7475 = !DILocation(line: 113, column: 18, scope: !7473)
!7476 = !DILocation(line: 113, column: 23, scope: !7473)
!7477 = !DILocation(line: 113, column: 7, scope: !7474)
!7478 = !DILocation(line: 118, column: 23, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7474, file: !561, line: 118, column: 7)
!7480 = !DILocation(line: 119, column: 7, scope: !7479)
!7481 = !DILocation(line: 118, column: 7, scope: !7474)
!7482 = !DILocation(line: 120, column: 4, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7484, file: !561, line: 120, column: 4)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !561, line: 120, column: 4)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !561, line: 120, column: 4)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !561, line: 120, column: 4)
!7487 = distinct !DILexicalBlock(scope: !7479, file: !561, line: 119, column: 45)
!7488 = !DILocation(line: 121, column: 4, scope: !7487)
!7489 = !DILocation(line: 124, column: 36, scope: !7474)
!7490 = !DILocation(line: 124, column: 15, scope: !7474)
!7491 = !DILocation(line: 126, column: 17, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7474, file: !561, line: 126, column: 7)
!7493 = !DILocation(line: 126, column: 7, scope: !7474)
!7494 = !DILocation(line: 131, column: 12, scope: !7474)
!7495 = !DILocation(line: 132, column: 2, scope: !7474)
!7496 = !DILocation(line: 112, column: 32, scope: !7469)
!7497 = distinct !{!7497, !7471, !7498}
!7498 = !DILocation(line: 132, column: 2, scope: !7470)
!7499 = !DILocation(line: 135, column: 1, scope: !7456)
!7500 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7441, file: !7441, line: 63, type: !7501, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7503)
!7501 = !DISubroutineType(types: !7502)
!7502 = !{!119, !7413}
!7503 = !{!7504, !7505}
!7504 = !DILocalVariable(name: "part", arg: 1, scope: !7500, file: !7441, line: 63, type: !7413)
!7505 = !DILocalVariable(name: "partition_is_valid", scope: !7500, file: !7441, line: 70, type: !119)
!7506 = !DILocation(line: 0, scope: !7500)
!7507 = !DILocation(line: 71, column: 11, scope: !7500)
!7508 = !DILocation(line: 71, column: 37, scope: !7500)
!7509 = !{i32 0, i32 33}
!7510 = !DILocation(line: 72, column: 3, scope: !7500)
!7511 = !DILocation(line: 71, column: 30, scope: !7500)
!7512 = !DILocation(line: 75, column: 11, scope: !7500)
!7513 = !DILocation(line: 75, column: 17, scope: !7500)
!7514 = !DILocation(line: 75, column: 38, scope: !7500)
!7515 = !DILocation(line: 77, column: 2, scope: !7500)
!7516 = distinct !DISubprogram(name: "mpu_configure_region", scope: !561, file: !561, line: 79, type: !7517, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7519)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{!119, !1816, !7413}
!7519 = !{!7520, !7521, !7522}
!7520 = !DILocalVariable(name: "index", arg: 1, scope: !7516, file: !561, line: 79, type: !1816)
!7521 = !DILocalVariable(name: "new_region", arg: 2, scope: !7516, file: !561, line: 80, type: !7413)
!7522 = !DILocalVariable(name: "region_conf", scope: !7516, file: !561, line: 82, type: !550)
!7523 = !DILocation(line: 0, scope: !7516)
!7524 = !DILocation(line: 82, column: 2, scope: !7516)
!7525 = !DILocation(line: 82, column: 24, scope: !7516)
!7526 = !DILocation(line: 87, column: 33, scope: !7516)
!7527 = !DILocation(line: 87, column: 14, scope: !7516)
!7528 = !DILocation(line: 87, column: 19, scope: !7516)
!7529 = !DILocation(line: 91, column: 55, scope: !7516)
!7530 = !DILocation(line: 92, column: 16, scope: !7516)
!7531 = !DILocation(line: 92, column: 53, scope: !7516)
!7532 = !DILocation(line: 91, column: 2, scope: !7516)
!7533 = !DILocation(line: 95, column: 9, scope: !7516)
!7534 = !DILocation(line: 97, column: 1, scope: !7516)
!7535 = !DILocation(line: 95, column: 2, scope: !7516)
!7536 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7441, file: !7441, line: 113, type: !7537, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7542)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{null, !7539, !7540, !118, !118}
!7539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!7540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7541, size: 32)
!7541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7420)
!7542 = !{!7543, !7544, !7545, !7546}
!7543 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7536, file: !7441, line: 114, type: !7539)
!7544 = !DILocalVariable(name: "attr", arg: 2, scope: !7536, file: !7441, line: 115, type: !7540)
!7545 = !DILocalVariable(name: "base", arg: 3, scope: !7536, file: !7441, line: 115, type: !118)
!7546 = !DILocalVariable(name: "size", arg: 4, scope: !7536, file: !7441, line: 115, type: !118)
!7547 = !DILocation(line: 0, scope: !7536)
!7548 = !DILocation(line: 127, column: 23, scope: !7536)
!7549 = !DILocation(line: 127, column: 35, scope: !7536)
!7550 = !DILocation(line: 127, column: 33, scope: !7536)
!7551 = !DILocation(line: 127, column: 10, scope: !7536)
!7552 = !DILocation(line: 127, column: 15, scope: !7536)
!7553 = !DILocation(line: 129, column: 1, scope: !7536)
!7554 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !561, file: !561, line: 57, type: !7555, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7557)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!119, !1816, !548}
!7557 = !{!7558, !7559}
!7558 = !DILocalVariable(name: "index", arg: 1, scope: !7554, file: !561, line: 57, type: !1816)
!7559 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7554, file: !561, line: 58, type: !548)
!7560 = !DILocation(line: 0, scope: !7554)
!7561 = !DILocation(line: 61, column: 6, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7554, file: !561, line: 61, column: 6)
!7563 = !DILocation(line: 61, column: 12, scope: !7562)
!7564 = !DILocation(line: 61, column: 6, scope: !7554)
!7565 = !DILocation(line: 64, column: 3, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !561, line: 64, column: 3)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !561, line: 64, column: 3)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !561, line: 64, column: 3)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !561, line: 64, column: 3)
!7570 = distinct !DILexicalBlock(scope: !7562, file: !561, line: 61, column: 40)
!7571 = !DILocation(line: 65, column: 3, scope: !7570)
!7572 = !DILocation(line: 71, column: 2, scope: !7554)
!7573 = !DILocation(line: 73, column: 2, scope: !7554)
!7574 = !DILocation(line: 74, column: 1, scope: !7554)
!7575 = distinct !DISubprogram(name: "region_init", scope: !7441, file: !7441, line: 29, type: !7576, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7578)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{null, !6589, !548}
!7578 = !{!7579, !7580}
!7579 = !DILocalVariable(name: "index", arg: 1, scope: !7575, file: !7441, line: 29, type: !6589)
!7580 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7575, file: !7441, line: 30, type: !548)
!7581 = !DILocation(line: 0, scope: !7575)
!7582 = !DILocation(line: 33, column: 2, scope: !7575)
!7583 = !DILocation(line: 47, column: 28, scope: !7575)
!7584 = !DILocation(line: 47, column: 33, scope: !7575)
!7585 = !DILocation(line: 48, column: 26, scope: !7575)
!7586 = !DILocation(line: 47, column: 12, scope: !7575)
!7587 = !DILocation(line: 49, column: 32, scope: !7575)
!7588 = !DILocation(line: 49, column: 37, scope: !7575)
!7589 = !DILocation(line: 49, column: 12, scope: !7575)
!7590 = !DILocation(line: 53, column: 1, scope: !7575)
!7591 = distinct !DISubprogram(name: "set_region_number", scope: !7592, file: !7592, line: 32, type: !6409, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7593)
!7592 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7593 = !{!7594}
!7594 = !DILocalVariable(name: "index", arg: 1, scope: !7591, file: !7592, line: 32, type: !118)
!7595 = !DILocation(line: 0, scope: !7591)
!7596 = !DILocation(line: 34, column: 11, scope: !7591)
!7597 = !DILocation(line: 35, column: 1, scope: !7591)
!7598 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7441, file: !7441, line: 88, type: !7599, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7601)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!118, !118}
!7601 = !{!7602}
!7602 = !DILocalVariable(name: "size", arg: 1, scope: !7598, file: !7441, line: 88, type: !118)
!7603 = !DILocation(line: 0, scope: !7598)
!7604 = !DILocation(line: 91, column: 11, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7598, file: !7441, line: 91, column: 6)
!7606 = !DILocation(line: 91, column: 6, scope: !7598)
!7607 = !DILocation(line: 100, column: 11, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7598, file: !7441, line: 100, column: 6)
!7609 = !DILocation(line: 100, column: 6, scope: !7598)
!7610 = !DILocation(line: 104, column: 35, scope: !7598)
!7611 = !DILocation(line: 104, column: 16, scope: !7598)
!7612 = !DILocation(line: 104, column: 50, scope: !7598)
!7613 = !DILocation(line: 104, column: 72, scope: !7598)
!7614 = !DILocation(line: 104, column: 2, scope: !7598)
!7615 = !DILocation(line: 106, column: 1, scope: !7598)
!7616 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !561, file: !561, line: 307, type: !7617, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7619)
!7617 = !DISubroutineType(types: !7618)
!7618 = !{null, !7413, !185}
!7619 = !{!7620, !7621}
!7620 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7616, file: !561, line: 308, type: !7413)
!7621 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7616, file: !561, line: 308, type: !185)
!7622 = !DILocation(line: 0, scope: !7616)
!7623 = !DILocation(line: 310, column: 6, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7616, file: !561, line: 310, column: 6)
!7625 = !DILocation(line: 311, column: 3, scope: !7624)
!7626 = !DILocation(line: 310, column: 6, scope: !7616)
!7627 = !DILocation(line: 313, column: 3, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !561, line: 313, column: 3)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !561, line: 313, column: 3)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !561, line: 313, column: 3)
!7631 = distinct !DILexicalBlock(scope: !7624, file: !561, line: 311, column: 15)
!7632 = !DILocation(line: 316, column: 1, scope: !7616)
!7633 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7441, file: !7441, line: 249, type: !7634, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7636)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!119, !7413, !185}
!7636 = !{!7637, !7638, !7639, !7640}
!7637 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7633, file: !7441, line: 250, type: !7413)
!7638 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7633, file: !7441, line: 250, type: !185)
!7639 = !DILocalVariable(name: "mpu_reg_index", scope: !7633, file: !7441, line: 252, type: !119)
!7640 = !DILocalVariable(name: "i", scope: !7641, file: !7441, line: 264, type: !119)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !7441, line: 264, column: 3)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !7441, line: 261, column: 32)
!7643 = distinct !DILexicalBlock(scope: !7633, file: !7441, line: 261, column: 6)
!7644 = !DILocation(line: 0, scope: !7633)
!7645 = !DILocation(line: 252, column: 22, scope: !7633)
!7646 = !DILocation(line: 258, column: 18, scope: !7633)
!7647 = !DILocation(line: 261, column: 20, scope: !7643)
!7648 = !DILocation(line: 261, column: 6, scope: !7633)
!7649 = !DILocation(line: 0, scope: !7641)
!7650 = !DILocation(line: 265, column: 4, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7441, line: 264, column: 59)
!7652 = distinct !DILexicalBlock(scope: !7641, file: !7441, line: 264, column: 3)
!7653 = !DILocation(line: 264, column: 55, scope: !7652)
!7654 = !DILocation(line: 264, column: 33, scope: !7652)
!7655 = !DILocation(line: 264, column: 3, scope: !7641)
!7656 = distinct !{!7656, !7655, !7657}
!7657 = !DILocation(line: 266, column: 3, scope: !7641)
!7658 = !DILocation(line: 269, column: 2, scope: !7633)
!7659 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7660, file: !7660, line: 218, type: !6409, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7661)
!7660 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7661 = !{!7662}
!7662 = !DILocalVariable(name: "rnr", arg: 1, scope: !7659, file: !7660, line: 218, type: !118)
!7663 = !DILocation(line: 0, scope: !7659)
!7664 = !DILocation(line: 220, column: 12, scope: !7659)
!7665 = !DILocation(line: 221, column: 13, scope: !7659)
!7666 = !DILocation(line: 222, column: 1, scope: !7659)
!7667 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !561, file: !561, line: 326, type: !7668, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7670)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!119}
!7670 = !{!7671}
!7671 = !DILocalVariable(name: "r_index", scope: !7667, file: !561, line: 328, type: !118)
!7672 = !DILocation(line: 330, column: 17, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7667, file: !561, line: 330, column: 6)
!7674 = !DILocation(line: 330, column: 29, scope: !7673)
!7675 = !DILocation(line: 330, column: 6, scope: !7667)
!7676 = !DILocation(line: 337, column: 3, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !561, line: 337, column: 3)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !561, line: 337, column: 3)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !561, line: 337, column: 3)
!7680 = distinct !DILexicalBlock(scope: !7673, file: !561, line: 330, column: 50)
!7681 = !DILocation(line: 347, column: 2, scope: !7667)
!7682 = !DILocation(line: 0, scope: !7667)
!7683 = !DILocation(line: 364, column: 29, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !561, line: 364, column: 2)
!7685 = distinct !DILexicalBlock(scope: !7667, file: !561, line: 364, column: 2)
!7686 = !DILocation(line: 364, column: 2, scope: !7685)
!7687 = !DILocation(line: 365, column: 25, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7684, file: !561, line: 364, column: 66)
!7689 = !DILocation(line: 365, column: 3, scope: !7688)
!7690 = !DILocation(line: 364, column: 62, scope: !7684)
!7691 = distinct !{!7691, !7686, !7692}
!7692 = !DILocation(line: 366, column: 2, scope: !7685)
!7693 = !DILocation(line: 369, column: 23, scope: !7667)
!7694 = !DILocation(line: 369, column: 21, scope: !7667)
!7695 = !DILocation(line: 372, column: 2, scope: !7667)
!7696 = !DILocation(line: 433, column: 2, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !561, line: 433, column: 2)
!7698 = distinct !DILexicalBlock(scope: !7667, file: !561, line: 433, column: 2)
!7699 = !DILocation(line: 433, column: 2, scope: !7698)
!7700 = !DILocation(line: 433, column: 2, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7697, file: !561, line: 433, column: 2)
!7702 = !DILocation(line: 444, column: 1, scope: !7667)
!7703 = distinct !DISubprogram(name: "strcpy", scope: !7704, file: !7704, line: 20, type: !7705, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7709)
!7704 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7705 = !DISubroutineType(types: !7706)
!7706 = !{!106, !7707, !7708}
!7707 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7708 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !278)
!7709 = !{!7710, !7711, !7712}
!7710 = !DILocalVariable(name: "d", arg: 1, scope: !7703, file: !7704, line: 20, type: !7707)
!7711 = !DILocalVariable(name: "s", arg: 2, scope: !7703, file: !7704, line: 20, type: !7708)
!7712 = !DILocalVariable(name: "dest", scope: !7703, file: !7704, line: 22, type: !106)
!7713 = !DILocation(line: 0, scope: !7703)
!7714 = !DILocation(line: 24, column: 9, scope: !7703)
!7715 = !DILocation(line: 24, column: 12, scope: !7703)
!7716 = !DILocation(line: 24, column: 2, scope: !7703)
!7717 = !DILocation(line: 25, column: 6, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7703, file: !7704, line: 24, column: 21)
!7719 = !DILocation(line: 26, column: 4, scope: !7718)
!7720 = !DILocation(line: 27, column: 4, scope: !7718)
!7721 = distinct !{!7721, !7716, !7722}
!7722 = !DILocation(line: 28, column: 2, scope: !7703)
!7723 = !DILocation(line: 30, column: 5, scope: !7703)
!7724 = !DILocation(line: 32, column: 2, scope: !7703)
!7725 = distinct !DISubprogram(name: "strncpy", scope: !7704, file: !7704, line: 42, type: !7726, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7728)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{!106, !7707, !7708, !239}
!7728 = !{!7729, !7730, !7731, !7732}
!7729 = !DILocalVariable(name: "d", arg: 1, scope: !7725, file: !7704, line: 42, type: !7707)
!7730 = !DILocalVariable(name: "s", arg: 2, scope: !7725, file: !7704, line: 42, type: !7708)
!7731 = !DILocalVariable(name: "n", arg: 3, scope: !7725, file: !7704, line: 42, type: !239)
!7732 = !DILocalVariable(name: "dest", scope: !7725, file: !7704, line: 44, type: !106)
!7733 = !DILocation(line: 0, scope: !7725)
!7734 = !DILocation(line: 46, column: 12, scope: !7725)
!7735 = !DILocation(line: 46, column: 17, scope: !7725)
!7736 = !DILocation(line: 46, column: 20, scope: !7725)
!7737 = !DILocation(line: 46, column: 23, scope: !7725)
!7738 = !DILocation(line: 46, column: 2, scope: !7725)
!7739 = !DILocation(line: 47, column: 6, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7725, file: !7704, line: 46, column: 32)
!7741 = !DILocation(line: 48, column: 4, scope: !7740)
!7742 = !DILocation(line: 49, column: 4, scope: !7740)
!7743 = !DILocation(line: 50, column: 4, scope: !7740)
!7744 = distinct !{!7744, !7738, !7745}
!7745 = !DILocation(line: 51, column: 2, scope: !7725)
!7746 = !DILocation(line: 54, column: 6, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7725, file: !7704, line: 53, column: 16)
!7748 = !DILocation(line: 55, column: 4, scope: !7747)
!7749 = !DILocation(line: 56, column: 4, scope: !7747)
!7750 = !DILocation(line: 53, column: 11, scope: !7725)
!7751 = !DILocation(line: 53, column: 2, scope: !7725)
!7752 = distinct !{!7752, !7751, !7753}
!7753 = !DILocation(line: 57, column: 2, scope: !7725)
!7754 = !DILocation(line: 59, column: 2, scope: !7725)
!7755 = distinct !DISubprogram(name: "strchr", scope: !7704, file: !7704, line: 69, type: !7756, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7758)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!106, !278, !119}
!7758 = !{!7759, !7760, !7761}
!7759 = !DILocalVariable(name: "s", arg: 1, scope: !7755, file: !7704, line: 69, type: !278)
!7760 = !DILocalVariable(name: "c", arg: 2, scope: !7755, file: !7704, line: 69, type: !119)
!7761 = !DILocalVariable(name: "tmp", scope: !7755, file: !7704, line: 71, type: !107)
!7762 = !DILocation(line: 0, scope: !7755)
!7763 = !DILocation(line: 73, column: 2, scope: !7755)
!7764 = !DILocation(line: 73, column: 10, scope: !7755)
!7765 = !DILocation(line: 73, column: 13, scope: !7755)
!7766 = !DILocation(line: 73, column: 21, scope: !7755)
!7767 = !DILocation(line: 74, column: 4, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7755, file: !7704, line: 73, column: 38)
!7769 = distinct !{!7769, !7763, !7770}
!7770 = !DILocation(line: 75, column: 2, scope: !7755)
!7771 = !DILocation(line: 77, column: 9, scope: !7755)
!7772 = !DILocation(line: 77, column: 2, scope: !7755)
!7773 = distinct !DISubprogram(name: "strrchr", scope: !7704, file: !7704, line: 87, type: !7756, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7774)
!7774 = !{!7775, !7776, !7777}
!7775 = !DILocalVariable(name: "s", arg: 1, scope: !7773, file: !7704, line: 87, type: !278)
!7776 = !DILocalVariable(name: "c", arg: 2, scope: !7773, file: !7704, line: 87, type: !119)
!7777 = !DILocalVariable(name: "match", scope: !7773, file: !7704, line: 89, type: !106)
!7778 = !DILocation(line: 0, scope: !7773)
!7779 = !DILocation(line: 91, column: 2, scope: !7773)
!7780 = !DILocation(line: 92, column: 7, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !7704, line: 92, column: 7)
!7782 = distinct !DILexicalBlock(scope: !7773, file: !7704, line: 91, column: 5)
!7783 = !DILocation(line: 92, column: 10, scope: !7781)
!7784 = !DILocation(line: 92, column: 7, scope: !7782)
!7785 = !DILocation(line: 95, column: 13, scope: !7773)
!7786 = !DILocation(line: 95, column: 2, scope: !7782)
!7787 = distinct !{!7787, !7779, !7788}
!7788 = !DILocation(line: 95, column: 15, scope: !7773)
!7789 = !DILocation(line: 97, column: 2, scope: !7773)
!7790 = distinct !DISubprogram(name: "strlen", scope: !7704, file: !7704, line: 107, type: !7791, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!239, !278}
!7793 = !{!7794, !7795}
!7794 = !DILocalVariable(name: "s", arg: 1, scope: !7790, file: !7704, line: 107, type: !278)
!7795 = !DILocalVariable(name: "n", scope: !7790, file: !7704, line: 109, type: !239)
!7796 = !DILocation(line: 0, scope: !7790)
!7797 = !DILocation(line: 111, column: 9, scope: !7790)
!7798 = !DILocation(line: 111, column: 12, scope: !7790)
!7799 = !DILocation(line: 111, column: 2, scope: !7790)
!7800 = !DILocation(line: 112, column: 4, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7790, file: !7704, line: 111, column: 21)
!7802 = !DILocation(line: 113, column: 4, scope: !7801)
!7803 = distinct !{!7803, !7799, !7804}
!7804 = !DILocation(line: 114, column: 2, scope: !7790)
!7805 = !DILocation(line: 116, column: 2, scope: !7790)
!7806 = distinct !DISubprogram(name: "strnlen", scope: !7704, file: !7704, line: 126, type: !7807, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7809)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!239, !278, !239}
!7809 = !{!7810, !7811, !7812}
!7810 = !DILocalVariable(name: "s", arg: 1, scope: !7806, file: !7704, line: 126, type: !278)
!7811 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7806, file: !7704, line: 126, type: !239)
!7812 = !DILocalVariable(name: "n", scope: !7806, file: !7704, line: 128, type: !239)
!7813 = !DILocation(line: 0, scope: !7806)
!7814 = !DILocation(line: 130, column: 9, scope: !7806)
!7815 = !DILocation(line: 130, column: 12, scope: !7806)
!7816 = !DILocation(line: 130, column: 20, scope: !7806)
!7817 = !DILocation(line: 130, column: 2, scope: !7806)
!7818 = !DILocation(line: 131, column: 4, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7806, file: !7704, line: 130, column: 35)
!7820 = !DILocation(line: 132, column: 4, scope: !7819)
!7821 = distinct !{!7821, !7817, !7822}
!7822 = !DILocation(line: 133, column: 2, scope: !7806)
!7823 = !DILocation(line: 135, column: 2, scope: !7806)
!7824 = distinct !DISubprogram(name: "strcmp", scope: !7704, file: !7704, line: 145, type: !7825, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7827)
!7825 = !DISubroutineType(types: !7826)
!7826 = !{!119, !278, !278}
!7827 = !{!7828, !7829}
!7828 = !DILocalVariable(name: "s1", arg: 1, scope: !7824, file: !7704, line: 145, type: !278)
!7829 = !DILocalVariable(name: "s2", arg: 2, scope: !7824, file: !7704, line: 145, type: !278)
!7830 = !DILocation(line: 0, scope: !7824)
!7831 = !DILocation(line: 147, column: 10, scope: !7824)
!7832 = !DILocation(line: 147, column: 17, scope: !7824)
!7833 = !DILocation(line: 147, column: 14, scope: !7824)
!7834 = !DILocation(line: 147, column: 22, scope: !7824)
!7835 = !DILocation(line: 148, column: 5, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7824, file: !7704, line: 147, column: 40)
!7837 = !DILocation(line: 149, column: 5, scope: !7836)
!7838 = distinct !{!7838, !7839, !7840}
!7839 = !DILocation(line: 147, column: 2, scope: !7824)
!7840 = !DILocation(line: 150, column: 2, scope: !7824)
!7841 = !DILocation(line: 152, column: 9, scope: !7824)
!7842 = !DILocation(line: 152, column: 15, scope: !7824)
!7843 = !DILocation(line: 152, column: 13, scope: !7824)
!7844 = !DILocation(line: 152, column: 2, scope: !7824)
!7845 = distinct !DISubprogram(name: "strncmp", scope: !7704, file: !7704, line: 162, type: !7846, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7848)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{!119, !278, !278, !239}
!7848 = !{!7849, !7850, !7851}
!7849 = !DILocalVariable(name: "s1", arg: 1, scope: !7845, file: !7704, line: 162, type: !278)
!7850 = !DILocalVariable(name: "s2", arg: 2, scope: !7845, file: !7704, line: 162, type: !278)
!7851 = !DILocalVariable(name: "n", arg: 3, scope: !7845, file: !7704, line: 162, type: !239)
!7852 = !DILocation(line: 0, scope: !7845)
!7853 = !DILocation(line: 164, column: 17, scope: !7845)
!7854 = !DILocation(line: 164, column: 21, scope: !7845)
!7855 = !DILocation(line: 164, column: 28, scope: !7845)
!7856 = !DILocation(line: 164, column: 25, scope: !7845)
!7857 = !DILocation(line: 164, column: 33, scope: !7845)
!7858 = !DILocation(line: 165, column: 5, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7845, file: !7704, line: 164, column: 51)
!7860 = !DILocation(line: 166, column: 5, scope: !7859)
!7861 = !DILocation(line: 167, column: 4, scope: !7859)
!7862 = distinct !{!7862, !7863, !7864}
!7863 = !DILocation(line: 164, column: 2, scope: !7845)
!7864 = !DILocation(line: 168, column: 2, scope: !7845)
!7865 = !DILocation(line: 170, column: 25, scope: !7845)
!7866 = !DILocation(line: 170, column: 31, scope: !7845)
!7867 = !DILocation(line: 170, column: 29, scope: !7845)
!7868 = !DILocation(line: 170, column: 9, scope: !7845)
!7869 = !DILocation(line: 170, column: 2, scope: !7845)
!7870 = distinct !DISubprogram(name: "strtok_r", scope: !7704, file: !7704, line: 180, type: !7871, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7873)
!7871 = !DISubroutineType(types: !7872)
!7872 = !{!106, !106, !278, !283}
!7873 = !{!7874, !7875, !7876, !7877, !7878}
!7874 = !DILocalVariable(name: "str", arg: 1, scope: !7870, file: !7704, line: 180, type: !106)
!7875 = !DILocalVariable(name: "sep", arg: 2, scope: !7870, file: !7704, line: 180, type: !278)
!7876 = !DILocalVariable(name: "state", arg: 3, scope: !7870, file: !7704, line: 180, type: !283)
!7877 = !DILocalVariable(name: "start", scope: !7870, file: !7704, line: 182, type: !106)
!7878 = !DILocalVariable(name: "end", scope: !7870, file: !7704, line: 182, type: !106)
!7879 = !DILocation(line: 0, scope: !7870)
!7880 = !DILocation(line: 184, column: 10, scope: !7870)
!7881 = !DILocation(line: 184, column: 22, scope: !7870)
!7882 = !DILocation(line: 187, column: 9, scope: !7870)
!7883 = !DILocation(line: 187, column: 16, scope: !7870)
!7884 = !DILocation(line: 187, column: 19, scope: !7870)
!7885 = !DILocation(line: 187, column: 2, scope: !7870)
!7886 = !DILocation(line: 188, column: 8, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7870, file: !7704, line: 187, column: 40)
!7888 = distinct !{!7888, !7885, !7889}
!7889 = !DILocation(line: 189, column: 2, scope: !7870)
!7890 = !DILocation(line: 198, column: 9, scope: !7870)
!7891 = !DILocation(line: 198, column: 18, scope: !7870)
!7892 = !DILocation(line: 198, column: 17, scope: !7870)
!7893 = !DILocation(line: 198, column: 2, scope: !7870)
!7894 = !DILocation(line: 199, column: 6, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7870, file: !7704, line: 198, column: 37)
!7896 = !DILocation(line: 198, column: 14, scope: !7870)
!7897 = distinct !{!7897, !7893, !7898}
!7898 = !DILocation(line: 200, column: 2, scope: !7870)
!7899 = !DILocation(line: 203, column: 8, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7704, line: 202, column: 20)
!7901 = distinct !DILexicalBlock(scope: !7870, file: !7704, line: 202, column: 6)
!7902 = !DILocation(line: 204, column: 16, scope: !7900)
!7903 = !DILocation(line: 205, column: 2, scope: !7900)
!7904 = !DILocation(line: 210, column: 1, scope: !7870)
!7905 = distinct !DISubprogram(name: "strcat", scope: !7704, file: !7704, line: 212, type: !7705, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7906)
!7906 = !{!7907, !7908}
!7907 = !DILocalVariable(name: "dest", arg: 1, scope: !7905, file: !7704, line: 212, type: !7707)
!7908 = !DILocalVariable(name: "src", arg: 2, scope: !7905, file: !7704, line: 212, type: !7708)
!7909 = !DILocation(line: 0, scope: !7905)
!7910 = !DILocation(line: 214, column: 16, scope: !7905)
!7911 = !DILocation(line: 214, column: 14, scope: !7905)
!7912 = !DILocation(line: 214, column: 2, scope: !7905)
!7913 = !DILocation(line: 215, column: 2, scope: !7905)
!7914 = distinct !DISubprogram(name: "strncat", scope: !7704, file: !7704, line: 218, type: !7726, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7915)
!7915 = !{!7916, !7917, !7918, !7919, !7920}
!7916 = !DILocalVariable(name: "dest", arg: 1, scope: !7914, file: !7704, line: 218, type: !7707)
!7917 = !DILocalVariable(name: "src", arg: 2, scope: !7914, file: !7704, line: 218, type: !7708)
!7918 = !DILocalVariable(name: "n", arg: 3, scope: !7914, file: !7704, line: 219, type: !239)
!7919 = !DILocalVariable(name: "orig_dest", scope: !7914, file: !7704, line: 221, type: !106)
!7920 = !DILocalVariable(name: "len", scope: !7914, file: !7704, line: 222, type: !239)
!7921 = !DILocation(line: 0, scope: !7914)
!7922 = !DILocation(line: 222, column: 15, scope: !7914)
!7923 = !DILocation(line: 224, column: 7, scope: !7914)
!7924 = !DILocation(line: 225, column: 14, scope: !7914)
!7925 = !DILocation(line: 225, column: 19, scope: !7914)
!7926 = !DILocation(line: 225, column: 11, scope: !7914)
!7927 = !DILocation(line: 225, column: 23, scope: !7914)
!7928 = !DILocation(line: 225, column: 28, scope: !7914)
!7929 = !DILocation(line: 225, column: 2, scope: !7914)
!7930 = !DILocation(line: 226, column: 17, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7914, file: !7704, line: 225, column: 38)
!7932 = !DILocation(line: 226, column: 8, scope: !7931)
!7933 = !DILocation(line: 226, column: 11, scope: !7931)
!7934 = distinct !{!7934, !7929, !7935}
!7935 = !DILocation(line: 227, column: 2, scope: !7914)
!7936 = !DILocation(line: 228, column: 8, scope: !7914)
!7937 = !DILocation(line: 230, column: 2, scope: !7914)
!7938 = distinct !DISubprogram(name: "memcmp", scope: !7704, file: !7704, line: 239, type: !7939, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7941)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!119, !13, !13, !239}
!7941 = !{!7942, !7943, !7944, !7945, !7946}
!7942 = !DILocalVariable(name: "m1", arg: 1, scope: !7938, file: !7704, line: 239, type: !13)
!7943 = !DILocalVariable(name: "m2", arg: 2, scope: !7938, file: !7704, line: 239, type: !13)
!7944 = !DILocalVariable(name: "n", arg: 3, scope: !7938, file: !7704, line: 239, type: !239)
!7945 = !DILocalVariable(name: "c1", scope: !7938, file: !7704, line: 241, type: !278)
!7946 = !DILocalVariable(name: "c2", scope: !7938, file: !7704, line: 242, type: !278)
!7947 = !DILocation(line: 0, scope: !7938)
!7948 = !DILocation(line: 244, column: 7, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7938, file: !7704, line: 244, column: 6)
!7950 = !DILocation(line: 244, column: 6, scope: !7938)
!7951 = !DILocation(line: 248, column: 10, scope: !7938)
!7952 = !DILocation(line: 248, column: 14, scope: !7938)
!7953 = !DILocation(line: 248, column: 19, scope: !7938)
!7954 = !DILocation(line: 248, column: 2, scope: !7938)
!7955 = !DILocation(line: 248, column: 23, scope: !7938)
!7956 = !DILocation(line: 248, column: 30, scope: !7938)
!7957 = !DILocation(line: 248, column: 27, scope: !7938)
!7958 = !DILocation(line: 249, column: 5, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7938, file: !7704, line: 248, column: 36)
!7960 = !DILocation(line: 250, column: 5, scope: !7959)
!7961 = distinct !{!7961, !7954, !7962}
!7962 = !DILocation(line: 251, column: 2, scope: !7938)
!7963 = !DILocation(line: 253, column: 9, scope: !7938)
!7964 = !DILocation(line: 253, column: 15, scope: !7938)
!7965 = !DILocation(line: 253, column: 13, scope: !7938)
!7966 = !DILocation(line: 253, column: 2, scope: !7938)
!7967 = !DILocation(line: 254, column: 1, scope: !7938)
!7968 = distinct !DISubprogram(name: "memmove", scope: !7704, file: !7704, line: 263, type: !7969, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7971)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{!113, !113, !13, !239}
!7971 = !{!7972, !7973, !7974, !7975, !7976}
!7972 = !DILocalVariable(name: "d", arg: 1, scope: !7968, file: !7704, line: 263, type: !113)
!7973 = !DILocalVariable(name: "s", arg: 2, scope: !7968, file: !7704, line: 263, type: !13)
!7974 = !DILocalVariable(name: "n", arg: 3, scope: !7968, file: !7704, line: 263, type: !239)
!7975 = !DILocalVariable(name: "dest", scope: !7968, file: !7704, line: 265, type: !106)
!7976 = !DILocalVariable(name: "src", scope: !7968, file: !7704, line: 266, type: !278)
!7977 = !DILocation(line: 0, scope: !7968)
!7978 = !DILocation(line: 268, column: 21, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7968, file: !7704, line: 268, column: 6)
!7980 = !DILocation(line: 268, column: 28, scope: !7979)
!7981 = !DILocation(line: 268, column: 6, scope: !7968)
!7982 = !DILocation(line: 280, column: 12, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7979, file: !7704, line: 278, column: 9)
!7984 = !DILocation(line: 280, column: 3, scope: !7983)
!7985 = !DILocation(line: 275, column: 5, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7704, line: 274, column: 17)
!7987 = distinct !DILexicalBlock(scope: !7979, file: !7704, line: 268, column: 33)
!7988 = !DILocation(line: 276, column: 14, scope: !7986)
!7989 = !DILocation(line: 276, column: 4, scope: !7986)
!7990 = !DILocation(line: 276, column: 12, scope: !7986)
!7991 = !DILocation(line: 274, column: 12, scope: !7987)
!7992 = !DILocation(line: 274, column: 3, scope: !7987)
!7993 = distinct !{!7993, !7992, !7994}
!7994 = !DILocation(line: 277, column: 3, scope: !7987)
!7995 = !DILocation(line: 281, column: 12, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7983, file: !7704, line: 280, column: 17)
!7997 = !DILocation(line: 281, column: 10, scope: !7996)
!7998 = !DILocation(line: 282, column: 8, scope: !7996)
!7999 = !DILocation(line: 283, column: 7, scope: !7996)
!8000 = !DILocation(line: 284, column: 5, scope: !7996)
!8001 = distinct !{!8001, !7984, !8002}
!8002 = !DILocation(line: 285, column: 3, scope: !7983)
!8003 = !DILocation(line: 288, column: 2, scope: !7968)
!8004 = distinct !DISubprogram(name: "memcpy", scope: !7704, file: !7704, line: 298, type: !8005, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !8009)
!8005 = !DISubroutineType(types: !8006)
!8006 = !{!113, !8007, !8008, !239}
!8007 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !113)
!8008 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8009 = !{!8010, !8011, !8012, !8013, !8014}
!8010 = !DILocalVariable(name: "d", arg: 1, scope: !8004, file: !7704, line: 298, type: !8007)
!8011 = !DILocalVariable(name: "s", arg: 2, scope: !8004, file: !7704, line: 298, type: !8008)
!8012 = !DILocalVariable(name: "n", arg: 3, scope: !8004, file: !7704, line: 298, type: !239)
!8013 = !DILocalVariable(name: "d_byte", scope: !8004, file: !7704, line: 302, type: !989)
!8014 = !DILocalVariable(name: "s_byte", scope: !8004, file: !7704, line: 303, type: !2729)
!8015 = !DILocation(line: 0, scope: !8004)
!8016 = !DILocation(line: 337, column: 11, scope: !8004)
!8017 = !DILocation(line: 337, column: 2, scope: !8004)
!8018 = !DILocation(line: 338, column: 25, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8004, file: !7704, line: 337, column: 16)
!8020 = !DILocation(line: 338, column: 17, scope: !8019)
!8021 = !DILocation(line: 338, column: 11, scope: !8019)
!8022 = !DILocation(line: 338, column: 15, scope: !8019)
!8023 = !DILocation(line: 339, column: 4, scope: !8019)
!8024 = distinct !{!8024, !8017, !8025}
!8025 = !DILocation(line: 340, column: 2, scope: !8004)
!8026 = !DILocation(line: 342, column: 2, scope: !8004)
!8027 = distinct !DISubprogram(name: "memset", scope: !7704, file: !7704, line: 352, type: !8028, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !8030)
!8028 = !DISubroutineType(types: !8029)
!8029 = !{!113, !113, !119, !239}
!8030 = !{!8031, !8032, !8033, !8034, !8035}
!8031 = !DILocalVariable(name: "buf", arg: 1, scope: !8027, file: !7704, line: 352, type: !113)
!8032 = !DILocalVariable(name: "c", arg: 2, scope: !8027, file: !7704, line: 352, type: !119)
!8033 = !DILocalVariable(name: "n", arg: 3, scope: !8027, file: !7704, line: 352, type: !239)
!8034 = !DILocalVariable(name: "d_byte", scope: !8027, file: !7704, line: 356, type: !989)
!8035 = !DILocalVariable(name: "c_byte", scope: !8027, file: !7704, line: 357, type: !186)
!8036 = !DILocation(line: 0, scope: !8027)
!8037 = !DILocation(line: 357, column: 25, scope: !8027)
!8038 = !DILocation(line: 389, column: 11, scope: !8027)
!8039 = !DILocation(line: 389, column: 2, scope: !8027)
!8040 = !DILocation(line: 390, column: 11, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8027, file: !7704, line: 389, column: 16)
!8042 = !DILocation(line: 390, column: 15, scope: !8041)
!8043 = !DILocation(line: 391, column: 4, scope: !8041)
!8044 = distinct !{!8044, !8039, !8045}
!8045 = !DILocation(line: 392, column: 2, scope: !8027)
!8046 = !DILocation(line: 394, column: 2, scope: !8027)
!8047 = distinct !DISubprogram(name: "memchr", scope: !7704, file: !7704, line: 404, type: !8048, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !8050)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!113, !13, !119, !239}
!8050 = !{!8051, !8052, !8053, !8054}
!8051 = !DILocalVariable(name: "s", arg: 1, scope: !8047, file: !7704, line: 404, type: !13)
!8052 = !DILocalVariable(name: "c", arg: 2, scope: !8047, file: !7704, line: 404, type: !119)
!8053 = !DILocalVariable(name: "n", arg: 3, scope: !8047, file: !7704, line: 404, type: !239)
!8054 = !DILocalVariable(name: "p", scope: !8055, file: !7704, line: 407, type: !2729)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !7704, line: 406, column: 14)
!8056 = distinct !DILexicalBlock(scope: !8047, file: !7704, line: 406, column: 6)
!8057 = !DILocation(line: 0, scope: !8047)
!8058 = !DILocation(line: 406, column: 8, scope: !8056)
!8059 = !DILocation(line: 406, column: 6, scope: !8047)
!8060 = !DILocation(line: 409, column: 3, scope: !8055)
!8061 = !DILocation(line: 0, scope: !8055)
!8062 = !DILocation(line: 410, column: 8, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !7704, line: 410, column: 8)
!8064 = distinct !DILexicalBlock(scope: !8055, file: !7704, line: 409, column: 6)
!8065 = !DILocation(line: 410, column: 13, scope: !8063)
!8066 = !DILocation(line: 410, column: 8, scope: !8064)
!8067 = distinct !{!8067, !8060, !8068}
!8068 = !DILocation(line: 414, column: 20, scope: !8055)
!8069 = !DILocation(line: 417, column: 2, scope: !8047)
!8070 = !DILocation(line: 418, column: 1, scope: !8047)
!8071 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !571, file: !571, line: 23, type: !4209, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8072)
!8072 = !{!8073}
!8073 = !DILocalVariable(name: "hook", arg: 1, scope: !8071, file: !571, line: 23, type: !300)
!8074 = !DILocation(line: 0, scope: !8071)
!8075 = !DILocation(line: 25, column: 15, scope: !8071)
!8076 = !DILocation(line: 26, column: 1, scope: !8071)
!8077 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !571, file: !571, line: 14, type: !301, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8078)
!8078 = !{!8079}
!8079 = !DILocalVariable(name: "c", arg: 1, scope: !8077, file: !571, line: 14, type: !119)
!8080 = !DILocation(line: 0, scope: !8077)
!8081 = !DILocation(line: 18, column: 2, scope: !8077)
!8082 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !571, file: !571, line: 28, type: !8083, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8085)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!119, !119, !567}
!8085 = !{!8086, !8087}
!8086 = !DILocalVariable(name: "c", arg: 1, scope: !8082, file: !571, line: 28, type: !119)
!8087 = !DILocalVariable(name: "stream", arg: 2, scope: !8082, file: !571, line: 28, type: !567)
!8088 = !DILocation(line: 0, scope: !8082)
!8089 = !DILocation(line: 30, column: 27, scope: !8082)
!8090 = !DILocation(line: 30, column: 50, scope: !8082)
!8091 = !DILocation(line: 30, column: 9, scope: !8082)
!8092 = !DILocation(line: 30, column: 2, scope: !8082)
!8093 = distinct !DISubprogram(name: "fputc", scope: !571, file: !571, line: 41, type: !8083, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8094)
!8094 = !{!8095, !8096}
!8095 = !DILocalVariable(name: "c", arg: 1, scope: !8093, file: !571, line: 41, type: !119)
!8096 = !DILocalVariable(name: "stream", arg: 2, scope: !8093, file: !571, line: 41, type: !567)
!8097 = !DILocation(line: 0, scope: !8093)
!8098 = !DILocation(line: 43, column: 9, scope: !8093)
!8099 = !DILocation(line: 43, column: 2, scope: !8093)
!8100 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8101, file: !8101, line: 72, type: !8083, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8102)
!8101 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!8102 = !{!8103, !8104}
!8103 = !DILocalVariable(name: "c", arg: 1, scope: !8100, file: !8101, line: 72, type: !119)
!8104 = !DILocalVariable(name: "stream", arg: 2, scope: !8100, file: !8101, line: 72, type: !567)
!8105 = !DILocation(line: 0, scope: !8100)
!8106 = !DILocation(line: 81, column: 2, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8100, file: !8101, line: 81, column: 2)
!8108 = !{i64 2154911898}
!8109 = !DILocation(line: 82, column: 9, scope: !8100)
!8110 = !DILocation(line: 82, column: 2, scope: !8100)
!8111 = distinct !DISubprogram(name: "fputs", scope: !571, file: !571, line: 46, type: !8112, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8115)
!8112 = !DISubroutineType(types: !8113)
!8113 = !{!119, !7708, !8114}
!8114 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!8115 = !{!8116, !8117, !8118, !8119}
!8116 = !DILocalVariable(name: "s", arg: 1, scope: !8111, file: !571, line: 46, type: !7708)
!8117 = !DILocalVariable(name: "stream", arg: 2, scope: !8111, file: !571, line: 46, type: !8114)
!8118 = !DILocalVariable(name: "len", scope: !8111, file: !571, line: 48, type: !119)
!8119 = !DILocalVariable(name: "ret", scope: !8111, file: !571, line: 49, type: !119)
!8120 = !DILocation(line: 0, scope: !8111)
!8121 = !DILocation(line: 48, column: 12, scope: !8111)
!8122 = !DILocation(line: 51, column: 8, scope: !8111)
!8123 = !DILocation(line: 53, column: 13, scope: !8111)
!8124 = !DILocation(line: 53, column: 9, scope: !8111)
!8125 = !DILocation(line: 53, column: 2, scope: !8111)
!8126 = distinct !DISubprogram(name: "fwrite", scope: !571, file: !571, line: 99, type: !8127, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8129)
!8127 = !DISubroutineType(types: !8128)
!8128 = !{!239, !8008, !239, !239, !8114}
!8129 = !{!8130, !8131, !8132, !8133}
!8130 = !DILocalVariable(name: "ptr", arg: 1, scope: !8126, file: !571, line: 99, type: !8008)
!8131 = !DILocalVariable(name: "size", arg: 2, scope: !8126, file: !571, line: 99, type: !239)
!8132 = !DILocalVariable(name: "nitems", arg: 3, scope: !8126, file: !571, line: 99, type: !239)
!8133 = !DILocalVariable(name: "stream", arg: 4, scope: !8126, file: !571, line: 100, type: !8114)
!8134 = !DILocation(line: 0, scope: !8126)
!8135 = !DILocation(line: 102, column: 9, scope: !8126)
!8136 = !DILocation(line: 102, column: 2, scope: !8126)
!8137 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8101, file: !8101, line: 96, type: !8127, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8138)
!8138 = !{!8139, !8140, !8141, !8142}
!8139 = !DILocalVariable(name: "ptr", arg: 1, scope: !8137, file: !8101, line: 96, type: !8008)
!8140 = !DILocalVariable(name: "size", arg: 2, scope: !8137, file: !8101, line: 96, type: !239)
!8141 = !DILocalVariable(name: "nitems", arg: 3, scope: !8137, file: !8101, line: 96, type: !239)
!8142 = !DILocalVariable(name: "stream", arg: 4, scope: !8137, file: !8101, line: 96, type: !8114)
!8143 = !DILocation(line: 0, scope: !8137)
!8144 = !DILocation(line: 107, column: 2, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8137, file: !8101, line: 107, column: 2)
!8146 = !{i64 2154912002}
!8147 = !DILocation(line: 108, column: 9, scope: !8137)
!8148 = !DILocation(line: 108, column: 2, scope: !8137)
!8149 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !571, file: !571, line: 56, type: !8127, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8150)
!8150 = !{!8151, !8152, !8153, !8154, !8155, !8156, !8157, !8158}
!8151 = !DILocalVariable(name: "ptr", arg: 1, scope: !8149, file: !571, line: 56, type: !8008)
!8152 = !DILocalVariable(name: "size", arg: 2, scope: !8149, file: !571, line: 56, type: !239)
!8153 = !DILocalVariable(name: "nitems", arg: 3, scope: !8149, file: !571, line: 57, type: !239)
!8154 = !DILocalVariable(name: "stream", arg: 4, scope: !8149, file: !571, line: 57, type: !8114)
!8155 = !DILocalVariable(name: "i", scope: !8149, file: !571, line: 59, type: !239)
!8156 = !DILocalVariable(name: "j", scope: !8149, file: !571, line: 60, type: !239)
!8157 = !DILocalVariable(name: "p", scope: !8149, file: !571, line: 61, type: !2729)
!8158 = !DILabel(scope: !8149, name: "done", file: !571, line: 82)
!8159 = !DILocation(line: 0, scope: !8149)
!8160 = !DILocation(line: 63, column: 14, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8149, file: !571, line: 63, column: 6)
!8162 = !DILocation(line: 63, column: 24, scope: !8161)
!8163 = !DILocation(line: 72, column: 3, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8149, file: !571, line: 70, column: 5)
!8165 = !DILocation(line: 0, scope: !8164)
!8166 = !DILocation(line: 73, column: 8, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !571, line: 73, column: 8)
!8168 = distinct !DILexicalBlock(scope: !8164, file: !571, line: 72, column: 6)
!8169 = !DILocation(line: 73, column: 29, scope: !8167)
!8170 = !DILocation(line: 73, column: 27, scope: !8167)
!8171 = !DILocation(line: 73, column: 21, scope: !8167)
!8172 = !DILocation(line: 73, column: 33, scope: !8167)
!8173 = !DILocation(line: 73, column: 8, scope: !8168)
!8174 = !DILocation(line: 76, column: 5, scope: !8168)
!8175 = !DILocation(line: 77, column: 14, scope: !8164)
!8176 = !DILocation(line: 77, column: 3, scope: !8168)
!8177 = distinct !{!8177, !8163, !8178}
!8178 = !DILocation(line: 77, column: 17, scope: !8164)
!8179 = !DILocation(line: 79, column: 4, scope: !8164)
!8180 = !DILocation(line: 80, column: 13, scope: !8149)
!8181 = !DILocation(line: 80, column: 2, scope: !8164)
!8182 = distinct !{!8182, !8183, !8184}
!8183 = !DILocation(line: 70, column: 2, scope: !8149)
!8184 = !DILocation(line: 80, column: 16, scope: !8149)
!8185 = !DILocation(line: 82, column: 1, scope: !8149)
!8186 = !DILocation(line: 83, column: 17, scope: !8149)
!8187 = !DILocation(line: 83, column: 2, scope: !8149)
!8188 = !DILocation(line: 84, column: 1, scope: !8149)
!8189 = distinct !DISubprogram(name: "puts", scope: !571, file: !571, line: 106, type: !8190, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8192)
!8190 = !DISubroutineType(types: !8191)
!8191 = !{!119, !278}
!8192 = !{!8193}
!8193 = !DILocalVariable(name: "s", arg: 1, scope: !8189, file: !571, line: 106, type: !278)
!8194 = !DILocation(line: 0, scope: !8189)
!8195 = !DILocation(line: 108, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8189, file: !571, line: 108, column: 6)
!8197 = !DILocation(line: 108, column: 23, scope: !8196)
!8198 = !DILocation(line: 108, column: 6, scope: !8189)
!8199 = !DILocation(line: 112, column: 9, scope: !8189)
!8200 = !DILocation(line: 112, column: 29, scope: !8189)
!8201 = !DILocation(line: 112, column: 2, scope: !8189)
!8202 = !DILocation(line: 113, column: 1, scope: !8189)
!8203 = distinct !DISubprogram(name: "snprintf", scope: !8204, file: !8204, line: 28, type: !8205, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2731, retainedNodes: !8207)
!8204 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8205 = !DISubroutineType(types: !8206)
!8206 = !{!119, !7707, !239, !7708, null}
!8207 = !{!8208, !8209, !8210, !8211, !8218, !8223, !8224}
!8208 = !DILocalVariable(name: "str", arg: 1, scope: !8203, file: !8204, line: 28, type: !7707)
!8209 = !DILocalVariable(name: "len", arg: 2, scope: !8203, file: !8204, line: 28, type: !239)
!8210 = !DILocalVariable(name: "format", arg: 3, scope: !8203, file: !8204, line: 29, type: !7708)
!8211 = !DILocalVariable(name: "vargs", scope: !8203, file: !8204, line: 31, type: !8212)
!8212 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3293, line: 99, baseType: !8213)
!8213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3293, line: 40, baseType: !8214)
!8214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !8204, baseType: !8215)
!8215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !8216)
!8216 = !{!8217}
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !8215, file: !8204, line: 31, baseType: !113, size: 32)
!8218 = !DILocalVariable(name: "p", scope: !8203, file: !8204, line: 33, type: !8219)
!8219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emitter", file: !8204, line: 13, size: 64, elements: !8220)
!8220 = !{!8221, !8222}
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8219, file: !8204, line: 14, baseType: !106, size: 32)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8219, file: !8204, line: 15, baseType: !119, size: 32, offset: 32)
!8223 = !DILocalVariable(name: "r", scope: !8203, file: !8204, line: 34, type: !119)
!8224 = !DILocalVariable(name: "dummy", scope: !8203, file: !8204, line: 35, type: !107)
!8225 = !DILocation(line: 0, scope: !8203)
!8226 = !DILocation(line: 31, column: 2, scope: !8203)
!8227 = !DILocation(line: 31, column: 10, scope: !8203)
!8228 = !DILocation(line: 33, column: 2, scope: !8203)
!8229 = !DILocation(line: 33, column: 17, scope: !8203)
!8230 = !DILocation(line: 35, column: 2, scope: !8203)
!8231 = !DILocation(line: 37, column: 10, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8203, file: !8204, line: 37, column: 6)
!8233 = !DILocation(line: 37, column: 6, scope: !8203)
!8234 = !DILocation(line: 41, column: 4, scope: !8203)
!8235 = !DILocation(line: 41, column: 8, scope: !8203)
!8236 = !DILocation(line: 42, column: 4, scope: !8203)
!8237 = !DILocation(line: 42, column: 8, scope: !8203)
!8238 = !DILocation(line: 44, column: 2, scope: !8203)
!8239 = !DILocation(line: 45, column: 6, scope: !8203)
!8240 = !DILocation(line: 46, column: 2, scope: !8203)
!8241 = !DILocation(line: 48, column: 6, scope: !8203)
!8242 = !DILocation(line: 48, column: 11, scope: !8203)
!8243 = !DILocation(line: 50, column: 1, scope: !8203)
!8244 = !DILocation(line: 49, column: 2, scope: !8203)
!8245 = distinct !DISubprogram(name: "cbvprintf", scope: !3325, file: !3325, line: 739, type: !8246, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2731, retainedNodes: !8248)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{!119, !3675, !113, !278, !8212}
!8248 = !{!8249, !8250, !8251, !8252}
!8249 = !DILocalVariable(name: "out", arg: 1, scope: !8245, file: !3325, line: 739, type: !3675)
!8250 = !DILocalVariable(name: "ctx", arg: 2, scope: !8245, file: !3325, line: 739, type: !113)
!8251 = !DILocalVariable(name: "format", arg: 3, scope: !8245, file: !3325, line: 739, type: !278)
!8252 = !DILocalVariable(name: "ap", arg: 4, scope: !8245, file: !3325, line: 739, type: !8212)
!8253 = !DILocation(line: 0, scope: !8245)
!8254 = !DILocation(line: 741, column: 9, scope: !8245)
!8255 = !DILocation(line: 741, column: 2, scope: !8245)
!8256 = distinct !DISubprogram(name: "sprintf_out", scope: !8204, file: !8204, line: 18, type: !8257, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2731, retainedNodes: !8260)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{!119, !119, !8259}
!8259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 32)
!8260 = !{!8261, !8262}
!8261 = !DILocalVariable(name: "c", arg: 1, scope: !8256, file: !8204, line: 18, type: !119)
!8262 = !DILocalVariable(name: "p", arg: 2, scope: !8256, file: !8204, line: 18, type: !8259)
!8263 = !DILocation(line: 0, scope: !8256)
!8264 = !DILocation(line: 20, column: 9, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8256, file: !8204, line: 20, column: 6)
!8266 = !DILocation(line: 20, column: 13, scope: !8265)
!8267 = !DILocation(line: 20, column: 6, scope: !8256)
!8268 = !DILocation(line: 21, column: 15, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8265, file: !8204, line: 20, column: 18)
!8270 = !DILocation(line: 21, column: 8, scope: !8269)
!8271 = !DILocation(line: 21, column: 13, scope: !8269)
!8272 = !DILocation(line: 22, column: 10, scope: !8269)
!8273 = !DILocation(line: 23, column: 10, scope: !8269)
!8274 = !DILocation(line: 24, column: 2, scope: !8269)
!8275 = !DILocation(line: 25, column: 2, scope: !8256)
!8276 = distinct !DISubprogram(name: "sprintf", scope: !8204, file: !8204, line: 52, type: !8277, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2731, retainedNodes: !8279)
!8277 = !DISubroutineType(types: !8278)
!8278 = !{!119, !7707, !7708, null}
!8279 = !{!8280, !8281, !8282, !8283, !8284}
!8280 = !DILocalVariable(name: "str", arg: 1, scope: !8276, file: !8204, line: 52, type: !7707)
!8281 = !DILocalVariable(name: "format", arg: 2, scope: !8276, file: !8204, line: 52, type: !7708)
!8282 = !DILocalVariable(name: "vargs", scope: !8276, file: !8204, line: 54, type: !8212)
!8283 = !DILocalVariable(name: "p", scope: !8276, file: !8204, line: 56, type: !8219)
!8284 = !DILocalVariable(name: "r", scope: !8276, file: !8204, line: 57, type: !119)
!8285 = !DILocation(line: 0, scope: !8276)
!8286 = !DILocation(line: 54, column: 2, scope: !8276)
!8287 = !DILocation(line: 54, column: 10, scope: !8276)
!8288 = !DILocation(line: 56, column: 2, scope: !8276)
!8289 = !DILocation(line: 56, column: 17, scope: !8276)
!8290 = !DILocation(line: 59, column: 4, scope: !8276)
!8291 = !DILocation(line: 59, column: 8, scope: !8276)
!8292 = !DILocation(line: 60, column: 4, scope: !8276)
!8293 = !DILocation(line: 60, column: 8, scope: !8276)
!8294 = !DILocation(line: 62, column: 2, scope: !8276)
!8295 = !DILocation(line: 63, column: 6, scope: !8276)
!8296 = !DILocation(line: 64, column: 2, scope: !8276)
!8297 = !DILocation(line: 66, column: 6, scope: !8276)
!8298 = !DILocation(line: 66, column: 11, scope: !8276)
!8299 = !DILocation(line: 68, column: 1, scope: !8276)
!8300 = !DILocation(line: 67, column: 2, scope: !8276)
!8301 = distinct !DISubprogram(name: "vsnprintf", scope: !8204, file: !8204, line: 70, type: !8302, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2731, retainedNodes: !8304)
!8302 = !DISubroutineType(types: !8303)
!8303 = !{!119, !7707, !239, !7708, !8212}
!8304 = !{!8305, !8306, !8307, !8308, !8309, !8310, !8311}
!8305 = !DILocalVariable(name: "str", arg: 1, scope: !8301, file: !8204, line: 70, type: !7707)
!8306 = !DILocalVariable(name: "len", arg: 2, scope: !8301, file: !8204, line: 70, type: !239)
!8307 = !DILocalVariable(name: "format", arg: 3, scope: !8301, file: !8204, line: 71, type: !7708)
!8308 = !DILocalVariable(name: "vargs", arg: 4, scope: !8301, file: !8204, line: 71, type: !8212)
!8309 = !DILocalVariable(name: "p", scope: !8301, file: !8204, line: 73, type: !8219)
!8310 = !DILocalVariable(name: "r", scope: !8301, file: !8204, line: 74, type: !119)
!8311 = !DILocalVariable(name: "dummy", scope: !8301, file: !8204, line: 75, type: !107)
!8312 = !DILocation(line: 0, scope: !8301)
!8313 = !DILocation(line: 73, column: 2, scope: !8301)
!8314 = !DILocation(line: 73, column: 17, scope: !8301)
!8315 = !DILocation(line: 75, column: 2, scope: !8301)
!8316 = !DILocation(line: 77, column: 10, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8301, file: !8204, line: 77, column: 6)
!8318 = !DILocation(line: 77, column: 6, scope: !8301)
!8319 = !DILocation(line: 81, column: 4, scope: !8301)
!8320 = !DILocation(line: 81, column: 8, scope: !8301)
!8321 = !DILocation(line: 82, column: 4, scope: !8301)
!8322 = !DILocation(line: 82, column: 8, scope: !8301)
!8323 = !DILocation(line: 84, column: 6, scope: !8301)
!8324 = !DILocation(line: 86, column: 6, scope: !8301)
!8325 = !DILocation(line: 86, column: 11, scope: !8301)
!8326 = !DILocation(line: 88, column: 1, scope: !8301)
!8327 = !DILocation(line: 87, column: 2, scope: !8301)
!8328 = distinct !DISubprogram(name: "vsprintf", scope: !8204, file: !8204, line: 90, type: !8329, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2731, retainedNodes: !8331)
!8329 = !DISubroutineType(types: !8330)
!8330 = !{!119, !7707, !7708, !8212}
!8331 = !{!8332, !8333, !8334, !8335, !8336}
!8332 = !DILocalVariable(name: "str", arg: 1, scope: !8328, file: !8204, line: 90, type: !7707)
!8333 = !DILocalVariable(name: "format", arg: 2, scope: !8328, file: !8204, line: 90, type: !7708)
!8334 = !DILocalVariable(name: "vargs", arg: 3, scope: !8328, file: !8204, line: 91, type: !8212)
!8335 = !DILocalVariable(name: "p", scope: !8328, file: !8204, line: 93, type: !8219)
!8336 = !DILocalVariable(name: "r", scope: !8328, file: !8204, line: 94, type: !119)
!8337 = !DILocation(line: 0, scope: !8328)
!8338 = !DILocation(line: 93, column: 2, scope: !8328)
!8339 = !DILocation(line: 93, column: 17, scope: !8328)
!8340 = !DILocation(line: 96, column: 4, scope: !8328)
!8341 = !DILocation(line: 96, column: 8, scope: !8328)
!8342 = !DILocation(line: 97, column: 4, scope: !8328)
!8343 = !DILocation(line: 97, column: 8, scope: !8328)
!8344 = !DILocation(line: 99, column: 6, scope: !8328)
!8345 = !DILocation(line: 101, column: 6, scope: !8328)
!8346 = !DILocation(line: 101, column: 11, scope: !8328)
!8347 = !DILocation(line: 103, column: 1, scope: !8328)
!8348 = !DILocation(line: 102, column: 2, scope: !8328)
!8349 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !704, file: !704, line: 368, type: !757, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8350)
!8350 = !{!8351}
!8351 = !DILocalVariable(name: "dev", arg: 1, scope: !8349, file: !704, line: 368, type: !733)
!8352 = !DILocation(line: 0, scope: !8349)
!8353 = !DILocation(line: 370, column: 2, scope: !8349)
!8354 = !DILocation(line: 371, column: 1, scope: !8349)
!8355 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !704, file: !704, line: 243, type: !8356, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8358)
!8356 = !DISubroutineType(types: !8357)
!8357 = !{null, !119, !119, !733}
!8358 = !{!8359, !8360, !8361, !8362, !8364}
!8359 = !DILocalVariable(name: "min", arg: 1, scope: !8355, file: !704, line: 243, type: !119)
!8360 = !DILocalVariable(name: "max", arg: 2, scope: !8355, file: !704, line: 243, type: !119)
!8361 = !DILocalVariable(name: "dev", arg: 3, scope: !8355, file: !704, line: 243, type: !733)
!8362 = !DILocalVariable(name: "data", scope: !8355, file: !704, line: 245, type: !8363)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 32)
!8364 = !DILocalVariable(name: "line", scope: !8355, file: !704, line: 246, type: !119)
!8365 = !DILocation(line: 0, scope: !8355)
!8366 = !DILocation(line: 245, column: 38, scope: !8355)
!8367 = !DILocation(line: 249, column: 24, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !704, line: 249, column: 2)
!8369 = distinct !DILexicalBlock(scope: !8355, file: !704, line: 249, column: 2)
!8370 = !DILocation(line: 249, column: 2, scope: !8369)
!8371 = !DILocation(line: 251, column: 7, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !704, line: 251, column: 7)
!8373 = distinct !DILexicalBlock(scope: !8368, file: !704, line: 249, column: 39)
!8374 = !DILocation(line: 251, column: 7, scope: !8373)
!8375 = !DILocation(line: 253, column: 4, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8372, file: !704, line: 251, column: 36)
!8377 = !DILocation(line: 256, column: 24, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8376, file: !704, line: 256, column: 8)
!8379 = !DILocation(line: 256, column: 9, scope: !8378)
!8380 = !DILocation(line: 256, column: 8, scope: !8376)
!8381 = !DILocation(line: 260, column: 43, scope: !8376)
!8382 = !DILocation(line: 260, column: 4, scope: !8376)
!8383 = !DILocation(line: 261, column: 3, scope: !8376)
!8384 = !DILocation(line: 249, column: 35, scope: !8368)
!8385 = distinct !{!8385, !8370, !8386}
!8386 = !DILocation(line: 262, column: 2, scope: !8369)
!8387 = !DILocation(line: 263, column: 1, scope: !8355)
!8388 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !704, file: !704, line: 158, type: !301, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "line", arg: 1, scope: !8388, file: !704, line: 158, type: !119)
!8391 = !DILocation(line: 0, scope: !8388)
!8392 = !DILocation(line: 170, column: 38, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !704, line: 160, column: 17)
!8394 = distinct !DILexicalBlock(scope: !8388, file: !704, line: 160, column: 6)
!8395 = !DILocation(line: 170, column: 10, scope: !8393)
!8396 = !DILocation(line: 176, column: 1, scope: !8388)
!8397 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !704, file: !704, line: 183, type: !8398, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8400)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{null, !119}
!8400 = !{!8401}
!8401 = !DILocalVariable(name: "line", arg: 1, scope: !8397, file: !704, line: 183, type: !119)
!8402 = !DILocation(line: 0, scope: !8397)
!8403 = !DILocation(line: 195, column: 28, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !704, line: 185, column: 17)
!8405 = distinct !DILexicalBlock(scope: !8397, file: !704, line: 185, column: 6)
!8406 = !DILocation(line: 195, column: 3, scope: !8404)
!8407 = !DILocation(line: 200, column: 1, scope: !8397)
!8408 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8409, file: !8409, line: 910, type: !6409, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8410)
!8409 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8410 = !{!8411}
!8411 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8408, file: !8409, line: 910, type: !118)
!8412 = !DILocation(line: 0, scope: !8408)
!8413 = !DILocation(line: 912, column: 3, scope: !8408)
!8414 = !DILocation(line: 913, column: 1, scope: !8408)
!8415 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8409, file: !8409, line: 834, type: !7599, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8416)
!8416 = !{!8417}
!8417 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8415, file: !8409, line: 834, type: !118)
!8418 = !DILocation(line: 0, scope: !8415)
!8419 = !DILocation(line: 836, column: 11, scope: !8415)
!8420 = !DILocation(line: 836, column: 40, scope: !8415)
!8421 = !DILocation(line: 836, column: 3, scope: !8415)
!8422 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !704, file: !704, line: 304, type: !757, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8423)
!8423 = !{!8424}
!8424 = !DILocalVariable(name: "dev", arg: 1, scope: !8422, file: !704, line: 304, type: !733)
!8425 = !DILocation(line: 0, scope: !8422)
!8426 = !DILocation(line: 306, column: 2, scope: !8422)
!8427 = !DILocation(line: 307, column: 1, scope: !8422)
!8428 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !704, file: !704, line: 299, type: !757, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8429)
!8429 = !{!8430}
!8430 = !DILocalVariable(name: "dev", arg: 1, scope: !8428, file: !704, line: 299, type: !733)
!8431 = !DILocation(line: 0, scope: !8428)
!8432 = !DILocation(line: 301, column: 2, scope: !8428)
!8433 = !DILocation(line: 302, column: 1, scope: !8428)
!8434 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !704, file: !704, line: 294, type: !757, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8435)
!8435 = !{!8436}
!8436 = !DILocalVariable(name: "dev", arg: 1, scope: !8434, file: !704, line: 294, type: !733)
!8437 = !DILocation(line: 0, scope: !8434)
!8438 = !DILocation(line: 296, column: 2, scope: !8434)
!8439 = !DILocation(line: 297, column: 1, scope: !8434)
!8440 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !704, file: !704, line: 397, type: !757, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8441)
!8441 = !{!8442}
!8442 = !DILocalVariable(name: "dev", arg: 1, scope: !8440, file: !704, line: 397, type: !733)
!8443 = !DILocation(line: 0, scope: !8440)
!8444 = !DILocation(line: 399, column: 2, scope: !8440)
!8445 = !DILocation(line: 400, column: 1, scope: !8440)
!8446 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !704, file: !704, line: 392, type: !757, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8447)
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !704, line: 392, type: !733)
!8449 = !DILocation(line: 0, scope: !8446)
!8450 = !DILocation(line: 394, column: 2, scope: !8446)
!8451 = !DILocation(line: 395, column: 1, scope: !8446)
!8452 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !704, file: !704, line: 289, type: !757, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8453)
!8453 = !{!8454}
!8454 = !DILocalVariable(name: "dev", arg: 1, scope: !8452, file: !704, line: 289, type: !733)
!8455 = !DILocation(line: 0, scope: !8452)
!8456 = !DILocation(line: 291, column: 2, scope: !8452)
!8457 = !DILocation(line: 292, column: 1, scope: !8452)
!8458 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !704, file: !704, line: 387, type: !757, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8459)
!8459 = !{!8460}
!8460 = !DILocalVariable(name: "dev", arg: 1, scope: !8458, file: !704, line: 387, type: !733)
!8461 = !DILocation(line: 0, scope: !8458)
!8462 = !DILocation(line: 389, column: 2, scope: !8458)
!8463 = !DILocation(line: 390, column: 1, scope: !8458)
!8464 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !704, file: !704, line: 382, type: !757, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8465)
!8465 = !{!8466}
!8466 = !DILocalVariable(name: "dev", arg: 1, scope: !8464, file: !704, line: 382, type: !733)
!8467 = !DILocation(line: 0, scope: !8464)
!8468 = !DILocation(line: 384, column: 2, scope: !8464)
!8469 = !DILocation(line: 385, column: 1, scope: !8464)
!8470 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !704, file: !704, line: 373, type: !757, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8471)
!8471 = !{!8472}
!8472 = !DILocalVariable(name: "dev", arg: 1, scope: !8470, file: !704, line: 373, type: !733)
!8473 = !DILocation(line: 0, scope: !8470)
!8474 = !DILocation(line: 375, column: 2, scope: !8470)
!8475 = !DILocation(line: 376, column: 1, scope: !8470)
!8476 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !704, file: !704, line: 284, type: !757, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8477)
!8477 = !{!8478}
!8478 = !DILocalVariable(name: "dev", arg: 1, scope: !8476, file: !704, line: 284, type: !733)
!8479 = !DILocation(line: 0, scope: !8476)
!8480 = !DILocation(line: 286, column: 2, scope: !8476)
!8481 = !DILocation(line: 287, column: 1, scope: !8476)
!8482 = distinct !DISubprogram(name: "stm32_exti_init", scope: !704, file: !704, line: 416, type: !731, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8483)
!8483 = !{!8484}
!8484 = !DILocalVariable(name: "dev", arg: 1, scope: !8482, file: !704, line: 416, type: !733)
!8485 = !DILocation(line: 0, scope: !8482)
!8486 = !DILocation(line: 418, column: 2, scope: !8482)
!8487 = !DILocation(line: 420, column: 2, scope: !8482)
!8488 = !DILocation(line: 0, scope: !756)
!8489 = !DILocation(line: 493, column: 2, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !756, file: !704, line: 493, column: 2)
!8491 = !DILocation(line: 497, column: 2, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !756, file: !704, line: 497, column: 2)
!8493 = !DILocation(line: 507, column: 2, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !756, file: !704, line: 507, column: 2)
!8495 = !DILocation(line: 512, column: 2, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !756, file: !704, line: 512, column: 2)
!8497 = !DILocation(line: 516, column: 2, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !756, file: !704, line: 516, column: 2)
!8499 = !DILocation(line: 523, column: 2, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !756, file: !704, line: 523, column: 2)
!8501 = !DILocation(line: 527, column: 2, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !756, file: !704, line: 527, column: 2)
!8503 = !DILocation(line: 581, column: 2, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !756, file: !704, line: 581, column: 2)
!8505 = !DILocation(line: 586, column: 2, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !756, file: !704, line: 586, column: 2)
!8507 = !DILocation(line: 591, column: 2, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !756, file: !704, line: 591, column: 2)
!8509 = !DILocation(line: 595, column: 2, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !756, file: !704, line: 595, column: 2)
!8511 = !DILocation(line: 607, column: 1, scope: !756)
!8512 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !704, file: !704, line: 112, type: !8398, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8513)
!8513 = !{!8514, !8515}
!8514 = !DILocalVariable(name: "line", arg: 1, scope: !8512, file: !704, line: 112, type: !119)
!8515 = !DILocalVariable(name: "irqnum", scope: !8512, file: !704, line: 114, type: !119)
!8516 = !DILocation(line: 0, scope: !8512)
!8517 = !DILocation(line: 122, column: 13, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8512, file: !704, line: 122, column: 6)
!8519 = !DILocation(line: 122, column: 6, scope: !8512)
!8520 = !DILocation(line: 123, column: 3, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !704, line: 123, column: 3)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !704, line: 123, column: 3)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !704, line: 123, column: 3)
!8524 = distinct !DILexicalBlock(scope: !8518, file: !704, line: 122, column: 22)
!8525 = !DILocation(line: 121, column: 11, scope: !8512)
!8526 = !DILocation(line: 130, column: 26, scope: !8512)
!8527 = !DILocation(line: 130, column: 2, scope: !8512)
!8528 = !DILocation(line: 134, column: 2, scope: !8512)
!8529 = !DILocation(line: 135, column: 1, scope: !8512)
!8530 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8409, file: !8409, line: 268, type: !6409, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8531)
!8531 = !{!8532}
!8532 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8530, file: !8409, line: 268, type: !118)
!8533 = !DILocation(line: 0, scope: !8530)
!8534 = !DILocation(line: 270, column: 3, scope: !8530)
!8535 = !DILocation(line: 271, column: 1, scope: !8530)
!8536 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !704, file: !704, line: 137, type: !8398, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8537)
!8537 = !{!8538}
!8538 = !DILocalVariable(name: "line", arg: 1, scope: !8536, file: !704, line: 137, type: !119)
!8539 = !DILocation(line: 0, scope: !8536)
!8540 = !DILocation(line: 141, column: 11, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8536, file: !704, line: 141, column: 6)
!8542 = !DILocation(line: 141, column: 6, scope: !8536)
!8543 = !DILocation(line: 145, column: 28, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8541, file: !704, line: 141, column: 17)
!8545 = !DILocation(line: 145, column: 3, scope: !8544)
!8546 = !DILocation(line: 147, column: 2, scope: !8544)
!8547 = !DILocation(line: 151, column: 1, scope: !8536)
!8548 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8409, file: !8409, line: 309, type: !6409, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8549)
!8549 = !{!8550}
!8550 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8548, file: !8409, line: 309, type: !118)
!8551 = !DILocation(line: 0, scope: !8548)
!8552 = !DILocation(line: 311, column: 3, scope: !8548)
!8553 = !DILocation(line: 312, column: 1, scope: !8548)
!8554 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !704, file: !704, line: 202, type: !8555, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8557)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{null, !119, !119}
!8557 = !{!8558, !8559}
!8558 = !DILocalVariable(name: "line", arg: 1, scope: !8554, file: !704, line: 202, type: !119)
!8559 = !DILocalVariable(name: "trigger", arg: 2, scope: !8554, file: !704, line: 202, type: !119)
!8560 = !DILocation(line: 0, scope: !8554)
!8561 = !DILocation(line: 211, column: 2, scope: !8554)
!8562 = !DILocation(line: 213, column: 36, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8554, file: !704, line: 211, column: 19)
!8564 = !DILocation(line: 213, column: 3, scope: !8563)
!8565 = !DILocation(line: 214, column: 3, scope: !8563)
!8566 = !DILocation(line: 215, column: 3, scope: !8563)
!8567 = !DILocation(line: 217, column: 35, scope: !8563)
!8568 = !DILocation(line: 217, column: 3, scope: !8563)
!8569 = !DILocation(line: 218, column: 3, scope: !8563)
!8570 = !DILocation(line: 219, column: 3, scope: !8563)
!8571 = !DILocation(line: 221, column: 36, scope: !8563)
!8572 = !DILocation(line: 221, column: 3, scope: !8563)
!8573 = !DILocation(line: 222, column: 3, scope: !8563)
!8574 = !DILocation(line: 223, column: 3, scope: !8563)
!8575 = !DILocation(line: 225, column: 35, scope: !8563)
!8576 = !DILocation(line: 225, column: 3, scope: !8563)
!8577 = !DILocation(line: 226, column: 3, scope: !8563)
!8578 = !DILocation(line: 227, column: 3, scope: !8563)
!8579 = !DILocation(line: 232, column: 1, scope: !8554)
!8580 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8409, file: !8409, line: 573, type: !6409, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8581)
!8581 = !{!8582}
!8582 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8580, file: !8409, line: 573, type: !118)
!8583 = !DILocation(line: 0, scope: !8580)
!8584 = !DILocation(line: 575, column: 3, scope: !8580)
!8585 = !DILocation(line: 577, column: 1, scope: !8580)
!8586 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8409, file: !8409, line: 703, type: !6409, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8587)
!8587 = !{!8588}
!8588 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8586, file: !8409, line: 703, type: !118)
!8589 = !DILocation(line: 0, scope: !8586)
!8590 = !DILocation(line: 705, column: 3, scope: !8586)
!8591 = !DILocation(line: 706, column: 1, scope: !8586)
!8592 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8409, file: !8409, line: 529, type: !6409, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8593)
!8593 = !{!8594}
!8594 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8592, file: !8409, line: 529, type: !118)
!8595 = !DILocation(line: 0, scope: !8592)
!8596 = !DILocation(line: 531, column: 3, scope: !8592)
!8597 = !DILocation(line: 533, column: 1, scope: !8592)
!8598 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8409, file: !8409, line: 661, type: !6409, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8599)
!8599 = !{!8600}
!8600 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8598, file: !8409, line: 661, type: !118)
!8601 = !DILocation(line: 0, scope: !8598)
!8602 = !DILocation(line: 663, column: 3, scope: !8598)
!8603 = !DILocation(line: 664, column: 1, scope: !8598)
!8604 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !704, file: !704, line: 433, type: !8605, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8607)
!8605 = !DISubroutineType(types: !8606)
!8606 = !{!119, !119, !744, !113}
!8607 = !{!8608, !8609, !8610, !8611, !8613}
!8608 = !DILocalVariable(name: "line", arg: 1, scope: !8604, file: !704, line: 433, type: !119)
!8609 = !DILocalVariable(name: "cb", arg: 2, scope: !8604, file: !704, line: 433, type: !744)
!8610 = !DILocalVariable(name: "arg", arg: 3, scope: !8604, file: !704, line: 433, type: !113)
!8611 = !DILocalVariable(name: "dev", scope: !8604, file: !704, line: 435, type: !8612)
!8612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!8613 = !DILocalVariable(name: "data", scope: !8604, file: !704, line: 436, type: !8363)
!8614 = !DILocation(line: 0, scope: !8604)
!8615 = !DILocation(line: 438, column: 21, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8604, file: !704, line: 438, column: 6)
!8617 = !DILocation(line: 438, column: 6, scope: !8616)
!8618 = !DILocation(line: 438, column: 6, scope: !8604)
!8619 = !DILocation(line: 442, column: 20, scope: !8604)
!8620 = !DILocation(line: 443, column: 17, scope: !8604)
!8621 = !DILocation(line: 443, column: 22, scope: !8604)
!8622 = !DILocation(line: 445, column: 2, scope: !8604)
!8623 = !DILocation(line: 446, column: 1, scope: !8604)
!8624 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !704, file: !704, line: 448, type: !8398, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8625)
!8625 = !{!8626, !8627, !8628}
!8626 = !DILocalVariable(name: "line", arg: 1, scope: !8624, file: !704, line: 448, type: !119)
!8627 = !DILocalVariable(name: "dev", scope: !8624, file: !704, line: 450, type: !8612)
!8628 = !DILocalVariable(name: "data", scope: !8624, file: !704, line: 451, type: !8363)
!8629 = !DILocation(line: 0, scope: !8624)
!8630 = !DILocation(line: 453, column: 17, scope: !8624)
!8631 = !DILocation(line: 453, column: 20, scope: !8624)
!8632 = !DILocation(line: 454, column: 17, scope: !8624)
!8633 = !DILocation(line: 454, column: 22, scope: !8624)
!8634 = !DILocation(line: 455, column: 1, scope: !8624)
!8635 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !888, file: !888, line: 183, type: !926, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8636)
!8636 = !{!8637, !8638, !8639, !8640, !8641}
!8637 = !DILocalVariable(name: "dev", arg: 1, scope: !8635, file: !888, line: 183, type: !917)
!8638 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8635, file: !888, line: 184, type: !928)
!8639 = !DILocalVariable(name: "pclken", scope: !8635, file: !888, line: 186, type: !878)
!8640 = !DILocalVariable(name: "reg", scope: !8635, file: !888, line: 187, type: !1478)
!8641 = !DILocalVariable(name: "reg_val", scope: !8635, file: !888, line: 188, type: !118)
!8642 = !DILocation(line: 0, scope: !8635)
!8643 = !DILocation(line: 192, column: 6, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8635, file: !888, line: 192, column: 6)
!8645 = !DILocation(line: 192, column: 6, scope: !8635)
!8646 = !DILocation(line: 197, column: 52, scope: !8635)
!8647 = !DILocation(line: 197, column: 8, scope: !8635)
!8648 = !DILocation(line: 198, column: 12, scope: !8635)
!8649 = !DILocation(line: 199, column: 21, scope: !8635)
!8650 = !DILocation(line: 199, column: 10, scope: !8635)
!8651 = !DILocation(line: 200, column: 7, scope: !8635)
!8652 = !DILocation(line: 202, column: 2, scope: !8635)
!8653 = !DILocation(line: 203, column: 1, scope: !8635)
!8654 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !888, file: !888, line: 205, type: !926, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8655)
!8655 = !{!8656, !8657, !8658, !8659, !8660}
!8656 = !DILocalVariable(name: "dev", arg: 1, scope: !8654, file: !888, line: 205, type: !917)
!8657 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8654, file: !888, line: 206, type: !928)
!8658 = !DILocalVariable(name: "pclken", scope: !8654, file: !888, line: 208, type: !878)
!8659 = !DILocalVariable(name: "reg", scope: !8654, file: !888, line: 209, type: !1478)
!8660 = !DILocalVariable(name: "reg_val", scope: !8654, file: !888, line: 210, type: !118)
!8661 = !DILocation(line: 0, scope: !8654)
!8662 = !DILocation(line: 214, column: 6, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8654, file: !888, line: 214, column: 6)
!8664 = !DILocation(line: 214, column: 6, scope: !8654)
!8665 = !DILocation(line: 219, column: 52, scope: !8654)
!8666 = !DILocation(line: 219, column: 8, scope: !8654)
!8667 = !DILocation(line: 220, column: 12, scope: !8654)
!8668 = !DILocation(line: 221, column: 22, scope: !8654)
!8669 = !DILocation(line: 221, column: 13, scope: !8654)
!8670 = !DILocation(line: 221, column: 10, scope: !8654)
!8671 = !DILocation(line: 222, column: 7, scope: !8654)
!8672 = !DILocation(line: 224, column: 2, scope: !8654)
!8673 = !DILocation(line: 225, column: 1, scope: !8654)
!8674 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !888, file: !888, line: 262, type: !942, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8675)
!8675 = !{!8676, !8677, !8678, !8679, !8680, !8681, !8682, !8683}
!8676 = !DILocalVariable(name: "clock", arg: 1, scope: !8674, file: !888, line: 262, type: !917)
!8677 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8674, file: !888, line: 263, type: !928)
!8678 = !DILocalVariable(name: "rate", arg: 3, scope: !8674, file: !888, line: 264, type: !884)
!8679 = !DILocalVariable(name: "pclken", scope: !8674, file: !888, line: 266, type: !878)
!8680 = !DILocalVariable(name: "ahb_clock", scope: !8674, file: !888, line: 273, type: !118)
!8681 = !DILocalVariable(name: "apb1_clock", scope: !8674, file: !888, line: 274, type: !118)
!8682 = !DILocalVariable(name: "apb2_clock", scope: !8674, file: !888, line: 276, type: !118)
!8683 = !DILocalVariable(name: "ahb3_clock", scope: !8674, file: !888, line: 286, type: !118)
!8684 = !DILocation(line: 0, scope: !8674)
!8685 = !DILocation(line: 273, column: 23, scope: !8674)
!8686 = !DILocation(line: 299, column: 18, scope: !8674)
!8687 = !DILocation(line: 299, column: 2, scope: !8674)
!8688 = !DILocation(line: 274, column: 24, scope: !8674)
!8689 = !DILocation(line: 319, column: 3, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8674, file: !888, line: 299, column: 23)
!8691 = !DILocation(line: 276, column: 24, scope: !8674)
!8692 = !DILocation(line: 323, column: 3, scope: !8690)
!8693 = !DILocation(line: 346, column: 33, scope: !8690)
!8694 = !DILocation(line: 346, column: 11, scope: !8690)
!8695 = !DILocation(line: 350, column: 3, scope: !8690)
!8696 = !DILocation(line: 354, column: 33, scope: !8690)
!8697 = !DILocation(line: 354, column: 11, scope: !8690)
!8698 = !DILocation(line: 358, column: 3, scope: !8690)
!8699 = !DILocation(line: 374, column: 3, scope: !8690)
!8700 = !DILocation(line: 379, column: 3, scope: !8690)
!8701 = !DILocation(line: 0, scope: !8690)
!8702 = !DILocation(line: 396, column: 1, scope: !8674)
!8703 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !888, file: !888, line: 227, type: !958, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8704)
!8704 = !{!8705, !8706, !8707, !8708, !8709, !8710, !8711, !8712}
!8705 = !DILocalVariable(name: "dev", arg: 1, scope: !8703, file: !888, line: 227, type: !917)
!8706 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8703, file: !888, line: 228, type: !928)
!8707 = !DILocalVariable(name: "data", arg: 3, scope: !8703, file: !888, line: 229, type: !113)
!8708 = !DILocalVariable(name: "pclken", scope: !8703, file: !888, line: 233, type: !878)
!8709 = !DILocalVariable(name: "reg", scope: !8703, file: !888, line: 234, type: !1478)
!8710 = !DILocalVariable(name: "reg_val", scope: !8703, file: !888, line: 235, type: !118)
!8711 = !DILocalVariable(name: "dt_val", scope: !8703, file: !888, line: 235, type: !118)
!8712 = !DILocalVariable(name: "err", scope: !8703, file: !888, line: 236, type: !119)
!8713 = !DILocation(line: 0, scope: !8703)
!8714 = !DILocation(line: 241, column: 30, scope: !8703)
!8715 = !DILocation(line: 241, column: 8, scope: !8703)
!8716 = !DILocation(line: 242, column: 10, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8703, file: !888, line: 242, column: 6)
!8718 = !DILocation(line: 242, column: 6, scope: !8703)
!8719 = !DILocation(line: 247, column: 11, scope: !8703)
!8720 = !DILocation(line: 248, column: 6, scope: !8703)
!8721 = !DILocation(line: 247, column: 44, scope: !8703)
!8722 = !DILocation(line: 250, column: 6, scope: !8703)
!8723 = !DILocation(line: 249, column: 52, scope: !8703)
!8724 = !DILocation(line: 249, column: 8, scope: !8703)
!8725 = !DILocation(line: 251, column: 12, scope: !8703)
!8726 = !DILocation(line: 252, column: 10, scope: !8703)
!8727 = !DILocation(line: 253, column: 7, scope: !8703)
!8728 = !DILocation(line: 255, column: 2, scope: !8703)
!8729 = !DILocation(line: 260, column: 1, scope: !8703)
!8730 = distinct !DISubprogram(name: "enabled_clock", scope: !888, file: !888, line: 100, type: !8731, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8733)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!119, !118}
!8733 = !{!8734, !8735}
!8734 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8730, file: !888, line: 100, type: !118)
!8735 = !DILocalVariable(name: "r", scope: !8730, file: !888, line: 102, type: !119)
!8736 = !DILocation(line: 0, scope: !8730)
!8737 = !DILocation(line: 104, column: 2, scope: !8730)
!8738 = !DILocation(line: 180, column: 2, scope: !8730)
!8739 = !DILocation(line: 181, column: 1, scope: !8730)
!8740 = distinct !DISubprogram(name: "get_bus_clock", scope: !888, file: !888, line: 79, type: !8741, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8743)
!8741 = !DISubroutineType(types: !8742)
!8742 = !{!118, !118, !118}
!8743 = !{!8744, !8745}
!8744 = !DILocalVariable(name: "clock", arg: 1, scope: !8740, file: !888, line: 79, type: !118)
!8745 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8740, file: !888, line: 79, type: !118)
!8746 = !DILocation(line: 0, scope: !8740)
!8747 = !DILocation(line: 81, column: 15, scope: !8740)
!8748 = !DILocation(line: 81, column: 2, scope: !8740)
!8749 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !888, file: !888, line: 68, type: !8750, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8752)
!8750 = !DISubroutineType(types: !8751)
!8751 = !{!118, !118, !119, !119, !119}
!8752 = !{!8753, !8754, !8755, !8756}
!8753 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8749, file: !888, line: 68, type: !118)
!8754 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8749, file: !888, line: 69, type: !119)
!8755 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8749, file: !888, line: 70, type: !119)
!8756 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8749, file: !888, line: 71, type: !119)
!8757 = !DILocation(line: 0, scope: !8749)
!8758 = !DILocation(line: 75, column: 22, scope: !8749)
!8759 = !DILocation(line: 76, column: 13, scope: !8749)
!8760 = !DILocation(line: 75, column: 34, scope: !8749)
!8761 = !DILocation(line: 75, column: 2, scope: !8749)
!8762 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !888, file: !888, line: 641, type: !915, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8763)
!8763 = !{!8764, !8765, !8766}
!8764 = !DILocalVariable(name: "dev", arg: 1, scope: !8762, file: !888, line: 641, type: !917)
!8765 = !DILocalVariable(name: "old_flash_freq", scope: !8762, file: !888, line: 664, type: !118)
!8766 = !DILocalVariable(name: "new_flash_freq", scope: !8762, file: !888, line: 665, type: !118)
!8767 = !DILocation(line: 0, scope: !8762)
!8768 = !DILocation(line: 646, column: 2, scope: !8762)
!8769 = !DILocation(line: 667, column: 19, scope: !8762)
!8770 = !DILocation(line: 674, column: 21, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8762, file: !888, line: 674, column: 6)
!8772 = !DILocation(line: 674, column: 6, scope: !8762)
!8773 = !DILocation(line: 675, column: 3, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8771, file: !888, line: 674, column: 59)
!8775 = !DILocation(line: 676, column: 2, scope: !8774)
!8776 = !DILocation(line: 680, column: 2, scope: !8762)
!8777 = !DILocation(line: 683, column: 2, scope: !8762)
!8778 = !DILocation(line: 690, column: 3, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !888, line: 689, column: 9)
!8780 = distinct !DILexicalBlock(scope: !8762, file: !888, line: 685, column: 6)
!8781 = !DILocation(line: 695, column: 2, scope: !8762)
!8782 = !DILocation(line: 696, column: 2, scope: !8762)
!8783 = !DILocation(line: 696, column: 9, scope: !8762)
!8784 = !DILocation(line: 696, column: 34, scope: !8762)
!8785 = distinct !{!8785, !8782, !8786}
!8786 = !DILocation(line: 697, column: 2, scope: !8762)
!8787 = !DILocation(line: 720, column: 21, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8762, file: !888, line: 720, column: 6)
!8789 = !DILocation(line: 720, column: 6, scope: !8762)
!8790 = !DILocation(line: 721, column: 3, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !888, line: 720, column: 60)
!8792 = !DILocation(line: 722, column: 2, scope: !8791)
!8793 = !DILocation(line: 725, column: 18, scope: !8762)
!8794 = !DILocation(line: 728, column: 2, scope: !8762)
!8795 = !DILocation(line: 730, column: 2, scope: !8762)
!8796 = !DILocation(line: 745, column: 2, scope: !8762)
!8797 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8798, file: !8798, line: 3275, type: !3198, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8798 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8799 = !DILocation(line: 3277, column: 21, scope: !8797)
!8800 = !DILocation(line: 3277, column: 3, scope: !8797)
!8801 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !888, file: !888, line: 507, type: !2960, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8802 = !DILocation(line: 516, column: 4, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !888, line: 515, column: 10)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !888, line: 513, column: 7)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !888, line: 510, column: 37)
!8806 = distinct !DILexicalBlock(scope: !8801, file: !888, line: 510, column: 6)
!8807 = !DILocation(line: 526, column: 3, scope: !8805)
!8808 = !DILocation(line: 527, column: 3, scope: !8805)
!8809 = !DILocation(line: 527, column: 10, scope: !8805)
!8810 = !DILocation(line: 527, column: 31, scope: !8805)
!8811 = distinct !{!8811, !8808, !8812}
!8812 = !DILocation(line: 529, column: 3, scope: !8805)
!8813 = !DILocation(line: 583, column: 3, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !888, line: 577, column: 37)
!8815 = distinct !DILexicalBlock(scope: !8801, file: !888, line: 577, column: 6)
!8816 = !DILocation(line: 584, column: 3, scope: !8814)
!8817 = !DILocation(line: 584, column: 10, scope: !8814)
!8818 = !DILocation(line: 584, column: 31, scope: !8814)
!8819 = distinct !{!8819, !8816, !8820}
!8820 = !DILocation(line: 585, column: 3, scope: !8814)
!8821 = !DILocation(line: 627, column: 1, scope: !8801)
!8822 = distinct !DISubprogram(name: "set_up_plls", scope: !888, file: !888, line: 448, type: !2960, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8823 = !DILocation(line: 460, column: 6, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8822, file: !888, line: 460, column: 6)
!8825 = !DILocation(line: 460, column: 31, scope: !8824)
!8826 = !DILocation(line: 460, column: 6, scope: !8822)
!8827 = !DILocation(line: 461, column: 3, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8824, file: !888, line: 460, column: 67)
!8829 = !DILocation(line: 462, column: 3, scope: !8828)
!8830 = !DILocation(line: 463, column: 2, scope: !8828)
!8831 = !DILocation(line: 464, column: 2, scope: !8822)
!8832 = !DILocation(line: 488, column: 2, scope: !8822)
!8833 = !DILocation(line: 492, column: 2, scope: !8822)
!8834 = !DILocation(line: 496, column: 2, scope: !8822)
!8835 = !DILocation(line: 499, column: 2, scope: !8822)
!8836 = !DILocation(line: 500, column: 2, scope: !8822)
!8837 = !DILocation(line: 500, column: 9, scope: !8822)
!8838 = !DILocation(line: 500, column: 30, scope: !8822)
!8839 = distinct !{!8839, !8836, !8840}
!8840 = !DILocation(line: 502, column: 2, scope: !8822)
!8841 = !DILocation(line: 505, column: 1, scope: !8822)
!8842 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8798, file: !8798, line: 3224, type: !6409, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8843)
!8843 = !{!8844}
!8844 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8842, file: !8798, line: 3224, type: !118)
!8845 = !DILocation(line: 0, scope: !8842)
!8846 = !DILocation(line: 3226, column: 3, scope: !8842)
!8847 = !DILocation(line: 3227, column: 1, scope: !8842)
!8848 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8798, file: !8798, line: 3188, type: !6409, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8849)
!8849 = !{!8850}
!8850 = !DILocalVariable(name: "Source", arg: 1, scope: !8848, file: !8798, line: 3188, type: !118)
!8851 = !DILocation(line: 0, scope: !8848)
!8852 = !DILocation(line: 3190, column: 3, scope: !8848)
!8853 = !DILocation(line: 3191, column: 1, scope: !8848)
!8854 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8798, file: !8798, line: 3204, type: !3198, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8855 = !DILocation(line: 3206, column: 21, scope: !8854)
!8856 = !DILocation(line: 3206, column: 3, scope: !8854)
!8857 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8798, file: !8798, line: 3240, type: !6409, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8858)
!8858 = !{!8859}
!8859 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8857, file: !8798, line: 3240, type: !118)
!8860 = !DILocation(line: 0, scope: !8857)
!8861 = !DILocation(line: 3242, column: 3, scope: !8857)
!8862 = !DILocation(line: 3243, column: 1, scope: !8857)
!8863 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8798, file: !8798, line: 3256, type: !6409, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8864)
!8864 = !{!8865}
!8865 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8863, file: !8798, line: 3256, type: !118)
!8866 = !DILocation(line: 0, scope: !8863)
!8867 = !DILocation(line: 3258, column: 3, scope: !8863)
!8868 = !DILocation(line: 3259, column: 1, scope: !8863)
!8869 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !888, file: !888, line: 409, type: !2960, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8870 = !DILocation(line: 412, column: 6, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8869, file: !888, line: 412, column: 6)
!8872 = !DILocation(line: 412, column: 27, scope: !8871)
!8873 = !DILocation(line: 412, column: 6, scope: !8869)
!8874 = !DILocation(line: 414, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !888, line: 412, column: 33)
!8876 = !DILocation(line: 415, column: 3, scope: !8875)
!8877 = !DILocation(line: 415, column: 10, scope: !8875)
!8878 = !DILocation(line: 415, column: 31, scope: !8875)
!8879 = distinct !{!8879, !8876, !8880}
!8880 = !DILocation(line: 417, column: 3, scope: !8875)
!8881 = !DILocation(line: 421, column: 2, scope: !8869)
!8882 = !DILocation(line: 422, column: 2, scope: !8869)
!8883 = !DILocation(line: 422, column: 9, scope: !8869)
!8884 = !DILocation(line: 422, column: 34, scope: !8869)
!8885 = distinct !{!8885, !8882, !8886}
!8886 = !DILocation(line: 423, column: 2, scope: !8869)
!8887 = !DILocation(line: 424, column: 1, scope: !8869)
!8888 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8798, file: !8798, line: 4195, type: !2960, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8889 = !DILocation(line: 4197, column: 3, scope: !8888)
!8890 = !DILocation(line: 4198, column: 1, scope: !8888)
!8891 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8798, file: !8798, line: 4184, type: !2960, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8892 = !DILocation(line: 4186, column: 3, scope: !8891)
!8893 = !DILocation(line: 4187, column: 1, scope: !8891)
!8894 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8798, file: !8798, line: 4205, type: !3198, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8895 = !DILocation(line: 4207, column: 11, scope: !8894)
!8896 = !DILocation(line: 4207, column: 44, scope: !8894)
!8897 = !DILocation(line: 4207, column: 3, scope: !8894)
!8898 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8798, file: !8798, line: 3007, type: !3198, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8899 = !DILocation(line: 3009, column: 11, scope: !8898)
!8900 = !DILocation(line: 3009, column: 44, scope: !8898)
!8901 = !DILocation(line: 3009, column: 3, scope: !8898)
!8902 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8798, file: !8798, line: 2987, type: !2960, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8903 = !DILocation(line: 2989, column: 3, scope: !8902)
!8904 = !DILocation(line: 2990, column: 1, scope: !8902)
!8905 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8798, file: !8798, line: 2939, type: !2960, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8906 = !DILocation(line: 2941, column: 3, scope: !8905)
!8907 = !DILocation(line: 2942, column: 1, scope: !8905)
!8908 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8798, file: !8798, line: 2949, type: !2960, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8909 = !DILocation(line: 2951, column: 3, scope: !8908)
!8910 = !DILocation(line: 2952, column: 1, scope: !8908)
!8911 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8798, file: !8798, line: 2969, type: !3198, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8912 = !DILocation(line: 2971, column: 11, scope: !8911)
!8913 = !DILocation(line: 2971, column: 44, scope: !8911)
!8914 = !DILocation(line: 2971, column: 3, scope: !8911)
!8915 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8798, file: !8798, line: 3143, type: !2960, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8916 = !DILocation(line: 3145, column: 3, scope: !8915)
!8917 = !DILocation(line: 3146, column: 1, scope: !8915)
!8918 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8798, file: !8798, line: 3163, type: !3198, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2032)
!8919 = !DILocation(line: 3165, column: 11, scope: !8918)
!8920 = !DILocation(line: 3165, column: 46, scope: !8918)
!8921 = !DILocation(line: 3165, column: 3, scope: !8918)
!8922 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8923, file: !8923, line: 40, type: !3198, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !2032)
!8923 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8924 = !DILocation(line: 45, column: 3, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !8923, line: 44, column: 44)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !8923, line: 44, column: 13)
!8927 = distinct !DILexicalBlock(scope: !8922, file: !8923, line: 42, column: 6)
!8928 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8923, file: !8923, line: 56, type: !2960, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !2032)
!8929 = !DILocation(line: 58, column: 2, scope: !8928)
!8930 = !DILocation(line: 62, column: 1, scope: !8928)
!8931 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8798, file: !8798, line: 4304, type: !8932, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !8934)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{null, !118, !118, !118, !118}
!8934 = !{!8935, !8936, !8937, !8938}
!8935 = !DILocalVariable(name: "Source", arg: 1, scope: !8931, file: !8798, line: 4304, type: !118)
!8936 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8931, file: !8798, line: 4304, type: !118)
!8937 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8931, file: !8798, line: 4304, type: !118)
!8938 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8931, file: !8798, line: 4304, type: !118)
!8939 = !DILocation(line: 0, scope: !8931)
!8940 = !DILocation(line: 4306, column: 3, scope: !8931)
!8941 = !DILocation(line: 4308, column: 3, scope: !8931)
!8942 = !DILocation(line: 4312, column: 1, scope: !8931)
!8943 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8923, file: !8923, line: 69, type: !2960, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !2032)
!8944 = !DILocation(line: 72, column: 2, scope: !8943)
!8945 = !DILocation(line: 73, column: 1, scope: !8943)
!8946 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8947, file: !8947, line: 1185, type: !6409, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !8948)
!8947 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8948 = !{!8949, !8950}
!8949 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8946, file: !8947, line: 1185, type: !118)
!8950 = !DILocalVariable(name: "tmpreg", scope: !8946, file: !8947, line: 1187, type: !314)
!8951 = !DILocation(line: 0, scope: !8946)
!8952 = !DILocation(line: 1187, column: 3, scope: !8946)
!8953 = !DILocation(line: 1187, column: 17, scope: !8946)
!8954 = !DILocation(line: 1188, column: 3, scope: !8946)
!8955 = !DILocation(line: 1190, column: 12, scope: !8946)
!8956 = !DILocation(line: 1190, column: 10, scope: !8946)
!8957 = !DILocation(line: 1191, column: 9, scope: !8946)
!8958 = !DILocation(line: 1192, column: 1, scope: !8946)
!8959 = distinct !DISubprogram(name: "uart_console_init", scope: !1019, file: !1019, line: 588, type: !996, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8960)
!8960 = !{!8961}
!8961 = !DILocalVariable(name: "arg", arg: 1, scope: !8959, file: !1019, line: 588, type: !974)
!8962 = !DILocation(line: 0, scope: !8959)
!8963 = !DILocation(line: 593, column: 7, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8959, file: !1019, line: 593, column: 6)
!8965 = !DILocation(line: 593, column: 6, scope: !8959)
!8966 = !DILocation(line: 597, column: 2, scope: !8959)
!8967 = !DILocation(line: 599, column: 2, scope: !8959)
!8968 = !DILocation(line: 600, column: 1, scope: !8959)
!8969 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !8971, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8973)
!8970 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!8971 = !DISubroutineType(types: !8972)
!8972 = !{!345, !974}
!8973 = !{!8974}
!8974 = !DILocalVariable(name: "dev", arg: 1, scope: !8969, file: !8970, line: 47, type: !974)
!8975 = !DILocation(line: 0, scope: !8969)
!8976 = !DILocation(line: 55, column: 2, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8969, file: !8970, line: 55, column: 2)
!8978 = !{i64 2155054900}
!8979 = !DILocation(line: 56, column: 9, scope: !8969)
!8980 = !DILocation(line: 56, column: 2, scope: !8969)
!8981 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1019, file: !1019, line: 573, type: !2960, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !2032)
!8982 = !DILocation(line: 576, column: 2, scope: !8981)
!8983 = !DILocation(line: 579, column: 2, scope: !8981)
!8984 = !DILocation(line: 581, column: 1, scope: !8981)
!8985 = distinct !DISubprogram(name: "console_out", scope: !1019, file: !1019, line: 77, type: !301, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8986)
!8986 = !{!8987}
!8987 = !DILocalVariable(name: "c", arg: 1, scope: !8985, file: !1019, line: 77, type: !119)
!8988 = !DILocation(line: 0, scope: !8985)
!8989 = !DILocation(line: 89, column: 11, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8985, file: !1019, line: 89, column: 6)
!8991 = !DILocation(line: 89, column: 6, scope: !8985)
!8992 = !DILocation(line: 90, column: 3, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8990, file: !1019, line: 89, column: 17)
!8994 = !DILocation(line: 91, column: 2, scope: !8993)
!8995 = !DILocation(line: 92, column: 34, scope: !8985)
!8996 = !DILocation(line: 92, column: 2, scope: !8985)
!8997 = !DILocation(line: 94, column: 2, scope: !8985)
!8998 = distinct !DISubprogram(name: "uart_poll_out", scope: !8999, file: !8999, line: 95, type: !992, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !9000)
!8999 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/arch/smp/pi")
!9000 = !{!9001, !9002}
!9001 = !DILocalVariable(name: "dev", arg: 1, scope: !8998, file: !8999, line: 95, type: !974)
!9002 = !DILocalVariable(name: "out_char", arg: 2, scope: !8998, file: !8999, line: 95, type: !186)
!9003 = !DILocation(line: 0, scope: !8998)
!9004 = !DILocation(line: 105, column: 2, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8998, file: !8999, line: 105, column: 2)
!9006 = !{i64 2155138291}
!9007 = !DILocation(line: 106, column: 2, scope: !8998)
!9008 = !DILocation(line: 107, column: 1, scope: !8998)
!9009 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !968, file: !968, line: 574, type: !992, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !9010)
!9010 = !{!9011, !9012, !9013}
!9011 = !DILocalVariable(name: "dev", arg: 1, scope: !9009, file: !968, line: 574, type: !974)
!9012 = !DILocalVariable(name: "out_char", arg: 2, scope: !9009, file: !968, line: 575, type: !186)
!9013 = !DILocalVariable(name: "api", scope: !9009, file: !968, line: 577, type: !965)
!9014 = !DILocation(line: 0, scope: !9009)
!9015 = !DILocation(line: 578, column: 40, scope: !9009)
!9016 = !DILocation(line: 580, column: 7, scope: !9009)
!9017 = !DILocation(line: 580, column: 2, scope: !9009)
!9018 = !DILocation(line: 581, column: 1, scope: !9009)
!9019 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !8971, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !9020)
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !9019, file: !334, line: 730, type: !974)
!9022 = !DILocation(line: 0, scope: !9019)
!9023 = !DILocation(line: 732, column: 9, scope: !9019)
!9024 = !DILocation(line: 732, column: 2, scope: !9019)
!9025 = distinct !DISubprogram(name: "uart_register_input", scope: !1019, file: !1019, line: 560, type: !9026, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !9073)
!9026 = !DISubroutineType(types: !9027)
!9027 = !{null, !9028, !9028, !9070}
!9028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9029, size: 32)
!9029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !245, line: 2208, size: 160, elements: !9030)
!9030 = !{!9031}
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9029, file: !245, line: 2209, baseType: !9032, size: 160)
!9032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !245, line: 1709, size: 160, elements: !9033)
!9033 = !{!9034, !9047, !9051}
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9032, file: !245, line: 1710, baseType: !9035, size: 64)
!9035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9036, line: 46, baseType: !9037)
!9036 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9036, line: 41, size: 64, elements: !9038)
!9038 = !{!9039, !9046}
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9037, file: !9036, line: 42, baseType: !9040, size: 32)
!9040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9041, size: 32)
!9041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9036, line: 39, baseType: !9042)
!9042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9036, line: 35, size: 32, elements: !9043)
!9043 = !{!9044}
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9042, file: !9036, line: 36, baseType: !9045, size: 32)
!9045 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9036, line: 32, baseType: !118)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9037, file: !9036, line: 43, baseType: !9040, size: 32, offset: 32)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9032, file: !245, line: 1711, baseType: !9048, size: 32, offset: 64)
!9048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !9049)
!9049 = !{!9050}
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9048, file: !259, line: 52, baseType: !22, size: 32)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9032, file: !245, line: 1712, baseType: !9052, size: 64, offset: 96)
!9052 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !9053)
!9053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !9054)
!9054 = !{!9055}
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9053, file: !179, line: 232, baseType: !9056, size: 64)
!9056 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !9057)
!9057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !9058)
!9058 = !{!9059, !9065}
!9059 = !DIDerivedType(tag: DW_TAG_member, scope: !9057, file: !153, line: 38, baseType: !9060, size: 32)
!9060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9057, file: !153, line: 38, size: 32, elements: !9061)
!9061 = !{!9062, !9064}
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9060, file: !153, line: 39, baseType: !9063, size: 32)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9060, file: !153, line: 40, baseType: !9063, size: 32)
!9065 = !DIDerivedType(tag: DW_TAG_member, scope: !9057, file: !153, line: 42, baseType: !9066, size: 32, offset: 32)
!9066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9057, file: !153, line: 42, size: 32, elements: !9067)
!9067 = !{!9068, !9069}
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9066, file: !153, line: 43, baseType: !9063, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9066, file: !153, line: 44, baseType: !9063, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9071, size: 32)
!9071 = !DISubroutineType(types: !9072)
!9072 = !{!185, !106, !185}
!9073 = !{!9074, !9075, !9076}
!9074 = !DILocalVariable(name: "avail", arg: 1, scope: !9025, file: !1019, line: 560, type: !9028)
!9075 = !DILocalVariable(name: "lines", arg: 2, scope: !9025, file: !1019, line: 560, type: !9028)
!9076 = !DILocalVariable(name: "completion", arg: 3, scope: !9025, file: !1019, line: 561, type: !9070)
!9077 = !DILocation(line: 0, scope: !9025)
!9078 = !DILocation(line: 566, column: 1, scope: !9025)
!9079 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1197, file: !1197, line: 523, type: !1055, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9080)
!9080 = !{!9081, !9082, !9083, !9084, !9085}
!9081 = !DILocalVariable(name: "dev", arg: 1, scope: !9079, file: !1197, line: 523, type: !1057)
!9082 = !DILocalVariable(name: "pin", arg: 2, scope: !9079, file: !1197, line: 524, type: !1072)
!9083 = !DILocalVariable(name: "flags", arg: 3, scope: !9079, file: !1197, line: 524, type: !1073)
!9084 = !DILocalVariable(name: "err", scope: !9079, file: !1197, line: 526, type: !119)
!9085 = !DILocalVariable(name: "pincfg", scope: !9079, file: !1197, line: 527, type: !119)
!9086 = !DILocation(line: 0, scope: !9079)
!9087 = !DILocation(line: 527, column: 2, scope: !9079)
!9088 = !DILocation(line: 532, column: 8, scope: !9079)
!9089 = !DILocation(line: 533, column: 10, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9079, file: !1197, line: 533, column: 6)
!9091 = !DILocation(line: 533, column: 6, scope: !9079)
!9092 = !DILocation(line: 543, column: 13, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9079, file: !1197, line: 543, column: 6)
!9094 = !DILocation(line: 543, column: 28, scope: !9093)
!9095 = !DILocation(line: 543, column: 6, scope: !9079)
!9096 = !DILocation(line: 544, column: 14, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !1197, line: 544, column: 7)
!9098 = distinct !DILexicalBlock(scope: !9093, file: !1197, line: 543, column: 34)
!9099 = !DILocation(line: 544, column: 39, scope: !9097)
!9100 = !DILocation(line: 544, column: 7, scope: !9098)
!9101 = !DILocation(line: 545, column: 38, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9097, file: !1197, line: 544, column: 45)
!9103 = !DILocation(line: 545, column: 4, scope: !9102)
!9104 = !DILocation(line: 546, column: 3, scope: !9102)
!9105 = !DILocation(line: 546, column: 21, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9097, file: !1197, line: 546, column: 14)
!9107 = !DILocation(line: 546, column: 45, scope: !9106)
!9108 = !DILocation(line: 546, column: 14, scope: !9097)
!9109 = !DILocation(line: 547, column: 40, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !1197, line: 546, column: 51)
!9111 = !DILocation(line: 547, column: 4, scope: !9110)
!9112 = !DILocation(line: 548, column: 3, scope: !9110)
!9113 = !DILocation(line: 551, column: 32, scope: !9079)
!9114 = !DILocation(line: 551, column: 37, scope: !9079)
!9115 = !DILocation(line: 551, column: 2, scope: !9079)
!9116 = !DILocation(line: 554, column: 6, scope: !9079)
!9117 = !DILocation(line: 562, column: 1, scope: !9079)
!9118 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1197, file: !1197, line: 410, type: !9119, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9121)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!119, !1057, !884}
!9121 = !{!9122, !9123, !9124, !9126}
!9122 = !DILocalVariable(name: "dev", arg: 1, scope: !9118, file: !1197, line: 410, type: !1057)
!9123 = !DILocalVariable(name: "value", arg: 2, scope: !9118, file: !1197, line: 410, type: !884)
!9124 = !DILocalVariable(name: "cfg", scope: !9118, file: !1197, line: 412, type: !9125)
!9125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!9126 = !DILocalVariable(name: "gpio", scope: !9118, file: !1197, line: 413, type: !1130)
!9127 = !DILocation(line: 0, scope: !9118)
!9128 = !DILocation(line: 412, column: 45, scope: !9118)
!9129 = !DILocation(line: 413, column: 44, scope: !9118)
!9130 = !DILocation(line: 415, column: 11, scope: !9118)
!9131 = !DILocation(line: 415, column: 9, scope: !9118)
!9132 = !DILocation(line: 417, column: 2, scope: !9118)
!9133 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1197, file: !1197, line: 420, type: !1082, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9134)
!9134 = !{!9135, !9136, !9137, !9138, !9139, !9140}
!9135 = !DILocalVariable(name: "dev", arg: 1, scope: !9133, file: !1197, line: 420, type: !1057)
!9136 = !DILocalVariable(name: "mask", arg: 2, scope: !9133, file: !1197, line: 421, type: !1084)
!9137 = !DILocalVariable(name: "value", arg: 3, scope: !9133, file: !1197, line: 422, type: !1079)
!9138 = !DILocalVariable(name: "cfg", scope: !9133, file: !1197, line: 424, type: !9125)
!9139 = !DILocalVariable(name: "gpio", scope: !9133, file: !1197, line: 425, type: !1130)
!9140 = !DILocalVariable(name: "port_value", scope: !9133, file: !1197, line: 426, type: !118)
!9141 = !DILocation(line: 0, scope: !9133)
!9142 = !DILocation(line: 424, column: 45, scope: !9133)
!9143 = !DILocation(line: 425, column: 44, scope: !9133)
!9144 = !DILocation(line: 430, column: 15, scope: !9133)
!9145 = !DILocation(line: 431, column: 46, scope: !9133)
!9146 = !DILocation(line: 431, column: 44, scope: !9133)
!9147 = !DILocation(line: 431, column: 61, scope: !9133)
!9148 = !DILocation(line: 431, column: 53, scope: !9133)
!9149 = !DILocation(line: 431, column: 2, scope: !9133)
!9150 = !DILocation(line: 435, column: 2, scope: !9133)
!9151 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1197, file: !1197, line: 438, type: !1087, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9152)
!9152 = !{!9153, !9154, !9155, !9156}
!9153 = !DILocalVariable(name: "dev", arg: 1, scope: !9151, file: !1197, line: 438, type: !1057)
!9154 = !DILocalVariable(name: "pins", arg: 2, scope: !9151, file: !1197, line: 439, type: !1084)
!9155 = !DILocalVariable(name: "cfg", scope: !9151, file: !1197, line: 441, type: !9125)
!9156 = !DILocalVariable(name: "gpio", scope: !9151, file: !1197, line: 442, type: !1130)
!9157 = !DILocation(line: 0, scope: !9151)
!9158 = !DILocation(line: 441, column: 45, scope: !9151)
!9159 = !DILocation(line: 442, column: 44, scope: !9151)
!9160 = !DILocation(line: 448, column: 2, scope: !9151)
!9161 = !DILocation(line: 450, column: 2, scope: !9151)
!9162 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1197, file: !1197, line: 453, type: !1087, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9163)
!9163 = !{!9164, !9165, !9166, !9167}
!9164 = !DILocalVariable(name: "dev", arg: 1, scope: !9162, file: !1197, line: 453, type: !1057)
!9165 = !DILocalVariable(name: "pins", arg: 2, scope: !9162, file: !1197, line: 454, type: !1084)
!9166 = !DILocalVariable(name: "cfg", scope: !9162, file: !1197, line: 456, type: !9125)
!9167 = !DILocalVariable(name: "gpio", scope: !9162, file: !1197, line: 457, type: !1130)
!9168 = !DILocation(line: 0, scope: !9162)
!9169 = !DILocation(line: 456, column: 45, scope: !9162)
!9170 = !DILocation(line: 457, column: 44, scope: !9162)
!9171 = !DILocation(line: 467, column: 2, scope: !9162)
!9172 = !DILocation(line: 470, column: 2, scope: !9162)
!9173 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1197, file: !1197, line: 473, type: !1087, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9174)
!9174 = !{!9175, !9176, !9177, !9178}
!9175 = !DILocalVariable(name: "dev", arg: 1, scope: !9173, file: !1197, line: 473, type: !1057)
!9176 = !DILocalVariable(name: "pins", arg: 2, scope: !9173, file: !1197, line: 474, type: !1084)
!9177 = !DILocalVariable(name: "cfg", scope: !9173, file: !1197, line: 476, type: !9125)
!9178 = !DILocalVariable(name: "gpio", scope: !9173, file: !1197, line: 477, type: !1130)
!9179 = !DILocation(line: 0, scope: !9173)
!9180 = !DILocation(line: 476, column: 45, scope: !9173)
!9181 = !DILocation(line: 477, column: 44, scope: !9173)
!9182 = !DILocation(line: 484, column: 2, scope: !9173)
!9183 = !DILocation(line: 487, column: 2, scope: !9173)
!9184 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1197, file: !1197, line: 594, type: !1093, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9185)
!9185 = !{!9186, !9187, !9188, !9189, !9190, !9191, !9193, !9194, !9195}
!9186 = !DILocalVariable(name: "dev", arg: 1, scope: !9184, file: !1197, line: 594, type: !1057)
!9187 = !DILocalVariable(name: "pin", arg: 2, scope: !9184, file: !1197, line: 595, type: !1072)
!9188 = !DILocalVariable(name: "mode", arg: 3, scope: !9184, file: !1197, line: 596, type: !1031)
!9189 = !DILocalVariable(name: "trig", arg: 4, scope: !9184, file: !1197, line: 597, type: !1037)
!9190 = !DILocalVariable(name: "cfg", scope: !9184, file: !1197, line: 599, type: !9125)
!9191 = !DILocalVariable(name: "data", scope: !9184, file: !1197, line: 600, type: !9192)
!9192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!9193 = !DILocalVariable(name: "edge", scope: !9184, file: !1197, line: 601, type: !119)
!9194 = !DILocalVariable(name: "err", scope: !9184, file: !1197, line: 602, type: !119)
!9195 = !DILabel(scope: !9184, name: "exit", file: !1197, line: 643)
!9196 = !DILocation(line: 0, scope: !9184)
!9197 = !DILocation(line: 599, column: 45, scope: !9184)
!9198 = !DILocation(line: 604, column: 6, scope: !9184)
!9199 = !DILocation(line: 605, column: 34, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !1197, line: 605, column: 7)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !1197, line: 604, column: 38)
!9202 = distinct !DILexicalBlock(scope: !9184, file: !1197, line: 604, column: 6)
!9203 = !DILocation(line: 605, column: 7, scope: !9200)
!9204 = !DILocation(line: 605, column: 47, scope: !9200)
!9205 = !DILocation(line: 605, column: 39, scope: !9200)
!9206 = !DILocation(line: 605, column: 7, scope: !9201)
!9207 = !DILocation(line: 606, column: 4, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9200, file: !1197, line: 605, column: 53)
!9209 = !DILocation(line: 607, column: 4, scope: !9208)
!9210 = !DILocation(line: 608, column: 4, scope: !9208)
!9211 = !DILocation(line: 609, column: 3, scope: !9208)
!9212 = !DILocation(line: 600, column: 38, scope: !9184)
!9213 = !DILocation(line: 620, column: 30, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9184, file: !1197, line: 620, column: 6)
!9215 = !DILocation(line: 620, column: 6, scope: !9214)
!9216 = !DILocation(line: 620, column: 57, scope: !9214)
!9217 = !DILocation(line: 620, column: 6, scope: !9184)
!9218 = !DILocation(line: 625, column: 29, scope: !9184)
!9219 = !DILocation(line: 625, column: 2, scope: !9184)
!9220 = !DILocation(line: 627, column: 2, scope: !9184)
!9221 = !DILocation(line: 630, column: 3, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9184, file: !1197, line: 627, column: 16)
!9223 = !DILocation(line: 633, column: 3, scope: !9222)
!9224 = !DILocation(line: 636, column: 3, scope: !9222)
!9225 = !DILocation(line: 639, column: 2, scope: !9184)
!9226 = !DILocation(line: 641, column: 2, scope: !9184)
!9227 = !DILocation(line: 643, column: 1, scope: !9184)
!9228 = !DILocation(line: 644, column: 2, scope: !9184)
!9229 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1197, file: !1197, line: 647, type: !1097, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9230)
!9230 = !{!9231, !9232, !9233, !9234}
!9231 = !DILocalVariable(name: "dev", arg: 1, scope: !9229, file: !1197, line: 647, type: !1057)
!9232 = !DILocalVariable(name: "callback", arg: 2, scope: !9229, file: !1197, line: 648, type: !1099)
!9233 = !DILocalVariable(name: "set", arg: 3, scope: !9229, file: !1197, line: 649, type: !345)
!9234 = !DILocalVariable(name: "data", scope: !9229, file: !1197, line: 651, type: !9192)
!9235 = !DILocation(line: 0, scope: !9229)
!9236 = !DILocation(line: 651, column: 38, scope: !9229)
!9237 = !DILocation(line: 653, column: 37, scope: !9229)
!9238 = !DILocation(line: 653, column: 9, scope: !9229)
!9239 = !DILocation(line: 653, column: 2, scope: !9229)
!9240 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9241, file: !9241, line: 38, type: !9242, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9245)
!9241 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9242 = !DISubroutineType(types: !9243)
!9243 = !{!119, !9244, !1099, !345}
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!9245 = !{!9246, !9247, !9248}
!9246 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9240, file: !9241, line: 38, type: !9244)
!9247 = !DILocalVariable(name: "callback", arg: 2, scope: !9240, file: !9241, line: 39, type: !1099)
!9248 = !DILocalVariable(name: "set", arg: 3, scope: !9240, file: !9241, line: 40, type: !345)
!9249 = !DILocation(line: 0, scope: !9240)
!9250 = !DILocation(line: 42, column: 2, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !9241, line: 42, column: 2)
!9252 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 42, column: 2)
!9253 = !DILocation(line: 42, column: 2, scope: !9252)
!9254 = !DILocation(line: 42, column: 2, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !9241, line: 42, column: 2)
!9256 = !DILocation(line: 43, column: 2, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !9241, line: 43, column: 2)
!9258 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 43, column: 2)
!9259 = !DILocation(line: 43, column: 2, scope: !9258)
!9260 = !DILocation(line: 43, column: 2, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9257, file: !9241, line: 43, column: 2)
!9262 = !DILocation(line: 45, column: 7, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 45, column: 6)
!9264 = !DILocation(line: 45, column: 6, scope: !9240)
!9265 = !DILocation(line: 46, column: 56, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !9241, line: 46, column: 7)
!9267 = distinct !DILexicalBlock(scope: !9263, file: !9241, line: 45, column: 38)
!9268 = !DILocation(line: 46, column: 8, scope: !9266)
!9269 = !DILocation(line: 46, column: 7, scope: !9267)
!9270 = !DILocation(line: 51, column: 13, scope: !9263)
!9271 = !DILocation(line: 56, column: 43, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !9241, line: 55, column: 11)
!9273 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 55, column: 6)
!9274 = !DILocation(line: 56, column: 3, scope: !9272)
!9275 = !DILocation(line: 57, column: 2, scope: !9272)
!9276 = !DILocation(line: 60, column: 1, scope: !9240)
!9277 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1104, file: !1104, line: 261, type: !9278, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!345, !9244}
!9280 = !{!9281}
!9281 = !DILocalVariable(name: "list", arg: 1, scope: !9277, file: !1104, line: 261, type: !9244)
!9282 = !DILocation(line: 0, scope: !9277)
!9283 = !DILocation(line: 261, column: 1, scope: !9277)
!9284 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1104, file: !1104, line: 417, type: !9285, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{!345, !9244, !1276}
!9287 = !{!9288, !9289, !9290, !9291}
!9288 = !DILocalVariable(name: "list", arg: 1, scope: !9284, file: !1104, line: 417, type: !9244)
!9289 = !DILocalVariable(name: "node", arg: 2, scope: !9284, file: !1104, line: 417, type: !1276)
!9290 = !DILocalVariable(name: "prev", scope: !9284, file: !1104, line: 417, type: !1276)
!9291 = !DILocalVariable(name: "test", scope: !9284, file: !1104, line: 417, type: !1276)
!9292 = !DILocation(line: 0, scope: !9284)
!9293 = !DILocation(line: 417, column: 1, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9284, file: !1104, line: 417, column: 1)
!9295 = !DILocation(line: 417, column: 1, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9294, file: !1104, line: 417, column: 1)
!9297 = !DILocation(line: 417, column: 1, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !1104, line: 417, column: 1)
!9299 = distinct !DILexicalBlock(scope: !9296, file: !1104, line: 417, column: 1)
!9300 = !DILocation(line: 417, column: 1, scope: !9299)
!9301 = distinct !{!9301, !9293, !9293}
!9302 = !DILocation(line: 417, column: 1, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9298, file: !1104, line: 417, column: 1)
!9304 = !DILocation(line: 417, column: 1, scope: !9284)
!9305 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1104, file: !1104, line: 298, type: !9306, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9308)
!9306 = !DISubroutineType(types: !9307)
!9307 = !{null, !9244, !1276}
!9308 = !{!9309, !9310}
!9309 = !DILocalVariable(name: "list", arg: 1, scope: !9305, file: !1104, line: 298, type: !9244)
!9310 = !DILocalVariable(name: "node", arg: 2, scope: !9305, file: !1104, line: 298, type: !1276)
!9311 = !DILocation(line: 0, scope: !9305)
!9312 = !DILocation(line: 298, column: 1, scope: !9305)
!9313 = !DILocation(line: 298, column: 1, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9305, file: !1104, line: 298, column: 1)
!9315 = !DILocation(line: 298, column: 1, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9314, file: !1104, line: 298, column: 1)
!9317 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1104, file: !1104, line: 231, type: !9318, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9320)
!9318 = !DISubroutineType(types: !9319)
!9319 = !{!1276, !9244}
!9320 = !{!9321}
!9321 = !DILocalVariable(name: "list", arg: 1, scope: !9317, file: !1104, line: 231, type: !9244)
!9322 = !DILocation(line: 0, scope: !9317)
!9323 = !DILocation(line: 233, column: 15, scope: !9317)
!9324 = !DILocation(line: 233, column: 2, scope: !9317)
!9325 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1104, file: !1104, line: 209, type: !9326, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9328)
!9326 = !DISubroutineType(types: !9327)
!9327 = !{null, !1276, !1276}
!9328 = !{!9329, !9330}
!9329 = !DILocalVariable(name: "parent", arg: 1, scope: !9325, file: !1104, line: 209, type: !1276)
!9330 = !DILocalVariable(name: "child", arg: 2, scope: !9325, file: !1104, line: 209, type: !1276)
!9331 = !DILocation(line: 0, scope: !9325)
!9332 = !DILocation(line: 211, column: 10, scope: !9325)
!9333 = !DILocation(line: 211, column: 15, scope: !9325)
!9334 = !DILocation(line: 212, column: 1, scope: !9325)
!9335 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1104, file: !1104, line: 214, type: !9306, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9336)
!9336 = !{!9337, !9338}
!9337 = !DILocalVariable(name: "list", arg: 1, scope: !9335, file: !1104, line: 214, type: !9244)
!9338 = !DILocalVariable(name: "node", arg: 2, scope: !9335, file: !1104, line: 214, type: !1276)
!9339 = !DILocation(line: 0, scope: !9335)
!9340 = !DILocation(line: 216, column: 8, scope: !9335)
!9341 = !DILocation(line: 216, column: 13, scope: !9335)
!9342 = !DILocation(line: 217, column: 1, scope: !9335)
!9343 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1104, file: !1104, line: 243, type: !9318, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9344)
!9344 = !{!9345}
!9345 = !DILocalVariable(name: "list", arg: 1, scope: !9343, file: !1104, line: 243, type: !9244)
!9346 = !DILocation(line: 0, scope: !9343)
!9347 = !DILocation(line: 245, column: 15, scope: !9343)
!9348 = !DILocation(line: 245, column: 2, scope: !9343)
!9349 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1104, file: !1104, line: 219, type: !9306, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9350)
!9350 = !{!9351, !9352}
!9351 = !DILocalVariable(name: "list", arg: 1, scope: !9349, file: !1104, line: 219, type: !9244)
!9352 = !DILocalVariable(name: "node", arg: 2, scope: !9349, file: !1104, line: 219, type: !1276)
!9353 = !DILocation(line: 0, scope: !9349)
!9354 = !DILocation(line: 221, column: 8, scope: !9349)
!9355 = !DILocation(line: 221, column: 13, scope: !9349)
!9356 = !DILocation(line: 222, column: 1, scope: !9349)
!9357 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1104, file: !1104, line: 401, type: !9358, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9360)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{null, !9244, !1276, !1276}
!9360 = !{!9361, !9362, !9363}
!9361 = !DILocalVariable(name: "list", arg: 1, scope: !9357, file: !1104, line: 401, type: !9244)
!9362 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9357, file: !1104, line: 401, type: !1276)
!9363 = !DILocalVariable(name: "node", arg: 3, scope: !9357, file: !1104, line: 401, type: !1276)
!9364 = !DILocation(line: 0, scope: !9357)
!9365 = !DILocation(line: 401, column: 1, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9357, file: !1104, line: 401, column: 1)
!9367 = !DILocation(line: 0, scope: !9366)
!9368 = !DILocation(line: 401, column: 1, scope: !9357)
!9369 = !DILocation(line: 401, column: 1, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9366, file: !1104, line: 401, column: 1)
!9371 = !DILocation(line: 401, column: 1, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9370, file: !1104, line: 401, column: 1)
!9373 = !DILocation(line: 401, column: 1, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9372, file: !1104, line: 401, column: 1)
!9375 = !DILocation(line: 401, column: 1, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9366, file: !1104, line: 401, column: 1)
!9377 = !DILocation(line: 401, column: 1, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9376, file: !1104, line: 401, column: 1)
!9379 = !DILocation(line: 401, column: 1, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9378, file: !1104, line: 401, column: 1)
!9381 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1104, file: !1104, line: 285, type: !9382, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9384)
!9382 = !DISubroutineType(types: !9383)
!9383 = !{!1276, !1276}
!9384 = !{!9385}
!9385 = !DILocalVariable(name: "node", arg: 1, scope: !9381, file: !1104, line: 285, type: !1276)
!9386 = !DILocation(line: 0, scope: !9381)
!9387 = !DILocation(line: 285, column: 1, scope: !9381)
!9388 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1104, file: !1104, line: 274, type: !9382, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9389)
!9389 = !{!9390}
!9390 = !DILocalVariable(name: "node", arg: 1, scope: !9388, file: !1104, line: 274, type: !1276)
!9391 = !DILocation(line: 0, scope: !9388)
!9392 = !DILocation(line: 274, column: 1, scope: !9388)
!9393 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1104, file: !1104, line: 204, type: !9382, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9394)
!9394 = !{!9395}
!9395 = !DILocalVariable(name: "node", arg: 1, scope: !9393, file: !1104, line: 204, type: !1276)
!9396 = !DILocation(line: 0, scope: !9393)
!9397 = !DILocation(line: 206, column: 15, scope: !9393)
!9398 = !DILocation(line: 206, column: 2, scope: !9393)
!9399 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1197, file: !1197, line: 342, type: !301, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9400)
!9400 = !{!9401, !9402, !9403}
!9401 = !DILocalVariable(name: "pin", arg: 1, scope: !9399, file: !1197, line: 342, type: !119)
!9402 = !DILocalVariable(name: "line", scope: !9399, file: !1197, line: 344, type: !118)
!9403 = !DILocalVariable(name: "port", scope: !9399, file: !1197, line: 345, type: !119)
!9404 = !DILocation(line: 0, scope: !9399)
!9405 = !DILocation(line: 344, column: 18, scope: !9399)
!9406 = !{i32 983040, i32 0}
!9407 = !DILocation(line: 356, column: 9, scope: !9399)
!9408 = !DILocation(line: 370, column: 2, scope: !9399)
!9409 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1197, file: !1197, line: 37, type: !747, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "line", arg: 1, scope: !9409, file: !1197, line: 37, type: !119)
!9412 = !DILocalVariable(name: "arg", arg: 2, scope: !9409, file: !1197, line: 37, type: !113)
!9413 = !DILocalVariable(name: "data", scope: !9409, file: !1197, line: 39, type: !9192)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 41, column: 29, scope: !9409)
!9416 = !DILocation(line: 41, column: 39, scope: !9409)
!9417 = !DILocation(line: 41, column: 44, scope: !9409)
!9418 = !DILocation(line: 41, column: 2, scope: !9409)
!9419 = !DILocation(line: 42, column: 1, scope: !9409)
!9420 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1197, file: !1197, line: 376, type: !9421, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9423)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!119, !119, !119}
!9423 = !{!9424, !9425, !9426, !9428, !9429}
!9424 = !DILocalVariable(name: "port", arg: 1, scope: !9420, file: !1197, line: 376, type: !119)
!9425 = !DILocalVariable(name: "pin", arg: 2, scope: !9420, file: !1197, line: 376, type: !119)
!9426 = !DILocalVariable(name: "clk", scope: !9420, file: !1197, line: 386, type: !9427)
!9427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!9428 = !DILocalVariable(name: "pclken", scope: !9420, file: !1197, line: 387, type: !1323)
!9429 = !DILocalVariable(name: "ret", scope: !9420, file: !1197, line: 396, type: !119)
!9430 = !DILocation(line: 0, scope: !9420)
!9431 = !DILocation(line: 387, column: 2, scope: !9420)
!9432 = !DILocation(line: 387, column: 22, scope: !9420)
!9433 = !DILocation(line: 399, column: 8, scope: !9420)
!9434 = !DILocation(line: 400, column: 10, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9420, file: !1197, line: 400, column: 6)
!9436 = !DILocation(line: 400, column: 6, scope: !9420)
!9437 = !DILocation(line: 405, column: 2, scope: !9420)
!9438 = !DILocation(line: 407, column: 2, scope: !9420)
!9439 = !DILocation(line: 408, column: 1, scope: !9420)
!9440 = distinct !DISubprogram(name: "clock_control_on", scope: !836, file: !836, line: 123, type: !1162, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9441)
!9441 = !{!9442, !9443, !9444}
!9442 = !DILocalVariable(name: "dev", arg: 1, scope: !9440, file: !836, line: 123, type: !1057)
!9443 = !DILocalVariable(name: "sys", arg: 2, scope: !9440, file: !836, line: 124, type: !928)
!9444 = !DILocalVariable(name: "api", scope: !9440, file: !836, line: 126, type: !1155)
!9445 = !DILocation(line: 0, scope: !9440)
!9446 = !DILocation(line: 127, column: 49, scope: !9440)
!9447 = !DILocation(line: 129, column: 14, scope: !9440)
!9448 = !DILocation(line: 129, column: 9, scope: !9440)
!9449 = !DILocation(line: 129, column: 2, scope: !9440)
!9450 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1197, file: !1197, line: 311, type: !8555, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9451)
!9451 = !{!9452, !9453, !9454}
!9452 = !DILocalVariable(name: "port", arg: 1, scope: !9450, file: !1197, line: 311, type: !119)
!9453 = !DILocalVariable(name: "pin", arg: 2, scope: !9450, file: !1197, line: 311, type: !119)
!9454 = !DILocalVariable(name: "line", scope: !9450, file: !1197, line: 313, type: !118)
!9455 = !DILocation(line: 0, scope: !9450)
!9456 = !DILocation(line: 313, column: 18, scope: !9450)
!9457 = !DILocation(line: 337, column: 2, scope: !9450)
!9458 = !DILocation(line: 340, column: 1, scope: !9450)
!9459 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1197, file: !1197, line: 295, type: !9460, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9462)
!9460 = !DISubroutineType(types: !9461)
!9461 = !{!118, !119}
!9462 = !{!9463}
!9463 = !DILocalVariable(name: "pin", arg: 1, scope: !9459, file: !1197, line: 295, type: !119)
!9464 = !DILocation(line: 0, scope: !9459)
!9465 = !DILocation(line: 307, column: 46, scope: !9459)
!9466 = !DILocation(line: 307, column: 27, scope: !9459)
!9467 = !DILocation(line: 307, column: 32, scope: !9459)
!9468 = !DILocation(line: 307, column: 14, scope: !9459)
!9469 = !DILocation(line: 307, column: 39, scope: !9459)
!9470 = !DILocation(line: 307, column: 2, scope: !9459)
!9471 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6014, file: !6014, line: 671, type: !9472, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9474)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{null, !118, !118}
!9474 = !{!9475, !9476}
!9475 = !DILocalVariable(name: "Port", arg: 1, scope: !9471, file: !6014, line: 671, type: !118)
!9476 = !DILocalVariable(name: "Line", arg: 2, scope: !9471, file: !6014, line: 671, type: !118)
!9477 = !DILocation(line: 0, scope: !9471)
!9478 = !DILocation(line: 673, column: 3, scope: !9471)
!9479 = !DILocalVariable(name: "value", arg: 1, scope: !9480, file: !6314, line: 373, type: !118)
!9480 = distinct !DISubprogram(name: "__RBIT", scope: !6314, file: !6314, line: 373, type: !7599, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9481)
!9481 = !{!9479, !9482}
!9482 = !DILocalVariable(name: "result", scope: !9480, file: !6314, line: 375, type: !118)
!9483 = !DILocation(line: 0, scope: !9480, inlinedAt: !9484)
!9484 = distinct !DILocation(line: 673, column: 3, scope: !9471)
!9485 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9484)
!9486 = !{i64 3549552}
!9487 = !DILocalVariable(name: "value", arg: 1, scope: !9488, file: !6314, line: 403, type: !118)
!9488 = distinct !DISubprogram(name: "__CLZ", scope: !6314, file: !6314, line: 403, type: !9489, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9491)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!185, !118}
!9491 = !{!9487}
!9492 = !DILocation(line: 0, scope: !9488, inlinedAt: !9493)
!9493 = distinct !DILocation(line: 673, column: 3, scope: !9471)
!9494 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9493)
!9495 = !DILocation(line: 674, column: 1, scope: !9471)
!9496 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9241, file: !9241, line: 69, type: !9497, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9499)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{null, !9244, !1057, !118}
!9499 = !{!9500, !9501, !9502, !9503, !9504}
!9500 = !DILocalVariable(name: "list", arg: 1, scope: !9496, file: !9241, line: 69, type: !9244)
!9501 = !DILocalVariable(name: "port", arg: 2, scope: !9496, file: !9241, line: 70, type: !1057)
!9502 = !DILocalVariable(name: "pins", arg: 3, scope: !9496, file: !9241, line: 71, type: !118)
!9503 = !DILocalVariable(name: "cb", scope: !9496, file: !9241, line: 73, type: !1099)
!9504 = !DILocalVariable(name: "tmp", scope: !9496, file: !9241, line: 73, type: !1099)
!9505 = !DILocation(line: 0, scope: !9496)
!9506 = !DILocation(line: 75, column: 2, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9496, file: !9241, line: 75, column: 2)
!9508 = !DILocation(line: 0, scope: !9507)
!9509 = !DILocation(line: 76, column: 11, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !9241, line: 76, column: 7)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !9241, line: 75, column: 57)
!9512 = distinct !DILexicalBlock(scope: !9507, file: !9241, line: 75, column: 2)
!9513 = !DILocation(line: 76, column: 20, scope: !9510)
!9514 = !DILocation(line: 76, column: 7, scope: !9511)
!9515 = !DILocation(line: 77, column: 4, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !9241, line: 77, column: 4)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !9241, line: 77, column: 4)
!9518 = distinct !DILexicalBlock(scope: !9510, file: !9241, line: 76, column: 28)
!9519 = !DILocation(line: 77, column: 4, scope: !9517)
!9520 = !DILocation(line: 77, column: 4, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9516, file: !9241, line: 77, column: 4)
!9522 = !DILocation(line: 78, column: 4, scope: !9518)
!9523 = !DILocation(line: 79, column: 3, scope: !9518)
!9524 = !DILocation(line: 75, column: 2, scope: !9512)
!9525 = !DILocation(line: 81, column: 1, scope: !9496)
!9526 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6014, file: !6014, line: 710, type: !7599, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9527)
!9527 = !{!9528}
!9528 = !DILocalVariable(name: "Line", arg: 1, scope: !9526, file: !6014, line: 710, type: !118)
!9529 = !DILocation(line: 0, scope: !9526)
!9530 = !DILocation(line: 712, column: 21, scope: !9526)
!9531 = !DILocation(line: 0, scope: !9480, inlinedAt: !9532)
!9532 = distinct !DILocation(line: 712, column: 76, scope: !9526)
!9533 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9532)
!9534 = !DILocation(line: 0, scope: !9488, inlinedAt: !9535)
!9535 = distinct !DILocation(line: 712, column: 76, scope: !9526)
!9536 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9535)
!9537 = !DILocation(line: 712, column: 73, scope: !9526)
!9538 = !DILocation(line: 712, column: 3, scope: !9526)
!9539 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9540, file: !9540, line: 910, type: !9541, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9543)
!9540 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9541 = !DISubroutineType(types: !9542)
!9542 = !{null, !1130, !118}
!9543 = !{!9544, !9545}
!9544 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9539, file: !9540, line: 910, type: !1130)
!9545 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9539, file: !9540, line: 910, type: !118)
!9546 = !DILocation(line: 0, scope: !9539)
!9547 = !DILocation(line: 912, column: 3, scope: !9539)
!9548 = !DILocation(line: 913, column: 1, scope: !9539)
!9549 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9540, file: !9540, line: 823, type: !9550, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9552)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!118, !1130}
!9552 = !{!9553}
!9553 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9549, file: !9540, line: 823, type: !1130)
!9554 = !DILocation(line: 0, scope: !9549)
!9555 = !DILocation(line: 825, column: 21, scope: !9549)
!9556 = !DILocation(line: 825, column: 3, scope: !9549)
!9557 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9540, file: !9540, line: 812, type: !9541, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9558)
!9558 = !{!9559, !9560}
!9559 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9557, file: !9540, line: 812, type: !1130)
!9560 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9557, file: !9540, line: 812, type: !118)
!9561 = !DILocation(line: 0, scope: !9557)
!9562 = !DILocation(line: 814, column: 3, scope: !9557)
!9563 = !DILocation(line: 815, column: 1, scope: !9557)
!9564 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9540, file: !9540, line: 771, type: !9550, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9565)
!9565 = !{!9566}
!9566 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9564, file: !9540, line: 771, type: !1130)
!9567 = !DILocation(line: 0, scope: !9564)
!9568 = !DILocation(line: 773, column: 21, scope: !9564)
!9569 = !DILocation(line: 773, column: 3, scope: !9564)
!9570 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1197, file: !1197, line: 47, type: !9571, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9573)
!9571 = !DISubroutineType(types: !9572)
!9572 = !{!119, !1073, !280}
!9573 = !{!9574, !9575}
!9574 = !DILocalVariable(name: "flags", arg: 1, scope: !9570, file: !1197, line: 47, type: !1073)
!9575 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9570, file: !1197, line: 47, type: !280)
!9576 = !DILocation(line: 0, scope: !9570)
!9577 = !DILocation(line: 50, column: 13, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9570, file: !1197, line: 50, column: 6)
!9579 = !DILocation(line: 50, column: 28, scope: !9578)
!9580 = !DILocation(line: 50, column: 6, scope: !9570)
!9581 = !DILocation(line: 53, column: 11, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9578, file: !1197, line: 50, column: 34)
!9583 = !DILocation(line: 55, column: 14, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9582, file: !1197, line: 55, column: 7)
!9585 = !DILocation(line: 55, column: 35, scope: !9584)
!9586 = !DILocation(line: 55, column: 7, scope: !9582)
!9587 = !DILocation(line: 56, column: 14, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !1197, line: 56, column: 8)
!9589 = distinct !DILexicalBlock(scope: !9584, file: !1197, line: 55, column: 41)
!9590 = !DILocation(line: 56, column: 8, scope: !9589)
!9591 = !DILocation(line: 0, scope: !9584)
!9592 = !DILocation(line: 66, column: 14, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9582, file: !1197, line: 66, column: 7)
!9594 = !DILocation(line: 66, column: 30, scope: !9593)
!9595 = !DILocation(line: 66, column: 7, scope: !9582)
!9596 = !DILocation(line: 67, column: 12, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9593, file: !1197, line: 66, column: 36)
!9598 = !DILocation(line: 68, column: 3, scope: !9597)
!9599 = !DILocation(line: 68, column: 21, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9593, file: !1197, line: 68, column: 14)
!9601 = !DILocation(line: 68, column: 39, scope: !9600)
!9602 = !DILocation(line: 68, column: 14, scope: !9593)
!9603 = !DILocation(line: 69, column: 12, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !1197, line: 68, column: 45)
!9605 = !DILocation(line: 70, column: 3, scope: !9604)
!9606 = !DILocation(line: 72, column: 21, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9578, file: !1197, line: 72, column: 14)
!9608 = !DILocation(line: 72, column: 35, scope: !9607)
!9609 = !DILocation(line: 72, column: 14, scope: !9578)
!9610 = !DILocation(line: 77, column: 14, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !1197, line: 77, column: 7)
!9612 = distinct !DILexicalBlock(scope: !9607, file: !1197, line: 72, column: 41)
!9613 = !DILocation(line: 77, column: 30, scope: !9611)
!9614 = !DILocation(line: 77, column: 7, scope: !9612)
!9615 = !DILocation(line: 0, scope: !9578)
!9616 = !DILocation(line: 90, column: 1, scope: !9570)
!9617 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1197, file: !1197, line: 157, type: !9618, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9620)
!9618 = !DISubroutineType(types: !9619)
!9619 = !{null, !1057, !119, !119, !119}
!9620 = !{!9621, !9622, !9623, !9624, !9625, !9626, !9627, !9628, !9629, !9630, !9631}
!9621 = !DILocalVariable(name: "dev", arg: 1, scope: !9617, file: !1197, line: 157, type: !1057)
!9622 = !DILocalVariable(name: "pin", arg: 2, scope: !9617, file: !1197, line: 157, type: !119)
!9623 = !DILocalVariable(name: "conf", arg: 3, scope: !9617, file: !1197, line: 158, type: !119)
!9624 = !DILocalVariable(name: "func", arg: 4, scope: !9617, file: !1197, line: 158, type: !119)
!9625 = !DILocalVariable(name: "cfg", scope: !9617, file: !1197, line: 160, type: !9125)
!9626 = !DILocalVariable(name: "gpio", scope: !9617, file: !1197, line: 161, type: !1130)
!9627 = !DILocalVariable(name: "pin_ll", scope: !9617, file: !1197, line: 163, type: !119)
!9628 = !DILocalVariable(name: "mode", scope: !9617, file: !1197, line: 227, type: !32)
!9629 = !DILocalVariable(name: "otype", scope: !9617, file: !1197, line: 227, type: !32)
!9630 = !DILocalVariable(name: "ospeed", scope: !9617, file: !1197, line: 227, type: !32)
!9631 = !DILocalVariable(name: "pupd", scope: !9617, file: !1197, line: 227, type: !32)
!9632 = !DILocation(line: 0, scope: !9617)
!9633 = !DILocation(line: 160, column: 45, scope: !9617)
!9634 = !DILocation(line: 161, column: 44, scope: !9617)
!9635 = !DILocation(line: 163, column: 15, scope: !9617)
!9636 = !DILocation(line: 229, column: 14, scope: !9617)
!9637 = !DILocation(line: 246, column: 47, scope: !9617)
!9638 = !DILocation(line: 246, column: 2, scope: !9617)
!9639 = !DILocation(line: 248, column: 43, scope: !9617)
!9640 = !DILocation(line: 248, column: 2, scope: !9617)
!9641 = !DILocation(line: 250, column: 40, scope: !9617)
!9642 = !DILocation(line: 250, column: 2, scope: !9617)
!9643 = !DILocation(line: 252, column: 11, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9617, file: !1197, line: 252, column: 6)
!9645 = !DILocation(line: 252, column: 6, scope: !9617)
!9646 = !DILocation(line: 253, column: 11, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9648, file: !1197, line: 253, column: 7)
!9648 = distinct !DILexicalBlock(scope: !9644, file: !1197, line: 252, column: 36)
!9649 = !DILocation(line: 253, column: 7, scope: !9648)
!9650 = !DILocation(line: 254, column: 4, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9647, file: !1197, line: 253, column: 16)
!9652 = !DILocation(line: 255, column: 3, scope: !9651)
!9653 = !DILocation(line: 256, column: 4, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9647, file: !1197, line: 255, column: 10)
!9655 = !DILocation(line: 260, column: 40, scope: !9617)
!9656 = !DILocation(line: 260, column: 2, scope: !9617)
!9657 = !DILocation(line: 265, column: 1, scope: !9617)
!9658 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1197, file: !1197, line: 137, type: !9460, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9659)
!9659 = !{!9660, !9661}
!9660 = !DILocalVariable(name: "pin", arg: 1, scope: !9658, file: !1197, line: 137, type: !119)
!9661 = !DILocalVariable(name: "pinval", scope: !9658, file: !1197, line: 139, type: !118)
!9662 = !DILocation(line: 0, scope: !9658)
!9663 = !DILocation(line: 149, column: 13, scope: !9658)
!9664 = !DILocation(line: 151, column: 2, scope: !9658)
!9665 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9540, file: !9540, line: 342, type: !9666, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9668)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{null, !1130, !118, !118}
!9668 = !{!9669, !9670, !9671}
!9669 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9665, file: !9540, line: 342, type: !1130)
!9670 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9665, file: !9540, line: 342, type: !118)
!9671 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9665, file: !9540, line: 342, type: !118)
!9672 = !DILocation(line: 0, scope: !9665)
!9673 = !DILocation(line: 344, column: 3, scope: !9665)
!9674 = !DILocation(line: 345, column: 1, scope: !9665)
!9675 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9540, file: !9540, line: 413, type: !9666, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9676)
!9676 = !{!9677, !9678, !9679}
!9677 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9675, file: !9540, line: 413, type: !1130)
!9678 = !DILocalVariable(name: "Pin", arg: 2, scope: !9675, file: !9540, line: 413, type: !118)
!9679 = !DILocalVariable(name: "Speed", arg: 3, scope: !9675, file: !9540, line: 413, type: !118)
!9680 = !DILocation(line: 0, scope: !9675)
!9681 = !DILocation(line: 415, column: 3, scope: !9675)
!9682 = !DILocation(line: 0, scope: !9480, inlinedAt: !9683)
!9683 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9684 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9683)
!9685 = !DILocation(line: 0, scope: !9488, inlinedAt: !9686)
!9686 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9687 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9686)
!9688 = !DILocation(line: 0, scope: !9480, inlinedAt: !9689)
!9689 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9690 = !DILocation(line: 0, scope: !9488, inlinedAt: !9691)
!9691 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9692 = !DILocation(line: 417, column: 1, scope: !9675)
!9693 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9540, file: !9540, line: 484, type: !9666, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9694)
!9694 = !{!9695, !9696, !9697}
!9695 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9693, file: !9540, line: 484, type: !1130)
!9696 = !DILocalVariable(name: "Pin", arg: 2, scope: !9693, file: !9540, line: 484, type: !118)
!9697 = !DILocalVariable(name: "Pull", arg: 3, scope: !9693, file: !9540, line: 484, type: !118)
!9698 = !DILocation(line: 0, scope: !9693)
!9699 = !DILocation(line: 486, column: 3, scope: !9693)
!9700 = !DILocation(line: 0, scope: !9480, inlinedAt: !9701)
!9701 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9702 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9701)
!9703 = !DILocation(line: 0, scope: !9488, inlinedAt: !9704)
!9704 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9705 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9704)
!9706 = !DILocation(line: 0, scope: !9480, inlinedAt: !9707)
!9707 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9708 = !DILocation(line: 0, scope: !9488, inlinedAt: !9709)
!9709 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9710 = !DILocation(line: 487, column: 1, scope: !9693)
!9711 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9540, file: !9540, line: 556, type: !9666, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9712)
!9712 = !{!9713, !9714, !9715}
!9713 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9711, file: !9540, line: 556, type: !1130)
!9714 = !DILocalVariable(name: "Pin", arg: 2, scope: !9711, file: !9540, line: 556, type: !118)
!9715 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9711, file: !9540, line: 556, type: !118)
!9716 = !DILocation(line: 0, scope: !9711)
!9717 = !DILocation(line: 558, column: 3, scope: !9711)
!9718 = !DILocation(line: 0, scope: !9480, inlinedAt: !9719)
!9719 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9720 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9719)
!9721 = !DILocation(line: 0, scope: !9488, inlinedAt: !9722)
!9722 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9723 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9722)
!9724 = !DILocation(line: 0, scope: !9480, inlinedAt: !9725)
!9725 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9726 = !DILocation(line: 0, scope: !9488, inlinedAt: !9727)
!9727 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9728 = !DILocation(line: 560, column: 1, scope: !9711)
!9729 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9540, file: !9540, line: 633, type: !9666, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9730)
!9730 = !{!9731, !9732, !9733}
!9731 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9729, file: !9540, line: 633, type: !1130)
!9732 = !DILocalVariable(name: "Pin", arg: 2, scope: !9729, file: !9540, line: 633, type: !118)
!9733 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9729, file: !9540, line: 633, type: !118)
!9734 = !DILocation(line: 0, scope: !9729)
!9735 = !DILocation(line: 635, column: 3, scope: !9729)
!9736 = !DILocation(line: 0, scope: !9480, inlinedAt: !9737)
!9737 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9738 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9737)
!9739 = !DILocation(line: 0, scope: !9488, inlinedAt: !9740)
!9740 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9741 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9740)
!9742 = !DILocation(line: 0, scope: !9480, inlinedAt: !9743)
!9743 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9744 = !DILocation(line: 0, scope: !9488, inlinedAt: !9745)
!9745 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9746 = !DILocation(line: 637, column: 1, scope: !9729)
!9747 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9540, file: !9540, line: 273, type: !9666, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9748)
!9748 = !{!9749, !9750, !9751}
!9749 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9747, file: !9540, line: 273, type: !1130)
!9750 = !DILocalVariable(name: "Pin", arg: 2, scope: !9747, file: !9540, line: 273, type: !118)
!9751 = !DILocalVariable(name: "Mode", arg: 3, scope: !9747, file: !9540, line: 273, type: !118)
!9752 = !DILocation(line: 0, scope: !9747)
!9753 = !DILocation(line: 275, column: 3, scope: !9747)
!9754 = !DILocation(line: 0, scope: !9480, inlinedAt: !9755)
!9755 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9756 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9755)
!9757 = !DILocation(line: 0, scope: !9488, inlinedAt: !9758)
!9758 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9759 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9758)
!9760 = !DILocation(line: 0, scope: !9480, inlinedAt: !9761)
!9761 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9762 = !DILocation(line: 0, scope: !9488, inlinedAt: !9763)
!9763 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9764 = !DILocation(line: 276, column: 1, scope: !9747)
!9765 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1197, file: !1197, line: 698, type: !1210, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9766)
!9766 = !{!9767, !9768, !9769}
!9767 = !DILocalVariable(name: "dev", arg: 1, scope: !9765, file: !1197, line: 698, type: !1057)
!9768 = !DILocalVariable(name: "data", scope: !9765, file: !1197, line: 700, type: !9192)
!9769 = !DILocalVariable(name: "ret", scope: !9765, file: !1197, line: 701, type: !119)
!9770 = !DILocation(line: 0, scope: !9765)
!9771 = !DILocation(line: 700, column: 38, scope: !9765)
!9772 = !DILocation(line: 703, column: 8, scope: !9765)
!9773 = !DILocation(line: 703, column: 12, scope: !9765)
!9774 = !DILocation(line: 705, column: 7, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9765, file: !1197, line: 705, column: 6)
!9776 = !DILocation(line: 705, column: 6, scope: !9765)
!9777 = !DILocation(line: 722, column: 8, scope: !9765)
!9778 = !DILocation(line: 723, column: 10, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9765, file: !1197, line: 723, column: 6)
!9780 = !DILocation(line: 723, column: 6, scope: !9765)
!9781 = !DILocation(line: 731, column: 1, scope: !9765)
!9782 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !9783, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9785)
!9783 = !DISubroutineType(types: !9784)
!9784 = !{!345, !1057}
!9785 = !{!9786}
!9786 = !DILocalVariable(name: "dev", arg: 1, scope: !9782, file: !8970, line: 47, type: !1057)
!9787 = !DILocation(line: 0, scope: !9782)
!9788 = !DILocation(line: 55, column: 2, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9782, file: !8970, line: 55, column: 2)
!9790 = !{i64 2155046107}
!9791 = !DILocation(line: 56, column: 9, scope: !9782)
!9792 = !DILocation(line: 56, column: 2, scope: !9782)
!9793 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1197, file: !1197, line: 270, type: !9794, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9796)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!119, !1057, !345}
!9796 = !{!9797, !9798, !9799, !9800, !9801}
!9797 = !DILocalVariable(name: "dev", arg: 1, scope: !9793, file: !1197, line: 270, type: !1057)
!9798 = !DILocalVariable(name: "on", arg: 2, scope: !9793, file: !1197, line: 270, type: !345)
!9799 = !DILocalVariable(name: "cfg", scope: !9793, file: !1197, line: 272, type: !9125)
!9800 = !DILocalVariable(name: "ret", scope: !9793, file: !1197, line: 273, type: !119)
!9801 = !DILocalVariable(name: "clk", scope: !9793, file: !1197, line: 278, type: !9427)
!9802 = !DILocation(line: 0, scope: !9793)
!9803 = !DILocation(line: 272, column: 45, scope: !9793)
!9804 = !DILocation(line: 282, column: 38, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !1197, line: 280, column: 10)
!9806 = distinct !DILexicalBlock(scope: !9793, file: !1197, line: 280, column: 6)
!9807 = !DILocation(line: 282, column: 6, scope: !9805)
!9808 = !DILocation(line: 281, column: 9, scope: !9805)
!9809 = !DILocation(line: 293, column: 1, scope: !9793)
!9810 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9783, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9811)
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "dev", arg: 1, scope: !9810, file: !334, line: 730, type: !1057)
!9813 = !DILocation(line: 0, scope: !9810)
!9814 = !DILocation(line: 732, column: 9, scope: !9810)
!9815 = !DILocation(line: 732, column: 2, scope: !9810)
!9816 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1197, file: !1197, line: 496, type: !9817, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9819)
!9817 = !DISubroutineType(types: !9818)
!9818 = !{!119, !1057, !119, !119, !119}
!9819 = !{!9820, !9821, !9822, !9823, !9824, !9825}
!9820 = !DILocalVariable(name: "dev", arg: 1, scope: !9816, file: !1197, line: 496, type: !1057)
!9821 = !DILocalVariable(name: "pin", arg: 2, scope: !9816, file: !1197, line: 496, type: !119)
!9822 = !DILocalVariable(name: "conf", arg: 3, scope: !9816, file: !1197, line: 496, type: !119)
!9823 = !DILocalVariable(name: "func", arg: 4, scope: !9816, file: !1197, line: 496, type: !119)
!9824 = !DILocalVariable(name: "ret", scope: !9816, file: !1197, line: 498, type: !119)
!9825 = !DILocalVariable(name: "gpio_out", scope: !9826, file: !1197, line: 508, type: !118)
!9826 = distinct !DILexicalBlock(scope: !9827, file: !1197, line: 507, column: 27)
!9827 = distinct !DILexicalBlock(scope: !9816, file: !1197, line: 507, column: 6)
!9828 = !DILocation(line: 0, scope: !9816)
!9829 = !DILocation(line: 505, column: 2, scope: !9816)
!9830 = !DILocation(line: 507, column: 11, scope: !9827)
!9831 = !DILocation(line: 507, column: 6, scope: !9816)
!9832 = !DILocation(line: 508, column: 28, scope: !9826)
!9833 = !DILocation(line: 0, scope: !9826)
!9834 = !DILocation(line: 510, column: 16, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9826, file: !1197, line: 510, column: 7)
!9836 = !DILocation(line: 0, scope: !9835)
!9837 = !DILocation(line: 510, column: 7, scope: !9826)
!9838 = !DILocation(line: 511, column: 4, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9835, file: !1197, line: 510, column: 32)
!9840 = !DILocation(line: 512, column: 3, scope: !9839)
!9841 = !DILocation(line: 513, column: 4, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !1197, line: 512, column: 39)
!9843 = distinct !DILexicalBlock(scope: !9835, file: !1197, line: 512, column: 14)
!9844 = !DILocation(line: 514, column: 3, scope: !9842)
!9845 = !DILocation(line: 518, column: 1, scope: !9816)
!9846 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1482, file: !1482, line: 526, type: !1385, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9847)
!9847 = !{!9848, !9849, !9850}
!9848 = !DILocalVariable(name: "dev", arg: 1, scope: !9846, file: !1482, line: 526, type: !1387)
!9849 = !DILocalVariable(name: "c", arg: 2, scope: !9846, file: !1482, line: 526, type: !989)
!9850 = !DILocalVariable(name: "config", scope: !9846, file: !1482, line: 528, type: !9851)
!9851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!9852 = !DILocation(line: 0, scope: !9846)
!9853 = !DILocation(line: 528, column: 48, scope: !9846)
!9854 = !DILocation(line: 531, column: 40, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9846, file: !1482, line: 531, column: 6)
!9856 = !DILocation(line: 531, column: 6, scope: !9855)
!9857 = !DILocation(line: 531, column: 6, scope: !9846)
!9858 = !DILocation(line: 532, column: 34, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9855, file: !1482, line: 531, column: 48)
!9860 = !DILocation(line: 532, column: 3, scope: !9859)
!9861 = !DILocation(line: 533, column: 2, scope: !9859)
!9862 = !DILocation(line: 539, column: 42, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9846, file: !1482, line: 539, column: 6)
!9864 = !DILocation(line: 539, column: 7, scope: !9863)
!9865 = !DILocation(line: 539, column: 6, scope: !9846)
!9866 = !DILocation(line: 543, column: 52, scope: !9846)
!9867 = !DILocation(line: 543, column: 22, scope: !9846)
!9868 = !DILocation(line: 543, column: 5, scope: !9846)
!9869 = !DILocation(line: 545, column: 2, scope: !9846)
!9870 = !DILocation(line: 546, column: 1, scope: !9846)
!9871 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1482, file: !1482, line: 548, type: !1404, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9872)
!9872 = !{!9873, !9874, !9875, !9876}
!9873 = !DILocalVariable(name: "dev", arg: 1, scope: !9871, file: !1482, line: 548, type: !1387)
!9874 = !DILocalVariable(name: "c", arg: 2, scope: !9871, file: !1482, line: 549, type: !186)
!9875 = !DILocalVariable(name: "config", scope: !9871, file: !1482, line: 551, type: !9851)
!9876 = !DILocalVariable(name: "key", scope: !9871, file: !1482, line: 555, type: !32)
!9877 = !DILocation(line: 0, scope: !9871)
!9878 = !DILocation(line: 551, column: 48, scope: !9871)
!9879 = !DILocation(line: 562, column: 2, scope: !9871)
!9880 = !DILocation(line: 563, column: 41, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9882, file: !1482, line: 563, column: 7)
!9882 = distinct !DILexicalBlock(scope: !9871, file: !1482, line: 562, column: 12)
!9883 = !DILocation(line: 563, column: 7, scope: !9881)
!9884 = !DILocation(line: 563, column: 7, scope: !9882)
!9885 = !DILocation(line: 55, column: 2, scope: !9886, inlinedAt: !9890)
!9886 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9887)
!9887 = !{!9888, !9889}
!9888 = !DILocalVariable(name: "key", scope: !9886, file: !5993, line: 44, type: !32)
!9889 = !DILocalVariable(name: "tmp", scope: !9886, file: !5993, line: 53, type: !32)
!9890 = distinct !DILocation(line: 564, column: 10, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9881, file: !1482, line: 563, column: 49)
!9892 = !{i64 2275223}
!9893 = !DILocation(line: 0, scope: !9886, inlinedAt: !9890)
!9894 = !DILocation(line: 565, column: 42, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9891, file: !1482, line: 565, column: 8)
!9896 = !DILocation(line: 565, column: 8, scope: !9895)
!9897 = !DILocation(line: 565, column: 8, scope: !9891)
!9898 = !DILocalVariable(name: "key", arg: 1, scope: !9899, file: !5993, line: 84, type: !32)
!9899 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9900)
!9900 = !{!9898}
!9901 = !DILocation(line: 0, scope: !9899, inlinedAt: !9902)
!9902 = distinct !DILocation(line: 568, column: 4, scope: !9891)
!9903 = !DILocation(line: 95, column: 2, scope: !9899, inlinedAt: !9902)
!9904 = !{i64 2276040}
!9905 = !DILocation(line: 569, column: 3, scope: !9891)
!9906 = distinct !{!9906, !9879, !9907}
!9907 = !DILocation(line: 570, column: 2, scope: !9871)
!9908 = !DILocation(line: 592, column: 33, scope: !9871)
!9909 = !DILocation(line: 592, column: 2, scope: !9871)
!9910 = !DILocation(line: 0, scope: !9899, inlinedAt: !9911)
!9911 = distinct !DILocation(line: 593, column: 2, scope: !9871)
!9912 = !DILocation(line: 95, column: 2, scope: !9899, inlinedAt: !9911)
!9913 = !DILocation(line: 594, column: 1, scope: !9871)
!9914 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1482, file: !1482, line: 596, type: !1408, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9915)
!9915 = !{!9916, !9917, !9918}
!9916 = !DILocalVariable(name: "dev", arg: 1, scope: !9914, file: !1482, line: 596, type: !1387)
!9917 = !DILocalVariable(name: "config", scope: !9914, file: !1482, line: 598, type: !9851)
!9918 = !DILocalVariable(name: "err", scope: !9914, file: !1482, line: 599, type: !118)
!9919 = !DILocation(line: 0, scope: !9914)
!9920 = !DILocation(line: 598, column: 48, scope: !9914)
!9921 = !DILocation(line: 606, column: 40, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 606, column: 6)
!9923 = !DILocation(line: 606, column: 6, scope: !9922)
!9924 = !DILocation(line: 606, column: 6, scope: !9914)
!9925 = !DILocation(line: 610, column: 39, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 610, column: 6)
!9927 = !DILocation(line: 610, column: 6, scope: !9926)
!9928 = !DILocation(line: 610, column: 6, scope: !9914)
!9929 = !DILocation(line: 614, column: 39, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 614, column: 6)
!9931 = !DILocation(line: 614, column: 6, scope: !9930)
!9932 = !DILocation(line: 614, column: 6, scope: !9914)
!9933 = !DILocation(line: 619, column: 40, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 619, column: 6)
!9935 = !DILocation(line: 619, column: 6, scope: !9934)
!9936 = !DILocation(line: 619, column: 6, scope: !9914)
!9937 = !DILocation(line: 623, column: 10, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 623, column: 6)
!9939 = !DILocation(line: 623, column: 6, scope: !9914)
!9940 = !DILocation(line: 624, column: 34, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9938, file: !1482, line: 623, column: 24)
!9942 = !DILocation(line: 624, column: 3, scope: !9941)
!9943 = !DILocation(line: 625, column: 2, scope: !9941)
!9944 = !DILocation(line: 632, column: 10, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 632, column: 6)
!9946 = !DILocation(line: 632, column: 6, scope: !9914)
!9947 = !DILocation(line: 633, column: 34, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9945, file: !1482, line: 632, column: 32)
!9949 = !DILocation(line: 633, column: 3, scope: !9948)
!9950 = !DILocation(line: 634, column: 2, scope: !9948)
!9951 = !DILocation(line: 636, column: 10, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 636, column: 6)
!9953 = !DILocation(line: 636, column: 6, scope: !9914)
!9954 = !DILocation(line: 637, column: 33, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9952, file: !1482, line: 636, column: 31)
!9956 = !DILocation(line: 637, column: 3, scope: !9955)
!9957 = !DILocation(line: 638, column: 2, scope: !9955)
!9958 = !DILocation(line: 640, column: 10, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9914, file: !1482, line: 640, column: 6)
!9960 = !DILocation(line: 640, column: 6, scope: !9914)
!9961 = !DILocation(line: 641, column: 33, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9959, file: !1482, line: 640, column: 32)
!9963 = !DILocation(line: 641, column: 3, scope: !9962)
!9964 = !DILocation(line: 642, column: 2, scope: !9962)
!9965 = !DILocation(line: 646, column: 32, scope: !9914)
!9966 = !DILocation(line: 646, column: 2, scope: !9914)
!9967 = !DILocation(line: 648, column: 2, scope: !9914)
!9968 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1482, file: !1482, line: 419, type: !1412, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9969)
!9969 = !{!9970, !9971, !9972, !9973, !9975, !9976, !9977, !9978}
!9970 = !DILocalVariable(name: "dev", arg: 1, scope: !9968, file: !1482, line: 419, type: !1387)
!9971 = !DILocalVariable(name: "cfg", arg: 2, scope: !9968, file: !1482, line: 420, type: !1414)
!9972 = !DILocalVariable(name: "config", scope: !9968, file: !1482, line: 422, type: !9851)
!9973 = !DILocalVariable(name: "data", scope: !9968, file: !1482, line: 423, type: !9974)
!9974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!9975 = !DILocalVariable(name: "parity", scope: !9968, file: !1482, line: 424, type: !6589)
!9976 = !DILocalVariable(name: "stopbits", scope: !9968, file: !1482, line: 425, type: !6589)
!9977 = !DILocalVariable(name: "databits", scope: !9968, file: !1482, line: 426, type: !6589)
!9978 = !DILocalVariable(name: "flowctrl", scope: !9968, file: !1482, line: 428, type: !6589)
!9979 = !DILocation(line: 0, scope: !9968)
!9980 = !DILocation(line: 422, column: 48, scope: !9968)
!9981 = !DILocation(line: 423, column: 38, scope: !9968)
!9982 = !DILocation(line: 424, column: 56, scope: !9968)
!9983 = !DILocation(line: 424, column: 51, scope: !9968)
!9984 = !DILocation(line: 424, column: 26, scope: !9968)
!9985 = !DILocation(line: 425, column: 60, scope: !9968)
!9986 = !DILocation(line: 425, column: 55, scope: !9968)
!9987 = !DILocation(line: 425, column: 28, scope: !9968)
!9988 = !DILocation(line: 426, column: 60, scope: !9968)
!9989 = !DILocation(line: 426, column: 55, scope: !9968)
!9990 = !DILocation(line: 426, column: 28, scope: !9968)
!9991 = !DILocation(line: 428, column: 58, scope: !9968)
!9992 = !DILocation(line: 428, column: 53, scope: !9968)
!9993 = !DILocation(line: 428, column: 28, scope: !9968)
!9994 = !DILocation(line: 431, column: 44, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 431, column: 6)
!9996 = !DILocation(line: 438, column: 22, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 437, column: 6)
!9998 = !DILocation(line: 437, column: 6, scope: !9968)
!9999 = !DILocation(line: 448, column: 6, scope: !9968)
!10000 = !DILocation(line: 465, column: 47, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 465, column: 6)
!10002 = !DILocation(line: 475, column: 21, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 475, column: 6)
!10004 = !DILocation(line: 475, column: 6, scope: !9968)
!10005 = !DILocation(line: 476, column: 8, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10007, file: !1482, line: 476, column: 7)
!10007 = distinct !DILexicalBlock(scope: !10003, file: !1482, line: 475, column: 49)
!10008 = !DILocation(line: 477, column: 34, scope: !10006)
!10009 = !DILocation(line: 476, column: 7, scope: !10007)
!10010 = !DILocation(line: 482, column: 27, scope: !9968)
!10011 = !DILocation(line: 482, column: 2, scope: !9968)
!10012 = !DILocation(line: 484, column: 16, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 484, column: 6)
!10014 = !DILocation(line: 484, column: 13, scope: !10013)
!10015 = !DILocation(line: 484, column: 6, scope: !9968)
!10016 = !DILocation(line: 485, column: 3, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10013, file: !1482, line: 484, column: 44)
!10018 = !DILocation(line: 486, column: 2, scope: !10017)
!10019 = !DILocation(line: 488, column: 18, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 488, column: 6)
!10021 = !DILocation(line: 488, column: 15, scope: !10020)
!10022 = !DILocation(line: 488, column: 6, scope: !9968)
!10023 = !DILocation(line: 489, column: 3, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !1482, line: 488, column: 48)
!10025 = !DILocation(line: 490, column: 2, scope: !10024)
!10026 = !DILocation(line: 492, column: 18, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 492, column: 6)
!10028 = !DILocation(line: 492, column: 15, scope: !10027)
!10029 = !DILocation(line: 492, column: 6, scope: !9968)
!10030 = !DILocation(line: 493, column: 3, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10027, file: !1482, line: 492, column: 48)
!10032 = !DILocation(line: 494, column: 2, scope: !10031)
!10033 = !DILocation(line: 496, column: 18, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 496, column: 6)
!10035 = !DILocation(line: 496, column: 15, scope: !10034)
!10036 = !DILocation(line: 496, column: 6, scope: !9968)
!10037 = !DILocation(line: 497, column: 3, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10034, file: !1482, line: 496, column: 46)
!10039 = !DILocation(line: 498, column: 2, scope: !10038)
!10040 = !DILocation(line: 500, column: 11, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 500, column: 6)
!10042 = !DILocation(line: 500, column: 29, scope: !10041)
!10043 = !DILocation(line: 500, column: 20, scope: !10041)
!10044 = !DILocation(line: 500, column: 6, scope: !9968)
!10045 = !DILocation(line: 501, column: 3, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10041, file: !1482, line: 500, column: 40)
!10047 = !DILocation(line: 502, column: 26, scope: !10046)
!10048 = !DILocation(line: 502, column: 19, scope: !10046)
!10049 = !DILocation(line: 503, column: 2, scope: !10046)
!10050 = !DILocation(line: 505, column: 26, scope: !9968)
!10051 = !DILocation(line: 505, column: 2, scope: !9968)
!10052 = !DILocation(line: 506, column: 2, scope: !9968)
!10053 = !DILocation(line: 507, column: 1, scope: !9968)
!10054 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1482, file: !1482, line: 509, type: !1425, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10055)
!10055 = !{!10056, !10057, !10058}
!10056 = !DILocalVariable(name: "dev", arg: 1, scope: !10054, file: !1482, line: 509, type: !1387)
!10057 = !DILocalVariable(name: "cfg", arg: 2, scope: !10054, file: !1482, line: 510, type: !1427)
!10058 = !DILocalVariable(name: "data", scope: !10054, file: !1482, line: 512, type: !9974)
!10059 = !DILocation(line: 0, scope: !10054)
!10060 = !DILocation(line: 512, column: 38, scope: !10054)
!10061 = !DILocation(line: 514, column: 24, scope: !10054)
!10062 = !DILocation(line: 514, column: 7, scope: !10054)
!10063 = !DILocation(line: 514, column: 16, scope: !10054)
!10064 = !DILocation(line: 515, column: 41, scope: !10054)
!10065 = !{i32 0, i32 1537}
!10066 = !DILocation(line: 515, column: 16, scope: !10054)
!10067 = !DILocation(line: 515, column: 7, scope: !10054)
!10068 = !DILocation(line: 515, column: 14, scope: !10054)
!10069 = !DILocation(line: 517, column: 3, scope: !10054)
!10070 = !{i32 0, i32 12289}
!10071 = !DILocation(line: 516, column: 19, scope: !10054)
!10072 = !DILocation(line: 516, column: 7, scope: !10054)
!10073 = !DILocation(line: 516, column: 17, scope: !10054)
!10074 = !DILocation(line: 519, column: 3, scope: !10054)
!10075 = !DILocation(line: 519, column: 33, scope: !10054)
!10076 = !DILocation(line: 518, column: 19, scope: !10054)
!10077 = !DILocation(line: 518, column: 7, scope: !10054)
!10078 = !DILocation(line: 518, column: 17, scope: !10054)
!10079 = !DILocation(line: 521, column: 3, scope: !10054)
!10080 = !{i32 0, i32 769}
!10081 = !DILocation(line: 520, column: 19, scope: !10054)
!10082 = !DILocation(line: 520, column: 7, scope: !10054)
!10083 = !DILocation(line: 520, column: 17, scope: !10054)
!10084 = !DILocation(line: 522, column: 2, scope: !10054)
!10085 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1482, file: !1482, line: 205, type: !10086, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!118, !1387}
!10088 = !{!10089, !10090}
!10089 = !DILocalVariable(name: "dev", arg: 1, scope: !10085, file: !1482, line: 205, type: !1387)
!10090 = !DILocalVariable(name: "config", scope: !10085, file: !1482, line: 207, type: !9851)
!10091 = !DILocation(line: 0, scope: !10085)
!10092 = !DILocation(line: 207, column: 48, scope: !10085)
!10093 = !DILocation(line: 209, column: 36, scope: !10085)
!10094 = !DILocation(line: 209, column: 9, scope: !10085)
!10095 = !DILocation(line: 209, column: 2, scope: !10085)
!10096 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1482, file: !1482, line: 270, type: !10097, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10099)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!1353, !118}
!10099 = !{!10100}
!10100 = !DILocalVariable(name: "parity", arg: 1, scope: !10096, file: !1482, line: 270, type: !118)
!10101 = !DILocation(line: 0, scope: !10096)
!10102 = !DILocation(line: 272, column: 2, scope: !10096)
!10103 = !DILocation(line: 281, column: 1, scope: !10096)
!10104 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1482, file: !1482, line: 220, type: !10086, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "dev", arg: 1, scope: !10104, file: !1482, line: 220, type: !1387)
!10107 = !DILocalVariable(name: "config", scope: !10104, file: !1482, line: 222, type: !9851)
!10108 = !DILocation(line: 0, scope: !10104)
!10109 = !DILocation(line: 222, column: 48, scope: !10104)
!10110 = !DILocation(line: 224, column: 44, scope: !10104)
!10111 = !DILocation(line: 224, column: 9, scope: !10104)
!10112 = !DILocation(line: 224, column: 2, scope: !10104)
!10113 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1482, file: !1482, line: 304, type: !10114, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!1367, !118}
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "sb", arg: 1, scope: !10113, file: !1482, line: 304, type: !118)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 306, column: 2, scope: !10113)
!10120 = !DILocation(line: 0, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10113, file: !1482, line: 306, column: 14)
!10122 = !DILocation(line: 323, column: 1, scope: !10113)
!10123 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1482, file: !1482, line: 235, type: !10086, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10124)
!10124 = !{!10125, !10126}
!10125 = !DILocalVariable(name: "dev", arg: 1, scope: !10123, file: !1482, line: 235, type: !1387)
!10126 = !DILocalVariable(name: "config", scope: !10123, file: !1482, line: 237, type: !9851)
!10127 = !DILocation(line: 0, scope: !10123)
!10128 = !DILocation(line: 237, column: 48, scope: !10123)
!10129 = !DILocation(line: 239, column: 39, scope: !10123)
!10130 = !DILocation(line: 239, column: 9, scope: !10123)
!10131 = !DILocation(line: 239, column: 2, scope: !10123)
!10132 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1482, file: !1482, line: 355, type: !10133, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10135)
!10133 = !DISubroutineType(types: !10134)
!10134 = !{!1360, !118, !118}
!10135 = !{!10136, !10137}
!10136 = !DILocalVariable(name: "db", arg: 1, scope: !10132, file: !1482, line: 355, type: !118)
!10137 = !DILocalVariable(name: "p", arg: 2, scope: !10132, file: !1482, line: 356, type: !118)
!10138 = !DILocation(line: 0, scope: !10132)
!10139 = !DILocation(line: 358, column: 2, scope: !10132)
!10140 = !DILocation(line: 384, column: 1, scope: !10132)
!10141 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1482, file: !1482, line: 250, type: !10086, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10142)
!10142 = !{!10143, !10144}
!10143 = !DILocalVariable(name: "dev", arg: 1, scope: !10141, file: !1482, line: 250, type: !1387)
!10144 = !DILocalVariable(name: "config", scope: !10141, file: !1482, line: 252, type: !9851)
!10145 = !DILocation(line: 0, scope: !10141)
!10146 = !DILocation(line: 252, column: 48, scope: !10141)
!10147 = !DILocation(line: 254, column: 40, scope: !10141)
!10148 = !DILocation(line: 254, column: 9, scope: !10141)
!10149 = !DILocation(line: 254, column: 2, scope: !10141)
!10150 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1482, file: !1482, line: 409, type: !10151, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10153)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!1373, !118}
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "fc", arg: 1, scope: !10150, file: !1482, line: 409, type: !118)
!10155 = !DILocation(line: 0, scope: !10150)
!10156 = !DILocation(line: 411, column: 9, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10150, file: !1482, line: 411, column: 6)
!10158 = !DILocation(line: 416, column: 1, scope: !10150)
!10159 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10160, file: !10160, line: 967, type: !10161, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10163)
!10160 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10161 = !DISubroutineType(types: !10162)
!10162 = !{!118, !1428}
!10163 = !{!10164}
!10164 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10159, file: !10160, line: 967, type: !1428)
!10165 = !DILocation(line: 0, scope: !10159)
!10166 = !DILocation(line: 969, column: 21, scope: !10159)
!10167 = !DILocation(line: 969, column: 3, scope: !10159)
!10168 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10160, file: !10160, line: 601, type: !10161, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10169)
!10169 = !{!10170}
!10170 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10168, file: !10160, line: 601, type: !1428)
!10171 = !DILocation(line: 0, scope: !10168)
!10172 = !DILocation(line: 603, column: 21, scope: !10168)
!10173 = !DILocation(line: 603, column: 3, scope: !10168)
!10174 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10160, file: !10160, line: 820, type: !10161, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10175)
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10174, file: !10160, line: 820, type: !1428)
!10177 = !DILocation(line: 0, scope: !10174)
!10178 = !DILocation(line: 822, column: 21, scope: !10174)
!10179 = !DILocation(line: 822, column: 3, scope: !10174)
!10180 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10160, file: !10160, line: 547, type: !10161, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10181)
!10181 = !{!10182}
!10182 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10180, file: !10160, line: 547, type: !1428)
!10183 = !DILocation(line: 0, scope: !10180)
!10184 = !DILocation(line: 549, column: 21, scope: !10180)
!10185 = !DILocation(line: 549, column: 3, scope: !10180)
!10186 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1482, file: !1482, line: 257, type: !10187, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10189)
!10187 = !DISubroutineType(types: !10188)
!10188 = !{!118, !1353}
!10189 = !{!10190}
!10190 = !DILocalVariable(name: "parity", arg: 1, scope: !10186, file: !1482, line: 257, type: !1353)
!10191 = !DILocation(line: 0, scope: !10186)
!10192 = !DILocation(line: 259, column: 2, scope: !10186)
!10193 = !DILocation(line: 268, column: 1, scope: !10186)
!10194 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1482, file: !1482, line: 283, type: !10195, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10197)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!118, !1367}
!10197 = !{!10198}
!10198 = !DILocalVariable(name: "sb", arg: 1, scope: !10194, file: !1482, line: 283, type: !1367)
!10199 = !DILocation(line: 0, scope: !10194)
!10200 = !DILocation(line: 285, column: 2, scope: !10194)
!10201 = !DILocation(line: 0, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10194, file: !1482, line: 285, column: 14)
!10203 = !DILocation(line: 302, column: 1, scope: !10194)
!10204 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1482, file: !1482, line: 325, type: !10205, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10207)
!10205 = !DISubroutineType(types: !10206)
!10206 = !{!118, !1360, !1353}
!10207 = !{!10208, !10209}
!10208 = !DILocalVariable(name: "db", arg: 1, scope: !10204, file: !1482, line: 325, type: !1360)
!10209 = !DILocalVariable(name: "p", arg: 2, scope: !10204, file: !1482, line: 326, type: !1353)
!10210 = !DILocation(line: 0, scope: !10204)
!10211 = !DILocation(line: 328, column: 2, scope: !10204)
!10212 = !DILocation(line: 353, column: 1, scope: !10204)
!10213 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1482, file: !1482, line: 393, type: !10214, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10216)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{!118, !1373}
!10216 = !{!10217}
!10217 = !DILocalVariable(name: "fc", arg: 1, scope: !10213, file: !1482, line: 393, type: !1373)
!10218 = !DILocation(line: 0, scope: !10213)
!10219 = !DILocation(line: 395, column: 9, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10213, file: !1482, line: 395, column: 6)
!10221 = !DILocation(line: 400, column: 1, scope: !10213)
!10222 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10160, file: !10160, line: 424, type: !10223, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10225)
!10223 = !DISubroutineType(types: !10224)
!10224 = !{null, !1428}
!10225 = !{!10226}
!10226 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10222, file: !10160, line: 424, type: !1428)
!10227 = !DILocation(line: 0, scope: !10222)
!10228 = !DILocation(line: 426, column: 3, scope: !10222)
!10229 = !DILocation(line: 427, column: 1, scope: !10222)
!10230 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1482, file: !1482, line: 197, type: !10231, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10233)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{null, !1387, !118}
!10233 = !{!10234, !10235, !10236}
!10234 = !DILocalVariable(name: "dev", arg: 1, scope: !10230, file: !1482, line: 197, type: !1387)
!10235 = !DILocalVariable(name: "parity", arg: 2, scope: !10230, file: !1482, line: 198, type: !118)
!10236 = !DILocalVariable(name: "config", scope: !10230, file: !1482, line: 200, type: !9851)
!10237 = !DILocation(line: 0, scope: !10230)
!10238 = !DILocation(line: 200, column: 48, scope: !10230)
!10239 = !DILocation(line: 202, column: 29, scope: !10230)
!10240 = !DILocation(line: 202, column: 2, scope: !10230)
!10241 = !DILocation(line: 203, column: 1, scope: !10230)
!10242 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1482, file: !1482, line: 212, type: !10231, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10243)
!10243 = !{!10244, !10245, !10246}
!10244 = !DILocalVariable(name: "dev", arg: 1, scope: !10242, file: !1482, line: 212, type: !1387)
!10245 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10242, file: !1482, line: 213, type: !118)
!10246 = !DILocalVariable(name: "config", scope: !10242, file: !1482, line: 215, type: !9851)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 215, column: 48, scope: !10242)
!10249 = !DILocation(line: 217, column: 37, scope: !10242)
!10250 = !DILocation(line: 217, column: 2, scope: !10242)
!10251 = !DILocation(line: 218, column: 1, scope: !10242)
!10252 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1482, file: !1482, line: 227, type: !10231, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10253)
!10253 = !{!10254, !10255, !10256}
!10254 = !DILocalVariable(name: "dev", arg: 1, scope: !10252, file: !1482, line: 227, type: !1387)
!10255 = !DILocalVariable(name: "databits", arg: 2, scope: !10252, file: !1482, line: 228, type: !118)
!10256 = !DILocalVariable(name: "config", scope: !10252, file: !1482, line: 230, type: !9851)
!10257 = !DILocation(line: 0, scope: !10252)
!10258 = !DILocation(line: 230, column: 48, scope: !10252)
!10259 = !DILocation(line: 232, column: 32, scope: !10252)
!10260 = !DILocation(line: 232, column: 2, scope: !10252)
!10261 = !DILocation(line: 233, column: 1, scope: !10252)
!10262 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1482, file: !1482, line: 242, type: !10231, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10263)
!10263 = !{!10264, !10265, !10266}
!10264 = !DILocalVariable(name: "dev", arg: 1, scope: !10262, file: !1482, line: 242, type: !1387)
!10265 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10262, file: !1482, line: 243, type: !118)
!10266 = !DILocalVariable(name: "config", scope: !10262, file: !1482, line: 245, type: !9851)
!10267 = !DILocation(line: 0, scope: !10262)
!10268 = !DILocation(line: 245, column: 48, scope: !10262)
!10269 = !DILocation(line: 247, column: 33, scope: !10262)
!10270 = !DILocation(line: 247, column: 2, scope: !10262)
!10271 = !DILocation(line: 248, column: 1, scope: !10262)
!10272 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1482, file: !1482, line: 107, type: !10231, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10273)
!10273 = !{!10274, !10275, !10276, !10277, !10278}
!10274 = !DILocalVariable(name: "dev", arg: 1, scope: !10272, file: !1482, line: 107, type: !1387)
!10275 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10272, file: !1482, line: 107, type: !118)
!10276 = !DILocalVariable(name: "config", scope: !10272, file: !1482, line: 109, type: !9851)
!10277 = !DILocalVariable(name: "data", scope: !10272, file: !1482, line: 110, type: !9974)
!10278 = !DILocalVariable(name: "clock_rate", scope: !10272, file: !1482, line: 112, type: !118)
!10279 = !DILocation(line: 0, scope: !10272)
!10280 = !DILocation(line: 109, column: 48, scope: !10272)
!10281 = !DILocation(line: 110, column: 38, scope: !10272)
!10282 = !DILocation(line: 112, column: 2, scope: !10272)
!10283 = !DILocation(line: 123, column: 36, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !1482, line: 123, column: 7)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !1482, line: 122, column: 9)
!10286 = distinct !DILexicalBlock(scope: !10272, file: !1482, line: 115, column: 6)
!10287 = !DILocation(line: 124, column: 42, scope: !10284)
!10288 = !DILocation(line: 123, column: 7, scope: !10284)
!10289 = !DILocation(line: 125, column: 22, scope: !10284)
!10290 = !DILocation(line: 123, column: 7, scope: !10285)
!10291 = !DILocation(line: 126, column: 4, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !1482, line: 126, column: 4)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !1482, line: 126, column: 4)
!10294 = distinct !DILexicalBlock(scope: !10295, file: !1482, line: 126, column: 4)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !1482, line: 126, column: 4)
!10296 = distinct !DILexicalBlock(scope: !10284, file: !1482, line: 125, column: 27)
!10297 = !DILocation(line: 127, column: 4, scope: !10296)
!10298 = !DILocation(line: 176, column: 36, scope: !10272)
!10299 = !DILocation(line: 176, column: 3, scope: !10272)
!10300 = !DILocation(line: 179, column: 32, scope: !10272)
!10301 = !DILocation(line: 180, column: 10, scope: !10272)
!10302 = !DILocation(line: 179, column: 3, scope: !10272)
!10303 = !DILocation(line: 189, column: 3, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !1482, line: 189, column: 3)
!10305 = distinct !DILexicalBlock(scope: !10272, file: !1482, line: 189, column: 3)
!10306 = !DILocation(line: 189, column: 3, scope: !10305)
!10307 = !DILocation(line: 189, column: 3, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10304, file: !1482, line: 189, column: 3)
!10309 = !DILocation(line: 195, column: 1, scope: !10272)
!10310 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10160, file: !10160, line: 410, type: !10223, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10311)
!10311 = !{!10312}
!10312 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10310, file: !10160, line: 410, type: !1428)
!10313 = !DILocation(line: 0, scope: !10310)
!10314 = !DILocation(line: 412, column: 3, scope: !10310)
!10315 = !DILocation(line: 413, column: 1, scope: !10310)
!10316 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !836, file: !836, line: 216, type: !1461, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10317)
!10317 = !{!10318, !10319, !10320, !10321}
!10318 = !DILocalVariable(name: "dev", arg: 1, scope: !10316, file: !836, line: 216, type: !1387)
!10319 = !DILocalVariable(name: "sys", arg: 2, scope: !10316, file: !836, line: 217, type: !928)
!10320 = !DILocalVariable(name: "rate", arg: 3, scope: !10316, file: !836, line: 218, type: !884)
!10321 = !DILocalVariable(name: "api", scope: !10316, file: !836, line: 220, type: !1439)
!10322 = !DILocation(line: 0, scope: !10316)
!10323 = !DILocation(line: 221, column: 49, scope: !10316)
!10324 = !DILocation(line: 223, column: 11, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10316, file: !836, line: 223, column: 6)
!10326 = !DILocation(line: 223, column: 20, scope: !10325)
!10327 = !DILocation(line: 223, column: 6, scope: !10316)
!10328 = !DILocation(line: 227, column: 9, scope: !10316)
!10329 = !DILocation(line: 227, column: 2, scope: !10316)
!10330 = !DILocation(line: 228, column: 1, scope: !10316)
!10331 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6071, file: !6071, line: 175, type: !6072, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10332)
!10332 = !{!10333}
!10333 = !DILocalVariable(name: "level", arg: 1, scope: !10331, file: !6071, line: 175, type: !119)
!10334 = !DILocation(line: 0, scope: !10331)
!10335 = !DILocation(line: 177, column: 2, scope: !10331)
!10336 = !DILocation(line: 189, column: 1, scope: !10331)
!10337 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10160, file: !10160, line: 615, type: !10338, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10340)
!10338 = !DISubroutineType(types: !10339)
!10339 = !{null, !1428, !118}
!10340 = !{!10341, !10342}
!10341 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10337, file: !10160, line: 615, type: !1428)
!10342 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10337, file: !10160, line: 615, type: !118)
!10343 = !DILocation(line: 0, scope: !10337)
!10344 = !DILocation(line: 617, column: 3, scope: !10337)
!10345 = !DILocation(line: 618, column: 1, scope: !10337)
!10346 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10160, file: !10160, line: 1020, type: !10347, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10349)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !1428, !118, !118, !118}
!10349 = !{!10350, !10351, !10352, !10353}
!10350 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10346, file: !10160, line: 1020, type: !1428)
!10351 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10346, file: !10160, line: 1020, type: !118)
!10352 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10346, file: !10160, line: 1020, type: !118)
!10353 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10346, file: !10160, line: 1021, type: !118)
!10354 = !DILocation(line: 0, scope: !10346)
!10355 = !DILocation(line: 1029, column: 30, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !10160, line: 1028, column: 3)
!10357 = distinct !DILexicalBlock(scope: !10346, file: !10160, line: 1023, column: 7)
!10358 = !DILocation(line: 1029, column: 19, scope: !10356)
!10359 = !DILocation(line: 1029, column: 13, scope: !10356)
!10360 = !DILocation(line: 1029, column: 17, scope: !10356)
!10361 = !DILocation(line: 1031, column: 1, scope: !10346)
!10362 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10160, file: !10160, line: 949, type: !10338, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10363)
!10363 = !{!10364, !10365}
!10364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10160, line: 949, type: !1428)
!10365 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10362, file: !10160, line: 949, type: !118)
!10366 = !DILocation(line: 0, scope: !10362)
!10367 = !DILocation(line: 951, column: 3, scope: !10362)
!10368 = !DILocation(line: 952, column: 1, scope: !10362)
!10369 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10160, file: !10160, line: 588, type: !10338, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10370)
!10370 = !{!10371, !10372}
!10371 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10369, file: !10160, line: 588, type: !1428)
!10372 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10369, file: !10160, line: 588, type: !118)
!10373 = !DILocation(line: 0, scope: !10369)
!10374 = !DILocation(line: 590, column: 3, scope: !10369)
!10375 = !DILocation(line: 591, column: 1, scope: !10369)
!10376 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10160, file: !10160, line: 805, type: !10338, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10377)
!10377 = !{!10378, !10379}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10160, line: 805, type: !1428)
!10379 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10376, file: !10160, line: 805, type: !118)
!10380 = !DILocation(line: 0, scope: !10376)
!10381 = !DILocation(line: 807, column: 3, scope: !10376)
!10382 = !DILocation(line: 808, column: 1, scope: !10376)
!10383 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10160, file: !10160, line: 532, type: !10338, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10384)
!10384 = !{!10385, !10386}
!10385 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10383, file: !10160, line: 532, type: !1428)
!10386 = !DILocalVariable(name: "Parity", arg: 2, scope: !10383, file: !10160, line: 532, type: !118)
!10387 = !DILocation(line: 0, scope: !10383)
!10388 = !DILocation(line: 534, column: 3, scope: !10383)
!10389 = !DILocation(line: 535, column: 1, scope: !10383)
!10390 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10160, file: !10160, line: 1770, type: !10161, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10391)
!10391 = !{!10392}
!10392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10390, file: !10160, line: 1770, type: !1428)
!10393 = !DILocation(line: 0, scope: !10390)
!10394 = !DILocation(line: 1772, column: 11, scope: !10390)
!10395 = !DILocation(line: 1772, column: 46, scope: !10390)
!10396 = !DILocation(line: 1772, column: 3, scope: !10390)
!10397 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10160, file: !10160, line: 1737, type: !10161, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10398)
!10398 = !{!10399}
!10399 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10397, file: !10160, line: 1737, type: !1428)
!10400 = !DILocation(line: 0, scope: !10397)
!10401 = !DILocation(line: 1739, column: 11, scope: !10397)
!10402 = !DILocation(line: 1739, column: 3, scope: !10397)
!10403 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10160, file: !10160, line: 1748, type: !10161, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10404)
!10404 = !{!10405}
!10405 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10403, file: !10160, line: 1748, type: !1428)
!10406 = !DILocation(line: 0, scope: !10403)
!10407 = !DILocation(line: 1750, column: 11, scope: !10403)
!10408 = !DILocation(line: 1750, column: 45, scope: !10403)
!10409 = !DILocation(line: 1750, column: 3, scope: !10403)
!10410 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10160, file: !10160, line: 1827, type: !10161, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10411)
!10411 = !{!10412}
!10412 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10410, file: !10160, line: 1827, type: !1428)
!10413 = !DILocation(line: 0, scope: !10410)
!10414 = !DILocation(line: 1829, column: 11, scope: !10410)
!10415 = !DILocation(line: 1829, column: 46, scope: !10410)
!10416 = !DILocation(line: 1829, column: 3, scope: !10410)
!10417 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10160, file: !10160, line: 1992, type: !10223, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10418)
!10418 = !{!10419}
!10419 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10417, file: !10160, line: 1992, type: !1428)
!10420 = !DILocation(line: 0, scope: !10417)
!10421 = !DILocation(line: 1994, column: 3, scope: !10417)
!10422 = !DILocation(line: 1995, column: 1, scope: !10417)
!10423 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10160, file: !10160, line: 1934, type: !10223, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10424)
!10424 = !{!10425, !10426}
!10425 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10423, file: !10160, line: 1934, type: !1428)
!10426 = !DILocalVariable(name: "tmpreg", scope: !10423, file: !10160, line: 1936, type: !314)
!10427 = !DILocation(line: 0, scope: !10423)
!10428 = !DILocation(line: 1936, column: 3, scope: !10423)
!10429 = !DILocation(line: 1936, column: 17, scope: !10423)
!10430 = !DILocation(line: 1937, column: 20, scope: !10423)
!10431 = !DILocation(line: 1937, column: 10, scope: !10423)
!10432 = !DILocation(line: 1938, column: 10, scope: !10423)
!10433 = !DILocation(line: 1939, column: 20, scope: !10423)
!10434 = !DILocation(line: 1939, column: 10, scope: !10423)
!10435 = !DILocation(line: 1940, column: 10, scope: !10423)
!10436 = !DILocation(line: 1941, column: 1, scope: !10423)
!10437 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10160, file: !10160, line: 1877, type: !10223, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10438)
!10438 = !{!10439, !10440}
!10439 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10437, file: !10160, line: 1877, type: !1428)
!10440 = !DILocalVariable(name: "tmpreg", scope: !10437, file: !10160, line: 1879, type: !314)
!10441 = !DILocation(line: 0, scope: !10437)
!10442 = !DILocation(line: 1879, column: 3, scope: !10437)
!10443 = !DILocation(line: 1879, column: 17, scope: !10437)
!10444 = !DILocation(line: 1880, column: 20, scope: !10437)
!10445 = !DILocation(line: 1880, column: 10, scope: !10437)
!10446 = !DILocation(line: 1881, column: 10, scope: !10437)
!10447 = !DILocation(line: 1882, column: 20, scope: !10437)
!10448 = !DILocation(line: 1882, column: 10, scope: !10437)
!10449 = !DILocation(line: 1883, column: 10, scope: !10437)
!10450 = !DILocation(line: 1884, column: 1, scope: !10437)
!10451 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10160, file: !10160, line: 1896, type: !10223, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10452)
!10452 = !{!10453, !10454}
!10453 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10451, file: !10160, line: 1896, type: !1428)
!10454 = !DILocalVariable(name: "tmpreg", scope: !10451, file: !10160, line: 1898, type: !314)
!10455 = !DILocation(line: 0, scope: !10451)
!10456 = !DILocation(line: 1898, column: 3, scope: !10451)
!10457 = !DILocation(line: 1898, column: 17, scope: !10451)
!10458 = !DILocation(line: 1899, column: 20, scope: !10451)
!10459 = !DILocation(line: 1899, column: 10, scope: !10451)
!10460 = !DILocation(line: 1900, column: 10, scope: !10451)
!10461 = !DILocation(line: 1901, column: 20, scope: !10451)
!10462 = !DILocation(line: 1901, column: 10, scope: !10451)
!10463 = !DILocation(line: 1902, column: 10, scope: !10451)
!10464 = !DILocation(line: 1903, column: 1, scope: !10451)
!10465 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10160, file: !10160, line: 1915, type: !10223, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10466)
!10466 = !{!10467, !10468}
!10467 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10465, file: !10160, line: 1915, type: !1428)
!10468 = !DILocalVariable(name: "tmpreg", scope: !10465, file: !10160, line: 1917, type: !314)
!10469 = !DILocation(line: 0, scope: !10465)
!10470 = !DILocation(line: 1917, column: 3, scope: !10465)
!10471 = !DILocation(line: 1917, column: 17, scope: !10465)
!10472 = !DILocation(line: 1918, column: 20, scope: !10465)
!10473 = !DILocation(line: 1918, column: 10, scope: !10465)
!10474 = !DILocation(line: 1919, column: 10, scope: !10465)
!10475 = !DILocation(line: 1920, column: 20, scope: !10465)
!10476 = !DILocation(line: 1920, column: 10, scope: !10465)
!10477 = !DILocation(line: 1921, column: 10, scope: !10465)
!10478 = !DILocation(line: 1922, column: 1, scope: !10465)
!10479 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10160, file: !10160, line: 1814, type: !10161, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10480)
!10480 = !{!10481}
!10481 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10479, file: !10160, line: 1814, type: !1428)
!10482 = !DILocation(line: 0, scope: !10479)
!10483 = !DILocation(line: 1816, column: 11, scope: !10479)
!10484 = !DILocation(line: 1816, column: 46, scope: !10479)
!10485 = !DILocation(line: 1816, column: 3, scope: !10479)
!10486 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10160, file: !10160, line: 2426, type: !10487, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10489)
!10487 = !DISubroutineType(types: !10488)
!10488 = !{null, !1428, !185}
!10489 = !{!10490, !10491}
!10490 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10486, file: !10160, line: 2426, type: !1428)
!10491 = !DILocalVariable(name: "Value", arg: 2, scope: !10486, file: !10160, line: 2426, type: !185)
!10492 = !DILocation(line: 0, scope: !10486)
!10493 = !DILocation(line: 2428, column: 16, scope: !10486)
!10494 = !DILocation(line: 2428, column: 11, scope: !10486)
!10495 = !DILocation(line: 2428, column: 14, scope: !10486)
!10496 = !DILocation(line: 2429, column: 1, scope: !10486)
!10497 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10160, file: !10160, line: 1792, type: !10161, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10498)
!10498 = !{!10499}
!10499 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10497, file: !10160, line: 1792, type: !1428)
!10500 = !DILocation(line: 0, scope: !10497)
!10501 = !DILocation(line: 1794, column: 11, scope: !10497)
!10502 = !DILocation(line: 1794, column: 47, scope: !10497)
!10503 = !DILocation(line: 1794, column: 3, scope: !10497)
!10504 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10160, file: !10160, line: 2403, type: !10505, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10507)
!10505 = !DISubroutineType(types: !10506)
!10506 = !{!185, !1428}
!10507 = !{!10508}
!10508 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10504, file: !10160, line: 2403, type: !1428)
!10509 = !DILocation(line: 0, scope: !10504)
!10510 = !DILocation(line: 2405, column: 20, scope: !10504)
!10511 = !DILocation(line: 2405, column: 10, scope: !10504)
!10512 = !DILocation(line: 2405, column: 3, scope: !10504)
!10513 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1482, file: !1482, line: 1583, type: !1408, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10514)
!10514 = !{!10515, !10516, !10517, !10518, !10519, !10520}
!10515 = !DILocalVariable(name: "dev", arg: 1, scope: !10513, file: !1482, line: 1583, type: !1387)
!10516 = !DILocalVariable(name: "config", scope: !10513, file: !1482, line: 1585, type: !9851)
!10517 = !DILocalVariable(name: "data", scope: !10513, file: !1482, line: 1586, type: !9974)
!10518 = !DILocalVariable(name: "ll_parity", scope: !10513, file: !1482, line: 1587, type: !118)
!10519 = !DILocalVariable(name: "ll_datawidth", scope: !10513, file: !1482, line: 1588, type: !118)
!10520 = !DILocalVariable(name: "err", scope: !10513, file: !1482, line: 1589, type: !119)
!10521 = !DILocation(line: 0, scope: !10513)
!10522 = !DILocation(line: 1585, column: 48, scope: !10513)
!10523 = !DILocation(line: 1586, column: 38, scope: !10513)
!10524 = !DILocation(line: 1591, column: 2, scope: !10513)
!10525 = !DILocation(line: 1593, column: 29, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10513, file: !1482, line: 1593, column: 6)
!10527 = !DILocation(line: 1593, column: 7, scope: !10526)
!10528 = !DILocation(line: 1593, column: 6, scope: !10513)
!10529 = !DILocation(line: 1594, column: 3, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !1482, line: 1594, column: 3)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1482, line: 1594, column: 3)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !1482, line: 1594, column: 3)
!10533 = distinct !DILexicalBlock(scope: !10534, file: !1482, line: 1594, column: 3)
!10534 = distinct !DILexicalBlock(scope: !10526, file: !1482, line: 1593, column: 37)
!10535 = !DILocation(line: 1595, column: 3, scope: !10534)
!10536 = !DILocation(line: 1599, column: 31, scope: !10513)
!10537 = !DILocation(line: 1599, column: 71, scope: !10513)
!10538 = !DILocation(line: 1599, column: 8, scope: !10513)
!10539 = !DILocation(line: 1600, column: 10, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10513, file: !1482, line: 1600, column: 6)
!10541 = !DILocation(line: 1600, column: 6, scope: !10513)
!10542 = !DILocation(line: 1601, column: 3, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !1482, line: 1601, column: 3)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !1482, line: 1601, column: 3)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !1482, line: 1601, column: 3)
!10546 = distinct !DILexicalBlock(scope: !10547, file: !1482, line: 1601, column: 3)
!10547 = distinct !DILexicalBlock(scope: !10540, file: !1482, line: 1600, column: 16)
!10548 = !DILocation(line: 1602, column: 3, scope: !10547)
!10549 = !DILocation(line: 1616, column: 36, scope: !10513)
!10550 = !DILocation(line: 1616, column: 8, scope: !10513)
!10551 = !DILocation(line: 1617, column: 10, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10513, file: !1482, line: 1617, column: 6)
!10553 = !DILocation(line: 1617, column: 6, scope: !10513)
!10554 = !DILocation(line: 1621, column: 27, scope: !10513)
!10555 = !DILocation(line: 1621, column: 2, scope: !10513)
!10556 = !DILocation(line: 1624, column: 40, scope: !10513)
!10557 = !DILocation(line: 1624, column: 2, scope: !10513)
!10558 = !DILocation(line: 1630, column: 14, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10513, file: !1482, line: 1630, column: 6)
!10560 = !DILocation(line: 1630, column: 6, scope: !10513)
!10561 = !DILocation(line: 1640, column: 4, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !1482, line: 1640, column: 4)
!10563 = distinct !DILexicalBlock(scope: !10564, file: !1482, line: 1640, column: 4)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !1482, line: 1640, column: 4)
!10565 = distinct !DILexicalBlock(scope: !10566, file: !1482, line: 1640, column: 4)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !1482, line: 1639, column: 28)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !1482, line: 1639, column: 7)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !1482, line: 1638, column: 9)
!10569 = distinct !DILexicalBlock(scope: !10559, file: !1482, line: 1634, column: 13)
!10570 = !DILocation(line: 0, scope: !10559)
!10571 = !DILocation(line: 1649, column: 35, scope: !10513)
!10572 = !DILocation(line: 1649, column: 2, scope: !10513)
!10573 = !DILocation(line: 1654, column: 14, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10513, file: !1482, line: 1654, column: 6)
!10575 = !DILocation(line: 1654, column: 6, scope: !10513)
!10576 = !DILocation(line: 1655, column: 3, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10574, file: !1482, line: 1654, column: 31)
!10578 = !DILocation(line: 1656, column: 2, scope: !10577)
!10579 = !DILocation(line: 1659, column: 37, scope: !10513)
!10580 = !DILocation(line: 1659, column: 2, scope: !10513)
!10581 = !DILocation(line: 1662, column: 14, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10513, file: !1482, line: 1662, column: 6)
!10583 = !DILocation(line: 1662, column: 6, scope: !10513)
!10584 = !DILocation(line: 1663, column: 37, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10582, file: !1482, line: 1662, column: 27)
!10586 = !DILocation(line: 1663, column: 3, scope: !10585)
!10587 = !DILocation(line: 1664, column: 2, scope: !10585)
!10588 = !DILocation(line: 1684, column: 26, scope: !10513)
!10589 = !DILocation(line: 1684, column: 2, scope: !10513)
!10590 = !DILocation(line: 1722, column: 2, scope: !10513)
!10591 = !DILocation(line: 1724, column: 1, scope: !10513)
!10592 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1482, file: !1482, line: 651, type: !10593, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10595)
!10593 = !DISubroutineType(types: !10594)
!10594 = !{null, !1387}
!10595 = !{!10596, !10597, !10598}
!10596 = !DILocalVariable(name: "dev", arg: 1, scope: !10592, file: !1482, line: 651, type: !1387)
!10597 = !DILocalVariable(name: "data", scope: !10592, file: !1482, line: 653, type: !9974)
!10598 = !DILocalVariable(name: "clk", scope: !10592, file: !1482, line: 654, type: !10599)
!10599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!10600 = !DILocation(line: 0, scope: !10592)
!10601 = !DILocation(line: 653, column: 38, scope: !10592)
!10602 = !DILocation(line: 656, column: 8, scope: !10592)
!10603 = !DILocation(line: 656, column: 14, scope: !10592)
!10604 = !DILocation(line: 657, column: 1, scope: !10592)
!10605 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !10606, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!345, !1387}
!10608 = !{!10609}
!10609 = !DILocalVariable(name: "dev", arg: 1, scope: !10605, file: !8970, line: 47, type: !1387)
!10610 = !DILocation(line: 0, scope: !10605)
!10611 = !DILocation(line: 55, column: 2, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10605, file: !8970, line: 55, column: 2)
!10613 = !{i64 2155137270}
!10614 = !DILocation(line: 56, column: 9, scope: !10605)
!10615 = !DILocation(line: 56, column: 2, scope: !10605)
!10616 = distinct !DISubprogram(name: "clock_control_on", scope: !836, file: !836, line: 123, type: !1446, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10617)
!10617 = !{!10618, !10619, !10620}
!10618 = !DILocalVariable(name: "dev", arg: 1, scope: !10616, file: !836, line: 123, type: !1387)
!10619 = !DILocalVariable(name: "sys", arg: 2, scope: !10616, file: !836, line: 124, type: !928)
!10620 = !DILocalVariable(name: "api", scope: !10616, file: !836, line: 126, type: !1439)
!10621 = !DILocation(line: 0, scope: !10616)
!10622 = !DILocation(line: 127, column: 49, scope: !10616)
!10623 = !DILocation(line: 129, column: 14, scope: !10616)
!10624 = !DILocation(line: 129, column: 9, scope: !10616)
!10625 = !DILocation(line: 129, column: 2, scope: !10616)
!10626 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1522, file: !1522, line: 342, type: !10627, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10629)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{!119, !1519, !185}
!10629 = !{!10630, !10631, !10632, !10633}
!10630 = !DILocalVariable(name: "config", arg: 1, scope: !10626, file: !1522, line: 342, type: !1519)
!10631 = !DILocalVariable(name: "id", arg: 2, scope: !10626, file: !1522, line: 343, type: !185)
!10632 = !DILocalVariable(name: "ret", scope: !10626, file: !1522, line: 345, type: !119)
!10633 = !DILocalVariable(name: "state", scope: !10626, file: !1522, line: 346, type: !1525)
!10634 = !DILocation(line: 0, scope: !10626)
!10635 = !DILocation(line: 346, column: 2, scope: !10626)
!10636 = !DILocation(line: 348, column: 8, scope: !10626)
!10637 = !DILocation(line: 349, column: 10, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10626, file: !1522, line: 349, column: 6)
!10639 = !DILocation(line: 349, column: 6, scope: !10626)
!10640 = !DILocation(line: 353, column: 44, scope: !10626)
!10641 = !DILocation(line: 353, column: 9, scope: !10626)
!10642 = !DILocation(line: 353, column: 2, scope: !10626)
!10643 = !DILocation(line: 354, column: 1, scope: !10626)
!10644 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10160, file: !10160, line: 497, type: !10338, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10645)
!10645 = !{!10646, !10647, !10648}
!10646 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10644, file: !10160, line: 497, type: !1428)
!10647 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10644, file: !10160, line: 497, type: !118)
!10648 = !DILocalVariable(name: "val", scope: !10649, file: !10160, line: 499, type: !118)
!10649 = distinct !DILexicalBlock(scope: !10644, file: !10160, line: 499, column: 3)
!10650 = !DILocation(line: 0, scope: !10644)
!10651 = !DILocation(line: 499, column: 3, scope: !10649)
!10652 = !DILocalVariable(name: "addr", arg: 1, scope: !10653, file: !6314, line: 476, type: !1478)
!10653 = distinct !DISubprogram(name: "__LDREXW", scope: !6314, file: !6314, line: 476, type: !10654, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10656)
!10654 = !DISubroutineType(types: !10655)
!10655 = !{!118, !1478}
!10656 = !{!10652, !10657}
!10657 = !DILocalVariable(name: "result", scope: !10653, file: !6314, line: 478, type: !118)
!10658 = !DILocation(line: 0, scope: !10653, inlinedAt: !10659)
!10659 = distinct !DILocation(line: 499, column: 3, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10649, file: !10160, line: 499, column: 3)
!10661 = !DILocation(line: 480, column: 4, scope: !10653, inlinedAt: !10659)
!10662 = !{i64 3577159}
!10663 = !DILocation(line: 499, column: 3, scope: !10660)
!10664 = !DILocation(line: 0, scope: !10649)
!10665 = !DILocalVariable(name: "value", arg: 1, scope: !10666, file: !6314, line: 527, type: !118)
!10666 = distinct !DISubprogram(name: "__STREXW", scope: !6314, file: !6314, line: 527, type: !10667, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10669)
!10667 = !DISubroutineType(types: !10668)
!10668 = !{!118, !118, !1478}
!10669 = !{!10665, !10670, !10671}
!10670 = !DILocalVariable(name: "addr", arg: 2, scope: !10666, file: !6314, line: 527, type: !1478)
!10671 = !DILocalVariable(name: "result", scope: !10666, file: !6314, line: 529, type: !118)
!10672 = !DILocation(line: 0, scope: !10666, inlinedAt: !10673)
!10673 = distinct !DILocation(line: 499, column: 3, scope: !10649)
!10674 = !DILocation(line: 531, column: 4, scope: !10666, inlinedAt: !10673)
!10675 = !{i64 3578595}
!10676 = distinct !{!10676, !10651, !10651}
!10677 = !DILocation(line: 500, column: 1, scope: !10644)
!10678 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10160, file: !10160, line: 850, type: !10347, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10679)
!10679 = !{!10680, !10681, !10682, !10683}
!10680 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10678, file: !10160, line: 850, type: !1428)
!10681 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10678, file: !10160, line: 850, type: !118)
!10682 = !DILocalVariable(name: "Parity", arg: 3, scope: !10678, file: !10160, line: 850, type: !118)
!10683 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10678, file: !10160, line: 851, type: !118)
!10684 = !DILocation(line: 0, scope: !10678)
!10685 = !DILocation(line: 853, column: 3, scope: !10678)
!10686 = !DILocation(line: 854, column: 3, scope: !10678)
!10687 = !DILocation(line: 855, column: 1, scope: !10678)
!10688 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10160, file: !10160, line: 1337, type: !10223, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10689)
!10689 = !{!10690}
!10690 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10688, file: !10160, line: 1337, type: !1428)
!10691 = !DILocation(line: 0, scope: !10688)
!10692 = !DILocation(line: 1339, column: 3, scope: !10688)
!10693 = !DILocation(line: 1340, column: 1, scope: !10688)
!10694 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1522, file: !1522, line: 316, type: !10695, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10697)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{!119, !1519, !1525}
!10697 = !{!10698, !10699, !10700}
!10698 = !DILocalVariable(name: "config", arg: 1, scope: !10694, file: !1522, line: 317, type: !1519)
!10699 = !DILocalVariable(name: "state", arg: 2, scope: !10694, file: !1522, line: 318, type: !1525)
!10700 = !DILocalVariable(name: "reg", scope: !10694, file: !1522, line: 320, type: !22)
!10701 = !DILocation(line: 0, scope: !10694)
!10702 = !DILocation(line: 329, column: 39, scope: !10694)
!10703 = !DILocation(line: 329, column: 52, scope: !10694)
!10704 = !DILocation(line: 329, column: 9, scope: !10694)
!10705 = !DILocation(line: 329, column: 2, scope: !10694)
!10706 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !10606, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10707)
!10707 = !{!10708}
!10708 = !DILocalVariable(name: "dev", arg: 1, scope: !10706, file: !334, line: 730, type: !1387)
!10709 = !DILocation(line: 0, scope: !10706)
!10710 = !DILocation(line: 732, column: 9, scope: !10706)
!10711 = !DILocation(line: 732, column: 2, scope: !10706)
!10712 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1645, file: !1645, line: 270, type: !1651, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10713)
!10713 = !{!10714}
!10714 = !DILocalVariable(name: "dev", arg: 1, scope: !10712, file: !1645, line: 270, type: !1653)
!10715 = !DILocation(line: 0, scope: !10712)
!10716 = !DILocation(line: 274, column: 2, scope: !10712)
!10717 = !DILocation(line: 275, column: 12, scope: !10712)
!10718 = !DILocation(line: 276, column: 15, scope: !10712)
!10719 = !DILocation(line: 277, column: 16, scope: !10712)
!10720 = !DILocation(line: 278, column: 15, scope: !10712)
!10721 = !DILocation(line: 279, column: 16, scope: !10712)
!10722 = !DILocation(line: 282, column: 2, scope: !10712)
!10723 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6354, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10724)
!10724 = !{!10725, !10726}
!10725 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10723, file: !533, line: 1814, type: !790)
!10726 = !DILocalVariable(name: "priority", arg: 2, scope: !10723, file: !533, line: 1814, type: !118)
!10727 = !DILocation(line: 0, scope: !10723)
!10728 = !DILocation(line: 1822, column: 46, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !533, line: 1821, column: 3)
!10730 = distinct !DILexicalBlock(scope: !10723, file: !533, line: 1816, column: 7)
!10731 = !DILocation(line: 1824, column: 1, scope: !10723)
!10732 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1645, file: !1645, line: 118, type: !6251, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10733)
!10733 = !{!10734, !10735}
!10734 = !DILocalVariable(name: "arg", arg: 1, scope: !10732, file: !1645, line: 118, type: !113)
!10735 = !DILocalVariable(name: "dticks", scope: !10732, file: !1645, line: 121, type: !118)
!10736 = !DILocation(line: 0, scope: !10732)
!10737 = !DILocation(line: 124, column: 2, scope: !10732)
!10738 = !DILocation(line: 129, column: 17, scope: !10732)
!10739 = !DILocation(line: 129, column: 14, scope: !10732)
!10740 = !DILocation(line: 130, column: 15, scope: !10732)
!10741 = !DILocation(line: 145, column: 27, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !1645, line: 132, column: 16)
!10743 = distinct !DILexicalBlock(scope: !10732, file: !1645, line: 132, column: 6)
!10744 = !DILocation(line: 145, column: 25, scope: !10742)
!10745 = !DILocation(line: 145, column: 45, scope: !10742)
!10746 = !DILocation(line: 146, column: 30, scope: !10742)
!10747 = !DILocation(line: 146, column: 20, scope: !10742)
!10748 = !DILocation(line: 147, column: 3, scope: !10742)
!10749 = !DILocation(line: 151, column: 2, scope: !10732)
!10750 = !DILocation(line: 152, column: 1, scope: !10732)
!10751 = distinct !DISubprogram(name: "elapsed", scope: !1645, file: !1645, line: 85, type: !3198, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10752)
!10752 = !{!10753, !10754, !10755}
!10753 = !DILocalVariable(name: "val1", scope: !10751, file: !1645, line: 87, type: !118)
!10754 = !DILocalVariable(name: "ctrl", scope: !10751, file: !1645, line: 88, type: !118)
!10755 = !DILocalVariable(name: "val2", scope: !10751, file: !1645, line: 89, type: !118)
!10756 = !DILocation(line: 87, column: 27, scope: !10751)
!10757 = !DILocation(line: 0, scope: !10751)
!10758 = !DILocation(line: 88, column: 27, scope: !10751)
!10759 = !DILocation(line: 89, column: 27, scope: !10751)
!10760 = !DILocation(line: 105, column: 12, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10751, file: !1645, line: 105, column: 6)
!10762 = !DILocation(line: 106, column: 6, scope: !10761)
!10763 = !DILocation(line: 107, column: 16, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10761, file: !1645, line: 106, column: 24)
!10765 = !DILocation(line: 111, column: 18, scope: !10764)
!10766 = !DILocation(line: 112, column: 2, scope: !10764)
!10767 = !DILocation(line: 114, column: 20, scope: !10751)
!10768 = !DILocation(line: 114, column: 30, scope: !10751)
!10769 = !DILocation(line: 114, column: 28, scope: !10751)
!10770 = !DILocation(line: 114, column: 2, scope: !10751)
!10771 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1645, file: !1645, line: 154, type: !10772, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10774)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{null, !764, !345}
!10774 = !{!10775, !10776, !10777, !10778, !10779, !10780, !10781, !10786, !10787}
!10775 = !DILocalVariable(name: "ticks", arg: 1, scope: !10771, file: !1645, line: 154, type: !764)
!10776 = !DILocalVariable(name: "idle", arg: 2, scope: !10771, file: !1645, line: 154, type: !345)
!10777 = !DILocalVariable(name: "delay", scope: !10771, file: !1645, line: 169, type: !118)
!10778 = !DILocalVariable(name: "val1", scope: !10771, file: !1645, line: 170, type: !118)
!10779 = !DILocalVariable(name: "val2", scope: !10771, file: !1645, line: 170, type: !118)
!10780 = !DILocalVariable(name: "last_load_", scope: !10771, file: !1645, line: 171, type: !118)
!10781 = !DILocalVariable(name: "key", scope: !10771, file: !1645, line: 176, type: !10782)
!10782 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !10783)
!10783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !10784)
!10784 = !{!10785}
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10783, file: !259, line: 33, baseType: !119, size: 32)
!10786 = !DILocalVariable(name: "pending", scope: !10771, file: !1645, line: 178, type: !118)
!10787 = !DILocalVariable(name: "unannounced", scope: !10771, file: !1645, line: 185, type: !118)
!10788 = !DILocation(line: 0, scope: !10771)
!10789 = !DILocation(line: 162, column: 49, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10771, file: !1645, line: 162, column: 6)
!10791 = !DILocation(line: 163, column: 17, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10790, file: !1645, line: 162, column: 78)
!10793 = !DILocation(line: 164, column: 13, scope: !10792)
!10794 = !DILocation(line: 165, column: 3, scope: !10792)
!10795 = !DILocation(line: 171, column: 24, scope: !10771)
!10796 = !DILocation(line: 173, column: 10, scope: !10771)
!10797 = !DILocation(line: 174, column: 10, scope: !10771)
!10798 = !DILocalVariable(name: "l", arg: 1, scope: !10799, file: !259, line: 136, type: !10802)
!10799 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !10800, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10803)
!10800 = !DISubroutineType(types: !10801)
!10801 = !{!10782, !10802}
!10802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!10803 = !{!10798, !10804}
!10804 = !DILocalVariable(name: "k", scope: !10799, file: !259, line: 139, type: !10782)
!10805 = !DILocation(line: 0, scope: !10799, inlinedAt: !10806)
!10806 = distinct !DILocation(line: 176, column: 25, scope: !10771)
!10807 = !DILocation(line: 55, column: 2, scope: !10808, inlinedAt: !10812)
!10808 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10809)
!10809 = !{!10810, !10811}
!10810 = !DILocalVariable(name: "key", scope: !10808, file: !5993, line: 44, type: !32)
!10811 = !DILocalVariable(name: "tmp", scope: !10808, file: !5993, line: 53, type: !32)
!10812 = distinct !DILocation(line: 145, column: 10, scope: !10799, inlinedAt: !10806)
!10813 = !{i64 2200357}
!10814 = !DILocation(line: 0, scope: !10808, inlinedAt: !10812)
!10815 = !DILocation(line: 148, column: 2, scope: !10816, inlinedAt: !10806)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !259, line: 148, column: 2)
!10817 = distinct !DILexicalBlock(scope: !10799, file: !259, line: 148, column: 2)
!10818 = !DILocation(line: 148, column: 2, scope: !10817, inlinedAt: !10806)
!10819 = !DILocation(line: 148, column: 2, scope: !10820, inlinedAt: !10806)
!10820 = distinct !DILexicalBlock(scope: !10816, file: !259, line: 148, column: 2)
!10821 = !DILocation(line: 160, column: 2, scope: !10799, inlinedAt: !10806)
!10822 = !DILocation(line: 178, column: 21, scope: !10771)
!10823 = !DILocation(line: 180, column: 18, scope: !10771)
!10824 = !DILocation(line: 182, column: 14, scope: !10771)
!10825 = !DILocation(line: 183, column: 15, scope: !10771)
!10826 = !DILocation(line: 185, column: 39, scope: !10771)
!10827 = !DILocation(line: 185, column: 37, scope: !10771)
!10828 = !DILocation(line: 187, column: 27, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10771, file: !1645, line: 187, column: 6)
!10830 = !DILocation(line: 187, column: 6, scope: !10771)
!10831 = !DILocation(line: 202, column: 27, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10829, file: !1645, line: 195, column: 9)
!10833 = !DILocation(line: 202, column: 48, scope: !10832)
!10834 = !DILocation(line: 203, column: 9, scope: !10832)
!10835 = !DILocation(line: 204, column: 11, scope: !10832)
!10836 = !DILocation(line: 205, column: 13, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10832, file: !1645, line: 205, column: 7)
!10838 = !DILocation(line: 205, column: 7, scope: !10832)
!10839 = !DILocation(line: 0, scope: !10829)
!10840 = !DILocation(line: 212, column: 18, scope: !10771)
!10841 = !DILocation(line: 214, column: 28, scope: !10771)
!10842 = !DILocation(line: 214, column: 16, scope: !10771)
!10843 = !DILocation(line: 215, column: 15, scope: !10771)
!10844 = !DILocation(line: 227, column: 11, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10771, file: !1645, line: 227, column: 6)
!10846 = !DILocation(line: 227, column: 6, scope: !10771)
!10847 = !DILocation(line: 228, column: 15, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10845, file: !1645, line: 227, column: 19)
!10849 = !DILocation(line: 228, column: 38, scope: !10848)
!10850 = !DILocation(line: 228, column: 24, scope: !10848)
!10851 = !DILocation(line: 229, column: 2, scope: !10848)
!10852 = !DILocation(line: 230, column: 24, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10845, file: !1645, line: 229, column: 9)
!10854 = !DILocation(line: 230, column: 15, scope: !10853)
!10855 = !DILocation(line: 0, scope: !10845)
!10856 = !DILocalVariable(name: "key", arg: 2, scope: !10857, file: !259, line: 190, type: !10782)
!10857 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !10858, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{null, !10802, !10782}
!10860 = !{!10861, !10856}
!10861 = !DILocalVariable(name: "l", arg: 1, scope: !10857, file: !259, line: 189, type: !10802)
!10862 = !DILocation(line: 0, scope: !10857, inlinedAt: !10863)
!10863 = distinct !DILocation(line: 232, column: 2, scope: !10771)
!10864 = !DILocation(line: 194, column: 2, scope: !10865, inlinedAt: !10863)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !259, line: 194, column: 2)
!10866 = distinct !DILexicalBlock(scope: !10857, file: !259, line: 194, column: 2)
!10867 = !DILocation(line: 194, column: 2, scope: !10866, inlinedAt: !10863)
!10868 = !DILocation(line: 194, column: 2, scope: !10869, inlinedAt: !10863)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !259, line: 194, column: 2)
!10870 = !DILocalVariable(name: "key", arg: 1, scope: !10871, file: !5993, line: 84, type: !32)
!10871 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10872)
!10872 = !{!10870}
!10873 = !DILocation(line: 0, scope: !10871, inlinedAt: !10874)
!10874 = distinct !DILocation(line: 215, column: 2, scope: !10857, inlinedAt: !10863)
!10875 = !DILocation(line: 95, column: 2, scope: !10871, inlinedAt: !10874)
!10876 = !{i64 2201174}
!10877 = !DILocation(line: 234, column: 1, scope: !10771)
!10878 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1645, file: !1645, line: 236, type: !3198, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10879)
!10879 = !{!10880, !10881}
!10880 = !DILocalVariable(name: "key", scope: !10878, file: !1645, line: 242, type: !10782)
!10881 = !DILocalVariable(name: "cyc", scope: !10878, file: !1645, line: 243, type: !118)
!10882 = !DILocation(line: 0, scope: !10799, inlinedAt: !10883)
!10883 = distinct !DILocation(line: 242, column: 25, scope: !10878)
!10884 = !DILocation(line: 55, column: 2, scope: !10808, inlinedAt: !10885)
!10885 = distinct !DILocation(line: 145, column: 10, scope: !10799, inlinedAt: !10883)
!10886 = !DILocation(line: 0, scope: !10808, inlinedAt: !10885)
!10887 = !DILocation(line: 148, column: 2, scope: !10816, inlinedAt: !10883)
!10888 = !DILocation(line: 148, column: 2, scope: !10817, inlinedAt: !10883)
!10889 = !DILocation(line: 148, column: 2, scope: !10820, inlinedAt: !10883)
!10890 = !DILocation(line: 160, column: 2, scope: !10799, inlinedAt: !10883)
!10891 = !DILocation(line: 0, scope: !10878)
!10892 = !DILocation(line: 243, column: 17, scope: !10878)
!10893 = !DILocation(line: 243, column: 29, scope: !10878)
!10894 = !DILocation(line: 243, column: 43, scope: !10878)
!10895 = !DILocation(line: 0, scope: !10857, inlinedAt: !10896)
!10896 = distinct !DILocation(line: 245, column: 2, scope: !10878)
!10897 = !DILocation(line: 194, column: 2, scope: !10865, inlinedAt: !10896)
!10898 = !DILocation(line: 194, column: 2, scope: !10866, inlinedAt: !10896)
!10899 = !DILocation(line: 194, column: 2, scope: !10869, inlinedAt: !10896)
!10900 = !DILocation(line: 243, column: 27, scope: !10878)
!10901 = !DILocation(line: 243, column: 41, scope: !10878)
!10902 = !DILocation(line: 0, scope: !10871, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 215, column: 2, scope: !10857, inlinedAt: !10896)
!10904 = !DILocation(line: 95, column: 2, scope: !10871, inlinedAt: !10903)
!10905 = !DILocation(line: 246, column: 13, scope: !10878)
!10906 = !DILocation(line: 246, column: 2, scope: !10878)
!10907 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1645, file: !1645, line: 249, type: !3198, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10908)
!10908 = !{!10909, !10910}
!10909 = !DILocalVariable(name: "key", scope: !10907, file: !1645, line: 251, type: !10782)
!10910 = !DILocalVariable(name: "ret", scope: !10907, file: !1645, line: 252, type: !118)
!10911 = !DILocation(line: 0, scope: !10799, inlinedAt: !10912)
!10912 = distinct !DILocation(line: 251, column: 25, scope: !10907)
!10913 = !DILocation(line: 55, column: 2, scope: !10808, inlinedAt: !10914)
!10914 = distinct !DILocation(line: 145, column: 10, scope: !10799, inlinedAt: !10912)
!10915 = !DILocation(line: 0, scope: !10808, inlinedAt: !10914)
!10916 = !DILocation(line: 148, column: 2, scope: !10816, inlinedAt: !10912)
!10917 = !DILocation(line: 148, column: 2, scope: !10817, inlinedAt: !10912)
!10918 = !DILocation(line: 148, column: 2, scope: !10820, inlinedAt: !10912)
!10919 = !DILocation(line: 160, column: 2, scope: !10799, inlinedAt: !10912)
!10920 = !DILocation(line: 0, scope: !10907)
!10921 = !DILocation(line: 252, column: 17, scope: !10907)
!10922 = !DILocation(line: 252, column: 29, scope: !10907)
!10923 = !DILocation(line: 0, scope: !10857, inlinedAt: !10924)
!10924 = distinct !DILocation(line: 254, column: 2, scope: !10907)
!10925 = !DILocation(line: 194, column: 2, scope: !10865, inlinedAt: !10924)
!10926 = !DILocation(line: 194, column: 2, scope: !10866, inlinedAt: !10924)
!10927 = !DILocation(line: 194, column: 2, scope: !10869, inlinedAt: !10924)
!10928 = !DILocation(line: 252, column: 27, scope: !10907)
!10929 = !DILocation(line: 0, scope: !10871, inlinedAt: !10930)
!10930 = distinct !DILocation(line: 215, column: 2, scope: !10857, inlinedAt: !10924)
!10931 = !DILocation(line: 95, column: 2, scope: !10871, inlinedAt: !10930)
!10932 = !DILocation(line: 255, column: 2, scope: !10907)
!10933 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1645, file: !1645, line: 258, type: !2960, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !2032)
!10934 = !DILocation(line: 260, column: 6, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10933, file: !1645, line: 260, column: 6)
!10936 = !DILocation(line: 260, column: 16, scope: !10935)
!10937 = !DILocation(line: 260, column: 6, scope: !10933)
!10938 = !DILocation(line: 261, column: 17, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10935, file: !1645, line: 260, column: 34)
!10940 = !DILocation(line: 262, column: 2, scope: !10939)
!10941 = !DILocation(line: 263, column: 1, scope: !10933)
!10942 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1645, file: !1645, line: 265, type: !2960, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !2032)
!10943 = !DILocation(line: 267, column: 16, scope: !10942)
!10944 = !DILocation(line: 268, column: 1, scope: !10942)
!10945 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10946, file: !10946, line: 9, type: !10947, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !10970)
!10946 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10947 = !DISubroutineType(types: !10948)
!10948 = !{!119, !10949, !185, !10969}
!10949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10950, size: 32)
!10950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10951)
!10951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1522, line: 60, size: 64, elements: !10952)
!10952 = !{!10953, !10968}
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10951, file: !1522, line: 69, baseType: !10954, size: 32)
!10954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10955, size: 32)
!10955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10956)
!10956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1522, line: 50, size: 64, elements: !10957)
!10957 = !{!10958, !10966, !10967}
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10956, file: !1522, line: 52, baseType: !10959, size: 32)
!10959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10960, size: 32)
!10960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10961)
!10961 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1533, line: 37, baseType: !10962)
!10962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1533, line: 32, size: 64, elements: !10963)
!10963 = !{!10964, !10965}
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10962, file: !1533, line: 34, baseType: !118, size: 32)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10962, file: !1533, line: 36, baseType: !118, size: 32, offset: 32)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10956, file: !1522, line: 54, baseType: !185, size: 8, offset: 32)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10956, file: !1522, line: 56, baseType: !185, size: 8, offset: 40)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10951, file: !1522, line: 71, baseType: !185, size: 8, offset: 32)
!10969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10954, size: 32)
!10970 = !{!10971, !10972, !10973}
!10971 = !DILocalVariable(name: "config", arg: 1, scope: !10945, file: !10946, line: 9, type: !10949)
!10972 = !DILocalVariable(name: "id", arg: 2, scope: !10945, file: !10946, line: 9, type: !185)
!10973 = !DILocalVariable(name: "state", arg: 3, scope: !10945, file: !10946, line: 10, type: !10969)
!10974 = !DILocation(line: 0, scope: !10945)
!10975 = !DILocation(line: 12, column: 20, scope: !10945)
!10976 = !DILocation(line: 13, column: 27, scope: !10945)
!10977 = !DILocation(line: 13, column: 42, scope: !10945)
!10978 = !DILocation(line: 13, column: 19, scope: !10945)
!10979 = !DILocation(line: 13, column: 16, scope: !10945)
!10980 = !DILocation(line: 13, column: 2, scope: !10945)
!10981 = distinct !{!10981, !10980, !10982}
!10982 = !DILocation(line: 19, column: 2, scope: !10945)
!10983 = !DILocation(line: 14, column: 23, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !10946, line: 14, column: 7)
!10985 = distinct !DILexicalBlock(scope: !10945, file: !10946, line: 13, column: 54)
!10986 = !DILocation(line: 14, column: 10, scope: !10984)
!10987 = !DILocation(line: 18, column: 11, scope: !10985)
!10988 = !DILocation(line: 14, column: 7, scope: !10985)
!10989 = !DILocation(line: 22, column: 1, scope: !10945)
!10990 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1764, file: !1764, line: 193, type: !10991, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !11000)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{!119, !10993, !185, !22}
!10993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10994, size: 32)
!10994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10995)
!10995 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1533, line: 37, baseType: !10996)
!10996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1533, line: 32, size: 64, elements: !10997)
!10997 = !{!10998, !10999}
!10998 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10996, file: !1533, line: 34, baseType: !118, size: 32)
!10999 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10996, file: !1533, line: 36, baseType: !118, size: 32, offset: 32)
!11000 = !{!11001, !11002, !11003, !11004, !11005, !11006, !11007, !11008, !11010}
!11001 = !DILocalVariable(name: "pins", arg: 1, scope: !10990, file: !1764, line: 193, type: !10993)
!11002 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10990, file: !1764, line: 193, type: !185)
!11003 = !DILocalVariable(name: "reg", arg: 3, scope: !10990, file: !1764, line: 194, type: !22)
!11004 = !DILocalVariable(name: "pin", scope: !10990, file: !1764, line: 196, type: !118)
!11005 = !DILocalVariable(name: "mux", scope: !10990, file: !1764, line: 196, type: !118)
!11006 = !DILocalVariable(name: "pin_cgf", scope: !10990, file: !1764, line: 197, type: !118)
!11007 = !DILocalVariable(name: "ret", scope: !10990, file: !1764, line: 198, type: !119)
!11008 = !DILocalVariable(name: "i", scope: !11009, file: !1764, line: 209, type: !185)
!11009 = distinct !DILexicalBlock(scope: !10990, file: !1764, line: 209, column: 2)
!11010 = !DILocalVariable(name: "gpio_out", scope: !11011, file: !1764, line: 239, type: !118)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !1764, line: 238, column: 55)
!11012 = distinct !DILexicalBlock(scope: !11013, file: !1764, line: 238, column: 14)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !1764, line: 236, column: 14)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !1764, line: 234, column: 7)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !1764, line: 209, column: 41)
!11016 = distinct !DILexicalBlock(scope: !11009, file: !1764, line: 209, column: 2)
!11017 = !DILocation(line: 0, scope: !10990)
!11018 = !DILocation(line: 0, scope: !11009)
!11019 = !DILocation(line: 209, column: 25, scope: !11016)
!11020 = !DILocation(line: 209, column: 2, scope: !11009)
!11021 = distinct !{!11021, !11020, !11022}
!11022 = !DILocation(line: 259, column: 2, scope: !11009)
!11023 = !DILocation(line: 210, column: 17, scope: !11015)
!11024 = !DILocation(line: 234, column: 7, scope: !11014)
!11025 = !DILocation(line: 234, column: 33, scope: !11014)
!11026 = !DILocation(line: 234, column: 7, scope: !11015)
!11027 = !DILocation(line: 235, column: 22, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11014, file: !1764, line: 234, column: 49)
!11029 = !DILocation(line: 235, column: 29, scope: !11028)
!11030 = !DILocation(line: 236, column: 3, scope: !11028)
!11031 = !DILocation(line: 236, column: 14, scope: !11014)
!11032 = !DILocation(line: 239, column: 32, scope: !11011)
!11033 = !DILocation(line: 0, scope: !11011)
!11034 = !DILocation(line: 241, column: 8, scope: !11011)
!11035 = !DILocation(line: 246, column: 3, scope: !11011)
!11036 = !DILocation(line: 252, column: 9, scope: !11015)
!11037 = !DILocation(line: 255, column: 9, scope: !11015)
!11038 = !DILocation(line: 256, column: 11, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11015, file: !1764, line: 256, column: 7)
!11040 = !DILocation(line: 209, column: 37, scope: !11016)
!11041 = !DILocation(line: 256, column: 7, scope: !11015)
!11042 = !DILocation(line: 262, column: 1, scope: !10990)
!11043 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1764, file: !1764, line: 176, type: !11044, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !11046)
!11044 = !DISubroutineType(types: !11045)
!11045 = !{!119, !118, !118, !118}
!11046 = !{!11047, !11048, !11049, !11050}
!11047 = !DILocalVariable(name: "pin", arg: 1, scope: !11043, file: !1764, line: 176, type: !118)
!11048 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11043, file: !1764, line: 176, type: !118)
!11049 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11043, file: !1764, line: 176, type: !118)
!11050 = !DILocalVariable(name: "port_device", scope: !11043, file: !1764, line: 178, type: !1694)
!11051 = !DILocation(line: 0, scope: !11043)
!11052 = !DILocation(line: 180, column: 22, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11043, file: !1764, line: 180, column: 6)
!11054 = !DILocation(line: 180, column: 6, scope: !11043)
!11055 = !DILocation(line: 180, column: 6, scope: !11053)
!11056 = !DILocation(line: 184, column: 16, scope: !11043)
!11057 = !DILocation(line: 186, column: 19, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11043, file: !1764, line: 186, column: 6)
!11059 = !DILocation(line: 186, column: 28, scope: !11058)
!11060 = !DILocation(line: 186, column: 33, scope: !11058)
!11061 = !DILocation(line: 186, column: 6, scope: !11043)
!11062 = !DILocation(line: 190, column: 43, scope: !11043)
!11063 = !DILocation(line: 190, column: 9, scope: !11043)
!11064 = !DILocation(line: 190, column: 2, scope: !11043)
!11065 = !DILocation(line: 191, column: 1, scope: !11043)
!11066 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !11067, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !11069)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{!345, !1694}
!11069 = !{!11070}
!11070 = !DILocalVariable(name: "dev", arg: 1, scope: !11066, file: !8970, line: 47, type: !1694)
!11071 = !DILocation(line: 0, scope: !11066)
!11072 = !DILocation(line: 55, column: 2, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11066, file: !8970, line: 55, column: 2)
!11074 = !{i64 2149438424}
!11075 = !DILocation(line: 56, column: 9, scope: !11066)
!11076 = !DILocation(line: 56, column: 2, scope: !11066)
!11077 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !11067, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !11078)
!11078 = !{!11079}
!11079 = !DILocalVariable(name: "dev", arg: 1, scope: !11077, file: !334, line: 730, type: !1694)
!11080 = !DILocation(line: 0, scope: !11077)
!11081 = !DILocation(line: 732, column: 9, scope: !11077)
!11082 = !DILocation(line: 732, column: 2, scope: !11077)
!11083 = distinct !DISubprogram(name: "SystemInit", scope: !1812, file: !1812, line: 167, type: !2960, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1772, retainedNodes: !2032)
!11084 = !DILocation(line: 182, column: 1, scope: !11083)
!11085 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1812, file: !1812, line: 220, type: !2960, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1772, retainedNodes: !11086)
!11086 = !{!11087, !11088, !11089, !11090, !11091}
!11087 = !DILocalVariable(name: "tmp", scope: !11085, file: !1812, line: 222, type: !118)
!11088 = !DILocalVariable(name: "pllvco", scope: !11085, file: !1812, line: 222, type: !118)
!11089 = !DILocalVariable(name: "pllp", scope: !11085, file: !1812, line: 222, type: !118)
!11090 = !DILocalVariable(name: "pllsource", scope: !11085, file: !1812, line: 222, type: !118)
!11091 = !DILocalVariable(name: "pllm", scope: !11085, file: !1812, line: 222, type: !118)
!11092 = !DILocation(line: 0, scope: !11085)
!11093 = !DILocation(line: 225, column: 14, scope: !11085)
!11094 = !DILocation(line: 225, column: 19, scope: !11085)
!11095 = !DILocation(line: 227, column: 3, scope: !11085)
!11096 = !DILocation(line: 234, column: 7, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11085, file: !1812, line: 228, column: 3)
!11098 = !DILocation(line: 240, column: 25, scope: !11097)
!11099 = !DILocation(line: 241, column: 19, scope: !11097)
!11100 = !DILocation(line: 241, column: 27, scope: !11097)
!11101 = !DILocation(line: 243, column: 21, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11097, file: !1812, line: 243, column: 11)
!11103 = !DILocation(line: 0, scope: !11102)
!11104 = !DILocation(line: 254, column: 22, scope: !11097)
!11105 = !DILocation(line: 254, column: 62, scope: !11097)
!11106 = !DILocation(line: 255, column: 31, scope: !11097)
!11107 = !DILocation(line: 256, column: 7, scope: !11097)
!11108 = !DILocation(line: 0, scope: !11097)
!11109 = !DILocation(line: 263, column: 30, scope: !11085)
!11110 = !DILocation(line: 263, column: 52, scope: !11085)
!11111 = !DILocation(line: 263, column: 9, scope: !11085)
!11112 = !DILocation(line: 265, column: 19, scope: !11085)
!11113 = !DILocation(line: 266, column: 1, scope: !11085)
!11114 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11115, file: !11115, line: 200, type: !11116, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11115 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11116 = !DISubroutineType(types: !11117)
!11117 = !{!11118}
!11118 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2777, line: 44, baseType: !2776)
!11119 = !DILocation(line: 202, column: 3, scope: !11114)
!11120 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11115, file: !11115, line: 219, type: !11121, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11145)
!11121 = !DISubroutineType(types: !11122)
!11122 = !{!11118, !11123}
!11123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11124, size: 32)
!11124 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11125, line: 70, baseType: !11126)
!11125 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11125, line: 49, size: 384, elements: !11127)
!11127 = !{!11128, !11129, !11130, !11131, !11132, !11133, !11134}
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11126, file: !11125, line: 51, baseType: !118, size: 32)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11126, file: !11125, line: 54, baseType: !118, size: 32, offset: 32)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11126, file: !11125, line: 57, baseType: !118, size: 32, offset: 64)
!11131 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11126, file: !11125, line: 60, baseType: !118, size: 32, offset: 96)
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11126, file: !11125, line: 63, baseType: !118, size: 32, offset: 128)
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11126, file: !11125, line: 66, baseType: !118, size: 32, offset: 160)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11126, file: !11125, line: 69, baseType: !11135, size: 192, offset: 192)
!11135 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11136, line: 73, baseType: !11137)
!11136 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11136, line: 45, size: 192, elements: !11138)
!11138 = !{!11139, !11140, !11141, !11142, !11143, !11144}
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11137, file: !11136, line: 47, baseType: !118, size: 32)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11137, file: !11136, line: 50, baseType: !118, size: 32, offset: 32)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11137, file: !11136, line: 53, baseType: !118, size: 32, offset: 64)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11137, file: !11136, line: 56, baseType: !118, size: 32, offset: 96)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11137, file: !11136, line: 60, baseType: !118, size: 32, offset: 128)
!11144 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11137, file: !11136, line: 63, baseType: !118, size: 32, offset: 160)
!11145 = !{!11146, !11147, !11148, !11149, !11153}
!11146 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11120, file: !11115, line: 219, type: !11123)
!11147 = !DILocalVariable(name: "tickstart", scope: !11120, file: !11115, line: 221, type: !118)
!11148 = !DILocalVariable(name: "pll_config", scope: !11120, file: !11115, line: 221, type: !118)
!11149 = !DILocalVariable(name: "pwrclkchanged", scope: !11150, file: !11115, line: 391, type: !11152)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !11115, line: 390, column: 3)
!11151 = distinct !DILexicalBlock(scope: !11120, file: !11115, line: 389, column: 6)
!11152 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !831, line: 188, baseType: !2783)
!11153 = !DILocalVariable(name: "tmpreg", scope: !11154, file: !11115, line: 400, type: !314)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !11115, line: 400, column: 7)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !11115, line: 399, column: 5)
!11156 = distinct !DILexicalBlock(scope: !11150, file: !11115, line: 398, column: 8)
!11157 = !DILocation(line: 0, scope: !11120)
!11158 = !DILocation(line: 224, column: 24, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11120, file: !11115, line: 224, column: 6)
!11160 = !DILocation(line: 224, column: 6, scope: !11120)
!11161 = !DILocation(line: 232, column: 27, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11120, file: !11115, line: 232, column: 6)
!11163 = !DILocation(line: 232, column: 43, scope: !11162)
!11164 = !DILocation(line: 232, column: 69, scope: !11162)
!11165 = !DILocation(line: 232, column: 6, scope: !11120)
!11166 = !DILocation(line: 237, column: 9, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !11115, line: 237, column: 8)
!11168 = distinct !DILexicalBlock(scope: !11162, file: !11115, line: 233, column: 3)
!11169 = !DILocation(line: 237, column: 39, scope: !11167)
!11170 = !DILocation(line: 237, column: 60, scope: !11167)
!11171 = !DILocation(line: 238, column: 9, scope: !11167)
!11172 = !DILocation(line: 238, column: 39, scope: !11167)
!11173 = !DILocation(line: 238, column: 60, scope: !11167)
!11174 = !DILocation(line: 238, column: 70, scope: !11167)
!11175 = !DILocation(line: 238, column: 78, scope: !11167)
!11176 = !DILocation(line: 238, column: 100, scope: !11167)
!11177 = !DILocation(line: 237, column: 8, scope: !11168)
!11178 = !DILocation(line: 240, column: 11, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11180, file: !11115, line: 240, column: 10)
!11180 = distinct !DILexicalBlock(scope: !11167, file: !11115, line: 239, column: 5)
!11181 = !DILocation(line: 240, column: 57, scope: !11179)
!11182 = !DILocation(line: 240, column: 80, scope: !11179)
!11183 = !DILocation(line: 240, column: 89, scope: !11179)
!11184 = !DILocation(line: 240, column: 10, scope: !11180)
!11185 = !DILocation(line: 248, column: 7, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !11115, line: 248, column: 7)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !11115, line: 248, column: 7)
!11188 = distinct !DILexicalBlock(scope: !11167, file: !11115, line: 246, column: 5)
!11189 = !DILocation(line: 248, column: 7, scope: !11187)
!11190 = !DILocation(line: 248, column: 7, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11186, file: !11115, line: 248, column: 7)
!11192 = !DILocation(line: 248, column: 7, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11194, file: !11115, line: 248, column: 7)
!11194 = distinct !DILexicalBlock(scope: !11186, file: !11115, line: 248, column: 7)
!11195 = !DILocation(line: 248, column: 7, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11194, file: !11115, line: 248, column: 7)
!11197 = !DILocation(line: 0, scope: !11186)
!11198 = !DILocation(line: 251, column: 30, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11188, file: !11115, line: 251, column: 10)
!11200 = !DILocation(line: 251, column: 40, scope: !11199)
!11201 = !DILocation(line: 0, scope: !11199)
!11202 = !DILocation(line: 251, column: 10, scope: !11188)
!11203 = !DILocation(line: 257, column: 15, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11199, file: !11115, line: 252, column: 7)
!11205 = !DILocation(line: 257, column: 51, scope: !11204)
!11206 = !DILocation(line: 257, column: 9, scope: !11204)
!11207 = !DILocation(line: 259, column: 15, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11209, file: !11115, line: 259, column: 14)
!11209 = distinct !DILexicalBlock(scope: !11204, file: !11115, line: 258, column: 9)
!11210 = !DILocation(line: 259, column: 29, scope: !11208)
!11211 = !DILocation(line: 259, column: 43, scope: !11208)
!11212 = !DILocation(line: 259, column: 14, scope: !11209)
!11213 = distinct !{!11213, !11206, !11214}
!11214 = !DILocation(line: 263, column: 9, scope: !11204)
!11215 = !DILocation(line: 271, column: 15, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11199, file: !11115, line: 266, column: 7)
!11217 = !DILocation(line: 271, column: 9, scope: !11216)
!11218 = !DILocation(line: 273, column: 15, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !11115, line: 273, column: 14)
!11220 = distinct !DILexicalBlock(scope: !11216, file: !11115, line: 272, column: 9)
!11221 = !DILocation(line: 273, column: 29, scope: !11219)
!11222 = !DILocation(line: 273, column: 43, scope: !11219)
!11223 = !DILocation(line: 273, column: 14, scope: !11220)
!11224 = distinct !{!11224, !11217, !11225}
!11225 = !DILocation(line: 277, column: 9, scope: !11216)
!11226 = !DILocation(line: 282, column: 27, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11120, file: !11115, line: 282, column: 6)
!11228 = !DILocation(line: 282, column: 43, scope: !11227)
!11229 = !DILocation(line: 282, column: 69, scope: !11227)
!11230 = !DILocation(line: 282, column: 6, scope: !11120)
!11231 = !DILocation(line: 289, column: 9, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !11115, line: 289, column: 8)
!11233 = distinct !DILexicalBlock(scope: !11227, file: !11115, line: 283, column: 3)
!11234 = !DILocation(line: 289, column: 39, scope: !11232)
!11235 = !DILocation(line: 289, column: 60, scope: !11232)
!11236 = !DILocation(line: 290, column: 9, scope: !11232)
!11237 = !DILocation(line: 290, column: 39, scope: !11232)
!11238 = !DILocation(line: 290, column: 60, scope: !11232)
!11239 = !DILocation(line: 290, column: 70, scope: !11232)
!11240 = !DILocation(line: 290, column: 78, scope: !11232)
!11241 = !DILocation(line: 290, column: 100, scope: !11232)
!11242 = !DILocation(line: 289, column: 8, scope: !11233)
!11243 = !DILocation(line: 293, column: 11, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !11115, line: 293, column: 10)
!11245 = distinct !DILexicalBlock(scope: !11232, file: !11115, line: 291, column: 5)
!11246 = !DILocation(line: 293, column: 57, scope: !11244)
!11247 = !DILocation(line: 293, column: 80, scope: !11244)
!11248 = !DILocation(line: 293, column: 89, scope: !11244)
!11249 = !DILocation(line: 293, column: 10, scope: !11245)
!11250 = !DILocation(line: 307, column: 30, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !11115, line: 307, column: 10)
!11252 = distinct !DILexicalBlock(scope: !11232, file: !11115, line: 305, column: 5)
!11253 = !DILocation(line: 307, column: 39, scope: !11251)
!11254 = !DILocation(line: 307, column: 10, scope: !11252)
!11255 = !DILocation(line: 310, column: 9, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11251, file: !11115, line: 308, column: 7)
!11257 = !DILocation(line: 313, column: 21, scope: !11256)
!11258 = !DILocation(line: 316, column: 9, scope: !11256)
!11259 = !DILocation(line: 316, column: 15, scope: !11256)
!11260 = !DILocation(line: 316, column: 51, scope: !11256)
!11261 = !DILocation(line: 318, column: 15, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !11115, line: 318, column: 14)
!11263 = distinct !DILexicalBlock(scope: !11256, file: !11115, line: 317, column: 9)
!11264 = !DILocation(line: 318, column: 29, scope: !11262)
!11265 = !DILocation(line: 318, column: 43, scope: !11262)
!11266 = !DILocation(line: 318, column: 14, scope: !11263)
!11267 = distinct !{!11267, !11258, !11268}
!11268 = !DILocation(line: 322, column: 9, scope: !11256)
!11269 = !DILocation(line: 330, column: 9, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11251, file: !11115, line: 328, column: 7)
!11271 = !DILocation(line: 333, column: 21, scope: !11270)
!11272 = !DILocation(line: 336, column: 9, scope: !11270)
!11273 = !DILocation(line: 336, column: 15, scope: !11270)
!11274 = !DILocation(line: 338, column: 15, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11276, file: !11115, line: 338, column: 14)
!11276 = distinct !DILexicalBlock(scope: !11270, file: !11115, line: 337, column: 9)
!11277 = !DILocation(line: 338, column: 29, scope: !11275)
!11278 = !DILocation(line: 338, column: 43, scope: !11275)
!11279 = !DILocation(line: 338, column: 14, scope: !11276)
!11280 = distinct !{!11280, !11272, !11281}
!11281 = !DILocation(line: 342, column: 9, scope: !11270)
!11282 = !DILocation(line: 0, scope: !11232)
!11283 = !DILocation(line: 347, column: 27, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11120, file: !11115, line: 347, column: 6)
!11285 = !DILocation(line: 347, column: 43, scope: !11284)
!11286 = !DILocation(line: 347, column: 69, scope: !11284)
!11287 = !DILocation(line: 347, column: 6, scope: !11120)
!11288 = !DILocation(line: 353, column: 28, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11290, file: !11115, line: 353, column: 8)
!11290 = distinct !DILexicalBlock(scope: !11284, file: !11115, line: 348, column: 3)
!11291 = !DILocation(line: 353, column: 37, scope: !11289)
!11292 = !DILocation(line: 353, column: 8, scope: !11290)
!11293 = !DILocation(line: 356, column: 7, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11289, file: !11115, line: 354, column: 5)
!11295 = !DILocation(line: 359, column: 19, scope: !11294)
!11296 = !DILocation(line: 362, column: 7, scope: !11294)
!11297 = !DILocation(line: 362, column: 13, scope: !11294)
!11298 = !DILocation(line: 362, column: 49, scope: !11294)
!11299 = !DILocation(line: 364, column: 13, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !11115, line: 364, column: 12)
!11301 = distinct !DILexicalBlock(scope: !11294, file: !11115, line: 363, column: 7)
!11302 = !DILocation(line: 364, column: 27, scope: !11300)
!11303 = !DILocation(line: 364, column: 41, scope: !11300)
!11304 = !DILocation(line: 364, column: 12, scope: !11301)
!11305 = distinct !{!11305, !11296, !11306}
!11306 = !DILocation(line: 368, column: 7, scope: !11294)
!11307 = !DILocation(line: 373, column: 7, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11289, file: !11115, line: 371, column: 5)
!11309 = !DILocation(line: 376, column: 19, scope: !11308)
!11310 = !DILocation(line: 379, column: 7, scope: !11308)
!11311 = !DILocation(line: 379, column: 13, scope: !11308)
!11312 = !DILocation(line: 381, column: 13, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11314, file: !11115, line: 381, column: 12)
!11314 = distinct !DILexicalBlock(scope: !11308, file: !11115, line: 380, column: 7)
!11315 = !DILocation(line: 381, column: 27, scope: !11313)
!11316 = !DILocation(line: 381, column: 41, scope: !11313)
!11317 = !DILocation(line: 381, column: 12, scope: !11314)
!11318 = distinct !{!11318, !11310, !11319}
!11319 = !DILocation(line: 385, column: 7, scope: !11308)
!11320 = !DILocation(line: 389, column: 27, scope: !11151)
!11321 = !DILocation(line: 389, column: 43, scope: !11151)
!11322 = !DILocation(line: 389, column: 69, scope: !11151)
!11323 = !DILocation(line: 389, column: 6, scope: !11120)
!11324 = !DILocation(line: 0, scope: !11150)
!11325 = !DILocation(line: 398, column: 8, scope: !11156)
!11326 = !DILocation(line: 398, column: 8, scope: !11150)
!11327 = !DILocation(line: 400, column: 7, scope: !11154)
!11328 = !DILocation(line: 400, column: 7, scope: !11155)
!11329 = !DILocation(line: 402, column: 5, scope: !11155)
!11330 = !DILocation(line: 404, column: 8, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11150, file: !11115, line: 404, column: 8)
!11332 = !DILocation(line: 404, column: 8, scope: !11150)
!11333 = !DILocation(line: 407, column: 7, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11331, file: !11115, line: 405, column: 5)
!11335 = !DILocation(line: 410, column: 19, scope: !11334)
!11336 = !DILocation(line: 412, column: 7, scope: !11334)
!11337 = !DILocation(line: 412, column: 13, scope: !11334)
!11338 = !DILocation(line: 414, column: 13, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11340, file: !11115, line: 414, column: 12)
!11340 = distinct !DILexicalBlock(scope: !11334, file: !11115, line: 413, column: 7)
!11341 = !DILocation(line: 414, column: 27, scope: !11339)
!11342 = !DILocation(line: 414, column: 40, scope: !11339)
!11343 = !DILocation(line: 414, column: 12, scope: !11340)
!11344 = distinct !{!11344, !11336, !11345}
!11345 = !DILocation(line: 418, column: 7, scope: !11334)
!11346 = !DILocation(line: 422, column: 5, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !11115, line: 422, column: 5)
!11348 = distinct !DILexicalBlock(scope: !11150, file: !11115, line: 422, column: 5)
!11349 = !DILocation(line: 422, column: 5, scope: !11348)
!11350 = !DILocation(line: 422, column: 5, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11347, file: !11115, line: 422, column: 5)
!11352 = !DILocation(line: 422, column: 5, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11354, file: !11115, line: 422, column: 5)
!11354 = distinct !DILexicalBlock(scope: !11347, file: !11115, line: 422, column: 5)
!11355 = !DILocation(line: 422, column: 5, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11354, file: !11115, line: 422, column: 5)
!11357 = !DILocation(line: 0, scope: !11347)
!11358 = !DILocation(line: 424, column: 28, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11150, file: !11115, line: 424, column: 8)
!11360 = !DILocation(line: 424, column: 38, scope: !11359)
!11361 = !DILocation(line: 0, scope: !11359)
!11362 = !DILocation(line: 424, column: 8, scope: !11150)
!11363 = !DILocation(line: 430, column: 13, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !11115, line: 425, column: 5)
!11365 = !DILocation(line: 430, column: 49, scope: !11364)
!11366 = !DILocation(line: 430, column: 7, scope: !11364)
!11367 = !DILocation(line: 432, column: 13, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !11115, line: 432, column: 12)
!11369 = distinct !DILexicalBlock(scope: !11364, file: !11115, line: 431, column: 7)
!11370 = !DILocation(line: 432, column: 27, scope: !11368)
!11371 = !DILocation(line: 432, column: 41, scope: !11368)
!11372 = !DILocation(line: 432, column: 12, scope: !11369)
!11373 = distinct !{!11373, !11366, !11374}
!11374 = !DILocation(line: 436, column: 7, scope: !11364)
!11375 = !DILocation(line: 444, column: 13, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11359, file: !11115, line: 439, column: 5)
!11377 = !DILocation(line: 444, column: 7, scope: !11376)
!11378 = !DILocation(line: 446, column: 13, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11380, file: !11115, line: 446, column: 12)
!11380 = distinct !DILexicalBlock(scope: !11376, file: !11115, line: 445, column: 7)
!11381 = !DILocation(line: 446, column: 27, scope: !11379)
!11382 = !DILocation(line: 446, column: 41, scope: !11379)
!11383 = !DILocation(line: 446, column: 12, scope: !11380)
!11384 = distinct !{!11384, !11377, !11385}
!11385 = !DILocation(line: 450, column: 7, scope: !11376)
!11386 = !DILocation(line: 454, column: 8, scope: !11150)
!11387 = !DILocation(line: 456, column: 7, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11389, file: !11115, line: 455, column: 5)
!11389 = distinct !DILexicalBlock(scope: !11150, file: !11115, line: 454, column: 8)
!11390 = !DILocation(line: 457, column: 5, scope: !11388)
!11391 = !DILocation(line: 462, column: 31, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11120, file: !11115, line: 462, column: 7)
!11393 = !DILocation(line: 462, column: 41, scope: !11392)
!11394 = !DILocation(line: 462, column: 7, scope: !11120)
!11395 = !DILocation(line: 465, column: 8, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !11115, line: 465, column: 8)
!11397 = distinct !DILexicalBlock(scope: !11392, file: !11115, line: 463, column: 3)
!11398 = !DILocation(line: 465, column: 38, scope: !11396)
!11399 = !DILocation(line: 465, column: 8, scope: !11397)
!11400 = !DILocation(line: 467, column: 44, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !11115, line: 467, column: 10)
!11402 = distinct !DILexicalBlock(scope: !11396, file: !11115, line: 466, column: 5)
!11403 = !DILocation(line: 0, scope: !11401)
!11404 = !DILocation(line: 467, column: 10, scope: !11402)
!11405 = !DILocation(line: 483, column: 15, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11401, file: !11115, line: 468, column: 7)
!11407 = !DILocation(line: 483, column: 9, scope: !11406)
!11408 = !DILocation(line: 485, column: 15, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11410, file: !11115, line: 485, column: 14)
!11410 = distinct !DILexicalBlock(scope: !11406, file: !11115, line: 484, column: 9)
!11411 = !DILocation(line: 485, column: 29, scope: !11409)
!11412 = !DILocation(line: 485, column: 43, scope: !11409)
!11413 = !DILocation(line: 485, column: 14, scope: !11410)
!11414 = distinct !{!11414, !11407, !11415}
!11415 = !DILocation(line: 489, column: 9, scope: !11406)
!11416 = !DILocation(line: 492, column: 9, scope: !11406)
!11417 = !DILocation(line: 498, column: 9, scope: !11406)
!11418 = !DILocation(line: 501, column: 21, scope: !11406)
!11419 = !DILocation(line: 504, column: 9, scope: !11406)
!11420 = !DILocation(line: 504, column: 15, scope: !11406)
!11421 = !DILocation(line: 504, column: 51, scope: !11406)
!11422 = !DILocation(line: 506, column: 15, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !11115, line: 506, column: 14)
!11424 = distinct !DILexicalBlock(scope: !11406, file: !11115, line: 505, column: 9)
!11425 = !DILocation(line: 506, column: 29, scope: !11423)
!11426 = !DILocation(line: 506, column: 43, scope: !11423)
!11427 = !DILocation(line: 506, column: 14, scope: !11424)
!11428 = distinct !{!11428, !11419, !11429}
!11429 = !DILocation(line: 510, column: 9, scope: !11406)
!11430 = !DILocation(line: 521, column: 15, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11401, file: !11115, line: 513, column: 7)
!11432 = !DILocation(line: 521, column: 9, scope: !11431)
!11433 = !DILocation(line: 523, column: 15, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !11115, line: 523, column: 14)
!11435 = distinct !DILexicalBlock(scope: !11431, file: !11115, line: 522, column: 9)
!11436 = !DILocation(line: 523, column: 29, scope: !11434)
!11437 = !DILocation(line: 523, column: 43, scope: !11434)
!11438 = !DILocation(line: 523, column: 14, scope: !11435)
!11439 = distinct !{!11439, !11432, !11440}
!11440 = !DILocation(line: 527, column: 9, scope: !11431)
!11441 = !DILocation(line: 533, column: 44, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !11115, line: 533, column: 10)
!11443 = distinct !DILexicalBlock(scope: !11396, file: !11115, line: 531, column: 5)
!11444 = !DILocation(line: 533, column: 10, scope: !11443)
!11445 = !DILocation(line: 540, column: 27, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11442, file: !11115, line: 538, column: 7)
!11447 = !DILocation(line: 551, column: 14, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11446, file: !11115, line: 550, column: 13)
!11449 = !DILocation(line: 551, column: 81, scope: !11448)
!11450 = !DILocation(line: 551, column: 55, scope: !11448)
!11451 = !DILocation(line: 551, column: 92, scope: !11448)
!11452 = !DILocation(line: 552, column: 14, scope: !11448)
!11453 = !DILocation(line: 552, column: 80, scope: !11448)
!11454 = !DILocation(line: 552, column: 53, scope: !11448)
!11455 = !DILocation(line: 552, column: 111, scope: !11448)
!11456 = !DILocation(line: 553, column: 14, scope: !11448)
!11457 = !DILocation(line: 553, column: 80, scope: !11448)
!11458 = !DILocation(line: 553, column: 86, scope: !11448)
!11459 = !DILocation(line: 553, column: 53, scope: !11448)
!11460 = !DILocation(line: 553, column: 111, scope: !11448)
!11461 = !DILocation(line: 554, column: 14, scope: !11448)
!11462 = !DILocation(line: 554, column: 82, scope: !11448)
!11463 = !DILocation(line: 554, column: 101, scope: !11448)
!11464 = !DILocation(line: 554, column: 53, scope: !11448)
!11465 = !DILocation(line: 554, column: 126, scope: !11448)
!11466 = !DILocation(line: 555, column: 14, scope: !11448)
!11467 = !DILocation(line: 555, column: 80, scope: !11448)
!11468 = !DILocation(line: 555, column: 85, scope: !11448)
!11469 = !DILocation(line: 555, column: 53, scope: !11448)
!11470 = !DILocation(line: 550, column: 13, scope: !11446)
!11471 = !DILocation(line: 563, column: 3, scope: !11120)
!11472 = !DILocation(line: 564, column: 1, scope: !11120)
!11473 = !DISubprogram(name: "HAL_GetTick", scope: !11474, file: !11474, line: 234, type: !3198, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!11474 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11475 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11115, file: !11115, line: 591, type: !11476, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11487)
!11476 = !DISubroutineType(types: !11477)
!11477 = !{!11118, !11478, !118}
!11478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11479, size: 32)
!11479 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11125, line: 92, baseType: !11480)
!11480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11125, line: 75, size: 160, elements: !11481)
!11481 = !{!11482, !11483, !11484, !11485, !11486}
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11480, file: !11125, line: 77, baseType: !118, size: 32)
!11483 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11480, file: !11125, line: 80, baseType: !118, size: 32, offset: 32)
!11484 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11480, file: !11125, line: 83, baseType: !118, size: 32, offset: 64)
!11485 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11480, file: !11125, line: 86, baseType: !118, size: 32, offset: 96)
!11486 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11480, file: !11125, line: 89, baseType: !118, size: 32, offset: 128)
!11487 = !{!11488, !11489, !11490}
!11488 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11475, file: !11115, line: 591, type: !11478)
!11489 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11475, file: !11115, line: 591, type: !118)
!11490 = !DILocalVariable(name: "tickstart", scope: !11475, file: !11115, line: 593, type: !118)
!11491 = !DILocation(line: 0, scope: !11475)
!11492 = !DILocation(line: 596, column: 24, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11475, file: !11115, line: 596, column: 6)
!11494 = !DILocation(line: 596, column: 6, scope: !11475)
!11495 = !DILocation(line: 610, column: 17, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11475, file: !11115, line: 610, column: 6)
!11497 = !DILocation(line: 610, column: 15, scope: !11496)
!11498 = !DILocation(line: 610, column: 6, scope: !11475)
!11499 = !DILocation(line: 613, column: 5, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11496, file: !11115, line: 611, column: 3)
!11501 = !DILocation(line: 617, column: 8, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11500, file: !11115, line: 617, column: 8)
!11503 = !DILocation(line: 617, column: 34, scope: !11502)
!11504 = !DILocation(line: 617, column: 8, scope: !11500)
!11505 = !DILocation(line: 624, column: 27, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11475, file: !11115, line: 624, column: 6)
!11507 = !DILocation(line: 624, column: 38, scope: !11506)
!11508 = !DILocation(line: 624, column: 60, scope: !11506)
!11509 = !DILocation(line: 624, column: 6, scope: !11475)
!11510 = !DILocation(line: 628, column: 40, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !11115, line: 628, column: 8)
!11512 = distinct !DILexicalBlock(scope: !11506, file: !11115, line: 625, column: 3)
!11513 = !DILocation(line: 628, column: 63, scope: !11511)
!11514 = !DILocation(line: 628, column: 8, scope: !11512)
!11515 = !DILocation(line: 630, column: 7, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11511, file: !11115, line: 629, column: 5)
!11517 = !DILocation(line: 633, column: 29, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11512, file: !11115, line: 633, column: 8)
!11519 = !DILocation(line: 631, column: 5, scope: !11516)
!11520 = !DILocation(line: 633, column: 40, scope: !11518)
!11521 = !DILocation(line: 633, column: 63, scope: !11518)
!11522 = !DILocation(line: 633, column: 8, scope: !11512)
!11523 = !DILocation(line: 635, column: 7, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11518, file: !11115, line: 634, column: 5)
!11525 = !DILocation(line: 636, column: 5, scope: !11524)
!11526 = !DILocation(line: 639, column: 5, scope: !11512)
!11527 = !DILocation(line: 643, column: 27, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11475, file: !11115, line: 643, column: 6)
!11529 = !DILocation(line: 640, column: 3, scope: !11512)
!11530 = !DILocation(line: 643, column: 38, scope: !11528)
!11531 = !DILocation(line: 643, column: 62, scope: !11528)
!11532 = !DILocation(line: 643, column: 6, scope: !11475)
!11533 = !DILocation(line: 648, column: 27, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11535, file: !11115, line: 648, column: 8)
!11535 = distinct !DILexicalBlock(scope: !11528, file: !11115, line: 644, column: 3)
!11536 = !DILocation(line: 648, column: 8, scope: !11535)
!11537 = !DILocation(line: 651, column: 10, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !11115, line: 651, column: 10)
!11539 = distinct !DILexicalBlock(scope: !11534, file: !11115, line: 649, column: 5)
!11540 = !DILocation(line: 651, column: 46, scope: !11538)
!11541 = !DILocation(line: 651, column: 10, scope: !11539)
!11542 = !DILocation(line: 661, column: 10, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !11115, line: 661, column: 10)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !11115, line: 659, column: 5)
!11545 = distinct !DILexicalBlock(scope: !11534, file: !11115, line: 657, column: 13)
!11546 = !DILocation(line: 661, column: 46, scope: !11543)
!11547 = !DILocation(line: 661, column: 10, scope: !11544)
!11548 = !DILocation(line: 670, column: 10, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !11115, line: 670, column: 10)
!11550 = distinct !DILexicalBlock(scope: !11545, file: !11115, line: 668, column: 5)
!11551 = !DILocation(line: 670, column: 46, scope: !11549)
!11552 = !DILocation(line: 670, column: 10, scope: !11550)
!11553 = !DILocation(line: 676, column: 5, scope: !11535)
!11554 = !DILocation(line: 679, column: 17, scope: !11535)
!11555 = !DILocation(line: 681, column: 5, scope: !11535)
!11556 = !DILocation(line: 681, column: 12, scope: !11535)
!11557 = !DILocation(line: 681, column: 65, scope: !11535)
!11558 = !DILocation(line: 681, column: 78, scope: !11535)
!11559 = !DILocation(line: 681, column: 42, scope: !11535)
!11560 = !DILocation(line: 683, column: 12, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11562, file: !11115, line: 683, column: 11)
!11562 = distinct !DILexicalBlock(scope: !11535, file: !11115, line: 682, column: 5)
!11563 = !DILocation(line: 683, column: 26, scope: !11561)
!11564 = !DILocation(line: 683, column: 39, scope: !11561)
!11565 = !DILocation(line: 683, column: 11, scope: !11562)
!11566 = distinct !{!11566, !11555, !11567}
!11567 = !DILocation(line: 687, column: 5, scope: !11535)
!11568 = !DILocation(line: 691, column: 17, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11475, file: !11115, line: 691, column: 6)
!11570 = !DILocation(line: 691, column: 15, scope: !11569)
!11571 = !DILocation(line: 691, column: 6, scope: !11475)
!11572 = !DILocation(line: 694, column: 5, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11569, file: !11115, line: 692, column: 3)
!11574 = !DILocation(line: 698, column: 8, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11573, file: !11115, line: 698, column: 8)
!11576 = !DILocation(line: 698, column: 34, scope: !11575)
!11577 = !DILocation(line: 698, column: 8, scope: !11573)
!11578 = !DILocation(line: 705, column: 27, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11475, file: !11115, line: 705, column: 6)
!11580 = !DILocation(line: 705, column: 38, scope: !11579)
!11581 = !DILocation(line: 705, column: 61, scope: !11579)
!11582 = !DILocation(line: 705, column: 6, scope: !11475)
!11583 = !DILocation(line: 708, column: 5, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11579, file: !11115, line: 706, column: 3)
!11585 = !DILocation(line: 712, column: 27, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11475, file: !11115, line: 712, column: 6)
!11587 = !DILocation(line: 709, column: 3, scope: !11584)
!11588 = !DILocation(line: 712, column: 38, scope: !11586)
!11589 = !DILocation(line: 712, column: 61, scope: !11586)
!11590 = !DILocation(line: 712, column: 6, scope: !11475)
!11591 = !DILocation(line: 715, column: 5, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11586, file: !11115, line: 713, column: 3)
!11593 = !DILocation(line: 716, column: 3, scope: !11592)
!11594 = !DILocation(line: 719, column: 21, scope: !11475)
!11595 = !DILocation(line: 719, column: 70, scope: !11475)
!11596 = !DILocation(line: 719, column: 91, scope: !11475)
!11597 = !DILocation(line: 719, column: 50, scope: !11475)
!11598 = !DILocation(line: 719, column: 47, scope: !11475)
!11599 = !DILocation(line: 719, column: 19, scope: !11475)
!11600 = !DILocation(line: 722, column: 17, scope: !11475)
!11601 = !DILocation(line: 722, column: 3, scope: !11475)
!11602 = !DILocation(line: 724, column: 3, scope: !11475)
!11603 = !DILocation(line: 725, column: 1, scope: !11475)
!11604 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11115, file: !11115, line: 885, type: !3198, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11605)
!11605 = !{!11606, !11607, !11608, !11609}
!11606 = !DILocalVariable(name: "pllm", scope: !11604, file: !11115, line: 887, type: !118)
!11607 = !DILocalVariable(name: "pllvco", scope: !11604, file: !11115, line: 887, type: !118)
!11608 = !DILocalVariable(name: "pllp", scope: !11604, file: !11115, line: 887, type: !118)
!11609 = !DILocalVariable(name: "sysclockfreq", scope: !11604, file: !11115, line: 888, type: !118)
!11610 = !DILocation(line: 0, scope: !11604)
!11611 = !DILocation(line: 891, column: 16, scope: !11604)
!11612 = !DILocation(line: 891, column: 21, scope: !11604)
!11613 = !DILocation(line: 891, column: 3, scope: !11604)
!11614 = !DILocation(line: 901, column: 7, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11115, line: 899, column: 5)
!11616 = distinct !DILexicalBlock(scope: !11604, file: !11115, line: 892, column: 3)
!11617 = !DILocation(line: 907, column: 19, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11616, file: !11115, line: 904, column: 5)
!11619 = !DILocation(line: 907, column: 27, scope: !11618)
!11620 = !DILocation(line: 908, column: 10, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11618, file: !11115, line: 908, column: 10)
!11622 = !DILocation(line: 908, column: 40, scope: !11621)
!11623 = !DILocation(line: 0, scope: !11621)
!11624 = !DILocation(line: 918, column: 23, scope: !11618)
!11625 = !DILocation(line: 918, column: 82, scope: !11618)
!11626 = !DILocation(line: 920, column: 28, scope: !11618)
!11627 = !DILocation(line: 921, column: 7, scope: !11618)
!11628 = !DILocation(line: 0, scope: !11616)
!11629 = !DILocation(line: 929, column: 3, scope: !11604)
!11630 = !DISubprogram(name: "HAL_InitTick", scope: !11474, file: !11474, line: 223, type: !11631, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{!11118, !118}
!11633 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11115, file: !11115, line: 775, type: !11634, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11636)
!11634 = !DISubroutineType(types: !11635)
!11635 = !{null, !118, !118, !118}
!11636 = !{!11637, !11638, !11639, !11640, !11650, !11654}
!11637 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11633, file: !11115, line: 775, type: !118)
!11638 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11633, file: !11115, line: 775, type: !118)
!11639 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11633, file: !11115, line: 775, type: !118)
!11640 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11633, file: !11115, line: 777, type: !11641)
!11641 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11642, line: 62, baseType: !11643)
!11642 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11642, line: 46, size: 160, elements: !11644)
!11644 = !{!11645, !11646, !11647, !11648, !11649}
!11645 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11643, file: !11642, line: 48, baseType: !118, size: 32)
!11646 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11643, file: !11642, line: 51, baseType: !118, size: 32, offset: 32)
!11647 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11643, file: !11642, line: 54, baseType: !118, size: 32, offset: 64)
!11648 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11643, file: !11642, line: 57, baseType: !118, size: 32, offset: 96)
!11649 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11643, file: !11642, line: 60, baseType: !118, size: 32, offset: 128)
!11650 = !DILocalVariable(name: "tmpreg", scope: !11651, file: !11115, line: 787, type: !314)
!11651 = distinct !DILexicalBlock(scope: !11652, file: !11115, line: 787, column: 5)
!11652 = distinct !DILexicalBlock(scope: !11653, file: !11115, line: 783, column: 3)
!11653 = distinct !DILexicalBlock(scope: !11633, file: !11115, line: 782, column: 6)
!11654 = !DILocalVariable(name: "tmpreg", scope: !11655, file: !11115, line: 811, type: !314)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !11115, line: 811, column: 5)
!11656 = distinct !DILexicalBlock(scope: !11653, file: !11115, line: 807, column: 3)
!11657 = !DILocation(line: 0, scope: !11633)
!11658 = !DILocation(line: 777, column: 3, scope: !11633)
!11659 = !DILocation(line: 777, column: 20, scope: !11633)
!11660 = !DILocation(line: 782, column: 15, scope: !11653)
!11661 = !DILocation(line: 782, column: 6, scope: !11633)
!11662 = !DILocation(line: 787, column: 5, scope: !11651)
!11663 = !DILocation(line: 787, column: 5, scope: !11652)
!11664 = !DILocation(line: 790, column: 21, scope: !11652)
!11665 = !DILocation(line: 790, column: 25, scope: !11652)
!11666 = !DILocation(line: 791, column: 21, scope: !11652)
!11667 = !DILocation(line: 791, column: 26, scope: !11652)
!11668 = !DILocation(line: 792, column: 21, scope: !11652)
!11669 = !DILocation(line: 792, column: 27, scope: !11652)
!11670 = !DILocation(line: 793, column: 21, scope: !11652)
!11671 = !DILocation(line: 793, column: 26, scope: !11652)
!11672 = !DILocation(line: 794, column: 21, scope: !11652)
!11673 = !DILocation(line: 794, column: 31, scope: !11652)
!11674 = !DILocation(line: 795, column: 5, scope: !11652)
!11675 = !DILocation(line: 798, column: 5, scope: !11652)
!11676 = !DILocation(line: 804, column: 3, scope: !11652)
!11677 = !DILocation(line: 811, column: 5, scope: !11655)
!11678 = !DILocation(line: 811, column: 5, scope: !11656)
!11679 = !DILocation(line: 814, column: 21, scope: !11656)
!11680 = !DILocation(line: 814, column: 25, scope: !11656)
!11681 = !DILocation(line: 815, column: 21, scope: !11656)
!11682 = !DILocation(line: 815, column: 26, scope: !11656)
!11683 = !DILocation(line: 816, column: 21, scope: !11656)
!11684 = !DILocation(line: 816, column: 27, scope: !11656)
!11685 = !DILocation(line: 817, column: 21, scope: !11656)
!11686 = !DILocation(line: 817, column: 26, scope: !11656)
!11687 = !DILocation(line: 818, column: 21, scope: !11656)
!11688 = !DILocation(line: 818, column: 31, scope: !11656)
!11689 = !DILocation(line: 819, column: 5, scope: !11656)
!11690 = !DILocation(line: 822, column: 5, scope: !11656)
!11691 = !DILocation(line: 0, scope: !11653)
!11692 = !DILocation(line: 830, column: 1, scope: !11633)
!11693 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11642, file: !11642, line: 224, type: !11694, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!11694 = !DISubroutineType(types: !11695)
!11695 = !{null, !2844, !11696}
!11696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11641, size: 32)
!11697 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11115, file: !11115, line: 841, type: !2960, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11698 = !DILocation(line: 843, column: 38, scope: !11697)
!11699 = !DILocation(line: 844, column: 1, scope: !11697)
!11700 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11115, file: !11115, line: 850, type: !2960, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11701 = !DILocation(line: 852, column: 38, scope: !11700)
!11702 = !DILocation(line: 853, column: 1, scope: !11700)
!11703 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11115, file: !11115, line: 941, type: !3198, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11704 = !DILocation(line: 943, column: 10, scope: !11703)
!11705 = !DILocation(line: 943, column: 3, scope: !11703)
!11706 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11115, file: !11115, line: 952, type: !3198, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11707 = !DILocation(line: 955, column: 11, scope: !11706)
!11708 = !DILocation(line: 955, column: 56, scope: !11706)
!11709 = !DILocation(line: 955, column: 78, scope: !11706)
!11710 = !DILocation(line: 955, column: 36, scope: !11706)
!11711 = !DILocation(line: 955, column: 33, scope: !11706)
!11712 = !DILocation(line: 955, column: 3, scope: !11706)
!11713 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11115, file: !11115, line: 964, type: !3198, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11714 = !DILocation(line: 967, column: 11, scope: !11713)
!11715 = !DILocation(line: 967, column: 55, scope: !11713)
!11716 = !DILocation(line: 967, column: 77, scope: !11713)
!11717 = !DILocation(line: 967, column: 35, scope: !11713)
!11718 = !DILocation(line: 967, column: 32, scope: !11713)
!11719 = !DILocation(line: 967, column: 3, scope: !11713)
!11720 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11115, file: !11115, line: 977, type: !11721, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11723)
!11721 = !DISubroutineType(types: !11722)
!11722 = !{null, !11123}
!11723 = !{!11724}
!11724 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11720, file: !11115, line: 977, type: !11123)
!11725 = !DILocation(line: 0, scope: !11720)
!11726 = !DILocation(line: 980, column: 22, scope: !11720)
!11727 = !DILocation(line: 980, column: 37, scope: !11720)
!11728 = !DILocation(line: 983, column: 12, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11720, file: !11115, line: 983, column: 6)
!11730 = !DILocation(line: 983, column: 15, scope: !11729)
!11731 = !DILocation(line: 983, column: 31, scope: !11729)
!11732 = !DILocation(line: 983, column: 6, scope: !11720)
!11733 = !DILocation(line: 985, column: 24, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11729, file: !11115, line: 984, column: 3)
!11735 = !DILocation(line: 985, column: 33, scope: !11734)
!11736 = !DILocation(line: 986, column: 3, scope: !11734)
!11737 = !DILocation(line: 987, column: 17, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11729, file: !11115, line: 987, column: 11)
!11739 = !DILocation(line: 987, column: 20, scope: !11738)
!11740 = !DILocation(line: 987, column: 35, scope: !11738)
!11741 = !DILocation(line: 0, scope: !11738)
!11742 = !DILocation(line: 987, column: 11, scope: !11729)
!11743 = !DILocation(line: 989, column: 33, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11738, file: !11115, line: 988, column: 3)
!11745 = !DILocation(line: 990, column: 3, scope: !11744)
!11746 = !DILocation(line: 993, column: 33, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11738, file: !11115, line: 992, column: 3)
!11748 = !DILocation(line: 997, column: 12, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11720, file: !11115, line: 997, column: 6)
!11750 = !DILocation(line: 997, column: 15, scope: !11749)
!11751 = !DILocation(line: 1003, column: 24, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11749, file: !11115, line: 1002, column: 3)
!11753 = !DILocation(line: 1003, column: 33, scope: !11752)
!11754 = !DILocation(line: 1006, column: 61, scope: !11720)
!11755 = !DILocation(line: 1006, column: 81, scope: !11720)
!11756 = !DILocation(line: 1006, column: 22, scope: !11720)
!11757 = !DILocation(line: 1006, column: 42, scope: !11720)
!11758 = !DILocation(line: 1009, column: 12, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11720, file: !11115, line: 1009, column: 6)
!11760 = !DILocation(line: 1009, column: 17, scope: !11759)
!11761 = !DILocation(line: 1009, column: 35, scope: !11759)
!11762 = !DILocation(line: 1009, column: 6, scope: !11720)
!11763 = !DILocation(line: 1011, column: 24, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11759, file: !11115, line: 1010, column: 3)
!11765 = !DILocation(line: 1011, column: 33, scope: !11764)
!11766 = !DILocation(line: 1012, column: 3, scope: !11764)
!11767 = !DILocation(line: 1013, column: 17, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11759, file: !11115, line: 1013, column: 11)
!11769 = !DILocation(line: 1013, column: 22, scope: !11768)
!11770 = !DILocation(line: 1013, column: 39, scope: !11768)
!11771 = !DILocation(line: 0, scope: !11768)
!11772 = !DILocation(line: 1013, column: 11, scope: !11759)
!11773 = !DILocation(line: 1015, column: 33, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11768, file: !11115, line: 1014, column: 3)
!11775 = !DILocation(line: 1016, column: 3, scope: !11774)
!11776 = !DILocation(line: 1019, column: 33, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11768, file: !11115, line: 1018, column: 3)
!11778 = !DILocation(line: 1023, column: 12, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11720, file: !11115, line: 1023, column: 6)
!11780 = !DILocation(line: 1023, column: 16, scope: !11779)
!11781 = !DILocation(line: 1029, column: 24, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11779, file: !11115, line: 1028, column: 3)
!11783 = !DILocation(line: 1029, column: 33, scope: !11782)
!11784 = !DILocation(line: 1033, column: 12, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11720, file: !11115, line: 1033, column: 6)
!11786 = !DILocation(line: 1033, column: 15, scope: !11785)
!11787 = !DILocation(line: 1033, column: 30, scope: !11785)
!11788 = !DILocation(line: 1033, column: 6, scope: !11720)
!11789 = !DILocation(line: 1039, column: 28, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11785, file: !11115, line: 1038, column: 3)
!11791 = !DILocation(line: 1039, column: 37, scope: !11790)
!11792 = !DILocation(line: 1041, column: 54, scope: !11720)
!11793 = !DILocation(line: 1041, column: 62, scope: !11720)
!11794 = !DILocation(line: 1041, column: 26, scope: !11720)
!11795 = !DILocation(line: 1041, column: 36, scope: !11720)
!11796 = !DILocation(line: 1042, column: 49, scope: !11720)
!11797 = !DILocation(line: 1042, column: 57, scope: !11720)
!11798 = !DILocation(line: 1042, column: 26, scope: !11720)
!11799 = !DILocation(line: 1042, column: 31, scope: !11720)
!11800 = !DILocation(line: 1043, column: 50, scope: !11720)
!11801 = !DILocation(line: 1043, column: 78, scope: !11720)
!11802 = !DILocation(line: 1043, column: 26, scope: !11720)
!11803 = !DILocation(line: 1043, column: 31, scope: !11720)
!11804 = !DILocation(line: 1044, column: 52, scope: !11720)
!11805 = !DILocation(line: 1044, column: 102, scope: !11720)
!11806 = !DILocation(line: 1044, column: 109, scope: !11720)
!11807 = !DILocation(line: 1044, column: 26, scope: !11720)
!11808 = !DILocation(line: 1044, column: 31, scope: !11720)
!11809 = !DILocation(line: 1045, column: 50, scope: !11720)
!11810 = !DILocation(line: 1045, column: 78, scope: !11720)
!11811 = !DILocation(line: 1045, column: 26, scope: !11720)
!11812 = !DILocation(line: 1045, column: 31, scope: !11720)
!11813 = !DILocation(line: 1046, column: 1, scope: !11720)
!11814 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11115, file: !11115, line: 1056, type: !11815, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11817)
!11815 = !DISubroutineType(types: !11816)
!11816 = !{null, !11478, !884}
!11817 = !{!11818, !11819}
!11818 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11814, file: !11115, line: 1056, type: !11478)
!11819 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11814, file: !11115, line: 1056, type: !884)
!11820 = !DILocation(line: 0, scope: !11814)
!11821 = !DILocation(line: 1059, column: 22, scope: !11814)
!11822 = !DILocation(line: 1059, column: 32, scope: !11814)
!11823 = !DILocation(line: 1062, column: 53, scope: !11814)
!11824 = !DILocation(line: 1062, column: 58, scope: !11814)
!11825 = !DILocation(line: 1062, column: 22, scope: !11814)
!11826 = !DILocation(line: 1062, column: 35, scope: !11814)
!11827 = !DILocation(line: 1065, column: 54, scope: !11814)
!11828 = !DILocation(line: 1065, column: 59, scope: !11814)
!11829 = !DILocation(line: 1065, column: 22, scope: !11814)
!11830 = !DILocation(line: 1065, column: 36, scope: !11814)
!11831 = !DILocation(line: 1068, column: 55, scope: !11814)
!11832 = !DILocation(line: 1068, column: 60, scope: !11814)
!11833 = !DILocation(line: 1068, column: 22, scope: !11814)
!11834 = !DILocation(line: 1068, column: 37, scope: !11814)
!11835 = !DILocation(line: 1071, column: 56, scope: !11814)
!11836 = !DILocation(line: 1071, column: 79, scope: !11814)
!11837 = !DILocation(line: 1071, column: 22, scope: !11814)
!11838 = !DILocation(line: 1071, column: 37, scope: !11814)
!11839 = !DILocation(line: 1074, column: 34, scope: !11814)
!11840 = !DILocation(line: 1074, column: 38, scope: !11814)
!11841 = !DILocation(line: 1074, column: 14, scope: !11814)
!11842 = !DILocation(line: 1075, column: 1, scope: !11814)
!11843 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11115, file: !11115, line: 1082, type: !2960, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11844 = !DILocation(line: 1085, column: 6, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11843, file: !11115, line: 1085, column: 6)
!11846 = !DILocation(line: 1085, column: 6, scope: !11843)
!11847 = !DILocation(line: 1088, column: 5, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11845, file: !11115, line: 1086, column: 3)
!11849 = !DILocation(line: 1091, column: 5, scope: !11848)
!11850 = !DILocation(line: 1092, column: 3, scope: !11848)
!11851 = !DILocation(line: 1093, column: 1, scope: !11843)
!11852 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11115, file: !11115, line: 1099, type: !2960, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !2032)
!11853 = !DILocation(line: 1104, column: 1, scope: !11852)
!11854 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11855, file: !11855, line: 257, type: !6409, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !11856)
!11855 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11856 = !{!11857}
!11857 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11854, file: !11855, line: 257, type: !118)
!11858 = !DILocation(line: 0, scope: !11854)
!11859 = !DILocation(line: 260, column: 3, scope: !11854)
!11860 = !DILocation(line: 261, column: 1, scope: !11854)
!11861 = distinct !DISubprogram(name: "LL_InitTick", scope: !11862, file: !11862, line: 260, type: !9472, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !11863)
!11862 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11863 = !{!11864, !11865}
!11864 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11861, file: !11862, line: 260, type: !118)
!11865 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11861, file: !11862, line: 260, type: !118)
!11866 = !DILocation(line: 0, scope: !11861)
!11867 = !DILocation(line: 263, column: 46, scope: !11861)
!11868 = !DILocation(line: 263, column: 55, scope: !11861)
!11869 = !DILocation(line: 263, column: 18, scope: !11861)
!11870 = !DILocation(line: 264, column: 18, scope: !11861)
!11871 = !DILocation(line: 265, column: 18, scope: !11861)
!11872 = !DILocation(line: 267, column: 1, scope: !11861)
!11873 = distinct !DISubprogram(name: "LL_mDelay", scope: !11855, file: !11855, line: 273, type: !6409, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !11874)
!11874 = !{!11875, !11876}
!11875 = !DILocalVariable(name: "Delay", arg: 1, scope: !11873, file: !11855, line: 273, type: !118)
!11876 = !DILocalVariable(name: "tmp", scope: !11873, file: !11855, line: 275, type: !314)
!11877 = !DILocation(line: 0, scope: !11873)
!11878 = !DILocation(line: 275, column: 3, scope: !11873)
!11879 = !DILocation(line: 275, column: 18, scope: !11873)
!11880 = !DILocation(line: 275, column: 33, scope: !11873)
!11881 = !DILocation(line: 277, column: 10, scope: !11873)
!11882 = !DILocation(line: 280, column: 12, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11873, file: !11855, line: 280, column: 6)
!11884 = !DILocation(line: 285, column: 3, scope: !11873)
!11885 = !DILocation(line: 287, column: 18, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !11855, line: 287, column: 8)
!11887 = distinct !DILexicalBlock(scope: !11873, file: !11855, line: 286, column: 3)
!11888 = !DILocation(line: 292, column: 1, scope: !11873)
!11889 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11855, file: !11855, line: 323, type: !6409, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !11890)
!11890 = !{!11891}
!11891 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11889, file: !11855, line: 323, type: !118)
!11892 = !DILocation(line: 0, scope: !11889)
!11893 = !DILocation(line: 326, column: 19, scope: !11889)
!11894 = !DILocation(line: 327, column: 1, scope: !11889)
!11895 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11855, file: !11855, line: 338, type: !11896, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !11899)
!11896 = !DISubroutineType(types: !11897)
!11897 = !{!11898, !118}
!11898 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !831, line: 201, baseType: !830)
!11899 = !{!11900, !11901, !11902, !11903, !11904}
!11900 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11895, file: !11855, line: 338, type: !118)
!11901 = !DILocalVariable(name: "timeout", scope: !11895, file: !11855, line: 340, type: !118)
!11902 = !DILocalVariable(name: "getlatency", scope: !11895, file: !11855, line: 341, type: !118)
!11903 = !DILocalVariable(name: "latency", scope: !11895, file: !11855, line: 342, type: !118)
!11904 = !DILocalVariable(name: "status", scope: !11895, file: !11855, line: 343, type: !11898)
!11905 = !DILocation(line: 0, scope: !11895)
!11906 = !DILocation(line: 347, column: 21, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11895, file: !11855, line: 347, column: 6)
!11908 = !DILocation(line: 347, column: 6, scope: !11895)
!11909 = !DILocation(line: 353, column: 8, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !11855, line: 353, column: 8)
!11911 = distinct !DILexicalBlock(scope: !11907, file: !11855, line: 352, column: 3)
!11912 = !DILocation(line: 353, column: 40, scope: !11910)
!11913 = !DILocation(line: 353, column: 8, scope: !11911)
!11914 = !DILocation(line: 356, column: 26, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11916, file: !11855, line: 356, column: 10)
!11916 = distinct !DILexicalBlock(scope: !11910, file: !11855, line: 354, column: 5)
!11917 = !DILocation(line: 356, column: 55, scope: !11915)
!11918 = !DILocation(line: 362, column: 55, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11916, file: !11855, line: 362, column: 10)
!11920 = !DILocation(line: 368, column: 55, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11916, file: !11855, line: 368, column: 10)
!11922 = !DILocation(line: 374, column: 26, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11916, file: !11855, line: 374, column: 10)
!11924 = !DILocation(line: 374, column: 55, scope: !11923)
!11925 = !DILocation(line: 380, column: 28, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !11855, line: 380, column: 12)
!11927 = distinct !DILexicalBlock(scope: !11923, file: !11855, line: 379, column: 7)
!11928 = !DILocation(line: 380, column: 57, scope: !11926)
!11929 = !DILocation(line: 387, column: 8, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11911, file: !11855, line: 387, column: 8)
!11931 = !DILocation(line: 387, column: 40, scope: !11930)
!11932 = !DILocation(line: 387, column: 8, scope: !11911)
!11933 = !DILocation(line: 396, column: 26, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11935, file: !11855, line: 396, column: 10)
!11935 = distinct !DILexicalBlock(scope: !11930, file: !11855, line: 388, column: 5)
!11936 = !DILocation(line: 396, column: 55, scope: !11934)
!11937 = !DILocation(line: 402, column: 26, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11935, file: !11855, line: 402, column: 10)
!11939 = !DILocation(line: 402, column: 55, scope: !11938)
!11940 = !DILocation(line: 407, column: 26, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11935, file: !11855, line: 407, column: 10)
!11942 = !DILocation(line: 407, column: 55, scope: !11941)
!11943 = !DILocation(line: 413, column: 28, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !11855, line: 413, column: 12)
!11945 = distinct !DILexicalBlock(scope: !11941, file: !11855, line: 412, column: 7)
!11946 = !DILocation(line: 413, column: 57, scope: !11944)
!11947 = !DILocation(line: 0, scope: !11911)
!11948 = !DILocation(line: 444, column: 5, scope: !11911)
!11949 = !DILocation(line: 448, column: 5, scope: !11911)
!11950 = !DILocation(line: 451, column: 18, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11911, file: !11855, line: 449, column: 5)
!11952 = !DILocation(line: 452, column: 12, scope: !11951)
!11953 = !DILocation(line: 453, column: 26, scope: !11911)
!11954 = !DILocation(line: 453, column: 38, scope: !11911)
!11955 = !DILocation(line: 453, column: 5, scope: !11951)
!11956 = distinct !{!11956, !11949, !11957}
!11957 = !DILocation(line: 453, column: 54, scope: !11911)
!11958 = !DILocation(line: 0, scope: !11907)
!11959 = !DILocation(line: 464, column: 3, scope: !11895)
!11960 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11961, file: !11961, line: 519, type: !3198, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!11961 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11962 = !DILocation(line: 521, column: 21, scope: !11960)
!11963 = !DILocation(line: 521, column: 3, scope: !11960)
!11964 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6014, file: !6014, line: 1543, type: !6409, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !11965)
!11965 = !{!11966}
!11966 = !DILocalVariable(name: "Latency", arg: 1, scope: !11964, file: !6014, line: 1543, type: !118)
!11967 = !DILocation(line: 0, scope: !11964)
!11968 = !DILocation(line: 1545, column: 3, scope: !11964)
!11969 = !DILocation(line: 1546, column: 1, scope: !11964)
!11970 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6014, file: !6014, line: 1569, type: !3198, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!11971 = !DILocation(line: 1571, column: 21, scope: !11970)
!11972 = !DILocation(line: 1571, column: 3, scope: !11970)
!11973 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11855, file: !11855, line: 483, type: !11974, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !11990)
!11974 = !DISubroutineType(types: !11975)
!11975 = !{!11898, !11976, !11983}
!11976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11977, size: 32)
!11977 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11862, line: 114, baseType: !11978)
!11978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11862, line: 94, size: 96, elements: !11979)
!11979 = !{!11980, !11981, !11982}
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11978, file: !11862, line: 96, baseType: !118, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11978, file: !11862, line: 102, baseType: !118, size: 32, offset: 32)
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11978, file: !11862, line: 109, baseType: !118, size: 32, offset: 64)
!11983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11984, size: 32)
!11984 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11862, line: 139, baseType: !11985)
!11985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11862, line: 119, size: 96, elements: !11986)
!11986 = !{!11987, !11988, !11989}
!11987 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11985, file: !11862, line: 121, baseType: !118, size: 32)
!11988 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11985, file: !11862, line: 127, baseType: !118, size: 32, offset: 32)
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11985, file: !11862, line: 133, baseType: !118, size: 32, offset: 64)
!11990 = !{!11991, !11992, !11993, !11994}
!11991 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11973, file: !11855, line: 483, type: !11976)
!11992 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11973, file: !11855, line: 484, type: !11983)
!11993 = !DILocalVariable(name: "status", scope: !11973, file: !11855, line: 486, type: !11898)
!11994 = !DILocalVariable(name: "pllfreq", scope: !11973, file: !11855, line: 487, type: !118)
!11995 = !DILocation(line: 0, scope: !11973)
!11996 = !DILocation(line: 490, column: 6, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11973, file: !11855, line: 490, column: 6)
!11998 = !DILocation(line: 490, column: 25, scope: !11997)
!11999 = !DILocation(line: 490, column: 6, scope: !11973)
!12000 = !DILocation(line: 493, column: 15, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11997, file: !11855, line: 491, column: 3)
!12002 = !DILocation(line: 496, column: 8, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12001, file: !11855, line: 496, column: 8)
!12004 = !DILocation(line: 496, column: 29, scope: !12003)
!12005 = !DILocation(line: 496, column: 8, scope: !12001)
!12006 = !DILocation(line: 498, column: 7, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12003, file: !11855, line: 497, column: 5)
!12008 = !DILocation(line: 499, column: 7, scope: !12007)
!12009 = !DILocation(line: 499, column: 14, scope: !12007)
!12010 = !DILocation(line: 499, column: 35, scope: !12007)
!12011 = distinct !{!12011, !12008, !12012}
!12012 = !DILocation(line: 502, column: 7, scope: !12007)
!12013 = !DILocation(line: 506, column: 76, scope: !12001)
!12014 = !DILocation(line: 506, column: 103, scope: !12001)
!12015 = !DILocation(line: 507, column: 54, scope: !12001)
!12016 = !DILocation(line: 506, column: 5, scope: !12001)
!12017 = !DILocation(line: 510, column: 14, scope: !12001)
!12018 = !DILocation(line: 511, column: 3, scope: !12001)
!12019 = !DILocation(line: 0, scope: !11997)
!12020 = !DILocation(line: 518, column: 3, scope: !11973)
!12021 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11855, file: !11855, line: 642, type: !12022, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12024)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{!11898}
!12024 = !{!12025}
!12025 = !DILocalVariable(name: "status", scope: !12021, file: !11855, line: 644, type: !11898)
!12026 = !DILocation(line: 0, scope: !12021)
!12027 = !DILocation(line: 647, column: 6, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12021, file: !11855, line: 647, column: 6)
!12029 = !DILocation(line: 647, column: 27, scope: !12028)
!12030 = !DILocation(line: 663, column: 6, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12021, file: !11855, line: 663, column: 6)
!12032 = !DILocation(line: 663, column: 30, scope: !12031)
!12033 = !DILocation(line: 663, column: 6, scope: !12021)
!12034 = !DILocation(line: 669, column: 3, scope: !12021)
!12035 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11855, file: !11855, line: 611, type: !12036, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12038)
!12036 = !DISubroutineType(types: !12037)
!12037 = !{!118, !118, !11976}
!12038 = !{!12039, !12040, !12041}
!12039 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12035, file: !11855, line: 611, type: !118)
!12040 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12035, file: !11855, line: 611, type: !11976)
!12041 = !DILocalVariable(name: "pllfreq", scope: !12035, file: !11855, line: 613, type: !118)
!12042 = !DILocation(line: 0, scope: !12035)
!12043 = !DILocation(line: 622, column: 56, scope: !12035)
!12044 = !DILocation(line: 622, column: 61, scope: !12035)
!12045 = !DILocation(line: 622, column: 32, scope: !12035)
!12046 = !DILocation(line: 626, column: 45, scope: !12035)
!12047 = !DILocation(line: 626, column: 50, scope: !12035)
!12048 = !DILocation(line: 626, column: 21, scope: !12035)
!12049 = !DILocation(line: 630, column: 47, scope: !12035)
!12050 = !DILocation(line: 630, column: 82, scope: !12035)
!12051 = !DILocation(line: 630, column: 21, scope: !12035)
!12052 = !DILocation(line: 633, column: 3, scope: !12035)
!12053 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8798, file: !8798, line: 3007, type: !3198, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12054 = !DILocation(line: 3009, column: 11, scope: !12053)
!12055 = !DILocation(line: 3009, column: 44, scope: !12053)
!12056 = !DILocation(line: 3009, column: 3, scope: !12053)
!12057 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8798, file: !8798, line: 2987, type: !2960, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12058 = !DILocation(line: 2989, column: 3, scope: !12057)
!12059 = !DILocation(line: 2990, column: 1, scope: !12057)
!12060 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8798, file: !8798, line: 4304, type: !8932, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12061)
!12061 = !{!12062, !12063, !12064, !12065}
!12062 = !DILocalVariable(name: "Source", arg: 1, scope: !12060, file: !8798, line: 4304, type: !118)
!12063 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12060, file: !8798, line: 4304, type: !118)
!12064 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12060, file: !8798, line: 4304, type: !118)
!12065 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12060, file: !8798, line: 4304, type: !118)
!12066 = !DILocation(line: 0, scope: !12060)
!12067 = !DILocation(line: 4306, column: 3, scope: !12060)
!12068 = !DILocation(line: 4308, column: 3, scope: !12060)
!12069 = !DILocation(line: 4312, column: 1, scope: !12060)
!12070 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11855, file: !11855, line: 681, type: !12071, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12073)
!12071 = !DISubroutineType(types: !12072)
!12072 = !{!11898, !118, !11983}
!12073 = !{!12074, !12075, !12076, !12077}
!12074 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12070, file: !11855, line: 681, type: !118)
!12075 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12070, file: !11855, line: 681, type: !11983)
!12076 = !DILocalVariable(name: "status", scope: !12070, file: !11855, line: 683, type: !11898)
!12077 = !DILocalVariable(name: "hclk_frequency", scope: !12070, file: !11855, line: 684, type: !118)
!12078 = !DILocation(line: 0, scope: !12070)
!12079 = !DILocation(line: 691, column: 20, scope: !12070)
!12080 = !DILocation(line: 694, column: 6, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12070, file: !11855, line: 694, column: 6)
!12082 = !DILocation(line: 694, column: 22, scope: !12081)
!12083 = !DILocation(line: 694, column: 6, scope: !12070)
!12084 = !DILocation(line: 697, column: 14, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12081, file: !11855, line: 695, column: 3)
!12086 = !DILocation(line: 701, column: 13, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12070, file: !11855, line: 701, column: 6)
!12088 = !DILocation(line: 701, column: 6, scope: !12070)
!12089 = !DILocation(line: 704, column: 5, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12087, file: !11855, line: 702, column: 3)
!12091 = !DILocation(line: 705, column: 5, scope: !12090)
!12092 = !DILocation(line: 705, column: 12, scope: !12090)
!12093 = !DILocation(line: 705, column: 33, scope: !12090)
!12094 = distinct !{!12094, !12091, !12095}
!12095 = !DILocation(line: 708, column: 5, scope: !12090)
!12096 = !DILocation(line: 711, column: 49, scope: !12090)
!12097 = !DILocation(line: 711, column: 5, scope: !12090)
!12098 = !DILocation(line: 712, column: 5, scope: !12090)
!12099 = !DILocation(line: 713, column: 5, scope: !12090)
!12100 = !DILocation(line: 713, column: 12, scope: !12090)
!12101 = !DILocation(line: 713, column: 37, scope: !12090)
!12102 = distinct !{!12102, !12099, !12103}
!12103 = !DILocation(line: 716, column: 5, scope: !12090)
!12104 = !DILocation(line: 719, column: 50, scope: !12090)
!12105 = !DILocation(line: 719, column: 5, scope: !12090)
!12106 = !DILocation(line: 720, column: 50, scope: !12090)
!12107 = !DILocation(line: 720, column: 5, scope: !12090)
!12108 = !DILocation(line: 721, column: 3, scope: !12090)
!12109 = !DILocation(line: 724, column: 6, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12070, file: !11855, line: 724, column: 6)
!12111 = !DILocation(line: 724, column: 22, scope: !12110)
!12112 = !DILocation(line: 724, column: 6, scope: !12070)
!12113 = !DILocation(line: 727, column: 14, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12110, file: !11855, line: 725, column: 3)
!12115 = !DILocation(line: 728, column: 3, scope: !12114)
!12116 = !DILocation(line: 731, column: 13, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12070, file: !11855, line: 731, column: 6)
!12118 = !DILocation(line: 731, column: 6, scope: !12070)
!12119 = !DILocation(line: 733, column: 5, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12117, file: !11855, line: 732, column: 3)
!12121 = !DILocation(line: 734, column: 3, scope: !12120)
!12122 = !DILocation(line: 736, column: 3, scope: !12070)
!12123 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8798, file: !8798, line: 4184, type: !2960, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12124 = !DILocation(line: 4186, column: 3, scope: !12123)
!12125 = !DILocation(line: 4187, column: 1, scope: !12123)
!12126 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8798, file: !8798, line: 4205, type: !3198, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12127 = !DILocation(line: 4207, column: 11, scope: !12126)
!12128 = !DILocation(line: 4207, column: 44, scope: !12126)
!12129 = !DILocation(line: 4207, column: 3, scope: !12126)
!12130 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8798, file: !8798, line: 3224, type: !6409, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12131)
!12131 = !{!12132}
!12132 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12130, file: !8798, line: 3224, type: !118)
!12133 = !DILocation(line: 0, scope: !12130)
!12134 = !DILocation(line: 3226, column: 3, scope: !12130)
!12135 = !DILocation(line: 3227, column: 1, scope: !12130)
!12136 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8798, file: !8798, line: 3188, type: !6409, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12137)
!12137 = !{!12138}
!12138 = !DILocalVariable(name: "Source", arg: 1, scope: !12136, file: !8798, line: 3188, type: !118)
!12139 = !DILocation(line: 0, scope: !12136)
!12140 = !DILocation(line: 3190, column: 3, scope: !12136)
!12141 = !DILocation(line: 3191, column: 1, scope: !12136)
!12142 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8798, file: !8798, line: 3204, type: !3198, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12143 = !DILocation(line: 3206, column: 21, scope: !12142)
!12144 = !DILocation(line: 3206, column: 3, scope: !12142)
!12145 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8798, file: !8798, line: 3240, type: !6409, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12146)
!12146 = !{!12147}
!12147 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12145, file: !8798, line: 3240, type: !118)
!12148 = !DILocation(line: 0, scope: !12145)
!12149 = !DILocation(line: 3242, column: 3, scope: !12145)
!12150 = !DILocation(line: 3243, column: 1, scope: !12145)
!12151 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8798, file: !8798, line: 3256, type: !6409, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12152)
!12152 = !{!12153}
!12153 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12151, file: !8798, line: 3256, type: !118)
!12154 = !DILocation(line: 0, scope: !12151)
!12155 = !DILocation(line: 3258, column: 3, scope: !12151)
!12156 = !DILocation(line: 3259, column: 1, scope: !12151)
!12157 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8798, file: !8798, line: 5153, type: !3198, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12158 = !DILocation(line: 5155, column: 11, scope: !12157)
!12159 = !DILocation(line: 5155, column: 47, scope: !12157)
!12160 = !DILocation(line: 5155, column: 3, scope: !12157)
!12161 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11855, file: !11855, line: 540, type: !12162, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12164)
!12162 = !DISubroutineType(types: !12163)
!12163 = !{!11898, !118, !118, !11976, !11983}
!12164 = !{!12165, !12166, !12167, !12168, !12169, !12170}
!12165 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12161, file: !11855, line: 540, type: !118)
!12166 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12161, file: !11855, line: 540, type: !118)
!12167 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12161, file: !11855, line: 541, type: !11976)
!12168 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12161, file: !11855, line: 541, type: !11983)
!12169 = !DILocalVariable(name: "status", scope: !12161, file: !11855, line: 543, type: !11898)
!12170 = !DILocalVariable(name: "pllfreq", scope: !12161, file: !11855, line: 544, type: !118)
!12171 = !DILocation(line: 0, scope: !12161)
!12172 = !DILocation(line: 551, column: 6, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12161, file: !11855, line: 551, column: 6)
!12174 = !DILocation(line: 551, column: 25, scope: !12173)
!12175 = !DILocation(line: 551, column: 6, scope: !12161)
!12176 = !DILocation(line: 554, column: 15, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12173, file: !11855, line: 552, column: 3)
!12178 = !DILocation(line: 557, column: 8, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12177, file: !11855, line: 557, column: 8)
!12180 = !DILocation(line: 557, column: 29, scope: !12179)
!12181 = !DILocation(line: 557, column: 8, scope: !12177)
!12182 = !DILocation(line: 560, column: 20, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !11855, line: 560, column: 10)
!12184 = distinct !DILexicalBlock(scope: !12179, file: !11855, line: 558, column: 5)
!12185 = !DILocation(line: 560, column: 10, scope: !12184)
!12186 = !DILocation(line: 562, column: 9, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12183, file: !11855, line: 561, column: 7)
!12188 = !DILocation(line: 563, column: 7, scope: !12187)
!12189 = !DILocation(line: 566, column: 9, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12183, file: !11855, line: 565, column: 7)
!12191 = !DILocation(line: 570, column: 7, scope: !12184)
!12192 = !DILocation(line: 571, column: 7, scope: !12184)
!12193 = !DILocation(line: 571, column: 14, scope: !12184)
!12194 = !DILocation(line: 571, column: 35, scope: !12184)
!12195 = distinct !{!12195, !12192, !12196}
!12196 = !DILocation(line: 574, column: 7, scope: !12184)
!12197 = !DILocation(line: 578, column: 76, scope: !12177)
!12198 = !DILocation(line: 578, column: 103, scope: !12177)
!12199 = !DILocation(line: 579, column: 54, scope: !12177)
!12200 = !DILocation(line: 578, column: 5, scope: !12177)
!12201 = !DILocation(line: 582, column: 14, scope: !12177)
!12202 = !DILocation(line: 583, column: 3, scope: !12177)
!12203 = !DILocation(line: 0, scope: !12173)
!12204 = !DILocation(line: 590, column: 3, scope: !12161)
!12205 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8798, file: !8798, line: 2969, type: !3198, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12206 = !DILocation(line: 2971, column: 11, scope: !12205)
!12207 = !DILocation(line: 2971, column: 44, scope: !12205)
!12208 = !DILocation(line: 2971, column: 3, scope: !12205)
!12209 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8798, file: !8798, line: 2929, type: !2960, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12210 = !DILocation(line: 2931, column: 3, scope: !12209)
!12211 = !DILocation(line: 2932, column: 1, scope: !12209)
!12212 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8798, file: !8798, line: 2939, type: !2960, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12213 = !DILocation(line: 2941, column: 3, scope: !12212)
!12214 = !DILocation(line: 2942, column: 1, scope: !12212)
!12215 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8798, file: !8798, line: 2949, type: !2960, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !2032)
!12216 = !DILocation(line: 2951, column: 3, scope: !12215)
!12217 = !DILocation(line: 2952, column: 1, scope: !12215)
!12218 = distinct !DISubprogram(name: "z_device_state_init", scope: !12219, file: !12219, line: 23, type: !2960, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12220)
!12219 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12220 = !{!12221}
!12221 = !DILocalVariable(name: "dev", scope: !12218, file: !12219, line: 25, type: !12222)
!12222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12223, size: 32)
!12223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12224)
!12224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !12225)
!12225 = !{!12226, !12227, !12228, !12229, !12235, !12236}
!12226 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12224, file: !334, line: 380, baseType: !278, size: 32)
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12224, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!12228 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12224, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!12229 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12224, file: !334, line: 386, baseType: !12230, size: 32, offset: 96)
!12230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12231, size: 32)
!12231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !12232)
!12232 = !{!12233, !12234}
!12233 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12231, file: !334, line: 359, baseType: !185, size: 8)
!12234 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12231, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12224, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!12236 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12224, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!12237 = !DILocation(line: 0, scope: !12218)
!12238 = !DILocation(line: 31, column: 1, scope: !12218)
!12239 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12219, file: !12219, line: 33, type: !12240, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12242)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{!12222, !278}
!12242 = !{!12243, !12244}
!12243 = !DILocalVariable(name: "name", arg: 1, scope: !12239, file: !12219, line: 33, type: !278)
!12244 = !DILocalVariable(name: "dev", scope: !12239, file: !12219, line: 35, type: !12222)
!12245 = !DILocation(line: 0, scope: !12239)
!12246 = !DILocation(line: 40, column: 12, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12239, file: !12219, line: 40, column: 6)
!12248 = !DILocation(line: 40, column: 21, scope: !12247)
!12249 = !DILocation(line: 40, column: 25, scope: !12247)
!12250 = !DILocation(line: 40, column: 33, scope: !12247)
!12251 = !DILocation(line: 40, column: 6, scope: !12239)
!12252 = !DILocation(line: 55, column: 2, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12239, file: !12219, line: 55, column: 2)
!12254 = !DILocation(line: 50, column: 7, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !12219, line: 50, column: 7)
!12256 = distinct !DILexicalBlock(scope: !12257, file: !12219, line: 49, column: 57)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !12219, line: 49, column: 2)
!12258 = distinct !DILexicalBlock(scope: !12239, file: !12219, line: 49, column: 2)
!12259 = !DILocation(line: 50, column: 30, scope: !12255)
!12260 = !DILocation(line: 50, column: 39, scope: !12255)
!12261 = !DILocation(line: 50, column: 44, scope: !12255)
!12262 = !DILocation(line: 50, column: 7, scope: !12256)
!12263 = !DILocation(line: 49, column: 53, scope: !12257)
!12264 = !DILocation(line: 49, column: 33, scope: !12257)
!12265 = !DILocation(line: 49, column: 2, scope: !12258)
!12266 = distinct !{!12266, !12265, !12267}
!12267 = !DILocation(line: 53, column: 2, scope: !12258)
!12268 = !DILocation(line: 56, column: 7, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !12219, line: 56, column: 7)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !12219, line: 55, column: 57)
!12271 = distinct !DILexicalBlock(scope: !12253, file: !12219, line: 55, column: 2)
!12272 = !DILocation(line: 56, column: 30, scope: !12269)
!12273 = !DILocation(line: 56, column: 52, scope: !12269)
!12274 = !DILocation(line: 56, column: 34, scope: !12269)
!12275 = !DILocation(line: 56, column: 58, scope: !12269)
!12276 = !DILocation(line: 56, column: 7, scope: !12270)
!12277 = !DILocation(line: 55, column: 53, scope: !12271)
!12278 = !DILocation(line: 55, column: 33, scope: !12271)
!12279 = distinct !{!12279, !12252, !12280}
!12280 = !DILocation(line: 59, column: 2, scope: !12253)
!12281 = !DILocation(line: 62, column: 1, scope: !12239)
!12282 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12219, file: !12219, line: 93, type: !12283, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12285)
!12283 = !DISubroutineType(types: !12284)
!12284 = !{!345, !12222}
!12285 = !{!12286}
!12286 = !DILocalVariable(name: "dev", arg: 1, scope: !12282, file: !12219, line: 93, type: !12222)
!12287 = !DILocation(line: 0, scope: !12282)
!12288 = !DILocation(line: 99, column: 10, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12282, file: !12219, line: 99, column: 6)
!12290 = !DILocation(line: 99, column: 6, scope: !12282)
!12291 = !DILocation(line: 103, column: 14, scope: !12282)
!12292 = !DILocation(line: 103, column: 21, scope: !12282)
!12293 = !DILocation(line: 103, column: 33, scope: !12282)
!12294 = !DILocation(line: 103, column: 49, scope: !12282)
!12295 = !DILocation(line: 103, column: 58, scope: !12282)
!12296 = !DILocation(line: 104, column: 1, scope: !12282)
!12297 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12219, file: !12219, line: 87, type: !12298, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12301)
!12298 = !DISubroutineType(types: !12299)
!12299 = !{!239, !12300}
!12300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12222, size: 32)
!12301 = !{!12302}
!12302 = !DILocalVariable(name: "devices", arg: 1, scope: !12297, file: !12219, line: 87, type: !12300)
!12303 = !DILocation(line: 0, scope: !12297)
!12304 = !DILocation(line: 89, column: 11, scope: !12297)
!12305 = !DILocation(line: 90, column: 2, scope: !12297)
!12306 = distinct !DISubprogram(name: "device_required_foreach", scope: !12219, file: !12219, line: 125, type: !12307, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12313)
!12307 = !DISubroutineType(types: !12308)
!12308 = !{!119, !12222, !12309, !113}
!12309 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !334, line: 471, baseType: !12310)
!12310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12311, size: 32)
!12311 = !DISubroutineType(types: !12312)
!12312 = !{!119, !12222, !113}
!12313 = !{!12314, !12315, !12316, !12317, !12318}
!12314 = !DILocalVariable(name: "dev", arg: 1, scope: !12306, file: !12219, line: 125, type: !12222)
!12315 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12306, file: !12219, line: 126, type: !12309)
!12316 = !DILocalVariable(name: "context", arg: 3, scope: !12306, file: !12219, line: 127, type: !113)
!12317 = !DILocalVariable(name: "handle_count", scope: !12306, file: !12219, line: 129, type: !239)
!12318 = !DILocalVariable(name: "handles", scope: !12306, file: !12219, line: 130, type: !348)
!12319 = !DILocation(line: 0, scope: !12306)
!12320 = !DILocation(line: 129, column: 2, scope: !12306)
!12321 = !DILocation(line: 129, column: 9, scope: !12306)
!12322 = !DILocation(line: 130, column: 35, scope: !12306)
!12323 = !DILocation(line: 132, column: 33, scope: !12306)
!12324 = !DILocation(line: 132, column: 9, scope: !12306)
!12325 = !DILocation(line: 133, column: 1, scope: !12306)
!12326 = !DILocation(line: 132, column: 2, scope: !12306)
!12327 = distinct !DISubprogram(name: "device_required_handles_get", scope: !334, file: !334, line: 493, type: !12328, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12330)
!12328 = !DISubroutineType(types: !12329)
!12329 = !{!348, !12222, !2413}
!12330 = !{!12331, !12332, !12333, !12334}
!12331 = !DILocalVariable(name: "dev", arg: 1, scope: !12327, file: !334, line: 493, type: !12222)
!12332 = !DILocalVariable(name: "count", arg: 2, scope: !12327, file: !334, line: 493, type: !2413)
!12333 = !DILocalVariable(name: "rv", scope: !12327, file: !334, line: 495, type: !348)
!12334 = !DILocalVariable(name: "i", scope: !12335, file: !334, line: 498, type: !239)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !334, line: 497, column: 18)
!12336 = distinct !DILexicalBlock(scope: !12327, file: !334, line: 497, column: 6)
!12337 = !DILocation(line: 0, scope: !12327)
!12338 = !DILocation(line: 495, column: 35, scope: !12327)
!12339 = !DILocation(line: 497, column: 9, scope: !12336)
!12340 = !DILocation(line: 497, column: 6, scope: !12327)
!12341 = !DILocation(line: 0, scope: !12335)
!12342 = !DILocation(line: 500, column: 11, scope: !12335)
!12343 = !DILocation(line: 500, column: 40, scope: !12335)
!12344 = !DILocation(line: 502, column: 4, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12335, file: !334, line: 501, column: 40)
!12346 = distinct !{!12346, !12347, !12348}
!12347 = !DILocation(line: 500, column: 3, scope: !12335)
!12348 = !DILocation(line: 503, column: 3, scope: !12335)
!12349 = !DILocation(line: 504, column: 10, scope: !12335)
!12350 = !DILocation(line: 505, column: 2, scope: !12335)
!12351 = !DILocation(line: 507, column: 2, scope: !12327)
!12352 = distinct !DISubprogram(name: "device_visitor", scope: !12219, file: !12219, line: 106, type: !12353, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!119, !348, !239, !12309, !113}
!12355 = !{!12356, !12357, !12358, !12359, !12360, !12362, !12365, !12366}
!12356 = !DILocalVariable(name: "handles", arg: 1, scope: !12352, file: !12219, line: 106, type: !348)
!12357 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12352, file: !12219, line: 107, type: !239)
!12358 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12352, file: !12219, line: 108, type: !12309)
!12359 = !DILocalVariable(name: "context", arg: 4, scope: !12352, file: !12219, line: 109, type: !113)
!12360 = !DILocalVariable(name: "i", scope: !12361, file: !12219, line: 112, type: !239)
!12361 = distinct !DILexicalBlock(scope: !12352, file: !12219, line: 112, column: 2)
!12362 = !DILocalVariable(name: "dh", scope: !12363, file: !12219, line: 113, type: !350)
!12363 = distinct !DILexicalBlock(scope: !12364, file: !12219, line: 112, column: 44)
!12364 = distinct !DILexicalBlock(scope: !12361, file: !12219, line: 112, column: 2)
!12365 = !DILocalVariable(name: "rdev", scope: !12363, file: !12219, line: 114, type: !12222)
!12366 = !DILocalVariable(name: "rc", scope: !12363, file: !12219, line: 115, type: !119)
!12367 = !DILocation(line: 0, scope: !12352)
!12368 = !DILocation(line: 0, scope: !12361)
!12369 = !DILocation(line: 112, column: 23, scope: !12364)
!12370 = !DILocation(line: 112, column: 2, scope: !12361)
!12371 = distinct !{!12371, !12370, !12372}
!12372 = !DILocation(line: 120, column: 2, scope: !12361)
!12373 = !DILocation(line: 113, column: 24, scope: !12363)
!12374 = !DILocation(line: 0, scope: !12363)
!12375 = !DILocation(line: 114, column: 31, scope: !12363)
!12376 = !DILocation(line: 115, column: 12, scope: !12363)
!12377 = !DILocation(line: 117, column: 10, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12363, file: !12219, line: 117, column: 7)
!12379 = !DILocation(line: 112, column: 39, scope: !12364)
!12380 = !DILocation(line: 123, column: 1, scope: !12352)
!12381 = distinct !DISubprogram(name: "device_from_handle", scope: !334, file: !334, line: 439, type: !12382, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12384)
!12382 = !DISubroutineType(types: !12383)
!12383 = !{!12222, !350}
!12384 = !{!12385, !12386, !12387}
!12385 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12381, file: !334, line: 439, type: !350)
!12386 = !DILocalVariable(name: "dev", scope: !12381, file: !334, line: 443, type: !12222)
!12387 = !DILocalVariable(name: "numdev", scope: !12381, file: !334, line: 444, type: !239)
!12388 = !DILocation(line: 0, scope: !12381)
!12389 = !DILocation(line: 446, column: 7, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12381, file: !334, line: 446, column: 6)
!12391 = !DILocation(line: 446, column: 18, scope: !12390)
!12392 = !DILocation(line: 446, column: 23, scope: !12390)
!12393 = !DILocation(line: 450, column: 2, scope: !12381)
!12394 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12219, file: !12219, line: 135, type: !12307, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12395)
!12395 = !{!12396, !12397, !12398, !12399, !12400}
!12396 = !DILocalVariable(name: "dev", arg: 1, scope: !12394, file: !12219, line: 135, type: !12222)
!12397 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12394, file: !12219, line: 136, type: !12309)
!12398 = !DILocalVariable(name: "context", arg: 3, scope: !12394, file: !12219, line: 137, type: !113)
!12399 = !DILocalVariable(name: "handle_count", scope: !12394, file: !12219, line: 139, type: !239)
!12400 = !DILocalVariable(name: "handles", scope: !12394, file: !12219, line: 140, type: !348)
!12401 = !DILocation(line: 0, scope: !12394)
!12402 = !DILocation(line: 139, column: 2, scope: !12394)
!12403 = !DILocation(line: 139, column: 9, scope: !12394)
!12404 = !DILocation(line: 140, column: 35, scope: !12394)
!12405 = !DILocation(line: 142, column: 33, scope: !12394)
!12406 = !DILocation(line: 142, column: 9, scope: !12394)
!12407 = !DILocation(line: 143, column: 1, scope: !12394)
!12408 = !DILocation(line: 142, column: 2, scope: !12394)
!12409 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !334, file: !334, line: 573, type: !12328, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12410)
!12410 = !{!12411, !12412, !12413, !12414, !12415}
!12411 = !DILocalVariable(name: "dev", arg: 1, scope: !12409, file: !334, line: 573, type: !12222)
!12412 = !DILocalVariable(name: "count", arg: 2, scope: !12409, file: !334, line: 573, type: !2413)
!12413 = !DILocalVariable(name: "rv", scope: !12409, file: !334, line: 575, type: !348)
!12414 = !DILocalVariable(name: "region", scope: !12409, file: !334, line: 576, type: !239)
!12415 = !DILocalVariable(name: "i", scope: !12409, file: !334, line: 577, type: !239)
!12416 = !DILocation(line: 0, scope: !12409)
!12417 = !DILocation(line: 575, column: 35, scope: !12409)
!12418 = !DILocation(line: 579, column: 9, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12409, file: !334, line: 579, column: 6)
!12420 = !DILocation(line: 579, column: 6, scope: !12409)
!12421 = !DILocation(line: 582, column: 8, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !334, line: 582, column: 8)
!12423 = distinct !DILexicalBlock(scope: !12424, file: !334, line: 581, column: 23)
!12424 = distinct !DILexicalBlock(scope: !12419, file: !334, line: 579, column: 18)
!12425 = !DILocation(line: 582, column: 12, scope: !12422)
!12426 = !DILocation(line: 585, column: 6, scope: !12423)
!12427 = !DILocation(line: 0, scope: !12424)
!12428 = !DILocation(line: 581, column: 17, scope: !12424)
!12429 = !DILocation(line: 581, column: 3, scope: !12424)
!12430 = !DILocation(line: 588, column: 10, scope: !12424)
!12431 = !DILocation(line: 588, column: 16, scope: !12424)
!12432 = !DILocation(line: 589, column: 4, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12424, file: !334, line: 588, column: 39)
!12434 = !DILocation(line: 588, column: 3, scope: !12424)
!12435 = distinct !{!12435, !12434, !12436}
!12436 = !DILocation(line: 590, column: 3, scope: !12424)
!12437 = !DILocation(line: 591, column: 10, scope: !12424)
!12438 = !DILocation(line: 592, column: 2, scope: !12424)
!12439 = !DILocation(line: 575, column: 25, scope: !12409)
!12440 = !DILocation(line: 594, column: 2, scope: !12409)
!12441 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1823, file: !1823, line: 49, type: !12442, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1820, retainedNodes: !2032)
!12442 = !DISubroutineType(types: !12443)
!12443 = !{!280}
!12444 = !DILocation(line: 51, column: 10, scope: !12441)
!12445 = !DILocation(line: 51, column: 20, scope: !12441)
!12446 = !DILocation(line: 51, column: 2, scope: !12441)
!12447 = distinct !DISubprogram(name: "coredump", scope: !2927, file: !2927, line: 209, type: !12448, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12597)
!12448 = !DISubroutineType(types: !12449)
!12449 = !{null, !32, !12450, !12494}
!12450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12451, size: 32)
!12451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12452)
!12452 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2543, line: 141, baseType: !12453)
!12453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2543, line: 97, size: 256, elements: !12454)
!12454 = !{!12455}
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12453, file: !2543, line: 107, baseType: !12456, size: 256)
!12456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !12457)
!12457 = !{!12458, !12463, !12468, !12473, !12478, !12483, !12488, !12493}
!12458 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !2543, line: 99, baseType: !12459, size: 32)
!12459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12456, file: !2543, line: 99, size: 32, elements: !12460)
!12460 = !{!12461, !12462}
!12461 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12459, file: !2543, line: 99, baseType: !118, size: 32)
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12459, file: !2543, line: 99, baseType: !118, size: 32)
!12463 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !2543, line: 100, baseType: !12464, size: 32, offset: 32)
!12464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12456, file: !2543, line: 100, size: 32, elements: !12465)
!12465 = !{!12466, !12467}
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12464, file: !2543, line: 100, baseType: !118, size: 32)
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12464, file: !2543, line: 100, baseType: !118, size: 32)
!12468 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !2543, line: 101, baseType: !12469, size: 32, offset: 64)
!12469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12456, file: !2543, line: 101, size: 32, elements: !12470)
!12470 = !{!12471, !12472}
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12469, file: !2543, line: 101, baseType: !118, size: 32)
!12472 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12469, file: !2543, line: 101, baseType: !118, size: 32)
!12473 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !2543, line: 102, baseType: !12474, size: 32, offset: 96)
!12474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12456, file: !2543, line: 102, size: 32, elements: !12475)
!12475 = !{!12476, !12477}
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12474, file: !2543, line: 102, baseType: !118, size: 32)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12474, file: !2543, line: 102, baseType: !118, size: 32)
!12478 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !2543, line: 103, baseType: !12479, size: 32, offset: 128)
!12479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12456, file: !2543, line: 103, size: 32, elements: !12480)
!12480 = !{!12481, !12482}
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12479, file: !2543, line: 103, baseType: !118, size: 32)
!12482 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12479, file: !2543, line: 103, baseType: !118, size: 32)
!12483 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !2543, line: 104, baseType: !12484, size: 32, offset: 160)
!12484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12456, file: !2543, line: 104, size: 32, elements: !12485)
!12485 = !{!12486, !12487}
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12484, file: !2543, line: 104, baseType: !118, size: 32)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12484, file: !2543, line: 104, baseType: !118, size: 32)
!12488 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !2543, line: 105, baseType: !12489, size: 32, offset: 192)
!12489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12456, file: !2543, line: 105, size: 32, elements: !12490)
!12490 = !{!12491, !12492}
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12489, file: !2543, line: 105, baseType: !118, size: 32)
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12489, file: !2543, line: 105, baseType: !118, size: 32)
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12456, file: !2543, line: 106, baseType: !118, size: 32, offset: 224)
!12494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12495, size: 32)
!12495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !12496)
!12496 = !{!12497, !12555, !12567, !12568, !12569, !12570, !12571, !12577, !12592}
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12495, file: !143, line: 247, baseType: !12498, size: 384)
!12498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !12499)
!12499 = !{!12500, !12524, !12531, !12532, !12533, !12542, !12543, !12544}
!12500 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !143, line: 60, baseType: !12501, size: 64)
!12501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !143, line: 60, size: 64, elements: !12502)
!12502 = !{!12503, !12518}
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12501, file: !143, line: 61, baseType: !12504, size: 64)
!12504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !12505)
!12505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !12506)
!12506 = !{!12507, !12513}
!12507 = !DIDerivedType(tag: DW_TAG_member, scope: !12505, file: !153, line: 38, baseType: !12508, size: 32)
!12508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12505, file: !153, line: 38, size: 32, elements: !12509)
!12509 = !{!12510, !12512}
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12508, file: !153, line: 39, baseType: !12511, size: 32)
!12511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12505, size: 32)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12508, file: !153, line: 40, baseType: !12511, size: 32)
!12513 = !DIDerivedType(tag: DW_TAG_member, scope: !12505, file: !153, line: 42, baseType: !12514, size: 32, offset: 32)
!12514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12505, file: !153, line: 42, size: 32, elements: !12515)
!12515 = !{!12516, !12517}
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12514, file: !153, line: 43, baseType: !12511, size: 32)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12514, file: !153, line: 44, baseType: !12511, size: 32)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12501, file: !143, line: 62, baseType: !12519, size: 64)
!12519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !12520)
!12520 = !{!12521}
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12519, file: !169, line: 50, baseType: !12522, size: 64)
!12522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12523, size: 64, elements: !174)
!12523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12519, size: 32)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12498, file: !143, line: 68, baseType: !12525, size: 32, offset: 64)
!12525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12526, size: 32)
!12526 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !12527)
!12527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !12528)
!12528 = !{!12529}
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12527, file: !179, line: 232, baseType: !12530, size: 64)
!12530 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !12505)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12498, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12498, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!12533 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !143, line: 90, baseType: !12534, size: 16, offset: 112)
!12534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !143, line: 90, size: 16, elements: !12535)
!12535 = !{!12536, !12541}
!12536 = !DIDerivedType(tag: DW_TAG_member, scope: !12534, file: !143, line: 91, baseType: !12537, size: 16)
!12537 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12534, file: !143, line: 91, size: 16, elements: !12538)
!12538 = !{!12539, !12540}
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12537, file: !143, line: 96, baseType: !195, size: 8)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12537, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12534, file: !143, line: 100, baseType: !199, size: 16)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12498, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12498, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12498, file: !143, line: 131, baseType: !12545, size: 192, offset: 192)
!12545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !12546)
!12546 = !{!12547, !12548, !12554}
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12545, file: !179, line: 245, baseType: !12504, size: 64)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12545, file: !179, line: 246, baseType: !12549, size: 32, offset: 64)
!12549 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !12550)
!12550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12551, size: 32)
!12551 = !DISubroutineType(types: !12552)
!12552 = !{null, !12553}
!12553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12545, size: 32)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12545, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12495, file: !143, line: 250, baseType: !12556, size: 288, offset: 384)
!12556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !12557)
!12557 = !{!12558, !12559, !12560, !12561, !12562, !12563, !12564, !12565, !12566}
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12556, file: !216, line: 26, baseType: !118, size: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12556, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12556, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12556, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12556, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12556, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12556, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12556, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12556, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12495, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12495, file: !143, line: 256, baseType: !12526, size: 64, offset: 704)
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12495, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12495, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12495, file: !143, line: 300, baseType: !12572, size: 96, offset: 1056)
!12572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !12573)
!12573 = !{!12574, !12575, !12576}
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12572, file: !143, line: 153, baseType: !22, size: 32)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12572, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12572, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12495, file: !143, line: 325, baseType: !12578, size: 32, offset: 1152)
!12578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12579, size: 32)
!12579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !12580)
!12580 = !{!12581, !12587, !12588}
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12579, file: !245, line: 5074, baseType: !12582, size: 96)
!12582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !12583)
!12583 = !{!12584, !12585, !12586}
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12582, file: !249, line: 57, baseType: !252, size: 32)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12582, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12582, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12579, file: !245, line: 5075, baseType: !12526, size: 64, offset: 96)
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12579, file: !245, line: 5076, baseType: !12589, size: 32, offset: 160)
!12589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !12590)
!12590 = !{!12591}
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12589, file: !259, line: 52, baseType: !22, size: 32)
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12495, file: !143, line: 343, baseType: !12593, size: 64, offset: 1184)
!12593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !12594)
!12594 = !{!12595, !12596}
!12595 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12593, file: !216, line: 63, baseType: !118, size: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12593, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!12597 = !{!12598, !12599, !12600}
!12598 = !DILocalVariable(name: "reason", arg: 1, scope: !12447, file: !2927, line: 209, type: !32)
!12599 = !DILocalVariable(name: "esf", arg: 2, scope: !12447, file: !2927, line: 209, type: !12450)
!12600 = !DILocalVariable(name: "thread", arg: 3, scope: !12447, file: !2927, line: 210, type: !12494)
!12601 = !DILocation(line: 0, scope: !12447)
!12602 = !DILocation(line: 212, column: 1, scope: !12447)
!12603 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2927, file: !2927, line: 214, type: !12604, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12606)
!12604 = !DISubroutineType(types: !12605)
!12605 = !{null, !22, !22}
!12606 = !{!12607, !12608}
!12607 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12603, file: !2927, line: 214, type: !22)
!12608 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12603, file: !2927, line: 214, type: !22)
!12609 = !DILocation(line: 0, scope: !12603)
!12610 = !DILocation(line: 216, column: 1, scope: !12603)
!12611 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2927, file: !2927, line: 218, type: !12612, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12614)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{null, !284, !239}
!12614 = !{!12615, !12616}
!12615 = !DILocalVariable(name: "buf", arg: 1, scope: !12611, file: !2927, line: 218, type: !284)
!12616 = !DILocalVariable(name: "buflen", arg: 2, scope: !12611, file: !2927, line: 218, type: !239)
!12617 = !DILocation(line: 0, scope: !12611)
!12618 = !DILocation(line: 220, column: 1, scope: !12611)
!12619 = distinct !DISubprogram(name: "coredump_query", scope: !2927, file: !2927, line: 222, type: !12620, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12622)
!12620 = !DISubroutineType(types: !12621)
!12621 = !{!119, !2926, !113}
!12622 = !{!12623, !12624}
!12623 = !DILocalVariable(name: "query_id", arg: 1, scope: !12619, file: !2927, line: 222, type: !2926)
!12624 = !DILocalVariable(name: "arg", arg: 2, scope: !12619, file: !2927, line: 222, type: !113)
!12625 = !DILocation(line: 0, scope: !12619)
!12626 = !DILocation(line: 224, column: 2, scope: !12619)
!12627 = distinct !DISubprogram(name: "coredump_cmd", scope: !2927, file: !2927, line: 227, type: !12628, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12630)
!12628 = !DISubroutineType(types: !12629)
!12629 = !{!119, !2933, !113}
!12630 = !{!12631, !12632}
!12631 = !DILocalVariable(name: "query_id", arg: 1, scope: !12627, file: !2927, line: 227, type: !2933)
!12632 = !DILocalVariable(name: "arg", arg: 2, scope: !12627, file: !2927, line: 227, type: !113)
!12633 = !DILocation(line: 0, scope: !12627)
!12634 = !DILocation(line: 229, column: 2, scope: !12627)
!12635 = distinct !DISubprogram(name: "arch_system_halt", scope: !12636, file: !12636, line: 23, type: !6004, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12637)
!12636 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12637 = !{!12638}
!12638 = !DILocalVariable(name: "reason", arg: 1, scope: !12635, file: !12636, line: 23, type: !32)
!12639 = !DILocation(line: 0, scope: !12635)
!12640 = !DILocation(line: 55, column: 2, scope: !12641, inlinedAt: !12645)
!12641 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12642)
!12642 = !{!12643, !12644}
!12643 = !DILocalVariable(name: "key", scope: !12641, file: !5993, line: 44, type: !32)
!12644 = !DILocalVariable(name: "tmp", scope: !12641, file: !5993, line: 53, type: !32)
!12645 = distinct !DILocation(line: 31, column: 8, scope: !12635)
!12646 = !{i64 2227783}
!12647 = !DILocation(line: 0, scope: !12641, inlinedAt: !12645)
!12648 = !DILocation(line: 32, column: 2, scope: !12635)
!12649 = !DILocation(line: 32, column: 2, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12636, line: 32, column: 2)
!12651 = distinct !DILexicalBlock(scope: !12635, file: !12636, line: 32, column: 2)
!12652 = distinct !{!12652, !12653, !12654}
!12653 = !DILocation(line: 32, column: 2, scope: !12651)
!12654 = !DILocation(line: 34, column: 2, scope: !12651)
!12655 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12636, file: !12636, line: 39, type: !12656, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12658)
!12656 = !DISubroutineType(types: !12657)
!12657 = !{null, !32, !12450}
!12658 = !{!12659, !12660}
!12659 = !DILocalVariable(name: "reason", arg: 1, scope: !12655, file: !12636, line: 39, type: !32)
!12660 = !DILocalVariable(name: "esf", arg: 2, scope: !12655, file: !12636, line: 40, type: !12450)
!12661 = !DILocation(line: 0, scope: !12655)
!12662 = !DILocation(line: 45, column: 2, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !12636, line: 45, column: 2)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !12636, line: 45, column: 2)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !12636, line: 45, column: 2)
!12666 = distinct !DILexicalBlock(scope: !12655, file: !12636, line: 45, column: 2)
!12667 = !DILocation(line: 46, column: 2, scope: !12655)
!12668 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12636, file: !12636, line: 81, type: !6004, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12669)
!12669 = !{!12670}
!12670 = !DILocalVariable(name: "reason", arg: 1, scope: !12668, file: !12636, line: 81, type: !32)
!12671 = !DILocation(line: 0, scope: !12668)
!12672 = !DILocation(line: 83, column: 2, scope: !12668)
!12673 = distinct !DISubprogram(name: "z_fatal_error", scope: !12636, file: !12636, line: 96, type: !12656, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12674)
!12674 = !{!12675, !12676, !12677, !12678}
!12675 = !DILocalVariable(name: "reason", arg: 1, scope: !12673, file: !12636, line: 96, type: !32)
!12676 = !DILocalVariable(name: "esf", arg: 2, scope: !12673, file: !12636, line: 96, type: !12450)
!12677 = !DILocalVariable(name: "key", scope: !12673, file: !12636, line: 102, type: !32)
!12678 = !DILocalVariable(name: "thread", scope: !12673, file: !12636, line: 103, type: !12494)
!12679 = !DILocation(line: 0, scope: !12673)
!12680 = !DILocation(line: 55, column: 2, scope: !12641, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 102, column: 21, scope: !12673)
!12682 = !DILocation(line: 0, scope: !12641, inlinedAt: !12681)
!12683 = !DILocation(line: 104, column: 4, scope: !12673)
!12684 = !DILocation(line: 109, column: 2, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12686, file: !12636, line: 109, column: 2)
!12686 = distinct !DILexicalBlock(scope: !12687, file: !12636, line: 109, column: 2)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !12636, line: 109, column: 2)
!12688 = distinct !DILexicalBlock(scope: !12673, file: !12636, line: 109, column: 2)
!12689 = !DILocation(line: 119, column: 11, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12673, file: !12636, line: 119, column: 6)
!12691 = !DILocation(line: 119, column: 20, scope: !12690)
!12692 = !DILocalVariable(name: "esf", arg: 1, scope: !12693, file: !7364, line: 71, type: !12450)
!12693 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7364, file: !7364, line: 71, type: !12694, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12696)
!12694 = !DISubroutineType(types: !12695)
!12695 = !{!345, !12450}
!12696 = !{!12692}
!12697 = !DILocation(line: 0, scope: !12693, inlinedAt: !12698)
!12698 = distinct !DILocation(line: 119, column: 23, scope: !12690)
!12699 = !DILocation(line: 73, column: 21, scope: !12693, inlinedAt: !12698)
!12700 = !DILocation(line: 73, column: 26, scope: !12693, inlinedAt: !12698)
!12701 = !DILocation(line: 73, column: 9, scope: !12693, inlinedAt: !12698)
!12702 = !DILocation(line: 119, column: 6, scope: !12673)
!12703 = !DILocation(line: 120, column: 3, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !12636, line: 120, column: 3)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !12636, line: 120, column: 3)
!12706 = distinct !DILexicalBlock(scope: !12707, file: !12636, line: 120, column: 3)
!12707 = distinct !DILexicalBlock(scope: !12708, file: !12636, line: 120, column: 3)
!12708 = distinct !DILexicalBlock(scope: !12690, file: !12636, line: 119, column: 57)
!12709 = !DILocation(line: 121, column: 2, scope: !12708)
!12710 = !DILocation(line: 124, column: 2, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !12636, line: 124, column: 2)
!12712 = distinct !DILexicalBlock(scope: !12713, file: !12636, line: 124, column: 2)
!12713 = distinct !DILexicalBlock(scope: !12714, file: !12636, line: 124, column: 2)
!12714 = distinct !DILexicalBlock(scope: !12673, file: !12636, line: 124, column: 2)
!12715 = !DILocation(line: 131, column: 2, scope: !12673)
!12716 = !DILocation(line: 0, scope: !12693, inlinedAt: !12717)
!12717 = distinct !DILocation(line: 163, column: 24, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12719, file: !12636, line: 163, column: 7)
!12719 = distinct !DILexicalBlock(scope: !12720, file: !12636, line: 160, column: 9)
!12720 = distinct !DILexicalBlock(scope: !12673, file: !12636, line: 146, column: 6)
!12721 = !DILocation(line: 73, column: 21, scope: !12693, inlinedAt: !12717)
!12722 = !DILocation(line: 73, column: 26, scope: !12693, inlinedAt: !12717)
!12723 = !DILocation(line: 73, column: 9, scope: !12693, inlinedAt: !12717)
!12724 = !DILocation(line: 163, column: 7, scope: !12719)
!12725 = !DILocalVariable(name: "key", arg: 1, scope: !12726, file: !5993, line: 84, type: !32)
!12726 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12727)
!12727 = !{!12725}
!12728 = !DILocation(line: 0, scope: !12726, inlinedAt: !12729)
!12729 = distinct !DILocation(line: 171, column: 4, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12718, file: !12636, line: 163, column: 58)
!12731 = !DILocation(line: 95, column: 2, scope: !12726, inlinedAt: !12729)
!12732 = !{i64 2228600}
!12733 = !DILocation(line: 172, column: 4, scope: !12730)
!12734 = !DILocation(line: 163, column: 21, scope: !12718)
!12735 = !DILocation(line: 178, column: 15, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !12636, line: 178, column: 8)
!12737 = distinct !DILexicalBlock(scope: !12718, file: !12636, line: 174, column: 10)
!12738 = !DILocation(line: 0, scope: !12726, inlinedAt: !12739)
!12739 = distinct !DILocation(line: 179, column: 5, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12736, file: !12636, line: 178, column: 38)
!12741 = !DILocation(line: 0, scope: !12726, inlinedAt: !12742)
!12742 = distinct !DILocation(line: 186, column: 2, scope: !12673)
!12743 = !DILocation(line: 178, column: 8, scope: !12737)
!12744 = !DILocation(line: 189, column: 3, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12746, file: !12636, line: 188, column: 41)
!12746 = distinct !DILexicalBlock(scope: !12673, file: !12636, line: 188, column: 6)
!12747 = !DILocation(line: 191, column: 1, scope: !12673)
!12748 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !12749, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !2032)
!12749 = !DISubroutineType(types: !12750)
!12750 = !{!12751}
!12751 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !12494)
!12752 = !DILocation(line: 535, column: 9, scope: !12748)
!12753 = !DILocation(line: 535, column: 2, scope: !12748)
!12754 = distinct !DISubprogram(name: "reason_to_str", scope: !12636, file: !12636, line: 62, type: !12755, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12757)
!12755 = !DISubroutineType(types: !12756)
!12756 = !{!278, !32}
!12757 = !{!12758}
!12758 = !DILocalVariable(name: "reason", arg: 1, scope: !12754, file: !12636, line: 62, type: !32)
!12759 = !DILocation(line: 0, scope: !12754)
!12760 = !DILocation(line: 64, column: 2, scope: !12754)
!12761 = !DILocation(line: 0, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12754, file: !12636, line: 64, column: 18)
!12763 = !DILocation(line: 78, column: 1, scope: !12754)
!12764 = distinct !DISubprogram(name: "thread_name_get", scope: !12636, file: !12636, line: 51, type: !12765, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12767)
!12765 = !DISubroutineType(types: !12766)
!12766 = !{!278, !12494}
!12767 = !{!12768, !12769}
!12768 = !DILocalVariable(name: "thread", arg: 1, scope: !12764, file: !12636, line: 51, type: !12494)
!12769 = !DILocalVariable(name: "thread_name", scope: !12764, file: !12636, line: 53, type: !278)
!12770 = !DILocation(line: 0, scope: !12764)
!12771 = !DILocation(line: 53, column: 36, scope: !12764)
!12772 = !DILocation(line: 53, column: 28, scope: !12764)
!12773 = !DILocation(line: 53, column: 47, scope: !12764)
!12774 = !DILocation(line: 55, column: 19, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12764, file: !12636, line: 55, column: 6)
!12776 = !DILocation(line: 55, column: 28, scope: !12775)
!12777 = !DILocation(line: 55, column: 32, scope: !12775)
!12778 = !DILocation(line: 55, column: 47, scope: !12775)
!12779 = !DILocation(line: 55, column: 6, scope: !12764)
!12780 = !DILocation(line: 57, column: 2, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12775, file: !12636, line: 55, column: 57)
!12782 = !DILocation(line: 59, column: 2, scope: !12764)
!12783 = distinct !DISubprogram(name: "k_thread_abort", scope: !3211, file: !3211, line: 188, type: !12784, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !12786)
!12784 = !DISubroutineType(types: !12785)
!12785 = !{null, !12751}
!12786 = !{!12787}
!12787 = !DILocalVariable(name: "thread", arg: 1, scope: !12783, file: !3211, line: 188, type: !12751)
!12788 = !DILocation(line: 0, scope: !12783)
!12789 = !DILocation(line: 197, column: 2, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12783, file: !3211, line: 197, column: 2)
!12791 = !{i64 2154850138}
!12792 = !DILocation(line: 198, column: 2, scope: !12783)
!12793 = !DILocation(line: 199, column: 1, scope: !12783)
!12794 = distinct !DISubprogram(name: "z_current_get", scope: !3211, file: !3211, line: 173, type: !12749, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !2032)
!12795 = !DILocation(line: 180, column: 2, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12794, file: !3211, line: 180, column: 2)
!12797 = !{i64 2154850070}
!12798 = !DILocation(line: 181, column: 9, scope: !12794)
!12799 = !DILocation(line: 181, column: 2, scope: !12794)
!12800 = distinct !DISubprogram(name: "z_early_memset", scope: !1831, file: !1831, line: 108, type: !12801, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12803)
!12801 = !DISubroutineType(types: !12802)
!12802 = !{null, !113, !119, !239}
!12803 = !{!12804, !12805, !12806}
!12804 = !DILocalVariable(name: "dst", arg: 1, scope: !12800, file: !1831, line: 108, type: !113)
!12805 = !DILocalVariable(name: "c", arg: 2, scope: !12800, file: !1831, line: 108, type: !119)
!12806 = !DILocalVariable(name: "n", arg: 3, scope: !12800, file: !1831, line: 108, type: !239)
!12807 = !DILocation(line: 0, scope: !12800)
!12808 = !DILocation(line: 110, column: 9, scope: !12800)
!12809 = !DILocation(line: 111, column: 1, scope: !12800)
!12810 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1831, file: !1831, line: 121, type: !12811, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12813)
!12811 = !DISubroutineType(types: !12812)
!12812 = !{null, !113, !13, !239}
!12813 = !{!12814, !12815, !12816}
!12814 = !DILocalVariable(name: "dst", arg: 1, scope: !12810, file: !1831, line: 121, type: !113)
!12815 = !DILocalVariable(name: "src", arg: 2, scope: !12810, file: !1831, line: 121, type: !13)
!12816 = !DILocalVariable(name: "n", arg: 3, scope: !12810, file: !1831, line: 121, type: !239)
!12817 = !DILocation(line: 0, scope: !12810)
!12818 = !DILocation(line: 123, column: 9, scope: !12810)
!12819 = !DILocation(line: 124, column: 1, scope: !12810)
!12820 = distinct !DISubprogram(name: "z_bss_zero", scope: !1831, file: !1831, line: 132, type: !2960, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !2032)
!12821 = !DILocation(line: 143, column: 2, scope: !12820)
!12822 = !DILocation(line: 145, column: 2, scope: !12820)
!12823 = !DILocation(line: 168, column: 1, scope: !12820)
!12824 = distinct !DISubprogram(name: "z_init_cpu", scope: !1831, file: !1831, line: 372, type: !8398, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12825)
!12825 = !{!12826}
!12826 = !DILocalVariable(name: "id", arg: 1, scope: !12824, file: !1831, line: 372, type: !119)
!12827 = !DILocation(line: 0, scope: !12824)
!12828 = !DILocation(line: 374, column: 2, scope: !12824)
!12829 = !DILocation(line: 375, column: 34, scope: !12824)
!12830 = !DILocation(line: 375, column: 19, scope: !12824)
!12831 = !DILocation(line: 375, column: 31, scope: !12824)
!12832 = !DILocation(line: 376, column: 24, scope: !12824)
!12833 = !DILocation(line: 376, column: 19, scope: !12824)
!12834 = !DILocation(line: 376, column: 22, scope: !12824)
!12835 = !DILocation(line: 378, column: 26, scope: !12824)
!12836 = !DILocation(line: 378, column: 4, scope: !12824)
!12837 = !DILocation(line: 378, column: 50, scope: !12824)
!12838 = !DILocation(line: 377, column: 19, scope: !12824)
!12839 = !DILocation(line: 377, column: 29, scope: !12824)
!12840 = !DILocation(line: 384, column: 1, scope: !12824)
!12841 = distinct !DISubprogram(name: "init_idle_thread", scope: !1831, file: !1831, line: 343, type: !8398, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12842)
!12842 = !{!12843, !12844, !12845, !12848}
!12843 = !DILocalVariable(name: "i", arg: 1, scope: !12841, file: !1831, line: 343, type: !119)
!12844 = !DILocalVariable(name: "thread", scope: !12841, file: !1831, line: 345, type: !1923)
!12845 = !DILocalVariable(name: "stack", scope: !12841, file: !1831, line: 346, type: !12846)
!12846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12847, size: 32)
!12847 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !2041)
!12848 = !DILocalVariable(name: "tname", scope: !12841, file: !1831, line: 354, type: !106)
!12849 = !DILocation(line: 0, scope: !12841)
!12850 = !DILocation(line: 345, column: 29, scope: !12841)
!12851 = !DILocation(line: 346, column: 28, scope: !12841)
!12852 = !DILocation(line: 362, column: 37, scope: !12841)
!12853 = !DILocation(line: 362, column: 36, scope: !12841)
!12854 = !DILocation(line: 361, column: 2, scope: !12841)
!12855 = !DILocation(line: 365, column: 2, scope: !12841)
!12856 = !DILocation(line: 370, column: 1, scope: !12841)
!12857 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !12858, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12860)
!12858 = !DISubroutineType(types: !12859)
!12859 = !{!106, !12846}
!12860 = !{!12861}
!12861 = !DILocalVariable(name: "sym", arg: 1, scope: !12857, file: !128, line: 331, type: !12846)
!12862 = !DILocation(line: 0, scope: !12857)
!12863 = !DILocation(line: 333, column: 21, scope: !12857)
!12864 = !DILocation(line: 333, column: 2, scope: !12857)
!12865 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12866, file: !12866, line: 155, type: !12867, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12869)
!12866 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12867 = !DISubroutineType(types: !12868)
!12868 = !{null, !1923}
!12869 = !{!12870}
!12870 = !DILocalVariable(name: "thread", arg: 1, scope: !12865, file: !12866, line: 155, type: !1923)
!12871 = !DILocation(line: 0, scope: !12865)
!12872 = !DILocation(line: 157, column: 15, scope: !12865)
!12873 = !DILocation(line: 157, column: 28, scope: !12865)
!12874 = !DILocation(line: 158, column: 1, scope: !12865)
!12875 = distinct !DISubprogram(name: "z_cstart", scope: !1831, file: !1831, line: 501, type: !2960, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12876)
!12876 = !{!12877}
!12877 = !DILocalVariable(name: "dummy_thread", scope: !12875, file: !1831, line: 518, type: !1924)
!12878 = !DILocation(line: 507, column: 2, scope: !12875)
!12879 = !DILocation(line: 43, column: 14, scope: !12880, inlinedAt: !12884)
!12880 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12881, file: !12881, line: 40, type: !2960, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12882)
!12881 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12882 = !{!12883}
!12883 = !DILocalVariable(name: "msp", scope: !12880, file: !12881, line: 42, type: !118)
!12884 = distinct !DILocation(line: 44, column: 2, scope: !12885, inlinedAt: !12887)
!12885 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12886, file: !12886, line: 42, type: !2960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !2032)
!12886 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12887 = distinct !DILocation(line: 510, column: 2, scope: !12875)
!12888 = !DILocation(line: 43, column: 3, scope: !12880, inlinedAt: !12884)
!12889 = !DILocation(line: 43, column: 60, scope: !12880, inlinedAt: !12884)
!12890 = !DILocation(line: 0, scope: !12880, inlinedAt: !12884)
!12891 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12892, file: !6314, line: 1153, type: !118)
!12892 = distinct !DISubprogram(name: "__set_MSP", scope: !6314, file: !6314, line: 1153, type: !6409, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12893)
!12893 = !{!12891}
!12894 = !DILocation(line: 0, scope: !12892, inlinedAt: !12895)
!12895 = distinct !DILocation(line: 46, column: 2, scope: !12880, inlinedAt: !12884)
!12896 = !DILocation(line: 1155, column: 3, scope: !12892, inlinedAt: !12895)
!12897 = !{i64 3564901}
!12898 = !DILocation(line: 62, column: 11, scope: !12880, inlinedAt: !12884)
!12899 = !DILocation(line: 102, column: 2, scope: !12900, inlinedAt: !12901)
!12900 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7364, file: !7364, line: 97, type: !2960, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !2032)
!12901 = distinct !DILocation(line: 45, column: 2, scope: !12885, inlinedAt: !12887)
!12902 = !DILocation(line: 108, column: 2, scope: !12900, inlinedAt: !12901)
!12903 = !DILocation(line: 112, column: 2, scope: !12900, inlinedAt: !12901)
!12904 = !DILocation(line: 113, column: 2, scope: !12900, inlinedAt: !12901)
!12905 = !DILocation(line: 114, column: 2, scope: !12900, inlinedAt: !12901)
!12906 = !DILocation(line: 116, column: 2, scope: !12900, inlinedAt: !12901)
!12907 = !DILocation(line: 123, column: 13, scope: !12900, inlinedAt: !12901)
!12908 = !DILocation(line: 46, column: 2, scope: !12885, inlinedAt: !12887)
!12909 = !DILocation(line: 47, column: 2, scope: !12885, inlinedAt: !12887)
!12910 = !DILocation(line: 174, column: 12, scope: !12911, inlinedAt: !12912)
!12911 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7364, file: !7364, line: 169, type: !2960, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !2032)
!12912 = distinct !DILocation(line: 48, column: 2, scope: !12885, inlinedAt: !12887)
!12913 = !DILocation(line: 179, column: 12, scope: !12911, inlinedAt: !12912)
!12914 = !DILocation(line: 50, column: 2, scope: !12885, inlinedAt: !12887)
!12915 = !DILocation(line: 57, column: 2, scope: !12885, inlinedAt: !12887)
!12916 = !DILocation(line: 518, column: 2, scope: !12875)
!12917 = !DILocation(line: 518, column: 18, scope: !12875)
!12918 = !DILocation(line: 520, column: 2, scope: !12875)
!12919 = !DILocation(line: 523, column: 2, scope: !12875)
!12920 = !DILocation(line: 526, column: 2, scope: !12875)
!12921 = !DILocation(line: 527, column: 2, scope: !12875)
!12922 = !DILocation(line: 543, column: 24, scope: !12875)
!12923 = !DILocation(line: 543, column: 2, scope: !12875)
!12924 = !DILocation(line: 0, scope: !2065)
!12925 = !DILocation(line: 246, column: 15, scope: !2083)
!12926 = !DILocation(line: 246, column: 36, scope: !2082)
!12927 = !DILocation(line: 246, column: 2, scope: !2083)
!12928 = !DILocation(line: 247, column: 37, scope: !2081)
!12929 = !DILocation(line: 0, scope: !2081)
!12930 = !DILocation(line: 248, column: 19, scope: !2081)
!12931 = !DILocation(line: 248, column: 12, scope: !2081)
!12932 = !DILocation(line: 250, column: 11, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !2081, file: !1831, line: 250, column: 7)
!12934 = !DILocation(line: 250, column: 7, scope: !2081)
!12935 = !DILocation(line: 254, column: 11, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !1831, line: 254, column: 8)
!12937 = distinct !DILexicalBlock(scope: !12933, file: !1831, line: 250, column: 20)
!12938 = !DILocation(line: 254, column: 8, scope: !12937)
!12939 = !DILocation(line: 255, column: 9, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12936, file: !1831, line: 254, column: 17)
!12941 = !DILocation(line: 258, column: 9, scope: !12940)
!12942 = !DILocation(line: 261, column: 28, scope: !12940)
!12943 = !DILocation(line: 261, column: 10, scope: !12940)
!12944 = !DILocation(line: 261, column: 17, scope: !12940)
!12945 = !DILocation(line: 261, column: 26, scope: !12940)
!12946 = !DILocation(line: 262, column: 4, scope: !12940)
!12947 = !DILocation(line: 263, column: 9, scope: !12937)
!12948 = !DILocation(line: 263, column: 16, scope: !12937)
!12949 = !DILocation(line: 263, column: 28, scope: !12937)
!12950 = !DILocation(line: 264, column: 3, scope: !12937)
!12951 = !DILocation(line: 246, column: 60, scope: !2082)
!12952 = distinct !{!12952, !12927, !12953}
!12953 = !DILocation(line: 265, column: 2, scope: !2083)
!12954 = !DILocation(line: 266, column: 1, scope: !2065)
!12955 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6354, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12956)
!12956 = !{!12957, !12958}
!12957 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12955, file: !533, line: 1814, type: !790)
!12958 = !DILocalVariable(name: "priority", arg: 2, scope: !12955, file: !533, line: 1814, type: !118)
!12959 = !DILocation(line: 0, scope: !12955)
!12960 = !DILocation(line: 1822, column: 48, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !533, line: 1821, column: 3)
!12962 = distinct !DILexicalBlock(scope: !12955, file: !533, line: 1816, column: 7)
!12963 = !DILocation(line: 1822, column: 32, scope: !12961)
!12964 = !DILocation(line: 1822, column: 40, scope: !12961)
!12965 = !DILocation(line: 1822, column: 5, scope: !12961)
!12966 = !DILocation(line: 1822, column: 46, scope: !12961)
!12967 = !DILocation(line: 1824, column: 1, scope: !12955)
!12968 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12886, file: !12886, line: 32, type: !2960, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!12969 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12970, file: !12970, line: 215, type: !12867, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12971)
!12970 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12969, file: !12970, line: 215, type: !1923)
!12973 = !DILocation(line: 0, scope: !12969)
!12974 = !DILocation(line: 217, column: 21, scope: !12969)
!12975 = !DILocation(line: 217, column: 34, scope: !12969)
!12976 = !DILocation(line: 221, column: 21, scope: !12969)
!12977 = !DILocation(line: 221, column: 34, scope: !12969)
!12978 = !DILocation(line: 223, column: 27, scope: !12969)
!12979 = !DILocation(line: 223, column: 33, scope: !12969)
!12980 = !DILocation(line: 224, column: 27, scope: !12969)
!12981 = !DILocation(line: 224, column: 32, scope: !12969)
!12982 = !DILocation(line: 232, column: 16, scope: !12969)
!12983 = !DILocation(line: 232, column: 30, scope: !12969)
!12984 = !DILocation(line: 239, column: 24, scope: !12969)
!12985 = !DILocation(line: 240, column: 1, scope: !12969)
!12986 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1831, file: !1831, line: 399, type: !12987, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !12989)
!12987 = !DISubroutineType(types: !12988)
!12988 = !{!106}
!12989 = !{!12990}
!12990 = !DILocalVariable(name: "stack_ptr", scope: !12986, file: !1831, line: 401, type: !106)
!12991 = !DILocation(line: 404, column: 2, scope: !12986)
!12992 = !DILocation(line: 416, column: 24, scope: !12986)
!12993 = !DILocation(line: 418, column: 14, scope: !12986)
!12994 = !DILocation(line: 0, scope: !12986)
!12995 = !DILocation(line: 423, column: 2, scope: !12986)
!12996 = !DILocation(line: 424, column: 2, scope: !12986)
!12997 = !DILocation(line: 426, column: 2, scope: !12986)
!12998 = !DILocation(line: 428, column: 2, scope: !12986)
!12999 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1831, file: !1831, line: 432, type: !13000, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !13002)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{null, !106}
!13002 = !{!13003}
!13003 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12999, file: !1831, line: 432, type: !106)
!13004 = !DILocation(line: 0, scope: !12999)
!13005 = !DILocation(line: 435, column: 2, scope: !12999)
!13006 = !DILocation(line: 445, column: 2, scope: !12999)
!13007 = distinct !DISubprogram(name: "bg_thread_main", scope: !1831, file: !1831, line: 277, type: !111, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !13008)
!13008 = !{!13009, !13010, !13011}
!13009 = !DILocalVariable(name: "unused1", arg: 1, scope: !13007, file: !1831, line: 277, type: !113)
!13010 = !DILocalVariable(name: "unused2", arg: 2, scope: !13007, file: !1831, line: 277, type: !113)
!13011 = !DILocalVariable(name: "unused3", arg: 3, scope: !13007, file: !1831, line: 277, type: !113)
!13012 = !DILocation(line: 0, scope: !13007)
!13013 = !DILocation(line: 291, column: 20, scope: !13007)
!13014 = !DILocation(line: 293, column: 2, scope: !13007)
!13015 = !DILocation(line: 297, column: 2, scope: !13007)
!13016 = !DILocation(line: 305, column: 2, scope: !13007)
!13017 = !DILocation(line: 307, column: 2, scope: !13007)
!13018 = !DILocation(line: 330, column: 8, scope: !13007)
!13019 = !DILocation(line: 333, column: 34, scope: !13007)
!13020 = !DILocation(line: 339, column: 1, scope: !13007)
!13021 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2094, file: !2094, line: 45, type: !13022, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13030)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{null, !13024, !113}
!13024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !245, line: 103, baseType: !13025)
!13025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13026, size: 32)
!13026 = !DISubroutineType(types: !13027)
!13027 = !{null, !13028, !113}
!13028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13029, size: 32)
!13029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2099)
!13030 = !{!13031, !13032}
!13031 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13021, file: !2094, line: 45, type: !13024)
!13032 = !DILocalVariable(name: "user_data", arg: 2, scope: !13021, file: !2094, line: 45, type: !113)
!13033 = !DILocation(line: 0, scope: !13021)
!13034 = !DILocation(line: 71, column: 1, scope: !13021)
!13035 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2094, file: !2094, line: 73, type: !13022, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13036)
!13036 = !{!13037, !13038}
!13037 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13035, file: !2094, line: 73, type: !13024)
!13038 = !DILocalVariable(name: "user_data", arg: 2, scope: !13035, file: !2094, line: 73, type: !113)
!13039 = !DILocation(line: 0, scope: !13035)
!13040 = !DILocation(line: 95, column: 1, scope: !13035)
!13041 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2094, file: !2094, line: 97, type: !7365, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !2032)
!13042 = !DILocation(line: 1031, column: 3, scope: !13043, inlinedAt: !13046)
!13043 = distinct !DISubprogram(name: "__get_IPSR", scope: !6314, file: !6314, line: 1027, type: !3198, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13044)
!13044 = !{!13045}
!13045 = !DILocalVariable(name: "result", scope: !13043, file: !6314, line: 1029, type: !118)
!13046 = distinct !DILocation(line: 48, column: 10, scope: !13047, inlinedAt: !13048)
!13047 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7364, file: !7364, line: 46, type: !7365, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !2032)
!13048 = distinct !DILocation(line: 99, column: 9, scope: !13041)
!13049 = !{i64 3570552}
!13050 = !DILocation(line: 0, scope: !13043, inlinedAt: !13046)
!13051 = !DILocation(line: 48, column: 9, scope: !13047, inlinedAt: !13048)
!13052 = !DILocation(line: 99, column: 2, scope: !13041)
!13053 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2094, file: !2094, line: 106, type: !2960, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !2032)
!13054 = !DILocation(line: 108, column: 2, scope: !13053)
!13055 = !DILocation(line: 108, column: 17, scope: !13053)
!13056 = !DILocation(line: 108, column: 30, scope: !13053)
!13057 = !DILocation(line: 109, column: 1, scope: !13053)
!13058 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2094, file: !2094, line: 116, type: !2960, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !2032)
!13059 = !DILocation(line: 118, column: 2, scope: !13058)
!13060 = !DILocation(line: 118, column: 17, scope: !13058)
!13061 = !DILocation(line: 118, column: 30, scope: !13058)
!13062 = !DILocation(line: 119, column: 1, scope: !13058)
!13063 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2094, file: !2094, line: 126, type: !7365, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !2032)
!13064 = !DILocation(line: 128, column: 10, scope: !13063)
!13065 = !DILocation(line: 128, column: 25, scope: !13063)
!13066 = !DILocation(line: 128, column: 38, scope: !13063)
!13067 = !DILocation(line: 128, column: 53, scope: !13063)
!13068 = !DILocation(line: 128, column: 2, scope: !13063)
!13069 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2094, file: !2094, line: 187, type: !13070, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13072)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{!119, !2098, !278}
!13072 = !{!13073, !13074}
!13073 = !DILocalVariable(name: "thread", arg: 1, scope: !13069, file: !2094, line: 187, type: !2098)
!13074 = !DILocalVariable(name: "value", arg: 2, scope: !13069, file: !2094, line: 187, type: !278)
!13075 = !DILocation(line: 0, scope: !13069)
!13076 = !DILocation(line: 190, column: 13, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13069, file: !2094, line: 190, column: 6)
!13078 = !DILocation(line: 190, column: 6, scope: !13069)
!13079 = !DILocation(line: 194, column: 10, scope: !13069)
!13080 = !DILocation(line: 194, column: 2, scope: !13069)
!13081 = !DILocation(line: 195, column: 2, scope: !13069)
!13082 = !DILocation(line: 195, column: 47, scope: !13069)
!13083 = !DILocation(line: 199, column: 2, scope: !13069)
!13084 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2094, file: !2094, line: 238, type: !13085, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13087)
!13085 = !DISubroutineType(types: !13086)
!13086 = !{!278, !2098}
!13087 = !{!13088}
!13088 = !DILocalVariable(name: "thread", arg: 1, scope: !13084, file: !2094, line: 238, type: !2098)
!13089 = !DILocation(line: 0, scope: !13084)
!13090 = !DILocation(line: 241, column: 23, scope: !13084)
!13091 = !DILocation(line: 241, column: 2, scope: !13084)
!13092 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2094, file: !2094, line: 248, type: !13093, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13095)
!13093 = !DISubroutineType(types: !13094)
!13094 = !{!119, !2097, !106, !239}
!13095 = !{!13096, !13097, !13098}
!13096 = !DILocalVariable(name: "thread", arg: 1, scope: !13092, file: !2094, line: 248, type: !2097)
!13097 = !DILocalVariable(name: "buf", arg: 2, scope: !13092, file: !2094, line: 248, type: !106)
!13098 = !DILocalVariable(name: "size", arg: 3, scope: !13092, file: !2094, line: 248, type: !239)
!13099 = !DILocation(line: 0, scope: !13092)
!13100 = !DILocation(line: 251, column: 15, scope: !13092)
!13101 = !DILocation(line: 251, column: 2, scope: !13092)
!13102 = !DILocation(line: 252, column: 2, scope: !13092)
!13103 = !DILocation(line: 0, scope: !2093)
!13104 = !DILocation(line: 281, column: 11, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !2093, file: !2094, line: 281, column: 6)
!13106 = !DILocation(line: 281, column: 20, scope: !13105)
!13107 = !DILocation(line: 275, column: 45, scope: !2093)
!13108 = !DILocation(line: 285, column: 10, scope: !2093)
!13109 = !DILocation(line: 0, scope: !2217)
!13110 = !DILocation(line: 293, column: 39, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !2217, file: !2094, line: 293, column: 2)
!13112 = !DILocation(line: 293, column: 2, scope: !2217)
!13113 = !DILocation(line: 273, column: 14, scope: !2093)
!13114 = !DILocation(line: 309, column: 2, scope: !2093)
!13115 = !DILocation(line: 309, column: 11, scope: !2093)
!13116 = !DILocation(line: 311, column: 2, scope: !2093)
!13117 = !DILocation(line: 293, column: 26, scope: !13111)
!13118 = !DILocation(line: 294, column: 9, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13111, file: !2094, line: 293, column: 54)
!13120 = !DILocation(line: 295, column: 21, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13119, file: !2094, line: 295, column: 7)
!13122 = !DILocation(line: 295, column: 28, scope: !13121)
!13123 = !DILocation(line: 295, column: 7, scope: !13119)
!13124 = !DILocation(line: 299, column: 25, scope: !13119)
!13125 = !DILocation(line: 299, column: 41, scope: !13119)
!13126 = !DILocation(line: 300, column: 7, scope: !13119)
!13127 = !DILocation(line: 300, column: 26, scope: !13119)
!13128 = !DILocation(line: 299, column: 10, scope: !13119)
!13129 = !DILocation(line: 299, column: 7, scope: !13119)
!13130 = !DILocation(line: 302, column: 16, scope: !13119)
!13131 = !DILocation(line: 304, column: 20, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13119, file: !2094, line: 304, column: 7)
!13133 = !DILocation(line: 304, column: 7, scope: !13119)
!13134 = !DILocation(line: 305, column: 26, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13132, file: !2094, line: 304, column: 26)
!13136 = !DILocation(line: 305, column: 42, scope: !13135)
!13137 = !DILocation(line: 305, column: 11, scope: !13135)
!13138 = !DILocation(line: 305, column: 8, scope: !13135)
!13139 = !DILocation(line: 306, column: 3, scope: !13135)
!13140 = !DILocation(line: 293, column: 50, scope: !13111)
!13141 = !DILocation(line: 312, column: 1, scope: !2093)
!13142 = distinct !DISubprogram(name: "copy_bytes", scope: !2094, file: !2094, line: 261, type: !13143, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13145)
!13143 = !DISubroutineType(types: !13144)
!13144 = !{!239, !106, !239, !278, !239}
!13145 = !{!13146, !13147, !13148, !13149, !13150}
!13146 = !DILocalVariable(name: "dest", arg: 1, scope: !13142, file: !2094, line: 261, type: !106)
!13147 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13142, file: !2094, line: 261, type: !239)
!13148 = !DILocalVariable(name: "src", arg: 3, scope: !13142, file: !2094, line: 261, type: !278)
!13149 = !DILocalVariable(name: "src_size", arg: 4, scope: !13142, file: !2094, line: 261, type: !239)
!13150 = !DILocalVariable(name: "bytes_to_copy", scope: !13142, file: !2094, line: 263, type: !239)
!13151 = !DILocation(line: 0, scope: !13142)
!13152 = !DILocation(line: 265, column: 18, scope: !13142)
!13153 = !DILocation(line: 266, column: 2, scope: !13142)
!13154 = !DILocation(line: 268, column: 2, scope: !13142)
!13155 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2094, file: !2094, line: 383, type: !13156, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13158)
!13156 = !DISubroutineType(types: !13157)
!13157 = !{null, !2098}
!13158 = !{!13159}
!13159 = !DILocalVariable(name: "thread", arg: 1, scope: !13155, file: !2094, line: 383, type: !2098)
!13160 = !DILocation(line: 0, scope: !13155)
!13161 = !DILocation(line: 387, column: 2, scope: !13155)
!13162 = !DILocation(line: 388, column: 1, scope: !13155)
!13163 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2094, file: !2094, line: 528, type: !13164, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13171)
!13164 = !DISubroutineType(types: !13165)
!13165 = !{!106, !2098, !13166, !239, !108, !113, !113, !113, !119, !118, !278}
!13166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13167, size: 32)
!13167 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !13168)
!13168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !13169)
!13169 = !{!13170}
!13170 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13168, file: !128, line: 48, baseType: !107, size: 8)
!13171 = !{!13172, !13173, !13174, !13175, !13176, !13177, !13178, !13179, !13180, !13181, !13182}
!13172 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13163, file: !2094, line: 528, type: !2098)
!13173 = !DILocalVariable(name: "stack", arg: 2, scope: !13163, file: !2094, line: 529, type: !13166)
!13174 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13163, file: !2094, line: 529, type: !239)
!13175 = !DILocalVariable(name: "entry", arg: 4, scope: !13163, file: !2094, line: 530, type: !108)
!13176 = !DILocalVariable(name: "p1", arg: 5, scope: !13163, file: !2094, line: 531, type: !113)
!13177 = !DILocalVariable(name: "p2", arg: 6, scope: !13163, file: !2094, line: 531, type: !113)
!13178 = !DILocalVariable(name: "p3", arg: 7, scope: !13163, file: !2094, line: 531, type: !113)
!13179 = !DILocalVariable(name: "prio", arg: 8, scope: !13163, file: !2094, line: 532, type: !119)
!13180 = !DILocalVariable(name: "options", arg: 9, scope: !13163, file: !2094, line: 532, type: !118)
!13181 = !DILocalVariable(name: "name", arg: 10, scope: !13163, file: !2094, line: 532, type: !278)
!13182 = !DILocalVariable(name: "stack_ptr", scope: !13163, file: !2094, line: 534, type: !106)
!13183 = !DILocation(line: 0, scope: !13163)
!13184 = !DILocation(line: 536, column: 2, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13186, file: !2094, line: 536, column: 2)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !2094, line: 536, column: 2)
!13187 = distinct !DILexicalBlock(scope: !13163, file: !2094, line: 536, column: 2)
!13188 = !DILocation(line: 536, column: 2, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13185, file: !2094, line: 536, column: 2)
!13190 = !DILocation(line: 550, column: 28, scope: !13163)
!13191 = !DILocation(line: 550, column: 2, scope: !13163)
!13192 = !DILocation(line: 553, column: 34, scope: !13163)
!13193 = !DILocation(line: 553, column: 2, scope: !13163)
!13194 = !DILocation(line: 554, column: 14, scope: !13163)
!13195 = !DILocation(line: 564, column: 2, scope: !13163)
!13196 = !DILocation(line: 567, column: 14, scope: !13163)
!13197 = !DILocation(line: 567, column: 24, scope: !13163)
!13198 = !DILocation(line: 594, column: 11, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13163, file: !2094, line: 594, column: 6)
!13200 = !DILocation(line: 0, scope: !13199)
!13201 = !DILocation(line: 594, column: 6, scope: !13163)
!13202 = !DILocation(line: 595, column: 3, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13199, file: !2094, line: 594, column: 20)
!13204 = !DILocation(line: 598, column: 3, scope: !13203)
!13205 = !DILocation(line: 598, column: 52, scope: !13203)
!13206 = !DILocation(line: 599, column: 2, scope: !13203)
!13207 = !DILocation(line: 600, column: 23, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13199, file: !2094, line: 599, column: 9)
!13209 = !DILocation(line: 612, column: 7, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13163, file: !2094, line: 612, column: 6)
!13211 = !DILocation(line: 612, column: 6, scope: !13163)
!13212 = !DILocation(line: 627, column: 40, scope: !13163)
!13213 = !DILocation(line: 637, column: 2, scope: !13163)
!13214 = !DILocation(line: 613, column: 15, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13210, file: !2094, line: 612, column: 17)
!13216 = !DILocation(line: 613, column: 29, scope: !13215)
!13217 = !DILocation(line: 638, column: 1, scope: !13163)
!13218 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12866, file: !12866, line: 78, type: !13219, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13221)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!345, !113}
!13221 = !{!13222}
!13222 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13218, file: !12866, line: 78, type: !113)
!13223 = !DILocation(line: 0, scope: !13218)
!13224 = !DILocation(line: 80, column: 21, scope: !13218)
!13225 = !DILocation(line: 80, column: 2, scope: !13218)
!13226 = distinct !DISubprogram(name: "z_waitq_init", scope: !13227, file: !13227, line: 47, type: !13228, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13230)
!13227 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13228 = !DISubroutineType(types: !13229)
!13229 = !{null, !2129}
!13230 = !{!13231}
!13231 = !DILocalVariable(name: "w", arg: 1, scope: !13226, file: !13227, line: 47, type: !2129)
!13232 = !DILocation(line: 0, scope: !13226)
!13233 = !DILocation(line: 49, column: 21, scope: !13226)
!13234 = !DILocation(line: 49, column: 2, scope: !13226)
!13235 = !DILocation(line: 50, column: 1, scope: !13226)
!13236 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2094, file: !2094, line: 791, type: !13237, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13240)
!13237 = !DISubroutineType(types: !13238)
!13238 = !{null, !13239, !119, !118, !32}
!13239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!13240 = !{!13241, !13242, !13243, !13244}
!13241 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13236, file: !2094, line: 791, type: !13239)
!13242 = !DILocalVariable(name: "priority", arg: 2, scope: !13236, file: !2094, line: 791, type: !119)
!13243 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13236, file: !2094, line: 792, type: !118)
!13244 = !DILocalVariable(name: "options", arg: 4, scope: !13236, file: !2094, line: 792, type: !32)
!13245 = !DILocation(line: 0, scope: !13236)
!13246 = !DILocation(line: 795, column: 15, scope: !13236)
!13247 = !DILocation(line: 795, column: 25, scope: !13236)
!13248 = !DILocation(line: 796, column: 30, scope: !13236)
!13249 = !DILocation(line: 796, column: 15, scope: !13236)
!13250 = !DILocation(line: 796, column: 28, scope: !13236)
!13251 = !DILocation(line: 797, column: 30, scope: !13236)
!13252 = !DILocation(line: 797, column: 15, scope: !13236)
!13253 = !DILocation(line: 797, column: 28, scope: !13236)
!13254 = !DILocation(line: 799, column: 22, scope: !13236)
!13255 = !DILocation(line: 799, column: 15, scope: !13236)
!13256 = !DILocation(line: 799, column: 20, scope: !13236)
!13257 = !DILocation(line: 801, column: 15, scope: !13236)
!13258 = !DILocation(line: 801, column: 28, scope: !13236)
!13259 = !DILocation(line: 814, column: 2, scope: !13236)
!13260 = !DILocation(line: 815, column: 1, scope: !13236)
!13261 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2094, file: !2094, line: 449, type: !13262, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13264)
!13262 = !DISubroutineType(types: !13263)
!13263 = !{!106, !2098, !13166, !239}
!13264 = !{!13265, !13266, !13267, !13268, !13269, !13270, !13271, !13272}
!13265 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13261, file: !2094, line: 449, type: !2098)
!13266 = !DILocalVariable(name: "stack", arg: 2, scope: !13261, file: !2094, line: 450, type: !13166)
!13267 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13261, file: !2094, line: 450, type: !239)
!13268 = !DILocalVariable(name: "stack_obj_size", scope: !13261, file: !2094, line: 452, type: !239)
!13269 = !DILocalVariable(name: "stack_buf_size", scope: !13261, file: !2094, line: 452, type: !239)
!13270 = !DILocalVariable(name: "stack_ptr", scope: !13261, file: !2094, line: 453, type: !106)
!13271 = !DILocalVariable(name: "stack_buf_start", scope: !13261, file: !2094, line: 453, type: !106)
!13272 = !DILocalVariable(name: "delta", scope: !13261, file: !2094, line: 454, type: !239)
!13273 = !DILocation(line: 0, scope: !13261)
!13274 = !DILocation(line: 465, column: 20, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13261, file: !2094, line: 463, column: 2)
!13276 = !DILocation(line: 466, column: 21, scope: !13275)
!13277 = !DILocation(line: 473, column: 28, scope: !13261)
!13278 = !DILocation(line: 514, column: 33, scope: !13261)
!13279 = !DILocation(line: 514, column: 25, scope: !13261)
!13280 = !DILocation(line: 514, column: 31, scope: !13261)
!13281 = !DILocation(line: 515, column: 25, scope: !13261)
!13282 = !DILocation(line: 515, column: 30, scope: !13261)
!13283 = !DILocation(line: 516, column: 25, scope: !13261)
!13284 = !DILocation(line: 516, column: 31, scope: !13261)
!13285 = !DILocation(line: 520, column: 2, scope: !13261)
!13286 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13287, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13289)
!13287 = !DISubroutineType(types: !13288)
!13288 = !{!106, !13166}
!13289 = !{!13290}
!13290 = !DILocalVariable(name: "sym", arg: 1, scope: !13286, file: !128, line: 331, type: !13166)
!13291 = !DILocation(line: 0, scope: !13286)
!13292 = !DILocation(line: 333, column: 21, scope: !13286)
!13293 = !DILocation(line: 333, column: 2, scope: !13286)
!13294 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13295, file: !13295, line: 40, type: !13296, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13298)
!13295 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13296 = !DISubroutineType(types: !13297)
!13297 = !{null, !13239}
!13298 = !{!13299}
!13299 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13294, file: !13295, line: 40, type: !13239)
!13300 = !DILocation(line: 0, scope: !13294)
!13301 = !DILocation(line: 42, column: 31, scope: !13294)
!13302 = !DILocation(line: 42, column: 2, scope: !13294)
!13303 = !DILocation(line: 43, column: 1, scope: !13294)
!13304 = distinct !DISubprogram(name: "z_init_timeout", scope: !13295, file: !13295, line: 25, type: !2155, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13305)
!13305 = !{!13306}
!13306 = !DILocalVariable(name: "to", arg: 1, scope: !13304, file: !13295, line: 25, type: !2157)
!13307 = !DILocation(line: 0, scope: !13304)
!13308 = !DILocation(line: 27, column: 22, scope: !13304)
!13309 = !DILocation(line: 27, column: 2, scope: !13304)
!13310 = !DILocation(line: 28, column: 1, scope: !13304)
!13311 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !13312, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13314)
!13312 = !DISubroutineType(types: !13313)
!13313 = !{null, !2204}
!13314 = !{!13315}
!13315 = !DILocalVariable(name: "node", arg: 1, scope: !13311, file: !153, line: 211, type: !2204)
!13316 = !DILocation(line: 0, scope: !13311)
!13317 = !DILocation(line: 213, column: 8, scope: !13311)
!13318 = !DILocation(line: 213, column: 13, scope: !13311)
!13319 = !DILocation(line: 214, column: 8, scope: !13311)
!13320 = !DILocation(line: 214, column: 13, scope: !13311)
!13321 = !DILocation(line: 215, column: 1, scope: !13311)
!13322 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !13323, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13326)
!13323 = !DISubroutineType(types: !13324)
!13324 = !{null, !13325}
!13325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!13326 = !{!13327}
!13327 = !DILocalVariable(name: "list", arg: 1, scope: !13322, file: !153, line: 197, type: !13325)
!13328 = !DILocation(line: 0, scope: !13322)
!13329 = !DILocation(line: 199, column: 8, scope: !13322)
!13330 = !DILocation(line: 199, column: 13, scope: !13322)
!13331 = !DILocation(line: 200, column: 8, scope: !13322)
!13332 = !DILocation(line: 200, column: 13, scope: !13322)
!13333 = !DILocation(line: 201, column: 1, scope: !13322)
!13334 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2094, file: !2094, line: 641, type: !13335, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13341)
!13335 = !DISubroutineType(types: !13336)
!13336 = !{!2097, !2098, !13166, !239, !108, !113, !113, !113, !119, !118, !13337}
!13337 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !13338)
!13338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !13339)
!13339 = !{!13340}
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13338, file: !115, line: 66, baseType: !114, size: 64)
!13341 = !{!13342, !13343, !13344, !13345, !13346, !13347, !13348, !13349, !13350, !13351}
!13342 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13334, file: !2094, line: 641, type: !2098)
!13343 = !DILocalVariable(name: "stack", arg: 2, scope: !13334, file: !2094, line: 642, type: !13166)
!13344 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13334, file: !2094, line: 643, type: !239)
!13345 = !DILocalVariable(name: "entry", arg: 4, scope: !13334, file: !2094, line: 643, type: !108)
!13346 = !DILocalVariable(name: "p1", arg: 5, scope: !13334, file: !2094, line: 644, type: !113)
!13347 = !DILocalVariable(name: "p2", arg: 6, scope: !13334, file: !2094, line: 644, type: !113)
!13348 = !DILocalVariable(name: "p3", arg: 7, scope: !13334, file: !2094, line: 644, type: !113)
!13349 = !DILocalVariable(name: "prio", arg: 8, scope: !13334, file: !2094, line: 645, type: !119)
!13350 = !DILocalVariable(name: "options", arg: 9, scope: !13334, file: !2094, line: 645, type: !118)
!13351 = !DILocalVariable(name: "delay", arg: 10, scope: !13334, file: !2094, line: 645, type: !13337)
!13352 = !DILocation(line: 0, scope: !13334)
!13353 = !DILocation(line: 1031, column: 3, scope: !13043, inlinedAt: !13354)
!13354 = distinct !DILocation(line: 48, column: 10, scope: !13047, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 647, column: 2, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13357, file: !2094, line: 647, column: 2)
!13357 = distinct !DILexicalBlock(scope: !13334, file: !2094, line: 647, column: 2)
!13358 = !DILocation(line: 0, scope: !13043, inlinedAt: !13354)
!13359 = !DILocation(line: 48, column: 9, scope: !13047, inlinedAt: !13355)
!13360 = !DILocation(line: 647, column: 2, scope: !13357)
!13361 = !DILocation(line: 647, column: 2, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13356, file: !2094, line: 647, column: 2)
!13363 = !DILocation(line: 649, column: 2, scope: !13334)
!13364 = !DILocation(line: 652, column: 7, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13334, file: !2094, line: 652, column: 6)
!13366 = !DILocation(line: 652, column: 6, scope: !13334)
!13367 = !DILocation(line: 653, column: 3, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13365, file: !2094, line: 652, column: 39)
!13369 = !DILocation(line: 654, column: 2, scope: !13368)
!13370 = !DILocation(line: 656, column: 2, scope: !13334)
!13371 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2094, file: !2094, line: 401, type: !13372, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13374)
!13372 = !DISubroutineType(types: !13373)
!13373 = !{null, !2098, !13337}
!13374 = !{!13375, !13376}
!13375 = !DILocalVariable(name: "thread", arg: 1, scope: !13371, file: !2094, line: 401, type: !2098)
!13376 = !DILocalVariable(name: "delay", arg: 2, scope: !13371, file: !2094, line: 401, type: !13337)
!13377 = !DILocation(line: 0, scope: !13371)
!13378 = !DILocation(line: 404, column: 6, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13371, file: !2094, line: 404, column: 6)
!13380 = !DILocation(line: 404, column: 6, scope: !13371)
!13381 = !DILocation(line: 405, column: 3, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13379, file: !2094, line: 404, column: 38)
!13383 = !DILocation(line: 406, column: 2, scope: !13382)
!13384 = !DILocation(line: 407, column: 3, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13379, file: !2094, line: 406, column: 9)
!13386 = !DILocation(line: 413, column: 1, scope: !13371)
!13387 = distinct !DISubprogram(name: "k_thread_start", scope: !3211, file: !3211, line: 205, type: !13388, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13390)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{null, !2097}
!13390 = !{!13391}
!13391 = !DILocalVariable(name: "thread", arg: 1, scope: !13387, file: !3211, line: 205, type: !2097)
!13392 = !DILocation(line: 0, scope: !13387)
!13393 = !DILocation(line: 214, column: 2, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13387, file: !3211, line: 214, column: 2)
!13395 = !{i64 2154875362}
!13396 = !DILocation(line: 215, column: 2, scope: !13387)
!13397 = !DILocation(line: 216, column: 1, scope: !13387)
!13398 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13295, file: !13295, line: 47, type: !13372, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13399)
!13399 = !{!13400, !13401}
!13400 = !DILocalVariable(name: "thread", arg: 1, scope: !13398, file: !13295, line: 47, type: !2098)
!13401 = !DILocalVariable(name: "ticks", arg: 2, scope: !13398, file: !13295, line: 47, type: !13337)
!13402 = !DILocation(line: 0, scope: !13398)
!13403 = !DILocation(line: 49, column: 30, scope: !13398)
!13404 = !DILocation(line: 49, column: 2, scope: !13398)
!13405 = !DILocation(line: 50, column: 1, scope: !13398)
!13406 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2094, file: !2094, line: 748, type: !2960, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13407)
!13407 = !{!13408, !13426}
!13408 = !DILocalVariable(name: "thread_data", scope: !13409, file: !2094, line: 750, type: !13410)
!13409 = distinct !DILexicalBlock(scope: !13406, file: !2094, line: 750, column: 2)
!13410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13411, size: 32)
!13411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !245, line: 620, size: 384, elements: !13412)
!13412 = !{!13413, !13414, !13415, !13416, !13417, !13418, !13419, !13420, !13421, !13422, !13423, !13425}
!13413 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13411, file: !245, line: 621, baseType: !2098, size: 32)
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13411, file: !245, line: 622, baseType: !13166, size: 32, offset: 32)
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13411, file: !245, line: 623, baseType: !32, size: 32, offset: 64)
!13416 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13411, file: !245, line: 624, baseType: !108, size: 32, offset: 96)
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13411, file: !245, line: 625, baseType: !113, size: 32, offset: 128)
!13418 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13411, file: !245, line: 626, baseType: !113, size: 32, offset: 160)
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13411, file: !245, line: 627, baseType: !113, size: 32, offset: 192)
!13420 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13411, file: !245, line: 628, baseType: !119, size: 32, offset: 224)
!13421 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13411, file: !245, line: 629, baseType: !118, size: 32, offset: 256)
!13422 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13411, file: !245, line: 630, baseType: !764, size: 32, offset: 288)
!13423 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13411, file: !245, line: 631, baseType: !13424, size: 32, offset: 320)
!13424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!13425 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13411, file: !245, line: 632, baseType: !278, size: 32, offset: 352)
!13426 = !DILocalVariable(name: "thread_data", scope: !13427, file: !2094, line: 781, type: !13410)
!13427 = distinct !DILexicalBlock(scope: !13406, file: !2094, line: 781, column: 2)
!13428 = !DILocation(line: 0, scope: !13409)
!13429 = !DILocation(line: 750, column: 2, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !2094, line: 750, column: 2)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !2094, line: 750, column: 2)
!13432 = distinct !DILexicalBlock(scope: !13409, file: !2094, line: 750, column: 2)
!13433 = !DILocation(line: 750, column: 2, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !2094, line: 750, column: 2)
!13435 = distinct !DILexicalBlock(scope: !13430, file: !2094, line: 750, column: 2)
!13436 = !DILocation(line: 750, column: 2, scope: !13431)
!13437 = !DILocation(line: 750, column: 2, scope: !13409)
!13438 = !DILocation(line: 780, column: 2, scope: !13406)
!13439 = !DILocation(line: 0, scope: !13427)
!13440 = !DILocation(line: 781, column: 2, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !2094, line: 781, column: 2)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !2094, line: 781, column: 2)
!13443 = distinct !DILexicalBlock(scope: !13427, file: !2094, line: 781, column: 2)
!13444 = !DILocation(line: 752, column: 17, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13432, file: !2094, line: 750, column: 38)
!13446 = !DILocation(line: 753, column: 17, scope: !13445)
!13447 = !DILocation(line: 754, column: 17, scope: !13445)
!13448 = !DILocation(line: 755, column: 17, scope: !13445)
!13449 = !DILocation(line: 756, column: 17, scope: !13445)
!13450 = !DILocation(line: 757, column: 17, scope: !13445)
!13451 = !DILocation(line: 758, column: 17, scope: !13445)
!13452 = !DILocation(line: 759, column: 17, scope: !13445)
!13453 = !DILocation(line: 760, column: 17, scope: !13445)
!13454 = !DILocation(line: 761, column: 17, scope: !13445)
!13455 = !DILocation(line: 751, column: 3, scope: !13445)
!13456 = !DILocation(line: 763, column: 16, scope: !13445)
!13457 = !DILocation(line: 763, column: 29, scope: !13445)
!13458 = !DILocation(line: 763, column: 39, scope: !13445)
!13459 = !DILocation(line: 750, column: 2, scope: !13432)
!13460 = !DILocation(line: 750, column: 2, scope: !13435)
!13461 = distinct !{!13461, !13437, !13462}
!13462 = !DILocation(line: 764, column: 2, scope: !13409)
!13463 = !DILocation(line: 781, column: 2, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13465, file: !2094, line: 781, column: 2)
!13465 = distinct !DILexicalBlock(scope: !13441, file: !2094, line: 781, column: 2)
!13466 = !DILocation(line: 781, column: 2, scope: !13442)
!13467 = !DILocation(line: 781, column: 2, scope: !13427)
!13468 = !DILocation(line: 787, column: 2, scope: !13406)
!13469 = !DILocation(line: 788, column: 1, scope: !13406)
!13470 = !DILocation(line: 782, column: 20, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !2094, line: 782, column: 7)
!13472 = distinct !DILexicalBlock(scope: !13443, file: !2094, line: 781, column: 38)
!13473 = !DILocation(line: 782, column: 31, scope: !13471)
!13474 = !DILocation(line: 782, column: 7, scope: !13472)
!13475 = !DILocation(line: 783, column: 37, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13471, file: !2094, line: 782, column: 51)
!13477 = !DILocation(line: 784, column: 10, scope: !13476)
!13478 = !DILocation(line: 783, column: 4, scope: !13476)
!13479 = !DILocation(line: 785, column: 3, scope: !13476)
!13480 = !DILocation(line: 781, column: 2, scope: !13443)
!13481 = !DILocation(line: 781, column: 2, scope: !13465)
!13482 = distinct !{!13482, !13467, !13483}
!13483 = !DILocation(line: 786, column: 2, scope: !13427)
!13484 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3203, file: !3203, line: 403, type: !3204, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13485)
!13485 = !{!13486}
!13486 = !DILocalVariable(name: "t", arg: 1, scope: !13484, file: !3203, line: 403, type: !120)
!13487 = !DILocation(line: 0, scope: !13484)
!13488 = !DILocalVariable(name: "t", arg: 1, scope: !13489, file: !3203, line: 102, type: !120)
!13489 = distinct !DISubprogram(name: "z_tmcvt", scope: !3203, file: !3203, line: 102, type: !3256, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13490)
!13490 = !{!13488, !13491, !13492, !13493, !13494, !13495, !13496, !13497, !13498, !13499, !13500}
!13491 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13489, file: !3203, line: 102, type: !118)
!13492 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13489, file: !3203, line: 103, type: !118)
!13493 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13489, file: !3203, line: 103, type: !345)
!13494 = !DILocalVariable(name: "result32", arg: 5, scope: !13489, file: !3203, line: 104, type: !345)
!13495 = !DILocalVariable(name: "round_up", arg: 6, scope: !13489, file: !3203, line: 104, type: !345)
!13496 = !DILocalVariable(name: "round_off", arg: 7, scope: !13489, file: !3203, line: 105, type: !345)
!13497 = !DILocalVariable(name: "mul_ratio", scope: !13489, file: !3203, line: 107, type: !345)
!13498 = !DILocalVariable(name: "div_ratio", scope: !13489, file: !3203, line: 109, type: !345)
!13499 = !DILocalVariable(name: "off", scope: !13489, file: !3203, line: 116, type: !120)
!13500 = !DILocalVariable(name: "rdivisor", scope: !13501, file: !3203, line: 119, type: !118)
!13501 = distinct !DILexicalBlock(scope: !13502, file: !3203, line: 118, column: 18)
!13502 = distinct !DILexicalBlock(scope: !13489, file: !3203, line: 118, column: 6)
!13503 = !DILocation(line: 0, scope: !13489, inlinedAt: !13504)
!13504 = distinct !DILocation(line: 406, column: 9, scope: !13484)
!13505 = !DILocation(line: 145, column: 13, scope: !13506, inlinedAt: !13504)
!13506 = distinct !DILexicalBlock(scope: !13507, file: !3203, line: 144, column: 10)
!13507 = distinct !DILexicalBlock(scope: !13508, file: !3203, line: 142, column: 7)
!13508 = distinct !DILexicalBlock(scope: !13509, file: !3203, line: 141, column: 24)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !3203, line: 141, column: 13)
!13510 = distinct !DILexicalBlock(scope: !13489, file: !3203, line: 134, column: 6)
!13511 = !DILocation(line: 406, column: 2, scope: !13484)
!13512 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2094, file: !2094, line: 817, type: !4383, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13513)
!13513 = !{!13514, !13515, !13516, !13517}
!13514 = !DILocalVariable(name: "entry", arg: 1, scope: !13512, file: !2094, line: 817, type: !108)
!13515 = !DILocalVariable(name: "p1", arg: 2, scope: !13512, file: !2094, line: 818, type: !113)
!13516 = !DILocalVariable(name: "p2", arg: 3, scope: !13512, file: !2094, line: 818, type: !113)
!13517 = !DILocalVariable(name: "p3", arg: 4, scope: !13512, file: !2094, line: 818, type: !113)
!13518 = !DILocation(line: 0, scope: !13512)
!13519 = !DILocation(line: 822, column: 2, scope: !13512)
!13520 = !DILocation(line: 822, column: 17, scope: !13512)
!13521 = !DILocation(line: 822, column: 30, scope: !13512)
!13522 = !DILocation(line: 823, column: 2, scope: !13512)
!13523 = !DILocation(line: 845, column: 2, scope: !13512)
!13524 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2094, file: !2094, line: 853, type: !13525, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13528)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{!345, !13527}
!13527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!13528 = !{!13529, !13530}
!13529 = !DILocalVariable(name: "l", arg: 1, scope: !13524, file: !2094, line: 853, type: !13527)
!13530 = !DILocalVariable(name: "thread_cpu", scope: !13524, file: !2094, line: 855, type: !22)
!13531 = !DILocation(line: 0, scope: !13524)
!13532 = !DILocation(line: 855, column: 28, scope: !13524)
!13533 = !DILocation(line: 857, column: 17, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13524, file: !2094, line: 857, column: 6)
!13535 = !DILocation(line: 857, column: 6, scope: !13524)
!13536 = !DILocation(line: 858, column: 19, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13538, file: !2094, line: 858, column: 7)
!13538 = distinct !DILexicalBlock(scope: !13534, file: !2094, line: 857, column: 24)
!13539 = !DILocation(line: 858, column: 42, scope: !13537)
!13540 = !DILocation(line: 858, column: 28, scope: !13537)
!13541 = !DILocation(line: 858, column: 25, scope: !13537)
!13542 = !DILocation(line: 858, column: 7, scope: !13538)
!13543 = !DILocation(line: 862, column: 2, scope: !13524)
!13544 = !DILocation(line: 863, column: 1, scope: !13524)
!13545 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2094, file: !2094, line: 865, type: !13525, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13546)
!13546 = !{!13547}
!13547 = !DILocalVariable(name: "l", arg: 1, scope: !13545, file: !2094, line: 865, type: !13527)
!13548 = !DILocation(line: 0, scope: !13545)
!13549 = !DILocation(line: 867, column: 9, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13545, file: !2094, line: 867, column: 6)
!13551 = !DILocation(line: 867, column: 38, scope: !13550)
!13552 = !DILocation(line: 867, column: 24, scope: !13550)
!13553 = !DILocation(line: 867, column: 54, scope: !13550)
!13554 = !DILocation(line: 867, column: 43, scope: !13550)
!13555 = !DILocation(line: 867, column: 41, scope: !13550)
!13556 = !DILocation(line: 867, column: 20, scope: !13550)
!13557 = !DILocation(line: 867, column: 6, scope: !13545)
!13558 = !DILocation(line: 870, column: 16, scope: !13545)
!13559 = !DILocation(line: 871, column: 2, scope: !13545)
!13560 = !DILocation(line: 872, column: 1, scope: !13545)
!13561 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2094, file: !2094, line: 874, type: !13562, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13564)
!13562 = !DISubroutineType(types: !13563)
!13563 = !{null, !13527}
!13564 = !{!13565}
!13565 = !DILocalVariable(name: "l", arg: 1, scope: !13561, file: !2094, line: 874, type: !13527)
!13566 = !DILocation(line: 0, scope: !13561)
!13567 = !DILocation(line: 876, column: 32, scope: !13561)
!13568 = !DILocation(line: 876, column: 18, scope: !13561)
!13569 = !DILocation(line: 876, column: 48, scope: !13561)
!13570 = !DILocation(line: 876, column: 37, scope: !13561)
!13571 = !DILocation(line: 876, column: 35, scope: !13561)
!13572 = !DILocation(line: 876, column: 5, scope: !13561)
!13573 = !DILocation(line: 876, column: 16, scope: !13561)
!13574 = !DILocation(line: 877, column: 1, scope: !13561)
!13575 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2094, file: !2094, line: 888, type: !13576, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13578)
!13576 = !DISubroutineType(types: !13577)
!13577 = !{!119, !2098}
!13578 = !{!13579}
!13579 = !DILocalVariable(name: "thread", arg: 1, scope: !13575, file: !2094, line: 888, type: !2098)
!13580 = !DILocation(line: 0, scope: !13575)
!13581 = !DILocation(line: 893, column: 2, scope: !13575)
!13582 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2094, file: !2094, line: 897, type: !13583, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13585)
!13583 = !DISubroutineType(types: !13584)
!13584 = !{!119, !2098, !32}
!13585 = !{!13586, !13587}
!13586 = !DILocalVariable(name: "thread", arg: 1, scope: !13582, file: !2094, line: 897, type: !2098)
!13587 = !DILocalVariable(name: "options", arg: 2, scope: !13582, file: !2094, line: 897, type: !32)
!13588 = !DILocation(line: 0, scope: !13582)
!13589 = !DILocation(line: 902, column: 2, scope: !13582)
!13590 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2094, file: !2094, line: 1072, type: !13591, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13596)
!13591 = !DISubroutineType(types: !13592)
!13592 = !{!119, !2097, !13593}
!13593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13594, size: 32)
!13594 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !143, line: 234, baseType: !13595)
!13595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !143, line: 192, elements: !2032)
!13596 = !{!13597, !13598}
!13597 = !DILocalVariable(name: "thread", arg: 1, scope: !13590, file: !2094, line: 1072, type: !2097)
!13598 = !DILocalVariable(name: "stats", arg: 2, scope: !13590, file: !2094, line: 1073, type: !13593)
!13599 = !DILocation(line: 0, scope: !13590)
!13600 = !DILocation(line: 1075, column: 14, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13590, file: !2094, line: 1075, column: 6)
!13602 = !DILocation(line: 1075, column: 23, scope: !13601)
!13603 = !DILocation(line: 1086, column: 1, scope: !13590)
!13604 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2094, file: !2094, line: 1088, type: !13605, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13607)
!13605 = !DISubroutineType(types: !13606)
!13606 = !{!119, !13593}
!13607 = !{!13608}
!13608 = !DILocalVariable(name: "stats", arg: 1, scope: !13604, file: !2094, line: 1088, type: !13593)
!13609 = !DILocation(line: 0, scope: !13604)
!13610 = !DILocation(line: 1094, column: 12, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13604, file: !2094, line: 1094, column: 6)
!13612 = !DILocation(line: 1120, column: 1, scope: !13604)
!13613 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13614, file: !13614, line: 20, type: !2960, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2032)
!13614 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13615 = !DILocation(line: 30, column: 2, scope: !13613)
!13616 = !DILocation(line: 31, column: 1, scope: !13613)
!13617 = distinct !DISubprogram(name: "idle", scope: !13614, file: !13614, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !13618)
!13618 = !{!13619, !13620, !13621}
!13619 = !DILocalVariable(name: "unused1", arg: 1, scope: !13617, file: !13614, line: 33, type: !113)
!13620 = !DILocalVariable(name: "unused2", arg: 2, scope: !13617, file: !13614, line: 33, type: !113)
!13621 = !DILocalVariable(name: "unused3", arg: 3, scope: !13617, file: !13614, line: 33, type: !113)
!13622 = !DILocation(line: 0, scope: !13617)
!13623 = !DILocation(line: 39, column: 2, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13625, file: !13614, line: 39, column: 2)
!13625 = distinct !DILexicalBlock(scope: !13617, file: !13614, line: 39, column: 2)
!13626 = !DILocation(line: 39, column: 2, scope: !13625)
!13627 = !DILocation(line: 39, column: 2, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13624, file: !13614, line: 39, column: 2)
!13629 = !DILocation(line: 55, column: 2, scope: !13630, inlinedAt: !13634)
!13630 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !13631)
!13631 = !{!13632, !13633}
!13632 = !DILocalVariable(name: "key", scope: !13630, file: !5993, line: 44, type: !32)
!13633 = !DILocalVariable(name: "tmp", scope: !13630, file: !5993, line: 53, type: !32)
!13634 = distinct !DILocation(line: 62, column: 10, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13617, file: !13614, line: 41, column: 15)
!13636 = !{i64 2226125}
!13637 = !DILocation(line: 0, scope: !13630, inlinedAt: !13634)
!13638 = !DILocation(line: 86, column: 3, scope: !13635)
!13639 = !DILocation(line: 41, column: 2, scope: !13617)
!13640 = distinct !{!13640, !13639, !13641}
!13641 = !DILocation(line: 105, column: 2, scope: !13617)
!13642 = distinct !DISubprogram(name: "k_cpu_idle", scope: !245, file: !245, line: 5627, type: !2960, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2032)
!13643 = !DILocation(line: 5629, column: 2, scope: !13642)
!13644 = !DILocation(line: 5630, column: 1, scope: !13642)
!13645 = !DISubprogram(name: "arch_cpu_idle", scope: !109, file: !109, line: 167, type: !2960, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!13646 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2332, file: !2332, line: 93, type: !13647, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13649)
!13647 = !DISubroutineType(types: !13648)
!13648 = !{!764, !2224, !2224}
!13649 = !{!13650, !13651, !13652, !13653}
!13650 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13646, file: !2332, line: 93, type: !2224)
!13651 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13646, file: !2332, line: 94, type: !2224)
!13652 = !DILocalVariable(name: "b1", scope: !13646, file: !2332, line: 97, type: !764)
!13653 = !DILocalVariable(name: "b2", scope: !13646, file: !2332, line: 98, type: !764)
!13654 = !DILocation(line: 0, scope: !13646)
!13655 = !DILocation(line: 97, column: 30, scope: !13646)
!13656 = !DILocation(line: 98, column: 30, scope: !13646)
!13657 = !DILocation(line: 100, column: 9, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13646, file: !2332, line: 100, column: 6)
!13659 = !DILocation(line: 100, column: 6, scope: !13646)
!13660 = !DILocation(line: 125, column: 1, scope: !13646)
!13661 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2332, file: !2332, line: 428, type: !13662, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{null, !2224}
!13664 = !{!13665}
!13665 = !DILocalVariable(name: "curr", arg: 1, scope: !13661, file: !2332, line: 428, type: !2224)
!13666 = !DILocation(line: 0, scope: !13661)
!13667 = !DILocation(line: 434, column: 6, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13661, file: !2332, line: 434, column: 6)
!13669 = !DILocation(line: 434, column: 23, scope: !13668)
!13670 = !DILocation(line: 434, column: 6, scope: !13661)
!13671 = !DILocation(line: 435, column: 50, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13668, file: !2332, line: 434, column: 29)
!13673 = !DILocation(line: 435, column: 48, scope: !13672)
!13674 = !DILocation(line: 435, column: 29, scope: !13672)
!13675 = !DILocation(line: 436, column: 24, scope: !13672)
!13676 = !DILocation(line: 436, column: 3, scope: !13672)
!13677 = !DILocation(line: 437, column: 2, scope: !13672)
!13678 = !DILocation(line: 438, column: 1, scope: !13661)
!13679 = distinct !DISubprogram(name: "slice_time", scope: !2332, file: !2332, line: 407, type: !13680, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13682)
!13680 = !DISubroutineType(types: !13681)
!13681 = !{!119, !2224}
!13682 = !{!13683, !13684}
!13683 = !DILocalVariable(name: "curr", arg: 1, scope: !13679, file: !2332, line: 407, type: !2224)
!13684 = !DILocalVariable(name: "ret", scope: !13679, file: !2332, line: 409, type: !119)
!13685 = !DILocation(line: 0, scope: !13679)
!13686 = !DILocation(line: 409, column: 12, scope: !13679)
!13687 = !DILocation(line: 416, column: 2, scope: !13679)
!13688 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2332, file: !2332, line: 440, type: !13689, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13691)
!13689 = !DISubroutineType(types: !13690)
!13690 = !{null, !764, !119}
!13691 = !{!13692, !13693, !13694, !13700}
!13692 = !DILocalVariable(name: "slice", arg: 1, scope: !13688, file: !2332, line: 440, type: !764)
!13693 = !DILocalVariable(name: "prio", arg: 2, scope: !13688, file: !2332, line: 440, type: !119)
!13694 = !DILocalVariable(name: "__i", scope: !13695, file: !2332, line: 442, type: !13696)
!13695 = distinct !DILexicalBlock(scope: !13688, file: !2332, line: 442, column: 2)
!13696 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !13697)
!13697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !13698)
!13698 = !{!13699}
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13697, file: !259, line: 33, baseType: !119, size: 32)
!13700 = !DILocalVariable(name: "__key", scope: !13695, file: !2332, line: 442, type: !13696)
!13701 = !DILocation(line: 0, scope: !13688)
!13702 = !DILocation(line: 0, scope: !13695)
!13703 = !DILocalVariable(name: "l", arg: 1, scope: !13704, file: !259, line: 136, type: !13707)
!13704 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !13705, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13708)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{!13696, !13707}
!13707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!13708 = !{!13703, !13709}
!13709 = !DILocalVariable(name: "k", scope: !13704, file: !259, line: 139, type: !13696)
!13710 = !DILocation(line: 0, scope: !13704, inlinedAt: !13711)
!13711 = distinct !DILocation(line: 442, column: 2, scope: !13695)
!13712 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !13717)
!13713 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13714)
!13714 = !{!13715, !13716}
!13715 = !DILocalVariable(name: "key", scope: !13713, file: !5993, line: 44, type: !32)
!13716 = !DILocalVariable(name: "tmp", scope: !13713, file: !5993, line: 53, type: !32)
!13717 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !13711)
!13718 = !{i64 2270096}
!13719 = !DILocation(line: 0, scope: !13713, inlinedAt: !13717)
!13720 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !13711)
!13721 = distinct !DILexicalBlock(scope: !13722, file: !259, line: 148, column: 2)
!13722 = distinct !DILexicalBlock(scope: !13704, file: !259, line: 148, column: 2)
!13723 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !13711)
!13724 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !13711)
!13725 = distinct !DILexicalBlock(scope: !13721, file: !259, line: 148, column: 2)
!13726 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !13711)
!13727 = !DILocation(line: 443, column: 29, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13729, file: !2332, line: 442, column: 26)
!13729 = distinct !DILexicalBlock(scope: !13695, file: !2332, line: 442, column: 2)
!13730 = !DILocation(line: 444, column: 17, scope: !13728)
!13731 = !DILocation(line: 445, column: 51, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13728, file: !2332, line: 445, column: 7)
!13733 = !DILocation(line: 445, column: 7, scope: !13728)
!13734 = !DILocation(line: 0, scope: !13728)
!13735 = !DILocation(line: 451, column: 18, scope: !13728)
!13736 = !DILocation(line: 452, column: 3, scope: !13728)
!13737 = !DILocalVariable(name: "key", arg: 2, scope: !13738, file: !259, line: 190, type: !13696)
!13738 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !13739, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13741)
!13739 = !DISubroutineType(types: !13740)
!13740 = !{null, !13707, !13696}
!13741 = !{!13742, !13737}
!13742 = !DILocalVariable(name: "l", arg: 1, scope: !13738, file: !259, line: 189, type: !13707)
!13743 = !DILocation(line: 0, scope: !13738, inlinedAt: !13744)
!13744 = distinct !DILocation(line: 442, column: 2, scope: !13729)
!13745 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !13744)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !259, line: 194, column: 2)
!13747 = distinct !DILexicalBlock(scope: !13738, file: !259, line: 194, column: 2)
!13748 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !13744)
!13749 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !13744)
!13750 = distinct !DILexicalBlock(scope: !13746, file: !259, line: 194, column: 2)
!13751 = !DILocalVariable(name: "key", arg: 1, scope: !13752, file: !5993, line: 84, type: !32)
!13752 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13753)
!13753 = !{!13751}
!13754 = !DILocation(line: 0, scope: !13752, inlinedAt: !13755)
!13755 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !13744)
!13756 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !13755)
!13757 = !{i64 2270913}
!13758 = !DILocation(line: 454, column: 1, scope: !13688)
!13759 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3203, file: !3203, line: 389, type: !7599, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13760)
!13760 = !{!13761}
!13761 = !DILocalVariable(name: "t", arg: 1, scope: !13759, file: !3203, line: 389, type: !118)
!13762 = !DILocation(line: 0, scope: !13759)
!13763 = !DILocalVariable(name: "t", arg: 1, scope: !13764, file: !3203, line: 102, type: !120)
!13764 = distinct !DISubprogram(name: "z_tmcvt", scope: !3203, file: !3203, line: 102, type: !3256, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13765)
!13765 = !{!13763, !13766, !13767, !13768, !13769, !13770, !13771, !13772, !13773, !13774, !13775}
!13766 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13764, file: !3203, line: 102, type: !118)
!13767 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13764, file: !3203, line: 103, type: !118)
!13768 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13764, file: !3203, line: 103, type: !345)
!13769 = !DILocalVariable(name: "result32", arg: 5, scope: !13764, file: !3203, line: 104, type: !345)
!13770 = !DILocalVariable(name: "round_up", arg: 6, scope: !13764, file: !3203, line: 104, type: !345)
!13771 = !DILocalVariable(name: "round_off", arg: 7, scope: !13764, file: !3203, line: 105, type: !345)
!13772 = !DILocalVariable(name: "mul_ratio", scope: !13764, file: !3203, line: 107, type: !345)
!13773 = !DILocalVariable(name: "div_ratio", scope: !13764, file: !3203, line: 109, type: !345)
!13774 = !DILocalVariable(name: "off", scope: !13764, file: !3203, line: 116, type: !120)
!13775 = !DILocalVariable(name: "rdivisor", scope: !13776, file: !3203, line: 119, type: !118)
!13776 = distinct !DILexicalBlock(scope: !13777, file: !3203, line: 118, column: 18)
!13777 = distinct !DILexicalBlock(scope: !13764, file: !3203, line: 118, column: 6)
!13778 = !DILocation(line: 0, scope: !13764, inlinedAt: !13779)
!13779 = distinct !DILocation(line: 392, column: 9, scope: !13759)
!13780 = !DILocation(line: 143, column: 25, scope: !13781, inlinedAt: !13779)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !3203, line: 142, column: 17)
!13782 = distinct !DILexicalBlock(scope: !13783, file: !3203, line: 142, column: 7)
!13783 = distinct !DILexicalBlock(scope: !13784, file: !3203, line: 141, column: 24)
!13784 = distinct !DILexicalBlock(scope: !13785, file: !3203, line: 141, column: 13)
!13785 = distinct !DILexicalBlock(scope: !13764, file: !3203, line: 134, column: 6)
!13786 = !DILocation(line: 392, column: 2, scope: !13759)
!13787 = distinct !DISubprogram(name: "z_time_slice", scope: !2332, file: !2332, line: 502, type: !8398, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13788)
!13788 = !{!13789, !13790}
!13789 = !DILocalVariable(name: "ticks", arg: 1, scope: !13787, file: !2332, line: 502, type: !119)
!13790 = !DILocalVariable(name: "key", scope: !13787, file: !2332, line: 511, type: !13696)
!13791 = !DILocation(line: 0, scope: !13787)
!13792 = !DILocation(line: 0, scope: !13704, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 511, column: 25, scope: !13787)
!13794 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !13795)
!13795 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !13793)
!13796 = !DILocation(line: 0, scope: !13713, inlinedAt: !13795)
!13797 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !13793)
!13798 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !13793)
!13799 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !13793)
!13800 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !13793)
!13801 = !DILocation(line: 514, column: 6, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13787, file: !2332, line: 514, column: 6)
!13803 = !DILocation(line: 514, column: 25, scope: !13802)
!13804 = !DILocation(line: 514, column: 22, scope: !13802)
!13805 = !DILocation(line: 514, column: 6, scope: !13787)
!13806 = !DILocation(line: 515, column: 3, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13802, file: !2332, line: 514, column: 35)
!13808 = !DILocation(line: 0, scope: !13738, inlinedAt: !13809)
!13809 = distinct !DILocation(line: 516, column: 3, scope: !13807)
!13810 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !13809)
!13811 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !13809)
!13812 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !13809)
!13813 = !DILocation(line: 0, scope: !13752, inlinedAt: !13814)
!13814 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !13809)
!13815 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !13814)
!13816 = !DILocation(line: 517, column: 3, scope: !13807)
!13817 = !DILocation(line: 519, column: 18, scope: !13787)
!13818 = !DILocation(line: 522, column: 6, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13787, file: !2332, line: 522, column: 6)
!13820 = !DILocation(line: 522, column: 27, scope: !13819)
!13821 = !DILocation(line: 522, column: 30, scope: !13819)
!13822 = !DILocation(line: 522, column: 6, scope: !13787)
!13823 = !DILocation(line: 523, column: 30, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13825, file: !2332, line: 523, column: 7)
!13825 = distinct !DILexicalBlock(scope: !13819, file: !2332, line: 522, column: 51)
!13826 = !DILocation(line: 523, column: 13, scope: !13824)
!13827 = !DILocation(line: 523, column: 7, scope: !13825)
!13828 = !DILocation(line: 530, column: 10, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13824, file: !2332, line: 523, column: 43)
!13830 = !DILocation(line: 531, column: 3, scope: !13829)
!13831 = !DILocation(line: 532, column: 30, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13824, file: !2332, line: 531, column: 10)
!13833 = !DILocation(line: 535, column: 29, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13819, file: !2332, line: 534, column: 9)
!13835 = !DILocation(line: 0, scope: !13738, inlinedAt: !13836)
!13836 = distinct !DILocation(line: 537, column: 2, scope: !13787)
!13837 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !13836)
!13838 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !13836)
!13839 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !13836)
!13840 = !DILocation(line: 0, scope: !13752, inlinedAt: !13841)
!13841 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !13836)
!13842 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !13841)
!13843 = !DILocation(line: 538, column: 1, scope: !13787)
!13844 = distinct !DISubprogram(name: "sliceable", scope: !2332, file: !2332, line: 468, type: !13845, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13847)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{!345, !2224}
!13847 = !{!13848, !13849}
!13848 = !DILocalVariable(name: "thread", arg: 1, scope: !13844, file: !2332, line: 468, type: !2224)
!13849 = !DILocalVariable(name: "ret", scope: !13844, file: !2332, line: 470, type: !345)
!13850 = !DILocation(line: 0, scope: !13844)
!13851 = !DILocation(line: 470, column: 13, scope: !13844)
!13852 = !DILocation(line: 471, column: 3, scope: !13844)
!13853 = !DILocation(line: 471, column: 7, scope: !13844)
!13854 = !DILocation(line: 472, column: 3, scope: !13844)
!13855 = !DILocation(line: 472, column: 37, scope: !13844)
!13856 = !DILocation(line: 472, column: 24, scope: !13844)
!13857 = !DILocation(line: 472, column: 43, scope: !13844)
!13858 = !DILocation(line: 472, column: 7, scope: !13844)
!13859 = !DILocation(line: 473, column: 3, scope: !13844)
!13860 = !DILocation(line: 473, column: 7, scope: !13844)
!13861 = !DILocation(line: 473, column: 6, scope: !13844)
!13862 = !DILocation(line: 479, column: 2, scope: !13844)
!13863 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2332, file: !2332, line: 482, type: !13864, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13866)
!13864 = !DISubroutineType(types: !13865)
!13865 = !{!13696, !13696}
!13866 = !{!13867, !13868}
!13867 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13863, file: !2332, line: 482, type: !13696)
!13868 = !DILocalVariable(name: "curr", scope: !13863, file: !2332, line: 484, type: !2224)
!13869 = !DILocation(line: 0, scope: !13863)
!13870 = !DILocation(line: 484, column: 26, scope: !13863)
!13871 = !DILocation(line: 493, column: 7, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13863, file: !2332, line: 493, column: 6)
!13873 = !DILocation(line: 493, column: 6, scope: !13863)
!13874 = !DILocation(line: 494, column: 3, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13872, file: !2332, line: 493, column: 49)
!13876 = !DILocation(line: 495, column: 2, scope: !13875)
!13877 = !DILocation(line: 496, column: 2, scope: !13863)
!13878 = !DILocation(line: 499, column: 1, scope: !13863)
!13879 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12866, file: !12866, line: 106, type: !13845, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13880)
!13880 = !{!13881, !13882}
!13881 = !DILocalVariable(name: "thread", arg: 1, scope: !13879, file: !12866, line: 106, type: !2224)
!13882 = !DILocalVariable(name: "state", scope: !13879, file: !12866, line: 108, type: !185)
!13883 = !DILocation(line: 0, scope: !13879)
!13884 = !DILocation(line: 108, column: 31, scope: !13879)
!13885 = !DILocation(line: 110, column: 16, scope: !13879)
!13886 = !DILocation(line: 111, column: 41, scope: !13879)
!13887 = !DILocation(line: 110, column: 2, scope: !13879)
!13888 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2332, file: !2332, line: 393, type: !13662, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13889)
!13889 = !{!13890}
!13890 = !DILocalVariable(name: "thread", arg: 1, scope: !13888, file: !2332, line: 393, type: !2224)
!13891 = !DILocation(line: 0, scope: !13888)
!13892 = !DILocation(line: 395, column: 6, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13888, file: !2332, line: 395, column: 6)
!13894 = !DILocation(line: 395, column: 6, scope: !13888)
!13895 = !DILocalVariable(name: "thread", arg: 1, scope: !13896, file: !2332, line: 264, type: !2224)
!13896 = distinct !DISubprogram(name: "dequeue_thread", scope: !2332, file: !2332, line: 264, type: !13662, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13897)
!13897 = !{!13895}
!13898 = !DILocation(line: 0, scope: !13896, inlinedAt: !13899)
!13899 = distinct !DILocation(line: 396, column: 3, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13893, file: !2332, line: 395, column: 34)
!13901 = !DILocation(line: 266, column: 15, scope: !13896, inlinedAt: !13899)
!13902 = !DILocation(line: 266, column: 28, scope: !13896, inlinedAt: !13899)
!13903 = !DILocalVariable(name: "thread", arg: 1, scope: !13904, file: !2332, line: 232, type: !2224)
!13904 = distinct !DISubprogram(name: "runq_remove", scope: !2332, file: !2332, line: 232, type: !13662, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13905)
!13905 = !{!13903}
!13906 = !DILocation(line: 0, scope: !13904, inlinedAt: !13907)
!13907 = distinct !DILocation(line: 268, column: 3, scope: !13908, inlinedAt: !13899)
!13908 = distinct !DILexicalBlock(scope: !13909, file: !2332, line: 267, column: 35)
!13909 = distinct !DILexicalBlock(scope: !13896, file: !2332, line: 267, column: 6)
!13910 = !DILocation(line: 234, column: 2, scope: !13904, inlinedAt: !13907)
!13911 = !DILocation(line: 397, column: 2, scope: !13900)
!13912 = !DILocalVariable(name: "thread", arg: 1, scope: !13913, file: !2332, line: 250, type: !2224)
!13913 = distinct !DISubprogram(name: "queue_thread", scope: !2332, file: !2332, line: 250, type: !13662, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13914)
!13914 = !{!13912}
!13915 = !DILocation(line: 0, scope: !13913, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 398, column: 2, scope: !13888)
!13917 = !DILocation(line: 252, column: 15, scope: !13913, inlinedAt: !13916)
!13918 = !DILocation(line: 252, column: 28, scope: !13913, inlinedAt: !13916)
!13919 = !DILocalVariable(name: "thread", arg: 1, scope: !13920, file: !2332, line: 227, type: !2224)
!13920 = distinct !DISubprogram(name: "runq_add", scope: !2332, file: !2332, line: 227, type: !13662, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13921)
!13921 = !{!13919}
!13922 = !DILocation(line: 0, scope: !13920, inlinedAt: !13923)
!13923 = distinct !DILocation(line: 254, column: 3, scope: !13924, inlinedAt: !13916)
!13924 = distinct !DILexicalBlock(scope: !13925, file: !2332, line: 253, column: 35)
!13925 = distinct !DILexicalBlock(scope: !13913, file: !2332, line: 253, column: 6)
!13926 = !DILocalVariable(name: "pq", arg: 1, scope: !13927, file: !2332, line: 181, type: !13930)
!13927 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2332, file: !2332, line: 181, type: !13928, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13931)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{null, !13930, !2224}
!13930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!13931 = !{!13926, !13932, !13933}
!13932 = !DILocalVariable(name: "thread", arg: 2, scope: !13927, file: !2332, line: 182, type: !2224)
!13933 = !DILocalVariable(name: "t", scope: !13927, file: !2332, line: 184, type: !2224)
!13934 = !DILocation(line: 0, scope: !13927, inlinedAt: !13935)
!13935 = distinct !DILocation(line: 229, column: 2, scope: !13920, inlinedAt: !13923)
!13936 = !DILocation(line: 186, column: 2, scope: !13937, inlinedAt: !13935)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !2332, line: 186, column: 2)
!13938 = distinct !DILexicalBlock(scope: !13927, file: !2332, line: 186, column: 2)
!13939 = !DILocation(line: 186, column: 2, scope: !13938, inlinedAt: !13935)
!13940 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !13935)
!13941 = distinct !DILexicalBlock(scope: !13937, file: !2332, line: 186, column: 2)
!13942 = !DILocation(line: 188, column: 2, scope: !13943, inlinedAt: !13935)
!13943 = distinct !DILexicalBlock(scope: !13927, file: !2332, line: 188, column: 2)
!13944 = !DILocation(line: 188, column: 2, scope: !13945, inlinedAt: !13935)
!13945 = distinct !DILexicalBlock(scope: !13943, file: !2332, line: 188, column: 2)
!13946 = !DILocation(line: 0, scope: !13943, inlinedAt: !13935)
!13947 = !DILocation(line: 189, column: 7, scope: !13948, inlinedAt: !13935)
!13948 = distinct !DILexicalBlock(scope: !13949, file: !2332, line: 189, column: 7)
!13949 = distinct !DILexicalBlock(scope: !13945, file: !2332, line: 188, column: 56)
!13950 = !DILocation(line: 189, column: 35, scope: !13948, inlinedAt: !13935)
!13951 = !DILocation(line: 189, column: 7, scope: !13949, inlinedAt: !13935)
!13952 = !DILocation(line: 191, column: 21, scope: !13953, inlinedAt: !13935)
!13953 = distinct !DILexicalBlock(scope: !13948, file: !2332, line: 189, column: 40)
!13954 = !DILocation(line: 190, column: 4, scope: !13953, inlinedAt: !13935)
!13955 = !DILocation(line: 192, column: 4, scope: !13953, inlinedAt: !13935)
!13956 = distinct !{!13956, !13942, !13957}
!13957 = !DILocation(line: 194, column: 2, scope: !13943, inlinedAt: !13935)
!13958 = !DILocation(line: 196, column: 37, scope: !13927, inlinedAt: !13935)
!13959 = !DILocation(line: 196, column: 2, scope: !13927, inlinedAt: !13935)
!13960 = !DILocation(line: 197, column: 1, scope: !13927, inlinedAt: !13935)
!13961 = !DILocation(line: 399, column: 25, scope: !13888)
!13962 = !DILocation(line: 399, column: 22, scope: !13888)
!13963 = !DILocation(line: 399, column: 2, scope: !13888)
!13964 = !DILocation(line: 400, column: 1, scope: !13888)
!13965 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12866, file: !12866, line: 136, type: !13845, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13966)
!13966 = !{!13967}
!13967 = !DILocalVariable(name: "thread", arg: 1, scope: !13965, file: !12866, line: 136, type: !2224)
!13968 = !DILocation(line: 0, scope: !13965)
!13969 = !DILocation(line: 138, column: 9, scope: !13965)
!13970 = !DILocation(line: 138, column: 2, scope: !13965)
!13971 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2332, file: !2332, line: 1137, type: !13928, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13972)
!13972 = !{!13973, !13974}
!13973 = !DILocalVariable(name: "pq", arg: 1, scope: !13971, file: !2332, line: 1137, type: !13930)
!13974 = !DILocalVariable(name: "thread", arg: 2, scope: !13971, file: !2332, line: 1137, type: !2224)
!13975 = !DILocation(line: 0, scope: !13971)
!13976 = !DILocation(line: 1139, column: 2, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13978, file: !2332, line: 1139, column: 2)
!13978 = distinct !DILexicalBlock(scope: !13971, file: !2332, line: 1139, column: 2)
!13979 = !DILocation(line: 1139, column: 2, scope: !13978)
!13980 = !DILocation(line: 1139, column: 2, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13977, file: !2332, line: 1139, column: 2)
!13982 = !DILocation(line: 1141, column: 33, scope: !13971)
!13983 = !DILocation(line: 1141, column: 2, scope: !13971)
!13984 = !DILocation(line: 1142, column: 1, scope: !13971)
!13985 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12866, file: !12866, line: 83, type: !13845, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13986)
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "thread", arg: 1, scope: !13985, file: !12866, line: 83, type: !2224)
!13988 = !DILocation(line: 0, scope: !13985)
!13989 = !DILocation(line: 89, column: 16, scope: !13985)
!13990 = !DILocation(line: 89, column: 2, scope: !13985)
!13991 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !13992, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !13994)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{!2328, !13930}
!13994 = !{!13995}
!13995 = !DILocalVariable(name: "list", arg: 1, scope: !13991, file: !153, line: 294, type: !13930)
!13996 = !DILocation(line: 0, scope: !13991)
!13997 = !DILocation(line: 296, column: 9, scope: !13991)
!13998 = !DILocation(line: 296, column: 49, scope: !13991)
!13999 = !DILocation(line: 296, column: 2, scope: !13991)
!14000 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !14001, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14003)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{null, !2328, !2328}
!14003 = !{!14004, !14005, !14006}
!14004 = !DILocalVariable(name: "successor", arg: 1, scope: !14000, file: !153, line: 443, type: !2328)
!14005 = !DILocalVariable(name: "node", arg: 2, scope: !14000, file: !153, line: 443, type: !2328)
!14006 = !DILocalVariable(name: "prev", scope: !14000, file: !153, line: 445, type: !14007)
!14007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2328)
!14008 = !DILocation(line: 0, scope: !14000)
!14009 = !DILocation(line: 445, column: 39, scope: !14000)
!14010 = !DILocation(line: 447, column: 8, scope: !14000)
!14011 = !DILocation(line: 447, column: 13, scope: !14000)
!14012 = !DILocation(line: 448, column: 8, scope: !14000)
!14013 = !DILocation(line: 448, column: 13, scope: !14000)
!14014 = !DILocation(line: 449, column: 8, scope: !14000)
!14015 = !DILocation(line: 449, column: 13, scope: !14000)
!14016 = !DILocation(line: 450, column: 18, scope: !14000)
!14017 = !DILocation(line: 451, column: 1, scope: !14000)
!14018 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !14019, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14021)
!14019 = !DISubroutineType(types: !14020)
!14020 = !{!2328, !13930, !2328}
!14021 = !{!14022, !14023}
!14022 = !DILocalVariable(name: "list", arg: 1, scope: !14018, file: !153, line: 341, type: !13930)
!14023 = !DILocalVariable(name: "node", arg: 2, scope: !14018, file: !153, line: 342, type: !2328)
!14024 = !DILocation(line: 0, scope: !14018)
!14025 = !DILocation(line: 344, column: 15, scope: !14018)
!14026 = !DILocation(line: 344, column: 9, scope: !14018)
!14027 = !DILocation(line: 344, column: 26, scope: !14018)
!14028 = !DILocation(line: 344, column: 2, scope: !14018)
!14029 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !14030, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14032)
!14030 = !DISubroutineType(types: !14031)
!14031 = !{null, !13930, !2328}
!14032 = !{!14033, !14034, !14035}
!14033 = !DILocalVariable(name: "list", arg: 1, scope: !14029, file: !153, line: 404, type: !13930)
!14034 = !DILocalVariable(name: "node", arg: 2, scope: !14029, file: !153, line: 404, type: !2328)
!14035 = !DILocalVariable(name: "tail", scope: !14029, file: !153, line: 406, type: !14007)
!14036 = !DILocation(line: 0, scope: !14029)
!14037 = !DILocation(line: 406, column: 34, scope: !14029)
!14038 = !DILocation(line: 408, column: 8, scope: !14029)
!14039 = !DILocation(line: 408, column: 13, scope: !14029)
!14040 = !DILocation(line: 409, column: 8, scope: !14029)
!14041 = !DILocation(line: 409, column: 13, scope: !14029)
!14042 = !DILocation(line: 411, column: 8, scope: !14029)
!14043 = !DILocation(line: 411, column: 13, scope: !14029)
!14044 = !DILocation(line: 412, column: 13, scope: !14029)
!14045 = !DILocation(line: 413, column: 1, scope: !14029)
!14046 = distinct !DISubprogram(name: "update_cache", scope: !2332, file: !2332, line: 559, type: !8398, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14047)
!14047 = !{!14048, !14049}
!14048 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14046, file: !2332, line: 559, type: !119)
!14049 = !DILocalVariable(name: "thread", scope: !14046, file: !2332, line: 562, type: !2224)
!14050 = !DILocation(line: 0, scope: !14046)
!14051 = !DILocation(line: 239, column: 9, scope: !14052, inlinedAt: !14055)
!14052 = distinct !DISubprogram(name: "runq_best", scope: !2332, file: !2332, line: 237, type: !14053, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!14053 = !DISubroutineType(types: !14054)
!14054 = !{!2224}
!14055 = distinct !DILocation(line: 314, column: 28, scope: !14056, inlinedAt: !14059)
!14056 = distinct !DISubprogram(name: "next_up", scope: !2332, file: !2332, line: 312, type: !14053, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14057)
!14057 = !{!14058}
!14058 = !DILocalVariable(name: "thread", scope: !14056, file: !2332, line: 314, type: !2224)
!14059 = distinct !DILocation(line: 562, column: 28, scope: !14046)
!14060 = !DILocation(line: 0, scope: !14056, inlinedAt: !14059)
!14061 = !DILocation(line: 340, column: 17, scope: !14056, inlinedAt: !14059)
!14062 = !DILocation(line: 340, column: 9, scope: !14056, inlinedAt: !14059)
!14063 = !DILocalVariable(name: "thread", arg: 1, scope: !14064, file: !2332, line: 127, type: !2224)
!14064 = distinct !DISubprogram(name: "should_preempt", scope: !2332, file: !2332, line: 127, type: !14065, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14067)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{!345, !2224, !119}
!14067 = !{!14063, !14068}
!14068 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14064, file: !2332, line: 128, type: !119)
!14069 = !DILocation(line: 0, scope: !14064, inlinedAt: !14070)
!14070 = distinct !DILocation(line: 564, column: 6, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14046, file: !2332, line: 564, column: 6)
!14072 = !DILocation(line: 133, column: 17, scope: !14073, inlinedAt: !14070)
!14073 = distinct !DILexicalBlock(scope: !14064, file: !2332, line: 133, column: 6)
!14074 = !DILocation(line: 0, scope: !14071)
!14075 = !DILocation(line: 133, column: 6, scope: !14064, inlinedAt: !14070)
!14076 = !DILocation(line: 137, column: 2, scope: !14077, inlinedAt: !14070)
!14077 = distinct !DILexicalBlock(scope: !14078, file: !2332, line: 137, column: 2)
!14078 = distinct !DILexicalBlock(scope: !14064, file: !2332, line: 137, column: 2)
!14079 = !DILocation(line: 137, column: 2, scope: !14078, inlinedAt: !14070)
!14080 = !DILocation(line: 137, column: 2, scope: !14081, inlinedAt: !14070)
!14081 = distinct !DILexicalBlock(scope: !14077, file: !2332, line: 137, column: 2)
!14082 = !DILocation(line: 140, column: 6, scope: !14083, inlinedAt: !14070)
!14083 = distinct !DILexicalBlock(scope: !14064, file: !2332, line: 140, column: 6)
!14084 = !DILocation(line: 140, column: 6, scope: !14064, inlinedAt: !14070)
!14085 = !DILocation(line: 150, column: 9, scope: !14086, inlinedAt: !14070)
!14086 = distinct !DILexicalBlock(scope: !14064, file: !2332, line: 149, column: 6)
!14087 = !DILocation(line: 149, column: 6, scope: !14064, inlinedAt: !14070)
!14088 = !DILocation(line: 157, column: 6, scope: !14089, inlinedAt: !14070)
!14089 = distinct !DILexicalBlock(scope: !14064, file: !2332, line: 157, column: 6)
!14090 = !DILocation(line: 564, column: 6, scope: !14046)
!14091 = !DILocation(line: 566, column: 14, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !2332, line: 566, column: 7)
!14093 = distinct !DILexicalBlock(scope: !14071, file: !2332, line: 564, column: 42)
!14094 = !DILocation(line: 566, column: 7, scope: !14093)
!14095 = !DILocation(line: 567, column: 4, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14092, file: !2332, line: 566, column: 27)
!14097 = !DILocation(line: 568, column: 3, scope: !14096)
!14098 = !DILocation(line: 585, column: 1, scope: !14046)
!14099 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2332, file: !2332, line: 1144, type: !14100, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14102)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{!2224, !13930}
!14102 = !{!14103, !14104, !14105}
!14103 = !DILocalVariable(name: "pq", arg: 1, scope: !14099, file: !2332, line: 1144, type: !13930)
!14104 = !DILocalVariable(name: "thread", scope: !14099, file: !2332, line: 1146, type: !2224)
!14105 = !DILocalVariable(name: "n", scope: !14099, file: !2332, line: 1147, type: !2328)
!14106 = !DILocation(line: 0, scope: !14099)
!14107 = !DILocation(line: 1147, column: 19, scope: !14099)
!14108 = !DILocation(line: 1152, column: 2, scope: !14099)
!14109 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12866, file: !12866, line: 115, type: !13845, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14110)
!14110 = !{!14111}
!14111 = !DILocalVariable(name: "thread", arg: 1, scope: !14109, file: !12866, line: 115, type: !2224)
!14112 = !DILocation(line: 0, scope: !14109)
!14113 = !DILocation(line: 117, column: 46, scope: !14109)
!14114 = !DILocation(line: 117, column: 10, scope: !14109)
!14115 = !DILocation(line: 117, column: 9, scope: !14109)
!14116 = !DILocation(line: 117, column: 2, scope: !14109)
!14117 = distinct !DISubprogram(name: "is_preempt", scope: !2332, file: !2332, line: 62, type: !13680, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14118)
!14118 = !{!14119}
!14119 = !DILocalVariable(name: "thread", arg: 1, scope: !14117, file: !2332, line: 62, type: !2224)
!14120 = !DILocation(line: 0, scope: !14117)
!14121 = !DILocation(line: 65, column: 22, scope: !14117)
!14122 = !DILocation(line: 65, column: 30, scope: !14117)
!14123 = !DILocation(line: 65, column: 2, scope: !14117)
!14124 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13295, file: !13295, line: 35, type: !14125, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14129)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!345, !14127}
!14127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14128, size: 32)
!14128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2275)
!14129 = !{!14130}
!14130 = !DILocalVariable(name: "to", arg: 1, scope: !14124, file: !13295, line: 35, type: !14127)
!14131 = !DILocation(line: 0, scope: !14124)
!14132 = !DILocation(line: 37, column: 35, scope: !14124)
!14133 = !DILocation(line: 37, column: 10, scope: !14124)
!14134 = !DILocation(line: 37, column: 9, scope: !14124)
!14135 = !DILocation(line: 37, column: 2, scope: !14124)
!14136 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !14137, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14141)
!14137 = !DISubroutineType(types: !14138)
!14138 = !{!345, !14139}
!14139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14140, size: 32)
!14140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2234)
!14141 = !{!14142}
!14142 = !DILocalVariable(name: "node", arg: 1, scope: !14136, file: !153, line: 225, type: !14139)
!14143 = !DILocation(line: 0, scope: !14136)
!14144 = !DILocation(line: 227, column: 15, scope: !14136)
!14145 = !DILocation(line: 227, column: 20, scope: !14136)
!14146 = !DILocation(line: 227, column: 2, scope: !14136)
!14147 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !14019, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14148)
!14148 = !{!14149, !14150}
!14149 = !DILocalVariable(name: "list", arg: 1, scope: !14147, file: !153, line: 325, type: !13930)
!14150 = !DILocalVariable(name: "node", arg: 2, scope: !14147, file: !153, line: 326, type: !2328)
!14151 = !DILocation(line: 0, scope: !14147)
!14152 = !DILocation(line: 328, column: 24, scope: !14147)
!14153 = !DILocation(line: 328, column: 15, scope: !14147)
!14154 = !DILocation(line: 328, column: 9, scope: !14147)
!14155 = !DILocation(line: 328, column: 45, scope: !14147)
!14156 = !DILocation(line: 328, column: 2, scope: !14147)
!14157 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !14158, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14160)
!14158 = !DISubroutineType(types: !14159)
!14159 = !{!345, !13930}
!14160 = !{!14161}
!14161 = !DILocalVariable(name: "list", arg: 1, scope: !14157, file: !153, line: 266, type: !13930)
!14162 = !DILocation(line: 0, scope: !14157)
!14163 = !DILocation(line: 268, column: 15, scope: !14157)
!14164 = !DILocation(line: 268, column: 20, scope: !14157)
!14165 = !DILocation(line: 268, column: 2, scope: !14157)
!14166 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !14167, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14169)
!14167 = !DISubroutineType(types: !14168)
!14168 = !{null, !2328}
!14169 = !{!14170, !14171, !14172}
!14170 = !DILocalVariable(name: "node", arg: 1, scope: !14166, file: !153, line: 496, type: !2328)
!14171 = !DILocalVariable(name: "prev", scope: !14166, file: !153, line: 498, type: !14007)
!14172 = !DILocalVariable(name: "next", scope: !14166, file: !153, line: 499, type: !14007)
!14173 = !DILocation(line: 0, scope: !14166)
!14174 = !DILocation(line: 498, column: 34, scope: !14166)
!14175 = !DILocation(line: 499, column: 34, scope: !14166)
!14176 = !DILocation(line: 501, column: 8, scope: !14166)
!14177 = !DILocation(line: 501, column: 13, scope: !14166)
!14178 = !DILocation(line: 502, column: 8, scope: !14166)
!14179 = !DILocation(line: 502, column: 13, scope: !14166)
!14180 = !DILocation(line: 503, column: 2, scope: !14166)
!14181 = !DILocation(line: 504, column: 1, scope: !14166)
!14182 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !14167, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14183)
!14183 = !{!14184}
!14184 = !DILocalVariable(name: "node", arg: 1, scope: !14182, file: !153, line: 211, type: !2328)
!14185 = !DILocation(line: 0, scope: !14182)
!14186 = !DILocation(line: 213, column: 8, scope: !14182)
!14187 = !DILocation(line: 213, column: 13, scope: !14182)
!14188 = !DILocation(line: 214, column: 8, scope: !14182)
!14189 = !DILocation(line: 214, column: 13, scope: !14182)
!14190 = !DILocation(line: 215, column: 1, scope: !14182)
!14191 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12866, file: !12866, line: 131, type: !14192, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14194)
!14192 = !DISubroutineType(types: !14193)
!14193 = !{!345, !2224, !118}
!14194 = !{!14195, !14196}
!14195 = !DILocalVariable(name: "thread", arg: 1, scope: !14191, file: !12866, line: 131, type: !2224)
!14196 = !DILocalVariable(name: "state", arg: 2, scope: !14191, file: !12866, line: 131, type: !118)
!14197 = !DILocation(line: 0, scope: !14191)
!14198 = !DILocation(line: 133, column: 23, scope: !14191)
!14199 = !DILocation(line: 133, column: 10, scope: !14191)
!14200 = !DILocation(line: 133, column: 36, scope: !14191)
!14201 = !DILocation(line: 133, column: 45, scope: !14191)
!14202 = !DILocation(line: 133, column: 2, scope: !14191)
!14203 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12866, file: !12866, line: 211, type: !14204, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14206)
!14204 = !DISubroutineType(types: !14205)
!14205 = !{!345, !119, !119}
!14206 = !{!14207, !14208}
!14207 = !DILocalVariable(name: "prio", arg: 1, scope: !14203, file: !12866, line: 211, type: !119)
!14208 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14203, file: !12866, line: 211, type: !119)
!14209 = !DILocation(line: 0, scope: !14203)
!14210 = !DILocation(line: 213, column: 9, scope: !14203)
!14211 = !DILocation(line: 213, column: 2, scope: !14203)
!14212 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12866, file: !12866, line: 206, type: !14204, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14213)
!14213 = !{!14214, !14215}
!14214 = !DILocalVariable(name: "prio1", arg: 1, scope: !14212, file: !12866, line: 206, type: !119)
!14215 = !DILocalVariable(name: "prio2", arg: 2, scope: !14212, file: !12866, line: 206, type: !119)
!14216 = !DILocation(line: 0, scope: !14212)
!14217 = !DILocation(line: 208, column: 15, scope: !14212)
!14218 = !DILocation(line: 208, column: 2, scope: !14212)
!14219 = distinct !DISubprogram(name: "z_ready_thread", scope: !2332, file: !2332, line: 635, type: !13662, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14220)
!14220 = !{!14221, !14222, !14224}
!14221 = !DILocalVariable(name: "thread", arg: 1, scope: !14219, file: !2332, line: 635, type: !2224)
!14222 = !DILocalVariable(name: "__i", scope: !14223, file: !2332, line: 637, type: !13696)
!14223 = distinct !DILexicalBlock(scope: !14219, file: !2332, line: 637, column: 2)
!14224 = !DILocalVariable(name: "__key", scope: !14223, file: !2332, line: 637, type: !13696)
!14225 = !DILocation(line: 0, scope: !14219)
!14226 = !DILocation(line: 0, scope: !14223)
!14227 = !DILocation(line: 0, scope: !13704, inlinedAt: !14228)
!14228 = distinct !DILocation(line: 637, column: 2, scope: !14223)
!14229 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14228)
!14231 = !DILocation(line: 0, scope: !13713, inlinedAt: !14230)
!14232 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14228)
!14233 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14228)
!14234 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14228)
!14235 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14228)
!14236 = !DILocation(line: 639, column: 4, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14238, file: !2332, line: 638, column: 41)
!14238 = distinct !DILexicalBlock(scope: !14239, file: !2332, line: 638, column: 7)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !2332, line: 637, column: 26)
!14240 = distinct !DILexicalBlock(scope: !14223, file: !2332, line: 637, column: 2)
!14241 = !DILocation(line: 0, scope: !13738, inlinedAt: !14242)
!14242 = distinct !DILocation(line: 637, column: 2, scope: !14240)
!14243 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14242)
!14244 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14242)
!14245 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14242)
!14246 = !DILocation(line: 0, scope: !13752, inlinedAt: !14247)
!14247 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14242)
!14248 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14247)
!14249 = !DILocation(line: 642, column: 1, scope: !14219)
!14250 = distinct !DISubprogram(name: "ready_thread", scope: !2332, file: !2332, line: 617, type: !13662, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14251)
!14251 = !{!14252}
!14252 = !DILocalVariable(name: "thread", arg: 1, scope: !14250, file: !2332, line: 617, type: !2224)
!14253 = !DILocation(line: 0, scope: !14250)
!14254 = !DILocation(line: 626, column: 7, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14250, file: !2332, line: 626, column: 6)
!14256 = !DILocation(line: 626, column: 34, scope: !14255)
!14257 = !DILocation(line: 626, column: 37, scope: !14255)
!14258 = !DILocation(line: 626, column: 6, scope: !14250)
!14259 = !DILocation(line: 0, scope: !13913, inlinedAt: !14260)
!14260 = distinct !DILocation(line: 629, column: 3, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14255, file: !2332, line: 626, column: 64)
!14262 = !DILocation(line: 252, column: 15, scope: !13913, inlinedAt: !14260)
!14263 = !DILocation(line: 252, column: 28, scope: !13913, inlinedAt: !14260)
!14264 = !DILocation(line: 0, scope: !13920, inlinedAt: !14265)
!14265 = distinct !DILocation(line: 254, column: 3, scope: !13924, inlinedAt: !14260)
!14266 = !DILocation(line: 0, scope: !13927, inlinedAt: !14267)
!14267 = distinct !DILocation(line: 229, column: 2, scope: !13920, inlinedAt: !14265)
!14268 = !DILocation(line: 186, column: 2, scope: !13937, inlinedAt: !14267)
!14269 = !DILocation(line: 186, column: 2, scope: !13938, inlinedAt: !14267)
!14270 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !14267)
!14271 = !DILocation(line: 188, column: 2, scope: !13943, inlinedAt: !14267)
!14272 = !DILocation(line: 188, column: 2, scope: !13945, inlinedAt: !14267)
!14273 = !DILocation(line: 0, scope: !13943, inlinedAt: !14267)
!14274 = !DILocation(line: 189, column: 7, scope: !13948, inlinedAt: !14267)
!14275 = !DILocation(line: 189, column: 35, scope: !13948, inlinedAt: !14267)
!14276 = !DILocation(line: 189, column: 7, scope: !13949, inlinedAt: !14267)
!14277 = !DILocation(line: 191, column: 21, scope: !13953, inlinedAt: !14267)
!14278 = !DILocation(line: 190, column: 4, scope: !13953, inlinedAt: !14267)
!14279 = !DILocation(line: 192, column: 4, scope: !13953, inlinedAt: !14267)
!14280 = distinct !{!14280, !14271, !14281}
!14281 = !DILocation(line: 194, column: 2, scope: !13943, inlinedAt: !14267)
!14282 = !DILocation(line: 196, column: 37, scope: !13927, inlinedAt: !14267)
!14283 = !DILocation(line: 196, column: 2, scope: !13927, inlinedAt: !14267)
!14284 = !DILocation(line: 197, column: 1, scope: !13927, inlinedAt: !14267)
!14285 = !DILocation(line: 630, column: 3, scope: !14261)
!14286 = !DILocation(line: 632, column: 2, scope: !14261)
!14287 = !DILocation(line: 633, column: 1, scope: !14250)
!14288 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12866, file: !12866, line: 120, type: !13845, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14289)
!14289 = !{!14290}
!14290 = !DILocalVariable(name: "thread", arg: 1, scope: !14288, file: !12866, line: 120, type: !2224)
!14291 = !DILocation(line: 0, scope: !14288)
!14292 = !DILocation(line: 122, column: 12, scope: !14288)
!14293 = !DILocation(line: 122, column: 62, scope: !14288)
!14294 = !DILocation(line: 123, column: 4, scope: !14288)
!14295 = !DILocation(line: 122, column: 2, scope: !14288)
!14296 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2332, file: !2332, line: 644, type: !13662, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14297)
!14297 = !{!14298, !14299, !14301}
!14298 = !DILocalVariable(name: "thread", arg: 1, scope: !14296, file: !2332, line: 644, type: !2224)
!14299 = !DILocalVariable(name: "__i", scope: !14300, file: !2332, line: 646, type: !13696)
!14300 = distinct !DILexicalBlock(scope: !14296, file: !2332, line: 646, column: 2)
!14301 = !DILocalVariable(name: "__key", scope: !14300, file: !2332, line: 646, type: !13696)
!14302 = !DILocation(line: 0, scope: !14296)
!14303 = !DILocation(line: 0, scope: !14300)
!14304 = !DILocation(line: 0, scope: !13704, inlinedAt: !14305)
!14305 = distinct !DILocation(line: 646, column: 2, scope: !14300)
!14306 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14307)
!14307 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14305)
!14308 = !DILocation(line: 0, scope: !13713, inlinedAt: !14307)
!14309 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14305)
!14310 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14305)
!14311 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14305)
!14312 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14305)
!14313 = !DILocation(line: 647, column: 3, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !2332, line: 646, column: 26)
!14315 = distinct !DILexicalBlock(scope: !14300, file: !2332, line: 646, column: 2)
!14316 = !DILocation(line: 0, scope: !13738, inlinedAt: !14317)
!14317 = distinct !DILocation(line: 646, column: 2, scope: !14315)
!14318 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14317)
!14319 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14317)
!14320 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14317)
!14321 = !DILocation(line: 0, scope: !13752, inlinedAt: !14322)
!14322 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14317)
!14323 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14322)
!14324 = !DILocation(line: 649, column: 1, scope: !14296)
!14325 = distinct !DISubprogram(name: "z_sched_start", scope: !2332, file: !2332, line: 651, type: !13662, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14326)
!14326 = !{!14327, !14328}
!14327 = !DILocalVariable(name: "thread", arg: 1, scope: !14325, file: !2332, line: 651, type: !2224)
!14328 = !DILocalVariable(name: "key", scope: !14325, file: !2332, line: 653, type: !13696)
!14329 = !DILocation(line: 0, scope: !14325)
!14330 = !DILocation(line: 0, scope: !13704, inlinedAt: !14331)
!14331 = distinct !DILocation(line: 653, column: 25, scope: !14325)
!14332 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14333)
!14333 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14331)
!14334 = !DILocation(line: 0, scope: !13713, inlinedAt: !14333)
!14335 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14331)
!14336 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14331)
!14337 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14331)
!14338 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14331)
!14339 = !DILocation(line: 655, column: 6, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14325, file: !2332, line: 655, column: 6)
!14341 = !DILocation(line: 655, column: 6, scope: !14325)
!14342 = !DILocation(line: 0, scope: !13738, inlinedAt: !14343)
!14343 = distinct !DILocation(line: 656, column: 3, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14340, file: !2332, line: 655, column: 36)
!14345 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14343)
!14346 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14343)
!14347 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14343)
!14348 = !DILocation(line: 0, scope: !13752, inlinedAt: !14349)
!14349 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14343)
!14350 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14349)
!14351 = !DILocation(line: 657, column: 3, scope: !14344)
!14352 = !DILocation(line: 660, column: 2, scope: !14325)
!14353 = !DILocation(line: 661, column: 2, scope: !14325)
!14354 = !DILocation(line: 662, column: 2, scope: !14325)
!14355 = !DILocation(line: 663, column: 1, scope: !14325)
!14356 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12866, file: !12866, line: 126, type: !13845, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14357)
!14357 = !{!14358}
!14358 = !DILocalVariable(name: "thread", arg: 1, scope: !14356, file: !12866, line: 126, type: !2224)
!14359 = !DILocation(line: 0, scope: !14356)
!14360 = !DILocation(line: 128, column: 23, scope: !14356)
!14361 = !DILocation(line: 128, column: 36, scope: !14356)
!14362 = !DILocation(line: 128, column: 56, scope: !14356)
!14363 = !DILocation(line: 128, column: 2, scope: !14356)
!14364 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12866, file: !12866, line: 155, type: !13662, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14365)
!14365 = !{!14366}
!14366 = !DILocalVariable(name: "thread", arg: 1, scope: !14364, file: !12866, line: 155, type: !2224)
!14367 = !DILocation(line: 0, scope: !14364)
!14368 = !DILocation(line: 157, column: 15, scope: !14364)
!14369 = !DILocation(line: 157, column: 28, scope: !14364)
!14370 = !DILocation(line: 158, column: 1, scope: !14364)
!14371 = distinct !DISubprogram(name: "z_reschedule", scope: !2332, file: !2332, line: 967, type: !13739, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14372)
!14372 = !{!14373, !14374}
!14373 = !DILocalVariable(name: "lock", arg: 1, scope: !14371, file: !2332, line: 967, type: !13707)
!14374 = !DILocalVariable(name: "key", arg: 2, scope: !14371, file: !2332, line: 967, type: !13696)
!14375 = !DILocation(line: 0, scope: !14371)
!14376 = !DILocation(line: 969, column: 6, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14371, file: !2332, line: 969, column: 6)
!14378 = !DILocation(line: 969, column: 23, scope: !14377)
!14379 = !DILocation(line: 969, column: 26, scope: !14377)
!14380 = !DILocation(line: 969, column: 6, scope: !14371)
!14381 = !DILocalVariable(name: "key", arg: 2, scope: !14382, file: !12970, line: 193, type: !13696)
!14382 = distinct !DISubprogram(name: "z_swap", scope: !12970, file: !12970, line: 193, type: !14383, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14385)
!14383 = !DISubroutineType(types: !14384)
!14384 = !{!119, !13707, !13696}
!14385 = !{!14386, !14381}
!14386 = !DILocalVariable(name: "lock", arg: 1, scope: !14382, file: !12970, line: 193, type: !13707)
!14387 = !DILocation(line: 0, scope: !14382, inlinedAt: !14388)
!14388 = distinct !DILocation(line: 970, column: 3, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14377, file: !2332, line: 969, column: 39)
!14390 = !DILocalVariable(name: "l", arg: 1, scope: !14391, file: !259, line: 221, type: !13707)
!14391 = distinct !DISubprogram(name: "k_spin_release", scope: !259, file: !259, line: 221, type: !14392, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14394)
!14392 = !DISubroutineType(types: !14393)
!14393 = !{null, !13707}
!14394 = !{!14390}
!14395 = !DILocation(line: 0, scope: !14391, inlinedAt: !14396)
!14396 = distinct !DILocation(line: 195, column: 2, scope: !14382, inlinedAt: !14388)
!14397 = !DILocation(line: 225, column: 2, scope: !14398, inlinedAt: !14396)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !259, line: 225, column: 2)
!14399 = distinct !DILexicalBlock(scope: !14391, file: !259, line: 225, column: 2)
!14400 = !DILocation(line: 225, column: 2, scope: !14399, inlinedAt: !14396)
!14401 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !14396)
!14402 = distinct !DILexicalBlock(scope: !14398, file: !259, line: 225, column: 2)
!14403 = !DILocation(line: 196, column: 9, scope: !14382, inlinedAt: !14388)
!14404 = !DILocation(line: 971, column: 2, scope: !14389)
!14405 = !DILocation(line: 0, scope: !13738, inlinedAt: !14406)
!14406 = distinct !DILocation(line: 972, column: 3, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14377, file: !2332, line: 971, column: 9)
!14408 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14406)
!14409 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14406)
!14410 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14406)
!14411 = !DILocation(line: 0, scope: !13752, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14406)
!14413 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14412)
!14414 = !DILocation(line: 975, column: 1, scope: !14371)
!14415 = distinct !DISubprogram(name: "resched", scope: !2332, file: !2332, line: 940, type: !14416, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14418)
!14416 = !DISubroutineType(types: !14417)
!14417 = !{!345, !118}
!14418 = !{!14419}
!14419 = !DILocalVariable(name: "key", arg: 1, scope: !14415, file: !2332, line: 940, type: !118)
!14420 = !DILocation(line: 0, scope: !14415)
!14421 = !DILocalVariable(name: "key", arg: 1, scope: !14422, file: !5993, line: 112, type: !32)
!14422 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5993, file: !5993, line: 112, type: !14423, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14425)
!14423 = !DISubroutineType(types: !14424)
!14424 = !{!345, !32}
!14425 = !{!14421}
!14426 = !DILocation(line: 0, scope: !14422, inlinedAt: !14427)
!14427 = distinct !DILocation(line: 946, column: 9, scope: !14415)
!14428 = !DILocation(line: 115, column: 13, scope: !14422, inlinedAt: !14427)
!14429 = !DILocation(line: 946, column: 32, scope: !14415)
!14430 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !14434)
!14431 = distinct !DISubprogram(name: "__get_IPSR", scope: !6314, file: !6314, line: 1027, type: !3198, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14432)
!14432 = !{!14433}
!14433 = !DILocalVariable(name: "result", scope: !14431, file: !6314, line: 1029, type: !118)
!14434 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !14436)
!14435 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7364, file: !7364, line: 46, type: !7365, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!14436 = distinct !DILocation(line: 946, column: 36, scope: !14415)
!14437 = !{i64 3587709}
!14438 = !DILocation(line: 0, scope: !14431, inlinedAt: !14434)
!14439 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !14436)
!14440 = !DILocation(line: 946, column: 2, scope: !14415)
!14441 = distinct !DISubprogram(name: "need_swap", scope: !2332, file: !2332, line: 953, type: !7365, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14442)
!14442 = !{!14443}
!14443 = !DILocalVariable(name: "new_thread", scope: !14441, file: !2332, line: 959, type: !2224)
!14444 = !DILocation(line: 962, column: 31, scope: !14441)
!14445 = !DILocation(line: 0, scope: !14441)
!14446 = !DILocation(line: 963, column: 23, scope: !14441)
!14447 = !DILocation(line: 963, column: 20, scope: !14441)
!14448 = !DILocation(line: 963, column: 2, scope: !14441)
!14449 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12970, file: !12970, line: 181, type: !6324, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14450)
!14450 = !{!14451, !14452}
!14451 = !DILocalVariable(name: "key", arg: 1, scope: !14449, file: !12970, line: 181, type: !32)
!14452 = !DILocalVariable(name: "ret", scope: !14449, file: !12970, line: 183, type: !119)
!14453 = !DILocation(line: 0, scope: !14449)
!14454 = !DILocation(line: 185, column: 8, scope: !14449)
!14455 = !DILocation(line: 186, column: 2, scope: !14449)
!14456 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2332, file: !2332, line: 665, type: !13662, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14457)
!14457 = !{!14458, !14459, !14461}
!14458 = !DILocalVariable(name: "thread", arg: 1, scope: !14456, file: !2332, line: 665, type: !2224)
!14459 = !DILocalVariable(name: "__i", scope: !14460, file: !2332, line: 671, type: !13696)
!14460 = distinct !DILexicalBlock(scope: !14456, file: !2332, line: 671, column: 2)
!14461 = !DILocalVariable(name: "__key", scope: !14460, file: !2332, line: 671, type: !13696)
!14462 = !DILocation(line: 0, scope: !14456)
!14463 = !DILocation(line: 669, column: 8, scope: !14456)
!14464 = !DILocation(line: 0, scope: !14460)
!14465 = !DILocation(line: 0, scope: !13704, inlinedAt: !14466)
!14466 = distinct !DILocation(line: 671, column: 2, scope: !14460)
!14467 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14466)
!14469 = !DILocation(line: 0, scope: !13713, inlinedAt: !14468)
!14470 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14466)
!14471 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14466)
!14472 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14466)
!14473 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14466)
!14474 = !DILocation(line: 672, column: 7, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14476, file: !2332, line: 672, column: 7)
!14476 = distinct !DILexicalBlock(scope: !14477, file: !2332, line: 671, column: 26)
!14477 = distinct !DILexicalBlock(scope: !14460, file: !2332, line: 671, column: 2)
!14478 = !DILocation(line: 672, column: 7, scope: !14476)
!14479 = !DILocation(line: 0, scope: !13896, inlinedAt: !14480)
!14480 = distinct !DILocation(line: 673, column: 4, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14475, file: !2332, line: 672, column: 35)
!14482 = !DILocation(line: 266, column: 15, scope: !13896, inlinedAt: !14480)
!14483 = !DILocation(line: 266, column: 28, scope: !13896, inlinedAt: !14480)
!14484 = !DILocation(line: 0, scope: !13904, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 268, column: 3, scope: !13908, inlinedAt: !14480)
!14486 = !DILocation(line: 234, column: 2, scope: !13904, inlinedAt: !14485)
!14487 = !DILocation(line: 674, column: 3, scope: !14481)
!14488 = !DILocation(line: 675, column: 3, scope: !14476)
!14489 = !DILocation(line: 676, column: 26, scope: !14476)
!14490 = !DILocation(line: 676, column: 23, scope: !14476)
!14491 = !DILocation(line: 676, column: 3, scope: !14476)
!14492 = !DILocation(line: 0, scope: !13738, inlinedAt: !14493)
!14493 = distinct !DILocation(line: 671, column: 2, scope: !14477)
!14494 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14493)
!14495 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14493)
!14496 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14493)
!14497 = !DILocation(line: 0, scope: !13752, inlinedAt: !14498)
!14498 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14493)
!14499 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14498)
!14500 = !DILocation(line: 679, column: 16, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14456, file: !2332, line: 679, column: 6)
!14502 = !DILocation(line: 679, column: 13, scope: !14501)
!14503 = !DILocation(line: 679, column: 6, scope: !14456)
!14504 = !DILocation(line: 680, column: 3, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14501, file: !2332, line: 679, column: 26)
!14506 = !DILocation(line: 681, column: 2, scope: !14505)
!14507 = !DILocation(line: 684, column: 1, scope: !14456)
!14508 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13295, file: !13295, line: 52, type: !13680, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14509)
!14509 = !{!14510}
!14510 = !DILocalVariable(name: "thread", arg: 1, scope: !14508, file: !13295, line: 52, type: !2224)
!14511 = !DILocation(line: 0, scope: !14508)
!14512 = !DILocation(line: 54, column: 39, scope: !14508)
!14513 = !DILocation(line: 54, column: 9, scope: !14508)
!14514 = !DILocation(line: 54, column: 2, scope: !14508)
!14515 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12866, file: !12866, line: 141, type: !13662, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14516)
!14516 = !{!14517}
!14517 = !DILocalVariable(name: "thread", arg: 1, scope: !14515, file: !12866, line: 141, type: !2224)
!14518 = !DILocation(line: 0, scope: !14515)
!14519 = !DILocation(line: 143, column: 15, scope: !14515)
!14520 = !DILocation(line: 143, column: 28, scope: !14515)
!14521 = !DILocation(line: 146, column: 1, scope: !14515)
!14522 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12866, file: !12866, line: 73, type: !2960, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!14523 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14524)
!14524 = distinct !DILocation(line: 75, column: 30, scope: !14522)
!14525 = !DILocation(line: 0, scope: !13713, inlinedAt: !14524)
!14526 = !DILocation(line: 75, column: 9, scope: !14522)
!14527 = !DILocation(line: 76, column: 1, scope: !14522)
!14528 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2332, file: !2332, line: 977, type: !6409, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14529)
!14529 = !{!14530}
!14530 = !DILocalVariable(name: "key", arg: 1, scope: !14528, file: !2332, line: 977, type: !118)
!14531 = !DILocation(line: 0, scope: !14528)
!14532 = !DILocation(line: 979, column: 6, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14528, file: !2332, line: 979, column: 6)
!14534 = !DILocation(line: 979, column: 6, scope: !14528)
!14535 = !DILocation(line: 980, column: 3, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14533, file: !2332, line: 979, column: 20)
!14537 = !DILocation(line: 981, column: 2, scope: !14536)
!14538 = !DILocation(line: 0, scope: !13752, inlinedAt: !14539)
!14539 = distinct !DILocation(line: 982, column: 3, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14533, file: !2332, line: 981, column: 9)
!14541 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14539)
!14542 = !DILocation(line: 985, column: 1, scope: !14528)
!14543 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2332, file: !2332, line: 695, type: !13662, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14544)
!14544 = !{!14545, !14546}
!14545 = !DILocalVariable(name: "thread", arg: 1, scope: !14543, file: !2332, line: 695, type: !2224)
!14546 = !DILocalVariable(name: "key", scope: !14543, file: !2332, line: 699, type: !13696)
!14547 = !DILocation(line: 0, scope: !14543)
!14548 = !DILocation(line: 0, scope: !13704, inlinedAt: !14549)
!14549 = distinct !DILocation(line: 699, column: 25, scope: !14543)
!14550 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14551)
!14551 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14549)
!14552 = !DILocation(line: 0, scope: !13713, inlinedAt: !14551)
!14553 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14549)
!14554 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14549)
!14555 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14549)
!14556 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14549)
!14557 = !DILocation(line: 702, column: 7, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14543, file: !2332, line: 702, column: 6)
!14559 = !DILocation(line: 702, column: 6, scope: !14543)
!14560 = !DILocation(line: 0, scope: !13738, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 703, column: 3, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14558, file: !2332, line: 702, column: 38)
!14563 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14561)
!14564 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14561)
!14565 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14561)
!14566 = !DILocation(line: 0, scope: !13752, inlinedAt: !14567)
!14567 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14561)
!14568 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14567)
!14569 = !DILocation(line: 704, column: 3, scope: !14562)
!14570 = !DILocation(line: 707, column: 2, scope: !14543)
!14571 = !DILocation(line: 708, column: 2, scope: !14543)
!14572 = !DILocation(line: 710, column: 2, scope: !14543)
!14573 = !DILocation(line: 713, column: 1, scope: !14543)
!14574 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12866, file: !12866, line: 96, type: !13845, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14575)
!14575 = !{!14576}
!14576 = !DILocalVariable(name: "thread", arg: 1, scope: !14574, file: !12866, line: 96, type: !2224)
!14577 = !DILocation(line: 0, scope: !14574)
!14578 = !DILocation(line: 98, column: 23, scope: !14574)
!14579 = !DILocation(line: 98, column: 36, scope: !14574)
!14580 = !DILocation(line: 98, column: 57, scope: !14574)
!14581 = !DILocation(line: 98, column: 2, scope: !14574)
!14582 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12866, file: !12866, line: 148, type: !13662, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14583)
!14583 = !{!14584}
!14584 = !DILocalVariable(name: "thread", arg: 1, scope: !14582, file: !12866, line: 148, type: !2224)
!14585 = !DILocation(line: 0, scope: !14582)
!14586 = !DILocation(line: 150, column: 15, scope: !14582)
!14587 = !DILocation(line: 150, column: 28, scope: !14582)
!14588 = !DILocation(line: 153, column: 1, scope: !14582)
!14589 = distinct !DISubprogram(name: "z_pend_thread", scope: !2332, file: !2332, line: 770, type: !14590, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14596)
!14590 = !DISubroutineType(types: !14591)
!14591 = !{null, !2224, !2255, !14592}
!14592 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !14593)
!14593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !14594)
!14594 = !{!14595}
!14595 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14593, file: !115, line: 66, baseType: !114, size: 64)
!14596 = !{!14597, !14598, !14599, !14600, !14602}
!14597 = !DILocalVariable(name: "thread", arg: 1, scope: !14589, file: !2332, line: 770, type: !2224)
!14598 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14589, file: !2332, line: 770, type: !2255)
!14599 = !DILocalVariable(name: "timeout", arg: 3, scope: !14589, file: !2332, line: 771, type: !14592)
!14600 = !DILocalVariable(name: "__i", scope: !14601, file: !2332, line: 774, type: !13696)
!14601 = distinct !DILexicalBlock(scope: !14589, file: !2332, line: 774, column: 2)
!14602 = !DILocalVariable(name: "__key", scope: !14601, file: !2332, line: 774, type: !13696)
!14603 = !DILocation(line: 0, scope: !14589)
!14604 = !DILocation(line: 773, column: 2, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14606, file: !2332, line: 773, column: 2)
!14606 = distinct !DILexicalBlock(scope: !14589, file: !2332, line: 773, column: 2)
!14607 = !DILocation(line: 773, column: 2, scope: !14606)
!14608 = !DILocation(line: 773, column: 2, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14605, file: !2332, line: 773, column: 2)
!14610 = !DILocation(line: 0, scope: !14601)
!14611 = !DILocation(line: 0, scope: !13704, inlinedAt: !14612)
!14612 = distinct !DILocation(line: 774, column: 2, scope: !14601)
!14613 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14612)
!14615 = !DILocation(line: 0, scope: !13713, inlinedAt: !14614)
!14616 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14612)
!14617 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14612)
!14618 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14612)
!14619 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14612)
!14620 = !DILocation(line: 775, column: 3, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !2332, line: 774, column: 26)
!14622 = distinct !DILexicalBlock(scope: !14601, file: !2332, line: 774, column: 2)
!14623 = !DILocation(line: 0, scope: !13738, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 774, column: 2, scope: !14622)
!14625 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14624)
!14626 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14624)
!14627 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14624)
!14628 = !DILocation(line: 0, scope: !13752, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14624)
!14630 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14629)
!14631 = !DILocation(line: 777, column: 1, scope: !14589)
!14632 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2332, file: !2332, line: 79, type: !13845, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14633)
!14633 = !{!14634}
!14634 = !DILocalVariable(name: "thread", arg: 1, scope: !14632, file: !2332, line: 79, type: !2224)
!14635 = !DILocation(line: 0, scope: !14632)
!14636 = !DILocation(line: 81, column: 23, scope: !14632)
!14637 = !DILocation(line: 81, column: 36, scope: !14632)
!14638 = !DILocation(line: 81, column: 53, scope: !14632)
!14639 = !DILocation(line: 81, column: 2, scope: !14632)
!14640 = distinct !DISubprogram(name: "pend_locked", scope: !2332, file: !2332, line: 760, type: !14590, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14641)
!14641 = !{!14642, !14643, !14644}
!14642 = !DILocalVariable(name: "thread", arg: 1, scope: !14640, file: !2332, line: 760, type: !2224)
!14643 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14640, file: !2332, line: 760, type: !2255)
!14644 = !DILocalVariable(name: "timeout", arg: 3, scope: !14640, file: !2332, line: 761, type: !14592)
!14645 = !DILocation(line: 0, scope: !14640)
!14646 = !DILocation(line: 766, column: 2, scope: !14640)
!14647 = !DILocation(line: 767, column: 2, scope: !14640)
!14648 = !DILocation(line: 768, column: 1, scope: !14640)
!14649 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2332, file: !2332, line: 740, type: !14650, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14652)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{null, !2224, !2255}
!14652 = !{!14653, !14654}
!14653 = !DILocalVariable(name: "thread", arg: 1, scope: !14649, file: !2332, line: 740, type: !2224)
!14654 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14649, file: !2332, line: 740, type: !2255)
!14655 = !DILocation(line: 0, scope: !14649)
!14656 = !DILocation(line: 742, column: 2, scope: !14649)
!14657 = !DILocation(line: 743, column: 2, scope: !14649)
!14658 = !DILocation(line: 747, column: 13, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14649, file: !2332, line: 747, column: 6)
!14660 = !DILocation(line: 747, column: 6, scope: !14649)
!14661 = !DILocation(line: 748, column: 16, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14659, file: !2332, line: 747, column: 22)
!14663 = !DILocation(line: 748, column: 26, scope: !14662)
!14664 = !DILocation(line: 749, column: 28, scope: !14662)
!14665 = !DILocation(line: 0, scope: !13927, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 749, column: 3, scope: !14662)
!14667 = !DILocation(line: 186, column: 2, scope: !13937, inlinedAt: !14666)
!14668 = !DILocation(line: 186, column: 2, scope: !13938, inlinedAt: !14666)
!14669 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !14666)
!14670 = !DILocation(line: 188, column: 2, scope: !13943, inlinedAt: !14666)
!14671 = !DILocation(line: 188, column: 2, scope: !13945, inlinedAt: !14666)
!14672 = !DILocation(line: 0, scope: !13943, inlinedAt: !14666)
!14673 = !DILocation(line: 189, column: 7, scope: !13948, inlinedAt: !14666)
!14674 = !DILocation(line: 189, column: 35, scope: !13948, inlinedAt: !14666)
!14675 = !DILocation(line: 189, column: 7, scope: !13949, inlinedAt: !14666)
!14676 = !DILocation(line: 191, column: 21, scope: !13953, inlinedAt: !14666)
!14677 = !DILocation(line: 190, column: 4, scope: !13953, inlinedAt: !14666)
!14678 = !DILocation(line: 192, column: 4, scope: !13953, inlinedAt: !14666)
!14679 = distinct !{!14679, !14670, !14680}
!14680 = !DILocation(line: 194, column: 2, scope: !13943, inlinedAt: !14666)
!14681 = !DILocation(line: 196, column: 37, scope: !13927, inlinedAt: !14666)
!14682 = !DILocation(line: 196, column: 2, scope: !13927, inlinedAt: !14666)
!14683 = !DILocation(line: 197, column: 1, scope: !13927, inlinedAt: !14666)
!14684 = !DILocation(line: 751, column: 1, scope: !14649)
!14685 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2332, file: !2332, line: 753, type: !14686, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14688)
!14686 = !DISubroutineType(types: !14687)
!14687 = !{null, !2224, !14592}
!14688 = !{!14689, !14690}
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14685, file: !2332, line: 753, type: !2224)
!14690 = !DILocalVariable(name: "timeout", arg: 2, scope: !14685, file: !2332, line: 753, type: !14592)
!14691 = !DILocation(line: 0, scope: !14685)
!14692 = !DILocation(line: 755, column: 7, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14685, file: !2332, line: 755, column: 6)
!14694 = !DILocation(line: 755, column: 6, scope: !14685)
!14695 = !DILocation(line: 756, column: 3, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14693, file: !2332, line: 755, column: 41)
!14697 = !DILocation(line: 757, column: 2, scope: !14696)
!14698 = !DILocation(line: 758, column: 1, scope: !14685)
!14699 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13295, file: !13295, line: 47, type: !14686, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14700)
!14700 = !{!14701, !14702}
!14701 = !DILocalVariable(name: "thread", arg: 1, scope: !14699, file: !13295, line: 47, type: !2224)
!14702 = !DILocalVariable(name: "ticks", arg: 2, scope: !14699, file: !13295, line: 47, type: !14592)
!14703 = !DILocation(line: 0, scope: !14699)
!14704 = !DILocation(line: 49, column: 30, scope: !14699)
!14705 = !DILocation(line: 49, column: 2, scope: !14699)
!14706 = !DILocation(line: 50, column: 1, scope: !14699)
!14707 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2332, file: !2332, line: 795, type: !2281, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14708)
!14708 = !{!14709, !14710, !14711, !14713, !14714}
!14709 = !DILocalVariable(name: "timeout", arg: 1, scope: !14707, file: !2332, line: 795, type: !2283)
!14710 = !DILocalVariable(name: "thread", scope: !14707, file: !2332, line: 797, type: !2224)
!14711 = !DILocalVariable(name: "__i", scope: !14712, file: !2332, line: 800, type: !13696)
!14712 = distinct !DILexicalBlock(scope: !14707, file: !2332, line: 800, column: 2)
!14713 = !DILocalVariable(name: "__key", scope: !14712, file: !2332, line: 800, type: !13696)
!14714 = !DILocalVariable(name: "killed", scope: !14715, file: !2332, line: 801, type: !345)
!14715 = distinct !DILexicalBlock(scope: !14716, file: !2332, line: 800, column: 26)
!14716 = distinct !DILexicalBlock(scope: !14712, file: !2332, line: 800, column: 2)
!14717 = !DILocation(line: 0, scope: !14707)
!14718 = !DILocation(line: 797, column: 28, scope: !14707)
!14719 = !DILocation(line: 0, scope: !14712)
!14720 = !DILocation(line: 0, scope: !13704, inlinedAt: !14721)
!14721 = distinct !DILocation(line: 800, column: 2, scope: !14712)
!14722 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14723)
!14723 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14721)
!14724 = !DILocation(line: 0, scope: !13713, inlinedAt: !14723)
!14725 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14721)
!14726 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14721)
!14727 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14721)
!14728 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14721)
!14729 = !DILocation(line: 801, column: 27, scope: !14715)
!14730 = !DILocation(line: 801, column: 32, scope: !14715)
!14731 = !DILocation(line: 801, column: 61, scope: !14715)
!14732 = !DILocation(line: 0, scope: !14715)
!14733 = !DILocation(line: 804, column: 7, scope: !14715)
!14734 = !DILocation(line: 805, column: 21, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14736, file: !2332, line: 805, column: 8)
!14736 = distinct !DILexicalBlock(scope: !14737, file: !2332, line: 804, column: 16)
!14737 = distinct !DILexicalBlock(scope: !14715, file: !2332, line: 804, column: 7)
!14738 = !DILocation(line: 805, column: 31, scope: !14735)
!14739 = !DILocation(line: 805, column: 8, scope: !14736)
!14740 = !DILocation(line: 806, column: 5, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14735, file: !2332, line: 805, column: 40)
!14742 = !DILocation(line: 807, column: 4, scope: !14741)
!14743 = !DILocation(line: 808, column: 4, scope: !14736)
!14744 = !DILocation(line: 809, column: 4, scope: !14736)
!14745 = !DILocation(line: 810, column: 4, scope: !14736)
!14746 = !DILocation(line: 811, column: 3, scope: !14736)
!14747 = !DILocation(line: 0, scope: !13738, inlinedAt: !14748)
!14748 = distinct !DILocation(line: 800, column: 2, scope: !14716)
!14749 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14748)
!14750 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14748)
!14751 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14748)
!14752 = !DILocation(line: 0, scope: !13752, inlinedAt: !14753)
!14753 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14748)
!14754 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14753)
!14755 = !DILocation(line: 813, column: 1, scope: !14707)
!14756 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2332, file: !2332, line: 779, type: !13662, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14757)
!14757 = !{!14758}
!14758 = !DILocalVariable(name: "thread", arg: 1, scope: !14756, file: !2332, line: 779, type: !2224)
!14759 = !DILocation(line: 0, scope: !14756)
!14760 = !DILocation(line: 781, column: 21, scope: !14756)
!14761 = !DILocation(line: 781, column: 2, scope: !14756)
!14762 = !DILocation(line: 782, column: 2, scope: !14756)
!14763 = !DILocation(line: 783, column: 15, scope: !14756)
!14764 = !DILocation(line: 783, column: 25, scope: !14756)
!14765 = !DILocation(line: 784, column: 1, scope: !14756)
!14766 = distinct !DISubprogram(name: "pended_on_thread", scope: !2332, file: !2332, line: 724, type: !14767, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14769)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{!2255, !2224}
!14769 = !{!14770}
!14770 = !DILocalVariable(name: "thread", arg: 1, scope: !14766, file: !2332, line: 724, type: !2224)
!14771 = !DILocation(line: 0, scope: !14766)
!14772 = !DILocation(line: 726, column: 2, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !2332, line: 726, column: 2)
!14774 = distinct !DILexicalBlock(scope: !14766, file: !2332, line: 726, column: 2)
!14775 = !DILocation(line: 726, column: 2, scope: !14774)
!14776 = !DILocation(line: 726, column: 2, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14773, file: !2332, line: 726, column: 2)
!14778 = !DILocation(line: 728, column: 2, scope: !14766)
!14779 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12866, file: !12866, line: 165, type: !13662, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14780)
!14780 = !{!14781}
!14781 = !DILocalVariable(name: "thread", arg: 1, scope: !14779, file: !12866, line: 165, type: !2224)
!14782 = !DILocation(line: 0, scope: !14779)
!14783 = !DILocation(line: 167, column: 15, scope: !14779)
!14784 = !DILocation(line: 167, column: 28, scope: !14779)
!14785 = !DILocation(line: 168, column: 1, scope: !14779)
!14786 = distinct !DISubprogram(name: "unready_thread", scope: !2332, file: !2332, line: 731, type: !13662, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14787)
!14787 = !{!14788}
!14788 = !DILocalVariable(name: "thread", arg: 1, scope: !14786, file: !2332, line: 731, type: !2224)
!14789 = !DILocation(line: 0, scope: !14786)
!14790 = !DILocation(line: 733, column: 6, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14786, file: !2332, line: 733, column: 6)
!14792 = !DILocation(line: 733, column: 6, scope: !14786)
!14793 = !DILocation(line: 0, scope: !13896, inlinedAt: !14794)
!14794 = distinct !DILocation(line: 734, column: 3, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14791, file: !2332, line: 733, column: 34)
!14796 = !DILocation(line: 266, column: 15, scope: !13896, inlinedAt: !14794)
!14797 = !DILocation(line: 266, column: 28, scope: !13896, inlinedAt: !14794)
!14798 = !DILocation(line: 0, scope: !13904, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 268, column: 3, scope: !13908, inlinedAt: !14794)
!14800 = !DILocation(line: 234, column: 2, scope: !13904, inlinedAt: !14799)
!14801 = !DILocation(line: 735, column: 2, scope: !14795)
!14802 = !DILocation(line: 736, column: 25, scope: !14786)
!14803 = !DILocation(line: 736, column: 22, scope: !14786)
!14804 = !DILocation(line: 736, column: 2, scope: !14786)
!14805 = !DILocation(line: 737, column: 1, scope: !14786)
!14806 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12866, file: !12866, line: 160, type: !13662, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14807)
!14807 = !{!14808}
!14808 = !DILocalVariable(name: "thread", arg: 1, scope: !14806, file: !12866, line: 160, type: !2224)
!14809 = !DILocation(line: 0, scope: !14806)
!14810 = !DILocation(line: 162, column: 15, scope: !14806)
!14811 = !DILocation(line: 162, column: 28, scope: !14806)
!14812 = !DILocation(line: 163, column: 1, scope: !14806)
!14813 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2332, file: !2332, line: 786, type: !13662, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14814)
!14814 = !{!14815, !14816, !14818}
!14815 = !DILocalVariable(name: "thread", arg: 1, scope: !14813, file: !2332, line: 786, type: !2224)
!14816 = !DILocalVariable(name: "__i", scope: !14817, file: !2332, line: 788, type: !13696)
!14817 = distinct !DILexicalBlock(scope: !14813, file: !2332, line: 788, column: 2)
!14818 = !DILocalVariable(name: "__key", scope: !14817, file: !2332, line: 788, type: !13696)
!14819 = !DILocation(line: 0, scope: !14813)
!14820 = !DILocation(line: 0, scope: !14817)
!14821 = !DILocation(line: 0, scope: !13704, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 788, column: 2, scope: !14817)
!14823 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14822)
!14825 = !DILocation(line: 0, scope: !13713, inlinedAt: !14824)
!14826 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14822)
!14827 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14822)
!14828 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14822)
!14829 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14822)
!14830 = !DILocation(line: 789, column: 3, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14832, file: !2332, line: 788, column: 26)
!14832 = distinct !DILexicalBlock(scope: !14817, file: !2332, line: 788, column: 2)
!14833 = !DILocation(line: 0, scope: !13738, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 788, column: 2, scope: !14832)
!14835 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14834)
!14836 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14834)
!14837 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14834)
!14838 = !DILocation(line: 0, scope: !13752, inlinedAt: !14839)
!14839 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14834)
!14840 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14839)
!14841 = !DILocation(line: 791, column: 1, scope: !14813)
!14842 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2332, file: !2332, line: 816, type: !14843, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14845)
!14843 = !DISubroutineType(types: !14844)
!14844 = !{!119, !118, !2255, !14592}
!14845 = !{!14846, !14847, !14848, !14849, !14850, !14852}
!14846 = !DILocalVariable(name: "key", arg: 1, scope: !14842, file: !2332, line: 816, type: !118)
!14847 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14842, file: !2332, line: 816, type: !2255)
!14848 = !DILocalVariable(name: "timeout", arg: 3, scope: !14842, file: !2332, line: 816, type: !14592)
!14849 = !DILocalVariable(name: "ret", scope: !14842, file: !2332, line: 828, type: !119)
!14850 = !DILocalVariable(name: "__i", scope: !14851, file: !2332, line: 829, type: !13696)
!14851 = distinct !DILexicalBlock(scope: !14842, file: !2332, line: 829, column: 2)
!14852 = !DILocalVariable(name: "__key", scope: !14851, file: !2332, line: 829, type: !13696)
!14853 = !DILocation(line: 0, scope: !14842)
!14854 = !DILocation(line: 823, column: 14, scope: !14842)
!14855 = !DILocation(line: 823, column: 2, scope: !14842)
!14856 = !DILocation(line: 826, column: 20, scope: !14842)
!14857 = !DILocation(line: 826, column: 18, scope: !14842)
!14858 = !DILocation(line: 828, column: 12, scope: !14842)
!14859 = !DILocation(line: 0, scope: !14851)
!14860 = !DILocation(line: 0, scope: !13704, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 829, column: 2, scope: !14851)
!14862 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14861)
!14864 = !DILocation(line: 0, scope: !13713, inlinedAt: !14863)
!14865 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14861)
!14866 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14861)
!14867 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14861)
!14868 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14861)
!14869 = !DILocation(line: 830, column: 7, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14871, file: !2332, line: 830, column: 7)
!14871 = distinct !DILexicalBlock(scope: !14872, file: !2332, line: 829, column: 26)
!14872 = distinct !DILexicalBlock(scope: !14851, file: !2332, line: 829, column: 2)
!14873 = !DILocation(line: 830, column: 26, scope: !14870)
!14874 = !DILocation(line: 830, column: 23, scope: !14870)
!14875 = !DILocation(line: 830, column: 7, scope: !14871)
!14876 = !DILocation(line: 831, column: 20, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14870, file: !2332, line: 830, column: 36)
!14878 = !DILocation(line: 832, column: 3, scope: !14877)
!14879 = !DILocation(line: 0, scope: !13738, inlinedAt: !14880)
!14880 = distinct !DILocation(line: 829, column: 2, scope: !14872)
!14881 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14880)
!14882 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14880)
!14883 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14880)
!14884 = !DILocation(line: 0, scope: !13752, inlinedAt: !14885)
!14885 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14880)
!14886 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14885)
!14887 = !DILocation(line: 834, column: 2, scope: !14842)
!14888 = distinct !DISubprogram(name: "z_pend_curr", scope: !2332, file: !2332, line: 840, type: !14889, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14891)
!14889 = !DISubroutineType(types: !14890)
!14890 = !{!119, !13707, !13696, !2255, !14592}
!14891 = !{!14892, !14893, !14894, !14895}
!14892 = !DILocalVariable(name: "lock", arg: 1, scope: !14888, file: !2332, line: 840, type: !13707)
!14893 = !DILocalVariable(name: "key", arg: 2, scope: !14888, file: !2332, line: 840, type: !13696)
!14894 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14888, file: !2332, line: 841, type: !2255)
!14895 = !DILocalVariable(name: "timeout", arg: 4, scope: !14888, file: !2332, line: 841, type: !14592)
!14896 = !DILocation(line: 0, scope: !14888)
!14897 = !DILocation(line: 844, column: 20, scope: !14888)
!14898 = !DILocation(line: 844, column: 18, scope: !14888)
!14899 = !DILocation(line: 846, column: 2, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14901, file: !2332, line: 846, column: 2)
!14901 = distinct !DILexicalBlock(scope: !14888, file: !2332, line: 846, column: 2)
!14902 = !DILocation(line: 846, column: 2, scope: !14901)
!14903 = !DILocation(line: 846, column: 2, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14900, file: !2332, line: 846, column: 2)
!14905 = !DILocation(line: 0, scope: !13704, inlinedAt: !14906)
!14906 = distinct !DILocation(line: 856, column: 9, scope: !14888)
!14907 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14906)
!14909 = !DILocation(line: 0, scope: !13713, inlinedAt: !14908)
!14910 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14906)
!14911 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14906)
!14912 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14906)
!14913 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14906)
!14914 = !DILocation(line: 857, column: 14, scope: !14888)
!14915 = !DILocation(line: 857, column: 2, scope: !14888)
!14916 = !DILocation(line: 0, scope: !14391, inlinedAt: !14917)
!14917 = distinct !DILocation(line: 858, column: 2, scope: !14888)
!14918 = !DILocation(line: 225, column: 2, scope: !14398, inlinedAt: !14917)
!14919 = !DILocation(line: 225, column: 2, scope: !14399, inlinedAt: !14917)
!14920 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !14917)
!14921 = !DILocation(line: 0, scope: !14382, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 859, column: 9, scope: !14888)
!14923 = !DILocation(line: 0, scope: !14391, inlinedAt: !14924)
!14924 = distinct !DILocation(line: 195, column: 2, scope: !14382, inlinedAt: !14922)
!14925 = !DILocation(line: 225, column: 2, scope: !14398, inlinedAt: !14924)
!14926 = !DILocation(line: 225, column: 2, scope: !14399, inlinedAt: !14924)
!14927 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !14924)
!14928 = !DILocation(line: 196, column: 9, scope: !14382, inlinedAt: !14922)
!14929 = !DILocation(line: 859, column: 2, scope: !14888)
!14930 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2332, file: !2332, line: 862, type: !14931, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14933)
!14931 = !DISubroutineType(types: !14932)
!14932 = !{!2224, !2255}
!14933 = !{!14934, !14935, !14936, !14938}
!14934 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14930, file: !2332, line: 862, type: !2255)
!14935 = !DILocalVariable(name: "thread", scope: !14930, file: !2332, line: 864, type: !2224)
!14936 = !DILocalVariable(name: "__i", scope: !14937, file: !2332, line: 866, type: !13696)
!14937 = distinct !DILexicalBlock(scope: !14930, file: !2332, line: 866, column: 2)
!14938 = !DILocalVariable(name: "__key", scope: !14937, file: !2332, line: 866, type: !13696)
!14939 = !DILocation(line: 0, scope: !14930)
!14940 = !DILocation(line: 0, scope: !14937)
!14941 = !DILocation(line: 0, scope: !13704, inlinedAt: !14942)
!14942 = distinct !DILocation(line: 866, column: 2, scope: !14937)
!14943 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14944)
!14944 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14942)
!14945 = !DILocation(line: 0, scope: !13713, inlinedAt: !14944)
!14946 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14942)
!14947 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14942)
!14948 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14942)
!14949 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14942)
!14950 = !DILocation(line: 867, column: 12, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14952, file: !2332, line: 866, column: 26)
!14952 = distinct !DILexicalBlock(scope: !14937, file: !2332, line: 866, column: 2)
!14953 = !DILocation(line: 869, column: 14, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14951, file: !2332, line: 869, column: 7)
!14955 = !DILocation(line: 869, column: 7, scope: !14951)
!14956 = !DILocation(line: 870, column: 4, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14954, file: !2332, line: 869, column: 23)
!14958 = !DILocation(line: 871, column: 3, scope: !14957)
!14959 = !DILocation(line: 0, scope: !13738, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 866, column: 2, scope: !14952)
!14961 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14960)
!14962 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14960)
!14963 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14960)
!14964 = !DILocation(line: 0, scope: !13752, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14960)
!14966 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !14965)
!14967 = !DILocation(line: 874, column: 2, scope: !14930)
!14968 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2332, file: !2332, line: 877, type: !14931, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !14969)
!14969 = !{!14970, !14971, !14972, !14974}
!14970 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14968, file: !2332, line: 877, type: !2255)
!14971 = !DILocalVariable(name: "thread", scope: !14968, file: !2332, line: 879, type: !2224)
!14972 = !DILocalVariable(name: "__i", scope: !14973, file: !2332, line: 881, type: !13696)
!14973 = distinct !DILexicalBlock(scope: !14968, file: !2332, line: 881, column: 2)
!14974 = !DILocalVariable(name: "__key", scope: !14973, file: !2332, line: 881, type: !13696)
!14975 = !DILocation(line: 0, scope: !14968)
!14976 = !DILocation(line: 0, scope: !14973)
!14977 = !DILocation(line: 0, scope: !13704, inlinedAt: !14978)
!14978 = distinct !DILocation(line: 881, column: 2, scope: !14973)
!14979 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !14978)
!14981 = !DILocation(line: 0, scope: !13713, inlinedAt: !14980)
!14982 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !14978)
!14983 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !14978)
!14984 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14978)
!14985 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !14978)
!14986 = !DILocation(line: 882, column: 12, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14988, file: !2332, line: 881, column: 26)
!14988 = distinct !DILexicalBlock(scope: !14973, file: !2332, line: 881, column: 2)
!14989 = !DILocation(line: 884, column: 14, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14987, file: !2332, line: 884, column: 7)
!14991 = !DILocation(line: 884, column: 7, scope: !14987)
!14992 = !DILocation(line: 885, column: 4, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14990, file: !2332, line: 884, column: 23)
!14994 = !DILocation(line: 886, column: 10, scope: !14993)
!14995 = !DILocation(line: 887, column: 3, scope: !14993)
!14996 = !DILocation(line: 0, scope: !13738, inlinedAt: !14997)
!14997 = distinct !DILocation(line: 881, column: 2, scope: !14988)
!14998 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !14997)
!14999 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !14997)
!15000 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14997)
!15001 = !DILocation(line: 0, scope: !13752, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !14997)
!15003 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15002)
!15004 = !DILocation(line: 890, column: 2, scope: !14968)
!15005 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2332, file: !2332, line: 893, type: !13662, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15006)
!15006 = !{!15007}
!15007 = !DILocalVariable(name: "thread", arg: 1, scope: !15005, file: !2332, line: 893, type: !2224)
!15008 = !DILocation(line: 0, scope: !15005)
!15009 = !DILocation(line: 0, scope: !14813, inlinedAt: !15010)
!15010 = distinct !DILocation(line: 895, column: 2, scope: !15005)
!15011 = !DILocation(line: 0, scope: !14817, inlinedAt: !15010)
!15012 = !DILocation(line: 0, scope: !13704, inlinedAt: !15013)
!15013 = distinct !DILocation(line: 788, column: 2, scope: !14817, inlinedAt: !15010)
!15014 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15015)
!15015 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15013)
!15016 = !DILocation(line: 0, scope: !13713, inlinedAt: !15015)
!15017 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15013)
!15018 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15013)
!15019 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15013)
!15020 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15013)
!15021 = !DILocation(line: 789, column: 3, scope: !14831, inlinedAt: !15010)
!15022 = !DILocation(line: 0, scope: !13738, inlinedAt: !15023)
!15023 = distinct !DILocation(line: 788, column: 2, scope: !14832, inlinedAt: !15010)
!15024 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15023)
!15025 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15023)
!15026 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15023)
!15027 = !DILocation(line: 0, scope: !13752, inlinedAt: !15028)
!15028 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15023)
!15029 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15028)
!15030 = !DILocation(line: 896, column: 8, scope: !15005)
!15031 = !DILocation(line: 897, column: 1, scope: !15005)
!15032 = distinct !DISubprogram(name: "z_set_prio", scope: !2332, file: !2332, line: 902, type: !14065, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15033)
!15033 = !{!15034, !15035, !15036, !15037, !15039}
!15034 = !DILocalVariable(name: "thread", arg: 1, scope: !15032, file: !2332, line: 902, type: !2224)
!15035 = !DILocalVariable(name: "prio", arg: 2, scope: !15032, file: !2332, line: 902, type: !119)
!15036 = !DILocalVariable(name: "need_sched", scope: !15032, file: !2332, line: 904, type: !345)
!15037 = !DILocalVariable(name: "__i", scope: !15038, file: !2332, line: 906, type: !13696)
!15038 = distinct !DILexicalBlock(scope: !15032, file: !2332, line: 906, column: 2)
!15039 = !DILocalVariable(name: "__key", scope: !15038, file: !2332, line: 906, type: !13696)
!15040 = !DILocation(line: 0, scope: !15032)
!15041 = !DILocation(line: 0, scope: !15038)
!15042 = !DILocation(line: 0, scope: !13704, inlinedAt: !15043)
!15043 = distinct !DILocation(line: 906, column: 2, scope: !15038)
!15044 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15045)
!15045 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15043)
!15046 = !DILocation(line: 0, scope: !13713, inlinedAt: !15045)
!15047 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15043)
!15048 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15043)
!15049 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15043)
!15050 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15043)
!15051 = !DILocation(line: 907, column: 16, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15053, file: !2332, line: 906, column: 26)
!15053 = distinct !DILexicalBlock(scope: !15038, file: !2332, line: 906, column: 2)
!15054 = !DILocation(line: 909, column: 7, scope: !15052)
!15055 = !DILocation(line: 0, scope: !13896, inlinedAt: !15056)
!15056 = distinct !DILocation(line: 912, column: 5, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15058, file: !2332, line: 911, column: 63)
!15058 = distinct !DILexicalBlock(scope: !15059, file: !2332, line: 911, column: 8)
!15059 = distinct !DILexicalBlock(scope: !15060, file: !2332, line: 909, column: 19)
!15060 = distinct !DILexicalBlock(scope: !15052, file: !2332, line: 909, column: 7)
!15061 = !DILocation(line: 266, column: 28, scope: !13896, inlinedAt: !15056)
!15062 = !DILocation(line: 0, scope: !13904, inlinedAt: !15063)
!15063 = distinct !DILocation(line: 268, column: 3, scope: !13908, inlinedAt: !15056)
!15064 = !DILocation(line: 234, column: 2, scope: !13904, inlinedAt: !15063)
!15065 = !DILocation(line: 913, column: 23, scope: !15057)
!15066 = !DILocation(line: 0, scope: !13913, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 914, column: 5, scope: !15057)
!15068 = !DILocation(line: 252, column: 28, scope: !13913, inlinedAt: !15067)
!15069 = !DILocation(line: 0, scope: !13920, inlinedAt: !15070)
!15070 = distinct !DILocation(line: 254, column: 3, scope: !13924, inlinedAt: !15067)
!15071 = !DILocation(line: 0, scope: !13927, inlinedAt: !15072)
!15072 = distinct !DILocation(line: 229, column: 2, scope: !13920, inlinedAt: !15070)
!15073 = !DILocation(line: 186, column: 2, scope: !13937, inlinedAt: !15072)
!15074 = !DILocation(line: 186, column: 2, scope: !13938, inlinedAt: !15072)
!15075 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !15072)
!15076 = !DILocation(line: 188, column: 2, scope: !13943, inlinedAt: !15072)
!15077 = !DILocation(line: 188, column: 2, scope: !13945, inlinedAt: !15072)
!15078 = !DILocation(line: 0, scope: !13943, inlinedAt: !15072)
!15079 = !DILocation(line: 189, column: 7, scope: !13948, inlinedAt: !15072)
!15080 = !DILocation(line: 189, column: 35, scope: !13948, inlinedAt: !15072)
!15081 = !DILocation(line: 189, column: 7, scope: !13949, inlinedAt: !15072)
!15082 = !DILocation(line: 190, column: 4, scope: !13953, inlinedAt: !15072)
!15083 = !DILocation(line: 192, column: 4, scope: !13953, inlinedAt: !15072)
!15084 = distinct !{!15084, !15076, !15085}
!15085 = !DILocation(line: 194, column: 2, scope: !13943, inlinedAt: !15072)
!15086 = !DILocation(line: 196, column: 2, scope: !13927, inlinedAt: !15072)
!15087 = !DILocation(line: 197, column: 1, scope: !13927, inlinedAt: !15072)
!15088 = !DILocation(line: 918, column: 4, scope: !15059)
!15089 = !DILocation(line: 919, column: 3, scope: !15059)
!15090 = !DILocation(line: 920, column: 22, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15060, file: !2332, line: 919, column: 10)
!15092 = !DILocation(line: 0, scope: !13738, inlinedAt: !15093)
!15093 = distinct !DILocation(line: 906, column: 2, scope: !15053)
!15094 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15093)
!15095 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15093)
!15096 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15093)
!15097 = !DILocation(line: 0, scope: !13752, inlinedAt: !15098)
!15098 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15093)
!15099 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15098)
!15100 = !DILocation(line: 926, column: 2, scope: !15032)
!15101 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2332, file: !2332, line: 929, type: !15102, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15104)
!15102 = !DISubroutineType(types: !15103)
!15103 = !{null, !2224, !119}
!15104 = !{!15105, !15106, !15107}
!15105 = !DILocalVariable(name: "thread", arg: 1, scope: !15101, file: !2332, line: 929, type: !2224)
!15106 = !DILocalVariable(name: "prio", arg: 2, scope: !15101, file: !2332, line: 929, type: !119)
!15107 = !DILocalVariable(name: "need_sched", scope: !15101, file: !2332, line: 931, type: !345)
!15108 = !DILocation(line: 0, scope: !15101)
!15109 = !DILocation(line: 931, column: 20, scope: !15101)
!15110 = !DILocation(line: 935, column: 17, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15101, file: !2332, line: 935, column: 6)
!15112 = !DILocation(line: 935, column: 20, scope: !15111)
!15113 = !DILocation(line: 935, column: 35, scope: !15111)
!15114 = !DILocation(line: 935, column: 48, scope: !15111)
!15115 = !DILocation(line: 935, column: 6, scope: !15101)
!15116 = !DILocation(line: 936, column: 3, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15111, file: !2332, line: 935, column: 55)
!15118 = !DILocation(line: 937, column: 2, scope: !15117)
!15119 = !DILocation(line: 938, column: 1, scope: !15101)
!15120 = distinct !DISubprogram(name: "k_sched_lock", scope: !2332, file: !2332, line: 987, type: !2960, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15121)
!15121 = !{!15122, !15124}
!15122 = !DILocalVariable(name: "__i", scope: !15123, file: !2332, line: 989, type: !13696)
!15123 = distinct !DILexicalBlock(scope: !15120, file: !2332, line: 989, column: 2)
!15124 = !DILocalVariable(name: "__key", scope: !15123, file: !2332, line: 989, type: !13696)
!15125 = !DILocation(line: 0, scope: !15123)
!15126 = !DILocation(line: 0, scope: !13704, inlinedAt: !15127)
!15127 = distinct !DILocation(line: 989, column: 2, scope: !15123)
!15128 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15129)
!15129 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15127)
!15130 = !DILocation(line: 0, scope: !13713, inlinedAt: !15129)
!15131 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15127)
!15132 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15127)
!15133 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15127)
!15134 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15127)
!15135 = !DILocation(line: 992, column: 3, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15137, file: !2332, line: 989, column: 26)
!15137 = distinct !DILexicalBlock(scope: !15123, file: !2332, line: 989, column: 2)
!15138 = !DILocation(line: 0, scope: !13738, inlinedAt: !15139)
!15139 = distinct !DILocation(line: 989, column: 2, scope: !15137)
!15140 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15139)
!15141 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15139)
!15142 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15139)
!15143 = !DILocation(line: 0, scope: !13752, inlinedAt: !15144)
!15144 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15139)
!15145 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15144)
!15146 = !DILocation(line: 994, column: 1, scope: !15120)
!15147 = distinct !DISubprogram(name: "z_sched_lock", scope: !12866, file: !12866, line: 251, type: !2960, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!15148 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15149)
!15149 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15150)
!15150 = distinct !DILocation(line: 253, column: 2, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15152, file: !12866, line: 253, column: 2)
!15152 = distinct !DILexicalBlock(scope: !15147, file: !12866, line: 253, column: 2)
!15153 = !DILocation(line: 0, scope: !14431, inlinedAt: !15149)
!15154 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15150)
!15155 = !DILocation(line: 253, column: 2, scope: !15152)
!15156 = !DILocation(line: 253, column: 2, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15151, file: !12866, line: 253, column: 2)
!15158 = !DILocation(line: 254, column: 2, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15160, file: !12866, line: 254, column: 2)
!15160 = distinct !DILexicalBlock(scope: !15147, file: !12866, line: 254, column: 2)
!15161 = !DILocation(line: 254, column: 2, scope: !15160)
!15162 = !DILocation(line: 254, column: 2, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15159, file: !12866, line: 254, column: 2)
!15164 = !DILocation(line: 256, column: 2, scope: !15147)
!15165 = !DILocation(line: 258, column: 2, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15147, file: !12866, line: 258, column: 2)
!15167 = !{i64 2154976769}
!15168 = !DILocation(line: 259, column: 1, scope: !15147)
!15169 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2332, file: !2332, line: 996, type: !2960, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15170)
!15170 = !{!15171, !15173}
!15171 = !DILocalVariable(name: "__i", scope: !15172, file: !2332, line: 998, type: !13696)
!15172 = distinct !DILexicalBlock(scope: !15169, file: !2332, line: 998, column: 2)
!15173 = !DILocalVariable(name: "__key", scope: !15172, file: !2332, line: 998, type: !13696)
!15174 = !DILocation(line: 0, scope: !15172)
!15175 = !DILocation(line: 0, scope: !13704, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 998, column: 2, scope: !15172)
!15177 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15178)
!15178 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15176)
!15179 = !DILocation(line: 0, scope: !13713, inlinedAt: !15178)
!15180 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15176)
!15181 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15176)
!15182 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15176)
!15183 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15176)
!15184 = !DILocation(line: 999, column: 3, scope: !15185)
!15185 = distinct !DILexicalBlock(scope: !15186, file: !2332, line: 999, column: 3)
!15186 = distinct !DILexicalBlock(scope: !15187, file: !2332, line: 999, column: 3)
!15187 = distinct !DILexicalBlock(scope: !15188, file: !2332, line: 998, column: 26)
!15188 = distinct !DILexicalBlock(scope: !15172, file: !2332, line: 998, column: 2)
!15189 = !DILocation(line: 999, column: 3, scope: !15186)
!15190 = !DILocation(line: 999, column: 3, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15185, file: !2332, line: 999, column: 3)
!15192 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15193)
!15193 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15194)
!15194 = distinct !DILocation(line: 1000, column: 3, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15196, file: !2332, line: 1000, column: 3)
!15196 = distinct !DILexicalBlock(scope: !15187, file: !2332, line: 1000, column: 3)
!15197 = !DILocation(line: 0, scope: !14431, inlinedAt: !15193)
!15198 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15194)
!15199 = !DILocation(line: 1000, column: 3, scope: !15196)
!15200 = !DILocation(line: 1000, column: 3, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15195, file: !2332, line: 1000, column: 3)
!15202 = !DILocation(line: 1002, column: 5, scope: !15187)
!15203 = !DILocation(line: 1002, column: 20, scope: !15187)
!15204 = !DILocation(line: 1002, column: 3, scope: !15187)
!15205 = !DILocation(line: 1003, column: 3, scope: !15187)
!15206 = !DILocation(line: 0, scope: !13738, inlinedAt: !15207)
!15207 = distinct !DILocation(line: 998, column: 2, scope: !15188)
!15208 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15207)
!15209 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15207)
!15210 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15207)
!15211 = !DILocation(line: 0, scope: !13752, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15207)
!15213 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15212)
!15214 = !DILocation(line: 1011, column: 2, scope: !15169)
!15215 = !DILocation(line: 1012, column: 1, scope: !15169)
!15216 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2332, file: !2332, line: 1014, type: !14053, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!15217 = !DILocation(line: 1028, column: 25, scope: !15216)
!15218 = !DILocation(line: 1028, column: 2, scope: !15216)
!15219 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2332, file: !2332, line: 1155, type: !15220, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15222)
!15220 = !DISubroutineType(types: !15221)
!15221 = !{!345, !2253, !2253}
!15222 = !{!15223, !15224, !15225, !15226, !15227}
!15223 = !DILocalVariable(name: "a", arg: 1, scope: !15219, file: !2332, line: 1155, type: !2253)
!15224 = !DILocalVariable(name: "b", arg: 2, scope: !15219, file: !2332, line: 1155, type: !2253)
!15225 = !DILocalVariable(name: "thread_a", scope: !15219, file: !2332, line: 1157, type: !2224)
!15226 = !DILocalVariable(name: "thread_b", scope: !15219, file: !2332, line: 1157, type: !2224)
!15227 = !DILocalVariable(name: "cmp", scope: !15219, file: !2332, line: 1158, type: !764)
!15228 = !DILocation(line: 0, scope: !15219)
!15229 = !DILocation(line: 1160, column: 13, scope: !15219)
!15230 = !DILocation(line: 1161, column: 13, scope: !15219)
!15231 = !DILocation(line: 1163, column: 8, scope: !15219)
!15232 = !DILocation(line: 1165, column: 10, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15219, file: !2332, line: 1165, column: 6)
!15234 = !DILocation(line: 1165, column: 6, scope: !15219)
!15235 = !DILocation(line: 1167, column: 17, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15233, file: !2332, line: 1167, column: 13)
!15237 = !DILocation(line: 1167, column: 13, scope: !15233)
!15238 = !DILocation(line: 1170, column: 25, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15236, file: !2332, line: 1169, column: 9)
!15240 = !DILocation(line: 1170, column: 52, scope: !15239)
!15241 = !DILocation(line: 1170, column: 35, scope: !15239)
!15242 = !DILocation(line: 1170, column: 3, scope: !15239)
!15243 = !DILocation(line: 0, scope: !15233)
!15244 = !DILocation(line: 1173, column: 1, scope: !15219)
!15245 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2332, file: !2332, line: 1175, type: !15246, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15261)
!15246 = !DISubroutineType(types: !15247)
!15247 = !{null, !15248, !2224}
!15248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15249, size: 32)
!15249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15250, line: 37, size: 128, elements: !15251)
!15250 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15251 = !{!15252, !15260}
!15252 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15249, file: !15250, line: 38, baseType: !15253, size: 96)
!15253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !169, line: 83, size: 96, elements: !15254)
!15254 = !{!15255, !15256, !15259}
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15253, file: !169, line: 84, baseType: !2253, size: 32)
!15256 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15253, file: !169, line: 85, baseType: !15257, size: 32, offset: 32)
!15257 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !169, line: 81, baseType: !15258)
!15258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15220, size: 32)
!15259 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15253, file: !169, line: 86, baseType: !119, size: 32, offset: 64)
!15260 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15249, file: !15250, line: 39, baseType: !119, size: 32, offset: 96)
!15261 = !{!15262, !15263, !15264, !15265, !15274}
!15262 = !DILocalVariable(name: "pq", arg: 1, scope: !15245, file: !2332, line: 1175, type: !15248)
!15263 = !DILocalVariable(name: "thread", arg: 2, scope: !15245, file: !2332, line: 1175, type: !2224)
!15264 = !DILocalVariable(name: "t", scope: !15245, file: !2332, line: 1177, type: !2224)
!15265 = !DILocalVariable(name: "__f", scope: !15266, file: !2332, line: 1190, type: !15269)
!15266 = distinct !DILexicalBlock(scope: !15267, file: !2332, line: 1190, column: 3)
!15267 = distinct !DILexicalBlock(scope: !15268, file: !2332, line: 1189, column: 27)
!15268 = distinct !DILexicalBlock(scope: !15245, file: !2332, line: 1189, column: 6)
!15269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !169, line: 155, size: 96, elements: !15270)
!15270 = !{!15271, !15272, !15273}
!15271 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15269, file: !169, line: 156, baseType: !2327, size: 32)
!15272 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15269, file: !169, line: 157, baseType: !284, size: 32, offset: 32)
!15273 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15269, file: !169, line: 158, baseType: !764, size: 32, offset: 64)
!15274 = !DILocalVariable(name: "n", scope: !15275, file: !2332, line: 1190, type: !2253)
!15275 = distinct !DILexicalBlock(scope: !15276, file: !2332, line: 1190, column: 3)
!15276 = distinct !DILexicalBlock(scope: !15266, file: !2332, line: 1190, column: 3)
!15277 = !DILocation(line: 0, scope: !15245)
!15278 = !DILocation(line: 1179, column: 2, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15280, file: !2332, line: 1179, column: 2)
!15280 = distinct !DILexicalBlock(scope: !15245, file: !2332, line: 1179, column: 2)
!15281 = !DILocation(line: 1179, column: 2, scope: !15280)
!15282 = !DILocation(line: 1179, column: 2, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15279, file: !2332, line: 1179, column: 2)
!15284 = !DILocation(line: 1181, column: 31, scope: !15245)
!15285 = !DILocation(line: 1181, column: 45, scope: !15245)
!15286 = !DILocation(line: 1181, column: 15, scope: !15245)
!15287 = !DILocation(line: 1181, column: 25, scope: !15245)
!15288 = !DILocation(line: 1189, column: 11, scope: !15268)
!15289 = !DILocation(line: 1189, column: 7, scope: !15268)
!15290 = !DILocation(line: 1189, column: 6, scope: !15245)
!15291 = !DILocation(line: 1190, column: 3, scope: !15266)
!15292 = !DILocation(line: 1190, column: 3, scope: !15275)
!15293 = !DILocation(line: 0, scope: !15275)
!15294 = !DILocation(line: 1190, column: 3, scope: !15276)
!15295 = !DILocation(line: 1193, column: 2, scope: !15267)
!15296 = !DILocation(line: 1191, column: 42, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15276, file: !2332, line: 1190, column: 54)
!15298 = !DILocation(line: 1191, column: 12, scope: !15297)
!15299 = !DILocation(line: 1191, column: 22, scope: !15297)
!15300 = distinct !{!15300, !15291, !15301}
!15301 = !DILocation(line: 1192, column: 3, scope: !15266)
!15302 = !DILocation(line: 1195, column: 17, scope: !15245)
!15303 = !DILocation(line: 1195, column: 37, scope: !15245)
!15304 = !DILocation(line: 1195, column: 2, scope: !15245)
!15305 = !DILocation(line: 1196, column: 1, scope: !15245)
!15306 = !DISubprogram(name: "z_rb_foreach_next", scope: !169, file: !169, line: 176, type: !15307, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!15307 = !DISubroutineType(types: !15308)
!15308 = !{!2253, !15309, !15310}
!15309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15253, size: 32)
!15310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15269, size: 32)
!15311 = !DISubprogram(name: "rb_insert", scope: !169, file: !169, line: 105, type: !15312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!15312 = !DISubroutineType(types: !15313)
!15313 = !{null, !15309, !2253}
!15314 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2332, file: !2332, line: 1198, type: !15246, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15315)
!15315 = !{!15316, !15317}
!15316 = !DILocalVariable(name: "pq", arg: 1, scope: !15314, file: !2332, line: 1198, type: !15248)
!15317 = !DILocalVariable(name: "thread", arg: 2, scope: !15314, file: !2332, line: 1198, type: !2224)
!15318 = !DILocation(line: 0, scope: !15314)
!15319 = !DILocation(line: 1200, column: 2, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15321, file: !2332, line: 1200, column: 2)
!15321 = distinct !DILexicalBlock(scope: !15314, file: !2332, line: 1200, column: 2)
!15322 = !DILocation(line: 1200, column: 2, scope: !15321)
!15323 = !DILocation(line: 1200, column: 2, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15320, file: !2332, line: 1200, column: 2)
!15325 = !DILocation(line: 1202, column: 17, scope: !15314)
!15326 = !DILocation(line: 1202, column: 37, scope: !15314)
!15327 = !DILocation(line: 1202, column: 2, scope: !15314)
!15328 = !DILocation(line: 1204, column: 16, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15314, file: !2332, line: 1204, column: 6)
!15330 = !DILocation(line: 1204, column: 7, scope: !15329)
!15331 = !DILocation(line: 1204, column: 6, scope: !15314)
!15332 = !DILocation(line: 1205, column: 7, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15329, file: !2332, line: 1204, column: 22)
!15334 = !DILocation(line: 1205, column: 22, scope: !15333)
!15335 = !DILocation(line: 1206, column: 2, scope: !15333)
!15336 = !DILocation(line: 1207, column: 1, scope: !15314)
!15337 = !DISubprogram(name: "rb_remove", scope: !169, file: !169, line: 110, type: !15312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!15338 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2332, file: !2332, line: 1209, type: !15339, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15341)
!15339 = !DISubroutineType(types: !15340)
!15340 = !{!2224, !15248}
!15341 = !{!15342, !15343, !15344}
!15342 = !DILocalVariable(name: "pq", arg: 1, scope: !15338, file: !2332, line: 1209, type: !15248)
!15343 = !DILocalVariable(name: "thread", scope: !15338, file: !2332, line: 1211, type: !2224)
!15344 = !DILocalVariable(name: "n", scope: !15338, file: !2332, line: 1212, type: !2253)
!15345 = !DILocation(line: 0, scope: !15338)
!15346 = !DILocation(line: 1212, column: 37, scope: !15338)
!15347 = !DILocation(line: 1212, column: 21, scope: !15338)
!15348 = !DILocation(line: 1217, column: 2, scope: !15338)
!15349 = distinct !DISubprogram(name: "rb_get_min", scope: !169, file: !169, line: 115, type: !15350, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15352)
!15350 = !DISubroutineType(types: !15351)
!15351 = !{!2253, !15309}
!15352 = !{!15353}
!15353 = !DILocalVariable(name: "tree", arg: 1, scope: !15349, file: !169, line: 115, type: !15309)
!15354 = !DILocation(line: 0, scope: !15349)
!15355 = !DILocation(line: 117, column: 9, scope: !15349)
!15356 = !DILocation(line: 117, column: 2, scope: !15349)
!15357 = !DISubprogram(name: "z_rb_get_minmax", scope: !169, file: !169, line: 100, type: !15358, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2032)
!15358 = !DISubroutineType(types: !15359)
!15359 = !{!2253, !15309, !185}
!15360 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2332, file: !2332, line: 1246, type: !15361, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15369)
!15361 = !DISubroutineType(types: !15362)
!15362 = !{!2224, !15363}
!15363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15364, size: 32)
!15364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15250, line: 53, size: 2080, elements: !15365)
!15365 = !{!15366, !15368}
!15366 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15364, file: !15250, line: 54, baseType: !15367, size: 2048)
!15367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2260, size: 2048, elements: !231)
!15368 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15364, file: !15250, line: 55, baseType: !32, size: 32, offset: 2048)
!15369 = !{!15370, !15371, !15372, !15373}
!15370 = !DILocalVariable(name: "pq", arg: 1, scope: !15360, file: !2332, line: 1246, type: !15363)
!15371 = !DILocalVariable(name: "thread", scope: !15360, file: !2332, line: 1252, type: !2224)
!15372 = !DILocalVariable(name: "l", scope: !15360, file: !2332, line: 1253, type: !13930)
!15373 = !DILocalVariable(name: "n", scope: !15360, file: !2332, line: 1254, type: !2328)
!15374 = !DILocation(line: 0, scope: !15360)
!15375 = !DILocation(line: 1248, column: 11, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15360, file: !2332, line: 1248, column: 6)
!15377 = !DILocation(line: 1248, column: 7, scope: !15376)
!15378 = !DILocation(line: 1248, column: 6, scope: !15360)
!15379 = !DILocation(line: 1253, column: 31, scope: !15360)
!15380 = !DILocation(line: 1253, column: 20, scope: !15360)
!15381 = !DILocation(line: 1254, column: 19, scope: !15360)
!15382 = !DILocation(line: 1260, column: 1, scope: !15360)
!15383 = distinct !DISubprogram(name: "z_unpend_all", scope: !2332, file: !2332, line: 1262, type: !15384, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15386)
!15384 = !DISubroutineType(types: !15385)
!15385 = !{!119, !2255}
!15386 = !{!15387, !15388, !15389}
!15387 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15383, file: !2332, line: 1262, type: !2255)
!15388 = !DILocalVariable(name: "need_sched", scope: !15383, file: !2332, line: 1264, type: !119)
!15389 = !DILocalVariable(name: "thread", scope: !15383, file: !2332, line: 1265, type: !2224)
!15390 = !DILocation(line: 0, scope: !15383)
!15391 = !DILocation(line: 1267, column: 19, scope: !15383)
!15392 = !DILocation(line: 1267, column: 41, scope: !15383)
!15393 = !DILocation(line: 1267, column: 2, scope: !15383)
!15394 = !DILocation(line: 1268, column: 3, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15383, file: !2332, line: 1267, column: 50)
!15396 = !DILocation(line: 1269, column: 3, scope: !15395)
!15397 = distinct !{!15397, !15393, !15398}
!15398 = !DILocation(line: 1271, column: 2, scope: !15383)
!15399 = !DILocation(line: 1273, column: 2, scope: !15383)
!15400 = distinct !DISubprogram(name: "z_waitq_head", scope: !13227, file: !13227, line: 52, type: !14931, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15401)
!15401 = !{!15402}
!15402 = !DILocalVariable(name: "w", arg: 1, scope: !15400, file: !13227, line: 52, type: !2255)
!15403 = !DILocation(line: 0, scope: !15400)
!15404 = !DILocation(line: 54, column: 52, scope: !15400)
!15405 = !DILocation(line: 54, column: 28, scope: !15400)
!15406 = !DILocation(line: 54, column: 9, scope: !15400)
!15407 = !DILocation(line: 54, column: 2, scope: !15400)
!15408 = distinct !DISubprogram(name: "init_ready_q", scope: !2332, file: !2332, line: 1276, type: !15409, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15416)
!15409 = !DISubroutineType(types: !15410)
!15410 = !{null, !15411}
!15411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15412, size: 32)
!15412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !15413)
!15413 = !{!15414, !15415}
!15414 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15412, file: !179, line: 86, baseType: !2224, size: 32)
!15415 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15412, file: !179, line: 90, baseType: !2260, size: 64, offset: 32)
!15416 = !{!15417}
!15417 = !DILocalVariable(name: "rq", arg: 1, scope: !15408, file: !2332, line: 1276, type: !15411)
!15418 = !DILocation(line: 0, scope: !15408)
!15419 = !DILocation(line: 1289, column: 22, scope: !15408)
!15420 = !DILocation(line: 1289, column: 2, scope: !15408)
!15421 = !DILocation(line: 1291, column: 1, scope: !15408)
!15422 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !15423, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15425)
!15423 = !DISubroutineType(types: !15424)
!15424 = !{null, !13930}
!15425 = !{!15426}
!15426 = !DILocalVariable(name: "list", arg: 1, scope: !15422, file: !153, line: 197, type: !13930)
!15427 = !DILocation(line: 0, scope: !15422)
!15428 = !DILocation(line: 199, column: 8, scope: !15422)
!15429 = !DILocation(line: 199, column: 13, scope: !15422)
!15430 = !DILocation(line: 200, column: 8, scope: !15422)
!15431 = !DILocation(line: 200, column: 13, scope: !15422)
!15432 = !DILocation(line: 201, column: 1, scope: !15422)
!15433 = distinct !DISubprogram(name: "z_sched_init", scope: !2332, file: !2332, line: 1293, type: !2960, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!15434 = !DILocation(line: 1302, column: 2, scope: !15433)
!15435 = !DILocation(line: 1306, column: 2, scope: !15433)
!15436 = !DILocation(line: 1309, column: 1, scope: !15433)
!15437 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2332, file: !2332, line: 1311, type: !15438, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15441)
!15438 = !DISubroutineType(types: !15439)
!15439 = !{!119, !15440}
!15440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2224)
!15441 = !{!15442}
!15442 = !DILocalVariable(name: "thread", arg: 1, scope: !15437, file: !2332, line: 1311, type: !15440)
!15443 = !DILocation(line: 0, scope: !15437)
!15444 = !DILocation(line: 1313, column: 22, scope: !15437)
!15445 = !DILocation(line: 1313, column: 9, scope: !15437)
!15446 = !DILocation(line: 1313, column: 2, scope: !15437)
!15447 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2332, file: !2332, line: 1325, type: !15448, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15450)
!15448 = !DISubroutineType(types: !15449)
!15449 = !{null, !15440, !119}
!15450 = !{!15451, !15452, !15453}
!15451 = !DILocalVariable(name: "thread", arg: 1, scope: !15447, file: !2332, line: 1325, type: !15440)
!15452 = !DILocalVariable(name: "prio", arg: 2, scope: !15447, file: !2332, line: 1325, type: !119)
!15453 = !DILocalVariable(name: "th", scope: !15447, file: !2332, line: 1334, type: !2224)
!15454 = !DILocation(line: 0, scope: !15447)
!15455 = !DILocation(line: 1331, column: 2, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !2332, line: 1331, column: 2)
!15457 = distinct !DILexicalBlock(scope: !15458, file: !2332, line: 1331, column: 2)
!15458 = distinct !DILexicalBlock(scope: !15447, file: !2332, line: 1331, column: 2)
!15459 = !DILocation(line: 1331, column: 2, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15456, file: !2332, line: 1331, column: 2)
!15461 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 1332, column: 2, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !2332, line: 1332, column: 2)
!15465 = distinct !DILexicalBlock(scope: !15447, file: !2332, line: 1332, column: 2)
!15466 = !DILocation(line: 0, scope: !14431, inlinedAt: !15462)
!15467 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15463)
!15468 = !DILocation(line: 1332, column: 2, scope: !15465)
!15469 = !DILocation(line: 1332, column: 2, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15464, file: !2332, line: 1332, column: 2)
!15471 = !DILocation(line: 1336, column: 2, scope: !15447)
!15472 = !DILocation(line: 1337, column: 1, scope: !15447)
!15473 = distinct !DISubprogram(name: "k_can_yield", scope: !2332, file: !2332, line: 1384, type: !7365, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!15474 = !DILocation(line: 1386, column: 11, scope: !15473)
!15475 = !DILocation(line: 1386, column: 29, scope: !15473)
!15476 = !DILocation(line: 1386, column: 32, scope: !15473)
!15477 = !DILocation(line: 1386, column: 46, scope: !15473)
!15478 = !DILocation(line: 1387, column: 28, scope: !15473)
!15479 = !DILocation(line: 1387, column: 4, scope: !15473)
!15480 = !DILocation(line: 1386, column: 2, scope: !15473)
!15481 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !245, file: !245, line: 989, type: !7365, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!15482 = !DILocation(line: 993, column: 10, scope: !15481)
!15483 = !DILocation(line: 993, column: 2, scope: !15481)
!15484 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2332, file: !2332, line: 1390, type: !2960, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15485)
!15485 = !{!15486}
!15486 = !DILocalVariable(name: "key", scope: !15484, file: !2332, line: 1396, type: !13696)
!15487 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 1392, column: 2, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15491, file: !2332, line: 1392, column: 2)
!15491 = distinct !DILexicalBlock(scope: !15484, file: !2332, line: 1392, column: 2)
!15492 = !DILocation(line: 0, scope: !14431, inlinedAt: !15488)
!15493 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15489)
!15494 = !DILocation(line: 1392, column: 2, scope: !15491)
!15495 = !DILocation(line: 1392, column: 2, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15490, file: !2332, line: 1392, column: 2)
!15497 = !DILocation(line: 0, scope: !13704, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 1396, column: 25, scope: !15484)
!15499 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15498)
!15501 = !DILocation(line: 0, scope: !13713, inlinedAt: !15500)
!15502 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15498)
!15503 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15498)
!15504 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15498)
!15505 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15498)
!15506 = !DILocation(line: 0, scope: !15484)
!15507 = !DILocation(line: 1400, column: 18, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15509, file: !2332, line: 1399, column: 36)
!15509 = distinct !DILexicalBlock(scope: !15484, file: !2332, line: 1398, column: 6)
!15510 = !DILocation(line: 0, scope: !13896, inlinedAt: !15511)
!15511 = distinct !DILocation(line: 1400, column: 3, scope: !15508)
!15512 = !DILocation(line: 266, column: 15, scope: !13896, inlinedAt: !15511)
!15513 = !DILocation(line: 266, column: 28, scope: !13896, inlinedAt: !15511)
!15514 = !DILocation(line: 0, scope: !13904, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 268, column: 3, scope: !13908, inlinedAt: !15511)
!15516 = !DILocation(line: 234, column: 2, scope: !13904, inlinedAt: !15515)
!15517 = !DILocation(line: 1402, column: 15, scope: !15484)
!15518 = !DILocation(line: 0, scope: !13913, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 1402, column: 2, scope: !15484)
!15520 = !DILocation(line: 252, column: 15, scope: !13913, inlinedAt: !15519)
!15521 = !DILocation(line: 252, column: 28, scope: !13913, inlinedAt: !15519)
!15522 = !DILocation(line: 0, scope: !13920, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 254, column: 3, scope: !13924, inlinedAt: !15519)
!15524 = !DILocation(line: 0, scope: !13927, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 229, column: 2, scope: !13920, inlinedAt: !15523)
!15526 = !DILocation(line: 186, column: 2, scope: !13937, inlinedAt: !15525)
!15527 = !DILocation(line: 186, column: 2, scope: !13938, inlinedAt: !15525)
!15528 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !15525)
!15529 = !DILocation(line: 188, column: 2, scope: !13943, inlinedAt: !15525)
!15530 = !DILocation(line: 188, column: 2, scope: !13945, inlinedAt: !15525)
!15531 = !DILocation(line: 0, scope: !13943, inlinedAt: !15525)
!15532 = !DILocation(line: 189, column: 7, scope: !13948, inlinedAt: !15525)
!15533 = !DILocation(line: 189, column: 35, scope: !13948, inlinedAt: !15525)
!15534 = !DILocation(line: 189, column: 7, scope: !13949, inlinedAt: !15525)
!15535 = !DILocation(line: 191, column: 21, scope: !13953, inlinedAt: !15525)
!15536 = !DILocation(line: 190, column: 4, scope: !13953, inlinedAt: !15525)
!15537 = !DILocation(line: 192, column: 4, scope: !13953, inlinedAt: !15525)
!15538 = distinct !{!15538, !15529, !15539}
!15539 = !DILocation(line: 194, column: 2, scope: !13943, inlinedAt: !15525)
!15540 = !DILocation(line: 196, column: 37, scope: !13927, inlinedAt: !15525)
!15541 = !DILocation(line: 196, column: 2, scope: !13927, inlinedAt: !15525)
!15542 = !DILocation(line: 197, column: 1, scope: !13927, inlinedAt: !15525)
!15543 = !DILocation(line: 1403, column: 2, scope: !15484)
!15544 = !DILocation(line: 0, scope: !14382, inlinedAt: !15545)
!15545 = distinct !DILocation(line: 1404, column: 2, scope: !15484)
!15546 = !DILocation(line: 0, scope: !14391, inlinedAt: !15547)
!15547 = distinct !DILocation(line: 195, column: 2, scope: !14382, inlinedAt: !15545)
!15548 = !DILocation(line: 225, column: 2, scope: !14398, inlinedAt: !15547)
!15549 = !DILocation(line: 225, column: 2, scope: !14399, inlinedAt: !15547)
!15550 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15547)
!15551 = !DILocation(line: 196, column: 9, scope: !14382, inlinedAt: !15545)
!15552 = !DILocation(line: 1405, column: 1, scope: !15484)
!15553 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2332, file: !2332, line: 1459, type: !15554, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15556)
!15554 = !DISubroutineType(types: !15555)
!15555 = !{!764, !14592}
!15556 = !{!15557, !15558, !15559}
!15557 = !DILocalVariable(name: "timeout", arg: 1, scope: !15553, file: !2332, line: 1459, type: !14592)
!15558 = !DILocalVariable(name: "ticks", scope: !15553, file: !2332, line: 1461, type: !114)
!15559 = !DILocalVariable(name: "ret", scope: !15553, file: !2332, line: 1480, type: !764)
!15560 = !DILocation(line: 0, scope: !15553)
!15561 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15562)
!15562 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 1463, column: 2, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15565, file: !2332, line: 1463, column: 2)
!15565 = distinct !DILexicalBlock(scope: !15553, file: !2332, line: 1463, column: 2)
!15566 = !DILocation(line: 0, scope: !14431, inlinedAt: !15562)
!15567 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15563)
!15568 = !DILocation(line: 1463, column: 2, scope: !15565)
!15569 = !DILocation(line: 1463, column: 2, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15564, file: !2332, line: 1463, column: 2)
!15571 = !DILocation(line: 1468, column: 6, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15553, file: !2332, line: 1468, column: 6)
!15573 = !DILocation(line: 1468, column: 6, scope: !15553)
!15574 = !DILocation(line: 1469, column: 20, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15572, file: !2332, line: 1468, column: 40)
!15576 = !DILocation(line: 1469, column: 3, scope: !15575)
!15577 = !DILocation(line: 1473, column: 3, scope: !15575)
!15578 = !DILocation(line: 1478, column: 10, scope: !15553)
!15579 = !DILocation(line: 1480, column: 16, scope: !15553)
!15580 = !DILocation(line: 1485, column: 1, scope: !15553)
!15581 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3211, file: !3211, line: 310, type: !15582, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15584)
!15582 = !DISubroutineType(types: !15583)
!15583 = !{null, !15440}
!15584 = !{!15585}
!15585 = !DILocalVariable(name: "thread", arg: 1, scope: !15581, file: !3211, line: 310, type: !15440)
!15586 = !DILocation(line: 0, scope: !15581)
!15587 = !DILocation(line: 319, column: 2, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !15581, file: !3211, line: 319, column: 2)
!15589 = !{i64 2154892927}
!15590 = !DILocation(line: 320, column: 2, scope: !15581)
!15591 = !DILocation(line: 321, column: 1, scope: !15581)
!15592 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2332, file: !2332, line: 1415, type: !15593, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15595)
!15593 = !DISubroutineType(types: !15594)
!15594 = !{!764, !114}
!15595 = !{!15596, !15597, !15598, !15599}
!15596 = !DILocalVariable(name: "ticks", arg: 1, scope: !15592, file: !2332, line: 1415, type: !114)
!15597 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15592, file: !2332, line: 1418, type: !118)
!15598 = !DILocalVariable(name: "timeout", scope: !15592, file: !2332, line: 1430, type: !14592)
!15599 = !DILocalVariable(name: "key", scope: !15592, file: !2332, line: 1437, type: !13696)
!15600 = !DILocation(line: 0, scope: !15592)
!15601 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15603)
!15603 = distinct !DILocation(line: 1420, column: 2, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !2332, line: 1420, column: 2)
!15605 = distinct !DILexicalBlock(scope: !15592, file: !2332, line: 1420, column: 2)
!15606 = !DILocation(line: 0, scope: !14431, inlinedAt: !15602)
!15607 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15603)
!15608 = !DILocation(line: 1420, column: 2, scope: !15605)
!15609 = !DILocation(line: 1420, column: 2, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15604, file: !2332, line: 1420, column: 2)
!15611 = !DILocation(line: 1425, column: 12, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15592, file: !2332, line: 1425, column: 6)
!15613 = !DILocation(line: 1425, column: 6, scope: !15592)
!15614 = !DILocation(line: 1426, column: 3, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15612, file: !2332, line: 1425, column: 18)
!15616 = !DILocation(line: 1427, column: 3, scope: !15615)
!15617 = !DILocation(line: 1431, column: 24, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15592, file: !2332, line: 1431, column: 6)
!15619 = !DILocation(line: 1431, column: 6, scope: !15592)
!15620 = !DILocation(line: 1432, column: 35, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15618, file: !2332, line: 1431, column: 30)
!15622 = !DILocation(line: 1432, column: 27, scope: !15621)
!15623 = !DILocation(line: 1433, column: 2, scope: !15621)
!15624 = !DILocation(line: 1434, column: 27, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15618, file: !2332, line: 1433, column: 9)
!15626 = !DILocation(line: 0, scope: !15618)
!15627 = !DILocation(line: 0, scope: !13704, inlinedAt: !15628)
!15628 = distinct !DILocation(line: 1437, column: 25, scope: !15592)
!15629 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15628)
!15631 = !DILocation(line: 0, scope: !13713, inlinedAt: !15630)
!15632 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15628)
!15633 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15628)
!15634 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15628)
!15635 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15628)
!15636 = !DILocation(line: 1440, column: 20, scope: !15592)
!15637 = !DILocation(line: 1440, column: 18, scope: !15592)
!15638 = !DILocation(line: 1442, column: 2, scope: !15592)
!15639 = !DILocation(line: 1443, column: 23, scope: !15592)
!15640 = !DILocation(line: 1443, column: 2, scope: !15592)
!15641 = !DILocation(line: 1444, column: 29, scope: !15592)
!15642 = !DILocation(line: 1444, column: 2, scope: !15592)
!15643 = !DILocation(line: 0, scope: !14382, inlinedAt: !15644)
!15644 = distinct !DILocation(line: 1446, column: 8, scope: !15592)
!15645 = !DILocation(line: 0, scope: !14391, inlinedAt: !15646)
!15646 = distinct !DILocation(line: 195, column: 2, scope: !14382, inlinedAt: !15644)
!15647 = !DILocation(line: 225, column: 2, scope: !14398, inlinedAt: !15646)
!15648 = !DILocation(line: 225, column: 2, scope: !14399, inlinedAt: !15646)
!15649 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15646)
!15650 = !DILocation(line: 196, column: 9, scope: !14382, inlinedAt: !15644)
!15651 = !DILocation(line: 1448, column: 2, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15653, file: !2332, line: 1448, column: 2)
!15653 = distinct !DILexicalBlock(scope: !15592, file: !2332, line: 1448, column: 2)
!15654 = !DILocation(line: 1448, column: 2, scope: !15653)
!15655 = !DILocation(line: 1448, column: 2, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15652, file: !2332, line: 1448, column: 2)
!15657 = !DILocation(line: 1450, column: 10, scope: !15592)
!15658 = !DILocation(line: 1450, column: 45, scope: !15592)
!15659 = !DILocation(line: 1450, column: 43, scope: !15592)
!15660 = !DILocation(line: 1451, column: 6, scope: !15592)
!15661 = !DILocation(line: 1457, column: 1, scope: !15592)
!15662 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3203, file: !3203, line: 1103, type: !3204, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15663)
!15663 = !{!15664}
!15664 = !DILocalVariable(name: "t", arg: 1, scope: !15662, file: !3203, line: 1103, type: !120)
!15665 = !DILocation(line: 0, scope: !15662)
!15666 = !DILocation(line: 0, scope: !13764, inlinedAt: !15667)
!15667 = distinct !DILocation(line: 1106, column: 9, scope: !15662)
!15668 = !DILocation(line: 139, column: 13, scope: !15669, inlinedAt: !15667)
!15669 = distinct !DILexicalBlock(scope: !15670, file: !3203, line: 138, column: 10)
!15670 = distinct !DILexicalBlock(scope: !15671, file: !3203, line: 136, column: 7)
!15671 = distinct !DILexicalBlock(scope: !13785, file: !3203, line: 134, column: 17)
!15672 = !DILocation(line: 1106, column: 2, scope: !15662)
!15673 = distinct !DISubprogram(name: "k_yield", scope: !3211, file: !3211, line: 140, type: !2960, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!15674 = !DILocation(line: 148, column: 2, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15673, file: !3211, line: 148, column: 2)
!15676 = !{i64 2154892247}
!15677 = !DILocation(line: 149, column: 2, scope: !15673)
!15678 = !DILocation(line: 150, column: 1, scope: !15673)
!15679 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2332, file: !2332, line: 1495, type: !15680, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15682)
!15680 = !DISubroutineType(types: !15681)
!15681 = !{!764, !119}
!15682 = !{!15683, !15684}
!15683 = !DILocalVariable(name: "us", arg: 1, scope: !15679, file: !2332, line: 1495, type: !119)
!15684 = !DILocalVariable(name: "ticks", scope: !15679, file: !2332, line: 1497, type: !764)
!15685 = !DILocation(line: 0, scope: !15679)
!15686 = !DILocation(line: 1501, column: 31, scope: !15679)
!15687 = !DILocation(line: 1501, column: 10, scope: !15679)
!15688 = !DILocation(line: 1502, column: 23, scope: !15679)
!15689 = !DILocation(line: 1502, column: 10, scope: !15679)
!15690 = !DILocation(line: 1506, column: 31, scope: !15679)
!15691 = !DILocation(line: 1506, column: 9, scope: !15679)
!15692 = !DILocation(line: 1506, column: 2, scope: !15679)
!15693 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3203, file: !3203, line: 571, type: !3204, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15694)
!15694 = !{!15695}
!15695 = !DILocalVariable(name: "t", arg: 1, scope: !15693, file: !3203, line: 571, type: !120)
!15696 = !DILocation(line: 0, scope: !15693)
!15697 = !DILocation(line: 0, scope: !13764, inlinedAt: !15698)
!15698 = distinct !DILocation(line: 574, column: 9, scope: !15693)
!15699 = !DILocation(line: 135, column: 5, scope: !15671, inlinedAt: !15698)
!15700 = !DILocation(line: 139, column: 13, scope: !15669, inlinedAt: !15698)
!15701 = !DILocation(line: 574, column: 2, scope: !15693)
!15702 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3203, file: !3203, line: 1187, type: !3204, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15703)
!15703 = !{!15704}
!15704 = !DILocalVariable(name: "t", arg: 1, scope: !15702, file: !3203, line: 1187, type: !120)
!15705 = !DILocation(line: 0, scope: !15702)
!15706 = !DILocation(line: 0, scope: !13764, inlinedAt: !15707)
!15707 = distinct !DILocation(line: 1190, column: 9, scope: !15702)
!15708 = !DILocation(line: 145, column: 13, scope: !15709, inlinedAt: !15707)
!15709 = distinct !DILexicalBlock(scope: !13782, file: !3203, line: 144, column: 10)
!15710 = !DILocation(line: 1190, column: 2, scope: !15702)
!15711 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2332, file: !2332, line: 1517, type: !15582, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15712)
!15712 = !{!15713}
!15713 = !DILocalVariable(name: "thread", arg: 1, scope: !15711, file: !2332, line: 1517, type: !15440)
!15714 = !DILocation(line: 0, scope: !15711)
!15715 = !DILocation(line: 1521, column: 6, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15711, file: !2332, line: 1521, column: 6)
!15717 = !DILocation(line: 1521, column: 6, scope: !15711)
!15718 = !DILocation(line: 1525, column: 6, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15711, file: !2332, line: 1525, column: 6)
!15720 = !DILocation(line: 1525, column: 37, scope: !15719)
!15721 = !DILocation(line: 1525, column: 6, scope: !15711)
!15722 = !DILocation(line: 1527, column: 20, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15724, file: !2332, line: 1527, column: 7)
!15724 = distinct !DILexicalBlock(scope: !15719, file: !2332, line: 1525, column: 42)
!15725 = !DILocation(line: 1527, column: 33, scope: !15723)
!15726 = !DILocation(line: 1527, column: 7, scope: !15724)
!15727 = !DILocation(line: 1532, column: 2, scope: !15711)
!15728 = !DILocation(line: 1533, column: 2, scope: !15711)
!15729 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15730)
!15730 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15731)
!15731 = distinct !DILocation(line: 1537, column: 7, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15711, file: !2332, line: 1537, column: 6)
!15733 = !DILocation(line: 0, scope: !14431, inlinedAt: !15730)
!15734 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15731)
!15735 = !DILocation(line: 1537, column: 6, scope: !15711)
!15736 = !DILocation(line: 1538, column: 3, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15732, file: !2332, line: 1537, column: 25)
!15738 = !DILocation(line: 1539, column: 2, scope: !15737)
!15739 = !DILocation(line: 1540, column: 1, scope: !15711)
!15740 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12866, file: !12866, line: 101, type: !13845, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15741)
!15741 = !{!15742}
!15742 = !DILocalVariable(name: "thread", arg: 1, scope: !15740, file: !12866, line: 101, type: !2224)
!15743 = !DILocation(line: 0, scope: !15740)
!15744 = !DILocation(line: 103, column: 23, scope: !15740)
!15745 = !DILocation(line: 103, column: 36, scope: !15740)
!15746 = !DILocation(line: 103, column: 55, scope: !15740)
!15747 = !DILocation(line: 103, column: 2, scope: !15740)
!15748 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2332, file: !2332, line: 1567, type: !15749, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15751)
!15749 = !DISubroutineType(types: !15750)
!15750 = !{!15440}
!15751 = !{!15752}
!15752 = !DILocalVariable(name: "ret", scope: !15748, file: !2332, line: 1577, type: !15440)
!15753 = !DILocation(line: 1577, column: 30, scope: !15748)
!15754 = !DILocation(line: 0, scope: !15748)
!15755 = !DILocation(line: 1582, column: 2, scope: !15748)
!15756 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2332, file: !2332, line: 1593, type: !7668, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !2032)
!15757 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15758)
!15758 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 1595, column: 10, scope: !15756)
!15760 = !DILocation(line: 0, scope: !14431, inlinedAt: !15758)
!15761 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15759)
!15762 = !DILocation(line: 1595, column: 27, scope: !15756)
!15763 = !DILocation(line: 1595, column: 41, scope: !15756)
!15764 = !DILocation(line: 1595, column: 30, scope: !15756)
!15765 = !DILocation(line: 1595, column: 2, scope: !15756)
!15766 = distinct !DISubprogram(name: "z_thread_abort", scope: !2332, file: !2332, line: 1725, type: !13662, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15767)
!15767 = !{!15768, !15769}
!15768 = !DILocalVariable(name: "thread", arg: 1, scope: !15766, file: !2332, line: 1725, type: !2224)
!15769 = !DILocalVariable(name: "key", scope: !15766, file: !2332, line: 1727, type: !13696)
!15770 = !DILocation(line: 0, scope: !15766)
!15771 = !DILocation(line: 0, scope: !13704, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 1727, column: 25, scope: !15766)
!15773 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15774)
!15774 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15772)
!15775 = !DILocation(line: 0, scope: !13713, inlinedAt: !15774)
!15776 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15772)
!15777 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15772)
!15778 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15772)
!15779 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15772)
!15780 = !DILocation(line: 1729, column: 20, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15766, file: !2332, line: 1729, column: 6)
!15782 = !DILocation(line: 1729, column: 33, scope: !15781)
!15783 = !DILocation(line: 1729, column: 48, scope: !15781)
!15784 = !DILocation(line: 1729, column: 6, scope: !15766)
!15785 = !DILocation(line: 0, scope: !13738, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 1730, column: 3, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15781, file: !2332, line: 1729, column: 54)
!15788 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15786)
!15789 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15786)
!15790 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15786)
!15791 = !DILocation(line: 0, scope: !13752, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15786)
!15793 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15792)
!15794 = !DILocation(line: 1731, column: 3, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15796, file: !2332, line: 1731, column: 3)
!15796 = distinct !DILexicalBlock(scope: !15797, file: !2332, line: 1731, column: 3)
!15797 = distinct !DILexicalBlock(scope: !15787, file: !2332, line: 1731, column: 3)
!15798 = !DILocation(line: 1736, column: 20, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15766, file: !2332, line: 1736, column: 6)
!15800 = !DILocation(line: 1736, column: 33, scope: !15799)
!15801 = !DILocation(line: 1736, column: 49, scope: !15799)
!15802 = !DILocation(line: 1736, column: 6, scope: !15766)
!15803 = !DILocation(line: 0, scope: !13738, inlinedAt: !15804)
!15804 = distinct !DILocation(line: 1737, column: 3, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15799, file: !2332, line: 1736, column: 56)
!15806 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15804)
!15807 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15804)
!15808 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15804)
!15809 = !DILocation(line: 0, scope: !13752, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15804)
!15811 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15810)
!15812 = !DILocation(line: 1738, column: 3, scope: !15805)
!15813 = !DILocation(line: 1775, column: 2, scope: !15766)
!15814 = !DILocation(line: 1776, column: 16, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15766, file: !2332, line: 1776, column: 6)
!15816 = !DILocation(line: 1776, column: 13, scope: !15815)
!15817 = !DILocation(line: 1776, column: 25, scope: !15815)
!15818 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 1776, column: 29, scope: !15815)
!15821 = !DILocation(line: 0, scope: !14431, inlinedAt: !15819)
!15822 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15820)
!15823 = !DILocation(line: 1776, column: 6, scope: !15766)
!15824 = !DILocation(line: 0, scope: !14382, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 1777, column: 3, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15815, file: !2332, line: 1776, column: 47)
!15827 = !DILocation(line: 0, scope: !14391, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 195, column: 2, scope: !14382, inlinedAt: !15825)
!15829 = !DILocation(line: 225, column: 2, scope: !14398, inlinedAt: !15828)
!15830 = !DILocation(line: 225, column: 2, scope: !14399, inlinedAt: !15828)
!15831 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15828)
!15832 = !DILocation(line: 196, column: 9, scope: !14382, inlinedAt: !15825)
!15833 = !DILocation(line: 1778, column: 3, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !2332, line: 1778, column: 3)
!15835 = distinct !DILexicalBlock(scope: !15836, file: !2332, line: 1778, column: 3)
!15836 = distinct !DILexicalBlock(scope: !15826, file: !2332, line: 1778, column: 3)
!15837 = !DILocation(line: 0, scope: !13738, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 1780, column: 2, scope: !15766)
!15839 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15838)
!15840 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15838)
!15841 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15838)
!15842 = !DILocation(line: 0, scope: !13752, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15838)
!15844 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15843)
!15845 = !DILocation(line: 1781, column: 1, scope: !15766)
!15846 = distinct !DISubprogram(name: "end_thread", scope: !2332, file: !2332, line: 1690, type: !13662, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15847)
!15847 = !{!15848}
!15848 = !DILocalVariable(name: "thread", arg: 1, scope: !15846, file: !2332, line: 1690, type: !2224)
!15849 = !DILocation(line: 0, scope: !15846)
!15850 = !DILocation(line: 1695, column: 20, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15846, file: !2332, line: 1695, column: 6)
!15852 = !DILocation(line: 1695, column: 33, scope: !15851)
!15853 = !DILocation(line: 1695, column: 49, scope: !15851)
!15854 = !DILocation(line: 1695, column: 6, scope: !15846)
!15855 = !DILocation(line: 1697, column: 29, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15851, file: !2332, line: 1695, column: 56)
!15857 = !DILocation(line: 1698, column: 7, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15856, file: !2332, line: 1698, column: 7)
!15859 = !DILocation(line: 1698, column: 7, scope: !15856)
!15860 = !DILocation(line: 0, scope: !13896, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 1699, column: 4, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15858, file: !2332, line: 1698, column: 35)
!15863 = !DILocation(line: 266, column: 28, scope: !13896, inlinedAt: !15861)
!15864 = !DILocation(line: 0, scope: !13904, inlinedAt: !15865)
!15865 = distinct !DILocation(line: 268, column: 3, scope: !13908, inlinedAt: !15861)
!15866 = !DILocation(line: 234, column: 2, scope: !13904, inlinedAt: !15865)
!15867 = !DILocation(line: 1700, column: 3, scope: !15862)
!15868 = !DILocation(line: 1701, column: 20, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15856, file: !2332, line: 1701, column: 7)
!15870 = !DILocation(line: 1701, column: 30, scope: !15869)
!15871 = !DILocation(line: 1701, column: 7, scope: !15856)
!15872 = !DILocation(line: 1702, column: 4, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15869, file: !2332, line: 1701, column: 39)
!15874 = !DILocation(line: 1703, column: 3, scope: !15873)
!15875 = !DILocation(line: 1704, column: 9, scope: !15856)
!15876 = !DILocation(line: 1705, column: 23, scope: !15856)
!15877 = !DILocation(line: 1705, column: 3, scope: !15856)
!15878 = !DILocation(line: 1706, column: 3, scope: !15856)
!15879 = !DILocation(line: 1722, column: 2, scope: !15856)
!15880 = !DILocation(line: 1723, column: 1, scope: !15846)
!15881 = distinct !DISubprogram(name: "unpend_all", scope: !2332, file: !2332, line: 1674, type: !15882, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15884)
!15882 = !DISubroutineType(types: !15883)
!15883 = !{null, !2255}
!15884 = !{!15885, !15886}
!15885 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15881, file: !2332, line: 1674, type: !2255)
!15886 = !DILocalVariable(name: "thread", scope: !15881, file: !2332, line: 1676, type: !2224)
!15887 = !DILocation(line: 0, scope: !15881)
!15888 = !DILocation(line: 1678, column: 19, scope: !15881)
!15889 = !DILocation(line: 1678, column: 41, scope: !15881)
!15890 = !DILocation(line: 1678, column: 2, scope: !15881)
!15891 = !DILocation(line: 1679, column: 3, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15881, file: !2332, line: 1678, column: 50)
!15893 = !DILocation(line: 1680, column: 9, scope: !15892)
!15894 = !DILocalVariable(name: "thread", arg: 1, scope: !15895, file: !12886, line: 65, type: !2224)
!15895 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12886, file: !12886, line: 65, type: !15896, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15898)
!15896 = !DISubroutineType(types: !15897)
!15897 = !{null, !2224, !32}
!15898 = !{!15894, !15899}
!15899 = !DILocalVariable(name: "value", arg: 2, scope: !15895, file: !12886, line: 65, type: !32)
!15900 = !DILocation(line: 0, scope: !15895, inlinedAt: !15901)
!15901 = distinct !DILocation(line: 1681, column: 3, scope: !15892)
!15902 = !DILocation(line: 67, column: 15, scope: !15895, inlinedAt: !15901)
!15903 = !DILocation(line: 67, column: 33, scope: !15895, inlinedAt: !15901)
!15904 = !DILocation(line: 1682, column: 3, scope: !15892)
!15905 = distinct !{!15905, !15890, !15906}
!15906 = !DILocation(line: 1683, column: 2, scope: !15881)
!15907 = !DILocation(line: 1684, column: 1, scope: !15881)
!15908 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2332, file: !2332, line: 1794, type: !15909, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15911)
!15909 = !DISubroutineType(types: !15910)
!15910 = !{!119, !2224, !14592}
!15911 = !{!15912, !15913, !15914, !15915}
!15912 = !DILocalVariable(name: "thread", arg: 1, scope: !15908, file: !2332, line: 1794, type: !2224)
!15913 = !DILocalVariable(name: "timeout", arg: 2, scope: !15908, file: !2332, line: 1794, type: !14592)
!15914 = !DILocalVariable(name: "key", scope: !15908, file: !2332, line: 1796, type: !13696)
!15915 = !DILocalVariable(name: "ret", scope: !15908, file: !2332, line: 1797, type: !119)
!15916 = !DILocation(line: 0, scope: !15908)
!15917 = !DILocation(line: 0, scope: !13704, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 1796, column: 25, scope: !15908)
!15919 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15918)
!15921 = !DILocation(line: 0, scope: !13713, inlinedAt: !15920)
!15922 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15918)
!15923 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15918)
!15924 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15918)
!15925 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15918)
!15926 = !DILocation(line: 1801, column: 20, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15908, file: !2332, line: 1801, column: 6)
!15928 = !DILocation(line: 1801, column: 33, scope: !15927)
!15929 = !DILocation(line: 1801, column: 49, scope: !15927)
!15930 = !DILocation(line: 1801, column: 6, scope: !15908)
!15931 = !DILocation(line: 1803, column: 13, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15927, file: !2332, line: 1803, column: 13)
!15933 = !DILocation(line: 1803, column: 13, scope: !15927)
!15934 = !DILocation(line: 1805, column: 24, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15932, file: !2332, line: 1805, column: 13)
!15936 = !DILocation(line: 1805, column: 21, scope: !15935)
!15937 = !DILocation(line: 1805, column: 34, scope: !15935)
!15938 = !DILocation(line: 1806, column: 20, scope: !15935)
!15939 = !DILocation(line: 1806, column: 44, scope: !15935)
!15940 = !DILocation(line: 1806, column: 30, scope: !15935)
!15941 = !DILocation(line: 1805, column: 13, scope: !15932)
!15942 = !DILocation(line: 1031, column: 3, scope: !14431, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 48, column: 10, scope: !14435, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 1809, column: 3, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15946, file: !2332, line: 1809, column: 3)
!15946 = distinct !DILexicalBlock(scope: !15947, file: !2332, line: 1809, column: 3)
!15947 = distinct !DILexicalBlock(scope: !15935, file: !2332, line: 1808, column: 9)
!15948 = !DILocation(line: 0, scope: !14431, inlinedAt: !15943)
!15949 = !DILocation(line: 48, column: 9, scope: !14435, inlinedAt: !15944)
!15950 = !DILocation(line: 1809, column: 3, scope: !15946)
!15951 = !DILocation(line: 1809, column: 3, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15945, file: !2332, line: 1809, column: 3)
!15953 = !DILocation(line: 1810, column: 23, scope: !15947)
!15954 = !DILocation(line: 1810, column: 42, scope: !15947)
!15955 = !DILocation(line: 1810, column: 3, scope: !15947)
!15956 = !DILocation(line: 1811, column: 22, scope: !15947)
!15957 = !DILocation(line: 1811, column: 3, scope: !15947)
!15958 = !DILocation(line: 0, scope: !14382, inlinedAt: !15959)
!15959 = distinct !DILocation(line: 1814, column: 9, scope: !15947)
!15960 = !DILocation(line: 0, scope: !14391, inlinedAt: !15961)
!15961 = distinct !DILocation(line: 195, column: 2, scope: !14382, inlinedAt: !15959)
!15962 = !DILocation(line: 225, column: 2, scope: !14398, inlinedAt: !15961)
!15963 = !DILocation(line: 225, column: 2, scope: !14399, inlinedAt: !15961)
!15964 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15961)
!15965 = !DILocation(line: 196, column: 9, scope: !14382, inlinedAt: !15959)
!15966 = !DILocation(line: 1817, column: 3, scope: !15947)
!15967 = !DILocation(line: 0, scope: !15927)
!15968 = !DILocation(line: 0, scope: !13738, inlinedAt: !15969)
!15969 = distinct !DILocation(line: 1822, column: 2, scope: !15908)
!15970 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !15969)
!15971 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !15969)
!15972 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15969)
!15973 = !DILocation(line: 0, scope: !13752, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !15969)
!15975 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !15974)
!15976 = !DILocation(line: 1823, column: 2, scope: !15908)
!15977 = !DILocation(line: 1824, column: 1, scope: !15908)
!15978 = distinct !DISubprogram(name: "z_sched_wake", scope: !2332, file: !2332, line: 1882, type: !15979, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !15981)
!15979 = !DISubroutineType(types: !15980)
!15980 = !{!345, !2255, !119, !113}
!15981 = !{!15982, !15983, !15984, !15985, !15986, !15987, !15989}
!15982 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15978, file: !2332, line: 1882, type: !2255)
!15983 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15978, file: !2332, line: 1882, type: !119)
!15984 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15978, file: !2332, line: 1882, type: !113)
!15985 = !DILocalVariable(name: "thread", scope: !15978, file: !2332, line: 1884, type: !2224)
!15986 = !DILocalVariable(name: "ret", scope: !15978, file: !2332, line: 1885, type: !345)
!15987 = !DILocalVariable(name: "__i", scope: !15988, file: !2332, line: 1887, type: !13696)
!15988 = distinct !DILexicalBlock(scope: !15978, file: !2332, line: 1887, column: 2)
!15989 = !DILocalVariable(name: "__key", scope: !15988, file: !2332, line: 1887, type: !13696)
!15990 = !DILocation(line: 0, scope: !15978)
!15991 = !DILocation(line: 0, scope: !15988)
!15992 = !DILocation(line: 0, scope: !13704, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 1887, column: 2, scope: !15988)
!15994 = !DILocation(line: 55, column: 2, scope: !13713, inlinedAt: !15995)
!15995 = distinct !DILocation(line: 145, column: 10, scope: !13704, inlinedAt: !15993)
!15996 = !DILocation(line: 0, scope: !13713, inlinedAt: !15995)
!15997 = !DILocation(line: 148, column: 2, scope: !13721, inlinedAt: !15993)
!15998 = !DILocation(line: 148, column: 2, scope: !13722, inlinedAt: !15993)
!15999 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15993)
!16000 = !DILocation(line: 160, column: 2, scope: !13704, inlinedAt: !15993)
!16001 = !DILocation(line: 1888, column: 12, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !16003, file: !2332, line: 1887, column: 26)
!16003 = distinct !DILexicalBlock(scope: !15988, file: !2332, line: 1887, column: 2)
!16004 = !DILocation(line: 1890, column: 14, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16002, file: !2332, line: 1890, column: 7)
!16006 = !DILocation(line: 1890, column: 7, scope: !16002)
!16007 = !DILocalVariable(name: "thread", arg: 1, scope: !16008, file: !16009, line: 134, type: !2224)
!16008 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16009, file: !16009, line: 134, type: !16010, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !16012)
!16009 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16010 = !DISubroutineType(types: !16011)
!16011 = !{null, !2224, !32, !113}
!16012 = !{!16007, !16013, !16014}
!16013 = !DILocalVariable(name: "value", arg: 2, scope: !16008, file: !16009, line: 135, type: !32)
!16014 = !DILocalVariable(name: "data", arg: 3, scope: !16008, file: !16009, line: 136, type: !113)
!16015 = !DILocation(line: 0, scope: !16008, inlinedAt: !16016)
!16016 = distinct !DILocation(line: 1891, column: 4, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16005, file: !2332, line: 1890, column: 23)
!16018 = !DILocation(line: 0, scope: !15895, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 138, column: 2, scope: !16008, inlinedAt: !16016)
!16020 = !DILocation(line: 67, column: 15, scope: !15895, inlinedAt: !16019)
!16021 = !DILocation(line: 67, column: 33, scope: !15895, inlinedAt: !16019)
!16022 = !DILocation(line: 139, column: 15, scope: !16008, inlinedAt: !16016)
!16023 = !DILocation(line: 139, column: 25, scope: !16008, inlinedAt: !16016)
!16024 = !DILocation(line: 1894, column: 4, scope: !16017)
!16025 = !DILocation(line: 1895, column: 10, scope: !16017)
!16026 = !DILocation(line: 1896, column: 4, scope: !16017)
!16027 = !DILocation(line: 1898, column: 3, scope: !16017)
!16028 = !DILocation(line: 0, scope: !13738, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 1887, column: 2, scope: !16003)
!16030 = !DILocation(line: 194, column: 2, scope: !13746, inlinedAt: !16029)
!16031 = !DILocation(line: 194, column: 2, scope: !13747, inlinedAt: !16029)
!16032 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !16029)
!16033 = !DILocation(line: 0, scope: !13752, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 215, column: 2, scope: !13738, inlinedAt: !16029)
!16035 = !DILocation(line: 95, column: 2, scope: !13752, inlinedAt: !16034)
!16036 = !DILocation(line: 1901, column: 2, scope: !15978)
!16037 = distinct !DISubprogram(name: "z_sched_wait", scope: !2332, file: !2332, line: 1904, type: !16038, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2221, retainedNodes: !16041)
!16038 = !DISubroutineType(types: !16039)
!16039 = !{!119, !13707, !13696, !2255, !14592, !16040}
!16040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!16041 = !{!16042, !16043, !16044, !16045, !16046, !16047}
!16042 = !DILocalVariable(name: "lock", arg: 1, scope: !16037, file: !2332, line: 1904, type: !13707)
!16043 = !DILocalVariable(name: "key", arg: 2, scope: !16037, file: !2332, line: 1904, type: !13696)
!16044 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16037, file: !2332, line: 1905, type: !2255)
!16045 = !DILocalVariable(name: "timeout", arg: 4, scope: !16037, file: !2332, line: 1905, type: !14592)
!16046 = !DILocalVariable(name: "data", arg: 5, scope: !16037, file: !2332, line: 1905, type: !16040)
!16047 = !DILocalVariable(name: "ret", scope: !16037, file: !2332, line: 1907, type: !119)
!16048 = !DILocation(line: 0, scope: !16037)
!16049 = !DILocation(line: 1907, column: 12, scope: !16037)
!16050 = !DILocation(line: 1909, column: 11, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16037, file: !2332, line: 1909, column: 6)
!16052 = !DILocation(line: 1909, column: 6, scope: !16037)
!16053 = !DILocation(line: 1910, column: 11, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16051, file: !2332, line: 1909, column: 20)
!16055 = !DILocation(line: 1910, column: 26, scope: !16054)
!16056 = !DILocation(line: 1910, column: 9, scope: !16054)
!16057 = !DILocation(line: 1911, column: 2, scope: !16054)
!16058 = !DILocation(line: 1912, column: 2, scope: !16037)
!16059 = distinct !DISubprogram(name: "z_data_copy", scope: !16060, file: !16060, line: 22, type: !2960, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !2032)
!16060 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16061 = !DILocation(line: 24, column: 2, scope: !16059)
!16062 = !DILocation(line: 27, column: 2, scope: !16059)
!16063 = !DILocation(line: 31, column: 2, scope: !16059)
!16064 = !DILocation(line: 71, column: 1, scope: !16059)
!16065 = distinct !DISubprogram(name: "z_add_timeout", scope: !2369, file: !2369, line: 88, type: !16066, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16072)
!16066 = !DISubroutineType(types: !16067)
!16067 = !{null, !2342, !2361, !16068}
!16068 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !16069)
!16069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !16070)
!16070 = !{!16071}
!16071 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16069, file: !115, line: 66, baseType: !114, size: 64)
!16072 = !{!16073, !16074, !16075, !16076, !16082, !16083, !16086, !16089}
!16073 = !DILocalVariable(name: "to", arg: 1, scope: !16065, file: !2369, line: 88, type: !2342)
!16074 = !DILocalVariable(name: "fn", arg: 2, scope: !16065, file: !2369, line: 88, type: !2361)
!16075 = !DILocalVariable(name: "timeout", arg: 3, scope: !16065, file: !2369, line: 89, type: !16068)
!16076 = !DILocalVariable(name: "__i", scope: !16077, file: !2369, line: 102, type: !16078)
!16077 = distinct !DILexicalBlock(scope: !16065, file: !2369, line: 102, column: 2)
!16078 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !16079)
!16079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !16080)
!16080 = !{!16081}
!16081 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16079, file: !259, line: 33, baseType: !119, size: 32)
!16082 = !DILocalVariable(name: "__key", scope: !16077, file: !2369, line: 102, type: !16078)
!16083 = !DILocalVariable(name: "t", scope: !16084, file: !2369, line: 103, type: !2342)
!16084 = distinct !DILexicalBlock(scope: !16085, file: !2369, line: 102, column: 24)
!16085 = distinct !DILexicalBlock(scope: !16077, file: !2369, line: 102, column: 2)
!16086 = !DILocalVariable(name: "ticks", scope: !16087, file: !2369, line: 107, type: !114)
!16087 = distinct !DILexicalBlock(scope: !16088, file: !2369, line: 106, column: 39)
!16088 = distinct !DILexicalBlock(scope: !16084, file: !2369, line: 105, column: 7)
!16089 = !DILocalVariable(name: "next_time", scope: !16090, file: !2369, line: 137, type: !764)
!16090 = distinct !DILexicalBlock(scope: !16091, file: !2369, line: 127, column: 22)
!16091 = distinct !DILexicalBlock(scope: !16084, file: !2369, line: 127, column: 7)
!16092 = !DILocation(line: 0, scope: !16065)
!16093 = !DILocation(line: 91, column: 6, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16065, file: !2369, line: 91, column: 6)
!16095 = !DILocation(line: 91, column: 6, scope: !16065)
!16096 = !DILocation(line: 99, column: 2, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16098, file: !2369, line: 99, column: 2)
!16098 = distinct !DILexicalBlock(scope: !16065, file: !2369, line: 99, column: 2)
!16099 = !DILocation(line: 99, column: 2, scope: !16098)
!16100 = !DILocation(line: 99, column: 2, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16097, file: !2369, line: 99, column: 2)
!16102 = !DILocation(line: 100, column: 6, scope: !16065)
!16103 = !DILocation(line: 100, column: 9, scope: !16065)
!16104 = !DILocation(line: 0, scope: !16077)
!16105 = !DILocalVariable(name: "l", arg: 1, scope: !16106, file: !259, line: 136, type: !16109)
!16106 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !16107, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16110)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{!16078, !16109}
!16109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!16110 = !{!16105, !16111}
!16111 = !DILocalVariable(name: "k", scope: !16106, file: !259, line: 139, type: !16078)
!16112 = !DILocation(line: 0, scope: !16106, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 102, column: 2, scope: !16077)
!16114 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16119)
!16115 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16116)
!16116 = !{!16117, !16118}
!16117 = !DILocalVariable(name: "key", scope: !16115, file: !5993, line: 44, type: !32)
!16118 = !DILocalVariable(name: "tmp", scope: !16115, file: !5993, line: 53, type: !32)
!16119 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16113)
!16120 = !{i64 2231638}
!16121 = !DILocation(line: 0, scope: !16115, inlinedAt: !16119)
!16122 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16113)
!16123 = distinct !DILexicalBlock(scope: !16124, file: !259, line: 148, column: 2)
!16124 = distinct !DILexicalBlock(scope: !16106, file: !259, line: 148, column: 2)
!16125 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16113)
!16126 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16113)
!16127 = distinct !DILexicalBlock(scope: !16123, file: !259, line: 148, column: 2)
!16128 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16113)
!16129 = !DILocation(line: 106, column: 33, scope: !16088)
!16130 = !DILocation(line: 105, column: 7, scope: !16084)
!16131 = !DILocation(line: 107, column: 50, scope: !16087)
!16132 = !DILocation(line: 107, column: 48, scope: !16087)
!16133 = !DILocation(line: 0, scope: !16087)
!16134 = !DILocation(line: 109, column: 17, scope: !16087)
!16135 = !DILocation(line: 110, column: 3, scope: !16087)
!16136 = !DILocation(line: 111, column: 31, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16088, file: !2369, line: 110, column: 10)
!16138 = !DILocation(line: 111, column: 37, scope: !16137)
!16139 = !DILocation(line: 111, column: 35, scope: !16137)
!16140 = !DILocation(line: 0, scope: !16088)
!16141 = !DILocation(line: 109, column: 8, scope: !16087)
!16142 = !DILocation(line: 109, column: 15, scope: !16087)
!16143 = !DILocation(line: 114, column: 12, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16084, file: !2369, line: 114, column: 3)
!16145 = !DILocation(line: 0, scope: !16084)
!16146 = !DILocation(line: 114, column: 3, scope: !16144)
!16147 = !DILocation(line: 115, column: 24, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !2369, line: 115, column: 8)
!16149 = distinct !DILexicalBlock(scope: !16150, file: !2369, line: 114, column: 45)
!16150 = distinct !DILexicalBlock(scope: !16144, file: !2369, line: 114, column: 3)
!16151 = !DILocation(line: 115, column: 11, scope: !16148)
!16152 = !DILocation(line: 115, column: 18, scope: !16148)
!16153 = !DILocation(line: 115, column: 8, scope: !16149)
!16154 = !DILocation(line: 116, column: 15, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16148, file: !2369, line: 115, column: 32)
!16156 = !DILocation(line: 117, column: 26, scope: !16155)
!16157 = !DILocation(line: 117, column: 5, scope: !16155)
!16158 = !DILocation(line: 123, column: 7, scope: !16084)
!16159 = !DILocation(line: 120, column: 15, scope: !16149)
!16160 = !DILocation(line: 114, column: 36, scope: !16150)
!16161 = distinct !{!16161, !16146, !16162}
!16162 = !DILocation(line: 121, column: 3, scope: !16144)
!16163 = !DILocation(line: 124, column: 4, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16165, file: !2369, line: 123, column: 18)
!16165 = distinct !DILexicalBlock(scope: !16084, file: !2369, line: 123, column: 7)
!16166 = !DILocation(line: 125, column: 3, scope: !16164)
!16167 = !DILocation(line: 127, column: 13, scope: !16091)
!16168 = !DILocation(line: 127, column: 10, scope: !16091)
!16169 = !DILocation(line: 127, column: 7, scope: !16084)
!16170 = !DILocation(line: 137, column: 24, scope: !16090)
!16171 = !DILocation(line: 0, scope: !16090)
!16172 = !DILocation(line: 139, column: 18, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16090, file: !2369, line: 139, column: 8)
!16174 = !DILocation(line: 139, column: 23, scope: !16173)
!16175 = !DILocation(line: 141, column: 5, scope: !16176)
!16176 = distinct !DILexicalBlock(scope: !16173, file: !2369, line: 140, column: 48)
!16177 = !DILocation(line: 142, column: 4, scope: !16176)
!16178 = !DILocalVariable(name: "key", arg: 2, scope: !16179, file: !259, line: 190, type: !16078)
!16179 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !16180, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16182)
!16180 = !DISubroutineType(types: !16181)
!16181 = !{null, !16109, !16078}
!16182 = !{!16183, !16178}
!16183 = !DILocalVariable(name: "l", arg: 1, scope: !16179, file: !259, line: 189, type: !16109)
!16184 = !DILocation(line: 0, scope: !16179, inlinedAt: !16185)
!16185 = distinct !DILocation(line: 102, column: 2, scope: !16085)
!16186 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16185)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !259, line: 194, column: 2)
!16188 = distinct !DILexicalBlock(scope: !16179, file: !259, line: 194, column: 2)
!16189 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16185)
!16190 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16185)
!16191 = distinct !DILexicalBlock(scope: !16187, file: !259, line: 194, column: 2)
!16192 = !DILocalVariable(name: "key", arg: 1, scope: !16193, file: !5993, line: 84, type: !32)
!16193 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16194)
!16194 = !{!16192}
!16195 = !DILocation(line: 0, scope: !16193, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16185)
!16197 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16196)
!16198 = !{i64 2232455}
!16199 = !DILocation(line: 148, column: 1, scope: !16065)
!16200 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !16201, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16205)
!16201 = !DISubroutineType(types: !16202)
!16202 = !{!345, !16203}
!16203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16204, size: 32)
!16204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2346)
!16205 = !{!16206}
!16206 = !DILocalVariable(name: "node", arg: 1, scope: !16200, file: !153, line: 225, type: !16203)
!16207 = !DILocation(line: 0, scope: !16200)
!16208 = !DILocation(line: 227, column: 15, scope: !16200)
!16209 = !DILocation(line: 227, column: 20, scope: !16200)
!16210 = !DILocation(line: 227, column: 2, scope: !16200)
!16211 = distinct !DISubprogram(name: "elapsed", scope: !2369, file: !2369, line: 62, type: !16212, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !2032)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{!764}
!16214 = !DILocation(line: 64, column: 9, scope: !16211)
!16215 = !DILocation(line: 64, column: 28, scope: !16211)
!16216 = !DILocation(line: 64, column: 35, scope: !16211)
!16217 = !DILocation(line: 64, column: 2, scope: !16211)
!16218 = distinct !DISubprogram(name: "first", scope: !2369, file: !2369, line: 39, type: !16219, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16221)
!16219 = !DISubroutineType(types: !16220)
!16220 = !{!2342}
!16221 = !{!16222}
!16222 = !DILocalVariable(name: "t", scope: !16218, file: !2369, line: 41, type: !16223)
!16223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!16224 = !DILocation(line: 41, column: 19, scope: !16218)
!16225 = !DILocation(line: 0, scope: !16218)
!16226 = !DILocation(line: 43, column: 9, scope: !16218)
!16227 = !DILocation(line: 43, column: 2, scope: !16218)
!16228 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !16229, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16231)
!16229 = !DISubroutineType(types: !16230)
!16230 = !{null, !16223, !16223}
!16231 = !{!16232, !16233, !16234}
!16232 = !DILocalVariable(name: "successor", arg: 1, scope: !16228, file: !153, line: 443, type: !16223)
!16233 = !DILocalVariable(name: "node", arg: 2, scope: !16228, file: !153, line: 443, type: !16223)
!16234 = !DILocalVariable(name: "prev", scope: !16228, file: !153, line: 445, type: !16235)
!16235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16223)
!16236 = !DILocation(line: 0, scope: !16228)
!16237 = !DILocation(line: 445, column: 39, scope: !16228)
!16238 = !DILocation(line: 447, column: 8, scope: !16228)
!16239 = !DILocation(line: 447, column: 13, scope: !16228)
!16240 = !DILocation(line: 448, column: 8, scope: !16228)
!16241 = !DILocation(line: 448, column: 13, scope: !16228)
!16242 = !DILocation(line: 449, column: 8, scope: !16228)
!16243 = !DILocation(line: 449, column: 13, scope: !16228)
!16244 = !DILocation(line: 450, column: 18, scope: !16228)
!16245 = !DILocation(line: 451, column: 1, scope: !16228)
!16246 = distinct !DISubprogram(name: "next", scope: !2369, file: !2369, line: 46, type: !16247, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16249)
!16247 = !DISubroutineType(types: !16248)
!16248 = !{!2342, !2342}
!16249 = !{!16250, !16251}
!16250 = !DILocalVariable(name: "t", arg: 1, scope: !16246, file: !2369, line: 46, type: !2342)
!16251 = !DILocalVariable(name: "n", scope: !16246, file: !2369, line: 48, type: !16223)
!16252 = !DILocation(line: 0, scope: !16246)
!16253 = !DILocation(line: 48, column: 58, scope: !16246)
!16254 = !DILocation(line: 48, column: 19, scope: !16246)
!16255 = !DILocation(line: 50, column: 9, scope: !16246)
!16256 = !DILocation(line: 50, column: 2, scope: !16246)
!16257 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !16258, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16261)
!16258 = !DISubroutineType(types: !16259)
!16259 = !{null, !16260, !16223}
!16260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!16261 = !{!16262, !16263, !16264}
!16262 = !DILocalVariable(name: "list", arg: 1, scope: !16257, file: !153, line: 404, type: !16260)
!16263 = !DILocalVariable(name: "node", arg: 2, scope: !16257, file: !153, line: 404, type: !16223)
!16264 = !DILocalVariable(name: "tail", scope: !16257, file: !153, line: 406, type: !16235)
!16265 = !DILocation(line: 0, scope: !16257)
!16266 = !DILocation(line: 406, column: 34, scope: !16257)
!16267 = !DILocation(line: 408, column: 8, scope: !16257)
!16268 = !DILocation(line: 408, column: 13, scope: !16257)
!16269 = !DILocation(line: 409, column: 8, scope: !16257)
!16270 = !DILocation(line: 409, column: 13, scope: !16257)
!16271 = !DILocation(line: 411, column: 8, scope: !16257)
!16272 = !DILocation(line: 411, column: 13, scope: !16257)
!16273 = !DILocation(line: 412, column: 13, scope: !16257)
!16274 = !DILocation(line: 413, column: 1, scope: !16257)
!16275 = distinct !DISubprogram(name: "next_timeout", scope: !2369, file: !2369, line: 67, type: !16212, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16276)
!16276 = !{!16277, !16278, !16279}
!16277 = !DILocalVariable(name: "to", scope: !16275, file: !2369, line: 69, type: !2342)
!16278 = !DILocalVariable(name: "ticks_elapsed", scope: !16275, file: !2369, line: 70, type: !764)
!16279 = !DILocalVariable(name: "ret", scope: !16275, file: !2369, line: 71, type: !764)
!16280 = !DILocation(line: 69, column: 24, scope: !16275)
!16281 = !DILocation(line: 0, scope: !16275)
!16282 = !DILocation(line: 70, column: 26, scope: !16275)
!16283 = !DILocation(line: 73, column: 10, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16275, file: !2369, line: 73, column: 6)
!16285 = !DILocation(line: 73, column: 19, scope: !16284)
!16286 = !DILocation(line: 74, column: 21, scope: !16284)
!16287 = !DILocation(line: 74, column: 30, scope: !16284)
!16288 = !DILocation(line: 74, column: 28, scope: !16284)
!16289 = !DILocation(line: 74, column: 45, scope: !16284)
!16290 = !DILocation(line: 73, column: 6, scope: !16275)
!16291 = !DILocation(line: 77, column: 9, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16284, file: !2369, line: 76, column: 9)
!16293 = !DILocation(line: 0, scope: !16284)
!16294 = !DILocation(line: 81, column: 20, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16275, file: !2369, line: 81, column: 6)
!16296 = !DILocation(line: 81, column: 6, scope: !16295)
!16297 = !DILocation(line: 81, column: 32, scope: !16295)
!16298 = !DILocation(line: 85, column: 2, scope: !16275)
!16299 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !16300, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16302)
!16300 = !DISubroutineType(types: !16301)
!16301 = !{!16223, !16260, !16223}
!16302 = !{!16303, !16304}
!16303 = !DILocalVariable(name: "list", arg: 1, scope: !16299, file: !153, line: 341, type: !16260)
!16304 = !DILocalVariable(name: "node", arg: 2, scope: !16299, file: !153, line: 342, type: !16223)
!16305 = !DILocation(line: 0, scope: !16299)
!16306 = !DILocation(line: 344, column: 15, scope: !16299)
!16307 = !DILocation(line: 344, column: 9, scope: !16299)
!16308 = !DILocation(line: 344, column: 26, scope: !16299)
!16309 = !DILocation(line: 344, column: 2, scope: !16299)
!16310 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !16300, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16311)
!16311 = !{!16312, !16313}
!16312 = !DILocalVariable(name: "list", arg: 1, scope: !16310, file: !153, line: 325, type: !16260)
!16313 = !DILocalVariable(name: "node", arg: 2, scope: !16310, file: !153, line: 326, type: !16223)
!16314 = !DILocation(line: 0, scope: !16310)
!16315 = !DILocation(line: 328, column: 24, scope: !16310)
!16316 = !DILocation(line: 328, column: 15, scope: !16310)
!16317 = !DILocation(line: 328, column: 9, scope: !16310)
!16318 = !DILocation(line: 328, column: 45, scope: !16310)
!16319 = !DILocation(line: 328, column: 2, scope: !16310)
!16320 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !16321, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16323)
!16321 = !DISubroutineType(types: !16322)
!16322 = !{!16223, !16260}
!16323 = !{!16324}
!16324 = !DILocalVariable(name: "list", arg: 1, scope: !16320, file: !153, line: 294, type: !16260)
!16325 = !DILocation(line: 0, scope: !16320)
!16326 = !DILocation(line: 296, column: 9, scope: !16320)
!16327 = !DILocation(line: 296, column: 2, scope: !16320)
!16328 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !16329, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16331)
!16329 = !DISubroutineType(types: !16330)
!16330 = !{!345, !16260}
!16331 = !{!16332}
!16332 = !DILocalVariable(name: "list", arg: 1, scope: !16328, file: !153, line: 266, type: !16260)
!16333 = !DILocation(line: 0, scope: !16328)
!16334 = !DILocation(line: 268, column: 15, scope: !16328)
!16335 = !DILocation(line: 268, column: 20, scope: !16328)
!16336 = !DILocation(line: 268, column: 2, scope: !16328)
!16337 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2369, file: !2369, line: 150, type: !16338, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16340)
!16338 = !DISubroutineType(types: !16339)
!16339 = !{!119, !2342}
!16340 = !{!16341, !16342, !16343, !16345}
!16341 = !DILocalVariable(name: "to", arg: 1, scope: !16337, file: !2369, line: 150, type: !2342)
!16342 = !DILocalVariable(name: "ret", scope: !16337, file: !2369, line: 152, type: !119)
!16343 = !DILocalVariable(name: "__i", scope: !16344, file: !2369, line: 154, type: !16078)
!16344 = distinct !DILexicalBlock(scope: !16337, file: !2369, line: 154, column: 2)
!16345 = !DILocalVariable(name: "__key", scope: !16344, file: !2369, line: 154, type: !16078)
!16346 = !DILocation(line: 0, scope: !16337)
!16347 = !DILocation(line: 0, scope: !16344)
!16348 = !DILocation(line: 0, scope: !16106, inlinedAt: !16349)
!16349 = distinct !DILocation(line: 154, column: 2, scope: !16344)
!16350 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16349)
!16352 = !DILocation(line: 0, scope: !16115, inlinedAt: !16351)
!16353 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16349)
!16354 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16349)
!16355 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16349)
!16356 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16349)
!16357 = !DILocation(line: 155, column: 7, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16359, file: !2369, line: 155, column: 7)
!16359 = distinct !DILexicalBlock(scope: !16360, file: !2369, line: 154, column: 24)
!16360 = distinct !DILexicalBlock(scope: !16344, file: !2369, line: 154, column: 2)
!16361 = !DILocation(line: 155, column: 7, scope: !16359)
!16362 = !DILocation(line: 156, column: 4, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16358, file: !2369, line: 155, column: 39)
!16364 = !DILocation(line: 158, column: 3, scope: !16363)
!16365 = !DILocation(line: 0, scope: !16179, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 154, column: 2, scope: !16360)
!16367 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16366)
!16368 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16366)
!16369 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16366)
!16370 = !DILocation(line: 0, scope: !16193, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16366)
!16372 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16371)
!16373 = !DILocation(line: 161, column: 2, scope: !16337)
!16374 = distinct !DISubprogram(name: "remove_timeout", scope: !2369, file: !2369, line: 53, type: !2363, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16375)
!16375 = !{!16376}
!16376 = !DILocalVariable(name: "t", arg: 1, scope: !16374, file: !2369, line: 53, type: !2342)
!16377 = !DILocation(line: 0, scope: !16374)
!16378 = !DILocation(line: 55, column: 6, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16374, file: !2369, line: 55, column: 6)
!16380 = !DILocation(line: 55, column: 14, scope: !16379)
!16381 = !DILocation(line: 55, column: 6, scope: !16374)
!16382 = !DILocation(line: 56, column: 25, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16379, file: !2369, line: 55, column: 23)
!16384 = !DILocation(line: 56, column: 12, scope: !16383)
!16385 = !DILocation(line: 56, column: 19, scope: !16383)
!16386 = !DILocation(line: 57, column: 2, scope: !16383)
!16387 = !DILocation(line: 59, column: 23, scope: !16374)
!16388 = !DILocation(line: 59, column: 2, scope: !16374)
!16389 = !DILocation(line: 60, column: 1, scope: !16374)
!16390 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !16391, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16393)
!16391 = !DISubroutineType(types: !16392)
!16392 = !{null, !16223}
!16393 = !{!16394, !16395, !16396}
!16394 = !DILocalVariable(name: "node", arg: 1, scope: !16390, file: !153, line: 496, type: !16223)
!16395 = !DILocalVariable(name: "prev", scope: !16390, file: !153, line: 498, type: !16235)
!16396 = !DILocalVariable(name: "next", scope: !16390, file: !153, line: 499, type: !16235)
!16397 = !DILocation(line: 0, scope: !16390)
!16398 = !DILocation(line: 498, column: 34, scope: !16390)
!16399 = !DILocation(line: 499, column: 34, scope: !16390)
!16400 = !DILocation(line: 501, column: 8, scope: !16390)
!16401 = !DILocation(line: 501, column: 13, scope: !16390)
!16402 = !DILocation(line: 502, column: 8, scope: !16390)
!16403 = !DILocation(line: 502, column: 13, scope: !16390)
!16404 = !DILocation(line: 503, column: 2, scope: !16390)
!16405 = !DILocation(line: 504, column: 1, scope: !16390)
!16406 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !16391, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16407)
!16407 = !{!16408}
!16408 = !DILocalVariable(name: "node", arg: 1, scope: !16406, file: !153, line: 211, type: !16223)
!16409 = !DILocation(line: 0, scope: !16406)
!16410 = !DILocation(line: 213, column: 8, scope: !16406)
!16411 = !DILocation(line: 213, column: 13, scope: !16406)
!16412 = !DILocation(line: 214, column: 8, scope: !16406)
!16413 = !DILocation(line: 214, column: 13, scope: !16406)
!16414 = !DILocation(line: 215, column: 1, scope: !16406)
!16415 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2369, file: !2369, line: 183, type: !16416, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16420)
!16416 = !DISubroutineType(types: !16417)
!16417 = !{!114, !16418}
!16418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16419, size: 32)
!16419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2343)
!16420 = !{!16421, !16422, !16423, !16425}
!16421 = !DILocalVariable(name: "timeout", arg: 1, scope: !16415, file: !2369, line: 183, type: !16418)
!16422 = !DILocalVariable(name: "ticks", scope: !16415, file: !2369, line: 185, type: !114)
!16423 = !DILocalVariable(name: "__i", scope: !16424, file: !2369, line: 187, type: !16078)
!16424 = distinct !DILexicalBlock(scope: !16415, file: !2369, line: 187, column: 2)
!16425 = !DILocalVariable(name: "__key", scope: !16424, file: !2369, line: 187, type: !16078)
!16426 = !DILocation(line: 0, scope: !16415)
!16427 = !DILocation(line: 0, scope: !16424)
!16428 = !DILocation(line: 0, scope: !16106, inlinedAt: !16429)
!16429 = distinct !DILocation(line: 187, column: 2, scope: !16424)
!16430 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16429)
!16432 = !DILocation(line: 0, scope: !16115, inlinedAt: !16431)
!16433 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16429)
!16434 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16429)
!16435 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16429)
!16436 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16429)
!16437 = !DILocation(line: 188, column: 11, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16439, file: !2369, line: 187, column: 24)
!16439 = distinct !DILexicalBlock(scope: !16424, file: !2369, line: 187, column: 2)
!16440 = !DILocation(line: 0, scope: !16179, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 187, column: 2, scope: !16439)
!16442 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16441)
!16443 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16441)
!16444 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16441)
!16445 = !DILocation(line: 0, scope: !16193, inlinedAt: !16446)
!16446 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16441)
!16447 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16446)
!16448 = !DILocation(line: 191, column: 2, scope: !16415)
!16449 = distinct !DISubprogram(name: "timeout_rem", scope: !2369, file: !2369, line: 165, type: !16416, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16450)
!16450 = !{!16451, !16452, !16453}
!16451 = !DILocalVariable(name: "timeout", arg: 1, scope: !16449, file: !2369, line: 165, type: !16418)
!16452 = !DILocalVariable(name: "ticks", scope: !16449, file: !2369, line: 167, type: !114)
!16453 = !DILocalVariable(name: "t", scope: !16454, file: !2369, line: 173, type: !2342)
!16454 = distinct !DILexicalBlock(scope: !16449, file: !2369, line: 173, column: 2)
!16455 = !DILocation(line: 0, scope: !16449)
!16456 = !DILocation(line: 169, column: 6, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16449, file: !2369, line: 169, column: 6)
!16458 = !DILocation(line: 169, column: 6, scope: !16449)
!16459 = !DILocation(line: 173, column: 28, scope: !16454)
!16460 = !DILocation(line: 0, scope: !16454)
!16461 = !DILocation(line: 173, column: 39, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16454, file: !2369, line: 173, column: 2)
!16463 = !DILocation(line: 173, column: 2, scope: !16454)
!16464 = !DILocation(line: 174, column: 15, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16462, file: !2369, line: 173, column: 61)
!16466 = !DILocation(line: 174, column: 9, scope: !16465)
!16467 = !DILocation(line: 175, column: 15, scope: !16468)
!16468 = distinct !DILexicalBlock(scope: !16465, file: !2369, line: 175, column: 7)
!16469 = !DILocation(line: 175, column: 7, scope: !16465)
!16470 = !DILocation(line: 173, column: 52, scope: !16462)
!16471 = distinct !{!16471, !16463, !16472}
!16472 = !DILocation(line: 178, column: 2, scope: !16454)
!16473 = !DILocation(line: 180, column: 17, scope: !16449)
!16474 = !DILocation(line: 180, column: 15, scope: !16449)
!16475 = !DILocation(line: 180, column: 2, scope: !16449)
!16476 = !DILocation(line: 181, column: 1, scope: !16449)
!16477 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13295, file: !13295, line: 35, type: !16478, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16480)
!16478 = !DISubroutineType(types: !16479)
!16479 = !{!345, !16418}
!16480 = !{!16481}
!16481 = !DILocalVariable(name: "to", arg: 1, scope: !16477, file: !13295, line: 35, type: !16418)
!16482 = !DILocation(line: 0, scope: !16477)
!16483 = !DILocation(line: 37, column: 35, scope: !16477)
!16484 = !DILocation(line: 37, column: 10, scope: !16477)
!16485 = !DILocation(line: 37, column: 9, scope: !16477)
!16486 = !DILocation(line: 37, column: 2, scope: !16477)
!16487 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2369, file: !2369, line: 194, type: !16416, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16488)
!16488 = !{!16489, !16490, !16491, !16493}
!16489 = !DILocalVariable(name: "timeout", arg: 1, scope: !16487, file: !2369, line: 194, type: !16418)
!16490 = !DILocalVariable(name: "ticks", scope: !16487, file: !2369, line: 196, type: !114)
!16491 = !DILocalVariable(name: "__i", scope: !16492, file: !2369, line: 198, type: !16078)
!16492 = distinct !DILexicalBlock(scope: !16487, file: !2369, line: 198, column: 2)
!16493 = !DILocalVariable(name: "__key", scope: !16492, file: !2369, line: 198, type: !16078)
!16494 = !DILocation(line: 0, scope: !16487)
!16495 = !DILocation(line: 0, scope: !16492)
!16496 = !DILocation(line: 0, scope: !16106, inlinedAt: !16497)
!16497 = distinct !DILocation(line: 198, column: 2, scope: !16492)
!16498 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16497)
!16500 = !DILocation(line: 0, scope: !16115, inlinedAt: !16499)
!16501 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16497)
!16502 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16497)
!16503 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16497)
!16504 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16497)
!16505 = !DILocation(line: 199, column: 11, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16507, file: !2369, line: 198, column: 24)
!16507 = distinct !DILexicalBlock(scope: !16492, file: !2369, line: 198, column: 2)
!16508 = !DILocation(line: 199, column: 23, scope: !16506)
!16509 = !DILocation(line: 0, scope: !16179, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 198, column: 2, scope: !16507)
!16511 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16510)
!16512 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16510)
!16513 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16510)
!16514 = !DILocation(line: 0, scope: !16193, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16510)
!16516 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16515)
!16517 = !DILocation(line: 199, column: 21, scope: !16506)
!16518 = !DILocation(line: 202, column: 2, scope: !16487)
!16519 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2369, file: !2369, line: 205, type: !16212, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16520)
!16520 = !{!16521, !16522, !16524}
!16521 = !DILocalVariable(name: "ret", scope: !16519, file: !2369, line: 207, type: !764)
!16522 = !DILocalVariable(name: "__i", scope: !16523, file: !2369, line: 209, type: !16078)
!16523 = distinct !DILexicalBlock(scope: !16519, file: !2369, line: 209, column: 2)
!16524 = !DILocalVariable(name: "__key", scope: !16523, file: !2369, line: 209, type: !16078)
!16525 = !DILocation(line: 0, scope: !16519)
!16526 = !DILocation(line: 0, scope: !16523)
!16527 = !DILocation(line: 0, scope: !16106, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 209, column: 2, scope: !16523)
!16529 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16528)
!16531 = !DILocation(line: 0, scope: !16115, inlinedAt: !16530)
!16532 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16528)
!16533 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16528)
!16534 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16528)
!16535 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16528)
!16536 = !DILocation(line: 210, column: 9, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16538, file: !2369, line: 209, column: 24)
!16538 = distinct !DILexicalBlock(scope: !16523, file: !2369, line: 209, column: 2)
!16539 = !DILocation(line: 0, scope: !16179, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 209, column: 2, scope: !16538)
!16541 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16540)
!16542 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16540)
!16543 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16540)
!16544 = !DILocation(line: 0, scope: !16193, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16540)
!16546 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16545)
!16547 = !DILocation(line: 212, column: 2, scope: !16519)
!16548 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2369, file: !2369, line: 215, type: !10772, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16549)
!16549 = !{!16550, !16551, !16552, !16554, !16555, !16558, !16559}
!16550 = !DILocalVariable(name: "ticks", arg: 1, scope: !16548, file: !2369, line: 215, type: !764)
!16551 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16548, file: !2369, line: 215, type: !345)
!16552 = !DILocalVariable(name: "__i", scope: !16553, file: !2369, line: 217, type: !16078)
!16553 = distinct !DILexicalBlock(scope: !16548, file: !2369, line: 217, column: 2)
!16554 = !DILocalVariable(name: "__key", scope: !16553, file: !2369, line: 217, type: !16078)
!16555 = !DILocalVariable(name: "next_to", scope: !16556, file: !2369, line: 218, type: !119)
!16556 = distinct !DILexicalBlock(scope: !16557, file: !2369, line: 217, column: 24)
!16557 = distinct !DILexicalBlock(scope: !16553, file: !2369, line: 217, column: 2)
!16558 = !DILocalVariable(name: "sooner", scope: !16556, file: !2369, line: 219, type: !345)
!16559 = !DILocalVariable(name: "imminent", scope: !16556, file: !2369, line: 221, type: !345)
!16560 = !DILocation(line: 0, scope: !16548)
!16561 = !DILocation(line: 0, scope: !16553)
!16562 = !DILocation(line: 0, scope: !16106, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 217, column: 2, scope: !16553)
!16564 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16565)
!16565 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16563)
!16566 = !DILocation(line: 0, scope: !16115, inlinedAt: !16565)
!16567 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16563)
!16568 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16563)
!16569 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16563)
!16570 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16563)
!16571 = !DILocation(line: 218, column: 17, scope: !16556)
!16572 = !DILocation(line: 0, scope: !16556)
!16573 = !DILocation(line: 221, column: 27, scope: !16556)
!16574 = !DILocation(line: 233, column: 17, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16556, file: !2369, line: 233, column: 7)
!16576 = !DILocation(line: 234, column: 26, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16575, file: !2369, line: 233, column: 56)
!16578 = !DILocation(line: 234, column: 4, scope: !16577)
!16579 = !DILocation(line: 235, column: 3, scope: !16577)
!16580 = !DILocation(line: 0, scope: !16179, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 217, column: 2, scope: !16557)
!16582 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16581)
!16583 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16581)
!16584 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16581)
!16585 = !DILocation(line: 0, scope: !16193, inlinedAt: !16586)
!16586 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16581)
!16587 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16586)
!16588 = !DILocation(line: 237, column: 1, scope: !16548)
!16589 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2369, file: !2369, line: 239, type: !16590, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16592)
!16590 = !DISubroutineType(types: !16591)
!16591 = !{null, !764}
!16592 = !{!16593, !16594, !16595, !16597}
!16593 = !DILocalVariable(name: "ticks", arg: 1, scope: !16589, file: !2369, line: 239, type: !764)
!16594 = !DILocalVariable(name: "key", scope: !16589, file: !2369, line: 245, type: !16078)
!16595 = !DILocalVariable(name: "t", scope: !16596, file: !2369, line: 262, type: !2342)
!16596 = distinct !DILexicalBlock(scope: !16589, file: !2369, line: 261, column: 67)
!16597 = !DILocalVariable(name: "dt", scope: !16596, file: !2369, line: 263, type: !119)
!16598 = !DILocation(line: 0, scope: !16589)
!16599 = !DILocation(line: 242, column: 2, scope: !16589)
!16600 = !DILocation(line: 0, scope: !16106, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 245, column: 25, scope: !16589)
!16602 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16601)
!16604 = !DILocation(line: 0, scope: !16115, inlinedAt: !16603)
!16605 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16601)
!16606 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16601)
!16607 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16601)
!16608 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16601)
!16609 = !DILocation(line: 261, column: 9, scope: !16589)
!16610 = !DILocation(line: 261, column: 17, scope: !16589)
!16611 = !DILocation(line: 261, column: 25, scope: !16589)
!16612 = !DILocation(line: 261, column: 37, scope: !16589)
!16613 = !DILocation(line: 261, column: 47, scope: !16589)
!16614 = !DILocation(line: 261, column: 44, scope: !16589)
!16615 = !DILocation(line: 261, column: 2, scope: !16589)
!16616 = !DILocation(line: 0, scope: !16596)
!16617 = !DILocation(line: 263, column: 12, scope: !16596)
!16618 = !DILocation(line: 265, column: 16, scope: !16596)
!16619 = !DILocation(line: 265, column: 13, scope: !16596)
!16620 = !DILocation(line: 266, column: 13, scope: !16596)
!16621 = !DILocation(line: 267, column: 3, scope: !16596)
!16622 = !DILocation(line: 0, scope: !16179, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 269, column: 3, scope: !16596)
!16624 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16623)
!16625 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16623)
!16626 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16623)
!16627 = !DILocation(line: 0, scope: !16193, inlinedAt: !16628)
!16628 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16623)
!16629 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16628)
!16630 = !DILocation(line: 270, column: 6, scope: !16596)
!16631 = !DILocation(line: 270, column: 3, scope: !16596)
!16632 = !DILocation(line: 0, scope: !16106, inlinedAt: !16633)
!16633 = distinct !DILocation(line: 271, column: 9, scope: !16596)
!16634 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16633)
!16636 = !DILocation(line: 0, scope: !16115, inlinedAt: !16635)
!16637 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16633)
!16638 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16633)
!16639 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16633)
!16640 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16633)
!16641 = !DILocation(line: 272, column: 22, scope: !16596)
!16642 = distinct !{!16642, !16615, !16643}
!16643 = !DILocation(line: 273, column: 2, scope: !16589)
!16644 = !DILocation(line: 276, column: 19, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16646, file: !2369, line: 275, column: 23)
!16646 = distinct !DILexicalBlock(scope: !16589, file: !2369, line: 275, column: 6)
!16647 = !DILocation(line: 277, column: 2, scope: !16645)
!16648 = !DILocation(line: 279, column: 15, scope: !16589)
!16649 = !DILocation(line: 279, column: 12, scope: !16589)
!16650 = !DILocation(line: 280, column: 21, scope: !16589)
!16651 = !DILocation(line: 282, column: 24, scope: !16589)
!16652 = !DILocation(line: 282, column: 2, scope: !16589)
!16653 = !DILocation(line: 0, scope: !16179, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 284, column: 2, scope: !16589)
!16655 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16654)
!16656 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16654)
!16657 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16654)
!16658 = !DILocation(line: 0, scope: !16193, inlinedAt: !16659)
!16659 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16654)
!16660 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16659)
!16661 = !DILocation(line: 285, column: 1, scope: !16589)
!16662 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2369, file: !2369, line: 287, type: !16663, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16665)
!16663 = !DISubroutineType(types: !16664)
!16664 = !{!116}
!16665 = !{!16666, !16667, !16669}
!16666 = !DILocalVariable(name: "t", scope: !16662, file: !2369, line: 289, type: !120)
!16667 = !DILocalVariable(name: "__i", scope: !16668, file: !2369, line: 291, type: !16078)
!16668 = distinct !DILexicalBlock(scope: !16662, file: !2369, line: 291, column: 2)
!16669 = !DILocalVariable(name: "__key", scope: !16668, file: !2369, line: 291, type: !16078)
!16670 = !DILocation(line: 0, scope: !16662)
!16671 = !DILocation(line: 0, scope: !16668)
!16672 = !DILocation(line: 0, scope: !16106, inlinedAt: !16673)
!16673 = distinct !DILocation(line: 291, column: 2, scope: !16668)
!16674 = !DILocation(line: 55, column: 2, scope: !16115, inlinedAt: !16675)
!16675 = distinct !DILocation(line: 145, column: 10, scope: !16106, inlinedAt: !16673)
!16676 = !DILocation(line: 0, scope: !16115, inlinedAt: !16675)
!16677 = !DILocation(line: 148, column: 2, scope: !16123, inlinedAt: !16673)
!16678 = !DILocation(line: 148, column: 2, scope: !16124, inlinedAt: !16673)
!16679 = !DILocation(line: 148, column: 2, scope: !16127, inlinedAt: !16673)
!16680 = !DILocation(line: 160, column: 2, scope: !16106, inlinedAt: !16673)
!16681 = !DILocation(line: 292, column: 7, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16683, file: !2369, line: 291, column: 24)
!16683 = distinct !DILexicalBlock(scope: !16668, file: !2369, line: 291, column: 2)
!16684 = !DILocation(line: 292, column: 19, scope: !16682)
!16685 = !DILocation(line: 0, scope: !16179, inlinedAt: !16686)
!16686 = distinct !DILocation(line: 291, column: 2, scope: !16683)
!16687 = !DILocation(line: 194, column: 2, scope: !16187, inlinedAt: !16686)
!16688 = !DILocation(line: 194, column: 2, scope: !16188, inlinedAt: !16686)
!16689 = !DILocation(line: 194, column: 2, scope: !16191, inlinedAt: !16686)
!16690 = !DILocation(line: 0, scope: !16193, inlinedAt: !16691)
!16691 = distinct !DILocation(line: 215, column: 2, scope: !16179, inlinedAt: !16686)
!16692 = !DILocation(line: 95, column: 2, scope: !16193, inlinedAt: !16691)
!16693 = !DILocation(line: 292, column: 17, scope: !16682)
!16694 = !DILocation(line: 294, column: 2, scope: !16662)
!16695 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2369, file: !2369, line: 297, type: !3198, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !2032)
!16696 = !DILocation(line: 300, column: 19, scope: !16695)
!16697 = !DILocation(line: 300, column: 9, scope: !16695)
!16698 = !DILocation(line: 300, column: 2, scope: !16695)
!16699 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2369, file: !2369, line: 306, type: !16663, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !2032)
!16700 = !DILocation(line: 308, column: 9, scope: !16699)
!16701 = !DILocation(line: 308, column: 2, scope: !16699)
!16702 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2369, file: !2369, line: 319, type: !6409, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16703)
!16703 = !{!16704, !16705, !16706, !16707}
!16704 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16702, file: !2369, line: 319, type: !118)
!16705 = !DILocalVariable(name: "start_cycles", scope: !16702, file: !2369, line: 328, type: !118)
!16706 = !DILocalVariable(name: "cycles_to_wait", scope: !16702, file: !2369, line: 331, type: !118)
!16707 = !DILocalVariable(name: "current_cycles", scope: !16708, file: !2369, line: 338, type: !118)
!16708 = distinct !DILexicalBlock(scope: !16709, file: !2369, line: 337, column: 11)
!16709 = distinct !DILexicalBlock(scope: !16710, file: !2369, line: 337, column: 2)
!16710 = distinct !DILexicalBlock(scope: !16702, file: !2369, line: 337, column: 2)
!16711 = !DILocation(line: 0, scope: !16702)
!16712 = !DILocation(line: 322, column: 19, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16702, file: !2369, line: 322, column: 6)
!16714 = !DILocation(line: 322, column: 6, scope: !16702)
!16715 = !DILocation(line: 328, column: 26, scope: !16702)
!16716 = !DILocation(line: 333, column: 43, scope: !16702)
!16717 = !DILocation(line: 337, column: 2, scope: !16702)
!16718 = !DILocation(line: 338, column: 29, scope: !16708)
!16719 = !DILocation(line: 0, scope: !16708)
!16720 = !DILocation(line: 341, column: 23, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16708, file: !2369, line: 341, column: 7)
!16722 = !DILocation(line: 341, column: 39, scope: !16721)
!16723 = !DILocation(line: 349, column: 1, scope: !16702)
!16724 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3198, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !2032)
!16725 = !DILocation(line: 1677, column: 9, scope: !16724)
!16726 = !DILocation(line: 1677, column: 2, scope: !16724)
!16727 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3286, file: !3286, line: 24, type: !3198, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !2032)
!16728 = !DILocation(line: 26, column: 9, scope: !16727)
!16729 = !DILocation(line: 26, column: 2, scope: !16727)
!16730 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2369, file: !2369, line: 364, type: !16731, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2339, retainedNodes: !16733)
!16731 = !DISubroutineType(types: !16732)
!16732 = !{!120, !16068}
!16733 = !{!16734, !16735}
!16734 = !DILocalVariable(name: "timeout", arg: 1, scope: !16730, file: !2369, line: 364, type: !16068)
!16735 = !DILocalVariable(name: "dt", scope: !16730, file: !2369, line: 366, type: !114)
!16736 = !DILocation(line: 0, scope: !16730)
!16737 = !DILocation(line: 368, column: 6, scope: !16730)
!16738 = !DILocation(line: 371, column: 10, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16740, file: !2369, line: 370, column: 47)
!16740 = distinct !DILexicalBlock(scope: !16741, file: !2369, line: 370, column: 13)
!16741 = distinct !DILexicalBlock(scope: !16730, file: !2369, line: 368, column: 6)
!16742 = !DILocation(line: 371, column: 3, scope: !16739)
!16743 = !DILocation(line: 376, column: 58, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !2369, line: 376, column: 7)
!16745 = distinct !DILexicalBlock(scope: !16740, file: !2369, line: 372, column: 9)
!16746 = !DILocation(line: 376, column: 7, scope: !16745)
!16747 = !DILocation(line: 376, column: 43, scope: !16744)
!16748 = !DILocation(line: 377, column: 4, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16744, file: !2369, line: 376, column: 64)
!16750 = !DILocation(line: 379, column: 10, scope: !16745)
!16751 = !DILocation(line: 379, column: 33, scope: !16745)
!16752 = !DILocation(line: 379, column: 31, scope: !16745)
!16753 = !DILocation(line: 379, column: 3, scope: !16745)
!16754 = !DILocation(line: 0, scope: !16741)
!16755 = !DILocation(line: 381, column: 1, scope: !16730)
!16756 = distinct !DISubprogram(name: "boot_banner", scope: !16757, file: !16757, line: 26, type: !2960, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !2032)
!16757 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16758 = !DILocation(line: 34, column: 2, scope: !16756)
!16759 = !DILocation(line: 36, column: 1, scope: !16756)
