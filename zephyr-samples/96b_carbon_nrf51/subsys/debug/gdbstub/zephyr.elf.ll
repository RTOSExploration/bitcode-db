; ModuleID = 'build/96b_carbon_nrf51/gdbstub/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv6m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread.16 = type { %struct._thread_base.9, %struct._callee_saved.10, i8*, %union.anon.5, i32, %struct.k_heap.14*, %struct._thread_arch.15 }
%struct._thread_base.9 = type { %union.anon.5, %union.anon.5*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.8 }
%union.anon.2.7 = type { i16 }
%struct._timeout.8 = type { %struct._dnode.4, void (%struct._timeout.8*)*, i64 }
%struct._dnode.4 = type { %union.anon.0.2, %union.anon.0.2 }
%union.anon.0.2 = type { %struct._dnode.4* }
%struct._callee_saved.10 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.5 = type { %struct._dnode.4 }
%struct.k_heap.14 = type { %struct.sys_heap.12, %union.anon.5, %struct.k_spinlock.13 }
%struct.sys_heap.12 = type { %struct.z_heap.11*, i8*, i32 }
%struct.z_heap.11 = type opaque
%struct.k_spinlock.13 = type {}
%struct._thread_arch.15 = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread.16*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.pm_state_info = type { i32, i8, i32, i32 }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._snode = type { %struct._snode* }
%struct.anon.3 = type { i32, i8, i32 }
%struct.init_entry = type { i32 (%struct.device.397*)*, %struct.device.397* }
%struct.device.397 = type { i8*, i8*, i8*, %struct.device_state.444*, i8*, i16* }
%struct.device_state.444 = type { i8, i8 }
%struct.onoff_client = type { %struct._snode, %struct.sys_notify }
%struct.sys_notify = type { %union.method, i32, i32 }
%union.method = type { %struct.k_poll_signal* }
%struct.k_poll_signal = type { %struct._dnode.70, i32, i32 }
%struct._dnode.70 = type { %union.anon.0.68, %union.anon.0.68 }
%union.anon.0.68 = type { %struct._dnode.70* }
%struct.nrf_clock_control_config = type { [2 x %struct.nrf_clock_control_sub_config] }
%struct.nrf_clock_control_sub_config = type { void ()*, void ()* }
%struct.clock_control_driver_api = type { i32 (%struct.device.397*, i8*)*, i32 (%struct.device.397*, i8*)*, i32 (%struct.device.397*, i8*, void (%struct.device.397*, i8*, i8*)*, i8*)*, i32 (%struct.device.397*, i8*, i32*)*, i32 (%struct.device.397*, i8*)*, i32 (%struct.device.397*, i8*, i8*)*, i32 (%struct.device.397*, i8*, i8*)* }
%struct.nrf_clock_control_data = type { [2 x %struct.onoff_manager], [2 x %struct.nrf_clock_control_sub_data] }
%struct.onoff_manager = type { %struct._slist, %struct._slist, %struct.onoff_transitions*, %struct.k_spinlock.13, i32, i16, i16 }
%struct.onoff_transitions = type { void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* }
%struct.nrf_clock_control_sub_data = type { void (%struct.device.397*, i8*, i8*)*, i8*, i32 }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.gpio_nrfx_cfg = type { %struct.z_spinlock_key, %struct.NRF_GPIO_Type*, i32, i8 }
%struct.z_spinlock_key = type { i32 }
%struct.NRF_GPIO_Type = type { [321 x i32], i32, i32, i32, i32, i32, i32, i32, [120 x i32], [32 x i32] }
%struct.gpio_driver_api = type { i32 (%struct.device.397*, i8, i32)*, i32 (%struct.device.397*, i32*)*, i32 (%struct.device.397*, i32, i32)*, i32 (%struct.device.397*, i32)*, i32 (%struct.device.397*, i32)*, i32 (%struct.device.397*, i32)*, i32 (%struct.device.397*, i8, i32, i32)*, i32 (%struct.device.397*, %struct.gpio_callback*, i1)*, i32 (%struct.device.397*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device.397*, %struct.gpio_callback*, i32)*, i32 }
%struct.gpio_nrfx_data = type { %struct.z_spinlock_key, %struct._slist }
%struct.uart_nrfx_config = type { %struct.pinctrl_dev_config* }
%struct.pinctrl_dev_config = type { i32, %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device.397*, i8*)*, void (%struct.device.397*, i8)*, i32 (%struct.device.397*)*, i32 (%struct.device.397*, %struct.uart_config*)*, i32 (%struct.device.397*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_nrfx_data = type { %struct.uart_config }
%struct.z_nrf_rtc_timer_chan_data = type { void (i32, i64, i8*)*, i8*, i64 }
%struct.nrfx_clock_cb_t = type { void (i32)*, i8 }
%struct.gpiote_control_block_t = type { [1 x %struct.nrfx_gpiote_handler_config_t], %struct.nrfx_gpiote_handler_config_t, [32 x i16], i32, i32, [1 x i32], i32 }
%struct.nrfx_gpiote_handler_config_t = type { void (i32, i32, i8*)*, i8* }
%struct.nrfx_gpiote_output_config_t = type { i32, i32, i32 }
%struct.k_thread.132 = type { %struct._thread_base.125, %struct._callee_saved.10, i8*, %union.anon.121, i32, %struct.k_heap.130*, %struct._thread_arch.15 }
%struct._thread_base.125 = type { %union.anon.121, %union.anon.121*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.124 }
%struct._timeout.124 = type { %struct._dnode.120, void (%struct._timeout.124*)*, i64 }
%struct._dnode.120 = type { %union.anon.0.118, %union.anon.0.118 }
%union.anon.0.118 = type { %struct._dnode.120* }
%union.anon.121 = type { %struct._dnode.120 }
%struct.k_heap.130 = type { %struct.sys_heap.128, %union.anon.121, %struct.k_spinlock.13 }
%struct.sys_heap.128 = type { %struct.z_heap.127*, i8*, i32 }
%struct.z_heap.127 = type opaque
%struct._static_thread_data.724 = type { %struct.k_thread.132*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], i32, %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread.132*, %struct.k_thread.132*, i32, i8, %struct.k_spinlock.13 }
%struct._ready_q = type { %struct.k_thread.132*, %struct._dnode.120 }
%struct.__va_list = type { i8* }
%struct.buf_out_context = type { i32, [0 x i8] }
%struct.str_context = type { i8*, i32, i32 }
%struct.k_thread.60 = type { %struct._thread_base.53, %struct._callee_saved.10, i8*, %union.anon.49, i32, %struct.k_heap.58*, %struct._thread_arch.15 }
%struct._thread_base.53 = type { %union.anon.49, %union.anon.49*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.52 }
%struct._timeout.52 = type { %struct._dnode.48, void (%struct._timeout.52*)*, i64 }
%struct._dnode.48 = type { %union.anon.0.46, %union.anon.0.46 }
%union.anon.0.46 = type { %struct._dnode.48* }
%union.anon.49 = type { %struct._dnode.48 }
%struct.k_heap.58 = type { %struct.sys_heap.56, %union.anon.49, %struct.k_spinlock.13 }
%struct.sys_heap.56 = type { %struct.z_heap.55*, i8*, i32 }
%struct.z_heap.55 = type opaque
%struct.onoff_monitor = type { %struct._snode, void (%struct.onoff_manager*, %struct.onoff_monitor*, i32, i32)* }
%struct.onoff_sync_service = type { %struct.k_spinlock.13, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_spinlock_key, %struct.z_spinlock_key }
%struct.pm_notifier = type { %struct._snode, void (i32)*, void (i32)* }
%struct.pm_policy_latency_request = type { %struct._snode, i32 }
%struct.pm_policy_latency_subscription = type { %struct._snode, void (i32)* }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_spinlock_key, %struct.z_spinlock_key, %struct.z_spinlock_key, %struct.z_spinlock_key, %struct.z_spinlock_key, %struct.z_spinlock_key, %struct.z_spinlock_key, i32 }
%struct.NVIC_Type = type { [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [64 x i32], [8 x i32] }
%struct.SCB_Type = type { i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32 }
%struct.NRF_POWER_Type = type { [30 x i32], i32, i32, [34 x i32], i32, [126 x i32], i32, i32, [61 x i32], i32, [9 x i32], i32, [53 x i32], i32, [3 x i32], i32, [2 x i32], i32, i32, i32, [7 x i32], i32, [3 x i32], i32, [8 x i32], i32, [291 x i32], i32 }
%struct.k_sem.475 = type { %struct._wait_q_t.460, i32, i32 }
%struct._wait_q_t.460 = type { %struct._dnode.70 }
%struct.NRF_CLOCK_Type = type { i32, i32, i32, i32, i32, i32, i32, [57 x i32], i32, i32, i32, i32, i32, [124 x i32], i32, i32, [63 x i32], i32, i32, i32, i32, i32, i32, [62 x i32], i32, [7 x i32], i32, [5 x i32], i32 }
%struct.k_fifo = type { %struct.k_queue.500 }
%struct.k_queue.500 = type { %struct._sflist.499, %struct.k_spinlock.13, %struct._wait_q_t.485 }
%struct._sflist.499 = type { %struct.z_spinlock_key*, %struct.z_spinlock_key* }
%struct._wait_q_t.485 = type { %struct._dnode.483 }
%struct._dnode.483 = type { %union.anon.0.481, %union.anon.0.481 }
%union.anon.0.481 = type { %struct._dnode.483* }
%struct.nrfx_gpiote_trigger_config_t = type { i32, i8* }
%struct.nrfx_gpiote_task_config_t = type { i8, i32, i32 }
%struct.NRF_UART_Type = type { i32, i32, i32, i32, [3 x i32], i32, [56 x i32], i32, i32, i32, [4 x i32], i32, i32, i32, [7 x i32], i32, [46 x i32], i32, [64 x i32], i32, i32, [93 x i32], i32, [31 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [17 x i32], i32, [675 x i32], i32 }
%struct.NRF_RTC_Type = type { i32, i32, i32, i32, [60 x i32], i32, i32, [14 x i32], [4 x i32], [109 x i32], i32, i32, [13 x i32], i32, i32, i32, [110 x i32], i32, i32, [13 x i32], [4 x i32], [683 x i32], i32 }
%struct.NRF_SPIS_Type = type { [9 x i32], i32, i32, [54 x i32], i32, [2 x i32], i32, [5 x i32], i32, [53 x i32], i32, [64 x i32], i32, i32, [61 x i32], i32, [15 x i32], i32, [47 x i32], i32, i32, i32, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [24 x i32], i32, [654 x i32], i32 }
%struct.NRF_TWI_Type = type { i32, i32, i32, [2 x i32], i32, i32, i32, i32, [56 x i32], i32, i32, [4 x i32], i32, i32, i32, [4 x i32], i32, [3 x i32], i32, [45 x i32], i32, [64 x i32], i32, i32, [110 x i32], i32, [14 x i32], i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, [24 x i32], i32, [668 x i32], i32 }
%struct.NRF_MPU_Type = type { [330 x i32], i32, i32, [52 x i32], i32, i32, i32, i32 }
%struct.NRF_GPIOTE_Type = type { [4 x i32], [60 x i32], [4 x i32], [27 x i32], i32, [97 x i32], i32, i32, [129 x i32], [4 x i32], [695 x i32], i32 }
%struct.nrfx_gpiote_out_config_t = type { i32, i32, i8 }
%struct.k_thread.772 = type { %struct._thread_base.766, %struct._callee_saved.10, i8*, %struct._wait_q_t.460, i32, %struct.k_heap.770*, %struct._thread_arch.15 }
%struct._thread_base.766 = type { %struct._wait_q_t.460, %struct._wait_q_t.460*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.765 }
%struct._timeout.765 = type { %struct._dnode.70, void (%struct._timeout.765*)*, i64 }
%struct.k_heap.770 = type { %struct.sys_heap.769, %struct._wait_q_t.460, %struct.k_spinlock.13 }
%struct.sys_heap.769 = type { %struct.z_heap.768*, i8*, i32 }
%struct.z_heap.768 = type opaque
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode.120], i32 }

@_irq_vector_table = dso_local global [26 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local global [26 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* inttoptr (i32 24157 to i8*), void (i8*)* inttoptr (i32 49689 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 28037 to i8*), void (i8*)* inttoptr (i32 49689 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* inttoptr (i32 21053 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [14 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread to i8*), i8* bitcast (%struct.init_entry* @__init_nordicsemi_nrf51_init to i8*), i8* bitcast (%struct.device.397* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct._isr_list* @clk_init.__isr_nrfx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device.397* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct._isr_list* @gpio_nrfx_init.__isr_nrfx_isr_irq_0 to i8*), i8* bitcast (%struct.device.397* @__device_dts_ord_49 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_49 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct._isr_list* @sys_clock_driver_init.__isr_rtc_nrf_isr_irq_0 to i8*), i8* bitcast (i32* @SystemCoreClock to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@_k_thread_obj_thread = dso_local global %struct.k_thread.16 zeroinitializer, align 8, !dbg !25
@_k_thread_stack_thread = dso_local global [512 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 8, !dbg !262
@.str.1 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@_k_thread_data_thread = dso_local global %struct._static_thread_data { %struct.k_thread.16* @_k_thread_obj_thread, %struct.z_thread_stack_element* getelementptr inbounds ([512 x %struct.z_thread_stack_element], [512 x %struct.z_thread_stack_element]* @_k_thread_stack_thread, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* @thread_entry, i8* null, i8* null, i8* null, i32 7, i32 4, i32 0, void ()* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread", align 4, !dbg !105
@thread = dso_local constant %struct.k_thread.16* @_k_thread_obj_thread, align 4, !dbg !258
@.str.2 = private unnamed_addr constant [25 x i8] c"Hello from user thread!\0A\00", align 1
@_char_out = dso_local global i32 (i32)* @arch_printk_char_out, align 4, !dbg !267
@.str.9 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@z_post_ops_required = internal global [1 x i32] zeroinitializer, align 4, !dbg !276
@z_cpus_pm_state = internal global [1 x %struct.pm_state_info] zeroinitializer, align 4, !dbg !321
@pm_forced_state_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !315
@z_cpus_pm_forced_state = internal global [1 x %struct.pm_state_info] zeroinitializer, align 4, !dbg !332
@pm_notifier_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !319
@pm_notifiers = internal global %struct._slist zeroinitializer, align 4, !dbg !334
@max_latency_ticks = internal global i32 -1, align 4, !dbg !346
@substate_lock_t = internal global [0 x %struct.anon.3] zeroinitializer, align 4, !dbg !388
@latency_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !374
@latency_reqs = internal global %struct._slist zeroinitializer, align 4, !dbg !378
@latency_subs = internal global %struct._slist zeroinitializer, align 4, !dbg !386
@max_latency_us = internal global i32 -1, align 4, !dbg !398
@cpus_states = internal global [1 x %struct.pm_state_info*] [%struct.pm_state_info* getelementptr inbounds ([0 x %struct.pm_state_info], [0 x %struct.pm_state_info]* @pmstates_DT_N_S_cpus_S_cpu_0, i32 0, i32 0)], align 4, !dbg !400
@states_per_cpu = internal constant [1 x i8] zeroinitializer, align 1, !dbg !418
@pmstates_DT_N_S_cpus_S_cpu_0 = internal constant [0 x %struct.pm_state_info] zeroinitializer, align 4, !dbg !407
@_stdout_hook = internal global i32 (i32)* @_stdout_hook_default, align 4, !dbg !424
@__init_nordicsemi_nrf51_init = internal constant %struct.init_entry { i32 (%struct.device.397*)* @nordicsemi_nrf51_init, %struct.device.397* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !434
@nrfx_coredep_delay_us.delay_machine_code = internal constant [3 x i16] [i16 14340, i16 -9987, i16 18288], align 16, !dbg !528
@__device_dts_ord_23 = dso_local constant %struct.device.397 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i8* bitcast (%struct.nrf_clock_control_config* @config to i8*), i8* bitcast (%struct.clock_control_driver_api* @clock_control_api to i8*), %struct.device_state.444* @__devstate_dts_ord_23, i8* bitcast (%struct.nrf_clock_control_data* @data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_130_", align 4, !dbg !545
@hfclk_users = internal global i32 0, align 4, !dbg !828
@z_nrf_clock_control_lf_on.on = internal global i32 0, align 4, !dbg !743
@z_nrf_clock_control_lf_on.cli = internal global %struct.onoff_client zeroinitializer, align 4, !dbg !749
@__devicehdl_dts_ord_23 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.55 = private unnamed_addr constant [15 x i8] c"clock@40000000\00", align 1
@config = internal constant %struct.nrf_clock_control_config { [2 x %struct.nrf_clock_control_sub_config] [%struct.nrf_clock_control_sub_config { void ()* @generic_hfclk_start, void ()* @generic_hfclk_stop }, %struct.nrf_clock_control_sub_config { void ()* @lfclk_start, void ()* @lfclk_stop }] }, align 4, !dbg !889
@clock_control_api = internal constant %struct.clock_control_driver_api { i32 (%struct.device.397*, i8*)* @api_blocking_start, i32 (%struct.device.397*, i8*)* @api_stop, i32 (%struct.device.397*, i8*, void (%struct.device.397*, i8*, i8*)*, i8*)* @api_start, i32 (%struct.device.397*, i8*, i32*)* null, i32 (%struct.device.397*, i8*)* @get_status, i32 (%struct.device.397*, i8*, i8*)* null, i32 (%struct.device.397*, i8*, i8*)* null }, align 4, !dbg !901
@__devstate_dts_ord_23 = internal global %struct.device_state.444 zeroinitializer, section ".z_devstate", align 1, !dbg !879
@data = internal global %struct.nrf_clock_control_data zeroinitializer, align 4, !dbg !830
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device.397*)* @clk_init, %struct.device.397* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !802
@clk_init.transitions = internal constant %struct.onoff_transitions { void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* @onoff_start, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* @onoff_stop, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* null }, align 4, !dbg !939
@clk_init.__isr_nrfx_isr_irq_0 = internal global %struct._isr_list { i32 0, i32 0, i8* bitcast (void (i8*)* @nrfx_isr to i8*), i8* bitcast (void ()* @nrfx_power_clock_irq_handler to i8*) }, section ".intList", align 4, !dbg !942
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device.397*)* @uart_console_init, %struct.device.397* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !961
@__devicehdl_dts_ord_54 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !955
@.str.59 = private unnamed_addr constant [14 x i8] c"gpio@50000000\00", align 1
@gpio_nrfx_p0_cfg = internal constant %struct.gpio_nrfx_cfg { %struct.z_spinlock_key { i32 -1 }, %struct.NRF_GPIO_Type* inttoptr (i32 1342177280 to %struct.NRF_GPIO_Type*), i32 0, i8 0 }, align 4, !dbg !1027
@gpio_nrfx_drv_api_funcs = internal constant %struct.gpio_driver_api { i32 (%struct.device.397*, i8, i32)* @gpio_nrfx_pin_configure, i32 (%struct.device.397*, i32*)* @gpio_nrfx_port_get_raw, i32 (%struct.device.397*, i32, i32)* @gpio_nrfx_port_set_masked_raw, i32 (%struct.device.397*, i32)* @gpio_nrfx_port_set_bits_raw, i32 (%struct.device.397*, i32)* @gpio_nrfx_port_clear_bits_raw, i32 (%struct.device.397*, i32)* @gpio_nrfx_port_toggle_bits, i32 (%struct.device.397*, i8, i32, i32)* @gpio_nrfx_pin_interrupt_configure, i32 (%struct.device.397*, %struct.gpio_callback*, i1)* @gpio_nrfx_manage_callback, i32 (%struct.device.397*)* null }, align 4, !dbg !1212
@__devstate_dts_ord_54 = internal global %struct.device_state.444 zeroinitializer, section ".z_devstate", align 1, !dbg !1210
@gpio_nrfx_p0_data = internal global %struct.gpio_nrfx_data zeroinitializer, align 4, !dbg !1198
@__device_dts_ord_54 = dso_local constant %struct.device.397 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i32 0, i32 0), i8* bitcast (%struct.gpio_nrfx_cfg* @gpio_nrfx_p0_cfg to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_nrfx_drv_api_funcs to i8*), %struct.device_state.444* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_nrfx_data* @gpio_nrfx_p0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1186
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device.397*)* @gpio_nrfx_init, %struct.device.397* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1188
@gpio_nrfx_init.__isr_nrfx_isr_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (i8*)* @nrfx_isr to i8*), i8* bitcast (void ()* @nrfx_gpiote_irq_handler to i8*) }, section ".intList", align 4, !dbg !1214
@__devicehdl_dts_ord_49 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !959
@.str.74 = private unnamed_addr constant [14 x i8] c"uart@40002000\00", align 1
@uart_nrfx_uart0_config = internal constant %struct.uart_nrfx_config { %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_49 }, align 4, !dbg !1230
@uart_nrfx_uart_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device.397*, i8*)* @uart_nrfx_poll_in, void (%struct.device.397*, i8)* @uart_nrfx_poll_out, i32 (%struct.device.397*)* @uart_nrfx_err_check, i32 (%struct.device.397*, %struct.uart_config*)* @uart_nrfx_configure, i32 (%struct.device.397*, %struct.uart_config*)* @uart_nrfx_config_get }, align 4, !dbg !1386
@__devstate_dts_ord_49 = internal global %struct.device_state.444 zeroinitializer, section ".z_devstate", align 1, !dbg !1358
@uart_nrfx_uart0_data = internal global %struct.uart_nrfx_data { %struct.uart_config { i32 115200, i8 0, i8 1, i8 3, i8 0 } }, align 4, !dbg !1456
@__device_dts_ord_49 = dso_local constant %struct.device.397 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0), i8* bitcast (%struct.uart_nrfx_config* @uart_nrfx_uart0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_nrfx_uart_driver_api to i8*), %struct.device_state.444* @__devstate_dts_ord_49, i8* bitcast (%struct.uart_nrfx_data* @uart_nrfx_uart0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_49, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1349
@__init___device_dts_ord_49 = internal constant %struct.init_entry { i32 (%struct.device.397*)* @uart_nrfx_init, %struct.device.397* @__device_dts_ord_49 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1351
@__pinctrl_dev_config__device_dts_ord_49 = internal constant %struct.pinctrl_dev_config { i32 1073750016, %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_49, i32 0, i32 0), i8 1 }, align 4, !dbg !1360
@__pinctrl_states__device_dts_ord_49 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_49, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1380
@__pinctrl_state_pins_0__device_dts_ord_49 = internal constant [2 x i32] [i32 29, i32 65547], align 4, !dbg !1383
@uart_nrfx_poll_out.poll_out_lock = internal global i32 0, align 4, !dbg !1453
@cc_data = internal global [1 x %struct.z_nrf_rtc_timer_chan_data] zeroinitializer, align 8, !dbg !1466
@force_isr_mask = internal global i32 0, align 4, !dbg !1594
@overflow_cnt = internal global i32 0, align 4, !dbg !1583
@anchor = internal global i64 0, align 8, !dbg !1585
@alloc_mask = internal global i32 0, align 4, !dbg !1592
@sys_busy = internal global i8 0, align 1, !dbg !1590
@last_count = internal global i64 0, align 8, !dbg !1588
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device.397*)* @sys_clock_driver_init, %struct.device.397* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1557
@int_mask = internal global i32 0, align 4, !dbg !1596
@sys_clock_driver_init.__isr_rtc_nrf_isr_irq_0 = internal global %struct._isr_list { i32 17, i32 0, i8* bitcast (void (i8*)* @rtc_nrf_isr to i8*), i8* null }, section ".intList", align 4, !dbg !1602
@SystemCoreClock = dso_local global i32 16000000, align 4, !dbg !1621
@.str.101 = private unnamed_addr constant [13 x i8] c"NRFX_SUCCESS\00", align 1
@.str.1.102 = private unnamed_addr constant [20 x i8] c"NRFX_ERROR_INTERNAL\00", align 1
@.str.2.103 = private unnamed_addr constant [18 x i8] c"NRFX_ERROR_NO_MEM\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"NRFX_ERROR_NOT_SUPPORTED\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"NRFX_ERROR_INVALID_PARAM\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"NRFX_ERROR_INVALID_STATE\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"NRFX_ERROR_INVALID_LENGTH\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"NRFX_ERROR_TIMEOUT\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"NRFX_ERROR_FORBIDDEN\00", align 1
@.str.9.104 = private unnamed_addr constant [16 x i8] c"NRFX_ERROR_NULL\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"NRFX_ERROR_INVALID_ADDR\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"NRFX_ERROR_BUSY\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"NRFX_ERROR_ALREADY_INITIALIZED\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"NRFX_ERROR_DRV_TWI_ERR_OVERRUN\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"NRFX_ERROR_DRV_TWI_ERR_ANACK\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"NRFX_ERROR_DRV_TWI_ERR_DNACK\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@m_clock_cb = internal global %struct.nrfx_clock_cb_t zeroinitializer, align 4, !dbg !1646
@m_cb = internal global %struct.gpiote_control_block_t { [1 x %struct.nrfx_gpiote_handler_config_t] zeroinitializer, %struct.nrfx_gpiote_handler_config_t zeroinitializer, [32 x i16] zeroinitializer, i32 15, i32 0, [1 x i32] zeroinitializer, i32 0 }, align 4, !dbg !1698
@__const.nrfx_gpiote_out_prealloc_init.config = private unnamed_addr constant %struct.nrfx_gpiote_output_config_t { i32 0, i32 1, i32 0 }, align 4
@__const.nrf_gpio_ports_read.gpio_regs = private unnamed_addr constant [1 x %struct.NRF_GPIO_Type*] [%struct.NRF_GPIO_Type* inttoptr (i32 1342177280 to %struct.NRF_GPIO_Type*)], align 4
@__device_start = external dso_local constant [0 x %struct.device.397], align 4
@__device_end = external dso_local constant [0 x %struct.device.397], align 4
@_k_neg_eagain = dso_local constant i32 -11, align 4, !dbg !1824
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1831
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2020
@z_main_thread = dso_local global %struct.k_thread.132 zeroinitializer, align 8, !dbg !2028
@z_idle_stacks = internal global [1 x [256 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2035
@z_sys_init_run_level.levels = internal global [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2040
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.178 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal global [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.184, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.185, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.186, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.188, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.181, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.189, i32 0, i32 0)], align 4, !dbg !2060
@.str.183 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.184 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.185 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.186 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.187 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.188 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.181 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.189 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2166
@.str.8.182 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data.724], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data.724], align 4
@lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2171
@sched_spinlock = dso_local global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2194
@slice_ticks = internal global i32 0, align 4, !dbg !2305
@slice_max_prio = internal global i32 0, align 4, !dbg !2308
@pending_current = internal global %struct.k_thread.132* null, align 4, !dbg !2310
@z_sys_post_kernel = dso_local global i8 0, align 1, !dbg !2033
@z_idle_threads = dso_local global [1 x %struct.k_thread.132] zeroinitializer, align 8, !dbg !2030
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@timeout_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2312
@curr_tick = internal global i64 0, align 8, !dbg !2342
@timeout_list = internal global %struct._dnode.120 { %union.anon.0.118 { %struct._dnode.120* @timeout_list }, %union.anon.0.118 { %struct._dnode.120* @timeout_list } }, align 4, !dbg !2347
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1903
@announce_remaining = internal global i32 0, align 4, !dbg !2345
@lock.267 = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2351
@.str.282 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @_OffsetAbsSyms() #1 !dbg !2968 {
  call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #9, !dbg !2970, !srcloc !2971
  call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #9, !dbg !2972, !srcloc !2973
  call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #9, !dbg !2974, !srcloc !2975
  call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #9, !dbg !2976, !srcloc !2977
  call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #9, !dbg !2978, !srcloc !2979
  call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #9, !dbg !2980, !srcloc !2981
  call void asm sideeffect ".globl\09___kernel_t_idle_OFFSET\0A\09.equ\09___kernel_t_idle_OFFSET,${0:B}\0A\09.type\09___kernel_t_idle_OFFSET,%object", "n"(i32 -25) #9, !dbg !2982, !srcloc !2983
  call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #9, !dbg !2984, !srcloc !2985
  call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #9, !dbg !2986, !srcloc !2987
  call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #9, !dbg !2988, !srcloc !2989
  call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #9, !dbg !2990, !srcloc !2991
  call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #9, !dbg !2992, !srcloc !2993
  call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #9, !dbg !2994, !srcloc !2995
  call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #9, !dbg !2996, !srcloc !2997
  call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #9, !dbg !2998, !srcloc !2999
  call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #9, !dbg !3000, !srcloc !3001
  call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #9, !dbg !3002, !srcloc !3003
  call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #9, !dbg !3004, !srcloc !3005
  call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #9, !dbg !3006, !srcloc !3007
  call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3008, !srcloc !3009
  call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #9, !dbg !3010, !srcloc !3011
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #9, !dbg !3012, !srcloc !3013
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #9, !dbg !3014, !srcloc !3015
  call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #9, !dbg !3016, !srcloc !3017
  call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #9, !dbg !3018, !srcloc !3019
  call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #9, !dbg !3020, !srcloc !3023
  call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #9, !dbg !3024, !srcloc !3025
  call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3026, !srcloc !3027
  call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3028, !srcloc !3029
  call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3030, !srcloc !3031
  call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3032, !srcloc !3033
  call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #9, !dbg !3034, !srcloc !3035
  call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #9, !dbg !3036, !srcloc !3037
  call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #9, !dbg !3038, !srcloc !3039
  call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #9, !dbg !3040, !srcloc !3041
  call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3042, !srcloc !3043
  call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3044, !srcloc !3045
  call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3046, !srcloc !3047
  call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3048, !srcloc !3049
  call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3050, !srcloc !3051
  call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3052, !srcloc !3053
  call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #9, !dbg !3054, !srcloc !3055
  call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #9, !dbg !3056, !srcloc !3057
  call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #9, !dbg !3058, !srcloc !3059
  call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #9, !dbg !3060, !srcloc !3061
  call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #9, !dbg !3062, !srcloc !3063
  call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #9, !dbg !3064, !srcloc !3065
  call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3066, !srcloc !3067
  ret void, !dbg !3068
}

; Function Attrs: noinline nounwind optnone
define internal void @thread_entry(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !3071 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3072, metadata !DIExpression()), !dbg !3073
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3074, metadata !DIExpression()), !dbg !3075
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3076, metadata !DIExpression()), !dbg !3077
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0)) #10, !dbg !3078
  ret void, !dbg !3079
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optnone
define dso_local void @main() #1 !dbg !3080 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3081, metadata !DIExpression()), !dbg !3082
  %2 = call i32 @test() #10, !dbg !3083
  store i32 %2, i32* %1, align 4, !dbg !3084
  %3 = load i32, i32* %1, align 4, !dbg !3085
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 noundef %3) #10, !dbg !3086
  ret void, !dbg !3087
}

; Function Attrs: noinline nounwind optnone
define internal i32 @test() #1 !dbg !3088 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3091, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3093, metadata !DIExpression()), !dbg !3094
  store i32 10, i32* %1, align 4, !dbg !3095
  %3 = load i32, i32* %1, align 4, !dbg !3096
  %4 = mul nsw i32 %3, 2, !dbg !3097
  store i32 %4, i32* %2, align 4, !dbg !3098
  %5 = load i32, i32* %1, align 4, !dbg !3099
  %6 = load i32, i32* %2, align 4, !dbg !3100
  %7 = add nsw i32 %5, %6, !dbg !3101
  ret i32 %7, !dbg !3102
}

; Function Attrs: noinline nounwind optnone
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3103 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3104, metadata !DIExpression()), !dbg !3105
  %3 = load i32, i32* %2, align 4, !dbg !3106
  ret i32 0, !dbg !3107
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) #1 !dbg !3108 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !3111, metadata !DIExpression()), !dbg !3112
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !3113
  store i32 (i32)* %3, i32 (i32)** @_char_out, align 4, !dbg !3114
  ret void, !dbg !3115
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @__printk_get_hook() #1 !dbg !3116 {
  %1 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3119
  %2 = bitcast i32 (i32)* %1 to i8*, !dbg !3119
  ret i8* %2, !dbg !3120
}

; Function Attrs: noinline nounwind optnone
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) #1 !dbg !3121 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context, align 4
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0
  %7 = bitcast i8** %6 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %7, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3131, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3133, metadata !DIExpression()), !dbg !3134
  %8 = call zeroext i1 @k_is_user_context() #10, !dbg !3135
  br i1 %8, label %9, label %22, !dbg !3137

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.buf_out_context* %5, metadata !3138, metadata !DIExpression()), !dbg !3145
  %10 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !3145
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !3145
  %11 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !3146
  %12 = load i8*, i8** %4, align 4, !dbg !3147
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3148
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !3148
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !3148
  %16 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @buf_char_out to i32 (...)*), i8* noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !3148
  %17 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %5, i32 0, i32 0, !dbg !3149
  %18 = load i32, i32* %17, align 4, !dbg !3149
  %19 = icmp ne i32 %18, 0, !dbg !3151
  br i1 %19, label %20, label %21, !dbg !3152

20:                                               ; preds = %9
  call void @buf_flush(%struct.buf_out_context* noundef %5) #10, !dbg !3153
  br label %21, !dbg !3155

21:                                               ; preds = %20, %9
  br label %28, !dbg !3156

22:                                               ; preds = %2
  %23 = load i8*, i8** %4, align 4, !dbg !3157
  %24 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3159
  %25 = bitcast i8** %24 to [1 x i32]*, !dbg !3159
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !3159
  %27 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %23, [1 x i32] %26) #10, !dbg !3159
  br label %28

28:                                               ; preds = %22, %21
  ret void, !dbg !3160
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_user_context() #1 !dbg !3161 {
  ret i1 false, !dbg !3165
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #3

; Function Attrs: noinline nounwind optnone
define internal i32 @buf_char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !3166 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3169, metadata !DIExpression()), !dbg !3170
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3171, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %5, metadata !3173, metadata !DIExpression()), !dbg !3175
  %6 = load i8*, i8** %4, align 4, !dbg !3176
  %7 = bitcast i8* %6 to %struct.buf_out_context*, !dbg !3176
  store %struct.buf_out_context* %7, %struct.buf_out_context** %5, align 4, !dbg !3175
  %8 = load i32, i32* %3, align 4, !dbg !3177
  %9 = trunc i32 %8 to i8, !dbg !3177
  %10 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3178
  %11 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %10, i32 0, i32 1, !dbg !3179
  %12 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3180
  %13 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %12, i32 0, i32 0, !dbg !3181
  %14 = load i32, i32* %13, align 4, !dbg !3182
  %15 = add i32 %14, 1, !dbg !3182
  store i32 %15, i32* %13, align 4, !dbg !3182
  %16 = getelementptr inbounds [0 x i8], [0 x i8]* %11, i32 0, i32 %14, !dbg !3178
  store i8 %9, i8* %16, align 1, !dbg !3183
  %17 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3184
  %18 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %17, i32 0, i32 0, !dbg !3186
  %19 = load i32, i32* %18, align 4, !dbg !3186
  %20 = icmp eq i32 %19, 0, !dbg !3187
  br i1 %20, label %21, label %23, !dbg !3188

21:                                               ; preds = %2
  %22 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3189
  call void @buf_flush(%struct.buf_out_context* noundef %22) #10, !dbg !3191
  br label %23, !dbg !3192

23:                                               ; preds = %21, %2
  %24 = load i32, i32* %3, align 4, !dbg !3193
  ret i32 %24, !dbg !3194
}

; Function Attrs: noinline nounwind optnone
define internal i32 @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !3195 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %10 = bitcast i8** %9 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %10, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !3203, metadata !DIExpression()), !dbg !3204
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3205, metadata !DIExpression()), !dbg !3206
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3207, metadata !DIExpression()), !dbg !3208
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3209, metadata !DIExpression()), !dbg !3210
  %11 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !3211
  %12 = load i8*, i8** %7, align 4, !dbg !3212
  %13 = load i8*, i8** %8, align 4, !dbg !3213
  %14 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !3214
  %15 = bitcast i8** %14 to [1 x i32]*, !dbg !3214
  %16 = load [1 x i32], [1 x i32]* %15, align 4, !dbg !3214
  %17 = call i32 @z_cbvprintf_impl(i32 (...)* noundef %11, i8* noundef %12, i8* noundef %13, [1 x i32] %16, i32 noundef 0) #10, !dbg !3214
  ret i32 %17, !dbg !3215
}

; Function Attrs: noinline nounwind optnone
define internal void @buf_flush(%struct.buf_out_context* noundef %0) #1 !dbg !3216 {
  %2 = alloca %struct.buf_out_context*, align 4
  store %struct.buf_out_context* %0, %struct.buf_out_context** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %2, metadata !3219, metadata !DIExpression()), !dbg !3220
  %3 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3221
  %4 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %3, i32 0, i32 1, !dbg !3222
  %5 = getelementptr inbounds [0 x i8], [0 x i8]* %4, i32 0, i32 0, !dbg !3221
  %6 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3223
  %7 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %6, i32 0, i32 0, !dbg !3224
  %8 = load i32, i32* %7, align 4, !dbg !3224
  call void @k_str_out(i8* noundef %5, i32 noundef %8) #10, !dbg !3225
  %9 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3226
  %10 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %9, i32 0, i32 0, !dbg !3227
  store i32 0, i32* %10, align 4, !dbg !3228
  ret void, !dbg !3229
}

; Function Attrs: noinline nounwind optnone
define internal i32 @char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !3230 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3231, metadata !DIExpression()), !dbg !3232
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3233, metadata !DIExpression()), !dbg !3234
  %5 = load i8*, i8** %4, align 4, !dbg !3235
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3236
  %7 = load i32, i32* %3, align 4, !dbg !3237
  %8 = call i32 %6(i32 noundef %7) #10, !dbg !3236
  ret i32 %8, !dbg !3238
}

; Function Attrs: noinline nounwind optnone
define internal void @k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !3239 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3243, metadata !DIExpression()), !dbg !3244
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3245, metadata !DIExpression()), !dbg !3246
  br label %5, !dbg !3247

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3248, !srcloc !3250
  br label %6, !dbg !3248

6:                                                ; preds = %5
  %7 = load i8*, i8** %3, align 4, !dbg !3251
  %8 = load i32, i32* %4, align 4, !dbg !3252
  call void @z_impl_k_str_out(i8* noundef %7, i32 noundef %8) #10, !dbg !3253
  ret void, !dbg !3254
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !3255 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3256, metadata !DIExpression()), !dbg !3257
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3258, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3260, metadata !DIExpression()), !dbg !3261
  store i32 0, i32* %5, align 4, !dbg !3262
  br label %6, !dbg !3264

6:                                                ; preds = %18, %2
  %7 = load i32, i32* %5, align 4, !dbg !3265
  %8 = load i32, i32* %4, align 4, !dbg !3267
  %9 = icmp ult i32 %7, %8, !dbg !3268
  br i1 %9, label %10, label %21, !dbg !3269

10:                                               ; preds = %6
  %11 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3270
  %12 = load i8*, i8** %3, align 4, !dbg !3272
  %13 = load i32, i32* %5, align 4, !dbg !3273
  %14 = getelementptr inbounds i8, i8* %12, i32 %13, !dbg !3272
  %15 = load i8, i8* %14, align 1, !dbg !3272
  %16 = zext i8 %15 to i32, !dbg !3272
  %17 = call i32 %11(i32 noundef %16) #10, !dbg !3270
  br label %18, !dbg !3274

18:                                               ; preds = %10
  %19 = load i32, i32* %5, align 4, !dbg !3275
  %20 = add i32 %19, 1, !dbg !3275
  store i32 %20, i32* %5, align 4, !dbg !3275
  br label %6, !dbg !3276, !llvm.loop !3277

21:                                               ; preds = %6
  ret void, !dbg !3279
}

; Function Attrs: noinline nounwind optnone
define dso_local void @printk(i8* noundef %0, ...) #1 !dbg !3280 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.__va_list, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3283, metadata !DIExpression()), !dbg !3284
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3285, metadata !DIExpression()), !dbg !3286
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !3287
  call void @llvm.va_start(i8* %4), !dbg !3287
  %5 = load i8*, i8** %2, align 4, !dbg !3288
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3289
  %7 = bitcast i8** %6 to [1 x i32]*, !dbg !3289
  %8 = load [1 x i32], [1 x i32]* %7, align 4, !dbg !3289
  call void @vprintk(i8* noundef %5, [1 x i32] %8) #10, !dbg !3289
  %9 = bitcast %struct.__va_list* %3 to i8*, !dbg !3290
  call void @llvm.va_end(i8* %9), !dbg !3290
  ret void, !dbg !3291
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #4

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #4

; Function Attrs: noinline nounwind optnone
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) #1 !dbg !3292 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3295, metadata !DIExpression()), !dbg !3296
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3297, metadata !DIExpression()), !dbg !3298
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3299, metadata !DIExpression()), !dbg !3300
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !3301, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3303, metadata !DIExpression()), !dbg !3304
  %9 = bitcast %struct.__va_list* %7 to i8*, !dbg !3305
  call void @llvm.va_start(i8* %9), !dbg !3305
  %10 = load i8*, i8** %4, align 4, !dbg !3306
  %11 = load i32, i32* %5, align 4, !dbg !3307
  %12 = load i8*, i8** %6, align 4, !dbg !3308
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0, !dbg !3309
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !3309
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !3309
  %16 = call i32 @vsnprintk(i8* noundef %10, i32 noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !3309
  store i32 %16, i32* %8, align 4, !dbg !3310
  %17 = bitcast %struct.__va_list* %7 to i8*, !dbg !3311
  call void @llvm.va_end(i8* %17), !dbg !3311
  %18 = load i32, i32* %8, align 4, !dbg !3312
  ret i32 %18, !dbg !3313
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !3314 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca %struct.str_context, align 4
  %10 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %11 = bitcast i8** %10 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %11, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3317, metadata !DIExpression()), !dbg !3318
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3319, metadata !DIExpression()), !dbg !3320
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3321, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3323, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.declare(metadata %struct.str_context* %9, metadata !3325, metadata !DIExpression()), !dbg !3331
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 0, !dbg !3332
  %13 = load i8*, i8** %6, align 4, !dbg !3333
  store i8* %13, i8** %12, align 4, !dbg !3332
  %14 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3332
  %15 = load i32, i32* %7, align 4, !dbg !3334
  store i32 %15, i32* %14, align 4, !dbg !3332
  %16 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3332
  store i32 0, i32* %16, align 4, !dbg !3332
  %17 = bitcast %struct.str_context* %9 to i8*, !dbg !3335
  %18 = load i8*, i8** %8, align 4, !dbg !3336
  %19 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !3337
  %20 = bitcast i8** %19 to [1 x i32]*, !dbg !3337
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !3337
  %22 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef %17, i8* noundef %18, [1 x i32] %21) #10, !dbg !3337
  %23 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3338
  %24 = load i32, i32* %23, align 4, !dbg !3338
  %25 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3340
  %26 = load i32, i32* %25, align 4, !dbg !3340
  %27 = icmp slt i32 %24, %26, !dbg !3341
  br i1 %27, label %28, label %33, !dbg !3342

28:                                               ; preds = %4
  %29 = load i8*, i8** %6, align 4, !dbg !3343
  %30 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3345
  %31 = load i32, i32* %30, align 4, !dbg !3345
  %32 = getelementptr inbounds i8, i8* %29, i32 %31, !dbg !3343
  store i8 0, i8* %32, align 1, !dbg !3346
  br label %33, !dbg !3347

33:                                               ; preds = %28, %4
  %34 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3348
  %35 = load i32, i32* %34, align 4, !dbg !3348
  ret i32 %35, !dbg !3349
}

; Function Attrs: noinline nounwind optnone
define internal i32 @str_out(i32 noundef %0, %struct.str_context* noundef %1) #1 !dbg !3350 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.str_context*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3354, metadata !DIExpression()), !dbg !3355
  store %struct.str_context* %1, %struct.str_context** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.str_context** %5, metadata !3356, metadata !DIExpression()), !dbg !3357
  %6 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3358
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %6, i32 0, i32 0, !dbg !3360
  %8 = load i8*, i8** %7, align 4, !dbg !3360
  %9 = icmp eq i8* %8, null, !dbg !3361
  br i1 %9, label %18, label %10, !dbg !3362

10:                                               ; preds = %2
  %11 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3363
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %11, i32 0, i32 2, !dbg !3364
  %13 = load i32, i32* %12, align 4, !dbg !3364
  %14 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3365
  %15 = getelementptr inbounds %struct.str_context, %struct.str_context* %14, i32 0, i32 1, !dbg !3366
  %16 = load i32, i32* %15, align 4, !dbg !3366
  %17 = icmp sge i32 %13, %16, !dbg !3367
  br i1 %17, label %18, label %24, !dbg !3368

18:                                               ; preds = %10, %2
  %19 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3369
  %20 = getelementptr inbounds %struct.str_context, %struct.str_context* %19, i32 0, i32 2, !dbg !3371
  %21 = load i32, i32* %20, align 4, !dbg !3372
  %22 = add nsw i32 %21, 1, !dbg !3372
  store i32 %22, i32* %20, align 4, !dbg !3372
  %23 = load i32, i32* %4, align 4, !dbg !3373
  store i32 %23, i32* %3, align 4, !dbg !3374
  br label %55, !dbg !3374

24:                                               ; preds = %10
  %25 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3375
  %26 = getelementptr inbounds %struct.str_context, %struct.str_context* %25, i32 0, i32 2, !dbg !3377
  %27 = load i32, i32* %26, align 4, !dbg !3377
  %28 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3378
  %29 = getelementptr inbounds %struct.str_context, %struct.str_context* %28, i32 0, i32 1, !dbg !3379
  %30 = load i32, i32* %29, align 4, !dbg !3379
  %31 = sub nsw i32 %30, 1, !dbg !3380
  %32 = icmp eq i32 %27, %31, !dbg !3381
  br i1 %32, label %33, label %42, !dbg !3382

33:                                               ; preds = %24
  %34 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3383
  %35 = getelementptr inbounds %struct.str_context, %struct.str_context* %34, i32 0, i32 0, !dbg !3385
  %36 = load i8*, i8** %35, align 4, !dbg !3385
  %37 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3386
  %38 = getelementptr inbounds %struct.str_context, %struct.str_context* %37, i32 0, i32 2, !dbg !3387
  %39 = load i32, i32* %38, align 4, !dbg !3388
  %40 = add nsw i32 %39, 1, !dbg !3388
  store i32 %40, i32* %38, align 4, !dbg !3388
  %41 = getelementptr inbounds i8, i8* %36, i32 %39, !dbg !3383
  store i8 0, i8* %41, align 1, !dbg !3389
  br label %53, !dbg !3390

42:                                               ; preds = %24
  %43 = load i32, i32* %4, align 4, !dbg !3391
  %44 = trunc i32 %43 to i8, !dbg !3391
  %45 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3393
  %46 = getelementptr inbounds %struct.str_context, %struct.str_context* %45, i32 0, i32 0, !dbg !3394
  %47 = load i8*, i8** %46, align 4, !dbg !3394
  %48 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3395
  %49 = getelementptr inbounds %struct.str_context, %struct.str_context* %48, i32 0, i32 2, !dbg !3396
  %50 = load i32, i32* %49, align 4, !dbg !3397
  %51 = add nsw i32 %50, 1, !dbg !3397
  store i32 %51, i32* %49, align 4, !dbg !3397
  %52 = getelementptr inbounds i8, i8* %47, i32 %50, !dbg !3393
  store i8 %44, i8* %52, align 1, !dbg !3398
  br label %53

53:                                               ; preds = %42, %33
  %54 = load i32, i32* %4, align 4, !dbg !3399
  store i32 %54, i32* %3, align 4, !dbg !3400
  br label %55, !dbg !3400

55:                                               ; preds = %53, %18
  %56 = load i32, i32* %3, align 4, !dbg !3401
  ret i32 %56, !dbg !3401
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3402 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !3406, metadata !DIExpression()), !dbg !3407
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3408, metadata !DIExpression()), !dbg !3409
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3410, metadata !DIExpression()), !dbg !3411
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3412, metadata !DIExpression()), !dbg !3413
  %9 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !3414
  %10 = load i8*, i8** %6, align 4, !dbg !3415
  %11 = load i8*, i8** %7, align 4, !dbg !3416
  %12 = load i8*, i8** %8, align 4, !dbg !3417
  call void %9(i8* noundef %10, i8* noundef %11, i8* noundef %12) #10, !dbg !3414
  %13 = call %struct.k_thread.60* @k_current_get() #11, !dbg !3418
  call void @k_thread_abort(%struct.k_thread.60* noundef %13) #10, !dbg !3419
  unreachable, !dbg !3420
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get() #6 !dbg !3421 {
  %1 = call %struct.k_thread.60* @z_current_get() #11, !dbg !3519
  ret %struct.k_thread.60* %1, !dbg !3520
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort(%struct.k_thread.60* noundef %0) #1 !dbg !3521 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !3524, metadata !DIExpression()), !dbg !3525
  br label %3, !dbg !3526

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3527, !srcloc !3529
  br label %4, !dbg !3527

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !3530
  call void bitcast (void (%struct.k_thread.132*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !3531
  ret void, !dbg !3532
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get() #6 !dbg !3533 {
  br label %1, !dbg !3534

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3535, !srcloc !3537
  br label %2, !dbg !3535

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.132* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !3538
  ret %struct.k_thread.60* %3, !dbg !3539
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_manager_init(%struct.onoff_manager* noundef %0, %struct.onoff_transitions* noundef %1) #1 !dbg !3540 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.onoff_manager*, align 4
  %5 = alloca %struct.onoff_transitions*, align 4
  %6 = alloca %struct.onoff_manager, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %4, metadata !3543, metadata !DIExpression()), !dbg !3544
  store %struct.onoff_transitions* %1, %struct.onoff_transitions** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_transitions** %5, metadata !3545, metadata !DIExpression()), !dbg !3546
  %7 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !3547
  %8 = icmp eq %struct.onoff_manager* %7, null, !dbg !3549
  br i1 %8, label %22, label %9, !dbg !3550

9:                                                ; preds = %2
  %10 = load %struct.onoff_transitions*, %struct.onoff_transitions** %5, align 4, !dbg !3551
  %11 = icmp eq %struct.onoff_transitions* %10, null, !dbg !3552
  br i1 %11, label %22, label %12, !dbg !3553

12:                                               ; preds = %9
  %13 = load %struct.onoff_transitions*, %struct.onoff_transitions** %5, align 4, !dbg !3554
  %14 = getelementptr inbounds %struct.onoff_transitions, %struct.onoff_transitions* %13, i32 0, i32 0, !dbg !3555
  %15 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %14, align 4, !dbg !3555
  %16 = icmp eq void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %15, null, !dbg !3556
  br i1 %16, label %22, label %17, !dbg !3557

17:                                               ; preds = %12
  %18 = load %struct.onoff_transitions*, %struct.onoff_transitions** %5, align 4, !dbg !3558
  %19 = getelementptr inbounds %struct.onoff_transitions, %struct.onoff_transitions* %18, i32 0, i32 1, !dbg !3559
  %20 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %19, align 4, !dbg !3559
  %21 = icmp eq void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %20, null, !dbg !3560
  br i1 %21, label %22, label %23, !dbg !3561

22:                                               ; preds = %17, %12, %9, %2
  store i32 -22, i32* %3, align 4, !dbg !3562
  br label %30, !dbg !3562

23:                                               ; preds = %17
  %24 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !3564
  %25 = bitcast %struct.onoff_manager* %6 to i8*, !dbg !3565
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 28, i1 false), !dbg !3565
  %26 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %6, i32 0, i32 2, !dbg !3566
  %27 = load %struct.onoff_transitions*, %struct.onoff_transitions** %5, align 4, !dbg !3566
  store %struct.onoff_transitions* %27, %struct.onoff_transitions** %26, align 4, !dbg !3566
  %28 = bitcast %struct.onoff_manager* %24 to i8*, !dbg !3565
  %29 = bitcast %struct.onoff_manager* %6 to i8*, !dbg !3565
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %28, i8* align 4 %29, i32 28, i1 false), !dbg !3565
  store i32 0, i32* %3, align 4, !dbg !3567
  br label %30, !dbg !3567

30:                                               ; preds = %23, %22
  %31 = load i32, i32* %3, align 4, !dbg !3568
  ret i32 %31, !dbg !3568
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #7

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_request(%struct.onoff_manager* noundef %0, %struct.onoff_client* noundef %1) #1 !dbg !3569 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.onoff_manager*, align 4
  %11 = alloca %struct.onoff_client*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca %struct.z_spinlock_key, align 4
  %17 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %10, metadata !3572, metadata !DIExpression()), !dbg !3573
  store %struct.onoff_client* %1, %struct.onoff_client** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %11, metadata !3574, metadata !DIExpression()), !dbg !3575
  call void @llvm.dbg.declare(metadata i8* %12, metadata !3576, metadata !DIExpression()), !dbg !3577
  store i8 0, i8* %12, align 1, !dbg !3577
  call void @llvm.dbg.declare(metadata i8* %13, metadata !3578, metadata !DIExpression()), !dbg !3579
  store i8 0, i8* %13, align 1, !dbg !3579
  call void @llvm.dbg.declare(metadata i8* %14, metadata !3580, metadata !DIExpression()), !dbg !3581
  store i8 0, i8* %14, align 1, !dbg !3581
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3582, metadata !DIExpression()), !dbg !3583
  %18 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3584
  %19 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !3585
  %20 = call i32 @validate_args(%struct.onoff_manager* noundef %18, %struct.onoff_client* noundef %19) #10, !dbg !3586
  store i32 %20, i32* %15, align 4, !dbg !3583
  %21 = load i32, i32* %15, align 4, !dbg !3587
  %22 = icmp slt i32 %21, 0, !dbg !3589
  br i1 %22, label %23, label %25, !dbg !3590

23:                                               ; preds = %2
  %24 = load i32, i32* %15, align 4, !dbg !3591
  store i32 %24, i32* %9, align 4, !dbg !3593
  br label %119, !dbg !3593

25:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %16, metadata !3594, metadata !DIExpression()), !dbg !3599
  %26 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3600
  %27 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %26, i32 0, i32 3, !dbg !3601
  store %struct.k_spinlock.13* %27, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !3602, metadata !DIExpression()) #9, !dbg !3607
  %28 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !3609
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !3610, metadata !DIExpression()) #9, !dbg !3611
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3612, metadata !DIExpression()) #9, !dbg !3617
  %29 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !3619, !srcloc !3620
  store i32 %29, i32* %4, align 4, !dbg !3619
  %30 = load i32, i32* %4, align 4, !dbg !3621
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !3622
  store i32 %30, i32* %31, align 4, !dbg !3623
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !3624
  %33 = load i32, i32* %32, align 4, !dbg !3624
  %34 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !3625
  store i32 %33, i32* %34, align 4, !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %17, metadata !3626, metadata !DIExpression()), !dbg !3627
  %35 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3628
  %36 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %35, i32 0, i32 5, !dbg !3629
  %37 = load i16, i16* %36, align 4, !dbg !3629
  %38 = zext i16 %37 to i32, !dbg !3628
  %39 = and i32 %38, 7, !dbg !3630
  store i32 %39, i32* %17, align 4, !dbg !3627
  %40 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3631
  %41 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %40, i32 0, i32 6, !dbg !3633
  %42 = load i16, i16* %41, align 2, !dbg !3633
  %43 = zext i16 %42 to i32, !dbg !3631
  %44 = icmp eq i32 %43, 65535, !dbg !3634
  br i1 %44, label %45, label %46, !dbg !3635

45:                                               ; preds = %25
  store i32 -11, i32* %15, align 4, !dbg !3636
  br label %78, !dbg !3638

46:                                               ; preds = %25
  %47 = load i32, i32* %17, align 4, !dbg !3639
  store i32 %47, i32* %15, align 4, !dbg !3640
  %48 = load i32, i32* %17, align 4, !dbg !3641
  %49 = icmp eq i32 %48, 2, !dbg !3643
  br i1 %49, label %50, label %57, !dbg !3644

50:                                               ; preds = %46
  store i8 1, i8* %14, align 1, !dbg !3645
  %51 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3647
  %52 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %51, i32 0, i32 6, !dbg !3648
  %53 = load i16, i16* %52, align 2, !dbg !3649
  %54 = zext i16 %53 to i32, !dbg !3649
  %55 = add i32 %54, 1, !dbg !3649
  %56 = trunc i32 %55 to i16, !dbg !3649
  store i16 %56, i16* %52, align 2, !dbg !3649
  br label %77, !dbg !3650

57:                                               ; preds = %46
  %58 = load i32, i32* %17, align 4, !dbg !3651
  %59 = icmp eq i32 %58, 0, !dbg !3653
  br i1 %59, label %66, label %60, !dbg !3654

60:                                               ; preds = %57
  %61 = load i32, i32* %17, align 4, !dbg !3655
  %62 = icmp eq i32 %61, 4, !dbg !3656
  br i1 %62, label %66, label %63, !dbg !3657

63:                                               ; preds = %60
  %64 = load i32, i32* %17, align 4, !dbg !3658
  %65 = icmp eq i32 %64, 6, !dbg !3659
  br i1 %65, label %66, label %70, !dbg !3660

66:                                               ; preds = %63, %60, %57
  %67 = load i32, i32* %17, align 4, !dbg !3661
  %68 = icmp eq i32 %67, 0, !dbg !3663
  %69 = zext i1 %68 to i8, !dbg !3664
  store i8 %69, i8* %13, align 1, !dbg !3664
  store i8 1, i8* %12, align 1, !dbg !3665
  br label %76, !dbg !3666

70:                                               ; preds = %63
  %71 = load i32, i32* %17, align 4, !dbg !3667
  %72 = icmp eq i32 %71, 5, !dbg !3669
  br i1 %72, label %73, label %74, !dbg !3670

73:                                               ; preds = %70
  store i32 -134, i32* %15, align 4, !dbg !3671
  br label %75, !dbg !3673

74:                                               ; preds = %70
  store i32 -5, i32* %15, align 4, !dbg !3674
  br label %75

75:                                               ; preds = %74, %73
  br label %76

76:                                               ; preds = %75, %66
  br label %77

77:                                               ; preds = %76, %50
  br label %78, !dbg !3676

78:                                               ; preds = %77, %45
  call void @llvm.dbg.label(metadata !3677), !dbg !3678
  %79 = load i8, i8* %12, align 1, !dbg !3679
  %80 = trunc i8 %79 to i1, !dbg !3679
  br i1 %80, label %81, label %86, !dbg !3681

81:                                               ; preds = %78
  %82 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3682
  %83 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %82, i32 0, i32 0, !dbg !3684
  %84 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !3685
  %85 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %84, i32 0, i32 0, !dbg !3686
  call void @sys_slist_append(%struct._slist* noundef %83, %struct._snode* noundef %85) #10, !dbg !3687
  br label %86, !dbg !3688

86:                                               ; preds = %81, %78
  %87 = load i8, i8* %13, align 1, !dbg !3689
  %88 = trunc i8 %87 to i1, !dbg !3689
  br i1 %88, label %89, label %94, !dbg !3691

89:                                               ; preds = %86
  %90 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3692
  %91 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !3694
  %92 = bitcast i32* %91 to [1 x i32]*, !dbg !3694
  %93 = load [1 x i32], [1 x i32]* %92, align 4, !dbg !3694
  call void @process_event(%struct.onoff_manager* noundef %90, i32 noundef 2, [1 x i32] %93) #10, !dbg !3694
  br label %117, !dbg !3695

94:                                               ; preds = %86
  %95 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3696
  %96 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %95, i32 0, i32 3, !dbg !3698
  %97 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !3699
  %98 = bitcast i32* %97 to [1 x i32]*, !dbg !3699
  %99 = load [1 x i32], [1 x i32]* %98, align 4, !dbg !3699
  %100 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %101 = bitcast i32* %100 to [1 x i32]*
  store [1 x i32] %99, [1 x i32]* %101, align 4
  store %struct.k_spinlock.13* %96, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !3700, metadata !DIExpression()) #9, !dbg !3704
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !3706, metadata !DIExpression()) #9, !dbg !3707
  %102 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !3708
  %103 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !3709
  %104 = load i32, i32* %103, align 4, !dbg !3709
  store i32 %104, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3710, metadata !DIExpression()) #9, !dbg !3714
  %105 = load i32, i32* %3, align 4, !dbg !3716
  %106 = icmp ne i32 %105, 0, !dbg !3718
  br i1 %106, label %107, label %108, !dbg !3719

107:                                              ; preds = %94
  br label %109, !dbg !3720

108:                                              ; preds = %94
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !3722, !srcloc !3723
  br label %109, !dbg !3724

109:                                              ; preds = %107, %108
  %110 = load i8, i8* %14, align 1, !dbg !3725
  %111 = trunc i8 %110 to i1, !dbg !3725
  br i1 %111, label %112, label %116, !dbg !3727

112:                                              ; preds = %109
  %113 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !3728
  %114 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !3730
  %115 = load i32, i32* %17, align 4, !dbg !3731
  call void @notify_one(%struct.onoff_manager* noundef %113, %struct.onoff_client* noundef %114, i32 noundef %115, i32 noundef 0) #10, !dbg !3732
  br label %116, !dbg !3733

116:                                              ; preds = %112, %109
  br label %117

117:                                              ; preds = %116, %89
  %118 = load i32, i32* %15, align 4, !dbg !3734
  store i32 %118, i32* %9, align 4, !dbg !3735
  br label %119, !dbg !3735

119:                                              ; preds = %117, %23
  %120 = load i32, i32* %9, align 4, !dbg !3736
  ret i32 %120, !dbg !3736
}

; Function Attrs: noinline nounwind optnone
define internal i32 @validate_args(%struct.onoff_manager* noundef %0, %struct.onoff_client* noundef %1) #1 !dbg !3737 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.onoff_manager*, align 4
  %5 = alloca %struct.onoff_client*, align 4
  %6 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %4, metadata !3742, metadata !DIExpression()), !dbg !3743
  store %struct.onoff_client* %1, %struct.onoff_client** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %5, metadata !3744, metadata !DIExpression()), !dbg !3745
  %7 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !3746
  %8 = icmp eq %struct.onoff_manager* %7, null, !dbg !3748
  br i1 %8, label %12, label %9, !dbg !3749

9:                                                ; preds = %2
  %10 = load %struct.onoff_client*, %struct.onoff_client** %5, align 4, !dbg !3750
  %11 = icmp eq %struct.onoff_client* %10, null, !dbg !3751
  br i1 %11, label %12, label %13, !dbg !3752

12:                                               ; preds = %9, %2
  store i32 -22, i32* %3, align 4, !dbg !3753
  br label %29, !dbg !3753

13:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3755, metadata !DIExpression()), !dbg !3756
  %14 = load %struct.onoff_client*, %struct.onoff_client** %5, align 4, !dbg !3757
  %15 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %14, i32 0, i32 1, !dbg !3758
  %16 = call i32 @sys_notify_validate(%struct.sys_notify* noundef %15) #10, !dbg !3759
  store i32 %16, i32* %6, align 4, !dbg !3756
  %17 = load i32, i32* %6, align 4, !dbg !3760
  %18 = icmp eq i32 %17, 0, !dbg !3762
  br i1 %18, label %19, label %27, !dbg !3763

19:                                               ; preds = %13
  %20 = load %struct.onoff_client*, %struct.onoff_client** %5, align 4, !dbg !3764
  %21 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %20, i32 0, i32 1, !dbg !3765
  %22 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %21, i32 0, i32 1, !dbg !3766
  %23 = load volatile i32, i32* %22, align 4, !dbg !3766
  %24 = and i32 %23, -4, !dbg !3767
  %25 = icmp ne i32 %24, 0, !dbg !3768
  br i1 %25, label %26, label %27, !dbg !3769

26:                                               ; preds = %19
  store i32 -22, i32* %6, align 4, !dbg !3770
  br label %27, !dbg !3772

27:                                               ; preds = %26, %19, %13
  %28 = load i32, i32* %6, align 4, !dbg !3773
  store i32 %28, i32* %3, align 4, !dbg !3774
  br label %29, !dbg !3774

29:                                               ; preds = %27, %12
  %30 = load i32, i32* %3, align 4, !dbg !3775
  ret i32 %30, !dbg !3775
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_append(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !3776 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !3780, metadata !DIExpression()), !dbg !3781
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !3782, metadata !DIExpression()), !dbg !3781
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !3781
  call void @z_snode_next_set(%struct._snode* noundef %5, %struct._snode* noundef null) #10, !dbg !3781
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !3783
  %7 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %6) #10, !dbg !3783
  %8 = icmp eq %struct._snode* %7, null, !dbg !3783
  br i1 %8, label %9, label %14, !dbg !3781

9:                                                ; preds = %2
  %10 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !3785
  %11 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !3785
  call void @z_slist_tail_set(%struct._slist* noundef %10, %struct._snode* noundef %11) #10, !dbg !3785
  %12 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !3785
  %13 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !3785
  call void @z_slist_head_set(%struct._slist* noundef %12, %struct._snode* noundef %13) #10, !dbg !3785
  br label %20, !dbg !3785

14:                                               ; preds = %2
  %15 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !3787
  %16 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %15) #10, !dbg !3787
  %17 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !3787
  call void @z_snode_next_set(%struct._snode* noundef %16, %struct._snode* noundef %17) #10, !dbg !3787
  %18 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !3787
  %19 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !3787
  call void @z_slist_tail_set(%struct._slist* noundef %18, %struct._snode* noundef %19) #10, !dbg !3787
  br label %20

20:                                               ; preds = %14, %9
  ret void, !dbg !3781
}

; Function Attrs: noinline nounwind optnone
define internal void @process_event(%struct.onoff_manager* noundef %0, i32 noundef %1, [1 x i32] %2) #1 !dbg !3789 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  %14 = alloca %struct.onoff_manager*, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct._slist, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8, align 1
  %20 = alloca void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, align 4
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca %struct.z_spinlock_key, align 4
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0
  %25 = bitcast i32* %24 to [1 x i32]*
  store [1 x i32] %2, [1 x i32]* %25, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %14, metadata !3792, metadata !DIExpression()), !dbg !3793
  store i32 %1, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3794, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !3796, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.declare(metadata %struct._slist* %16, metadata !3798, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.declare(metadata i32* %17, metadata !3800, metadata !DIExpression()), !dbg !3801
  %26 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3802
  %27 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %26, i32 0, i32 5, !dbg !3803
  %28 = load i16, i16* %27, align 4, !dbg !3803
  %29 = zext i16 %28 to i32, !dbg !3802
  %30 = and i32 %29, 7, !dbg !3804
  store i32 %30, i32* %17, align 4, !dbg !3801
  call void @llvm.dbg.declare(metadata i32* %18, metadata !3805, metadata !DIExpression()), !dbg !3806
  store i32 0, i32* %18, align 4, !dbg !3806
  call void @llvm.dbg.declare(metadata i8* %19, metadata !3807, metadata !DIExpression()), !dbg !3808
  %31 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3809
  %32 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %31, i32 0, i32 5, !dbg !3810
  %33 = load i16, i16* %32, align 4, !dbg !3810
  %34 = zext i16 %33 to i32, !dbg !3809
  %35 = and i32 %34, 8, !dbg !3811
  %36 = icmp ne i32 %35, 0, !dbg !3812
  %37 = zext i1 %36 to i8, !dbg !3808
  store i8 %37, i8* %19, align 1, !dbg !3808
  %38 = load i8, i8* %19, align 1, !dbg !3813
  %39 = trunc i8 %38 to i1, !dbg !3813
  br i1 %39, label %40, label %58, !dbg !3815

40:                                               ; preds = %3
  %41 = load i32, i32* %15, align 4, !dbg !3816
  %42 = icmp eq i32 %41, 1, !dbg !3819
  br i1 %42, label %43, label %50, !dbg !3820

43:                                               ; preds = %40
  %44 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3821
  %45 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %44, i32 0, i32 5, !dbg !3823
  %46 = load i16, i16* %45, align 4, !dbg !3824
  %47 = zext i16 %46 to i32, !dbg !3824
  %48 = or i32 %47, 16, !dbg !3824
  %49 = trunc i32 %48 to i16, !dbg !3824
  store i16 %49, i16* %45, align 4, !dbg !3824
  br label %57, !dbg !3825

50:                                               ; preds = %40
  %51 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3826
  %52 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %51, i32 0, i32 5, !dbg !3828
  %53 = load i16, i16* %52, align 4, !dbg !3829
  %54 = zext i16 %53 to i32, !dbg !3829
  %55 = or i32 %54, 32, !dbg !3829
  %56 = trunc i32 %55 to i16, !dbg !3829
  store i16 %56, i16* %52, align 4, !dbg !3829
  br label %57

57:                                               ; preds = %50, %43
  br label %238, !dbg !3830

58:                                               ; preds = %3
  call void @sys_slist_init(%struct._slist* noundef %16) #10, !dbg !3831
  br label %59, !dbg !3832

59:                                               ; preds = %234, %58
  call void @llvm.dbg.declare(metadata void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, metadata !3833, metadata !DIExpression()), !dbg !3835
  store void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* null, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, align 4, !dbg !3835
  %60 = load i32, i32* %15, align 4, !dbg !3836
  %61 = icmp eq i32 %60, 2, !dbg !3838
  br i1 %61, label %62, label %65, !dbg !3839

62:                                               ; preds = %59
  %63 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3840
  %64 = call i32 @process_recheck(%struct.onoff_manager* noundef %63) #10, !dbg !3842
  store i32 %64, i32* %15, align 4, !dbg !3843
  br label %65, !dbg !3844

65:                                               ; preds = %62, %59
  %66 = load i32, i32* %15, align 4, !dbg !3845
  %67 = icmp eq i32 %66, 0, !dbg !3847
  br i1 %67, label %68, label %69, !dbg !3848

68:                                               ; preds = %65
  br label %237, !dbg !3849

69:                                               ; preds = %65
  store i32 0, i32* %18, align 4, !dbg !3851
  %70 = load i32, i32* %15, align 4, !dbg !3852
  %71 = icmp eq i32 %70, 1, !dbg !3854
  br i1 %71, label %72, label %78, !dbg !3855

72:                                               ; preds = %69
  %73 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3856
  %74 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %73, i32 0, i32 4, !dbg !3858
  %75 = load i32, i32* %74, align 4, !dbg !3858
  store i32 %75, i32* %18, align 4, !dbg !3859
  %76 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3860
  %77 = load i32, i32* %18, align 4, !dbg !3861
  call void @process_complete(%struct.onoff_manager* noundef %76, %struct._slist* noundef %16, i32 noundef %77) #10, !dbg !3862
  br label %112, !dbg !3863

78:                                               ; preds = %69
  %79 = load i32, i32* %15, align 4, !dbg !3864
  %80 = icmp eq i32 %79, 3, !dbg !3866
  br i1 %80, label %81, label %88, !dbg !3867

81:                                               ; preds = %78
  %82 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3868
  %83 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %82, i32 0, i32 2, !dbg !3870
  %84 = load %struct.onoff_transitions*, %struct.onoff_transitions** %83, align 4, !dbg !3870
  %85 = getelementptr inbounds %struct.onoff_transitions, %struct.onoff_transitions* %84, i32 0, i32 0, !dbg !3871
  %86 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %85, align 4, !dbg !3871
  store void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %86, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, align 4, !dbg !3872
  %87 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3873
  call void @set_state(%struct.onoff_manager* noundef %87, i32 noundef 6) #10, !dbg !3874
  br label %111, !dbg !3875

88:                                               ; preds = %78
  %89 = load i32, i32* %15, align 4, !dbg !3876
  %90 = icmp eq i32 %89, 4, !dbg !3878
  br i1 %90, label %91, label %98, !dbg !3879

91:                                               ; preds = %88
  %92 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3880
  %93 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %92, i32 0, i32 2, !dbg !3882
  %94 = load %struct.onoff_transitions*, %struct.onoff_transitions** %93, align 4, !dbg !3882
  %95 = getelementptr inbounds %struct.onoff_transitions, %struct.onoff_transitions* %94, i32 0, i32 1, !dbg !3883
  %96 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %95, align 4, !dbg !3883
  store void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %96, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, align 4, !dbg !3884
  %97 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3885
  call void @set_state(%struct.onoff_manager* noundef %97, i32 noundef 4) #10, !dbg !3886
  br label %110, !dbg !3887

98:                                               ; preds = %88
  %99 = load i32, i32* %15, align 4, !dbg !3888
  %100 = icmp eq i32 %99, 5, !dbg !3890
  br i1 %100, label %101, label %108, !dbg !3891

101:                                              ; preds = %98
  %102 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3892
  %103 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %102, i32 0, i32 2, !dbg !3894
  %104 = load %struct.onoff_transitions*, %struct.onoff_transitions** %103, align 4, !dbg !3894
  %105 = getelementptr inbounds %struct.onoff_transitions, %struct.onoff_transitions* %104, i32 0, i32 2, !dbg !3895
  %106 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %105, align 4, !dbg !3895
  store void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %106, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, align 4, !dbg !3896
  %107 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3897
  call void @set_state(%struct.onoff_manager* noundef %107, i32 noundef 5) #10, !dbg !3898
  br label %109, !dbg !3899

108:                                              ; preds = %98
  br label %109

109:                                              ; preds = %108, %101
  br label %110

110:                                              ; preds = %109, %91
  br label %111

111:                                              ; preds = %110, %81
  br label %112

112:                                              ; preds = %111, %72
  call void @llvm.dbg.declare(metadata i8* %21, metadata !3900, metadata !DIExpression()), !dbg !3901
  %113 = load i32, i32* %17, align 4, !dbg !3902
  %114 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3903
  %115 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %114, i32 0, i32 5, !dbg !3904
  %116 = load i16, i16* %115, align 4, !dbg !3904
  %117 = zext i16 %116 to i32, !dbg !3903
  %118 = and i32 %117, 7, !dbg !3905
  %119 = icmp ne i32 %113, %118, !dbg !3906
  br i1 %119, label %120, label %125, !dbg !3907

120:                                              ; preds = %112
  %121 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3908
  %122 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %121, i32 0, i32 1, !dbg !3909
  %123 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %122) #10, !dbg !3910
  %124 = xor i1 %123, true, !dbg !3911
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i1 [ false, %112 ], [ %124, %120 ], !dbg !3912
  %127 = zext i1 %126 to i8, !dbg !3901
  store i8 %127, i8* %21, align 1, !dbg !3901
  store i32 0, i32* %15, align 4, !dbg !3913
  %128 = load i8, i8* %21, align 1, !dbg !3914
  %129 = trunc i8 %128 to i1, !dbg !3914
  br i1 %129, label %135, label %130, !dbg !3916

130:                                              ; preds = %125
  %131 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %16) #10, !dbg !3917
  br i1 %131, label %132, label %135, !dbg !3918

132:                                              ; preds = %130
  %133 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, align 4, !dbg !3919
  %134 = icmp ne void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %133, null, !dbg !3920
  br i1 %134, label %135, label %198, !dbg !3921

135:                                              ; preds = %132, %130, %125
  call void @llvm.dbg.declare(metadata i32* %22, metadata !3922, metadata !DIExpression()), !dbg !3924
  %136 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3925
  %137 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %136, i32 0, i32 5, !dbg !3926
  %138 = load i16, i16* %137, align 4, !dbg !3926
  %139 = zext i16 %138 to i32, !dbg !3925
  %140 = or i32 %139, 8, !dbg !3927
  store i32 %140, i32* %22, align 4, !dbg !3924
  %141 = load i32, i32* %22, align 4, !dbg !3928
  %142 = trunc i32 %141 to i16, !dbg !3928
  %143 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3929
  %144 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %143, i32 0, i32 5, !dbg !3930
  store i16 %142, i16* %144, align 4, !dbg !3931
  %145 = load i32, i32* %22, align 4, !dbg !3932
  %146 = and i32 %145, 7, !dbg !3933
  store i32 %146, i32* %17, align 4, !dbg !3934
  %147 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3935
  %148 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %147, i32 0, i32 3, !dbg !3936
  %149 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !3937
  %150 = bitcast i32* %149 to [1 x i32]*, !dbg !3937
  %151 = load [1 x i32], [1 x i32]* %150, align 4, !dbg !3937
  %152 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0
  %153 = bitcast i32* %152 to [1 x i32]*
  store [1 x i32] %151, [1 x i32]* %153, align 4
  store %struct.k_spinlock.13* %148, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !3700, metadata !DIExpression()) #9, !dbg !3938
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !3706, metadata !DIExpression()) #9, !dbg !3940
  %154 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !3941
  %155 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !3942
  %156 = load i32, i32* %155, align 4, !dbg !3942
  store i32 %156, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3710, metadata !DIExpression()) #9, !dbg !3943
  %157 = load i32, i32* %5, align 4, !dbg !3945
  %158 = icmp ne i32 %157, 0, !dbg !3946
  br i1 %158, label %159, label %160, !dbg !3947

159:                                              ; preds = %135
  br label %161, !dbg !3948

160:                                              ; preds = %135
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !3949, !srcloc !3723
  br label %161, !dbg !3950

161:                                              ; preds = %159, %160
  %162 = load i8, i8* %21, align 1, !dbg !3951
  %163 = trunc i8 %162 to i1, !dbg !3951
  br i1 %163, label %164, label %168, !dbg !3953

164:                                              ; preds = %161
  %165 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3954
  %166 = load i32, i32* %17, align 4, !dbg !3956
  %167 = load i32, i32* %18, align 4, !dbg !3957
  call void @notify_monitors(%struct.onoff_manager* noundef %165, i32 noundef %166, i32 noundef %167) #10, !dbg !3958
  br label %168, !dbg !3959

168:                                              ; preds = %164, %161
  %169 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %16) #10, !dbg !3960
  br i1 %169, label %174, label %170, !dbg !3962

170:                                              ; preds = %168
  %171 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3963
  %172 = load i32, i32* %17, align 4, !dbg !3965
  %173 = load i32, i32* %18, align 4, !dbg !3966
  call void @notify_all(%struct.onoff_manager* noundef %171, %struct._slist* noundef %16, i32 noundef %172, i32 noundef %173) #10, !dbg !3967
  br label %174, !dbg !3968

174:                                              ; preds = %170, %168
  %175 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, align 4, !dbg !3969
  %176 = icmp ne void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %175, null, !dbg !3971
  br i1 %176, label %177, label %180, !dbg !3972

177:                                              ; preds = %174
  %178 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %20, align 4, !dbg !3973
  %179 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3975
  call void %178(%struct.onoff_manager* noundef %179, void (%struct.onoff_manager*, i32)* noundef @transition_complete) #10, !dbg !3973
  br label %180, !dbg !3976

180:                                              ; preds = %177, %174
  %181 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3977
  %182 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %181, i32 0, i32 3, !dbg !3978
  store %struct.k_spinlock.13* %182, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !3602, metadata !DIExpression()) #9, !dbg !3979
  %183 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !3981
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !3610, metadata !DIExpression()) #9, !dbg !3982
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3612, metadata !DIExpression()) #9, !dbg !3983
  %184 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !3985, !srcloc !3620
  store i32 %184, i32* %6, align 4, !dbg !3985
  %185 = load i32, i32* %6, align 4, !dbg !3986
  %186 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !3987
  store i32 %185, i32* %186, align 4, !dbg !3988
  %187 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !3989
  %188 = load i32, i32* %187, align 4, !dbg !3989
  %189 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %23, i32 0, i32 0, !dbg !3990
  store i32 %188, i32* %189, align 4, !dbg !3990
  %190 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !3990
  %191 = bitcast %struct.z_spinlock_key* %23 to i8*, !dbg !3990
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %190, i8* align 4 %191, i32 4, i1 false), !dbg !3990
  %192 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3991
  %193 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %192, i32 0, i32 5, !dbg !3992
  %194 = load i16, i16* %193, align 4, !dbg !3993
  %195 = zext i16 %194 to i32, !dbg !3993
  %196 = and i32 %195, -9, !dbg !3993
  %197 = trunc i32 %196 to i16, !dbg !3993
  store i16 %197, i16* %193, align 4, !dbg !3993
  br label %198, !dbg !3994

198:                                              ; preds = %180, %132
  %199 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !3995
  %200 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %199, i32 0, i32 5, !dbg !3997
  %201 = load i16, i16* %200, align 4, !dbg !3997
  %202 = zext i16 %201 to i32, !dbg !3995
  %203 = and i32 %202, 16, !dbg !3998
  %204 = icmp ne i32 %203, 0, !dbg !3999
  br i1 %204, label %205, label %212, !dbg !4000

205:                                              ; preds = %198
  %206 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !4001
  %207 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %206, i32 0, i32 5, !dbg !4003
  %208 = load i16, i16* %207, align 4, !dbg !4004
  %209 = zext i16 %208 to i32, !dbg !4004
  %210 = and i32 %209, -17, !dbg !4004
  %211 = trunc i32 %210 to i16, !dbg !4004
  store i16 %211, i16* %207, align 4, !dbg !4004
  store i32 1, i32* %15, align 4, !dbg !4005
  br label %228, !dbg !4006

212:                                              ; preds = %198
  %213 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !4007
  %214 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %213, i32 0, i32 5, !dbg !4009
  %215 = load i16, i16* %214, align 4, !dbg !4009
  %216 = zext i16 %215 to i32, !dbg !4007
  %217 = and i32 %216, 32, !dbg !4010
  %218 = icmp ne i32 %217, 0, !dbg !4011
  br i1 %218, label %219, label %226, !dbg !4012

219:                                              ; preds = %212
  %220 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !4013
  %221 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %220, i32 0, i32 5, !dbg !4015
  %222 = load i16, i16* %221, align 4, !dbg !4016
  %223 = zext i16 %222 to i32, !dbg !4016
  %224 = and i32 %223, -33, !dbg !4016
  %225 = trunc i32 %224 to i16, !dbg !4016
  store i16 %225, i16* %221, align 4, !dbg !4016
  store i32 2, i32* %15, align 4, !dbg !4017
  br label %227, !dbg !4018

226:                                              ; preds = %212
  br label %227

227:                                              ; preds = %226, %219
  br label %228

228:                                              ; preds = %227, %205
  %229 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !4019
  %230 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %229, i32 0, i32 5, !dbg !4020
  %231 = load i16, i16* %230, align 4, !dbg !4020
  %232 = zext i16 %231 to i32, !dbg !4019
  %233 = and i32 %232, 7, !dbg !4021
  store i32 %233, i32* %17, align 4, !dbg !4022
  br label %234, !dbg !4023

234:                                              ; preds = %228
  %235 = load i32, i32* %15, align 4, !dbg !4024
  %236 = icmp ne i32 %235, 0, !dbg !4025
  br i1 %236, label %59, label %237, !dbg !4023, !llvm.loop !4026

237:                                              ; preds = %234, %68
  br label %238, !dbg !4023

238:                                              ; preds = %237, %57
  call void @llvm.dbg.label(metadata !4028), !dbg !4029
  %239 = load %struct.onoff_manager*, %struct.onoff_manager** %14, align 4, !dbg !4030
  %240 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %239, i32 0, i32 3, !dbg !4031
  %241 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !4032
  %242 = bitcast i32* %241 to [1 x i32]*, !dbg !4032
  %243 = load [1 x i32], [1 x i32]* %242, align 4, !dbg !4032
  %244 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0
  %245 = bitcast i32* %244 to [1 x i32]*
  store [1 x i32] %243, [1 x i32]* %245, align 4
  store %struct.k_spinlock.13* %240, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !3700, metadata !DIExpression()) #9, !dbg !4033
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !3706, metadata !DIExpression()) #9, !dbg !4035
  %246 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !4036
  %247 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !4037
  %248 = load i32, i32* %247, align 4, !dbg !4037
  store i32 %248, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3710, metadata !DIExpression()) #9, !dbg !4038
  %249 = load i32, i32* %4, align 4, !dbg !4040
  %250 = icmp ne i32 %249, 0, !dbg !4041
  br i1 %250, label %251, label %252, !dbg !4042

251:                                              ; preds = %238
  br label %253, !dbg !4043

252:                                              ; preds = %238
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !4044, !srcloc !3723
  br label %253, !dbg !4045

253:                                              ; preds = %251, %252
  ret void, !dbg !4046
}

; Function Attrs: noinline nounwind optnone
define internal void @notify_one(%struct.onoff_manager* noundef %0, %struct.onoff_client* noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !4047 {
  %5 = alloca %struct.onoff_manager*, align 4
  %6 = alloca %struct.onoff_client*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)*, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %5, metadata !4048, metadata !DIExpression()), !dbg !4049
  store %struct.onoff_client* %1, %struct.onoff_client** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %6, metadata !4050, metadata !DIExpression()), !dbg !4051
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4052, metadata !DIExpression()), !dbg !4053
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4054, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.declare(metadata void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)** %9, metadata !4056, metadata !DIExpression()), !dbg !4057
  %10 = load %struct.onoff_client*, %struct.onoff_client** %6, align 4, !dbg !4058
  %11 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %10, i32 0, i32 1, !dbg !4059
  %12 = load i32, i32* %8, align 4, !dbg !4060
  %13 = call void (...)* @sys_notify_finalize(%struct.sys_notify* noundef %11, i32 noundef %12) #10, !dbg !4061
  %14 = bitcast void (...)* %13 to void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)*, !dbg !4062
  store void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)* %14, void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)** %9, align 4, !dbg !4057
  %15 = load void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)*, void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)** %9, align 4, !dbg !4063
  %16 = icmp ne void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)* %15, null, !dbg !4063
  br i1 %16, label %17, label %23, !dbg !4065

17:                                               ; preds = %4
  %18 = load void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)*, void (%struct.onoff_manager*, %struct.onoff_client*, i32, i32)** %9, align 4, !dbg !4066
  %19 = load %struct.onoff_manager*, %struct.onoff_manager** %5, align 4, !dbg !4068
  %20 = load %struct.onoff_client*, %struct.onoff_client** %6, align 4, !dbg !4069
  %21 = load i32, i32* %7, align 4, !dbg !4070
  %22 = load i32, i32* %8, align 4, !dbg !4071
  call void %18(%struct.onoff_manager* noundef %19, %struct.onoff_client* noundef %20, i32 noundef %21, i32 noundef %22) #10, !dbg !4066
  br label %23, !dbg !4072

23:                                               ; preds = %17, %4
  ret void, !dbg !4073
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_init(%struct._slist* noundef %0) #1 !dbg !4074 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !4077, metadata !DIExpression()), !dbg !4078
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4079
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 0, !dbg !4080
  store %struct._snode* null, %struct._snode** %4, align 4, !dbg !4081
  %5 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4082
  %6 = getelementptr inbounds %struct._slist, %struct._slist* %5, i32 0, i32 1, !dbg !4083
  store %struct._snode* null, %struct._snode** %6, align 4, !dbg !4084
  ret void, !dbg !4085
}

; Function Attrs: noinline nounwind optnone
define internal i32 @process_recheck(%struct.onoff_manager* noundef %0) #1 !dbg !4086 {
  %2 = alloca %struct.onoff_manager*, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %2, metadata !4089, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4091, metadata !DIExpression()), !dbg !4092
  store i32 0, i32* %3, align 4, !dbg !4092
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4093, metadata !DIExpression()), !dbg !4094
  %5 = load %struct.onoff_manager*, %struct.onoff_manager** %2, align 4, !dbg !4095
  %6 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %5, i32 0, i32 5, !dbg !4096
  %7 = load i16, i16* %6, align 4, !dbg !4096
  %8 = zext i16 %7 to i32, !dbg !4095
  %9 = and i32 %8, 7, !dbg !4097
  store i32 %9, i32* %4, align 4, !dbg !4094
  %10 = load i32, i32* %4, align 4, !dbg !4098
  %11 = icmp eq i32 %10, 0, !dbg !4100
  br i1 %11, label %12, label %17, !dbg !4101

12:                                               ; preds = %1
  %13 = load %struct.onoff_manager*, %struct.onoff_manager** %2, align 4, !dbg !4102
  %14 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %13, i32 0, i32 0, !dbg !4103
  %15 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %14) #10, !dbg !4104
  br i1 %15, label %17, label %16, !dbg !4105

16:                                               ; preds = %12
  store i32 3, i32* %3, align 4, !dbg !4106
  br label %38, !dbg !4108

17:                                               ; preds = %12, %1
  %18 = load i32, i32* %4, align 4, !dbg !4109
  %19 = icmp eq i32 %18, 2, !dbg !4111
  br i1 %19, label %20, label %27, !dbg !4112

20:                                               ; preds = %17
  %21 = load %struct.onoff_manager*, %struct.onoff_manager** %2, align 4, !dbg !4113
  %22 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %21, i32 0, i32 6, !dbg !4114
  %23 = load i16, i16* %22, align 2, !dbg !4114
  %24 = zext i16 %23 to i32, !dbg !4113
  %25 = icmp eq i32 %24, 0, !dbg !4115
  br i1 %25, label %26, label %27, !dbg !4116

26:                                               ; preds = %20
  store i32 4, i32* %3, align 4, !dbg !4117
  br label %37, !dbg !4119

27:                                               ; preds = %20, %17
  %28 = load i32, i32* %4, align 4, !dbg !4120
  %29 = icmp eq i32 %28, 1, !dbg !4122
  br i1 %29, label %30, label %35, !dbg !4123

30:                                               ; preds = %27
  %31 = load %struct.onoff_manager*, %struct.onoff_manager** %2, align 4, !dbg !4124
  %32 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %31, i32 0, i32 0, !dbg !4125
  %33 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %32) #10, !dbg !4126
  br i1 %33, label %35, label %34, !dbg !4127

34:                                               ; preds = %30
  store i32 5, i32* %3, align 4, !dbg !4128
  br label %36, !dbg !4130

35:                                               ; preds = %30, %27
  br label %36

36:                                               ; preds = %35, %34
  br label %37

37:                                               ; preds = %36, %26
  br label %38

38:                                               ; preds = %37, %16
  %39 = load i32, i32* %3, align 4, !dbg !4131
  ret i32 %39, !dbg !4132
}

; Function Attrs: noinline nounwind optnone
define internal void @process_complete(%struct.onoff_manager* noundef %0, %struct._slist* noundef %1, i32 noundef %2) #1 !dbg !4133 {
  %4 = alloca %struct.onoff_manager*, align 4
  %5 = alloca %struct._slist*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.onoff_client*, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %4, metadata !4136, metadata !DIExpression()), !dbg !4137
  store %struct._slist* %1, %struct._slist** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %5, metadata !4138, metadata !DIExpression()), !dbg !4139
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4140, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4142, metadata !DIExpression()), !dbg !4143
  %9 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4144
  %10 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %9, i32 0, i32 5, !dbg !4145
  %11 = load i16, i16* %10, align 4, !dbg !4145
  %12 = zext i16 %11 to i32, !dbg !4144
  %13 = and i32 %12, 7, !dbg !4146
  store i32 %13, i32* %7, align 4, !dbg !4143
  %14 = load i32, i32* %6, align 4, !dbg !4147
  %15 = icmp slt i32 %14, 0, !dbg !4149
  br i1 %15, label %16, label %25, !dbg !4150

16:                                               ; preds = %3
  %17 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !4151
  %18 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4153
  %19 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %18, i32 0, i32 0, !dbg !4154
  %20 = bitcast %struct._slist* %17 to i8*, !dbg !4154
  %21 = bitcast %struct._slist* %19 to i8*, !dbg !4154
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 8, i1 false), !dbg !4154
  %22 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4155
  %23 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %22, i32 0, i32 0, !dbg !4156
  call void @sys_slist_init(%struct._slist* noundef %23) #10, !dbg !4157
  %24 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4158
  call void @set_state(%struct.onoff_manager* noundef %24, i32 noundef 1) #10, !dbg !4159
  br label %120, !dbg !4160

25:                                               ; preds = %3
  %26 = load i32, i32* %7, align 4, !dbg !4161
  %27 = icmp eq i32 %26, 6, !dbg !4163
  br i1 %27, label %31, label %28, !dbg !4164

28:                                               ; preds = %25
  %29 = load i32, i32* %7, align 4, !dbg !4165
  %30 = icmp eq i32 %29, 5, !dbg !4166
  br i1 %30, label %31, label %101, !dbg !4167

31:                                               ; preds = %28, %25
  %32 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !4168
  %33 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4170
  %34 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %33, i32 0, i32 0, !dbg !4171
  %35 = bitcast %struct._slist* %32 to i8*, !dbg !4171
  %36 = bitcast %struct._slist* %34 to i8*, !dbg !4171
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %35, i8* align 4 %36, i32 8, i1 false), !dbg !4171
  %37 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4172
  %38 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %37, i32 0, i32 0, !dbg !4173
  call void @sys_slist_init(%struct._slist* noundef %38) #10, !dbg !4174
  %39 = load i32, i32* %7, align 4, !dbg !4175
  %40 = icmp eq i32 %39, 6, !dbg !4177
  br i1 %40, label %41, label %87, !dbg !4178

41:                                               ; preds = %31
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %8, metadata !4179, metadata !DIExpression()), !dbg !4181
  %42 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !4182
  %43 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %42) #10, !dbg !4182
  %44 = icmp ne %struct._snode* %43, null, !dbg !4182
  br i1 %44, label %45, label %51, !dbg !4182

45:                                               ; preds = %41
  %46 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !4182
  %47 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %46) #10, !dbg !4182
  %48 = bitcast %struct._snode* %47 to i8*, !dbg !4182
  %49 = getelementptr inbounds i8, i8* %48, i32 0, !dbg !4182
  %50 = bitcast i8* %49 to %struct.onoff_client*, !dbg !4182
  br label %52, !dbg !4182

51:                                               ; preds = %41
  br label %52, !dbg !4182

52:                                               ; preds = %51, %45
  %53 = phi %struct.onoff_client* [ %50, %45 ], [ null, %51 ], !dbg !4182
  store %struct.onoff_client* %53, %struct.onoff_client** %8, align 4, !dbg !4182
  br label %54, !dbg !4182

54:                                               ; preds = %83, %52
  %55 = load %struct.onoff_client*, %struct.onoff_client** %8, align 4, !dbg !4184
  %56 = icmp ne %struct.onoff_client* %55, null, !dbg !4184
  br i1 %56, label %57, label %85, !dbg !4182

57:                                               ; preds = %54
  %58 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4186
  %59 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %58, i32 0, i32 6, !dbg !4188
  %60 = load i16, i16* %59, align 2, !dbg !4189
  %61 = zext i16 %60 to i32, !dbg !4189
  %62 = add i32 %61, 1, !dbg !4189
  %63 = trunc i32 %62 to i16, !dbg !4189
  store i16 %63, i16* %59, align 2, !dbg !4189
  br label %64, !dbg !4190

64:                                               ; preds = %57
  %65 = load %struct.onoff_client*, %struct.onoff_client** %8, align 4, !dbg !4184
  %66 = icmp ne %struct.onoff_client* %65, null, !dbg !4184
  br i1 %66, label %67, label %82, !dbg !4184

67:                                               ; preds = %64
  %68 = load %struct.onoff_client*, %struct.onoff_client** %8, align 4, !dbg !4184
  %69 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %68, i32 0, i32 0, !dbg !4184
  %70 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %69) #10, !dbg !4184
  %71 = icmp ne %struct._snode* %70, null, !dbg !4184
  br i1 %71, label %72, label %79, !dbg !4184

72:                                               ; preds = %67
  %73 = load %struct.onoff_client*, %struct.onoff_client** %8, align 4, !dbg !4184
  %74 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %73, i32 0, i32 0, !dbg !4184
  %75 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %74) #10, !dbg !4184
  %76 = bitcast %struct._snode* %75 to i8*, !dbg !4184
  %77 = getelementptr inbounds i8, i8* %76, i32 0, !dbg !4184
  %78 = bitcast i8* %77 to %struct.onoff_client*, !dbg !4184
  br label %80, !dbg !4184

79:                                               ; preds = %67
  br label %80, !dbg !4184

80:                                               ; preds = %79, %72
  %81 = phi %struct.onoff_client* [ %78, %72 ], [ null, %79 ], !dbg !4184
  br label %83, !dbg !4184

82:                                               ; preds = %64
  br label %83, !dbg !4184

83:                                               ; preds = %82, %80
  %84 = phi %struct.onoff_client* [ %81, %80 ], [ null, %82 ], !dbg !4184
  store %struct.onoff_client* %84, %struct.onoff_client** %8, align 4, !dbg !4184
  br label %54, !dbg !4184, !llvm.loop !4191

85:                                               ; preds = %54
  %86 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4193
  call void @set_state(%struct.onoff_manager* noundef %86, i32 noundef 2) #10, !dbg !4194
  br label %89, !dbg !4195

87:                                               ; preds = %31
  %88 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4196
  call void @set_state(%struct.onoff_manager* noundef %88, i32 noundef 0) #10, !dbg !4198
  br label %89

89:                                               ; preds = %87, %85
  %90 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4199
  %91 = call i32 @process_recheck(%struct.onoff_manager* noundef %90) #10, !dbg !4201
  %92 = icmp ne i32 %91, 0, !dbg !4202
  br i1 %92, label %93, label %100, !dbg !4203

93:                                               ; preds = %89
  %94 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4204
  %95 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %94, i32 0, i32 5, !dbg !4206
  %96 = load i16, i16* %95, align 4, !dbg !4207
  %97 = zext i16 %96 to i32, !dbg !4207
  %98 = or i32 %97, 32, !dbg !4207
  %99 = trunc i32 %98 to i16, !dbg !4207
  store i16 %99, i16* %95, align 4, !dbg !4207
  br label %100, !dbg !4208

100:                                              ; preds = %93, %89
  br label %119, !dbg !4209

101:                                              ; preds = %28
  %102 = load i32, i32* %7, align 4, !dbg !4210
  %103 = icmp eq i32 %102, 4, !dbg !4212
  br i1 %103, label %104, label %117, !dbg !4213

104:                                              ; preds = %101
  %105 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4214
  call void @set_state(%struct.onoff_manager* noundef %105, i32 noundef 0) #10, !dbg !4216
  %106 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4217
  %107 = call i32 @process_recheck(%struct.onoff_manager* noundef %106) #10, !dbg !4219
  %108 = icmp ne i32 %107, 0, !dbg !4220
  br i1 %108, label %109, label %116, !dbg !4221

109:                                              ; preds = %104
  %110 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4222
  %111 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %110, i32 0, i32 5, !dbg !4224
  %112 = load i16, i16* %111, align 4, !dbg !4225
  %113 = zext i16 %112 to i32, !dbg !4225
  %114 = or i32 %113, 32, !dbg !4225
  %115 = trunc i32 %114 to i16, !dbg !4225
  store i16 %115, i16* %111, align 4, !dbg !4225
  br label %116, !dbg !4226

116:                                              ; preds = %109, %104
  br label %118, !dbg !4227

117:                                              ; preds = %101
  br label %118

118:                                              ; preds = %117, %116
  br label %119

119:                                              ; preds = %118, %100
  br label %120

120:                                              ; preds = %119, %16
  ret void, !dbg !4228
}

; Function Attrs: noinline nounwind optnone
define internal void @set_state(%struct.onoff_manager* noundef %0, i32 noundef %1) #1 !dbg !4229 {
  %3 = alloca %struct.onoff_manager*, align 4
  %4 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %3, metadata !4232, metadata !DIExpression()), !dbg !4233
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4234, metadata !DIExpression()), !dbg !4235
  %5 = load i32, i32* %4, align 4, !dbg !4236
  %6 = and i32 %5, 7, !dbg !4237
  %7 = load %struct.onoff_manager*, %struct.onoff_manager** %3, align 4, !dbg !4238
  %8 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %7, i32 0, i32 5, !dbg !4239
  %9 = load i16, i16* %8, align 4, !dbg !4239
  %10 = zext i16 %9 to i32, !dbg !4238
  %11 = and i32 %10, -8, !dbg !4240
  %12 = or i32 %6, %11, !dbg !4241
  %13 = trunc i32 %12 to i16, !dbg !4242
  %14 = load %struct.onoff_manager*, %struct.onoff_manager** %3, align 4, !dbg !4243
  %15 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %14, i32 0, i32 5, !dbg !4244
  store i16 %13, i16* %15, align 4, !dbg !4245
  ret void, !dbg !4246
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #1 !dbg !4247 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !4250, metadata !DIExpression()), !dbg !4251
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4251
  %4 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %3) #10, !dbg !4251
  %5 = icmp eq %struct._snode* %4, null, !dbg !4251
  ret i1 %5, !dbg !4251
}

; Function Attrs: noinline nounwind optnone
define internal void @notify_monitors(%struct.onoff_manager* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !4252 {
  %4 = alloca %struct.onoff_manager*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct._slist*, align 4
  %8 = alloca %struct.onoff_monitor*, align 4
  %9 = alloca %struct.onoff_monitor*, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %4, metadata !4255, metadata !DIExpression()), !dbg !4256
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4257, metadata !DIExpression()), !dbg !4258
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4259, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.declare(metadata %struct._slist** %7, metadata !4261, metadata !DIExpression()), !dbg !4262
  %10 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4263
  %11 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %10, i32 0, i32 1, !dbg !4264
  store %struct._slist* %11, %struct._slist** %7, align 4, !dbg !4262
  call void @llvm.dbg.declare(metadata %struct.onoff_monitor** %8, metadata !4265, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.declare(metadata %struct.onoff_monitor** %9, metadata !4267, metadata !DIExpression()), !dbg !4268
  %12 = load %struct._slist*, %struct._slist** %7, align 4, !dbg !4269
  %13 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %12) #10, !dbg !4269
  %14 = icmp ne %struct._snode* %13, null, !dbg !4269
  br i1 %14, label %15, label %21, !dbg !4269

15:                                               ; preds = %3
  %16 = load %struct._slist*, %struct._slist** %7, align 4, !dbg !4269
  %17 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %16) #10, !dbg !4269
  %18 = bitcast %struct._snode* %17 to i8*, !dbg !4269
  %19 = getelementptr inbounds i8, i8* %18, i32 0, !dbg !4269
  %20 = bitcast i8* %19 to %struct.onoff_monitor*, !dbg !4269
  br label %22, !dbg !4269

21:                                               ; preds = %3
  br label %22, !dbg !4269

22:                                               ; preds = %21, %15
  %23 = phi %struct.onoff_monitor* [ %20, %15 ], [ null, %21 ], !dbg !4269
  store %struct.onoff_monitor* %23, %struct.onoff_monitor** %8, align 4, !dbg !4269
  %24 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4269
  %25 = icmp ne %struct.onoff_monitor* %24, null, !dbg !4269
  br i1 %25, label %26, label %41, !dbg !4269

26:                                               ; preds = %22
  %27 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4269
  %28 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %27, i32 0, i32 0, !dbg !4269
  %29 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %28) #10, !dbg !4269
  %30 = icmp ne %struct._snode* %29, null, !dbg !4269
  br i1 %30, label %31, label %38, !dbg !4269

31:                                               ; preds = %26
  %32 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4269
  %33 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %32, i32 0, i32 0, !dbg !4269
  %34 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %33) #10, !dbg !4269
  %35 = bitcast %struct._snode* %34 to i8*, !dbg !4269
  %36 = getelementptr inbounds i8, i8* %35, i32 0, !dbg !4269
  %37 = bitcast i8* %36 to %struct.onoff_monitor*, !dbg !4269
  br label %39, !dbg !4269

38:                                               ; preds = %26
  br label %39, !dbg !4269

39:                                               ; preds = %38, %31
  %40 = phi %struct.onoff_monitor* [ %37, %31 ], [ null, %38 ], !dbg !4269
  br label %42, !dbg !4269

41:                                               ; preds = %22
  br label %42, !dbg !4269

42:                                               ; preds = %41, %39
  %43 = phi %struct.onoff_monitor* [ %40, %39 ], [ null, %41 ], !dbg !4269
  store %struct.onoff_monitor* %43, %struct.onoff_monitor** %9, align 4, !dbg !4269
  br label %44, !dbg !4269

44:                                               ; preds = %75, %42
  %45 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4271
  %46 = icmp ne %struct.onoff_monitor* %45, null, !dbg !4271
  br i1 %46, label %47, label %77, !dbg !4269

47:                                               ; preds = %44
  %48 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4273
  %49 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %48, i32 0, i32 1, !dbg !4275
  %50 = load void (%struct.onoff_manager*, %struct.onoff_monitor*, i32, i32)*, void (%struct.onoff_manager*, %struct.onoff_monitor*, i32, i32)** %49, align 4, !dbg !4275
  %51 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !4276
  %52 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4277
  %53 = load i32, i32* %5, align 4, !dbg !4278
  %54 = load i32, i32* %6, align 4, !dbg !4279
  call void %50(%struct.onoff_manager* noundef %51, %struct.onoff_monitor* noundef %52, i32 noundef %53, i32 noundef %54) #10, !dbg !4273
  br label %55, !dbg !4280

55:                                               ; preds = %47
  %56 = load %struct.onoff_monitor*, %struct.onoff_monitor** %9, align 4, !dbg !4271
  store %struct.onoff_monitor* %56, %struct.onoff_monitor** %8, align 4, !dbg !4271
  %57 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4271
  %58 = icmp ne %struct.onoff_monitor* %57, null, !dbg !4271
  br i1 %58, label %59, label %74, !dbg !4271

59:                                               ; preds = %55
  %60 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4271
  %61 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %60, i32 0, i32 0, !dbg !4271
  %62 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %61) #10, !dbg !4271
  %63 = icmp ne %struct._snode* %62, null, !dbg !4271
  br i1 %63, label %64, label %71, !dbg !4271

64:                                               ; preds = %59
  %65 = load %struct.onoff_monitor*, %struct.onoff_monitor** %8, align 4, !dbg !4271
  %66 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %65, i32 0, i32 0, !dbg !4271
  %67 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %66) #10, !dbg !4271
  %68 = bitcast %struct._snode* %67 to i8*, !dbg !4271
  %69 = getelementptr inbounds i8, i8* %68, i32 0, !dbg !4271
  %70 = bitcast i8* %69 to %struct.onoff_monitor*, !dbg !4271
  br label %72, !dbg !4271

71:                                               ; preds = %59
  br label %72, !dbg !4271

72:                                               ; preds = %71, %64
  %73 = phi %struct.onoff_monitor* [ %70, %64 ], [ null, %71 ], !dbg !4271
  br label %75, !dbg !4271

74:                                               ; preds = %55
  br label %75, !dbg !4271

75:                                               ; preds = %74, %72
  %76 = phi %struct.onoff_monitor* [ %73, %72 ], [ null, %74 ], !dbg !4271
  store %struct.onoff_monitor* %76, %struct.onoff_monitor** %9, align 4, !dbg !4271
  br label %44, !dbg !4271, !llvm.loop !4281

77:                                               ; preds = %44
  ret void, !dbg !4283
}

; Function Attrs: noinline nounwind optnone
define internal void @notify_all(%struct.onoff_manager* noundef %0, %struct._slist* noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !4284 {
  %5 = alloca %struct.onoff_manager*, align 4
  %6 = alloca %struct._slist*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._snode*, align 4
  %10 = alloca %struct.onoff_client*, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %5, metadata !4287, metadata !DIExpression()), !dbg !4288
  store %struct._slist* %1, %struct._slist** %6, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %6, metadata !4289, metadata !DIExpression()), !dbg !4290
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4291, metadata !DIExpression()), !dbg !4292
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4293, metadata !DIExpression()), !dbg !4294
  br label %11, !dbg !4295

11:                                               ; preds = %15, %4
  %12 = load %struct._slist*, %struct._slist** %6, align 4, !dbg !4296
  %13 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %12) #10, !dbg !4297
  %14 = xor i1 %13, true, !dbg !4298
  br i1 %14, label %15, label %26, !dbg !4295

15:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata %struct._snode** %9, metadata !4299, metadata !DIExpression()), !dbg !4301
  %16 = load %struct._slist*, %struct._slist** %6, align 4, !dbg !4302
  %17 = call %struct._snode* @sys_slist_get_not_empty(%struct._slist* noundef %16) #10, !dbg !4303
  store %struct._snode* %17, %struct._snode** %9, align 4, !dbg !4301
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %10, metadata !4304, metadata !DIExpression()), !dbg !4305
  %18 = load %struct._snode*, %struct._snode** %9, align 4, !dbg !4306
  %19 = bitcast %struct._snode* %18 to i8*, !dbg !4306
  %20 = getelementptr inbounds i8, i8* %19, i32 0, !dbg !4306
  %21 = bitcast i8* %20 to %struct.onoff_client*, !dbg !4306
  store %struct.onoff_client* %21, %struct.onoff_client** %10, align 4, !dbg !4305
  %22 = load %struct.onoff_manager*, %struct.onoff_manager** %5, align 4, !dbg !4307
  %23 = load %struct.onoff_client*, %struct.onoff_client** %10, align 4, !dbg !4308
  %24 = load i32, i32* %7, align 4, !dbg !4309
  %25 = load i32, i32* %8, align 4, !dbg !4310
  call void @notify_one(%struct.onoff_manager* noundef %22, %struct.onoff_client* noundef %23, i32 noundef %24, i32 noundef %25) #10, !dbg !4311
  br label %11, !dbg !4295, !llvm.loop !4312

26:                                               ; preds = %11
  ret void, !dbg !4314
}

; Function Attrs: noinline nounwind optnone
define internal void @transition_complete(%struct.onoff_manager* noundef %0, i32 noundef %1) #1 !dbg !4315 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.onoff_manager*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %6, metadata !4316, metadata !DIExpression()), !dbg !4317
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4318, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !4320, metadata !DIExpression()), !dbg !4321
  %9 = load %struct.onoff_manager*, %struct.onoff_manager** %6, align 4, !dbg !4322
  %10 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %9, i32 0, i32 3, !dbg !4323
  store %struct.k_spinlock.13* %10, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !3602, metadata !DIExpression()) #9, !dbg !4324
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !4326
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !3610, metadata !DIExpression()) #9, !dbg !4327
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3612, metadata !DIExpression()) #9, !dbg !4328
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !4330, !srcloc !3620
  store i32 %12, i32* %3, align 4, !dbg !4330
  %13 = load i32, i32* %3, align 4, !dbg !4331
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !4332
  store i32 %13, i32* %14, align 4, !dbg !4333
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !4334
  %16 = load i32, i32* %15, align 4, !dbg !4334
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !4335
  store i32 %16, i32* %17, align 4, !dbg !4335
  %18 = load i32, i32* %7, align 4, !dbg !4336
  %19 = load %struct.onoff_manager*, %struct.onoff_manager** %6, align 4, !dbg !4337
  %20 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %19, i32 0, i32 4, !dbg !4338
  store i32 %18, i32* %20, align 4, !dbg !4339
  %21 = load %struct.onoff_manager*, %struct.onoff_manager** %6, align 4, !dbg !4340
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !4341
  %23 = bitcast i32* %22 to [1 x i32]*, !dbg !4341
  %24 = load [1 x i32], [1 x i32]* %23, align 4, !dbg !4341
  call void @process_event(%struct.onoff_manager* noundef %21, i32 noundef 1, [1 x i32] %24) #10, !dbg !4341
  ret void, !dbg !4342
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_get_not_empty(%struct._slist* noundef %0) #1 !dbg !4343 {
  %2 = alloca %struct._slist*, align 4
  %3 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !4346, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.declare(metadata %struct._snode** %3, metadata !4348, metadata !DIExpression()), !dbg !4347
  %4 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4347
  %5 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %4) #10, !dbg !4347
  store %struct._snode* %5, %struct._snode** %3, align 4, !dbg !4347
  %6 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4347
  %7 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !4347
  %8 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %7) #10, !dbg !4347
  call void @z_slist_head_set(%struct._slist* noundef %6, %struct._snode* noundef %8) #10, !dbg !4347
  %9 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4349
  %10 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %9) #10, !dbg !4349
  %11 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !4349
  %12 = icmp eq %struct._snode* %10, %11, !dbg !4349
  br i1 %12, label %13, label %17, !dbg !4347

13:                                               ; preds = %1
  %14 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4351
  %15 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4351
  %16 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %15) #10, !dbg !4351
  call void @z_slist_tail_set(%struct._slist* noundef %14, %struct._snode* noundef %16) #10, !dbg !4351
  br label %17, !dbg !4351

17:                                               ; preds = %13, %1
  %18 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !4347
  ret %struct._snode* %18, !dbg !4347
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #1 !dbg !4353 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !4354, metadata !DIExpression()), !dbg !4355
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4356
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 0, !dbg !4357
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !4357
  ret %struct._snode* %5, !dbg !4358
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #1 !dbg !4359 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !4362, metadata !DIExpression()), !dbg !4363
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !4364
  %4 = getelementptr inbounds %struct._snode, %struct._snode* %3, i32 0, i32 0, !dbg !4365
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !4365
  ret %struct._snode* %5, !dbg !4366
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !4367 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !4368, metadata !DIExpression()), !dbg !4369
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !4370, metadata !DIExpression()), !dbg !4371
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !4372
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !4373
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 0, !dbg !4374
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !4375
  ret void, !dbg !4376
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #1 !dbg !4377 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !4378, metadata !DIExpression()), !dbg !4379
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !4380
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 1, !dbg !4381
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !4381
  ret %struct._snode* %5, !dbg !4382
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !4383 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !4384, metadata !DIExpression()), !dbg !4385
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !4386, metadata !DIExpression()), !dbg !4387
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !4388
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !4389
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 1, !dbg !4390
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !4391
  ret void, !dbg !4392
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %0) #1 !dbg !4393 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !4394, metadata !DIExpression()), !dbg !4395
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !4395
  %4 = icmp ne %struct._snode* %3, null, !dbg !4395
  br i1 %4, label %5, label %8, !dbg !4395

5:                                                ; preds = %1
  %6 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !4395
  %7 = call %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef %6) #10, !dbg !4395
  br label %9, !dbg !4395

8:                                                ; preds = %1
  br label %9, !dbg !4395

9:                                                ; preds = %8, %5
  %10 = phi %struct._snode* [ %7, %5 ], [ null, %8 ], !dbg !4395
  ret %struct._snode* %10, !dbg !4395
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef %0) #1 !dbg !4396 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !4397, metadata !DIExpression()), !dbg !4398
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !4398
  %4 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %3) #10, !dbg !4398
  ret %struct._snode* %4, !dbg !4398
}

; Function Attrs: noinline nounwind optnone
define internal void @z_snode_next_set(%struct._snode* noundef %0, %struct._snode* noundef %1) #1 !dbg !4399 {
  %3 = alloca %struct._snode*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %3, metadata !4402, metadata !DIExpression()), !dbg !4403
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !4404, metadata !DIExpression()), !dbg !4405
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !4406
  %6 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !4407
  %7 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 0, i32 0, !dbg !4408
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !4409
  ret void, !dbg !4410
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_release(%struct.onoff_manager* noundef %0) #1 !dbg !4411 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.onoff_manager*, align 4
  %9 = alloca i8, align 1
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %8, metadata !4412, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4414, metadata !DIExpression()), !dbg !4415
  store i8 0, i8* %9, align 1, !dbg !4415
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !4416, metadata !DIExpression()), !dbg !4417
  %13 = load %struct.onoff_manager*, %struct.onoff_manager** %8, align 4, !dbg !4418
  %14 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %13, i32 0, i32 3, !dbg !4419
  store %struct.k_spinlock.13* %14, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !3602, metadata !DIExpression()) #9, !dbg !4420
  %15 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !4422
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !3610, metadata !DIExpression()) #9, !dbg !4423
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3612, metadata !DIExpression()) #9, !dbg !4424
  %16 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !4426, !srcloc !3620
  store i32 %16, i32* %3, align 4, !dbg !4426
  %17 = load i32, i32* %3, align 4, !dbg !4427
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !4428
  store i32 %17, i32* %18, align 4, !dbg !4429
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !4430
  %20 = load i32, i32* %19, align 4, !dbg !4430
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !4431
  store i32 %20, i32* %21, align 4, !dbg !4431
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4432, metadata !DIExpression()), !dbg !4433
  %22 = load %struct.onoff_manager*, %struct.onoff_manager** %8, align 4, !dbg !4434
  %23 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %22, i32 0, i32 5, !dbg !4435
  %24 = load i16, i16* %23, align 4, !dbg !4435
  %25 = zext i16 %24 to i32, !dbg !4434
  %26 = and i32 %25, 7, !dbg !4436
  store i32 %26, i32* %11, align 4, !dbg !4433
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4437, metadata !DIExpression()), !dbg !4438
  %27 = load i32, i32* %11, align 4, !dbg !4439
  store i32 %27, i32* %12, align 4, !dbg !4438
  %28 = load i32, i32* %11, align 4, !dbg !4440
  %29 = icmp ne i32 %28, 2, !dbg !4442
  br i1 %29, label %30, label %36, !dbg !4443

30:                                               ; preds = %1
  %31 = load i32, i32* %11, align 4, !dbg !4444
  %32 = icmp eq i32 %31, 1, !dbg !4447
  br i1 %32, label %33, label %34, !dbg !4448

33:                                               ; preds = %30
  store i32 -5, i32* %12, align 4, !dbg !4449
  br label %35, !dbg !4451

34:                                               ; preds = %30
  store i32 -134, i32* %12, align 4, !dbg !4452
  br label %35

35:                                               ; preds = %34, %33
  br label %49, !dbg !4454

36:                                               ; preds = %1
  %37 = load %struct.onoff_manager*, %struct.onoff_manager** %8, align 4, !dbg !4455
  %38 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %37, i32 0, i32 6, !dbg !4456
  %39 = load i16, i16* %38, align 2, !dbg !4457
  %40 = zext i16 %39 to i32, !dbg !4457
  %41 = sub i32 %40, 1, !dbg !4457
  %42 = trunc i32 %41 to i16, !dbg !4457
  store i16 %42, i16* %38, align 2, !dbg !4457
  %43 = load %struct.onoff_manager*, %struct.onoff_manager** %8, align 4, !dbg !4458
  %44 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %43, i32 0, i32 6, !dbg !4459
  %45 = load i16, i16* %44, align 2, !dbg !4459
  %46 = zext i16 %45 to i32, !dbg !4458
  %47 = icmp eq i32 %46, 0, !dbg !4460
  %48 = zext i1 %47 to i8, !dbg !4461
  store i8 %48, i8* %9, align 1, !dbg !4461
  br label %49, !dbg !4462

49:                                               ; preds = %36, %35
  call void @llvm.dbg.label(metadata !4463), !dbg !4464
  %50 = load i8, i8* %9, align 1, !dbg !4465
  %51 = trunc i8 %50 to i1, !dbg !4465
  br i1 %51, label %52, label %57, !dbg !4467

52:                                               ; preds = %49
  %53 = load %struct.onoff_manager*, %struct.onoff_manager** %8, align 4, !dbg !4468
  %54 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !4470
  %55 = bitcast i32* %54 to [1 x i32]*, !dbg !4470
  %56 = load [1 x i32], [1 x i32]* %55, align 4, !dbg !4470
  call void @process_event(%struct.onoff_manager* noundef %53, i32 noundef 2, [1 x i32] %56) #10, !dbg !4470
  br label %73, !dbg !4471

57:                                               ; preds = %49
  %58 = load %struct.onoff_manager*, %struct.onoff_manager** %8, align 4, !dbg !4472
  %59 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %58, i32 0, i32 3, !dbg !4474
  %60 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !4475
  %61 = bitcast i32* %60 to [1 x i32]*, !dbg !4475
  %62 = load [1 x i32], [1 x i32]* %61, align 4, !dbg !4475
  %63 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %64 = bitcast i32* %63 to [1 x i32]*
  store [1 x i32] %62, [1 x i32]* %64, align 4
  store %struct.k_spinlock.13* %59, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !3700, metadata !DIExpression()) #9, !dbg !4476
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !3706, metadata !DIExpression()) #9, !dbg !4478
  %65 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !4479
  %66 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !4480
  %67 = load i32, i32* %66, align 4, !dbg !4480
  store i32 %67, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3710, metadata !DIExpression()) #9, !dbg !4481
  %68 = load i32, i32* %2, align 4, !dbg !4483
  %69 = icmp ne i32 %68, 0, !dbg !4484
  br i1 %69, label %70, label %71, !dbg !4485

70:                                               ; preds = %57
  br label %72, !dbg !4486

71:                                               ; preds = %57
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !4487, !srcloc !3723
  br label %72, !dbg !4488

72:                                               ; preds = %70, %71
  br label %73

73:                                               ; preds = %72, %52
  %74 = load i32, i32* %12, align 4, !dbg !4489
  ret i32 %74, !dbg !4490
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_reset(%struct.onoff_manager* noundef %0, %struct.onoff_client* noundef %1) #1 !dbg !4491 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.onoff_manager*, align 4
  %11 = alloca %struct.onoff_client*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca %struct.z_spinlock_key, align 4
  %15 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %10, metadata !4492, metadata !DIExpression()), !dbg !4493
  store %struct.onoff_client* %1, %struct.onoff_client** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %11, metadata !4494, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata i8* %12, metadata !4496, metadata !DIExpression()), !dbg !4497
  store i8 0, i8* %12, align 1, !dbg !4497
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4498, metadata !DIExpression()), !dbg !4499
  %16 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4500
  %17 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !4501
  %18 = call i32 @validate_args(%struct.onoff_manager* noundef %16, %struct.onoff_client* noundef %17) #10, !dbg !4502
  store i32 %18, i32* %13, align 4, !dbg !4499
  %19 = load i32, i32* %13, align 4, !dbg !4503
  %20 = icmp sge i32 %19, 0, !dbg !4505
  br i1 %20, label %21, label %29, !dbg !4506

21:                                               ; preds = %2
  %22 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4507
  %23 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %22, i32 0, i32 2, !dbg !4508
  %24 = load %struct.onoff_transitions*, %struct.onoff_transitions** %23, align 4, !dbg !4508
  %25 = getelementptr inbounds %struct.onoff_transitions, %struct.onoff_transitions* %24, i32 0, i32 2, !dbg !4509
  %26 = load void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)*, void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)** %25, align 4, !dbg !4509
  %27 = icmp eq void (%struct.onoff_manager*, void (%struct.onoff_manager*, i32)*)* %26, null, !dbg !4510
  br i1 %27, label %28, label %29, !dbg !4511

28:                                               ; preds = %21
  store i32 -134, i32* %13, align 4, !dbg !4512
  br label %29, !dbg !4514

29:                                               ; preds = %28, %21, %2
  %30 = load i32, i32* %13, align 4, !dbg !4515
  %31 = icmp slt i32 %30, 0, !dbg !4517
  br i1 %31, label %32, label %34, !dbg !4518

32:                                               ; preds = %29
  %33 = load i32, i32* %13, align 4, !dbg !4519
  store i32 %33, i32* %9, align 4, !dbg !4521
  br label %88, !dbg !4521

34:                                               ; preds = %29
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %14, metadata !4522, metadata !DIExpression()), !dbg !4523
  %35 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4524
  %36 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %35, i32 0, i32 3, !dbg !4525
  store %struct.k_spinlock.13* %36, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !3602, metadata !DIExpression()) #9, !dbg !4526
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !4528
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !3610, metadata !DIExpression()) #9, !dbg !4529
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3612, metadata !DIExpression()) #9, !dbg !4530
  %38 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !4532, !srcloc !3620
  store i32 %38, i32* %4, align 4, !dbg !4532
  %39 = load i32, i32* %4, align 4, !dbg !4533
  %40 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4534
  store i32 %39, i32* %40, align 4, !dbg !4535
  %41 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4536
  %42 = load i32, i32* %41, align 4, !dbg !4536
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !4537
  store i32 %42, i32* %43, align 4, !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4538, metadata !DIExpression()), !dbg !4539
  %44 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4540
  %45 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %44, i32 0, i32 5, !dbg !4541
  %46 = load i16, i16* %45, align 4, !dbg !4541
  %47 = zext i16 %46 to i32, !dbg !4540
  %48 = and i32 %47, 7, !dbg !4542
  store i32 %48, i32* %15, align 4, !dbg !4539
  %49 = load i32, i32* %15, align 4, !dbg !4543
  store i32 %49, i32* %13, align 4, !dbg !4544
  %50 = load i32, i32* %15, align 4, !dbg !4545
  %51 = and i32 %50, 1, !dbg !4547
  %52 = icmp eq i32 %51, 0, !dbg !4548
  br i1 %52, label %53, label %54, !dbg !4549

53:                                               ; preds = %34
  store i32 -120, i32* %13, align 4, !dbg !4550
  br label %62, !dbg !4552

54:                                               ; preds = %34
  %55 = load i32, i32* %15, align 4, !dbg !4553
  %56 = icmp ne i32 %55, 5, !dbg !4555
  %57 = zext i1 %56 to i8, !dbg !4556
  store i8 %57, i8* %12, align 1, !dbg !4556
  %58 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4557
  %59 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %58, i32 0, i32 0, !dbg !4558
  %60 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !4559
  %61 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %60, i32 0, i32 0, !dbg !4560
  call void @sys_slist_append(%struct._slist* noundef %59, %struct._snode* noundef %61) #10, !dbg !4561
  br label %62

62:                                               ; preds = %54, %53
  %63 = load i8, i8* %12, align 1, !dbg !4562
  %64 = trunc i8 %63 to i1, !dbg !4562
  br i1 %64, label %65, label %70, !dbg !4564

65:                                               ; preds = %62
  %66 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4565
  %67 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !4567
  %68 = bitcast i32* %67 to [1 x i32]*, !dbg !4567
  %69 = load [1 x i32], [1 x i32]* %68, align 4, !dbg !4567
  call void @process_event(%struct.onoff_manager* noundef %66, i32 noundef 2, [1 x i32] %69) #10, !dbg !4567
  br label %86, !dbg !4568

70:                                               ; preds = %62
  %71 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4569
  %72 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %71, i32 0, i32 3, !dbg !4571
  %73 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !4572
  %74 = bitcast i32* %73 to [1 x i32]*, !dbg !4572
  %75 = load [1 x i32], [1 x i32]* %74, align 4, !dbg !4572
  %76 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %77 = bitcast i32* %76 to [1 x i32]*
  store [1 x i32] %75, [1 x i32]* %77, align 4
  store %struct.k_spinlock.13* %72, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !3700, metadata !DIExpression()) #9, !dbg !4573
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !3706, metadata !DIExpression()) #9, !dbg !4575
  %78 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !4576
  %79 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !4577
  %80 = load i32, i32* %79, align 4, !dbg !4577
  store i32 %80, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3710, metadata !DIExpression()) #9, !dbg !4578
  %81 = load i32, i32* %3, align 4, !dbg !4580
  %82 = icmp ne i32 %81, 0, !dbg !4581
  br i1 %82, label %83, label %84, !dbg !4582

83:                                               ; preds = %70
  br label %85, !dbg !4583

84:                                               ; preds = %70
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !4584, !srcloc !3723
  br label %85, !dbg !4585

85:                                               ; preds = %83, %84
  br label %86

86:                                               ; preds = %85, %65
  %87 = load i32, i32* %13, align 4, !dbg !4586
  store i32 %87, i32* %9, align 4, !dbg !4587
  br label %88, !dbg !4587

88:                                               ; preds = %86, %32
  %89 = load i32, i32* %9, align 4, !dbg !4588
  ret i32 %89, !dbg !4588
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_cancel(%struct.onoff_manager* noundef %0, %struct.onoff_client* noundef %1) #1 !dbg !4589 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.onoff_manager*, align 4
  %11 = alloca %struct.onoff_client*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  %14 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %10, metadata !4590, metadata !DIExpression()), !dbg !4591
  store %struct.onoff_client* %1, %struct.onoff_client** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %11, metadata !4592, metadata !DIExpression()), !dbg !4593
  %15 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4594
  %16 = icmp eq %struct.onoff_manager* %15, null, !dbg !4596
  br i1 %16, label %20, label %17, !dbg !4597

17:                                               ; preds = %2
  %18 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !4598
  %19 = icmp eq %struct.onoff_client* %18, null, !dbg !4599
  br i1 %19, label %20, label %21, !dbg !4600

20:                                               ; preds = %17, %2
  store i32 -22, i32* %9, align 4, !dbg !4601
  br label %60, !dbg !4601

21:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4603, metadata !DIExpression()), !dbg !4604
  store i32 -120, i32* %12, align 4, !dbg !4604
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !4605, metadata !DIExpression()), !dbg !4606
  %22 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4607
  %23 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %22, i32 0, i32 3, !dbg !4608
  store %struct.k_spinlock.13* %23, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !3602, metadata !DIExpression()) #9, !dbg !4609
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !4611
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !3610, metadata !DIExpression()) #9, !dbg !4612
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3612, metadata !DIExpression()) #9, !dbg !4613
  %25 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !4615, !srcloc !3620
  store i32 %25, i32* %4, align 4, !dbg !4615
  %26 = load i32, i32* %4, align 4, !dbg !4616
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4617
  store i32 %26, i32* %27, align 4, !dbg !4618
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4619
  %29 = load i32, i32* %28, align 4, !dbg !4619
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !4620
  store i32 %29, i32* %30, align 4, !dbg !4620
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4621, metadata !DIExpression()), !dbg !4622
  %31 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4623
  %32 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %31, i32 0, i32 5, !dbg !4624
  %33 = load i16, i16* %32, align 4, !dbg !4624
  %34 = zext i16 %33 to i32, !dbg !4623
  %35 = and i32 %34, 7, !dbg !4625
  store i32 %35, i32* %14, align 4, !dbg !4622
  %36 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4626
  %37 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %36, i32 0, i32 0, !dbg !4628
  %38 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !4629
  %39 = getelementptr inbounds %struct.onoff_client, %struct.onoff_client* %38, i32 0, i32 0, !dbg !4630
  %40 = call zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %37, %struct._snode* noundef %39) #10, !dbg !4631
  br i1 %40, label %41, label %43, !dbg !4632

41:                                               ; preds = %21
  %42 = load i32, i32* %14, align 4, !dbg !4633
  store i32 %42, i32* %12, align 4, !dbg !4635
  br label %43, !dbg !4636

43:                                               ; preds = %41, %21
  %44 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4637
  %45 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %44, i32 0, i32 3, !dbg !4638
  %46 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !4639
  %47 = bitcast i32* %46 to [1 x i32]*, !dbg !4639
  %48 = load [1 x i32], [1 x i32]* %47, align 4, !dbg !4639
  %49 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %50 = bitcast i32* %49 to [1 x i32]*
  store [1 x i32] %48, [1 x i32]* %50, align 4
  store %struct.k_spinlock.13* %45, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !3700, metadata !DIExpression()) #9, !dbg !4640
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !3706, metadata !DIExpression()) #9, !dbg !4642
  %51 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !4643
  %52 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !4644
  %53 = load i32, i32* %52, align 4, !dbg !4644
  store i32 %53, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3710, metadata !DIExpression()) #9, !dbg !4645
  %54 = load i32, i32* %3, align 4, !dbg !4647
  %55 = icmp ne i32 %54, 0, !dbg !4648
  br i1 %55, label %56, label %57, !dbg !4649

56:                                               ; preds = %43
  br label %58, !dbg !4650

57:                                               ; preds = %43
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !4651, !srcloc !3723
  br label %58, !dbg !4652

58:                                               ; preds = %56, %57
  %59 = load i32, i32* %12, align 4, !dbg !4653
  store i32 %59, i32* %9, align 4, !dbg !4654
  br label %60, !dbg !4654

60:                                               ; preds = %58, %20
  %61 = load i32, i32* %9, align 4, !dbg !4655
  ret i32 %61, !dbg !4655
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !4656 {
  %3 = alloca i1, align 1
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  %7 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !4659, metadata !DIExpression()), !dbg !4660
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !4661, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !4662, metadata !DIExpression()), !dbg !4660
  store %struct._snode* null, %struct._snode** %6, align 4, !dbg !4660
  call void @llvm.dbg.declare(metadata %struct._snode** %7, metadata !4663, metadata !DIExpression()), !dbg !4660
  %8 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4664
  %9 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %8) #10, !dbg !4664
  store %struct._snode* %9, %struct._snode** %7, align 4, !dbg !4664
  br label %10, !dbg !4664

10:                                               ; preds = %23, %2
  %11 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !4666
  %12 = icmp ne %struct._snode* %11, null, !dbg !4666
  br i1 %12, label %13, label %26, !dbg !4664

13:                                               ; preds = %10
  %14 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !4668
  %15 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !4668
  %16 = icmp eq %struct._snode* %14, %15, !dbg !4668
  br i1 %16, label %17, label %21, !dbg !4671

17:                                               ; preds = %13
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4672
  %19 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !4672
  %20 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !4672
  call void @sys_slist_remove(%struct._slist* noundef %18, %struct._snode* noundef %19, %struct._snode* noundef %20) #10, !dbg !4672
  store i1 true, i1* %3, align 1, !dbg !4672
  br label %27, !dbg !4672

21:                                               ; preds = %13
  %22 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !4671
  store %struct._snode* %22, %struct._snode** %6, align 4, !dbg !4671
  br label %23, !dbg !4671

23:                                               ; preds = %21
  %24 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !4666
  %25 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %24) #10, !dbg !4666
  store %struct._snode* %25, %struct._snode** %7, align 4, !dbg !4666
  br label %10, !dbg !4666, !llvm.loop !4674

26:                                               ; preds = %10
  store i1 false, i1* %3, align 1, !dbg !4660
  br label %27, !dbg !4660

27:                                               ; preds = %26, %17
  %28 = load i1, i1* %3, align 1, !dbg !4660
  ret i1 %28, !dbg !4660
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) #1 !dbg !4675 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !4678, metadata !DIExpression()), !dbg !4679
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !4680, metadata !DIExpression()), !dbg !4679
  store %struct._snode* %2, %struct._snode** %6, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !4681, metadata !DIExpression()), !dbg !4679
  %7 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !4682
  %8 = icmp eq %struct._snode* %7, null, !dbg !4682
  br i1 %8, label %9, label %22, !dbg !4679

9:                                                ; preds = %3
  %10 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4684
  %11 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !4684
  %12 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %11) #10, !dbg !4684
  call void @z_slist_head_set(%struct._slist* noundef %10, %struct._snode* noundef %12) #10, !dbg !4684
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4686
  %14 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %13) #10, !dbg !4686
  %15 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !4686
  %16 = icmp eq %struct._snode* %14, %15, !dbg !4686
  br i1 %16, label %17, label %21, !dbg !4684

17:                                               ; preds = %9
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4688
  %19 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4688
  %20 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %19) #10, !dbg !4688
  call void @z_slist_tail_set(%struct._slist* noundef %18, %struct._snode* noundef %20) #10, !dbg !4688
  br label %21, !dbg !4688

21:                                               ; preds = %17, %9
  br label %34, !dbg !4684

22:                                               ; preds = %3
  %23 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !4690
  %24 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !4690
  %25 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %24) #10, !dbg !4690
  call void @z_snode_next_set(%struct._snode* noundef %23, %struct._snode* noundef %25) #10, !dbg !4690
  %26 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4692
  %27 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %26) #10, !dbg !4692
  %28 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !4692
  %29 = icmp eq %struct._snode* %27, %28, !dbg !4692
  br i1 %29, label %30, label %33, !dbg !4690

30:                                               ; preds = %22
  %31 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !4694
  %32 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !4694
  call void @z_slist_tail_set(%struct._slist* noundef %31, %struct._snode* noundef %32) #10, !dbg !4694
  br label %33, !dbg !4694

33:                                               ; preds = %30, %22
  br label %34

34:                                               ; preds = %33, %21
  %35 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !4679
  call void @z_snode_next_set(%struct._snode* noundef %35, %struct._snode* noundef null) #10, !dbg !4679
  ret void, !dbg !4679
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_monitor_register(%struct.onoff_manager* noundef %0, %struct.onoff_monitor* noundef %1) #1 !dbg !4696 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.onoff_manager*, align 4
  %11 = alloca %struct.onoff_monitor*, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %10, metadata !4699, metadata !DIExpression()), !dbg !4700
  store %struct.onoff_monitor* %1, %struct.onoff_monitor** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_monitor** %11, metadata !4701, metadata !DIExpression()), !dbg !4702
  %13 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4703
  %14 = icmp eq %struct.onoff_manager* %13, null, !dbg !4705
  br i1 %14, label %23, label %15, !dbg !4706

15:                                               ; preds = %2
  %16 = load %struct.onoff_monitor*, %struct.onoff_monitor** %11, align 4, !dbg !4707
  %17 = icmp eq %struct.onoff_monitor* %16, null, !dbg !4708
  br i1 %17, label %23, label %18, !dbg !4709

18:                                               ; preds = %15
  %19 = load %struct.onoff_monitor*, %struct.onoff_monitor** %11, align 4, !dbg !4710
  %20 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %19, i32 0, i32 1, !dbg !4711
  %21 = load void (%struct.onoff_manager*, %struct.onoff_monitor*, i32, i32)*, void (%struct.onoff_manager*, %struct.onoff_monitor*, i32, i32)** %20, align 4, !dbg !4711
  %22 = icmp eq void (%struct.onoff_manager*, %struct.onoff_monitor*, i32, i32)* %21, null, !dbg !4712
  br i1 %22, label %23, label %24, !dbg !4713

23:                                               ; preds = %18, %15, %2
  store i32 -22, i32* %9, align 4, !dbg !4714
  br label %53, !dbg !4714

24:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !4716, metadata !DIExpression()), !dbg !4717
  %25 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4718
  %26 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %25, i32 0, i32 3, !dbg !4719
  store %struct.k_spinlock.13* %26, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !3602, metadata !DIExpression()) #9, !dbg !4720
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !4722
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !3610, metadata !DIExpression()) #9, !dbg !4723
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3612, metadata !DIExpression()) #9, !dbg !4724
  %28 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !4726, !srcloc !3620
  store i32 %28, i32* %4, align 4, !dbg !4726
  %29 = load i32, i32* %4, align 4, !dbg !4727
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4728
  store i32 %29, i32* %30, align 4, !dbg !4729
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4730
  %32 = load i32, i32* %31, align 4, !dbg !4730
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !4731
  store i32 %32, i32* %33, align 4, !dbg !4731
  %34 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4732
  %35 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %34, i32 0, i32 1, !dbg !4733
  %36 = load %struct.onoff_monitor*, %struct.onoff_monitor** %11, align 4, !dbg !4734
  %37 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %36, i32 0, i32 0, !dbg !4735
  call void @sys_slist_append(%struct._slist* noundef %35, %struct._snode* noundef %37) #10, !dbg !4736
  %38 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4737
  %39 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %38, i32 0, i32 3, !dbg !4738
  %40 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !4739
  %41 = bitcast i32* %40 to [1 x i32]*, !dbg !4739
  %42 = load [1 x i32], [1 x i32]* %41, align 4, !dbg !4739
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %44 = bitcast i32* %43 to [1 x i32]*
  store [1 x i32] %42, [1 x i32]* %44, align 4
  store %struct.k_spinlock.13* %39, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !3700, metadata !DIExpression()) #9, !dbg !4740
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !3706, metadata !DIExpression()) #9, !dbg !4742
  %45 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !4743
  %46 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !4744
  %47 = load i32, i32* %46, align 4, !dbg !4744
  store i32 %47, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3710, metadata !DIExpression()) #9, !dbg !4745
  %48 = load i32, i32* %3, align 4, !dbg !4747
  %49 = icmp ne i32 %48, 0, !dbg !4748
  br i1 %49, label %50, label %51, !dbg !4749

50:                                               ; preds = %24
  br label %52, !dbg !4750

51:                                               ; preds = %24
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !4751, !srcloc !3723
  br label %52, !dbg !4752

52:                                               ; preds = %50, %51
  store i32 0, i32* %9, align 4, !dbg !4753
  br label %53, !dbg !4753

53:                                               ; preds = %52, %23
  %54 = load i32, i32* %9, align 4, !dbg !4754
  ret i32 %54, !dbg !4754
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_monitor_unregister(%struct.onoff_manager* noundef %0, %struct.onoff_monitor* noundef %1) #1 !dbg !4755 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.onoff_manager*, align 4
  %11 = alloca %struct.onoff_monitor*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %10, metadata !4756, metadata !DIExpression()), !dbg !4757
  store %struct.onoff_monitor* %1, %struct.onoff_monitor** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_monitor** %11, metadata !4758, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4760, metadata !DIExpression()), !dbg !4761
  store i32 -22, i32* %12, align 4, !dbg !4761
  %14 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4762
  %15 = icmp eq %struct.onoff_manager* %14, null, !dbg !4764
  br i1 %15, label %19, label %16, !dbg !4765

16:                                               ; preds = %2
  %17 = load %struct.onoff_monitor*, %struct.onoff_monitor** %11, align 4, !dbg !4766
  %18 = icmp eq %struct.onoff_monitor* %17, null, !dbg !4767
  br i1 %18, label %19, label %21, !dbg !4768

19:                                               ; preds = %16, %2
  %20 = load i32, i32* %12, align 4, !dbg !4769
  store i32 %20, i32* %9, align 4, !dbg !4771
  br label %54, !dbg !4771

21:                                               ; preds = %16
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !4772, metadata !DIExpression()), !dbg !4773
  %22 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4774
  %23 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %22, i32 0, i32 3, !dbg !4775
  store %struct.k_spinlock.13* %23, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !3602, metadata !DIExpression()) #9, !dbg !4776
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !4778
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !3610, metadata !DIExpression()) #9, !dbg !4779
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3612, metadata !DIExpression()) #9, !dbg !4780
  %25 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !4782, !srcloc !3620
  store i32 %25, i32* %4, align 4, !dbg !4782
  %26 = load i32, i32* %4, align 4, !dbg !4783
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4784
  store i32 %26, i32* %27, align 4, !dbg !4785
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4786
  %29 = load i32, i32* %28, align 4, !dbg !4786
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !4787
  store i32 %29, i32* %30, align 4, !dbg !4787
  %31 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4788
  %32 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %31, i32 0, i32 1, !dbg !4790
  %33 = load %struct.onoff_monitor*, %struct.onoff_monitor** %11, align 4, !dbg !4791
  %34 = getelementptr inbounds %struct.onoff_monitor, %struct.onoff_monitor* %33, i32 0, i32 0, !dbg !4792
  %35 = call zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %32, %struct._snode* noundef %34) #10, !dbg !4793
  br i1 %35, label %36, label %37, !dbg !4794

36:                                               ; preds = %21
  store i32 0, i32* %12, align 4, !dbg !4795
  br label %37, !dbg !4797

37:                                               ; preds = %36, %21
  %38 = load %struct.onoff_manager*, %struct.onoff_manager** %10, align 4, !dbg !4798
  %39 = getelementptr inbounds %struct.onoff_manager, %struct.onoff_manager* %38, i32 0, i32 3, !dbg !4799
  %40 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !4800
  %41 = bitcast i32* %40 to [1 x i32]*, !dbg !4800
  %42 = load [1 x i32], [1 x i32]* %41, align 4, !dbg !4800
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %44 = bitcast i32* %43 to [1 x i32]*
  store [1 x i32] %42, [1 x i32]* %44, align 4
  store %struct.k_spinlock.13* %39, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !3700, metadata !DIExpression()) #9, !dbg !4801
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !3706, metadata !DIExpression()) #9, !dbg !4803
  %45 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !4804
  %46 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !4805
  %47 = load i32, i32* %46, align 4, !dbg !4805
  store i32 %47, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3710, metadata !DIExpression()) #9, !dbg !4806
  %48 = load i32, i32* %3, align 4, !dbg !4808
  %49 = icmp ne i32 %48, 0, !dbg !4809
  br i1 %49, label %50, label %51, !dbg !4810

50:                                               ; preds = %37
  br label %52, !dbg !4811

51:                                               ; preds = %37
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !4812, !srcloc !3723
  br label %52, !dbg !4813

52:                                               ; preds = %50, %51
  %53 = load i32, i32* %12, align 4, !dbg !4814
  store i32 %53, i32* %9, align 4, !dbg !4815
  br label %54, !dbg !4815

54:                                               ; preds = %52, %19
  %55 = load i32, i32* %9, align 4, !dbg !4816
  ret i32 %55, !dbg !4816
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_sync_lock(%struct.onoff_sync_service* noundef %0, %struct.z_spinlock_key* noundef %1) #1 !dbg !4817 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.onoff_sync_service*, align 4
  %7 = alloca %struct.z_spinlock_key*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  store %struct.onoff_sync_service* %0, %struct.onoff_sync_service** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_sync_service** %6, metadata !4826, metadata !DIExpression()), !dbg !4827
  store %struct.z_spinlock_key* %1, %struct.z_spinlock_key** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key** %7, metadata !4828, metadata !DIExpression()), !dbg !4829
  %9 = load %struct.z_spinlock_key*, %struct.z_spinlock_key** %7, align 4, !dbg !4830
  %10 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %6, align 4, !dbg !4831
  %11 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %10, i32 0, i32 0, !dbg !4832
  store %struct.k_spinlock.13* %11, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !3602, metadata !DIExpression()) #9, !dbg !4833
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !4835
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !3610, metadata !DIExpression()) #9, !dbg !4836
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3612, metadata !DIExpression()) #9, !dbg !4837
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !4839, !srcloc !3620
  store i32 %13, i32* %3, align 4, !dbg !4839
  %14 = load i32, i32* %3, align 4, !dbg !4840
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !4841
  store i32 %14, i32* %15, align 4, !dbg !4842
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !4843
  %17 = load i32, i32* %16, align 4, !dbg !4843
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !4844
  store i32 %17, i32* %18, align 4, !dbg !4844
  %19 = bitcast %struct.z_spinlock_key* %9 to i8*, !dbg !4844
  %20 = bitcast %struct.z_spinlock_key* %8 to i8*, !dbg !4844
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %19, i8* align 4 %20, i32 4, i1 false), !dbg !4844
  %21 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %6, align 4, !dbg !4845
  %22 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %21, i32 0, i32 1, !dbg !4846
  %23 = load i32, i32* %22, align 4, !dbg !4846
  ret i32 %23, !dbg !4847
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @onoff_sync_finalize(%struct.onoff_sync_service* noundef %0, [1 x i32] %1, %struct.onoff_client* noundef %2, i32 noundef %3, i1 noundef zeroext %4) #1 !dbg !4848 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.onoff_sync_service*, align 4
  %11 = alloca %struct.onoff_client*, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0
  %17 = bitcast i32* %16 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %17, align 4
  store %struct.onoff_sync_service* %0, %struct.onoff_sync_service** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_sync_service** %10, metadata !4851, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !4853, metadata !DIExpression()), !dbg !4854
  store %struct.onoff_client* %2, %struct.onoff_client** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_client** %11, metadata !4855, metadata !DIExpression()), !dbg !4856
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4857, metadata !DIExpression()), !dbg !4858
  %18 = zext i1 %4 to i8
  store i8 %18, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !4859, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4861, metadata !DIExpression()), !dbg !4862
  store i32 2, i32* %14, align 4, !dbg !4862
  %19 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %10, align 4, !dbg !4863
  %20 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %19, i32 0, i32 1, !dbg !4865
  %21 = load i32, i32* %20, align 4, !dbg !4865
  %22 = icmp slt i32 %21, 0, !dbg !4866
  br i1 %22, label %23, label %26, !dbg !4867

23:                                               ; preds = %5
  %24 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %10, align 4, !dbg !4868
  %25 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %24, i32 0, i32 1, !dbg !4870
  store i32 0, i32* %25, align 4, !dbg !4871
  br label %26, !dbg !4872

26:                                               ; preds = %23, %5
  %27 = load i32, i32* %12, align 4, !dbg !4873
  %28 = icmp slt i32 %27, 0, !dbg !4875
  br i1 %28, label %29, label %33, !dbg !4876

29:                                               ; preds = %26
  %30 = load i32, i32* %12, align 4, !dbg !4877
  %31 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %10, align 4, !dbg !4879
  %32 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %31, i32 0, i32 1, !dbg !4880
  store i32 %30, i32* %32, align 4, !dbg !4881
  store i32 1, i32* %14, align 4, !dbg !4882
  br label %47, !dbg !4883

33:                                               ; preds = %26
  %34 = load i8, i8* %13, align 1, !dbg !4884
  %35 = trunc i8 %34 to i1, !dbg !4884
  br i1 %35, label %36, label %41, !dbg !4886

36:                                               ; preds = %33
  %37 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %10, align 4, !dbg !4887
  %38 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %37, i32 0, i32 1, !dbg !4889
  %39 = load i32, i32* %38, align 4, !dbg !4890
  %40 = add nsw i32 %39, 1, !dbg !4890
  store i32 %40, i32* %38, align 4, !dbg !4890
  br label %46, !dbg !4891

41:                                               ; preds = %33
  %42 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %10, align 4, !dbg !4892
  %43 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %42, i32 0, i32 1, !dbg !4894
  %44 = load i32, i32* %43, align 4, !dbg !4895
  %45 = sub nsw i32 %44, 1, !dbg !4895
  store i32 %45, i32* %43, align 4, !dbg !4895
  br label %46

46:                                               ; preds = %41, %36
  br label %47

47:                                               ; preds = %46, %29
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4896, metadata !DIExpression()), !dbg !4897
  %48 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %10, align 4, !dbg !4898
  %49 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %48, i32 0, i32 1, !dbg !4899
  %50 = load i32, i32* %49, align 4, !dbg !4899
  store i32 %50, i32* %15, align 4, !dbg !4897
  %51 = load %struct.onoff_sync_service*, %struct.onoff_sync_service** %10, align 4, !dbg !4900
  %52 = getelementptr inbounds %struct.onoff_sync_service, %struct.onoff_sync_service* %51, i32 0, i32 0, !dbg !4901
  %53 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !4902
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !4902
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !4902
  %56 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* %52, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !3700, metadata !DIExpression()) #9, !dbg !4903
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !3706, metadata !DIExpression()) #9, !dbg !4905
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !4906
  %59 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !4907
  %60 = load i32, i32* %59, align 4, !dbg !4907
  store i32 %60, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3710, metadata !DIExpression()) #9, !dbg !4908
  %61 = load i32, i32* %6, align 4, !dbg !4910
  %62 = icmp ne i32 %61, 0, !dbg !4911
  br i1 %62, label %63, label %64, !dbg !4912

63:                                               ; preds = %47
  br label %65, !dbg !4913

64:                                               ; preds = %47
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !4914, !srcloc !3723
  br label %65, !dbg !4915

65:                                               ; preds = %63, %64
  %66 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !4916
  %67 = icmp ne %struct.onoff_client* %66, null, !dbg !4916
  br i1 %67, label %68, label %72, !dbg !4918

68:                                               ; preds = %65
  %69 = load %struct.onoff_client*, %struct.onoff_client** %11, align 4, !dbg !4919
  %70 = load i32, i32* %14, align 4, !dbg !4921
  %71 = load i32, i32* %12, align 4, !dbg !4922
  call void @notify_one(%struct.onoff_manager* noundef null, %struct.onoff_client* noundef %69, i32 noundef %70, i32 noundef %71) #10, !dbg !4923
  br label %72, !dbg !4924

72:                                               ; preds = %68, %65
  %73 = load i32, i32* %15, align 4, !dbg !4925
  ret i32 %73, !dbg !4926
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_notify_validate(%struct.sys_notify* noundef %0) #1 !dbg !4927 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.sys_notify*, align 4
  %4 = alloca i32, align 4
  store %struct.sys_notify* %0, %struct.sys_notify** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.sys_notify** %3, metadata !4961, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4963, metadata !DIExpression()), !dbg !4964
  store i32 0, i32* %4, align 4, !dbg !4964
  %5 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !4965
  %6 = icmp eq %struct.sys_notify* %5, null, !dbg !4967
  br i1 %6, label %7, label %8, !dbg !4968

7:                                                ; preds = %1
  store i32 -22, i32* %2, align 4, !dbg !4969
  br label %29, !dbg !4969

8:                                                ; preds = %1
  %9 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !4971
  %10 = call i32 @sys_notify_get_method(%struct.sys_notify* noundef %9) #10, !dbg !4972
  switch i32 %10, label %20 [
    i32 1, label %11
    i32 3, label %12
  ], !dbg !4973

11:                                               ; preds = %8
  br label %21, !dbg !4974

12:                                               ; preds = %8
  %13 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !4976
  %14 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %13, i32 0, i32 0, !dbg !4978
  %15 = bitcast %union.method* %14 to void (...)**, !dbg !4979
  %16 = load void (...)*, void (...)** %15, align 4, !dbg !4979
  %17 = icmp eq void (...)* %16, null, !dbg !4980
  br i1 %17, label %18, label %19, !dbg !4981

18:                                               ; preds = %12
  store i32 -22, i32* %4, align 4, !dbg !4982
  br label %19, !dbg !4984

19:                                               ; preds = %18, %12
  br label %21, !dbg !4985

20:                                               ; preds = %8
  store i32 -22, i32* %4, align 4, !dbg !4986
  br label %21, !dbg !4987

21:                                               ; preds = %20, %19, %11
  %22 = load i32, i32* %4, align 4, !dbg !4988
  %23 = icmp eq i32 %22, 0, !dbg !4990
  br i1 %23, label %24, label %27, !dbg !4991

24:                                               ; preds = %21
  %25 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !4992
  %26 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %25, i32 0, i32 2, !dbg !4994
  store volatile i32 0, i32* %26, align 4, !dbg !4995
  br label %27, !dbg !4996

27:                                               ; preds = %24, %21
  %28 = load i32, i32* %4, align 4, !dbg !4997
  store i32 %28, i32* %2, align 4, !dbg !4998
  br label %29, !dbg !4998

29:                                               ; preds = %27, %7
  %30 = load i32, i32* %2, align 4, !dbg !4999
  ret i32 %30, !dbg !4999
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_notify_get_method(%struct.sys_notify* noundef %0) #1 !dbg !5000 {
  %2 = alloca %struct.sys_notify*, align 4
  %3 = alloca i32, align 4
  store %struct.sys_notify* %0, %struct.sys_notify** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.sys_notify** %2, metadata !5005, metadata !DIExpression()), !dbg !5006
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5007, metadata !DIExpression()), !dbg !5008
  %4 = load %struct.sys_notify*, %struct.sys_notify** %2, align 4, !dbg !5009
  %5 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %4, i32 0, i32 1, !dbg !5010
  %6 = load volatile i32, i32* %5, align 4, !dbg !5010
  %7 = lshr i32 %6, 0, !dbg !5011
  store i32 %7, i32* %3, align 4, !dbg !5008
  %8 = load i32, i32* %3, align 4, !dbg !5012
  %9 = and i32 %8, 3, !dbg !5013
  ret i32 %9, !dbg !5014
}

; Function Attrs: noinline nounwind optnone
define dso_local void (...)* @sys_notify_finalize(%struct.sys_notify* noundef %0, i32 noundef %1) #1 !dbg !5015 {
  %3 = alloca %struct.sys_notify*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_poll_signal*, align 4
  %6 = alloca void (...)*, align 4
  %7 = alloca i32, align 4
  store %struct.sys_notify* %0, %struct.sys_notify** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.sys_notify** %3, metadata !5018, metadata !DIExpression()), !dbg !5019
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5020, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.declare(metadata %struct.k_poll_signal** %5, metadata !5022, metadata !DIExpression()), !dbg !5023
  store %struct.k_poll_signal* null, %struct.k_poll_signal** %5, align 4, !dbg !5023
  call void @llvm.dbg.declare(metadata void (...)** %6, metadata !5024, metadata !DIExpression()), !dbg !5025
  store void (...)* null, void (...)** %6, align 4, !dbg !5025
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5026, metadata !DIExpression()), !dbg !5027
  %8 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !5028
  %9 = call i32 @sys_notify_get_method(%struct.sys_notify* noundef %8) #10, !dbg !5029
  store i32 %9, i32* %7, align 4, !dbg !5027
  %10 = load i32, i32* %4, align 4, !dbg !5030
  %11 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !5031
  %12 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %11, i32 0, i32 2, !dbg !5032
  store volatile i32 %10, i32* %12, align 4, !dbg !5033
  %13 = load i32, i32* %7, align 4, !dbg !5034
  switch i32 %13, label %25 [
    i32 1, label %14
    i32 3, label %15
    i32 2, label %20
  ], !dbg !5035

14:                                               ; preds = %2
  br label %26, !dbg !5036

15:                                               ; preds = %2
  %16 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !5038
  %17 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %16, i32 0, i32 0, !dbg !5039
  %18 = bitcast %union.method* %17 to void (...)**, !dbg !5040
  %19 = load void (...)*, void (...)** %18, align 4, !dbg !5040
  store void (...)* %19, void (...)** %6, align 4, !dbg !5041
  br label %26, !dbg !5042

20:                                               ; preds = %2
  %21 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !5043
  %22 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %21, i32 0, i32 0, !dbg !5044
  %23 = bitcast %union.method* %22 to %struct.k_poll_signal**, !dbg !5045
  %24 = load %struct.k_poll_signal*, %struct.k_poll_signal** %23, align 4, !dbg !5045
  store %struct.k_poll_signal* %24, %struct.k_poll_signal** %5, align 4, !dbg !5046
  br label %26, !dbg !5047

25:                                               ; preds = %2
  br label %26, !dbg !5048

26:                                               ; preds = %25, %20, %15, %14
  br label %27, !dbg !5049

27:                                               ; preds = %26
  call void asm sideeffect "", "~{memory}"() #9, !dbg !5050, !srcloc !5052
  br label %28, !dbg !5050

28:                                               ; preds = %27
  %29 = load %struct.sys_notify*, %struct.sys_notify** %3, align 4, !dbg !5053
  %30 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %29, i32 0, i32 1, !dbg !5054
  store volatile i32 0, i32* %30, align 4, !dbg !5055
  %31 = load void (...)*, void (...)** %6, align 4, !dbg !5056
  ret void (...)* %31, !dbg !5057
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) #1 !dbg !5058 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32 (...)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca [22 x i8], align 1
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.anon, align 8
  %18 = alloca %struct.conversion*, align 4
  %19 = alloca %union.argument_value*, align 4
  %20 = alloca i8*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  %24 = alloca i8*, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i8, align 1
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0
  %45 = bitcast i8** %44 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %45, align 4
  store i32 (...)* %0, i32 (...)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %8, metadata !5067, metadata !DIExpression()), !dbg !5068
  store i8* %1, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5069, metadata !DIExpression()), !dbg !5070
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !5073, metadata !DIExpression()), !dbg !5074
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.declare(metadata [22 x i8]* %12, metadata !5077, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5082, metadata !DIExpression()), !dbg !5083
  store i32 0, i32* %13, align 4, !dbg !5083
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5084, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.declare(metadata i8* %15, metadata !5086, metadata !DIExpression()), !dbg !5088
  %46 = load i32, i32* %11, align 4, !dbg !5089
  %47 = and i32 %46, 1, !dbg !5090
  %48 = icmp eq i32 %47, 1, !dbg !5091
  %49 = zext i1 %48 to i8, !dbg !5088
  store i8 %49, i8* %15, align 1, !dbg !5088
  br label %50, !dbg !5092

50:                                               ; preds = %833, %581, %432, %77, %5
  %51 = load i8*, i8** %10, align 4, !dbg !5093
  %52 = load i8, i8* %51, align 1, !dbg !5094
  %53 = zext i8 %52 to i32, !dbg !5094
  %54 = icmp ne i32 %53, 0, !dbg !5095
  br i1 %54, label %55, label %834, !dbg !5092

55:                                               ; preds = %50
  %56 = load i8*, i8** %10, align 4, !dbg !5096
  %57 = load i8, i8* %56, align 1, !dbg !5099
  %58 = zext i8 %57 to i32, !dbg !5099
  %59 = icmp ne i32 %58, 37, !dbg !5100
  br i1 %59, label %60, label %78, !dbg !5101

60:                                               ; preds = %55
  br label %61, !dbg !5102

61:                                               ; preds = %60
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5104, metadata !DIExpression()), !dbg !5106
  %62 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5106
  %63 = load i8*, i8** %10, align 4, !dbg !5106
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !5106
  store i8* %64, i8** %10, align 4, !dbg !5106
  %65 = load i8, i8* %63, align 1, !dbg !5106
  %66 = zext i8 %65 to i32, !dbg !5106
  %67 = load i8*, i8** %9, align 4, !dbg !5106
  %68 = bitcast i32 (...)* %62 to i32 (i32, i8*)*, !dbg !5106
  %69 = call i32 %68(i32 noundef %66, i8* noundef %67) #10, !dbg !5106
  store i32 %69, i32* %16, align 4, !dbg !5106
  %70 = load i32, i32* %16, align 4, !dbg !5107
  %71 = icmp slt i32 %70, 0, !dbg !5107
  br i1 %71, label %72, label %74, !dbg !5106

72:                                               ; preds = %61
  %73 = load i32, i32* %16, align 4, !dbg !5109
  store i32 %73, i32* %6, align 4, !dbg !5109
  br label %836, !dbg !5109

74:                                               ; preds = %61
  %75 = load i32, i32* %13, align 4, !dbg !5106
  %76 = add i32 %75, 1, !dbg !5106
  store i32 %76, i32* %13, align 4, !dbg !5106
  br label %77, !dbg !5106

77:                                               ; preds = %74
  br label %50, !dbg !5111, !llvm.loop !5112

78:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata %struct.anon* %17, metadata !5114, metadata !DIExpression()), !dbg !5159
  %79 = bitcast %struct.anon* %17 to i8*, !dbg !5159
  call void @llvm.memset.p0i8.i32(i8* align 8 %79, i8 0, i32 24, i1 false), !dbg !5159
  call void @llvm.dbg.declare(metadata %struct.conversion** %18, metadata !5160, metadata !DIExpression()), !dbg !5163
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 1, !dbg !5164
  store %struct.conversion* %80, %struct.conversion** %18, align 4, !dbg !5163
  call void @llvm.dbg.declare(metadata %union.argument_value** %19, metadata !5165, metadata !DIExpression()), !dbg !5168
  %81 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 0, !dbg !5169
  store %union.argument_value* %81, %union.argument_value** %19, align 4, !dbg !5168
  call void @llvm.dbg.declare(metadata i8** %20, metadata !5170, metadata !DIExpression()), !dbg !5171
  %82 = load i8*, i8** %10, align 4, !dbg !5172
  store i8* %82, i8** %20, align 4, !dbg !5171
  call void @llvm.dbg.declare(metadata i32* %21, metadata !5173, metadata !DIExpression()), !dbg !5174
  store i32 -1, i32* %21, align 4, !dbg !5174
  call void @llvm.dbg.declare(metadata i32* %22, metadata !5175, metadata !DIExpression()), !dbg !5176
  store i32 -1, i32* %22, align 4, !dbg !5176
  call void @llvm.dbg.declare(metadata i8** %23, metadata !5177, metadata !DIExpression()), !dbg !5178
  store i8* null, i8** %23, align 4, !dbg !5178
  call void @llvm.dbg.declare(metadata i8** %24, metadata !5179, metadata !DIExpression()), !dbg !5180
  %83 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !5181
  %84 = getelementptr inbounds i8, i8* %83, i32 22, !dbg !5182
  store i8* %84, i8** %24, align 4, !dbg !5180
  call void @llvm.dbg.declare(metadata i8* %25, metadata !5183, metadata !DIExpression()), !dbg !5184
  store i8 0, i8* %25, align 1, !dbg !5184
  %85 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5185
  %86 = load i8*, i8** %20, align 4, !dbg !5186
  %87 = call i8* @extract_conversion(%struct.conversion* noundef %85, i8* noundef %86) #10, !dbg !5187
  store i8* %87, i8** %10, align 4, !dbg !5188
  %88 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5189
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !5191
  %90 = load i24, i24* %89, align 4, !dbg !5191
  %91 = lshr i24 %90, 8, !dbg !5191
  %92 = and i24 %91, 1, !dbg !5191
  %93 = trunc i24 %92 to i1, !dbg !5191
  br i1 %93, label %94, label %111, !dbg !5192

94:                                               ; preds = %78
  %95 = bitcast %struct.__va_list* %7 to i8**, !dbg !5193
  %96 = load i8*, i8** %95, align 4, !dbg !5193
  %97 = getelementptr inbounds i8, i8* %96, i32 4, !dbg !5193
  store i8* %97, i8** %95, align 4, !dbg !5193
  %98 = bitcast i8* %96 to i32*, !dbg !5193
  %99 = load i32, i32* %98, align 4, !dbg !5193
  store i32 %99, i32* %21, align 4, !dbg !5195
  %100 = load i32, i32* %21, align 4, !dbg !5196
  %101 = icmp slt i32 %100, 0, !dbg !5198
  br i1 %101, label %102, label %110, !dbg !5199

102:                                              ; preds = %94
  %103 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5200
  %104 = bitcast %struct.conversion* %103 to i24*, !dbg !5202
  %105 = load i24, i24* %104, align 4, !dbg !5203
  %106 = and i24 %105, -5, !dbg !5203
  %107 = or i24 %106, 4, !dbg !5203
  store i24 %107, i24* %104, align 4, !dbg !5203
  %108 = load i32, i32* %21, align 4, !dbg !5204
  %109 = sub nsw i32 0, %108, !dbg !5205
  store i32 %109, i32* %21, align 4, !dbg !5206
  br label %110, !dbg !5207

110:                                              ; preds = %102, %94
  br label %125, !dbg !5208

111:                                              ; preds = %78
  %112 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5209
  %113 = bitcast %struct.conversion* %112 to i24*, !dbg !5211
  %114 = load i24, i24* %113, align 4, !dbg !5211
  %115 = lshr i24 %114, 7, !dbg !5211
  %116 = and i24 %115, 1, !dbg !5211
  %117 = trunc i24 %116 to i1, !dbg !5211
  br i1 %117, label %118, label %123, !dbg !5212

118:                                              ; preds = %111
  %119 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5213
  %120 = getelementptr inbounds %struct.conversion, %struct.conversion* %119, i32 0, i32 2, !dbg !5215
  %121 = bitcast %struct.z_spinlock_key* %120 to i32*, !dbg !5215
  %122 = load i32, i32* %121, align 4, !dbg !5215
  store i32 %122, i32* %21, align 4, !dbg !5216
  br label %124, !dbg !5217

123:                                              ; preds = %111
  br label %124

124:                                              ; preds = %123, %118
  br label %125

125:                                              ; preds = %124, %110
  %126 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5218
  %127 = bitcast %struct.conversion* %126 to i24*, !dbg !5220
  %128 = load i24, i24* %127, align 4, !dbg !5220
  %129 = lshr i24 %128, 10, !dbg !5220
  %130 = and i24 %129, 1, !dbg !5220
  %131 = trunc i24 %130 to i1, !dbg !5220
  br i1 %131, label %132, label %149, !dbg !5221

132:                                              ; preds = %125
  call void @llvm.dbg.declare(metadata i32* %26, metadata !5222, metadata !DIExpression()), !dbg !5224
  %133 = bitcast %struct.__va_list* %7 to i8**, !dbg !5225
  %134 = load i8*, i8** %133, align 4, !dbg !5225
  %135 = getelementptr inbounds i8, i8* %134, i32 4, !dbg !5225
  store i8* %135, i8** %133, align 4, !dbg !5225
  %136 = bitcast i8* %134 to i32*, !dbg !5225
  %137 = load i32, i32* %136, align 4, !dbg !5225
  store i32 %137, i32* %26, align 4, !dbg !5224
  %138 = load i32, i32* %26, align 4, !dbg !5226
  %139 = icmp slt i32 %138, 0, !dbg !5228
  br i1 %139, label %140, label %146, !dbg !5229

140:                                              ; preds = %132
  %141 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5230
  %142 = bitcast %struct.conversion* %141 to i24*, !dbg !5232
  %143 = load i24, i24* %142, align 4, !dbg !5233
  %144 = and i24 %143, -513, !dbg !5233
  %145 = or i24 %144, 0, !dbg !5233
  store i24 %145, i24* %142, align 4, !dbg !5233
  br label %148, !dbg !5234

146:                                              ; preds = %132
  %147 = load i32, i32* %26, align 4, !dbg !5235
  store i32 %147, i32* %22, align 4, !dbg !5237
  br label %148

148:                                              ; preds = %146, %140
  br label %163, !dbg !5238

149:                                              ; preds = %125
  %150 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5239
  %151 = bitcast %struct.conversion* %150 to i24*, !dbg !5241
  %152 = load i24, i24* %151, align 4, !dbg !5241
  %153 = lshr i24 %152, 9, !dbg !5241
  %154 = and i24 %153, 1, !dbg !5241
  %155 = trunc i24 %154 to i1, !dbg !5241
  br i1 %155, label %156, label %161, !dbg !5242

156:                                              ; preds = %149
  %157 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5243
  %158 = getelementptr inbounds %struct.conversion, %struct.conversion* %157, i32 0, i32 3, !dbg !5245
  %159 = bitcast %struct.z_spinlock_key* %158 to i32*, !dbg !5245
  %160 = load i32, i32* %159, align 4, !dbg !5245
  store i32 %160, i32* %22, align 4, !dbg !5246
  br label %162, !dbg !5247

161:                                              ; preds = %149
  br label %162

162:                                              ; preds = %161, %156
  br label %163

163:                                              ; preds = %162, %148
  %164 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5248
  %165 = getelementptr inbounds %struct.conversion, %struct.conversion* %164, i32 0, i32 2, !dbg !5249
  %166 = bitcast %struct.z_spinlock_key* %165 to i32*, !dbg !5249
  store i32 0, i32* %166, align 4, !dbg !5250
  %167 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5251
  %168 = getelementptr inbounds %struct.conversion, %struct.conversion* %167, i32 0, i32 3, !dbg !5252
  %169 = bitcast %struct.z_spinlock_key* %168 to i32*, !dbg !5252
  store i32 0, i32* %169, align 4, !dbg !5253
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5254, metadata !DIExpression()), !dbg !5255
  %170 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5256
  %171 = bitcast %struct.conversion* %170 to i24*, !dbg !5257
  %172 = load i24, i24* %171, align 4, !dbg !5257
  %173 = lshr i24 %172, 16, !dbg !5257
  %174 = and i24 %173, 7, !dbg !5257
  %175 = zext i24 %174 to i32, !dbg !5257
  store i32 %175, i32* %27, align 4, !dbg !5255
  call void @llvm.dbg.declare(metadata i32* %28, metadata !5258, metadata !DIExpression()), !dbg !5259
  %176 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5260
  %177 = bitcast %struct.conversion* %176 to i24*, !dbg !5261
  %178 = load i24, i24* %177, align 4, !dbg !5261
  %179 = lshr i24 %178, 11, !dbg !5261
  %180 = and i24 %179, 15, !dbg !5261
  %181 = zext i24 %180 to i32, !dbg !5261
  store i32 %181, i32* %28, align 4, !dbg !5259
  %182 = load i32, i32* %27, align 4, !dbg !5262
  %183 = icmp eq i32 %182, 1, !dbg !5264
  br i1 %183, label %184, label %262, !dbg !5265

184:                                              ; preds = %163
  %185 = load i32, i32* %28, align 4, !dbg !5266
  switch i32 %185, label %186 [
    i32 0, label %187
    i32 1, label %187
    i32 2, label %187
    i32 3, label %196
    i32 4, label %205
    i32 5, label %217
    i32 6, label %229
    i32 7, label %229
  ], !dbg !5268

186:                                              ; preds = %184
  br label %187, !dbg !5269

187:                                              ; preds = %184, %184, %184, %186
  %188 = bitcast %struct.__va_list* %7 to i8**, !dbg !5270
  %189 = load i8*, i8** %188, align 4, !dbg !5270
  %190 = getelementptr inbounds i8, i8* %189, i32 4, !dbg !5270
  store i8* %190, i8** %188, align 4, !dbg !5270
  %191 = bitcast i8* %189 to i32*, !dbg !5270
  %192 = load i32, i32* %191, align 4, !dbg !5270
  %193 = sext i32 %192 to i64, !dbg !5270
  %194 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5272
  %195 = bitcast %union.argument_value* %194 to i64*, !dbg !5273
  store i64 %193, i64* %195, align 8, !dbg !5274
  br label %238, !dbg !5275

196:                                              ; preds = %184
  %197 = bitcast %struct.__va_list* %7 to i8**, !dbg !5276
  %198 = load i8*, i8** %197, align 4, !dbg !5276
  %199 = getelementptr inbounds i8, i8* %198, i32 4, !dbg !5276
  store i8* %199, i8** %197, align 4, !dbg !5276
  %200 = bitcast i8* %198 to i32*, !dbg !5276
  %201 = load i32, i32* %200, align 4, !dbg !5276
  %202 = sext i32 %201 to i64, !dbg !5276
  %203 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5279
  %204 = bitcast %union.argument_value* %203 to i64*, !dbg !5280
  store i64 %202, i64* %204, align 8, !dbg !5281
  br label %238, !dbg !5282

205:                                              ; preds = %184
  %206 = bitcast %struct.__va_list* %7 to i8**, !dbg !5283
  %207 = load i8*, i8** %206, align 4, !dbg !5283
  %208 = ptrtoint i8* %207 to i32, !dbg !5283
  %209 = add i32 %208, 7, !dbg !5283
  %210 = and i32 %209, -8, !dbg !5283
  %211 = inttoptr i32 %210 to i8*, !dbg !5283
  %212 = getelementptr inbounds i8, i8* %211, i32 8, !dbg !5283
  store i8* %212, i8** %206, align 4, !dbg !5283
  %213 = bitcast i8* %211 to i64*, !dbg !5283
  %214 = load i64, i64* %213, align 8, !dbg !5283
  %215 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5284
  %216 = bitcast %union.argument_value* %215 to i64*, !dbg !5285
  store i64 %214, i64* %216, align 8, !dbg !5286
  br label %238, !dbg !5287

217:                                              ; preds = %184
  %218 = bitcast %struct.__va_list* %7 to i8**, !dbg !5288
  %219 = load i8*, i8** %218, align 4, !dbg !5288
  %220 = ptrtoint i8* %219 to i32, !dbg !5288
  %221 = add i32 %220, 7, !dbg !5288
  %222 = and i32 %221, -8, !dbg !5288
  %223 = inttoptr i32 %222 to i8*, !dbg !5288
  %224 = getelementptr inbounds i8, i8* %223, i32 8, !dbg !5288
  store i8* %224, i8** %218, align 4, !dbg !5288
  %225 = bitcast i8* %223 to i64*, !dbg !5288
  %226 = load i64, i64* %225, align 8, !dbg !5288
  %227 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5289
  %228 = bitcast %union.argument_value* %227 to i64*, !dbg !5290
  store i64 %226, i64* %228, align 8, !dbg !5291
  br label %238, !dbg !5292

229:                                              ; preds = %184, %184
  %230 = bitcast %struct.__va_list* %7 to i8**, !dbg !5293
  %231 = load i8*, i8** %230, align 4, !dbg !5293
  %232 = getelementptr inbounds i8, i8* %231, i32 4, !dbg !5293
  store i8* %232, i8** %230, align 4, !dbg !5293
  %233 = bitcast i8* %231 to i32*, !dbg !5293
  %234 = load i32, i32* %233, align 4, !dbg !5293
  %235 = sext i32 %234 to i64, !dbg !5294
  %236 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5295
  %237 = bitcast %union.argument_value* %236 to i64*, !dbg !5296
  store i64 %235, i64* %237, align 8, !dbg !5297
  br label %238, !dbg !5298

238:                                              ; preds = %229, %217, %205, %196, %187
  %239 = load i32, i32* %28, align 4, !dbg !5299
  %240 = icmp eq i32 %239, 1, !dbg !5301
  br i1 %240, label %241, label %249, !dbg !5302

241:                                              ; preds = %238
  %242 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5303
  %243 = bitcast %union.argument_value* %242 to i64*, !dbg !5305
  %244 = load i64, i64* %243, align 8, !dbg !5305
  %245 = trunc i64 %244 to i8, !dbg !5306
  %246 = sext i8 %245 to i64, !dbg !5306
  %247 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5307
  %248 = bitcast %union.argument_value* %247 to i64*, !dbg !5308
  store i64 %246, i64* %248, align 8, !dbg !5309
  br label %261, !dbg !5310

249:                                              ; preds = %238
  %250 = load i32, i32* %28, align 4, !dbg !5311
  %251 = icmp eq i32 %250, 2, !dbg !5313
  br i1 %251, label %252, label %260, !dbg !5314

252:                                              ; preds = %249
  %253 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5315
  %254 = bitcast %union.argument_value* %253 to i64*, !dbg !5317
  %255 = load i64, i64* %254, align 8, !dbg !5317
  %256 = trunc i64 %255 to i16, !dbg !5318
  %257 = sext i16 %256 to i64, !dbg !5318
  %258 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5319
  %259 = bitcast %union.argument_value* %258 to i64*, !dbg !5320
  store i64 %257, i64* %259, align 8, !dbg !5321
  br label %260, !dbg !5322

260:                                              ; preds = %252, %249
  br label %261

261:                                              ; preds = %260, %241
  br label %404, !dbg !5323

262:                                              ; preds = %163
  %263 = load i32, i32* %27, align 4, !dbg !5324
  %264 = icmp eq i32 %263, 2, !dbg !5326
  br i1 %264, label %265, label %359, !dbg !5327

265:                                              ; preds = %262
  %266 = load i32, i32* %28, align 4, !dbg !5328
  switch i32 %266, label %267 [
    i32 0, label %268
    i32 1, label %268
    i32 2, label %268
    i32 3, label %277
    i32 4, label %302
    i32 5, label %314
    i32 6, label %326
    i32 7, label %326
  ], !dbg !5330

267:                                              ; preds = %265
  br label %268, !dbg !5331

268:                                              ; preds = %265, %265, %265, %267
  %269 = bitcast %struct.__va_list* %7 to i8**, !dbg !5332
  %270 = load i8*, i8** %269, align 4, !dbg !5332
  %271 = getelementptr inbounds i8, i8* %270, i32 4, !dbg !5332
  store i8* %271, i8** %269, align 4, !dbg !5332
  %272 = bitcast i8* %270 to i32*, !dbg !5332
  %273 = load i32, i32* %272, align 4, !dbg !5332
  %274 = zext i32 %273 to i64, !dbg !5332
  %275 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5334
  %276 = bitcast %union.argument_value* %275 to i64*, !dbg !5335
  store i64 %274, i64* %276, align 8, !dbg !5336
  br label %335, !dbg !5337

277:                                              ; preds = %265
  %278 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5338
  %279 = getelementptr inbounds %struct.conversion, %struct.conversion* %278, i32 0, i32 1, !dbg !5340
  %280 = load i8, i8* %279, align 1, !dbg !5340
  %281 = zext i8 %280 to i32, !dbg !5338
  %282 = icmp eq i32 %281, 99, !dbg !5341
  br i1 %282, label %283, label %292, !dbg !5342

283:                                              ; preds = %277
  %284 = bitcast %struct.__va_list* %7 to i8**, !dbg !5343
  %285 = load i8*, i8** %284, align 4, !dbg !5343
  %286 = getelementptr inbounds i8, i8* %285, i32 4, !dbg !5343
  store i8* %286, i8** %284, align 4, !dbg !5343
  %287 = bitcast i8* %285 to i32*, !dbg !5343
  %288 = load i32, i32* %287, align 4, !dbg !5343
  %289 = zext i32 %288 to i64, !dbg !5345
  %290 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5346
  %291 = bitcast %union.argument_value* %290 to i64*, !dbg !5347
  store i64 %289, i64* %291, align 8, !dbg !5348
  br label %301, !dbg !5349

292:                                              ; preds = %277
  %293 = bitcast %struct.__va_list* %7 to i8**, !dbg !5350
  %294 = load i8*, i8** %293, align 4, !dbg !5350
  %295 = getelementptr inbounds i8, i8* %294, i32 4, !dbg !5350
  store i8* %295, i8** %293, align 4, !dbg !5350
  %296 = bitcast i8* %294 to i32*, !dbg !5350
  %297 = load i32, i32* %296, align 4, !dbg !5350
  %298 = zext i32 %297 to i64, !dbg !5350
  %299 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5352
  %300 = bitcast %union.argument_value* %299 to i64*, !dbg !5353
  store i64 %298, i64* %300, align 8, !dbg !5354
  br label %301

301:                                              ; preds = %292, %283
  br label %335, !dbg !5355

302:                                              ; preds = %265
  %303 = bitcast %struct.__va_list* %7 to i8**, !dbg !5356
  %304 = load i8*, i8** %303, align 4, !dbg !5356
  %305 = ptrtoint i8* %304 to i32, !dbg !5356
  %306 = add i32 %305, 7, !dbg !5356
  %307 = and i32 %306, -8, !dbg !5356
  %308 = inttoptr i32 %307 to i8*, !dbg !5356
  %309 = getelementptr inbounds i8, i8* %308, i32 8, !dbg !5356
  store i8* %309, i8** %303, align 4, !dbg !5356
  %310 = bitcast i8* %308 to i64*, !dbg !5356
  %311 = load i64, i64* %310, align 8, !dbg !5356
  %312 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5357
  %313 = bitcast %union.argument_value* %312 to i64*, !dbg !5358
  store i64 %311, i64* %313, align 8, !dbg !5359
  br label %335, !dbg !5360

314:                                              ; preds = %265
  %315 = bitcast %struct.__va_list* %7 to i8**, !dbg !5361
  %316 = load i8*, i8** %315, align 4, !dbg !5361
  %317 = ptrtoint i8* %316 to i32, !dbg !5361
  %318 = add i32 %317, 7, !dbg !5361
  %319 = and i32 %318, -8, !dbg !5361
  %320 = inttoptr i32 %319 to i8*, !dbg !5361
  %321 = getelementptr inbounds i8, i8* %320, i32 8, !dbg !5361
  store i8* %321, i8** %315, align 4, !dbg !5361
  %322 = bitcast i8* %320 to i64*, !dbg !5361
  %323 = load i64, i64* %322, align 8, !dbg !5361
  %324 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5362
  %325 = bitcast %union.argument_value* %324 to i64*, !dbg !5363
  store i64 %323, i64* %325, align 8, !dbg !5364
  br label %335, !dbg !5365

326:                                              ; preds = %265, %265
  %327 = bitcast %struct.__va_list* %7 to i8**, !dbg !5366
  %328 = load i8*, i8** %327, align 4, !dbg !5366
  %329 = getelementptr inbounds i8, i8* %328, i32 4, !dbg !5366
  store i8* %329, i8** %327, align 4, !dbg !5366
  %330 = bitcast i8* %328 to i32*, !dbg !5366
  %331 = load i32, i32* %330, align 4, !dbg !5366
  %332 = zext i32 %331 to i64, !dbg !5367
  %333 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5368
  %334 = bitcast %union.argument_value* %333 to i64*, !dbg !5369
  store i64 %332, i64* %334, align 8, !dbg !5370
  br label %335, !dbg !5371

335:                                              ; preds = %326, %314, %302, %301, %268
  %336 = load i32, i32* %28, align 4, !dbg !5372
  %337 = icmp eq i32 %336, 1, !dbg !5374
  br i1 %337, label %338, label %346, !dbg !5375

338:                                              ; preds = %335
  %339 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5376
  %340 = bitcast %union.argument_value* %339 to i64*, !dbg !5378
  %341 = load i64, i64* %340, align 8, !dbg !5378
  %342 = trunc i64 %341 to i8, !dbg !5379
  %343 = zext i8 %342 to i64, !dbg !5379
  %344 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5380
  %345 = bitcast %union.argument_value* %344 to i64*, !dbg !5381
  store i64 %343, i64* %345, align 8, !dbg !5382
  br label %358, !dbg !5383

346:                                              ; preds = %335
  %347 = load i32, i32* %28, align 4, !dbg !5384
  %348 = icmp eq i32 %347, 2, !dbg !5386
  br i1 %348, label %349, label %357, !dbg !5387

349:                                              ; preds = %346
  %350 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5388
  %351 = bitcast %union.argument_value* %350 to i64*, !dbg !5390
  %352 = load i64, i64* %351, align 8, !dbg !5390
  %353 = trunc i64 %352 to i16, !dbg !5391
  %354 = zext i16 %353 to i64, !dbg !5391
  %355 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5392
  %356 = bitcast %union.argument_value* %355 to i64*, !dbg !5393
  store i64 %354, i64* %356, align 8, !dbg !5394
  br label %357, !dbg !5395

357:                                              ; preds = %349, %346
  br label %358

358:                                              ; preds = %357, %338
  br label %403, !dbg !5396

359:                                              ; preds = %262
  %360 = load i32, i32* %27, align 4, !dbg !5397
  %361 = icmp eq i32 %360, 4, !dbg !5399
  br i1 %361, label %362, label %390, !dbg !5400

362:                                              ; preds = %359
  %363 = load i32, i32* %28, align 4, !dbg !5401
  %364 = icmp eq i32 %363, 8, !dbg !5404
  br i1 %364, label %365, label %377, !dbg !5405

365:                                              ; preds = %362
  %366 = bitcast %struct.__va_list* %7 to i8**, !dbg !5406
  %367 = load i8*, i8** %366, align 4, !dbg !5406
  %368 = ptrtoint i8* %367 to i32, !dbg !5406
  %369 = add i32 %368, 7, !dbg !5406
  %370 = and i32 %369, -8, !dbg !5406
  %371 = inttoptr i32 %370 to i8*, !dbg !5406
  %372 = getelementptr inbounds i8, i8* %371, i32 8, !dbg !5406
  store i8* %372, i8** %366, align 4, !dbg !5406
  %373 = bitcast i8* %371 to double*, !dbg !5406
  %374 = load double, double* %373, align 8, !dbg !5406
  %375 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5408
  %376 = bitcast %union.argument_value* %375 to double*, !dbg !5409
  store double %374, double* %376, align 8, !dbg !5410
  br label %389, !dbg !5411

377:                                              ; preds = %362
  %378 = bitcast %struct.__va_list* %7 to i8**, !dbg !5412
  %379 = load i8*, i8** %378, align 4, !dbg !5412
  %380 = ptrtoint i8* %379 to i32, !dbg !5412
  %381 = add i32 %380, 7, !dbg !5412
  %382 = and i32 %381, -8, !dbg !5412
  %383 = inttoptr i32 %382 to i8*, !dbg !5412
  %384 = getelementptr inbounds i8, i8* %383, i32 8, !dbg !5412
  store i8* %384, i8** %378, align 4, !dbg !5412
  %385 = bitcast i8* %383 to double*, !dbg !5412
  %386 = load double, double* %385, align 8, !dbg !5412
  %387 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5414
  %388 = bitcast %union.argument_value* %387 to double*, !dbg !5415
  store double %386, double* %388, align 8, !dbg !5416
  br label %389

389:                                              ; preds = %377, %365
  br label %402, !dbg !5417

390:                                              ; preds = %359
  %391 = load i32, i32* %27, align 4, !dbg !5418
  %392 = icmp eq i32 %391, 3, !dbg !5420
  br i1 %392, label %393, label %401, !dbg !5421

393:                                              ; preds = %390
  %394 = bitcast %struct.__va_list* %7 to i8**, !dbg !5422
  %395 = load i8*, i8** %394, align 4, !dbg !5422
  %396 = getelementptr inbounds i8, i8* %395, i32 4, !dbg !5422
  store i8* %396, i8** %394, align 4, !dbg !5422
  %397 = bitcast i8* %395 to i8**, !dbg !5422
  %398 = load i8*, i8** %397, align 4, !dbg !5422
  %399 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5424
  %400 = bitcast %union.argument_value* %399 to i8**, !dbg !5425
  store i8* %398, i8** %400, align 8, !dbg !5426
  br label %401, !dbg !5427

401:                                              ; preds = %393, %390
  br label %402

402:                                              ; preds = %401, %389
  br label %403

403:                                              ; preds = %402, %358
  br label %404

404:                                              ; preds = %403, %261
  %405 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5428
  %406 = bitcast %struct.conversion* %405 to i24*, !dbg !5430
  %407 = load i24, i24* %406, align 4, !dbg !5430
  %408 = and i24 %407, 1, !dbg !5430
  %409 = trunc i24 %408 to i1, !dbg !5430
  br i1 %409, label %417, label %410, !dbg !5431

410:                                              ; preds = %404
  %411 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5432
  %412 = bitcast %struct.conversion* %411 to i24*, !dbg !5433
  %413 = load i24, i24* %412, align 4, !dbg !5433
  %414 = lshr i24 %413, 1, !dbg !5433
  %415 = and i24 %414, 1, !dbg !5433
  %416 = trunc i24 %415 to i1, !dbg !5433
  br i1 %416, label %417, label %433, !dbg !5434

417:                                              ; preds = %410, %404
  br label %418, !dbg !5435

418:                                              ; preds = %417
  call void @llvm.dbg.declare(metadata i32* %29, metadata !5437, metadata !DIExpression()), !dbg !5439
  %419 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5439
  %420 = load i8*, i8** %9, align 4, !dbg !5439
  %421 = load i8*, i8** %20, align 4, !dbg !5439
  %422 = load i8*, i8** %10, align 4, !dbg !5439
  %423 = call i32 @outs(i32 (...)* noundef %419, i8* noundef %420, i8* noundef %421, i8* noundef %422) #10, !dbg !5439
  store i32 %423, i32* %29, align 4, !dbg !5439
  %424 = load i32, i32* %29, align 4, !dbg !5440
  %425 = icmp slt i32 %424, 0, !dbg !5440
  br i1 %425, label %426, label %428, !dbg !5439

426:                                              ; preds = %418
  %427 = load i32, i32* %29, align 4, !dbg !5442
  store i32 %427, i32* %6, align 4, !dbg !5442
  br label %836, !dbg !5442

428:                                              ; preds = %418
  %429 = load i32, i32* %29, align 4, !dbg !5439
  %430 = load i32, i32* %13, align 4, !dbg !5439
  %431 = add i32 %430, %429, !dbg !5439
  store i32 %431, i32* %13, align 4, !dbg !5439
  br label %432, !dbg !5439

432:                                              ; preds = %428
  br label %50, !dbg !5444, !llvm.loop !5112

433:                                              ; preds = %410
  %434 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5445
  %435 = getelementptr inbounds %struct.conversion, %struct.conversion* %434, i32 0, i32 1, !dbg !5446
  %436 = load i8, i8* %435, align 1, !dbg !5446
  %437 = zext i8 %436 to i32, !dbg !5445
  switch i32 %437, label %577 [
    i32 37, label %438
    i32 115, label %452
    i32 99, label %469
    i32 100, label %478
    i32 105, label %478
    i32 111, label %511
    i32 117, label %511
    i32 120, label %511
    i32 88, label %511
    i32 112, label %545
    i32 110, label %570
    i32 97, label %576
    i32 65, label %576
    i32 101, label %576
    i32 69, label %576
    i32 102, label %576
    i32 70, label %576
    i32 103, label %576
    i32 71, label %576
  ], !dbg !5447

438:                                              ; preds = %433
  br label %439, !dbg !5448

439:                                              ; preds = %438
  call void @llvm.dbg.declare(metadata i32* %30, metadata !5450, metadata !DIExpression()), !dbg !5452
  %440 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5452
  %441 = load i8*, i8** %9, align 4, !dbg !5452
  %442 = bitcast i32 (...)* %440 to i32 (i32, i8*)*, !dbg !5452
  %443 = call i32 %442(i32 noundef 37, i8* noundef %441) #10, !dbg !5452
  store i32 %443, i32* %30, align 4, !dbg !5452
  %444 = load i32, i32* %30, align 4, !dbg !5453
  %445 = icmp slt i32 %444, 0, !dbg !5453
  br i1 %445, label %446, label %448, !dbg !5452

446:                                              ; preds = %439
  %447 = load i32, i32* %30, align 4, !dbg !5455
  store i32 %447, i32* %6, align 4, !dbg !5455
  br label %836, !dbg !5455

448:                                              ; preds = %439
  %449 = load i32, i32* %13, align 4, !dbg !5452
  %450 = add i32 %449, 1, !dbg !5452
  store i32 %450, i32* %13, align 4, !dbg !5452
  br label %451, !dbg !5452

451:                                              ; preds = %448
  br label %578, !dbg !5457

452:                                              ; preds = %433
  %453 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5458
  %454 = bitcast %union.argument_value* %453 to i8**, !dbg !5460
  %455 = load i8*, i8** %454, align 8, !dbg !5460
  store i8* %455, i8** %23, align 4, !dbg !5461
  call void @llvm.dbg.declare(metadata i32* %31, metadata !5462, metadata !DIExpression()), !dbg !5463
  %456 = load i32, i32* %22, align 4, !dbg !5464
  %457 = icmp sge i32 %456, 0, !dbg !5466
  br i1 %457, label %458, label %462, !dbg !5467

458:                                              ; preds = %452
  %459 = load i8*, i8** %23, align 4, !dbg !5468
  %460 = load i32, i32* %22, align 4, !dbg !5470
  %461 = call i32 @strnlen(i8* noundef %459, i32 noundef %460) #10, !dbg !5471
  store i32 %461, i32* %31, align 4, !dbg !5472
  br label %465, !dbg !5473

462:                                              ; preds = %452
  %463 = load i8*, i8** %23, align 4, !dbg !5474
  %464 = call i32 @strlen(i8* noundef %463) #10, !dbg !5476
  store i32 %464, i32* %31, align 4, !dbg !5477
  br label %465

465:                                              ; preds = %462, %458
  %466 = load i8*, i8** %23, align 4, !dbg !5478
  %467 = load i32, i32* %31, align 4, !dbg !5479
  %468 = getelementptr inbounds i8, i8* %466, i32 %467, !dbg !5480
  store i8* %468, i8** %24, align 4, !dbg !5481
  store i32 -1, i32* %22, align 4, !dbg !5482
  br label %578, !dbg !5483

469:                                              ; preds = %433
  %470 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !5484
  store i8* %470, i8** %23, align 4, !dbg !5485
  %471 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5486
  %472 = bitcast %union.argument_value* %471 to i64*, !dbg !5487
  %473 = load i64, i64* %472, align 8, !dbg !5487
  %474 = trunc i64 %473 to i8, !dbg !5488
  %475 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !5489
  store i8 %474, i8* %475, align 1, !dbg !5490
  %476 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !5491
  %477 = getelementptr inbounds i8, i8* %476, i32 1, !dbg !5492
  store i8* %477, i8** %24, align 4, !dbg !5493
  br label %578, !dbg !5494

478:                                              ; preds = %433, %433
  %479 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5495
  %480 = bitcast %struct.conversion* %479 to i24*, !dbg !5497
  %481 = load i24, i24* %480, align 4, !dbg !5497
  %482 = lshr i24 %481, 3, !dbg !5497
  %483 = and i24 %482, 1, !dbg !5497
  %484 = trunc i24 %483 to i1, !dbg !5497
  br i1 %484, label %485, label %486, !dbg !5498

485:                                              ; preds = %478
  store i8 43, i8* %25, align 1, !dbg !5499
  br label %495, !dbg !5501

486:                                              ; preds = %478
  %487 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5502
  %488 = bitcast %struct.conversion* %487 to i24*, !dbg !5504
  %489 = load i24, i24* %488, align 4, !dbg !5504
  %490 = lshr i24 %489, 4, !dbg !5504
  %491 = and i24 %490, 1, !dbg !5504
  %492 = trunc i24 %491 to i1, !dbg !5504
  br i1 %492, label %493, label %494, !dbg !5505

493:                                              ; preds = %486
  store i8 32, i8* %25, align 1, !dbg !5506
  br label %494, !dbg !5508

494:                                              ; preds = %493, %486
  br label %495

495:                                              ; preds = %494, %485
  %496 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5509
  %497 = bitcast %union.argument_value* %496 to i64*, !dbg !5510
  %498 = load i64, i64* %497, align 8, !dbg !5510
  store i64 %498, i64* %14, align 8, !dbg !5511
  %499 = load i64, i64* %14, align 8, !dbg !5512
  %500 = icmp slt i64 %499, 0, !dbg !5514
  br i1 %500, label %501, label %506, !dbg !5515

501:                                              ; preds = %495
  store i8 45, i8* %25, align 1, !dbg !5516
  %502 = load i64, i64* %14, align 8, !dbg !5518
  %503 = sub nsw i64 0, %502, !dbg !5519
  %504 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5520
  %505 = bitcast %union.argument_value* %504 to i64*, !dbg !5521
  store i64 %503, i64* %505, align 8, !dbg !5522
  br label %510, !dbg !5523

506:                                              ; preds = %495
  %507 = load i64, i64* %14, align 8, !dbg !5524
  %508 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5526
  %509 = bitcast %union.argument_value* %508 to i64*, !dbg !5527
  store i64 %507, i64* %509, align 8, !dbg !5528
  br label %510

510:                                              ; preds = %506, %501
  br label %511, !dbg !5529

511:                                              ; preds = %433, %433, %433, %433, %510
  %512 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5530
  %513 = bitcast %union.argument_value* %512 to i64*, !dbg !5531
  %514 = load i64, i64* %513, align 8, !dbg !5531
  %515 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5532
  %516 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !5533
  %517 = load i8*, i8** %24, align 4, !dbg !5534
  %518 = call i8* @encode_uint(i64 noundef %514, %struct.conversion* noundef %515, i8* noundef %516, i8* noundef %517) #10, !dbg !5535
  store i8* %518, i8** %23, align 4, !dbg !5536
  br label %519, !dbg !5537

519:                                              ; preds = %550, %511
  call void @llvm.dbg.label(metadata !5538), !dbg !5539
  %520 = load i32, i32* %22, align 4, !dbg !5540
  %521 = icmp sge i32 %520, 0, !dbg !5542
  br i1 %521, label %522, label %544, !dbg !5543

522:                                              ; preds = %519
  call void @llvm.dbg.declare(metadata i32* %32, metadata !5544, metadata !DIExpression()), !dbg !5546
  %523 = load i8*, i8** %24, align 4, !dbg !5547
  %524 = load i8*, i8** %23, align 4, !dbg !5548
  %525 = ptrtoint i8* %523 to i32, !dbg !5549
  %526 = ptrtoint i8* %524 to i32, !dbg !5549
  %527 = sub i32 %525, %526, !dbg !5549
  store i32 %527, i32* %32, align 4, !dbg !5546
  %528 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5550
  %529 = bitcast %struct.conversion* %528 to i24*, !dbg !5551
  %530 = load i24, i24* %529, align 4, !dbg !5552
  %531 = and i24 %530, -65, !dbg !5552
  %532 = or i24 %531, 0, !dbg !5552
  store i24 %532, i24* %529, align 4, !dbg !5552
  %533 = load i32, i32* %32, align 4, !dbg !5553
  %534 = load i32, i32* %22, align 4, !dbg !5555
  %535 = icmp ult i32 %533, %534, !dbg !5556
  br i1 %535, label %536, label %543, !dbg !5557

536:                                              ; preds = %522
  %537 = load i32, i32* %22, align 4, !dbg !5558
  %538 = load i32, i32* %32, align 4, !dbg !5560
  %539 = sub nsw i32 %537, %538, !dbg !5561
  %540 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5562
  %541 = getelementptr inbounds %struct.conversion, %struct.conversion* %540, i32 0, i32 2, !dbg !5563
  %542 = bitcast %struct.z_spinlock_key* %541 to i32*, !dbg !5563
  store i32 %539, i32* %542, align 4, !dbg !5564
  br label %543, !dbg !5565

543:                                              ; preds = %536, %522
  br label %544, !dbg !5566

544:                                              ; preds = %543, %519
  br label %578, !dbg !5567

545:                                              ; preds = %433
  %546 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5568
  %547 = bitcast %union.argument_value* %546 to i8**, !dbg !5570
  %548 = load i8*, i8** %547, align 8, !dbg !5570
  %549 = icmp ne i8* %548, null, !dbg !5571
  br i1 %549, label %550, label %567, !dbg !5572

550:                                              ; preds = %545
  %551 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5573
  %552 = bitcast %union.argument_value* %551 to i8**, !dbg !5575
  %553 = load i8*, i8** %552, align 8, !dbg !5575
  %554 = ptrtoint i8* %553 to i32, !dbg !5576
  %555 = zext i32 %554 to i64, !dbg !5576
  %556 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5577
  %557 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !5578
  %558 = load i8*, i8** %24, align 4, !dbg !5579
  %559 = call i8* @encode_uint(i64 noundef %555, %struct.conversion* noundef %556, i8* noundef %557, i8* noundef %558) #10, !dbg !5580
  store i8* %559, i8** %23, align 4, !dbg !5581
  %560 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5582
  %561 = bitcast %struct.conversion* %560 to i24*, !dbg !5583
  %562 = load i24, i24* %561, align 4, !dbg !5584
  %563 = and i24 %562, -1048577, !dbg !5584
  %564 = or i24 %563, 1048576, !dbg !5584
  store i24 %564, i24* %561, align 4, !dbg !5584
  %565 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5585
  %566 = getelementptr inbounds %struct.conversion, %struct.conversion* %565, i32 0, i32 1, !dbg !5586
  store i8 120, i8* %566, align 1, !dbg !5587
  br label %519, !dbg !5588

567:                                              ; preds = %545
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), i8** %23, align 4, !dbg !5589
  %568 = load i8*, i8** %23, align 4, !dbg !5590
  %569 = getelementptr inbounds i8, i8* %568, i32 5, !dbg !5591
  store i8* %569, i8** %24, align 4, !dbg !5592
  br label %578, !dbg !5593

570:                                              ; preds = %433
  %571 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5594
  %572 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !5597
  %573 = bitcast %union.argument_value* %572 to i8**, !dbg !5598
  %574 = load i8*, i8** %573, align 8, !dbg !5598
  %575 = load i32, i32* %13, align 4, !dbg !5599
  call void @store_count(%struct.conversion* noundef %571, i8* noundef %574, i32 noundef %575) #10, !dbg !5600
  br label %578, !dbg !5601

576:                                              ; preds = %433, %433, %433, %433, %433, %433, %433, %433
  br label %578, !dbg !5602

577:                                              ; preds = %433
  br label %578, !dbg !5603

578:                                              ; preds = %577, %576, %570, %567, %544, %469, %465, %451
  %579 = load i8*, i8** %23, align 4, !dbg !5604
  %580 = icmp eq i8* %579, null, !dbg !5606
  br i1 %580, label %581, label %582, !dbg !5607

581:                                              ; preds = %578
  br label %50, !dbg !5608, !llvm.loop !5112

582:                                              ; preds = %578
  call void @llvm.dbg.declare(metadata i32* %33, metadata !5610, metadata !DIExpression()), !dbg !5611
  %583 = load i8*, i8** %24, align 4, !dbg !5612
  %584 = load i8*, i8** %23, align 4, !dbg !5613
  %585 = ptrtoint i8* %583 to i32, !dbg !5614
  %586 = ptrtoint i8* %584 to i32, !dbg !5614
  %587 = sub i32 %585, %586, !dbg !5614
  store i32 %587, i32* %33, align 4, !dbg !5611
  call void @llvm.dbg.declare(metadata i32* %34, metadata !5615, metadata !DIExpression()), !dbg !5616
  store i32 0, i32* %34, align 4, !dbg !5616
  %588 = load i8, i8* %25, align 1, !dbg !5617
  %589 = zext i8 %588 to i32, !dbg !5617
  %590 = icmp ne i32 %589, 0, !dbg !5619
  br i1 %590, label %591, label %594, !dbg !5620

591:                                              ; preds = %582
  %592 = load i32, i32* %33, align 4, !dbg !5621
  %593 = add i32 %592, 1, !dbg !5621
  store i32 %593, i32* %33, align 4, !dbg !5621
  br label %594, !dbg !5623

594:                                              ; preds = %591, %582
  %595 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5624
  %596 = bitcast %struct.conversion* %595 to i24*, !dbg !5626
  %597 = load i24, i24* %596, align 4, !dbg !5626
  %598 = lshr i24 %597, 20, !dbg !5626
  %599 = and i24 %598, 1, !dbg !5626
  %600 = trunc i24 %599 to i1, !dbg !5626
  br i1 %600, label %601, label %604, !dbg !5627

601:                                              ; preds = %594
  %602 = load i32, i32* %33, align 4, !dbg !5628
  %603 = add i32 %602, 2, !dbg !5628
  store i32 %603, i32* %33, align 4, !dbg !5628
  br label %615, !dbg !5630

604:                                              ; preds = %594
  %605 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5631
  %606 = bitcast %struct.conversion* %605 to i24*, !dbg !5633
  %607 = load i24, i24* %606, align 4, !dbg !5633
  %608 = lshr i24 %607, 19, !dbg !5633
  %609 = and i24 %608, 1, !dbg !5633
  %610 = trunc i24 %609 to i1, !dbg !5633
  br i1 %610, label %611, label %614, !dbg !5634

611:                                              ; preds = %604
  %612 = load i32, i32* %33, align 4, !dbg !5635
  %613 = add i32 %612, 1, !dbg !5635
  store i32 %613, i32* %33, align 4, !dbg !5635
  br label %614, !dbg !5637

614:                                              ; preds = %611, %604
  br label %615

615:                                              ; preds = %614, %601
  %616 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5638
  %617 = getelementptr inbounds %struct.conversion, %struct.conversion* %616, i32 0, i32 2, !dbg !5639
  %618 = bitcast %struct.z_spinlock_key* %617 to i32*, !dbg !5639
  %619 = load i32, i32* %618, align 4, !dbg !5639
  %620 = load i32, i32* %33, align 4, !dbg !5640
  %621 = add i32 %620, %619, !dbg !5640
  store i32 %621, i32* %33, align 4, !dbg !5640
  %622 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5641
  %623 = bitcast %struct.conversion* %622 to i24*, !dbg !5643
  %624 = load i24, i24* %623, align 4, !dbg !5643
  %625 = lshr i24 %624, 22, !dbg !5643
  %626 = and i24 %625, 1, !dbg !5643
  %627 = trunc i24 %626 to i1, !dbg !5643
  br i1 %627, label %628, label %635, !dbg !5644

628:                                              ; preds = %615
  %629 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5645
  %630 = getelementptr inbounds %struct.conversion, %struct.conversion* %629, i32 0, i32 3, !dbg !5647
  %631 = bitcast %struct.z_spinlock_key* %630 to i32*, !dbg !5647
  %632 = load i32, i32* %631, align 4, !dbg !5647
  %633 = load i32, i32* %33, align 4, !dbg !5648
  %634 = add i32 %633, %632, !dbg !5648
  store i32 %634, i32* %33, align 4, !dbg !5648
  br label %635, !dbg !5649

635:                                              ; preds = %628, %615
  %636 = load i32, i32* %21, align 4, !dbg !5650
  %637 = icmp sgt i32 %636, 0, !dbg !5652
  br i1 %637, label %638, label %699, !dbg !5653

638:                                              ; preds = %635
  %639 = load i32, i32* %33, align 4, !dbg !5654
  %640 = load i32, i32* %21, align 4, !dbg !5656
  %641 = sub nsw i32 %640, %639, !dbg !5656
  store i32 %641, i32* %21, align 4, !dbg !5656
  %642 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5657
  %643 = bitcast %struct.conversion* %642 to i24*, !dbg !5659
  %644 = load i24, i24* %643, align 4, !dbg !5659
  %645 = lshr i24 %644, 2, !dbg !5659
  %646 = and i24 %645, 1, !dbg !5659
  %647 = trunc i24 %646 to i1, !dbg !5659
  br i1 %647, label %698, label %648, !dbg !5660

648:                                              ; preds = %638
  call void @llvm.dbg.declare(metadata i8* %35, metadata !5661, metadata !DIExpression()), !dbg !5663
  store i8 32, i8* %35, align 1, !dbg !5663
  %649 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5664
  %650 = bitcast %struct.conversion* %649 to i24*, !dbg !5666
  %651 = load i24, i24* %650, align 4, !dbg !5666
  %652 = lshr i24 %651, 6, !dbg !5666
  %653 = and i24 %652, 1, !dbg !5666
  %654 = trunc i24 %653 to i1, !dbg !5666
  br i1 %654, label %655, label %676, !dbg !5667

655:                                              ; preds = %648
  %656 = load i8, i8* %25, align 1, !dbg !5668
  %657 = zext i8 %656 to i32, !dbg !5668
  %658 = icmp ne i32 %657, 0, !dbg !5671
  br i1 %658, label %659, label %675, !dbg !5672

659:                                              ; preds = %655
  br label %660, !dbg !5673

660:                                              ; preds = %659
  call void @llvm.dbg.declare(metadata i32* %36, metadata !5675, metadata !DIExpression()), !dbg !5677
  %661 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5677
  %662 = load i8, i8* %25, align 1, !dbg !5677
  %663 = zext i8 %662 to i32, !dbg !5677
  %664 = load i8*, i8** %9, align 4, !dbg !5677
  %665 = bitcast i32 (...)* %661 to i32 (i32, i8*)*, !dbg !5677
  %666 = call i32 %665(i32 noundef %663, i8* noundef %664) #10, !dbg !5677
  store i32 %666, i32* %36, align 4, !dbg !5677
  %667 = load i32, i32* %36, align 4, !dbg !5678
  %668 = icmp slt i32 %667, 0, !dbg !5678
  br i1 %668, label %669, label %671, !dbg !5677

669:                                              ; preds = %660
  %670 = load i32, i32* %36, align 4, !dbg !5680
  store i32 %670, i32* %6, align 4, !dbg !5680
  br label %836, !dbg !5680

671:                                              ; preds = %660
  %672 = load i32, i32* %13, align 4, !dbg !5677
  %673 = add i32 %672, 1, !dbg !5677
  store i32 %673, i32* %13, align 4, !dbg !5677
  br label %674, !dbg !5677

674:                                              ; preds = %671
  store i8 0, i8* %25, align 1, !dbg !5682
  br label %675, !dbg !5683

675:                                              ; preds = %674, %655
  store i8 48, i8* %35, align 1, !dbg !5684
  br label %676, !dbg !5685

676:                                              ; preds = %675, %648
  br label %677, !dbg !5686

677:                                              ; preds = %696, %676
  %678 = load i32, i32* %21, align 4, !dbg !5687
  %679 = add nsw i32 %678, -1, !dbg !5687
  store i32 %679, i32* %21, align 4, !dbg !5687
  %680 = icmp sgt i32 %678, 0, !dbg !5688
  br i1 %680, label %681, label %697, !dbg !5686

681:                                              ; preds = %677
  br label %682, !dbg !5689

682:                                              ; preds = %681
  call void @llvm.dbg.declare(metadata i32* %37, metadata !5691, metadata !DIExpression()), !dbg !5693
  %683 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5693
  %684 = load i8, i8* %35, align 1, !dbg !5693
  %685 = zext i8 %684 to i32, !dbg !5693
  %686 = load i8*, i8** %9, align 4, !dbg !5693
  %687 = bitcast i32 (...)* %683 to i32 (i32, i8*)*, !dbg !5693
  %688 = call i32 %687(i32 noundef %685, i8* noundef %686) #10, !dbg !5693
  store i32 %688, i32* %37, align 4, !dbg !5693
  %689 = load i32, i32* %37, align 4, !dbg !5694
  %690 = icmp slt i32 %689, 0, !dbg !5694
  br i1 %690, label %691, label %693, !dbg !5693

691:                                              ; preds = %682
  %692 = load i32, i32* %37, align 4, !dbg !5696
  store i32 %692, i32* %6, align 4, !dbg !5696
  br label %836, !dbg !5696

693:                                              ; preds = %682
  %694 = load i32, i32* %13, align 4, !dbg !5693
  %695 = add i32 %694, 1, !dbg !5693
  store i32 %695, i32* %13, align 4, !dbg !5693
  br label %696, !dbg !5693

696:                                              ; preds = %693
  br label %677, !dbg !5686, !llvm.loop !5698

697:                                              ; preds = %677
  br label %698, !dbg !5700

698:                                              ; preds = %697, %638
  br label %699, !dbg !5701

699:                                              ; preds = %698, %635
  %700 = load i8, i8* %25, align 1, !dbg !5702
  %701 = zext i8 %700 to i32, !dbg !5702
  %702 = icmp ne i32 %701, 0, !dbg !5704
  br i1 %702, label %703, label %719, !dbg !5705

703:                                              ; preds = %699
  br label %704, !dbg !5706

704:                                              ; preds = %703
  call void @llvm.dbg.declare(metadata i32* %38, metadata !5708, metadata !DIExpression()), !dbg !5710
  %705 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5710
  %706 = load i8, i8* %25, align 1, !dbg !5710
  %707 = zext i8 %706 to i32, !dbg !5710
  %708 = load i8*, i8** %9, align 4, !dbg !5710
  %709 = bitcast i32 (...)* %705 to i32 (i32, i8*)*, !dbg !5710
  %710 = call i32 %709(i32 noundef %707, i8* noundef %708) #10, !dbg !5710
  store i32 %710, i32* %38, align 4, !dbg !5710
  %711 = load i32, i32* %38, align 4, !dbg !5711
  %712 = icmp slt i32 %711, 0, !dbg !5711
  br i1 %712, label %713, label %715, !dbg !5710

713:                                              ; preds = %704
  %714 = load i32, i32* %38, align 4, !dbg !5713
  store i32 %714, i32* %6, align 4, !dbg !5713
  br label %836, !dbg !5713

715:                                              ; preds = %704
  %716 = load i32, i32* %13, align 4, !dbg !5710
  %717 = add i32 %716, 1, !dbg !5710
  store i32 %717, i32* %13, align 4, !dbg !5710
  br label %718, !dbg !5710

718:                                              ; preds = %715
  br label %719, !dbg !5715

719:                                              ; preds = %718, %699
  %720 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5716
  %721 = bitcast %struct.conversion* %720 to i24*, !dbg !5720
  %722 = load i24, i24* %721, align 4, !dbg !5720
  %723 = lshr i24 %722, 20, !dbg !5720
  %724 = and i24 %723, 1, !dbg !5720
  %725 = trunc i24 %724 to i1, !dbg !5720
  %726 = zext i1 %725 to i32, !dbg !5716
  %727 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5721
  %728 = bitcast %struct.conversion* %727 to i24*, !dbg !5722
  %729 = load i24, i24* %728, align 4, !dbg !5722
  %730 = lshr i24 %729, 19, !dbg !5722
  %731 = and i24 %730, 1, !dbg !5722
  %732 = trunc i24 %731 to i1, !dbg !5722
  %733 = zext i1 %732 to i32, !dbg !5721
  %734 = or i32 %726, %733, !dbg !5723
  %735 = icmp ne i32 %734, 0, !dbg !5723
  br i1 %735, label %736, label %750, !dbg !5724

736:                                              ; preds = %719
  br label %737, !dbg !5725

737:                                              ; preds = %736
  call void @llvm.dbg.declare(metadata i32* %39, metadata !5727, metadata !DIExpression()), !dbg !5729
  %738 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5729
  %739 = load i8*, i8** %9, align 4, !dbg !5729
  %740 = bitcast i32 (...)* %738 to i32 (i32, i8*)*, !dbg !5729
  %741 = call i32 %740(i32 noundef 48, i8* noundef %739) #10, !dbg !5729
  store i32 %741, i32* %39, align 4, !dbg !5729
  %742 = load i32, i32* %39, align 4, !dbg !5730
  %743 = icmp slt i32 %742, 0, !dbg !5730
  br i1 %743, label %744, label %746, !dbg !5729

744:                                              ; preds = %737
  %745 = load i32, i32* %39, align 4, !dbg !5732
  store i32 %745, i32* %6, align 4, !dbg !5732
  br label %836, !dbg !5732

746:                                              ; preds = %737
  %747 = load i32, i32* %13, align 4, !dbg !5729
  %748 = add i32 %747, 1, !dbg !5729
  store i32 %748, i32* %13, align 4, !dbg !5729
  br label %749, !dbg !5729

749:                                              ; preds = %746
  br label %750, !dbg !5734

750:                                              ; preds = %749, %719
  %751 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5735
  %752 = bitcast %struct.conversion* %751 to i24*, !dbg !5737
  %753 = load i24, i24* %752, align 4, !dbg !5737
  %754 = lshr i24 %753, 20, !dbg !5737
  %755 = and i24 %754, 1, !dbg !5737
  %756 = trunc i24 %755 to i1, !dbg !5737
  br i1 %756, label %757, label %775, !dbg !5738

757:                                              ; preds = %750
  br label %758, !dbg !5739

758:                                              ; preds = %757
  call void @llvm.dbg.declare(metadata i32* %40, metadata !5741, metadata !DIExpression()), !dbg !5743
  %759 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5743
  %760 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5743
  %761 = getelementptr inbounds %struct.conversion, %struct.conversion* %760, i32 0, i32 1, !dbg !5743
  %762 = load i8, i8* %761, align 1, !dbg !5743
  %763 = zext i8 %762 to i32, !dbg !5743
  %764 = load i8*, i8** %9, align 4, !dbg !5743
  %765 = bitcast i32 (...)* %759 to i32 (i32, i8*)*, !dbg !5743
  %766 = call i32 %765(i32 noundef %763, i8* noundef %764) #10, !dbg !5743
  store i32 %766, i32* %40, align 4, !dbg !5743
  %767 = load i32, i32* %40, align 4, !dbg !5744
  %768 = icmp slt i32 %767, 0, !dbg !5744
  br i1 %768, label %769, label %771, !dbg !5743

769:                                              ; preds = %758
  %770 = load i32, i32* %40, align 4, !dbg !5746
  store i32 %770, i32* %6, align 4, !dbg !5746
  br label %836, !dbg !5746

771:                                              ; preds = %758
  %772 = load i32, i32* %13, align 4, !dbg !5743
  %773 = add i32 %772, 1, !dbg !5743
  store i32 %773, i32* %13, align 4, !dbg !5743
  br label %774, !dbg !5743

774:                                              ; preds = %771
  br label %775, !dbg !5748

775:                                              ; preds = %774, %750
  %776 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5749
  %777 = getelementptr inbounds %struct.conversion, %struct.conversion* %776, i32 0, i32 2, !dbg !5750
  %778 = bitcast %struct.z_spinlock_key* %777 to i32*, !dbg !5750
  %779 = load i32, i32* %778, align 4, !dbg !5750
  store i32 %779, i32* %34, align 4, !dbg !5751
  br label %780, !dbg !5752

780:                                              ; preds = %797, %775
  %781 = load i32, i32* %34, align 4, !dbg !5753
  %782 = add nsw i32 %781, -1, !dbg !5753
  store i32 %782, i32* %34, align 4, !dbg !5753
  %783 = icmp sgt i32 %781, 0, !dbg !5754
  br i1 %783, label %784, label %798, !dbg !5752

784:                                              ; preds = %780
  br label %785, !dbg !5755

785:                                              ; preds = %784
  call void @llvm.dbg.declare(metadata i32* %41, metadata !5757, metadata !DIExpression()), !dbg !5759
  %786 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5759
  %787 = load i8*, i8** %9, align 4, !dbg !5759
  %788 = bitcast i32 (...)* %786 to i32 (i32, i8*)*, !dbg !5759
  %789 = call i32 %788(i32 noundef 48, i8* noundef %787) #10, !dbg !5759
  store i32 %789, i32* %41, align 4, !dbg !5759
  %790 = load i32, i32* %41, align 4, !dbg !5760
  %791 = icmp slt i32 %790, 0, !dbg !5760
  br i1 %791, label %792, label %794, !dbg !5759

792:                                              ; preds = %785
  %793 = load i32, i32* %41, align 4, !dbg !5762
  store i32 %793, i32* %6, align 4, !dbg !5762
  br label %836, !dbg !5762

794:                                              ; preds = %785
  %795 = load i32, i32* %13, align 4, !dbg !5759
  %796 = add i32 %795, 1, !dbg !5759
  store i32 %796, i32* %13, align 4, !dbg !5759
  br label %797, !dbg !5759

797:                                              ; preds = %794
  br label %780, !dbg !5752, !llvm.loop !5764

798:                                              ; preds = %780
  br label %799, !dbg !5766

799:                                              ; preds = %798
  call void @llvm.dbg.declare(metadata i32* %42, metadata !5767, metadata !DIExpression()), !dbg !5769
  %800 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5769
  %801 = load i8*, i8** %9, align 4, !dbg !5769
  %802 = load i8*, i8** %23, align 4, !dbg !5769
  %803 = load i8*, i8** %24, align 4, !dbg !5769
  %804 = call i32 @outs(i32 (...)* noundef %800, i8* noundef %801, i8* noundef %802, i8* noundef %803) #10, !dbg !5769
  store i32 %804, i32* %42, align 4, !dbg !5769
  %805 = load i32, i32* %42, align 4, !dbg !5770
  %806 = icmp slt i32 %805, 0, !dbg !5770
  br i1 %806, label %807, label %809, !dbg !5769

807:                                              ; preds = %799
  %808 = load i32, i32* %42, align 4, !dbg !5772
  store i32 %808, i32* %6, align 4, !dbg !5772
  br label %836, !dbg !5772

809:                                              ; preds = %799
  %810 = load i32, i32* %42, align 4, !dbg !5769
  %811 = load i32, i32* %13, align 4, !dbg !5769
  %812 = add i32 %811, %810, !dbg !5769
  store i32 %812, i32* %13, align 4, !dbg !5769
  br label %813, !dbg !5769

813:                                              ; preds = %809
  br label %814, !dbg !5774

814:                                              ; preds = %830, %813
  %815 = load i32, i32* %21, align 4, !dbg !5775
  %816 = icmp sgt i32 %815, 0, !dbg !5776
  br i1 %816, label %817, label %833, !dbg !5774

817:                                              ; preds = %814
  br label %818, !dbg !5777

818:                                              ; preds = %817
  call void @llvm.dbg.declare(metadata i32* %43, metadata !5779, metadata !DIExpression()), !dbg !5781
  %819 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5781
  %820 = load i8*, i8** %9, align 4, !dbg !5781
  %821 = bitcast i32 (...)* %819 to i32 (i32, i8*)*, !dbg !5781
  %822 = call i32 %821(i32 noundef 32, i8* noundef %820) #10, !dbg !5781
  store i32 %822, i32* %43, align 4, !dbg !5781
  %823 = load i32, i32* %43, align 4, !dbg !5782
  %824 = icmp slt i32 %823, 0, !dbg !5782
  br i1 %824, label %825, label %827, !dbg !5781

825:                                              ; preds = %818
  %826 = load i32, i32* %43, align 4, !dbg !5784
  store i32 %826, i32* %6, align 4, !dbg !5784
  br label %836, !dbg !5784

827:                                              ; preds = %818
  %828 = load i32, i32* %13, align 4, !dbg !5781
  %829 = add i32 %828, 1, !dbg !5781
  store i32 %829, i32* %13, align 4, !dbg !5781
  br label %830, !dbg !5781

830:                                              ; preds = %827
  %831 = load i32, i32* %21, align 4, !dbg !5786
  %832 = add nsw i32 %831, -1, !dbg !5786
  store i32 %832, i32* %21, align 4, !dbg !5786
  br label %814, !dbg !5774, !llvm.loop !5787

833:                                              ; preds = %814
  br label %50, !dbg !5092, !llvm.loop !5112

834:                                              ; preds = %50
  %835 = load i32, i32* %13, align 4, !dbg !5789
  store i32 %835, i32* %6, align 4, !dbg !5790
  br label %836, !dbg !5790

836:                                              ; preds = %834, %825, %807, %792, %769, %744, %713, %691, %669, %446, %426, %72
  %837 = load i32, i32* %6, align 4, !dbg !5791
  ret i32 %837, !dbg !5791
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_conversion(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5792 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.conversion, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5795, metadata !DIExpression()), !dbg !5796
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5797, metadata !DIExpression()), !dbg !5798
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5799
  %8 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %9 = load i24, i24* %8, align 4, !dbg !5800
  %10 = and i24 %9, -2, !dbg !5800
  %11 = or i24 %10, 0, !dbg !5800
  store i24 %11, i24* %8, align 4, !dbg !5800
  %12 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %13 = load i24, i24* %12, align 4, !dbg !5800
  %14 = and i24 %13, -3, !dbg !5800
  %15 = or i24 %14, 0, !dbg !5800
  store i24 %15, i24* %12, align 4, !dbg !5800
  %16 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %17 = load i24, i24* %16, align 4, !dbg !5800
  %18 = and i24 %17, -5, !dbg !5800
  %19 = or i24 %18, 0, !dbg !5800
  store i24 %19, i24* %16, align 4, !dbg !5800
  %20 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %21 = load i24, i24* %20, align 4, !dbg !5800
  %22 = and i24 %21, -9, !dbg !5800
  %23 = or i24 %22, 0, !dbg !5800
  store i24 %23, i24* %20, align 4, !dbg !5800
  %24 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %25 = load i24, i24* %24, align 4, !dbg !5800
  %26 = and i24 %25, -17, !dbg !5800
  %27 = or i24 %26, 0, !dbg !5800
  store i24 %27, i24* %24, align 4, !dbg !5800
  %28 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %29 = load i24, i24* %28, align 4, !dbg !5800
  %30 = and i24 %29, -33, !dbg !5800
  %31 = or i24 %30, 0, !dbg !5800
  store i24 %31, i24* %28, align 4, !dbg !5800
  %32 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %33 = load i24, i24* %32, align 4, !dbg !5800
  %34 = and i24 %33, -65, !dbg !5800
  %35 = or i24 %34, 0, !dbg !5800
  store i24 %35, i24* %32, align 4, !dbg !5800
  %36 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %37 = load i24, i24* %36, align 4, !dbg !5800
  %38 = and i24 %37, -129, !dbg !5800
  %39 = or i24 %38, 0, !dbg !5800
  store i24 %39, i24* %36, align 4, !dbg !5800
  %40 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %41 = load i24, i24* %40, align 4, !dbg !5800
  %42 = and i24 %41, -257, !dbg !5800
  %43 = or i24 %42, 0, !dbg !5800
  store i24 %43, i24* %40, align 4, !dbg !5800
  %44 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %45 = load i24, i24* %44, align 4, !dbg !5800
  %46 = and i24 %45, -513, !dbg !5800
  %47 = or i24 %46, 0, !dbg !5800
  store i24 %47, i24* %44, align 4, !dbg !5800
  %48 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %49 = load i24, i24* %48, align 4, !dbg !5800
  %50 = and i24 %49, -1025, !dbg !5800
  %51 = or i24 %50, 0, !dbg !5800
  store i24 %51, i24* %48, align 4, !dbg !5800
  %52 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %53 = load i24, i24* %52, align 4, !dbg !5800
  %54 = and i24 %53, -30721, !dbg !5800
  %55 = or i24 %54, 0, !dbg !5800
  store i24 %55, i24* %52, align 4, !dbg !5800
  %56 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %57 = load i24, i24* %56, align 4, !dbg !5800
  %58 = and i24 %57, -32769, !dbg !5800
  %59 = or i24 %58, 0, !dbg !5800
  store i24 %59, i24* %56, align 4, !dbg !5800
  %60 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %61 = load i24, i24* %60, align 4, !dbg !5800
  %62 = and i24 %61, -458753, !dbg !5800
  %63 = or i24 %62, 0, !dbg !5800
  store i24 %63, i24* %60, align 4, !dbg !5800
  %64 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %65 = load i24, i24* %64, align 4, !dbg !5800
  %66 = and i24 %65, -524289, !dbg !5800
  %67 = or i24 %66, 0, !dbg !5800
  store i24 %67, i24* %64, align 4, !dbg !5800
  %68 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %69 = load i24, i24* %68, align 4, !dbg !5800
  %70 = and i24 %69, -1048577, !dbg !5800
  %71 = or i24 %70, 0, !dbg !5800
  store i24 %71, i24* %68, align 4, !dbg !5800
  %72 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %73 = load i24, i24* %72, align 4, !dbg !5800
  %74 = and i24 %73, -2097153, !dbg !5800
  %75 = or i24 %74, 0, !dbg !5800
  store i24 %75, i24* %72, align 4, !dbg !5800
  %76 = bitcast %struct.conversion* %6 to i24*, !dbg !5800
  %77 = load i24, i24* %76, align 4, !dbg !5800
  %78 = and i24 %77, -4194305, !dbg !5800
  %79 = or i24 %78, 0, !dbg !5800
  store i24 %79, i24* %76, align 4, !dbg !5800
  %80 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 1, !dbg !5800
  store i8 0, i8* %80, align 1, !dbg !5800
  %81 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 2, !dbg !5800
  %82 = bitcast %struct.z_spinlock_key* %81 to i8*, !dbg !5800
  call void @llvm.memset.p0i8.i32(i8* align 4 %82, i8 0, i32 4, i1 false), !dbg !5800
  %83 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 3, !dbg !5800
  %84 = bitcast %struct.z_spinlock_key* %83 to i8*, !dbg !5800
  call void @llvm.memset.p0i8.i32(i8* align 4 %84, i8 0, i32 4, i1 false), !dbg !5800
  %85 = bitcast %struct.conversion* %7 to i8*, !dbg !5801
  %86 = bitcast %struct.conversion* %6 to i8*, !dbg !5801
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %85, i8* align 4 %86, i32 12, i1 false), !dbg !5801
  %87 = load i8*, i8** %5, align 4, !dbg !5802
  %88 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !5802
  store i8* %88, i8** %5, align 4, !dbg !5802
  %89 = load i8*, i8** %5, align 4, !dbg !5803
  %90 = load i8, i8* %89, align 1, !dbg !5805
  %91 = zext i8 %90 to i32, !dbg !5805
  %92 = icmp eq i32 %91, 37, !dbg !5806
  br i1 %92, label %93, label %100, !dbg !5807

93:                                               ; preds = %2
  %94 = load i8*, i8** %5, align 4, !dbg !5808
  %95 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !5808
  store i8* %95, i8** %5, align 4, !dbg !5808
  %96 = load i8, i8* %94, align 1, !dbg !5810
  %97 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5811
  %98 = getelementptr inbounds %struct.conversion, %struct.conversion* %97, i32 0, i32 1, !dbg !5812
  store i8 %96, i8* %98, align 1, !dbg !5813
  %99 = load i8*, i8** %5, align 4, !dbg !5814
  store i8* %99, i8** %3, align 4, !dbg !5815
  br label %117, !dbg !5815

100:                                              ; preds = %2
  %101 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5816
  %102 = load i8*, i8** %5, align 4, !dbg !5817
  %103 = call i8* @extract_flags(%struct.conversion* noundef %101, i8* noundef %102) #10, !dbg !5818
  store i8* %103, i8** %5, align 4, !dbg !5819
  %104 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5820
  %105 = load i8*, i8** %5, align 4, !dbg !5821
  %106 = call i8* @extract_width(%struct.conversion* noundef %104, i8* noundef %105) #10, !dbg !5822
  store i8* %106, i8** %5, align 4, !dbg !5823
  %107 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5824
  %108 = load i8*, i8** %5, align 4, !dbg !5825
  %109 = call i8* @extract_prec(%struct.conversion* noundef %107, i8* noundef %108) #10, !dbg !5826
  store i8* %109, i8** %5, align 4, !dbg !5827
  %110 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5828
  %111 = load i8*, i8** %5, align 4, !dbg !5829
  %112 = call i8* @extract_length(%struct.conversion* noundef %110, i8* noundef %111) #10, !dbg !5830
  store i8* %112, i8** %5, align 4, !dbg !5831
  %113 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5832
  %114 = load i8*, i8** %5, align 4, !dbg !5833
  %115 = call i8* @extract_specifier(%struct.conversion* noundef %113, i8* noundef %114) #10, !dbg !5834
  store i8* %115, i8** %5, align 4, !dbg !5835
  %116 = load i8*, i8** %5, align 4, !dbg !5836
  store i8* %116, i8** %3, align 4, !dbg !5837
  br label %117, !dbg !5837

117:                                              ; preds = %100, %93
  %118 = load i8*, i8** %3, align 4, !dbg !5838
  ret i8* %118, !dbg !5838
}

; Function Attrs: noinline nounwind optnone
define internal i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !5839 {
  %5 = alloca i32, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !5842, metadata !DIExpression()), !dbg !5843
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5844, metadata !DIExpression()), !dbg !5845
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5846, metadata !DIExpression()), !dbg !5847
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5848, metadata !DIExpression()), !dbg !5849
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5850, metadata !DIExpression()), !dbg !5851
  store i32 0, i32* %10, align 4, !dbg !5851
  br label %12, !dbg !5852

12:                                               ; preds = %41, %4
  %13 = load i8*, i8** %8, align 4, !dbg !5853
  %14 = load i8*, i8** %9, align 4, !dbg !5854
  %15 = icmp ult i8* %13, %14, !dbg !5855
  br i1 %15, label %26, label %16, !dbg !5856

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !5857
  %18 = icmp eq i8* %17, null, !dbg !5858
  br i1 %18, label %19, label %24, !dbg !5859

19:                                               ; preds = %16
  %20 = load i8*, i8** %8, align 4, !dbg !5860
  %21 = load i8, i8* %20, align 1, !dbg !5861
  %22 = zext i8 %21 to i32, !dbg !5861
  %23 = icmp ne i32 %22, 0, !dbg !5859
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i1 [ false, %16 ], [ %23, %19 ], !dbg !5862
  br label %26, !dbg !5856

26:                                               ; preds = %24, %12
  %27 = phi i1 [ true, %12 ], [ %25, %24 ]
  br i1 %27, label %28, label %44, !dbg !5852

28:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5863, metadata !DIExpression()), !dbg !5865
  %29 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !5866
  %30 = load i8*, i8** %8, align 4, !dbg !5867
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5867
  store i8* %31, i8** %8, align 4, !dbg !5867
  %32 = load i8, i8* %30, align 1, !dbg !5868
  %33 = zext i8 %32 to i32, !dbg !5869
  %34 = load i8*, i8** %7, align 4, !dbg !5870
  %35 = bitcast i32 (...)* %29 to i32 (i32, i8*)*, !dbg !5866
  %36 = call i32 %35(i32 noundef %33, i8* noundef %34) #10, !dbg !5866
  store i32 %36, i32* %11, align 4, !dbg !5865
  %37 = load i32, i32* %11, align 4, !dbg !5871
  %38 = icmp slt i32 %37, 0, !dbg !5873
  br i1 %38, label %39, label %41, !dbg !5874

39:                                               ; preds = %28
  %40 = load i32, i32* %11, align 4, !dbg !5875
  store i32 %40, i32* %5, align 4, !dbg !5877
  br label %46, !dbg !5877

41:                                               ; preds = %28
  %42 = load i32, i32* %10, align 4, !dbg !5878
  %43 = add i32 %42, 1, !dbg !5878
  store i32 %43, i32* %10, align 4, !dbg !5878
  br label %12, !dbg !5852, !llvm.loop !5879

44:                                               ; preds = %26
  %45 = load i32, i32* %10, align 4, !dbg !5881
  store i32 %45, i32* %5, align 4, !dbg !5882
  br label %46, !dbg !5882

46:                                               ; preds = %44, %39
  %47 = load i32, i32* %5, align 4, !dbg !5883
  ret i32 %47, !dbg !5883
}

; Function Attrs: noinline nounwind optnone
define internal i8* @encode_uint(i64 noundef %0, %struct.conversion* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !5884 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.conversion*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5887, metadata !DIExpression()), !dbg !5888
  store %struct.conversion* %1, %struct.conversion** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %6, metadata !5889, metadata !DIExpression()), !dbg !5890
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5891, metadata !DIExpression()), !dbg !5892
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5895, metadata !DIExpression()), !dbg !5896
  %13 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5897
  %14 = getelementptr inbounds %struct.conversion, %struct.conversion* %13, i32 0, i32 1, !dbg !5898
  %15 = load i8, i8* %14, align 1, !dbg !5898
  %16 = zext i8 %15 to i32, !dbg !5899
  %17 = call i32 @isupper(i32 noundef %16) #10, !dbg !5900
  %18 = icmp ne i32 %17, 0, !dbg !5900
  %19 = zext i1 %18 to i8, !dbg !5896
  store i8 %19, i8* %9, align 1, !dbg !5896
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5901, metadata !DIExpression()), !dbg !5903
  %20 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5904
  %21 = getelementptr inbounds %struct.conversion, %struct.conversion* %20, i32 0, i32 1, !dbg !5905
  %22 = load i8, i8* %21, align 1, !dbg !5905
  %23 = call i32 @conversion_radix(i8 noundef zeroext %22) #10, !dbg !5906
  store i32 %23, i32* %10, align 4, !dbg !5903
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5907, metadata !DIExpression()), !dbg !5908
  %24 = load i8*, i8** %7, align 4, !dbg !5909
  %25 = load i8*, i8** %8, align 4, !dbg !5910
  %26 = load i8*, i8** %7, align 4, !dbg !5911
  %27 = ptrtoint i8* %25 to i32, !dbg !5912
  %28 = ptrtoint i8* %26 to i32, !dbg !5912
  %29 = sub i32 %27, %28, !dbg !5912
  %30 = getelementptr inbounds i8, i8* %24, i32 %29, !dbg !5913
  store i8* %30, i8** %11, align 4, !dbg !5908
  br label %31, !dbg !5914

31:                                               ; preds = %71, %4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5915, metadata !DIExpression()), !dbg !5917
  %32 = load i64, i64* %5, align 8, !dbg !5918
  %33 = load i32, i32* %10, align 4, !dbg !5919
  %34 = zext i32 %33 to i64, !dbg !5919
  %35 = urem i64 %32, %34, !dbg !5920
  %36 = trunc i64 %35 to i32, !dbg !5921
  store i32 %36, i32* %12, align 4, !dbg !5917
  %37 = load i32, i32* %12, align 4, !dbg !5922
  %38 = icmp ule i32 %37, 9, !dbg !5923
  br i1 %38, label %39, label %42, !dbg !5924

39:                                               ; preds = %31
  %40 = load i32, i32* %12, align 4, !dbg !5925
  %41 = add i32 48, %40, !dbg !5926
  br label %55, !dbg !5924

42:                                               ; preds = %31
  %43 = load i8, i8* %9, align 1, !dbg !5927
  %44 = trunc i8 %43 to i1, !dbg !5927
  br i1 %44, label %45, label %49, !dbg !5927

45:                                               ; preds = %42
  %46 = load i32, i32* %12, align 4, !dbg !5928
  %47 = add i32 65, %46, !dbg !5929
  %48 = sub i32 %47, 10, !dbg !5930
  br label %53, !dbg !5927

49:                                               ; preds = %42
  %50 = load i32, i32* %12, align 4, !dbg !5931
  %51 = add i32 97, %50, !dbg !5932
  %52 = sub i32 %51, 10, !dbg !5933
  br label %53, !dbg !5927

53:                                               ; preds = %49, %45
  %54 = phi i32 [ %48, %45 ], [ %52, %49 ], !dbg !5927
  br label %55, !dbg !5924

55:                                               ; preds = %53, %39
  %56 = phi i32 [ %41, %39 ], [ %54, %53 ], !dbg !5924
  %57 = trunc i32 %56 to i8, !dbg !5924
  %58 = load i8*, i8** %11, align 4, !dbg !5934
  %59 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !5934
  store i8* %59, i8** %11, align 4, !dbg !5934
  store i8 %57, i8* %59, align 1, !dbg !5935
  %60 = load i32, i32* %10, align 4, !dbg !5936
  %61 = zext i32 %60 to i64, !dbg !5936
  %62 = load i64, i64* %5, align 8, !dbg !5937
  %63 = udiv i64 %62, %61, !dbg !5937
  store i64 %63, i64* %5, align 8, !dbg !5937
  br label %64, !dbg !5938

64:                                               ; preds = %55
  %65 = load i64, i64* %5, align 8, !dbg !5939
  %66 = icmp ne i64 %65, 0, !dbg !5940
  br i1 %66, label %67, label %71, !dbg !5941

67:                                               ; preds = %64
  %68 = load i8*, i8** %7, align 4, !dbg !5942
  %69 = load i8*, i8** %11, align 4, !dbg !5943
  %70 = icmp ult i8* %68, %69, !dbg !5944
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi i1 [ false, %64 ], [ %70, %67 ], !dbg !5945
  br i1 %72, label %31, label %73, !dbg !5938, !llvm.loop !5946

73:                                               ; preds = %71
  %74 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5948
  %75 = bitcast %struct.conversion* %74 to i24*, !dbg !5950
  %76 = load i24, i24* %75, align 4, !dbg !5950
  %77 = lshr i24 %76, 5, !dbg !5950
  %78 = and i24 %77, 1, !dbg !5950
  %79 = trunc i24 %78 to i1, !dbg !5950
  br i1 %79, label %80, label %101, !dbg !5951

80:                                               ; preds = %73
  %81 = load i32, i32* %10, align 4, !dbg !5952
  %82 = icmp eq i32 %81, 8, !dbg !5955
  br i1 %82, label %83, label %89, !dbg !5956

83:                                               ; preds = %80
  %84 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5957
  %85 = bitcast %struct.conversion* %84 to i24*, !dbg !5959
  %86 = load i24, i24* %85, align 4, !dbg !5960
  %87 = and i24 %86, -524289, !dbg !5960
  %88 = or i24 %87, 524288, !dbg !5960
  store i24 %88, i24* %85, align 4, !dbg !5960
  br label %100, !dbg !5961

89:                                               ; preds = %80
  %90 = load i32, i32* %10, align 4, !dbg !5962
  %91 = icmp eq i32 %90, 16, !dbg !5964
  br i1 %91, label %92, label %98, !dbg !5965

92:                                               ; preds = %89
  %93 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5966
  %94 = bitcast %struct.conversion* %93 to i24*, !dbg !5968
  %95 = load i24, i24* %94, align 4, !dbg !5969
  %96 = and i24 %95, -1048577, !dbg !5969
  %97 = or i24 %96, 1048576, !dbg !5969
  store i24 %97, i24* %94, align 4, !dbg !5969
  br label %99, !dbg !5970

98:                                               ; preds = %89
  br label %99

99:                                               ; preds = %98, %92
  br label %100

100:                                              ; preds = %99, %83
  br label %101, !dbg !5971

101:                                              ; preds = %100, %73
  %102 = load i8*, i8** %11, align 4, !dbg !5972
  ret i8* %102, !dbg !5973
}

; Function Attrs: noinline nounwind optnone
define internal void @store_count(%struct.conversion* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !5974 {
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5979, metadata !DIExpression()), !dbg !5980
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5981, metadata !DIExpression()), !dbg !5982
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5983, metadata !DIExpression()), !dbg !5984
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5985
  %8 = bitcast %struct.conversion* %7 to i24*, !dbg !5986
  %9 = load i24, i24* %8, align 4, !dbg !5986
  %10 = lshr i24 %9, 11, !dbg !5986
  %11 = and i24 %10, 15, !dbg !5986
  %12 = zext i24 %11 to i32, !dbg !5986
  switch i32 %12, label %48 [
    i32 0, label %13
    i32 1, label %17
    i32 2, label %21
    i32 3, label %26
    i32 4, label %30
    i32 5, label %35
    i32 6, label %40
    i32 7, label %44
  ], !dbg !5987

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4, !dbg !5988
  %15 = load i8*, i8** %5, align 4, !dbg !5990
  %16 = bitcast i8* %15 to i32*, !dbg !5991
  store i32 %14, i32* %16, align 4, !dbg !5992
  br label %49, !dbg !5993

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !5994
  %19 = trunc i32 %18 to i8, !dbg !5995
  %20 = load i8*, i8** %5, align 4, !dbg !5996
  store i8 %19, i8* %20, align 1, !dbg !5997
  br label %49, !dbg !5998

21:                                               ; preds = %3
  %22 = load i32, i32* %6, align 4, !dbg !5999
  %23 = trunc i32 %22 to i16, !dbg !6000
  %24 = load i8*, i8** %5, align 4, !dbg !6001
  %25 = bitcast i8* %24 to i16*, !dbg !6002
  store i16 %23, i16* %25, align 2, !dbg !6003
  br label %49, !dbg !6004

26:                                               ; preds = %3
  %27 = load i32, i32* %6, align 4, !dbg !6005
  %28 = load i8*, i8** %5, align 4, !dbg !6006
  %29 = bitcast i8* %28 to i32*, !dbg !6007
  store i32 %27, i32* %29, align 4, !dbg !6008
  br label %49, !dbg !6009

30:                                               ; preds = %3
  %31 = load i32, i32* %6, align 4, !dbg !6010
  %32 = sext i32 %31 to i64, !dbg !6011
  %33 = load i8*, i8** %5, align 4, !dbg !6012
  %34 = bitcast i8* %33 to i64*, !dbg !6013
  store i64 %32, i64* %34, align 8, !dbg !6014
  br label %49, !dbg !6015

35:                                               ; preds = %3
  %36 = load i32, i32* %6, align 4, !dbg !6016
  %37 = sext i32 %36 to i64, !dbg !6017
  %38 = load i8*, i8** %5, align 4, !dbg !6018
  %39 = bitcast i8* %38 to i64*, !dbg !6019
  store i64 %37, i64* %39, align 8, !dbg !6020
  br label %49, !dbg !6021

40:                                               ; preds = %3
  %41 = load i32, i32* %6, align 4, !dbg !6022
  %42 = load i8*, i8** %5, align 4, !dbg !6023
  %43 = bitcast i8* %42 to i32*, !dbg !6024
  store i32 %41, i32* %43, align 4, !dbg !6025
  br label %49, !dbg !6026

44:                                               ; preds = %3
  %45 = load i32, i32* %6, align 4, !dbg !6027
  %46 = load i8*, i8** %5, align 4, !dbg !6028
  %47 = bitcast i8* %46 to i32*, !dbg !6029
  store i32 %45, i32* %47, align 4, !dbg !6030
  br label %49, !dbg !6031

48:                                               ; preds = %3
  br label %49, !dbg !6032

49:                                               ; preds = %48, %44, %40, %35, %30, %26, %21, %17, %13
  ret void, !dbg !6033
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isupper(i32 noundef %0) #1 !dbg !6034 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6036, metadata !DIExpression()), !dbg !6037
  %3 = load i32, i32* %2, align 4, !dbg !6038
  %4 = sub i32 %3, 65, !dbg !6039
  %5 = icmp ult i32 %4, 26, !dbg !6040
  %6 = zext i1 %5 to i32, !dbg !6040
  ret i32 %6, !dbg !6041
}

; Function Attrs: noinline nounwind optnone
define internal i32 @conversion_radix(i8 noundef zeroext %0) #1 !dbg !6042 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i8 %0, i8* %3, align 1
  call void @llvm.dbg.declare(metadata i8* %3, metadata !6045, metadata !DIExpression()), !dbg !6046
  %4 = load i8, i8* %3, align 1, !dbg !6047
  %5 = zext i8 %4 to i32, !dbg !6047
  switch i32 %5, label %6 [
    i32 100, label %7
    i32 105, label %7
    i32 117, label %7
    i32 111, label %8
    i32 112, label %9
    i32 120, label %9
    i32 88, label %9
  ], !dbg !6048

6:                                                ; preds = %1
  br label %7, !dbg !6049

7:                                                ; preds = %1, %1, %1, %6
  store i32 10, i32* %2, align 4, !dbg !6050
  br label %10, !dbg !6050

8:                                                ; preds = %1
  store i32 8, i32* %2, align 4, !dbg !6052
  br label %10, !dbg !6052

9:                                                ; preds = %1, %1, %1
  store i32 16, i32* %2, align 4, !dbg !6053
  br label %10, !dbg !6053

10:                                               ; preds = %9, %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !6054
  ret i32 %11, !dbg !6054
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_flags(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !6055 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !6056, metadata !DIExpression()), !dbg !6057
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6058, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.declare(metadata i8* %5, metadata !6060, metadata !DIExpression()), !dbg !6061
  store i8 1, i8* %5, align 1, !dbg !6061
  br label %6, !dbg !6062

6:                                                ; preds = %48, %2
  %7 = load i8*, i8** %4, align 4, !dbg !6063
  %8 = load i8, i8* %7, align 1, !dbg !6065
  %9 = zext i8 %8 to i32, !dbg !6065
  switch i32 %9, label %40 [
    i32 45, label %10
    i32 43, label %16
    i32 32, label %22
    i32 35, label %28
    i32 48, label %34
  ], !dbg !6066

10:                                               ; preds = %6
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6067
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !6069
  %13 = load i24, i24* %12, align 4, !dbg !6070
  %14 = and i24 %13, -5, !dbg !6070
  %15 = or i24 %14, 4, !dbg !6070
  store i24 %15, i24* %12, align 4, !dbg !6070
  br label %41, !dbg !6071

16:                                               ; preds = %6
  %17 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6072
  %18 = bitcast %struct.conversion* %17 to i24*, !dbg !6073
  %19 = load i24, i24* %18, align 4, !dbg !6074
  %20 = and i24 %19, -9, !dbg !6074
  %21 = or i24 %20, 8, !dbg !6074
  store i24 %21, i24* %18, align 4, !dbg !6074
  br label %41, !dbg !6075

22:                                               ; preds = %6
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6076
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !6077
  %25 = load i24, i24* %24, align 4, !dbg !6078
  %26 = and i24 %25, -17, !dbg !6078
  %27 = or i24 %26, 16, !dbg !6078
  store i24 %27, i24* %24, align 4, !dbg !6078
  br label %41, !dbg !6079

28:                                               ; preds = %6
  %29 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6080
  %30 = bitcast %struct.conversion* %29 to i24*, !dbg !6081
  %31 = load i24, i24* %30, align 4, !dbg !6082
  %32 = and i24 %31, -33, !dbg !6082
  %33 = or i24 %32, 32, !dbg !6082
  store i24 %33, i24* %30, align 4, !dbg !6082
  br label %41, !dbg !6083

34:                                               ; preds = %6
  %35 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6084
  %36 = bitcast %struct.conversion* %35 to i24*, !dbg !6085
  %37 = load i24, i24* %36, align 4, !dbg !6086
  %38 = and i24 %37, -65, !dbg !6086
  %39 = or i24 %38, 64, !dbg !6086
  store i24 %39, i24* %36, align 4, !dbg !6086
  br label %41, !dbg !6087

40:                                               ; preds = %6
  store i8 0, i8* %5, align 1, !dbg !6088
  br label %41, !dbg !6089

41:                                               ; preds = %40, %34, %28, %22, %16, %10
  %42 = load i8, i8* %5, align 1, !dbg !6090
  %43 = trunc i8 %42 to i1, !dbg !6090
  br i1 %43, label %44, label %47, !dbg !6092

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 4, !dbg !6093
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !6093
  store i8* %46, i8** %4, align 4, !dbg !6093
  br label %47, !dbg !6095

47:                                               ; preds = %44, %41
  br label %48, !dbg !6096

48:                                               ; preds = %47
  %49 = load i8, i8* %5, align 1, !dbg !6097
  %50 = trunc i8 %49 to i1, !dbg !6097
  br i1 %50, label %6, label %51, !dbg !6096, !llvm.loop !6098

51:                                               ; preds = %48
  %52 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6100
  %53 = bitcast %struct.conversion* %52 to i24*, !dbg !6102
  %54 = load i24, i24* %53, align 4, !dbg !6102
  %55 = lshr i24 %54, 6, !dbg !6102
  %56 = and i24 %55, 1, !dbg !6102
  %57 = trunc i24 %56 to i1, !dbg !6102
  br i1 %57, label %58, label %71, !dbg !6103

58:                                               ; preds = %51
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6104
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !6105
  %61 = load i24, i24* %60, align 4, !dbg !6105
  %62 = lshr i24 %61, 2, !dbg !6105
  %63 = and i24 %62, 1, !dbg !6105
  %64 = trunc i24 %63 to i1, !dbg !6105
  br i1 %64, label %65, label %71, !dbg !6106

65:                                               ; preds = %58
  %66 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6107
  %67 = bitcast %struct.conversion* %66 to i24*, !dbg !6109
  %68 = load i24, i24* %67, align 4, !dbg !6110
  %69 = and i24 %68, -65, !dbg !6110
  %70 = or i24 %69, 0, !dbg !6110
  store i24 %70, i24* %67, align 4, !dbg !6110
  br label %71, !dbg !6111

71:                                               ; preds = %65, %58, %51
  %72 = load i8*, i8** %4, align 4, !dbg !6112
  ret i8* %72, !dbg !6113
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_width(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !6114 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !6115, metadata !DIExpression()), !dbg !6116
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6117, metadata !DIExpression()), !dbg !6118
  %8 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6119
  %9 = bitcast %struct.conversion* %8 to i24*, !dbg !6120
  %10 = load i24, i24* %9, align 4, !dbg !6121
  %11 = and i24 %10, -129, !dbg !6121
  %12 = or i24 %11, 128, !dbg !6121
  store i24 %12, i24* %9, align 4, !dbg !6121
  %13 = load i8*, i8** %5, align 4, !dbg !6122
  %14 = load i8, i8* %13, align 1, !dbg !6124
  %15 = zext i8 %14 to i32, !dbg !6124
  %16 = icmp eq i32 %15, 42, !dbg !6125
  br i1 %16, label %17, label %25, !dbg !6126

17:                                               ; preds = %2
  %18 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6127
  %19 = bitcast %struct.conversion* %18 to i24*, !dbg !6129
  %20 = load i24, i24* %19, align 4, !dbg !6130
  %21 = and i24 %20, -257, !dbg !6130
  %22 = or i24 %21, 256, !dbg !6130
  store i24 %22, i24* %19, align 4, !dbg !6130
  %23 = load i8*, i8** %5, align 4, !dbg !6131
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6131
  store i8* %24, i8** %5, align 4, !dbg !6131
  store i8* %24, i8** %3, align 4, !dbg !6132
  br label %74, !dbg !6132

25:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6133, metadata !DIExpression()), !dbg !6134
  %26 = load i8*, i8** %5, align 4, !dbg !6135
  store i8* %26, i8** %6, align 4, !dbg !6134
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6136, metadata !DIExpression()), !dbg !6137
  %27 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !6138
  store i32 %27, i32* %7, align 4, !dbg !6137
  %28 = load i8*, i8** %5, align 4, !dbg !6139
  %29 = load i8*, i8** %6, align 4, !dbg !6141
  %30 = icmp ne i8* %28, %29, !dbg !6142
  br i1 %30, label %31, label %72, !dbg !6143

31:                                               ; preds = %25
  %32 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6144
  %33 = bitcast %struct.conversion* %32 to i24*, !dbg !6146
  %34 = load i24, i24* %33, align 4, !dbg !6147
  %35 = and i24 %34, -129, !dbg !6147
  %36 = or i24 %35, 128, !dbg !6147
  store i24 %36, i24* %33, align 4, !dbg !6147
  %37 = load i32, i32* %7, align 4, !dbg !6148
  %38 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6149
  %39 = getelementptr inbounds %struct.conversion, %struct.conversion* %38, i32 0, i32 2, !dbg !6150
  %40 = bitcast %struct.z_spinlock_key* %39 to i32*, !dbg !6150
  store i32 %37, i32* %40, align 4, !dbg !6151
  %41 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6152
  %42 = getelementptr inbounds %struct.conversion, %struct.conversion* %41, i32 0, i32 2, !dbg !6153
  %43 = bitcast %struct.z_spinlock_key* %42 to i32*, !dbg !6153
  %44 = load i32, i32* %43, align 4, !dbg !6153
  %45 = icmp slt i32 %44, 0, !dbg !6154
  br i1 %45, label %53, label %46, !dbg !6155

46:                                               ; preds = %31
  %47 = load i32, i32* %7, align 4, !dbg !6156
  %48 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6157
  %49 = getelementptr inbounds %struct.conversion, %struct.conversion* %48, i32 0, i32 2, !dbg !6158
  %50 = bitcast %struct.z_spinlock_key* %49 to i32*, !dbg !6158
  %51 = load i32, i32* %50, align 4, !dbg !6158
  %52 = icmp ne i32 %47, %51, !dbg !6159
  br label %53, !dbg !6155

53:                                               ; preds = %46, %31
  %54 = phi i1 [ true, %31 ], [ %52, %46 ]
  %55 = zext i1 %54 to i32, !dbg !6155
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6160
  %57 = bitcast %struct.conversion* %56 to i24*, !dbg !6161
  %58 = load i24, i24* %57, align 4, !dbg !6162
  %59 = lshr i24 %58, 1, !dbg !6162
  %60 = and i24 %59, 1, !dbg !6162
  %61 = trunc i24 %60 to i1, !dbg !6162
  %62 = zext i1 %61 to i32, !dbg !6162
  %63 = or i32 %62, %55, !dbg !6162
  %64 = icmp ne i32 %63, 0, !dbg !6162
  %65 = zext i1 %64 to i24, !dbg !6162
  %66 = load i24, i24* %57, align 4, !dbg !6162
  %67 = shl i24 %65, 1, !dbg !6162
  %68 = and i24 %66, -3, !dbg !6162
  %69 = or i24 %68, %67, !dbg !6162
  store i24 %69, i24* %57, align 4, !dbg !6162
  %70 = trunc i24 %65 to i8, !dbg !6162
  %71 = trunc i8 %70 to i1, !dbg !6162
  br label %72, !dbg !6163

72:                                               ; preds = %53, %25
  %73 = load i8*, i8** %5, align 4, !dbg !6164
  store i8* %73, i8** %3, align 4, !dbg !6165
  br label %74, !dbg !6165

74:                                               ; preds = %72, %17
  %75 = load i8*, i8** %3, align 4, !dbg !6166
  ret i8* %75, !dbg !6166
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_prec(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !6167 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !6168, metadata !DIExpression()), !dbg !6169
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6170, metadata !DIExpression()), !dbg !6171
  %7 = load i8*, i8** %5, align 4, !dbg !6172
  %8 = load i8, i8* %7, align 1, !dbg !6173
  %9 = zext i8 %8 to i32, !dbg !6173
  %10 = icmp eq i32 %9, 46, !dbg !6174
  %11 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6175
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !6176
  %13 = zext i1 %10 to i24, !dbg !6177
  %14 = load i24, i24* %12, align 4, !dbg !6177
  %15 = shl i24 %13, 9, !dbg !6177
  %16 = and i24 %14, -513, !dbg !6177
  %17 = or i24 %16, %15, !dbg !6177
  store i24 %17, i24* %12, align 4, !dbg !6177
  %18 = trunc i24 %13 to i8, !dbg !6177
  %19 = trunc i8 %18 to i1, !dbg !6177
  %20 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6178
  %21 = bitcast %struct.conversion* %20 to i24*, !dbg !6180
  %22 = load i24, i24* %21, align 4, !dbg !6180
  %23 = lshr i24 %22, 9, !dbg !6180
  %24 = and i24 %23, 1, !dbg !6180
  %25 = trunc i24 %24 to i1, !dbg !6180
  br i1 %25, label %28, label %26, !dbg !6181

26:                                               ; preds = %2
  %27 = load i8*, i8** %5, align 4, !dbg !6182
  store i8* %27, i8** %3, align 4, !dbg !6184
  br label %81, !dbg !6184

28:                                               ; preds = %2
  %29 = load i8*, i8** %5, align 4, !dbg !6185
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !6185
  store i8* %30, i8** %5, align 4, !dbg !6185
  %31 = load i8*, i8** %5, align 4, !dbg !6186
  %32 = load i8, i8* %31, align 1, !dbg !6188
  %33 = zext i8 %32 to i32, !dbg !6188
  %34 = icmp eq i32 %33, 42, !dbg !6189
  br i1 %34, label %35, label %43, !dbg !6190

35:                                               ; preds = %28
  %36 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6191
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !6193
  %38 = load i24, i24* %37, align 4, !dbg !6194
  %39 = and i24 %38, -1025, !dbg !6194
  %40 = or i24 %39, 1024, !dbg !6194
  store i24 %40, i24* %37, align 4, !dbg !6194
  %41 = load i8*, i8** %5, align 4, !dbg !6195
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !6195
  store i8* %42, i8** %5, align 4, !dbg !6195
  store i8* %42, i8** %3, align 4, !dbg !6196
  br label %81, !dbg !6196

43:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6197, metadata !DIExpression()), !dbg !6198
  %44 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !6199
  store i32 %44, i32* %6, align 4, !dbg !6198
  %45 = load i32, i32* %6, align 4, !dbg !6200
  %46 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6201
  %47 = getelementptr inbounds %struct.conversion, %struct.conversion* %46, i32 0, i32 3, !dbg !6202
  %48 = bitcast %struct.z_spinlock_key* %47 to i32*, !dbg !6202
  store i32 %45, i32* %48, align 4, !dbg !6203
  %49 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6204
  %50 = getelementptr inbounds %struct.conversion, %struct.conversion* %49, i32 0, i32 3, !dbg !6205
  %51 = bitcast %struct.z_spinlock_key* %50 to i32*, !dbg !6205
  %52 = load i32, i32* %51, align 4, !dbg !6205
  %53 = icmp slt i32 %52, 0, !dbg !6206
  br i1 %53, label %61, label %54, !dbg !6207

54:                                               ; preds = %43
  %55 = load i32, i32* %6, align 4, !dbg !6208
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6209
  %57 = getelementptr inbounds %struct.conversion, %struct.conversion* %56, i32 0, i32 3, !dbg !6210
  %58 = bitcast %struct.z_spinlock_key* %57 to i32*, !dbg !6210
  %59 = load i32, i32* %58, align 4, !dbg !6210
  %60 = icmp ne i32 %55, %59, !dbg !6211
  br label %61, !dbg !6207

61:                                               ; preds = %54, %43
  %62 = phi i1 [ true, %43 ], [ %60, %54 ]
  %63 = zext i1 %62 to i32, !dbg !6207
  %64 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !6212
  %65 = bitcast %struct.conversion* %64 to i24*, !dbg !6213
  %66 = load i24, i24* %65, align 4, !dbg !6214
  %67 = lshr i24 %66, 1, !dbg !6214
  %68 = and i24 %67, 1, !dbg !6214
  %69 = trunc i24 %68 to i1, !dbg !6214
  %70 = zext i1 %69 to i32, !dbg !6214
  %71 = or i32 %70, %63, !dbg !6214
  %72 = icmp ne i32 %71, 0, !dbg !6214
  %73 = zext i1 %72 to i24, !dbg !6214
  %74 = load i24, i24* %65, align 4, !dbg !6214
  %75 = shl i24 %73, 1, !dbg !6214
  %76 = and i24 %74, -3, !dbg !6214
  %77 = or i24 %76, %75, !dbg !6214
  store i24 %77, i24* %65, align 4, !dbg !6214
  %78 = trunc i24 %73 to i8, !dbg !6214
  %79 = trunc i8 %78 to i1, !dbg !6214
  %80 = load i8*, i8** %5, align 4, !dbg !6215
  store i8* %80, i8** %3, align 4, !dbg !6216
  br label %81, !dbg !6216

81:                                               ; preds = %61, %35, %26
  %82 = load i8*, i8** %3, align 4, !dbg !6217
  ret i8* %82, !dbg !6217
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_length(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !6218 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !6219, metadata !DIExpression()), !dbg !6220
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6221, metadata !DIExpression()), !dbg !6222
  %5 = load i8*, i8** %4, align 4, !dbg !6223
  %6 = load i8, i8* %5, align 1, !dbg !6224
  %7 = zext i8 %6 to i32, !dbg !6224
  switch i32 %7, label %87 [
    i32 104, label %8
    i32 108, label %29
    i32 106, label %50
    i32 122, label %58
    i32 116, label %66
    i32 76, label %74
  ], !dbg !6225

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 4, !dbg !6226
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6226
  store i8* %10, i8** %4, align 4, !dbg !6226
  %11 = load i8, i8* %10, align 1, !dbg !6229
  %12 = zext i8 %11 to i32, !dbg !6229
  %13 = icmp eq i32 %12, 104, !dbg !6230
  br i1 %13, label %14, label %22, !dbg !6231

14:                                               ; preds = %8
  %15 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6232
  %16 = bitcast %struct.conversion* %15 to i24*, !dbg !6234
  %17 = load i24, i24* %16, align 4, !dbg !6235
  %18 = and i24 %17, -30721, !dbg !6235
  %19 = or i24 %18, 2048, !dbg !6235
  store i24 %19, i24* %16, align 4, !dbg !6235
  %20 = load i8*, i8** %4, align 4, !dbg !6236
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !6236
  store i8* %21, i8** %4, align 4, !dbg !6236
  br label %28, !dbg !6237

22:                                               ; preds = %8
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6238
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !6240
  %25 = load i24, i24* %24, align 4, !dbg !6241
  %26 = and i24 %25, -30721, !dbg !6241
  %27 = or i24 %26, 4096, !dbg !6241
  store i24 %27, i24* %24, align 4, !dbg !6241
  br label %28

28:                                               ; preds = %22, %14
  br label %93, !dbg !6242

29:                                               ; preds = %2
  %30 = load i8*, i8** %4, align 4, !dbg !6243
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6243
  store i8* %31, i8** %4, align 4, !dbg !6243
  %32 = load i8, i8* %31, align 1, !dbg !6245
  %33 = zext i8 %32 to i32, !dbg !6245
  %34 = icmp eq i32 %33, 108, !dbg !6246
  br i1 %34, label %35, label %43, !dbg !6247

35:                                               ; preds = %29
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6248
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !6250
  %38 = load i24, i24* %37, align 4, !dbg !6251
  %39 = and i24 %38, -30721, !dbg !6251
  %40 = or i24 %39, 8192, !dbg !6251
  store i24 %40, i24* %37, align 4, !dbg !6251
  %41 = load i8*, i8** %4, align 4, !dbg !6252
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !6252
  store i8* %42, i8** %4, align 4, !dbg !6252
  br label %49, !dbg !6253

43:                                               ; preds = %29
  %44 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6254
  %45 = bitcast %struct.conversion* %44 to i24*, !dbg !6256
  %46 = load i24, i24* %45, align 4, !dbg !6257
  %47 = and i24 %46, -30721, !dbg !6257
  %48 = or i24 %47, 6144, !dbg !6257
  store i24 %48, i24* %45, align 4, !dbg !6257
  br label %49

49:                                               ; preds = %43, %35
  br label %93, !dbg !6258

50:                                               ; preds = %2
  %51 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6259
  %52 = bitcast %struct.conversion* %51 to i24*, !dbg !6260
  %53 = load i24, i24* %52, align 4, !dbg !6261
  %54 = and i24 %53, -30721, !dbg !6261
  %55 = or i24 %54, 10240, !dbg !6261
  store i24 %55, i24* %52, align 4, !dbg !6261
  %56 = load i8*, i8** %4, align 4, !dbg !6262
  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !6262
  store i8* %57, i8** %4, align 4, !dbg !6262
  br label %93, !dbg !6263

58:                                               ; preds = %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6264
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !6265
  %61 = load i24, i24* %60, align 4, !dbg !6266
  %62 = and i24 %61, -30721, !dbg !6266
  %63 = or i24 %62, 12288, !dbg !6266
  store i24 %63, i24* %60, align 4, !dbg !6266
  %64 = load i8*, i8** %4, align 4, !dbg !6267
  %65 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !6267
  store i8* %65, i8** %4, align 4, !dbg !6267
  br label %93, !dbg !6268

66:                                               ; preds = %2
  %67 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6269
  %68 = bitcast %struct.conversion* %67 to i24*, !dbg !6270
  %69 = load i24, i24* %68, align 4, !dbg !6271
  %70 = and i24 %69, -30721, !dbg !6271
  %71 = or i24 %70, 14336, !dbg !6271
  store i24 %71, i24* %68, align 4, !dbg !6271
  %72 = load i8*, i8** %4, align 4, !dbg !6272
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !6272
  store i8* %73, i8** %4, align 4, !dbg !6272
  br label %93, !dbg !6273

74:                                               ; preds = %2
  %75 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6274
  %76 = bitcast %struct.conversion* %75 to i24*, !dbg !6275
  %77 = load i24, i24* %76, align 4, !dbg !6276
  %78 = and i24 %77, -30721, !dbg !6276
  %79 = or i24 %78, 16384, !dbg !6276
  store i24 %79, i24* %76, align 4, !dbg !6276
  %80 = load i8*, i8** %4, align 4, !dbg !6277
  %81 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !6277
  store i8* %81, i8** %4, align 4, !dbg !6277
  %82 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6278
  %83 = bitcast %struct.conversion* %82 to i24*, !dbg !6279
  %84 = load i24, i24* %83, align 4, !dbg !6280
  %85 = and i24 %84, -3, !dbg !6280
  %86 = or i24 %85, 2, !dbg !6280
  store i24 %86, i24* %83, align 4, !dbg !6280
  br label %93, !dbg !6281

87:                                               ; preds = %2
  %88 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6282
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !6283
  %90 = load i24, i24* %89, align 4, !dbg !6284
  %91 = and i24 %90, -30721, !dbg !6284
  %92 = or i24 %91, 0, !dbg !6284
  store i24 %92, i24* %89, align 4, !dbg !6284
  br label %93, !dbg !6285

93:                                               ; preds = %87, %74, %66, %58, %50, %49, %28
  %94 = load i8*, i8** %4, align 4, !dbg !6286
  ret i8* %94, !dbg !6287
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_specifier(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !6288 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !6289, metadata !DIExpression()), !dbg !6290
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6291, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.declare(metadata i8* %5, metadata !6293, metadata !DIExpression()), !dbg !6294
  store i8 0, i8* %5, align 1, !dbg !6294
  %6 = load i8*, i8** %4, align 4, !dbg !6295
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6295
  store i8* %7, i8** %4, align 4, !dbg !6295
  %8 = load i8, i8* %6, align 1, !dbg !6296
  %9 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6297
  %10 = getelementptr inbounds %struct.conversion, %struct.conversion* %9, i32 0, i32 1, !dbg !6298
  store i8 %8, i8* %10, align 1, !dbg !6299
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6300
  %12 = getelementptr inbounds %struct.conversion, %struct.conversion* %11, i32 0, i32 1, !dbg !6301
  %13 = load i8, i8* %12, align 1, !dbg !6301
  %14 = zext i8 %13 to i32, !dbg !6300
  switch i32 %14, label %94 [
    i32 100, label %15
    i32 105, label %15
    i32 111, label %21
    i32 99, label %21
    i32 117, label %21
    i32 120, label %21
    i32 88, label %21
    i32 97, label %58
    i32 65, label %58
    i32 101, label %58
    i32 69, label %58
    i32 102, label %58
    i32 70, label %58
    i32 103, label %58
    i32 71, label %58
    i32 110, label %64
    i32 115, label %79
    i32 112, label %79
  ], !dbg !6302

15:                                               ; preds = %2, %2
  %16 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6303
  %17 = bitcast %struct.conversion* %16 to i24*, !dbg !6305
  %18 = load i24, i24* %17, align 4, !dbg !6306
  %19 = and i24 %18, -458753, !dbg !6306
  %20 = or i24 %19, 65536, !dbg !6306
  store i24 %20, i24* %17, align 4, !dbg !6306
  br label %27, !dbg !6307

21:                                               ; preds = %2, %2, %2, %2, %2
  %22 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6308
  %23 = bitcast %struct.conversion* %22 to i24*, !dbg !6309
  %24 = load i24, i24* %23, align 4, !dbg !6310
  %25 = and i24 %24, -458753, !dbg !6310
  %26 = or i24 %25, 131072, !dbg !6310
  store i24 %26, i24* %23, align 4, !dbg !6310
  br label %27, !dbg !6308

27:                                               ; preds = %21, %15
  call void @llvm.dbg.label(metadata !6311), !dbg !6312
  %28 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6313
  %29 = bitcast %struct.conversion* %28 to i24*, !dbg !6315
  %30 = load i24, i24* %29, align 4, !dbg !6315
  %31 = lshr i24 %30, 11, !dbg !6315
  %32 = and i24 %31, 15, !dbg !6315
  %33 = zext i24 %32 to i32, !dbg !6315
  %34 = icmp eq i32 %33, 8, !dbg !6316
  br i1 %34, label %35, label %41, !dbg !6317

35:                                               ; preds = %27
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6318
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !6320
  %38 = load i24, i24* %37, align 4, !dbg !6321
  %39 = and i24 %38, -2, !dbg !6321
  %40 = or i24 %39, 1, !dbg !6321
  store i24 %40, i24* %37, align 4, !dbg !6321
  br label %41, !dbg !6322

41:                                               ; preds = %35, %27
  %42 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6323
  %43 = getelementptr inbounds %struct.conversion, %struct.conversion* %42, i32 0, i32 1, !dbg !6325
  %44 = load i8, i8* %43, align 1, !dbg !6325
  %45 = zext i8 %44 to i32, !dbg !6323
  %46 = icmp eq i32 %45, 99, !dbg !6326
  br i1 %46, label %47, label %56, !dbg !6327

47:                                               ; preds = %41
  %48 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6328
  %49 = bitcast %struct.conversion* %48 to i24*, !dbg !6330
  %50 = load i24, i24* %49, align 4, !dbg !6330
  %51 = lshr i24 %50, 11, !dbg !6330
  %52 = and i24 %51, 15, !dbg !6330
  %53 = zext i24 %52 to i32, !dbg !6330
  %54 = icmp ne i32 %53, 0, !dbg !6331
  %55 = zext i1 %54 to i8, !dbg !6332
  store i8 %55, i8* %5, align 1, !dbg !6332
  br label %57, !dbg !6333

56:                                               ; preds = %41
  br label %57

57:                                               ; preds = %56, %47
  br label %100, !dbg !6334

58:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6335
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !6336
  %61 = load i24, i24* %60, align 4, !dbg !6337
  %62 = and i24 %61, -458753, !dbg !6337
  %63 = or i24 %62, 262144, !dbg !6337
  store i24 %63, i24* %60, align 4, !dbg !6337
  store i8 1, i8* %5, align 1, !dbg !6338
  br label %100, !dbg !6341

64:                                               ; preds = %2
  %65 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6342
  %66 = bitcast %struct.conversion* %65 to i24*, !dbg !6343
  %67 = load i24, i24* %66, align 4, !dbg !6344
  %68 = and i24 %67, -458753, !dbg !6344
  %69 = or i24 %68, 196608, !dbg !6344
  store i24 %69, i24* %66, align 4, !dbg !6344
  %70 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6345
  %71 = bitcast %struct.conversion* %70 to i24*, !dbg !6347
  %72 = load i24, i24* %71, align 4, !dbg !6347
  %73 = lshr i24 %72, 11, !dbg !6347
  %74 = and i24 %73, 15, !dbg !6347
  %75 = zext i24 %74 to i32, !dbg !6347
  %76 = icmp eq i32 %75, 8, !dbg !6348
  br i1 %76, label %77, label %78, !dbg !6349

77:                                               ; preds = %64
  store i8 1, i8* %5, align 1, !dbg !6350
  br label %78, !dbg !6352

78:                                               ; preds = %77, %64
  br label %100, !dbg !6353

79:                                               ; preds = %2, %2
  %80 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6354
  %81 = bitcast %struct.conversion* %80 to i24*, !dbg !6355
  %82 = load i24, i24* %81, align 4, !dbg !6356
  %83 = and i24 %82, -458753, !dbg !6356
  %84 = or i24 %83, 196608, !dbg !6356
  store i24 %84, i24* %81, align 4, !dbg !6356
  %85 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6357
  %86 = bitcast %struct.conversion* %85 to i24*, !dbg !6359
  %87 = load i24, i24* %86, align 4, !dbg !6359
  %88 = lshr i24 %87, 11, !dbg !6359
  %89 = and i24 %88, 15, !dbg !6359
  %90 = zext i24 %89 to i32, !dbg !6359
  %91 = icmp ne i32 %90, 0, !dbg !6360
  br i1 %91, label %92, label %93, !dbg !6361

92:                                               ; preds = %79
  store i8 1, i8* %5, align 1, !dbg !6362
  br label %93, !dbg !6364

93:                                               ; preds = %92, %79
  br label %100, !dbg !6365

94:                                               ; preds = %2
  %95 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6366
  %96 = bitcast %struct.conversion* %95 to i24*, !dbg !6367
  %97 = load i24, i24* %96, align 4, !dbg !6368
  %98 = and i24 %97, -2, !dbg !6368
  %99 = or i24 %98, 1, !dbg !6368
  store i24 %99, i24* %96, align 4, !dbg !6368
  br label %100, !dbg !6369

100:                                              ; preds = %94, %93, %78, %58, %57
  %101 = load i8, i8* %5, align 1, !dbg !6370
  %102 = trunc i8 %101 to i1, !dbg !6370
  %103 = zext i1 %102 to i32, !dbg !6370
  %104 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !6371
  %105 = bitcast %struct.conversion* %104 to i24*, !dbg !6372
  %106 = load i24, i24* %105, align 4, !dbg !6373
  %107 = lshr i24 %106, 1, !dbg !6373
  %108 = and i24 %107, 1, !dbg !6373
  %109 = trunc i24 %108 to i1, !dbg !6373
  %110 = zext i1 %109 to i32, !dbg !6373
  %111 = or i32 %110, %103, !dbg !6373
  %112 = icmp ne i32 %111, 0, !dbg !6373
  %113 = zext i1 %112 to i24, !dbg !6373
  %114 = load i24, i24* %105, align 4, !dbg !6373
  %115 = shl i24 %113, 1, !dbg !6373
  %116 = and i24 %114, -3, !dbg !6373
  %117 = or i24 %116, %115, !dbg !6373
  store i24 %117, i24* %105, align 4, !dbg !6373
  %118 = trunc i24 %113 to i8, !dbg !6373
  %119 = trunc i8 %118 to i1, !dbg !6373
  %120 = load i8*, i8** %4, align 4, !dbg !6374
  ret i8* %120, !dbg !6375
}

; Function Attrs: noinline nounwind optnone
define internal i32 @extract_decimal(i8** noundef %0) #1 !dbg !6376 {
  %2 = alloca i8**, align 4
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8** %0, i8*** %2, align 4
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !6380, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6382, metadata !DIExpression()), !dbg !6383
  %5 = load i8**, i8*** %2, align 4, !dbg !6384
  %6 = load i8*, i8** %5, align 4, !dbg !6385
  store i8* %6, i8** %3, align 4, !dbg !6383
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6386, metadata !DIExpression()), !dbg !6387
  store i32 0, i32* %4, align 4, !dbg !6387
  br label %7, !dbg !6388

7:                                                ; preds = %13, %1
  %8 = load i8*, i8** %3, align 4, !dbg !6389
  %9 = load i8, i8* %8, align 1, !dbg !6390
  %10 = zext i8 %9 to i32, !dbg !6391
  %11 = call i32 @isdigit(i32 noundef %10) #10, !dbg !6392
  %12 = icmp ne i32 %11, 0, !dbg !6388
  br i1 %12, label %13, label %22, !dbg !6388

13:                                               ; preds = %7
  %14 = load i32, i32* %4, align 4, !dbg !6393
  %15 = mul i32 10, %14, !dbg !6395
  %16 = load i8*, i8** %3, align 4, !dbg !6396
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !6396
  store i8* %17, i8** %3, align 4, !dbg !6396
  %18 = load i8, i8* %16, align 1, !dbg !6397
  %19 = zext i8 %18 to i32, !dbg !6397
  %20 = add i32 %15, %19, !dbg !6398
  %21 = sub i32 %20, 48, !dbg !6399
  store i32 %21, i32* %4, align 4, !dbg !6400
  br label %7, !dbg !6388, !llvm.loop !6401

22:                                               ; preds = %7
  %23 = load i8*, i8** %3, align 4, !dbg !6403
  %24 = load i8**, i8*** %2, align 4, !dbg !6404
  store i8* %23, i8** %24, align 4, !dbg !6405
  %25 = load i32, i32* %4, align 4, !dbg !6406
  ret i32 %25, !dbg !6407
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isdigit(i32 noundef %0) #1 !dbg !6408 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6409, metadata !DIExpression()), !dbg !6410
  %3 = load i32, i32* %2, align 4, !dbg !6411
  %4 = sub i32 %3, 48, !dbg !6412
  %5 = icmp ult i32 %4, 10, !dbg !6413
  %6 = zext i1 %5 to i32, !dbg !6413
  ret i32 %6, !dbg !6414
}

; Function Attrs: noinline nounwind optnone
define dso_local void @_ConfigAbsSyms() #1 !dbg !6415 {
  call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #9, !dbg !6417, !srcloc !6418
  call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #9, !dbg !6419, !srcloc !6420
  call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #9, !dbg !6421, !srcloc !6422
  call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #9, !dbg !6423, !srcloc !6424
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #9, !dbg !6425, !srcloc !6426
  call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,26\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #9, !dbg !6427, !srcloc !6428
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32768\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #9, !dbg !6429, !srcloc !6430
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #9, !dbg !6431, !srcloc !6432
  call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,256\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #9, !dbg !6433, !srcloc !6434
  call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x0\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #9, !dbg !6435, !srcloc !6436
  call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #9, !dbg !6437, !srcloc !6438
  call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #9, !dbg !6439, !srcloc !6440
  call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #9, !dbg !6441, !srcloc !6442
  call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #9, !dbg !6443, !srcloc !6444
  call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #9, !dbg !6445, !srcloc !6446
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #9, !dbg !6447, !srcloc !6448
  call void asm sideeffect ".globl\09CONFIG_SOC_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_SOC_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_SOC_HAS_TIMING_FUNCTIONS,%object", ""() #9, !dbg !6449, !srcloc !6450
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_BUSY_WAIT\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_BUSY_WAIT,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_BUSY_WAIT,%object", ""() #9, !dbg !6451, !srcloc !6452
  call void asm sideeffect ".globl\09CONFIG_PM\0A\09.equ\09CONFIG_PM,1\0A\09.type\09CONFIG_PM,%object", ""() #9, !dbg !6453, !srcloc !6454
  call void asm sideeffect ".globl\09CONFIG_NRF_RTC_TIMER\0A\09.equ\09CONFIG_NRF_RTC_TIMER,1\0A\09.type\09CONFIG_NRF_RTC_TIMER,%object", ""() #9, !dbg !6455, !srcloc !6456
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,32768\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #9, !dbg !6457, !srcloc !6458
  call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #9, !dbg !6459, !srcloc !6460
  call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #9, !dbg !6461, !srcloc !6462
  call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #9, !dbg !6463, !srcloc !6464
  call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #9, !dbg !6465, !srcloc !6466
  call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #9, !dbg !6467, !srcloc !6468
  call void asm sideeffect ".globl\09CONFIG_PLATFORM_SPECIFIC_INIT\0A\09.equ\09CONFIG_PLATFORM_SPECIFIC_INIT,1\0A\09.type\09CONFIG_PLATFORM_SPECIFIC_INIT,%object", ""() #9, !dbg !6469, !srcloc !6470
  call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #9, !dbg !6471, !srcloc !6472
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M0_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M0_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M0_ENABLED,%object", ""() #9, !dbg !6473, !srcloc !6474
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,%object", ""() #9, !dbg !6475, !srcloc !6476
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #9, !dbg !6477, !srcloc !6478
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_CCM_ENABLED,%object", ""() #9, !dbg !6479, !srcloc !6480
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_CLOCK_ENABLED,%object", ""() #9, !dbg !6481, !srcloc !6482
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_ECB_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_ECB_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_ECB_ENABLED,%object", ""() #9, !dbg !6483, !srcloc !6484
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_FICR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_FICR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_FICR_ENABLED,%object", ""() #9, !dbg !6485, !srcloc !6486
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_GPIO_ENABLED,%object", ""() #9, !dbg !6487, !srcloc !6488
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_GPIOTE_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_GPIOTE_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_GPIOTE_ENABLED,%object", ""() #9, !dbg !6489, !srcloc !6490
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_MPU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_MPU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_MPU_ENABLED,%object", ""() #9, !dbg !6491, !srcloc !6492
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_PINCTRL_ENABLED,%object", ""() #9, !dbg !6493, !srcloc !6494
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_POWER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_POWER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_POWER_ENABLED,%object", ""() #9, !dbg !6495, !srcloc !6496
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_PPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_PPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_PPI_ENABLED,%object", ""() #9, !dbg !6497, !srcloc !6498
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_RADIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_RADIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_RADIO_ENABLED,%object", ""() #9, !dbg !6499, !srcloc !6500
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_RNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_RNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_RNG_ENABLED,%object", ""() #9, !dbg !6501, !srcloc !6502
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_RTC_ENABLED,%object", ""() #9, !dbg !6503, !srcloc !6504
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_SPIS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_SPIS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_SPIS_ENABLED,%object", ""() #9, !dbg !6505, !srcloc !6506
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_SWI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_SWI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_SWI_ENABLED,%object", ""() #9, !dbg !6507, !srcloc !6508
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_TEMP_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_TEMP_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_TEMP_ENABLED,%object", ""() #9, !dbg !6509, !srcloc !6510
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_TIMER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_TIMER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_TIMER_ENABLED,%object", ""() #9, !dbg !6511, !srcloc !6512
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_TWI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_TWI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_TWI_ENABLED,%object", ""() #9, !dbg !6513, !srcloc !6514
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_UART_ENABLED,%object", ""() #9, !dbg !6515, !srcloc !6516
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_UICR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_UICR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_UICR_ENABLED,%object", ""() #9, !dbg !6517, !srcloc !6518
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF_WDT_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF_WDT_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF_WDT_ENABLED,%object", ""() #9, !dbg !6519, !srcloc !6520
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NORDIC_NRF51_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NORDIC_NRF51_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NORDIC_NRF51_FLASH_CONTROLLER_ENABLED,%object", ""() #9, !dbg !6521, !srcloc !6522
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #9, !dbg !6523, !srcloc !6524
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_ENTROPY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_ENTROPY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_ENTROPY_ENABLED,%object", ""() #9, !dbg !6525, !srcloc !6526
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_SLAVE_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_SLAVE_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_SLAVE_ENABLED,%object", ""() #9, !dbg !6527, !srcloc !6528
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #9, !dbg !6529, !srcloc !6530
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #9, !dbg !6531, !srcloc !6532
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #9, !dbg !6533, !srcloc !6534
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #9, !dbg !6535, !srcloc !6536
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #9, !dbg !6537, !srcloc !6538
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #9, !dbg !6539, !srcloc !6540
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #9, !dbg !6541, !srcloc !6542
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #9, !dbg !6543, !srcloc !6544
  call void asm sideeffect ".globl\09CONFIG_HAS_NRFX\0A\09.equ\09CONFIG_HAS_NRFX,1\0A\09.type\09CONFIG_HAS_NRFX,%object", ""() #9, !dbg !6545, !srcloc !6546
  call void asm sideeffect ".globl\09CONFIG_NRFX_CLOCK\0A\09.equ\09CONFIG_NRFX_CLOCK,1\0A\09.type\09CONFIG_NRFX_CLOCK,%object", ""() #9, !dbg !6547, !srcloc !6548
  call void asm sideeffect ".globl\09CONFIG_NRFX_CLOCK_LFXO_TWO_STAGE_ENABLED\0A\09.equ\09CONFIG_NRFX_CLOCK_LFXO_TWO_STAGE_ENABLED,1\0A\09.type\09CONFIG_NRFX_CLOCK_LFXO_TWO_STAGE_ENABLED,%object", ""() #9, !dbg !6549, !srcloc !6550
  call void asm sideeffect ".globl\09CONFIG_NRFX_GPIOTE\0A\09.equ\09CONFIG_NRFX_GPIOTE,1\0A\09.type\09CONFIG_NRFX_GPIOTE,%object", ""() #9, !dbg !6551, !srcloc !6552
  call void asm sideeffect ".globl\09CONFIG_NRFX_GPIOTE_NUM_OF_EVT_HANDLERS\0A\09.equ\09CONFIG_NRFX_GPIOTE_NUM_OF_EVT_HANDLERS,1\0A\09.type\09CONFIG_NRFX_GPIOTE_NUM_OF_EVT_HANDLERS,%object", ""() #9, !dbg !6553, !srcloc !6554
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #9, !dbg !6555, !srcloc !6556
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #9, !dbg !6557, !srcloc !6558
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #9, !dbg !6559, !srcloc !6560
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #9, !dbg !6561, !srcloc !6562
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #9, !dbg !6563, !srcloc !6564
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #9, !dbg !6565, !srcloc !6566
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #9, !dbg !6567, !srcloc !6568
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #9, !dbg !6569, !srcloc !6570
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #9, !dbg !6571, !srcloc !6572
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #9, !dbg !6573, !srcloc !6574
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #9, !dbg !6575, !srcloc !6576
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #9, !dbg !6577, !srcloc !6578
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #9, !dbg !6579, !srcloc !6580
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #9, !dbg !6581, !srcloc !6582
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #9, !dbg !6583, !srcloc !6584
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #9, !dbg !6585, !srcloc !6586
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #9, !dbg !6587, !srcloc !6588
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #9, !dbg !6589, !srcloc !6590
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #9, !dbg !6591, !srcloc !6592
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #9, !dbg !6593, !srcloc !6594
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #9, !dbg !6595, !srcloc !6596
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #9, !dbg !6597, !srcloc !6598
  call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #9, !dbg !6599, !srcloc !6600
  call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON_NRF51\0A\09.equ\09CONFIG_BOARD_96B_CARBON_NRF51,1\0A\09.type\09CONFIG_BOARD_96B_CARBON_NRF51,%object", ""() #9, !dbg !6601, !srcloc !6602
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_NRF51X\0A\09.equ\09CONFIG_SOC_SERIES_NRF51X,1\0A\09.type\09CONFIG_SOC_SERIES_NRF51X,%object", ""() #9, !dbg !6603, !srcloc !6604
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #9, !dbg !6605, !srcloc !6606
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_NRF\0A\09.equ\09CONFIG_SOC_FAMILY_NRF,1\0A\09.type\09CONFIG_SOC_FAMILY_NRF,%object", ""() #9, !dbg !6607, !srcloc !6608
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_CCM\0A\09.equ\09CONFIG_HAS_HW_NRF_CCM,1\0A\09.type\09CONFIG_HAS_HW_NRF_CCM,%object", ""() #9, !dbg !6609, !srcloc !6610
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_CLOCK\0A\09.equ\09CONFIG_HAS_HW_NRF_CLOCK,1\0A\09.type\09CONFIG_HAS_HW_NRF_CLOCK,%object", ""() #9, !dbg !6611, !srcloc !6612
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_ECB\0A\09.equ\09CONFIG_HAS_HW_NRF_ECB,1\0A\09.type\09CONFIG_HAS_HW_NRF_ECB,%object", ""() #9, !dbg !6613, !srcloc !6614
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_GPIO0\0A\09.equ\09CONFIG_HAS_HW_NRF_GPIO0,1\0A\09.type\09CONFIG_HAS_HW_NRF_GPIO0,%object", ""() #9, !dbg !6615, !srcloc !6616
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_GPIOTE\0A\09.equ\09CONFIG_HAS_HW_NRF_GPIOTE,1\0A\09.type\09CONFIG_HAS_HW_NRF_GPIOTE,%object", ""() #9, !dbg !6617, !srcloc !6618
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_MPU\0A\09.equ\09CONFIG_HAS_HW_NRF_MPU,1\0A\09.type\09CONFIG_HAS_HW_NRF_MPU,%object", ""() #9, !dbg !6619, !srcloc !6620
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_POWER\0A\09.equ\09CONFIG_HAS_HW_NRF_POWER,1\0A\09.type\09CONFIG_HAS_HW_NRF_POWER,%object", ""() #9, !dbg !6621, !srcloc !6622
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_PPI\0A\09.equ\09CONFIG_HAS_HW_NRF_PPI,1\0A\09.type\09CONFIG_HAS_HW_NRF_PPI,%object", ""() #9, !dbg !6623, !srcloc !6624
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_RNG\0A\09.equ\09CONFIG_HAS_HW_NRF_RNG,1\0A\09.type\09CONFIG_HAS_HW_NRF_RNG,%object", ""() #9, !dbg !6625, !srcloc !6626
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_RTC0\0A\09.equ\09CONFIG_HAS_HW_NRF_RTC0,1\0A\09.type\09CONFIG_HAS_HW_NRF_RTC0,%object", ""() #9, !dbg !6627, !srcloc !6628
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_RTC1\0A\09.equ\09CONFIG_HAS_HW_NRF_RTC1,1\0A\09.type\09CONFIG_HAS_HW_NRF_RTC1,%object", ""() #9, !dbg !6629, !srcloc !6630
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_SPIS1\0A\09.equ\09CONFIG_HAS_HW_NRF_SPIS1,1\0A\09.type\09CONFIG_HAS_HW_NRF_SPIS1,%object", ""() #9, !dbg !6631, !srcloc !6632
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_SWI0\0A\09.equ\09CONFIG_HAS_HW_NRF_SWI0,1\0A\09.type\09CONFIG_HAS_HW_NRF_SWI0,%object", ""() #9, !dbg !6633, !srcloc !6634
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_SWI1\0A\09.equ\09CONFIG_HAS_HW_NRF_SWI1,1\0A\09.type\09CONFIG_HAS_HW_NRF_SWI1,%object", ""() #9, !dbg !6635, !srcloc !6636
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_SWI2\0A\09.equ\09CONFIG_HAS_HW_NRF_SWI2,1\0A\09.type\09CONFIG_HAS_HW_NRF_SWI2,%object", ""() #9, !dbg !6637, !srcloc !6638
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_SWI3\0A\09.equ\09CONFIG_HAS_HW_NRF_SWI3,1\0A\09.type\09CONFIG_HAS_HW_NRF_SWI3,%object", ""() #9, !dbg !6639, !srcloc !6640
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_SWI4\0A\09.equ\09CONFIG_HAS_HW_NRF_SWI4,1\0A\09.type\09CONFIG_HAS_HW_NRF_SWI4,%object", ""() #9, !dbg !6641, !srcloc !6642
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_SWI5\0A\09.equ\09CONFIG_HAS_HW_NRF_SWI5,1\0A\09.type\09CONFIG_HAS_HW_NRF_SWI5,%object", ""() #9, !dbg !6643, !srcloc !6644
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_TEMP\0A\09.equ\09CONFIG_HAS_HW_NRF_TEMP,1\0A\09.type\09CONFIG_HAS_HW_NRF_TEMP,%object", ""() #9, !dbg !6645, !srcloc !6646
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_TIMER0\0A\09.equ\09CONFIG_HAS_HW_NRF_TIMER0,1\0A\09.type\09CONFIG_HAS_HW_NRF_TIMER0,%object", ""() #9, !dbg !6647, !srcloc !6648
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_TIMER1\0A\09.equ\09CONFIG_HAS_HW_NRF_TIMER1,1\0A\09.type\09CONFIG_HAS_HW_NRF_TIMER1,%object", ""() #9, !dbg !6649, !srcloc !6650
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_TIMER2\0A\09.equ\09CONFIG_HAS_HW_NRF_TIMER2,1\0A\09.type\09CONFIG_HAS_HW_NRF_TIMER2,%object", ""() #9, !dbg !6651, !srcloc !6652
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_TWI0\0A\09.equ\09CONFIG_HAS_HW_NRF_TWI0,1\0A\09.type\09CONFIG_HAS_HW_NRF_TWI0,%object", ""() #9, !dbg !6653, !srcloc !6654
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_UART0\0A\09.equ\09CONFIG_HAS_HW_NRF_UART0,1\0A\09.type\09CONFIG_HAS_HW_NRF_UART0,%object", ""() #9, !dbg !6655, !srcloc !6656
  call void asm sideeffect ".globl\09CONFIG_HAS_HW_NRF_WDT0\0A\09.equ\09CONFIG_HAS_HW_NRF_WDT0,1\0A\09.type\09CONFIG_HAS_HW_NRF_WDT0,%object", ""() #9, !dbg !6657, !srcloc !6658
  call void asm sideeffect ".globl\09CONFIG_NRF_HW_RTC1_RESERVED\0A\09.equ\09CONFIG_NRF_HW_RTC1_RESERVED,1\0A\09.type\09CONFIG_NRF_HW_RTC1_RESERVED,%object", ""() #9, !dbg !6659, !srcloc !6660
  call void asm sideeffect ".globl\09CONFIG_SOC_NRF51822_QFAC\0A\09.equ\09CONFIG_SOC_NRF51822_QFAC,1\0A\09.type\09CONFIG_SOC_NRF51822_QFAC,%object", ""() #9, !dbg !6661, !srcloc !6662
  call void asm sideeffect ".globl\09CONFIG_NRF_RTC_TIMER_USER_CHAN_COUNT\0A\09.equ\09CONFIG_NRF_RTC_TIMER_USER_CHAN_COUNT,0\0A\09.type\09CONFIG_NRF_RTC_TIMER_USER_CHAN_COUNT,%object", ""() #9, !dbg !6663, !srcloc !6664
  call void asm sideeffect ".globl\09CONFIG_NRF_SOC_SECURE_SUPPORTED\0A\09.equ\09CONFIG_NRF_SOC_SECURE_SUPPORTED,1\0A\09.type\09CONFIG_NRF_SOC_SECURE_SUPPORTED,%object", ""() #9, !dbg !6665, !srcloc !6666
  call void asm sideeffect ".globl\09CONFIG_NRF_MPU_FLASH_REGION_SIZE\0A\09.equ\09CONFIG_NRF_MPU_FLASH_REGION_SIZE,0x1000\0A\09.type\09CONFIG_NRF_MPU_FLASH_REGION_SIZE,%object", ""() #9, !dbg !6667, !srcloc !6668
  call void asm sideeffect ".globl\09CONFIG_SOC_COMPATIBLE_NRF\0A\09.equ\09CONFIG_SOC_COMPATIBLE_NRF,1\0A\09.type\09CONFIG_SOC_COMPATIBLE_NRF,%object", ""() #9, !dbg !6669, !srcloc !6670
  call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #9, !dbg !6671, !srcloc !6672
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #9, !dbg !6673, !srcloc !6674
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #9, !dbg !6675, !srcloc !6676
  call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #9, !dbg !6677, !srcloc !6678
  call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #9, !dbg !6679, !srcloc !6680
  call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #9, !dbg !6681, !srcloc !6682
  call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #9, !dbg !6683, !srcloc !6684
  call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #9, !dbg !6685, !srcloc !6686
  call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #9, !dbg !6687, !srcloc !6688
  call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #9, !dbg !6689, !srcloc !6690
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M0\0A\09.equ\09CONFIG_CPU_CORTEX_M0,1\0A\09.type\09CONFIG_CPU_CORTEX_M0,%object", ""() #9, !dbg !6691, !srcloc !6692
  call void asm sideeffect ".globl\09CONFIG_ARMV6_M_ARMV8_M_BASELINE\0A\09.equ\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,1\0A\09.type\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,%object", ""() #9, !dbg !6693, !srcloc !6694
  call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #9, !dbg !6695, !srcloc !6696
  call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #9, !dbg !6697, !srcloc !6698
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #9, !dbg !6699, !srcloc !6700
  call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #9, !dbg !6701, !srcloc !6702
  call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #9, !dbg !6703, !srcloc !6704
  call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #9, !dbg !6705, !srcloc !6706
  call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #9, !dbg !6707, !srcloc !6708
  call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #9, !dbg !6709, !srcloc !6710
  call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #9, !dbg !6711, !srcloc !6712
  call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #9, !dbg !6713, !srcloc !6714
  call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #9, !dbg !6715, !srcloc !6716
  call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #9, !dbg !6717, !srcloc !6718
  call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #9, !dbg !6719, !srcloc !6720
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #9, !dbg !6721, !srcloc !6722
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #9, !dbg !6723, !srcloc !6724
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #9, !dbg !6725, !srcloc !6726
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #9, !dbg !6727, !srcloc !6728
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #9, !dbg !6729, !srcloc !6730
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #9, !dbg !6731, !srcloc !6732
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #9, !dbg !6733, !srcloc !6734
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !6735, !srcloc !6736
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #9, !dbg !6737, !srcloc !6738
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #9, !dbg !6739, !srcloc !6740
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #9, !dbg !6741, !srcloc !6742
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #9, !dbg !6743, !srcloc !6744
  call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #9, !dbg !6745, !srcloc !6746
  call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #9, !dbg !6747, !srcloc !6748
  call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #9, !dbg !6749, !srcloc !6750
  call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #9, !dbg !6751, !srcloc !6752
  call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #9, !dbg !6753, !srcloc !6754
  call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #9, !dbg !6755, !srcloc !6756
  call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #9, !dbg !6757, !srcloc !6758
  call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #9, !dbg !6759, !srcloc !6760
  call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #9, !dbg !6761, !srcloc !6762
  call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #9, !dbg !6763, !srcloc !6764
  call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #9, !dbg !6765, !srcloc !6766
  call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #9, !dbg !6767, !srcloc !6768
  call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #9, !dbg !6769, !srcloc !6770
  call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #9, !dbg !6771, !srcloc !6772
  call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #9, !dbg !6773, !srcloc !6774
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #9, !dbg !6775, !srcloc !6776
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #9, !dbg !6777, !srcloc !6778
  call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_C\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_C,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_C,%object", ""() #9, !dbg !6779, !srcloc !6780
  call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #9, !dbg !6781, !srcloc !6782
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #9, !dbg !6783, !srcloc !6784
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #9, !dbg !6785, !srcloc !6786
  call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #9, !dbg !6787, !srcloc !6788
  call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #9, !dbg !6789, !srcloc !6790
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #9, !dbg !6791, !srcloc !6792
  call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #9, !dbg !6793, !srcloc !6794
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #9, !dbg !6795, !srcloc !6796
  call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #9, !dbg !6797, !srcloc !6798
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #9, !dbg !6799, !srcloc !6800
  call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #9, !dbg !6801, !srcloc !6802
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #9, !dbg !6803, !srcloc !6804
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #9, !dbg !6805, !srcloc !6806
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #9, !dbg !6807, !srcloc !6808
  call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #9, !dbg !6809, !srcloc !6810
  call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #9, !dbg !6811, !srcloc !6812
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #9, !dbg !6813, !srcloc !6814
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !6815, !srcloc !6816
  call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #9, !dbg !6817, !srcloc !6818
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #9, !dbg !6819, !srcloc !6820
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #9, !dbg !6821, !srcloc !6822
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #9, !dbg !6823, !srcloc !6824
  call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #9, !dbg !6825, !srcloc !6826
  call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_INPUT_EXPIRED\0A\09.equ\09CONFIG_UART_CONSOLE_INPUT_EXPIRED,1\0A\09.type\09CONFIG_UART_CONSOLE_INPUT_EXPIRED,%object", ""() #9, !dbg !6827, !srcloc !6828
  call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_INPUT_EXPIRED_TIMEOUT\0A\09.equ\09CONFIG_UART_CONSOLE_INPUT_EXPIRED_TIMEOUT,15000\0A\09.type\09CONFIG_UART_CONSOLE_INPUT_EXPIRED_TIMEOUT,%object", ""() #9, !dbg !6829, !srcloc !6830
  call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #9, !dbg !6831, !srcloc !6832
  call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #9, !dbg !6833, !srcloc !6834
  call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #9, !dbg !6835, !srcloc !6836
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #9, !dbg !6837, !srcloc !6838
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #9, !dbg !6839, !srcloc !6840
  call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #9, !dbg !6841, !srcloc !6842
  call void asm sideeffect ".globl\09CONFIG_UART_NRFX\0A\09.equ\09CONFIG_UART_NRFX,1\0A\09.type\09CONFIG_UART_NRFX,%object", ""() #9, !dbg !6843, !srcloc !6844
  call void asm sideeffect ".globl\09CONFIG_UART_0_NRF_UART\0A\09.equ\09CONFIG_UART_0_NRF_UART,1\0A\09.type\09CONFIG_UART_0_NRF_UART,%object", ""() #9, !dbg !6845, !srcloc !6846
  call void asm sideeffect ".globl\09CONFIG_NRF_UART_PERIPHERAL\0A\09.equ\09CONFIG_NRF_UART_PERIPHERAL,1\0A\09.type\09CONFIG_NRF_UART_PERIPHERAL,%object", ""() #9, !dbg !6847, !srcloc !6848
  call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #9, !dbg !6849, !srcloc !6850
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #9, !dbg !6851, !srcloc !6852
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #9, !dbg !6853, !srcloc !6854
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_WAIT_FOR_STABILITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_WAIT_FOR_STABILITY,1\0A\09.type\09CONFIG_SYSTEM_CLOCK_WAIT_FOR_STABILITY,%object", ""() #9, !dbg !6855, !srcloc !6856
  call void asm sideeffect ".globl\09CONFIG_GPIO_NRFX\0A\09.equ\09CONFIG_GPIO_NRFX,1\0A\09.type\09CONFIG_GPIO_NRFX,%object", ""() #9, !dbg !6857, !srcloc !6858
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_NRF\0A\09.equ\09CONFIG_CLOCK_CONTROL_NRF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_NRF,%object", ""() #9, !dbg !6859, !srcloc !6860
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_NRF_K32SRC_XTAL\0A\09.equ\09CONFIG_CLOCK_CONTROL_NRF_K32SRC_XTAL,1\0A\09.type\09CONFIG_CLOCK_CONTROL_NRF_K32SRC_XTAL,%object", ""() #9, !dbg !6861, !srcloc !6862
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_NRF_K32SRC_50PPM\0A\09.equ\09CONFIG_CLOCK_CONTROL_NRF_K32SRC_50PPM,1\0A\09.type\09CONFIG_CLOCK_CONTROL_NRF_K32SRC_50PPM,%object", ""() #9, !dbg !6863, !srcloc !6864
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_NRF_ACCURACY\0A\09.equ\09CONFIG_CLOCK_CONTROL_NRF_ACCURACY,50\0A\09.type\09CONFIG_CLOCK_CONTROL_NRF_ACCURACY,%object", ""() #9, !dbg !6865, !srcloc !6866
  call void asm sideeffect ".globl\09CONFIG_PINCTRL_STORE_REG\0A\09.equ\09CONFIG_PINCTRL_STORE_REG,1\0A\09.type\09CONFIG_PINCTRL_STORE_REG,%object", ""() #9, !dbg !6867, !srcloc !6868
  call void asm sideeffect ".globl\09CONFIG_PINCTRL_NRF\0A\09.equ\09CONFIG_PINCTRL_NRF,1\0A\09.type\09CONFIG_PINCTRL_NRF,%object", ""() #9, !dbg !6869, !srcloc !6870
  call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #9, !dbg !6871, !srcloc !6872
  call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #9, !dbg !6873, !srcloc !6874
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #9, !dbg !6875, !srcloc !6876
  call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #9, !dbg !6877, !srcloc !6878
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #9, !dbg !6879, !srcloc !6880
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #9, !dbg !6881, !srcloc !6882
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #9, !dbg !6883, !srcloc !6884
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #9, !dbg !6885, !srcloc !6886
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #9, !dbg !6887, !srcloc !6888
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #9, !dbg !6889, !srcloc !6890
  call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #9, !dbg !6891, !srcloc !6892
  call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #9, !dbg !6893, !srcloc !6894
  call void asm sideeffect ".globl\09CONFIG_NOTIFY\0A\09.equ\09CONFIG_NOTIFY,1\0A\09.type\09CONFIG_NOTIFY,%object", ""() #9, !dbg !6895, !srcloc !6896
  call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #9, !dbg !6897, !srcloc !6898
  call void asm sideeffect ".globl\09CONFIG_ONOFF\0A\09.equ\09CONFIG_ONOFF,1\0A\09.type\09CONFIG_ONOFF,%object", ""() #9, !dbg !6899, !srcloc !6900
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #9, !dbg !6901, !srcloc !6902
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #9, !dbg !6903, !srcloc !6904
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #9, !dbg !6905, !srcloc !6906
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #9, !dbg !6907, !srcloc !6908
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #9, !dbg !6909, !srcloc !6910
  call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #9, !dbg !6911, !srcloc !6912
  call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #9, !dbg !6913, !srcloc !6914
  call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #9, !dbg !6915, !srcloc !6916
  call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #9, !dbg !6917, !srcloc !6918
  call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #9, !dbg !6919, !srcloc !6920
  call void asm sideeffect ".globl\09CONFIG_PM_POLICY_DEFAULT\0A\09.equ\09CONFIG_PM_POLICY_DEFAULT,1\0A\09.type\09CONFIG_PM_POLICY_DEFAULT,%object", ""() #9, !dbg !6921, !srcloc !6922
  call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #9, !dbg !6923, !srcloc !6924
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #9, !dbg !6925, !srcloc !6926
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !6927, !srcloc !6928
  call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #9, !dbg !6929, !srcloc !6930
  call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !6931, !srcloc !6932
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !6933, !srcloc !6934
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #9, !dbg !6935, !srcloc !6936
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #9, !dbg !6937, !srcloc !6938
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #9, !dbg !6939, !srcloc !6940
  call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #9, !dbg !6941, !srcloc !6942
  call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #9, !dbg !6943, !srcloc !6944
  call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #9, !dbg !6945, !srcloc !6946
  call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #9, !dbg !6947, !srcloc !6948
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #9, !dbg !6949, !srcloc !6950
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #9, !dbg !6951, !srcloc !6952
  call void asm sideeffect ".globl\09CONFIG_NO_OPTIMIZATIONS\0A\09.equ\09CONFIG_NO_OPTIMIZATIONS,1\0A\09.type\09CONFIG_NO_OPTIMIZATIONS,%object", ""() #9, !dbg !6953, !srcloc !6954
  call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #9, !dbg !6955, !srcloc !6956
  call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #9, !dbg !6957, !srcloc !6958
  call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #9, !dbg !6959, !srcloc !6960
  call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #9, !dbg !6961, !srcloc !6962
  call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #9, !dbg !6963, !srcloc !6964
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #9, !dbg !6965, !srcloc !6966
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #9, !dbg !6967, !srcloc !6968
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #9, !dbg !6969, !srcloc !6970
  call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #9, !dbg !6971, !srcloc !6972
  call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #9, !dbg !6973, !srcloc !6974
  call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #9, !dbg !6975, !srcloc !6976
  call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #9, !dbg !6977, !srcloc !6978
  ret void, !dbg !6979
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_system_resume() #1 !dbg !6980 {
  %1 = alloca i8, align 1
  %2 = alloca %struct.pm_state_info, align 4
  call void @llvm.dbg.declare(metadata i8* %1, metadata !6981, metadata !DIExpression()), !dbg !6982
  %3 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !6983
  store i8 %3, i8* %1, align 1, !dbg !6982
  %4 = load i8, i8* %1, align 1, !dbg !6984
  %5 = zext i8 %4 to i32, !dbg !6984
  %6 = call zeroext i1 @atomic_test_and_clear_bit(i32* noundef getelementptr inbounds ([1 x i32], [1 x i32]* @z_post_ops_required, i32 0, i32 0), i32 noundef %5) #10, !dbg !6986
  br i1 %6, label %7, label %20, !dbg !6987

7:                                                ; preds = %0
  %8 = load i8, i8* %1, align 1, !dbg !6988
  %9 = zext i8 %8 to i32, !dbg !6990
  %10 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %9, !dbg !6990
  call void @pm_exit_pos_ops(%struct.pm_state_info* noundef %10) #10, !dbg !6991
  call void @pm_state_notify(i1 noundef zeroext false) #10, !dbg !6992
  %11 = load i8, i8* %1, align 1, !dbg !6993
  %12 = zext i8 %11 to i32, !dbg !6994
  %13 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %12, !dbg !6994
  %14 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %2, i32 0, i32 0, !dbg !6995
  store i32 0, i32* %14, align 4, !dbg !6995
  %15 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %2, i32 0, i32 1, !dbg !6995
  store i8 0, i8* %15, align 4, !dbg !6995
  %16 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %2, i32 0, i32 2, !dbg !6995
  store i32 0, i32* %16, align 4, !dbg !6995
  %17 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %2, i32 0, i32 3, !dbg !6995
  store i32 0, i32* %17, align 4, !dbg !6995
  %18 = bitcast %struct.pm_state_info* %13 to i8*, !dbg !6996
  %19 = bitcast %struct.pm_state_info* %2 to i8*, !dbg !6996
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %18, i8* align 4 %19, i32 16, i1 false), !dbg !6996
  br label %20, !dbg !6997

20:                                               ; preds = %7, %0
  ret void, !dbg !6998
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @atomic_test_and_clear_bit(i32* noundef %0, i32 noundef %1) #1 !dbg !6999 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !7002, metadata !DIExpression()), !dbg !7003
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7004, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7006, metadata !DIExpression()), !dbg !7007
  %7 = load i32, i32* %4, align 4, !dbg !7008
  %8 = and i32 %7, 31, !dbg !7008
  %9 = shl i32 1, %8, !dbg !7008
  store i32 %9, i32* %5, align 4, !dbg !7007
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7009, metadata !DIExpression()), !dbg !7010
  %10 = load i32*, i32** %3, align 4, !dbg !7011
  %11 = load i32, i32* %4, align 4, !dbg !7011
  %12 = udiv i32 %11, 32, !dbg !7011
  %13 = getelementptr inbounds i32, i32* %10, i32 %12, !dbg !7011
  %14 = load i32, i32* %5, align 4, !dbg !7012
  %15 = xor i32 %14, -1, !dbg !7013
  %16 = call i32 @atomic_and(i32* noundef %13, i32 noundef %15) #10, !dbg !7014
  store i32 %16, i32* %6, align 4, !dbg !7015
  %17 = load i32, i32* %6, align 4, !dbg !7016
  %18 = load i32, i32* %5, align 4, !dbg !7017
  %19 = and i32 %17, %18, !dbg !7018
  %20 = icmp ne i32 %19, 0, !dbg !7019
  ret i1 %20, !dbg !7020
}

; Function Attrs: noinline nounwind optnone
define internal void @pm_exit_pos_ops(%struct.pm_state_info* noundef %0) #1 !dbg !7021 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.pm_state_info*, align 4
  store %struct.pm_state_info* %0, %struct.pm_state_info** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_state_info** %3, metadata !7025, metadata !DIExpression()), !dbg !7026
  br i1 true, label %4, label %11, !dbg !7027

4:                                                ; preds = %1
  %5 = load %struct.pm_state_info*, %struct.pm_state_info** %3, align 4, !dbg !7028
  %6 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %5, i32 0, i32 0, !dbg !7031
  %7 = load i32, i32* %6, align 4, !dbg !7031
  %8 = load %struct.pm_state_info*, %struct.pm_state_info** %3, align 4, !dbg !7032
  %9 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %8, i32 0, i32 1, !dbg !7033
  %10 = load i8, i8* %9, align 4, !dbg !7033
  call void @pm_state_exit_post_ops(i32 noundef %7, i8 noundef zeroext %10) #10, !dbg !7034
  br label %17, !dbg !7035

11:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7036, metadata !DIExpression()) #9, !dbg !7038
  %12 = load i32, i32* %2, align 4, !dbg !7041
  %13 = icmp ne i32 %12, 0, !dbg !7043
  br i1 %13, label %14, label %15, !dbg !7044

14:                                               ; preds = %11
  br label %16, !dbg !7045

15:                                               ; preds = %11
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7047, !srcloc !7048
  br label %16, !dbg !7049

16:                                               ; preds = %14, %15
  br label %17

17:                                               ; preds = %16, %4
  ret void, !dbg !7050
}

; Function Attrs: noinline nounwind optnone
define internal void @pm_state_notify(i1 noundef zeroext %0) #1 !dbg !7051 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i8, align 1
  %9 = alloca %struct.pm_notifier*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca void (i32)*, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = zext i1 %0 to i8
  store i8 %13, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.declare(metadata %struct.pm_notifier** %9, metadata !7056, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !7058, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.declare(metadata void (i32)** %11, metadata !7064, metadata !DIExpression()), !dbg !7065
  store %struct.k_spinlock.13* @pm_notifier_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !7066, metadata !DIExpression()) #9, !dbg !7071
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !7073
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !7074, metadata !DIExpression()) #9, !dbg !7075
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7076, metadata !DIExpression()) #9, !dbg !7078
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !7080, !srcloc !7081
  store i32 %15, i32* %2, align 4, !dbg !7080
  %16 = load i32, i32* %2, align 4, !dbg !7082
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7083
  store i32 %16, i32* %17, align 4, !dbg !7084
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7085
  %19 = load i32, i32* %18, align 4, !dbg !7085
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !7086
  store i32 %19, i32* %20, align 4, !dbg !7086
  %21 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !7086
  %22 = bitcast %struct.z_spinlock_key* %12 to i8*, !dbg !7086
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !7086
  %23 = call %struct._snode* @sys_slist_peek_head.10(%struct._slist* noundef @pm_notifiers) #10, !dbg !7087
  %24 = icmp ne %struct._snode* %23, null, !dbg !7087
  br i1 %24, label %25, label %30, !dbg !7087

25:                                               ; preds = %1
  %26 = call %struct._snode* @sys_slist_peek_head.10(%struct._slist* noundef @pm_notifiers) #10, !dbg !7087
  %27 = bitcast %struct._snode* %26 to i8*, !dbg !7087
  %28 = getelementptr inbounds i8, i8* %27, i32 0, !dbg !7087
  %29 = bitcast i8* %28 to %struct.pm_notifier*, !dbg !7087
  br label %31, !dbg !7087

30:                                               ; preds = %1
  br label %31, !dbg !7087

31:                                               ; preds = %30, %25
  %32 = phi %struct.pm_notifier* [ %29, %25 ], [ null, %30 ], !dbg !7087
  store %struct.pm_notifier* %32, %struct.pm_notifier** %9, align 4, !dbg !7087
  br label %33, !dbg !7087

33:                                               ; preds = %77, %31
  %34 = load %struct.pm_notifier*, %struct.pm_notifier** %9, align 4, !dbg !7089
  %35 = icmp ne %struct.pm_notifier* %34, null, !dbg !7089
  br i1 %35, label %36, label %79, !dbg !7087

36:                                               ; preds = %33
  %37 = load i8, i8* %8, align 1, !dbg !7091
  %38 = trunc i8 %37 to i1, !dbg !7091
  br i1 %38, label %39, label %43, !dbg !7094

39:                                               ; preds = %36
  %40 = load %struct.pm_notifier*, %struct.pm_notifier** %9, align 4, !dbg !7095
  %41 = getelementptr inbounds %struct.pm_notifier, %struct.pm_notifier* %40, i32 0, i32 1, !dbg !7097
  %42 = load void (i32)*, void (i32)** %41, align 4, !dbg !7097
  store void (i32)* %42, void (i32)** %11, align 4, !dbg !7098
  br label %47, !dbg !7099

43:                                               ; preds = %36
  %44 = load %struct.pm_notifier*, %struct.pm_notifier** %9, align 4, !dbg !7100
  %45 = getelementptr inbounds %struct.pm_notifier, %struct.pm_notifier* %44, i32 0, i32 2, !dbg !7102
  %46 = load void (i32)*, void (i32)** %45, align 4, !dbg !7102
  store void (i32)* %46, void (i32)** %11, align 4, !dbg !7103
  br label %47

47:                                               ; preds = %43, %39
  %48 = load void (i32)*, void (i32)** %11, align 4, !dbg !7104
  %49 = icmp ne void (i32)* %48, null, !dbg !7104
  br i1 %49, label %50, label %57, !dbg !7106

50:                                               ; preds = %47
  %51 = load void (i32)*, void (i32)** %11, align 4, !dbg !7107
  %52 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !7109
  %53 = zext i8 %52 to i32, !dbg !7110
  %54 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %53, !dbg !7110
  %55 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %54, i32 0, i32 0, !dbg !7111
  %56 = load i32, i32* %55, align 4, !dbg !7111
  call void %51(i32 noundef %56) #10, !dbg !7107
  br label %57, !dbg !7112

57:                                               ; preds = %50, %47
  br label %58, !dbg !7113

58:                                               ; preds = %57
  %59 = load %struct.pm_notifier*, %struct.pm_notifier** %9, align 4, !dbg !7089
  %60 = icmp ne %struct.pm_notifier* %59, null, !dbg !7089
  br i1 %60, label %61, label %76, !dbg !7089

61:                                               ; preds = %58
  %62 = load %struct.pm_notifier*, %struct.pm_notifier** %9, align 4, !dbg !7089
  %63 = getelementptr inbounds %struct.pm_notifier, %struct.pm_notifier* %62, i32 0, i32 0, !dbg !7089
  %64 = call %struct._snode* @sys_slist_peek_next.11(%struct._snode* noundef %63) #10, !dbg !7089
  %65 = icmp ne %struct._snode* %64, null, !dbg !7089
  br i1 %65, label %66, label %73, !dbg !7089

66:                                               ; preds = %61
  %67 = load %struct.pm_notifier*, %struct.pm_notifier** %9, align 4, !dbg !7089
  %68 = getelementptr inbounds %struct.pm_notifier, %struct.pm_notifier* %67, i32 0, i32 0, !dbg !7089
  %69 = call %struct._snode* @sys_slist_peek_next.11(%struct._snode* noundef %68) #10, !dbg !7089
  %70 = bitcast %struct._snode* %69 to i8*, !dbg !7089
  %71 = getelementptr inbounds i8, i8* %70, i32 0, !dbg !7089
  %72 = bitcast i8* %71 to %struct.pm_notifier*, !dbg !7089
  br label %74, !dbg !7089

73:                                               ; preds = %61
  br label %74, !dbg !7089

74:                                               ; preds = %73, %66
  %75 = phi %struct.pm_notifier* [ %72, %66 ], [ null, %73 ], !dbg !7089
  br label %77, !dbg !7089

76:                                               ; preds = %58
  br label %77, !dbg !7089

77:                                               ; preds = %76, %74
  %78 = phi %struct.pm_notifier* [ %75, %74 ], [ null, %76 ], !dbg !7089
  store %struct.pm_notifier* %78, %struct.pm_notifier** %9, align 4, !dbg !7089
  br label %33, !dbg !7089, !llvm.loop !7114

79:                                               ; preds = %33
  %80 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !7116
  %81 = bitcast i32* %80 to [1 x i32]*, !dbg !7116
  %82 = load [1 x i32], [1 x i32]* %81, align 4, !dbg !7116
  %83 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %84 = bitcast i32* %83 to [1 x i32]*
  store [1 x i32] %82, [1 x i32]* %84, align 4
  store %struct.k_spinlock.13* @pm_notifier_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !7117, metadata !DIExpression()) #9, !dbg !7121
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !7123, metadata !DIExpression()) #9, !dbg !7124
  %85 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !7125
  %86 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !7126
  %87 = load i32, i32* %86, align 4, !dbg !7126
  store i32 %87, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7036, metadata !DIExpression()) #9, !dbg !7127
  %88 = load i32, i32* %3, align 4, !dbg !7129
  %89 = icmp ne i32 %88, 0, !dbg !7130
  br i1 %89, label %90, label %91, !dbg !7131

90:                                               ; preds = %79
  br label %92, !dbg !7132

91:                                               ; preds = %79
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7133, !srcloc !7048
  br label %92, !dbg !7134

92:                                               ; preds = %90, %91
  ret void, !dbg !7135
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_head.10(%struct._slist* noundef %0) #1 !dbg !7136 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !7140, metadata !DIExpression()), !dbg !7141
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !7142
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 0, !dbg !7143
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7143
  ret %struct._snode* %5, !dbg !7144
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next.11(%struct._snode* noundef %0) #1 !dbg !7145 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !7148, metadata !DIExpression()), !dbg !7149
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7149
  %4 = icmp ne %struct._snode* %3, null, !dbg !7149
  br i1 %4, label %5, label %8, !dbg !7149

5:                                                ; preds = %1
  %6 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7149
  %7 = call %struct._snode* @sys_slist_peek_next_no_check.12(%struct._snode* noundef %6) #10, !dbg !7149
  br label %9, !dbg !7149

8:                                                ; preds = %1
  br label %9, !dbg !7149

9:                                                ; preds = %8, %5
  %10 = phi %struct._snode* [ %7, %5 ], [ null, %8 ], !dbg !7149
  ret %struct._snode* %10, !dbg !7149
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next_no_check.12(%struct._snode* noundef %0) #1 !dbg !7150 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !7151, metadata !DIExpression()), !dbg !7152
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7152
  %4 = call %struct._snode* @z_snode_next_peek.13(%struct._snode* noundef %3) #10, !dbg !7152
  ret %struct._snode* %4, !dbg !7152
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @z_snode_next_peek.13(%struct._snode* noundef %0) #1 !dbg !7153 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !7154, metadata !DIExpression()), !dbg !7155
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7156
  %4 = getelementptr inbounds %struct._snode, %struct._snode* %3, i32 0, i32 0, !dbg !7157
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7157
  ret %struct._snode* %5, !dbg !7158
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_and(i32* noundef %0, i32 noundef %1) #1 !dbg !7159 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !7163, metadata !DIExpression()), !dbg !7164
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7165, metadata !DIExpression()), !dbg !7166
  br label %5, !dbg !7167

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !7168, !srcloc !7170
  br label %6, !dbg !7168

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !7171
  %8 = load i32, i32* %4, align 4, !dbg !7172
  %9 = call i32 @z_impl_atomic_and(i32* noundef %7, i32 noundef %8) #10, !dbg !7173
  ret i32 %9, !dbg !7174
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @pm_state_force(i8 noundef zeroext %0, %struct.pm_state_info* noundef %1) #1 !dbg !7175 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i8, align 1
  %10 = alloca %struct.pm_state_info*, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  store i8 %0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !7180, metadata !DIExpression()), !dbg !7181
  store %struct.pm_state_info* %1, %struct.pm_state_info** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_state_info** %10, metadata !7182, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !7184, metadata !DIExpression()), !dbg !7185
  store %struct.k_spinlock.13* @pm_forced_state_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !7066, metadata !DIExpression()) #9, !dbg !7186
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !7188
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !7074, metadata !DIExpression()) #9, !dbg !7189
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7076, metadata !DIExpression()) #9, !dbg !7190
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !7192, !srcloc !7081
  store i32 %14, i32* %3, align 4, !dbg !7192
  %15 = load i32, i32* %3, align 4, !dbg !7193
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !7194
  store i32 %15, i32* %16, align 4, !dbg !7195
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !7196
  %18 = load i32, i32* %17, align 4, !dbg !7196
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !7197
  store i32 %18, i32* %19, align 4, !dbg !7197
  %20 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !7197
  %21 = bitcast %struct.z_spinlock_key* %12 to i8*, !dbg !7197
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 4, i1 false), !dbg !7197
  %22 = load i8, i8* %9, align 1, !dbg !7198
  %23 = zext i8 %22 to i32, !dbg !7199
  %24 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_forced_state, i32 0, i32 %23, !dbg !7199
  %25 = load %struct.pm_state_info*, %struct.pm_state_info** %10, align 4, !dbg !7200
  %26 = bitcast %struct.pm_state_info* %24 to i8*, !dbg !7201
  %27 = bitcast %struct.pm_state_info* %25 to i8*, !dbg !7201
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %26, i8* align 4 %27, i32 16, i1 false), !dbg !7201
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !7202
  %29 = bitcast i32* %28 to [1 x i32]*, !dbg !7202
  %30 = load [1 x i32], [1 x i32]* %29, align 4, !dbg !7202
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %32 = bitcast i32* %31 to [1 x i32]*
  store [1 x i32] %30, [1 x i32]* %32, align 4
  store %struct.k_spinlock.13* @pm_forced_state_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !7117, metadata !DIExpression()) #9, !dbg !7203
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !7123, metadata !DIExpression()) #9, !dbg !7205
  %33 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !7206
  %34 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !7207
  %35 = load i32, i32* %34, align 4, !dbg !7207
  store i32 %35, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7036, metadata !DIExpression()) #9, !dbg !7208
  %36 = load i32, i32* %4, align 4, !dbg !7210
  %37 = icmp ne i32 %36, 0, !dbg !7211
  br i1 %37, label %38, label %39, !dbg !7212

38:                                               ; preds = %2
  br label %40, !dbg !7213

39:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7214, !srcloc !7048
  br label %40, !dbg !7215

40:                                               ; preds = %38, %39
  ret i1 true, !dbg !7216
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @pm_system_suspend(i32 noundef %0) #1 !dbg !7217 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i1, align 1
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca %struct.pm_state_info*, align 4
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7220, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7222, metadata !DIExpression()), !dbg !7223
  %18 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !7224
  store i8 %18, i8* %10, align 1, !dbg !7223
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !7225, metadata !DIExpression()), !dbg !7226
  br label %19, !dbg !7227

19:                                               ; preds = %1
  br label %20, !dbg !7228

20:                                               ; preds = %19
  store %struct.k_spinlock.13* @pm_forced_state_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !7066, metadata !DIExpression()) #9, !dbg !7230
  %21 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !7232
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !7074, metadata !DIExpression()) #9, !dbg !7233
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7076, metadata !DIExpression()) #9, !dbg !7234
  %22 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !7236, !srcloc !7081
  store i32 %22, i32* %2, align 4, !dbg !7236
  %23 = load i32, i32* %2, align 4, !dbg !7237
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7238
  store i32 %23, i32* %24, align 4, !dbg !7239
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7240
  %26 = load i32, i32* %25, align 4, !dbg !7240
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !7241
  store i32 %26, i32* %27, align 4, !dbg !7241
  %28 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !7241
  %29 = bitcast %struct.z_spinlock_key* %12 to i8*, !dbg !7241
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %28, i8* align 4 %29, i32 4, i1 false), !dbg !7241
  %30 = load i8, i8* %10, align 1, !dbg !7242
  %31 = zext i8 %30 to i32, !dbg !7244
  %32 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_forced_state, i32 0, i32 %31, !dbg !7244
  %33 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %32, i32 0, i32 0, !dbg !7245
  %34 = load i32, i32* %33, align 4, !dbg !7245
  %35 = icmp ne i32 %34, 0, !dbg !7246
  br i1 %35, label %36, label %49, !dbg !7247

36:                                               ; preds = %20
  %37 = load i8, i8* %10, align 1, !dbg !7248
  %38 = zext i8 %37 to i32, !dbg !7250
  %39 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %38, !dbg !7250
  %40 = load i8, i8* %10, align 1, !dbg !7251
  %41 = zext i8 %40 to i32, !dbg !7252
  %42 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_forced_state, i32 0, i32 %41, !dbg !7252
  %43 = bitcast %struct.pm_state_info* %39 to i8*, !dbg !7252
  %44 = bitcast %struct.pm_state_info* %42 to i8*, !dbg !7252
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %43, i8* align 4 %44, i32 16, i1 false), !dbg !7252
  %45 = load i8, i8* %10, align 1, !dbg !7253
  %46 = zext i8 %45 to i32, !dbg !7254
  %47 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_forced_state, i32 0, i32 %46, !dbg !7254
  %48 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %47, i32 0, i32 0, !dbg !7255
  store i32 0, i32* %48, align 4, !dbg !7256
  br label %63, !dbg !7257

49:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata %struct.pm_state_info** %13, metadata !7258, metadata !DIExpression()), !dbg !7260
  %50 = load i8, i8* %10, align 1, !dbg !7261
  %51 = load i32, i32* %9, align 4, !dbg !7262
  %52 = call %struct.pm_state_info* @pm_policy_next_state(i8 noundef zeroext %50, i32 noundef %51) #10, !dbg !7263
  store %struct.pm_state_info* %52, %struct.pm_state_info** %13, align 4, !dbg !7264
  %53 = load %struct.pm_state_info*, %struct.pm_state_info** %13, align 4, !dbg !7265
  %54 = icmp ne %struct.pm_state_info* %53, null, !dbg !7267
  br i1 %54, label %55, label %62, !dbg !7268

55:                                               ; preds = %49
  %56 = load i8, i8* %10, align 1, !dbg !7269
  %57 = zext i8 %56 to i32, !dbg !7271
  %58 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %57, !dbg !7271
  %59 = load %struct.pm_state_info*, %struct.pm_state_info** %13, align 4, !dbg !7272
  %60 = bitcast %struct.pm_state_info* %58 to i8*, !dbg !7273
  %61 = bitcast %struct.pm_state_info* %59 to i8*, !dbg !7273
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %60, i8* align 4 %61, i32 16, i1 false), !dbg !7273
  br label %62, !dbg !7274

62:                                               ; preds = %55, %49
  br label %63

63:                                               ; preds = %62, %36
  %64 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !7275
  %65 = bitcast i32* %64 to [1 x i32]*, !dbg !7275
  %66 = load [1 x i32], [1 x i32]* %65, align 4, !dbg !7275
  %67 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %68 = bitcast i32* %67 to [1 x i32]*
  store [1 x i32] %66, [1 x i32]* %68, align 4
  store %struct.k_spinlock.13* @pm_forced_state_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !7117, metadata !DIExpression()) #9, !dbg !7276
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !7123, metadata !DIExpression()) #9, !dbg !7278
  %69 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !7279
  %70 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !7280
  %71 = load i32, i32* %70, align 4, !dbg !7280
  store i32 %71, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7036, metadata !DIExpression()) #9, !dbg !7281
  %72 = load i32, i32* %3, align 4, !dbg !7283
  %73 = icmp ne i32 %72, 0, !dbg !7284
  br i1 %73, label %74, label %75, !dbg !7285

74:                                               ; preds = %63
  br label %76, !dbg !7286

75:                                               ; preds = %63
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7287, !srcloc !7048
  br label %76, !dbg !7288

76:                                               ; preds = %74, %75
  %77 = load i8, i8* %10, align 1, !dbg !7289
  %78 = zext i8 %77 to i32, !dbg !7291
  %79 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %78, !dbg !7291
  %80 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %79, i32 0, i32 0, !dbg !7292
  %81 = load i32, i32* %80, align 4, !dbg !7292
  %82 = icmp eq i32 %81, 0, !dbg !7293
  br i1 %82, label %83, label %88, !dbg !7294

83:                                               ; preds = %76
  br label %84, !dbg !7295

84:                                               ; preds = %83
  br label %85, !dbg !7297

85:                                               ; preds = %84
  br label %86, !dbg !7301

86:                                               ; preds = %85
  br label %87, !dbg !7302

87:                                               ; preds = %86
  store i1 false, i1* %8, align 1, !dbg !7304
  br label %114, !dbg !7304

88:                                               ; preds = %76
  %89 = load i32, i32* %9, align 4, !dbg !7305
  %90 = sext i32 %89 to i64, !dbg !7305
  %91 = icmp ne i64 %90, -1, !dbg !7307
  br i1 %91, label %92, label %101, !dbg !7308

92:                                               ; preds = %88
  %93 = load i32, i32* %9, align 4, !dbg !7309
  %94 = load i8, i8* %10, align 1, !dbg !7311
  %95 = zext i8 %94 to i32, !dbg !7312
  %96 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %95, !dbg !7312
  %97 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %96, i32 0, i32 3, !dbg !7313
  %98 = load i32, i32* %97, align 4, !dbg !7313
  %99 = call i32 @k_us_to_ticks_ceil32(i32 noundef %98) #10, !dbg !7314
  %100 = sub i32 %93, %99, !dbg !7315
  call void @z_set_timeout_expiry(i32 noundef %100, i1 noundef zeroext true) #10, !dbg !7316
  br label %101, !dbg !7317

101:                                              ; preds = %92, %88
  call void @k_sched_lock() #10, !dbg !7318
  call void @pm_stats_start() #10, !dbg !7319
  call void @pm_state_notify(i1 noundef zeroext true) #10, !dbg !7320
  %102 = load i8, i8* %10, align 1, !dbg !7321
  %103 = zext i8 %102 to i32, !dbg !7321
  call void @atomic_set_bit(i32* noundef getelementptr inbounds ([1 x i32], [1 x i32]* @z_post_ops_required, i32 0, i32 0), i32 noundef %103) #10, !dbg !7322
  %104 = load i8, i8* %10, align 1, !dbg !7323
  %105 = zext i8 %104 to i32, !dbg !7324
  %106 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %105, !dbg !7324
  call void @state_set(%struct.pm_state_info* noundef %106) #10, !dbg !7325
  call void @pm_stats_stop() #10, !dbg !7326
  %107 = load i8, i8* %10, align 1, !dbg !7327
  %108 = zext i8 %107 to i32, !dbg !7328
  %109 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %108, !dbg !7328
  %110 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %109, i32 0, i32 0, !dbg !7329
  %111 = load i32, i32* %110, align 4, !dbg !7329
  call void @pm_stats_update(i32 noundef %111) #10, !dbg !7330
  call void @pm_system_resume() #10, !dbg !7331
  call void @k_sched_unlock() #10, !dbg !7332
  br label %112, !dbg !7333

112:                                              ; preds = %101
  br label %113, !dbg !7334

113:                                              ; preds = %112
  store i1 true, i1* %8, align 1, !dbg !7336
  br label %114, !dbg !7336

114:                                              ; preds = %113, %87
  %115 = load i1, i1* %8, align 1, !dbg !7337
  ret i1 %115, !dbg !7337
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_us_to_ticks_ceil32(i32 noundef %0) #1 !dbg !7338 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !7342, metadata !DIExpression()), !dbg !7343
  %15 = load i32, i32* %14, align 4, !dbg !7344
  %16 = zext i32 %15 to i64, !dbg !7344
  store i64 %16, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !7345, metadata !DIExpression()), !dbg !7349
  store i32 1000000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7351, metadata !DIExpression()), !dbg !7352
  store i32 32768, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7353, metadata !DIExpression()), !dbg !7354
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !7355, metadata !DIExpression()), !dbg !7356
  store i8 1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !7357, metadata !DIExpression()), !dbg !7358
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !7359, metadata !DIExpression()), !dbg !7360
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !7361, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7363, metadata !DIExpression()), !dbg !7364
  %17 = load i8, i8* %6, align 1, !dbg !7365
  %18 = trunc i8 %17 to i1, !dbg !7365
  br i1 %18, label %19, label %28, !dbg !7366

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !7367
  %21 = load i32, i32* %4, align 4, !dbg !7368
  %22 = icmp ugt i32 %20, %21, !dbg !7369
  br i1 %22, label %23, label %28, !dbg !7370

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !7371
  %25 = load i32, i32* %4, align 4, !dbg !7372
  %26 = urem i32 %24, %25, !dbg !7373
  %27 = icmp eq i32 %26, 0, !dbg !7374
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !7375
  %30 = zext i1 %29 to i8, !dbg !7364
  store i8 %30, i8* %10, align 1, !dbg !7364
  call void @llvm.dbg.declare(metadata i8* %11, metadata !7376, metadata !DIExpression()), !dbg !7377
  %31 = load i8, i8* %6, align 1, !dbg !7378
  %32 = trunc i8 %31 to i1, !dbg !7378
  br i1 %32, label %33, label %42, !dbg !7379

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !7380
  %35 = load i32, i32* %5, align 4, !dbg !7381
  %36 = icmp ugt i32 %34, %35, !dbg !7382
  br i1 %36, label %37, label %42, !dbg !7383

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !7384
  %39 = load i32, i32* %5, align 4, !dbg !7385
  %40 = urem i32 %38, %39, !dbg !7386
  %41 = icmp eq i32 %40, 0, !dbg !7387
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !7375
  %44 = zext i1 %43 to i8, !dbg !7377
  store i8 %44, i8* %11, align 1, !dbg !7377
  %45 = load i32, i32* %4, align 4, !dbg !7388
  %46 = load i32, i32* %5, align 4, !dbg !7390
  %47 = icmp eq i32 %45, %46, !dbg !7391
  br i1 %47, label %48, label %59, !dbg !7392

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !7393
  %50 = trunc i8 %49 to i1, !dbg !7393
  br i1 %50, label %51, label %55, !dbg !7393

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !7395
  %53 = trunc i64 %52 to i32, !dbg !7396
  %54 = zext i32 %53 to i64, !dbg !7397
  br label %57, !dbg !7393

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !7398
  br label %57, !dbg !7393

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !7393
  store i64 %58, i64* %2, align 8, !dbg !7399
  br label %196, !dbg !7399

59:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i64* %12, metadata !7400, metadata !DIExpression()), !dbg !7401
  store i64 0, i64* %12, align 8, !dbg !7401
  %60 = load i8, i8* %10, align 1, !dbg !7402
  %61 = trunc i8 %60 to i1, !dbg !7402
  br i1 %61, label %87, label %62, !dbg !7404

62:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !7405, metadata !DIExpression()), !dbg !7407
  %63 = load i8, i8* %11, align 1, !dbg !7408
  %64 = trunc i8 %63 to i1, !dbg !7408
  br i1 %64, label %65, label %69, !dbg !7408

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !7409
  %67 = load i32, i32* %5, align 4, !dbg !7410
  %68 = udiv i32 %66, %67, !dbg !7411
  br label %71, !dbg !7408

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !7412
  br label %71, !dbg !7408

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !7408
  store i32 %72, i32* %13, align 4, !dbg !7407
  %73 = load i8, i8* %8, align 1, !dbg !7413
  %74 = trunc i8 %73 to i1, !dbg !7413
  br i1 %74, label %75, label %79, !dbg !7415

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !7416
  %77 = sub i32 %76, 1, !dbg !7418
  %78 = zext i32 %77 to i64, !dbg !7416
  store i64 %78, i64* %12, align 8, !dbg !7419
  br label %79, !dbg !7420

79:                                               ; preds = %75, %71
  %80 = load i8, i8* %9, align 1, !dbg !7421
  %81 = trunc i8 %80 to i1, !dbg !7421
  br i1 %81, label %82, label %86, !dbg !7423

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !7424
  %84 = udiv i32 %83, 2, !dbg !7426
  %85 = zext i32 %84 to i64, !dbg !7424
  store i64 %85, i64* %12, align 8, !dbg !7427
  br label %86, !dbg !7428

86:                                               ; preds = %82, %79
  br label %87, !dbg !7429

87:                                               ; preds = %86, %59
  %88 = load i8, i8* %11, align 1, !dbg !7430
  %89 = trunc i8 %88 to i1, !dbg !7430
  br i1 %89, label %90, label %115, !dbg !7432

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !7433
  %92 = load i64, i64* %3, align 8, !dbg !7435
  %93 = add i64 %92, %91, !dbg !7435
  store i64 %93, i64* %3, align 8, !dbg !7435
  %94 = load i8, i8* %7, align 1, !dbg !7436
  %95 = trunc i8 %94 to i1, !dbg !7436
  br i1 %95, label %96, label %107, !dbg !7438

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !7439
  %98 = icmp ult i64 %97, 4294967296, !dbg !7440
  br i1 %98, label %99, label %107, !dbg !7441

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !7442
  %101 = trunc i64 %100 to i32, !dbg !7444
  %102 = load i32, i32* %4, align 4, !dbg !7445
  %103 = load i32, i32* %5, align 4, !dbg !7446
  %104 = udiv i32 %102, %103, !dbg !7447
  %105 = udiv i32 %101, %104, !dbg !7448
  %106 = zext i32 %105 to i64, !dbg !7449
  store i64 %106, i64* %2, align 8, !dbg !7450
  br label %196, !dbg !7450

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !7451
  %109 = load i32, i32* %4, align 4, !dbg !7453
  %110 = zext i32 %109 to i64, !dbg !7454
  %111 = load i32, i32* %5, align 4, !dbg !7455
  %112 = zext i32 %111 to i64, !dbg !7455
  %113 = udiv i64 %110, %112, !dbg !7456
  %114 = udiv i64 %108, %113, !dbg !7457
  store i64 %114, i64* %2, align 8, !dbg !7458
  br label %196, !dbg !7458

115:                                              ; preds = %87
  %116 = load i8, i8* %10, align 1, !dbg !7459
  %117 = trunc i8 %116 to i1, !dbg !7459
  br i1 %117, label %118, label %137, !dbg !7461

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !7462
  %120 = trunc i8 %119 to i1, !dbg !7462
  br i1 %120, label %121, label %129, !dbg !7465

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !7466
  %123 = trunc i64 %122 to i32, !dbg !7468
  %124 = load i32, i32* %5, align 4, !dbg !7469
  %125 = load i32, i32* %4, align 4, !dbg !7470
  %126 = udiv i32 %124, %125, !dbg !7471
  %127 = mul i32 %123, %126, !dbg !7472
  %128 = zext i32 %127 to i64, !dbg !7473
  store i64 %128, i64* %2, align 8, !dbg !7474
  br label %196, !dbg !7474

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !7475
  %131 = load i32, i32* %5, align 4, !dbg !7477
  %132 = zext i32 %131 to i64, !dbg !7478
  %133 = load i32, i32* %4, align 4, !dbg !7479
  %134 = zext i32 %133 to i64, !dbg !7479
  %135 = udiv i64 %132, %134, !dbg !7480
  %136 = mul i64 %130, %135, !dbg !7481
  store i64 %136, i64* %2, align 8, !dbg !7482
  br label %196, !dbg !7482

137:                                              ; preds = %115
  %138 = load i8, i8* %7, align 1, !dbg !7483
  %139 = trunc i8 %138 to i1, !dbg !7483
  br i1 %139, label %140, label %152, !dbg !7486

140:                                              ; preds = %137
  %141 = load i64, i64* %3, align 8, !dbg !7487
  %142 = load i32, i32* %5, align 4, !dbg !7489
  %143 = zext i32 %142 to i64, !dbg !7489
  %144 = mul i64 %141, %143, !dbg !7490
  %145 = load i64, i64* %12, align 8, !dbg !7491
  %146 = add i64 %144, %145, !dbg !7492
  %147 = load i32, i32* %4, align 4, !dbg !7493
  %148 = zext i32 %147 to i64, !dbg !7493
  %149 = udiv i64 %146, %148, !dbg !7494
  %150 = trunc i64 %149 to i32, !dbg !7495
  %151 = zext i32 %150 to i64, !dbg !7495
  store i64 %151, i64* %2, align 8, !dbg !7496
  br label %196, !dbg !7496

152:                                              ; preds = %137
  %153 = load i8, i8* %6, align 1, !dbg !7497
  %154 = trunc i8 %153 to i1, !dbg !7497
  br i1 %154, label %155, label %175, !dbg !7499

155:                                              ; preds = %152
  %156 = load i32, i32* %4, align 4, !dbg !7500
  %157 = zext i32 %156 to i64, !dbg !7500
  %158 = mul i64 31536000, %157, !dbg !7500
  %159 = add i64 %158, 4294967294, !dbg !7500
  %160 = udiv i64 %159, 4294967295, !dbg !7500
  %161 = load i32, i32* %5, align 4, !dbg !7500
  %162 = zext i32 %161 to i64, !dbg !7500
  %163 = mul i64 %160, %162, !dbg !7500
  %164 = icmp ule i64 %163, 4294967295, !dbg !7500
  br i1 %164, label %165, label %175, !dbg !7501

165:                                              ; preds = %155
  %166 = load i64, i64* %3, align 8, !dbg !7502
  %167 = load i32, i32* %5, align 4, !dbg !7504
  %168 = zext i32 %167 to i64, !dbg !7504
  %169 = mul i64 %166, %168, !dbg !7505
  %170 = load i64, i64* %12, align 8, !dbg !7506
  %171 = add i64 %169, %170, !dbg !7507
  %172 = load i32, i32* %4, align 4, !dbg !7508
  %173 = zext i32 %172 to i64, !dbg !7508
  %174 = udiv i64 %171, %173, !dbg !7509
  store i64 %174, i64* %2, align 8, !dbg !7510
  br label %196, !dbg !7510

175:                                              ; preds = %155, %152
  %176 = load i64, i64* %3, align 8, !dbg !7511
  %177 = load i32, i32* %4, align 4, !dbg !7513
  %178 = zext i32 %177 to i64, !dbg !7513
  %179 = udiv i64 %176, %178, !dbg !7514
  %180 = load i32, i32* %5, align 4, !dbg !7515
  %181 = zext i32 %180 to i64, !dbg !7515
  %182 = mul i64 %179, %181, !dbg !7516
  %183 = load i64, i64* %3, align 8, !dbg !7517
  %184 = load i32, i32* %4, align 4, !dbg !7518
  %185 = zext i32 %184 to i64, !dbg !7518
  %186 = urem i64 %183, %185, !dbg !7519
  %187 = load i32, i32* %5, align 4, !dbg !7520
  %188 = zext i32 %187 to i64, !dbg !7520
  %189 = mul i64 %186, %188, !dbg !7521
  %190 = load i64, i64* %12, align 8, !dbg !7522
  %191 = add i64 %189, %190, !dbg !7523
  %192 = load i32, i32* %4, align 4, !dbg !7524
  %193 = zext i32 %192 to i64, !dbg !7524
  %194 = udiv i64 %191, %193, !dbg !7525
  %195 = add i64 %182, %194, !dbg !7526
  store i64 %195, i64* %2, align 8, !dbg !7527
  br label %196, !dbg !7527

196:                                              ; preds = %57, %99, %107, %121, %129, %140, %165, %175
  %197 = load i64, i64* %2, align 8, !dbg !7528
  %198 = trunc i64 %197 to i32, !dbg !7529
  ret i32 %198, !dbg !7530
}

; Function Attrs: noinline nounwind optnone
define internal void @pm_stats_start() #1 !dbg !7531 {
  ret void, !dbg !7533
}

; Function Attrs: noinline nounwind optnone
define internal void @atomic_set_bit(i32* noundef %0, i32 noundef %1) #1 !dbg !7534 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !7537, metadata !DIExpression()), !dbg !7538
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7539, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7541, metadata !DIExpression()), !dbg !7542
  %6 = load i32, i32* %4, align 4, !dbg !7543
  %7 = and i32 %6, 31, !dbg !7543
  %8 = shl i32 1, %7, !dbg !7543
  store i32 %8, i32* %5, align 4, !dbg !7542
  %9 = load i32*, i32** %3, align 4, !dbg !7544
  %10 = load i32, i32* %4, align 4, !dbg !7544
  %11 = udiv i32 %10, 32, !dbg !7544
  %12 = getelementptr inbounds i32, i32* %9, i32 %11, !dbg !7544
  %13 = load i32, i32* %5, align 4, !dbg !7545
  %14 = call i32 @atomic_or(i32* noundef %12, i32 noundef %13) #10, !dbg !7546
  ret void, !dbg !7547
}

; Function Attrs: noinline nounwind optnone
define internal void @state_set(%struct.pm_state_info* noundef %0) #1 !dbg !7548 {
  %2 = alloca %struct.pm_state_info*, align 4
  store %struct.pm_state_info* %0, %struct.pm_state_info** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_state_info** %2, metadata !7549, metadata !DIExpression()), !dbg !7550
  br i1 true, label %3, label %10, !dbg !7551

3:                                                ; preds = %1
  %4 = load %struct.pm_state_info*, %struct.pm_state_info** %2, align 4, !dbg !7552
  %5 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %4, i32 0, i32 0, !dbg !7555
  %6 = load i32, i32* %5, align 4, !dbg !7555
  %7 = load %struct.pm_state_info*, %struct.pm_state_info** %2, align 4, !dbg !7556
  %8 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %7, i32 0, i32 1, !dbg !7557
  %9 = load i8, i8* %8, align 4, !dbg !7557
  call void @pm_state_set(i32 noundef %6, i8 noundef zeroext %9) #10, !dbg !7558
  br label %10, !dbg !7559

10:                                               ; preds = %3, %1
  ret void, !dbg !7560
}

; Function Attrs: noinline nounwind optnone
define internal void @pm_stats_stop() #1 !dbg !7561 {
  ret void, !dbg !7562
}

; Function Attrs: noinline nounwind optnone
define internal void @pm_stats_update(i32 noundef %0) #1 !dbg !7563 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7564, metadata !DIExpression()), !dbg !7565
  ret void, !dbg !7566
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_or(i32* noundef %0, i32 noundef %1) #1 !dbg !7567 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !7568, metadata !DIExpression()), !dbg !7569
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7570, metadata !DIExpression()), !dbg !7571
  br label %5, !dbg !7572

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !7573, !srcloc !7575
  br label %6, !dbg !7573

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !7576
  %8 = load i32, i32* %4, align 4, !dbg !7577
  %9 = call i32 @z_impl_atomic_or(i32* noundef %7, i32 noundef %8) #10, !dbg !7578
  ret i32 %9, !dbg !7579
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_notifier_register(%struct.pm_notifier* noundef %0) #1 !dbg !7580 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.pm_notifier*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  store %struct.pm_notifier* %0, %struct.pm_notifier** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_notifier** %8, metadata !7583, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !7585, metadata !DIExpression()), !dbg !7586
  store %struct.k_spinlock.13* @pm_notifier_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !7066, metadata !DIExpression()) #9, !dbg !7587
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !7589
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !7074, metadata !DIExpression()) #9, !dbg !7590
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7076, metadata !DIExpression()) #9, !dbg !7591
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !7593, !srcloc !7081
  store i32 %11, i32* %2, align 4, !dbg !7593
  %12 = load i32, i32* %2, align 4, !dbg !7594
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7595
  store i32 %12, i32* %13, align 4, !dbg !7596
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7597
  %15 = load i32, i32* %14, align 4, !dbg !7597
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !7598
  store i32 %15, i32* %16, align 4, !dbg !7598
  %17 = load %struct.pm_notifier*, %struct.pm_notifier** %8, align 4, !dbg !7599
  %18 = getelementptr inbounds %struct.pm_notifier, %struct.pm_notifier* %17, i32 0, i32 0, !dbg !7600
  call void @sys_slist_append.14(%struct._slist* noundef @pm_notifiers, %struct._snode* noundef %18) #10, !dbg !7601
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !7602
  %20 = bitcast i32* %19 to [1 x i32]*, !dbg !7602
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !7602
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %23 = bitcast i32* %22 to [1 x i32]*
  store [1 x i32] %21, [1 x i32]* %23, align 4
  store %struct.k_spinlock.13* @pm_notifier_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !7117, metadata !DIExpression()) #9, !dbg !7603
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !7123, metadata !DIExpression()) #9, !dbg !7605
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !7606
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !7607
  %26 = load i32, i32* %25, align 4, !dbg !7607
  store i32 %26, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7036, metadata !DIExpression()) #9, !dbg !7608
  %27 = load i32, i32* %3, align 4, !dbg !7610
  %28 = icmp ne i32 %27, 0, !dbg !7611
  br i1 %28, label %29, label %30, !dbg !7612

29:                                               ; preds = %1
  br label %31, !dbg !7613

30:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7614, !srcloc !7048
  br label %31, !dbg !7615

31:                                               ; preds = %29, %30
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_append.14(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !7617 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !7620, metadata !DIExpression()), !dbg !7621
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !7622, metadata !DIExpression()), !dbg !7621
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7621
  call void @z_snode_next_set.15(%struct._snode* noundef %5, %struct._snode* noundef null) #10, !dbg !7621
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !7623
  %7 = call %struct._snode* @sys_slist_peek_tail.16(%struct._slist* noundef %6) #10, !dbg !7623
  %8 = icmp eq %struct._snode* %7, null, !dbg !7623
  br i1 %8, label %9, label %14, !dbg !7621

9:                                                ; preds = %2
  %10 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !7625
  %11 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7625
  call void @z_slist_tail_set.17(%struct._slist* noundef %10, %struct._snode* noundef %11) #10, !dbg !7625
  %12 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !7625
  %13 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7625
  call void @z_slist_head_set.18(%struct._slist* noundef %12, %struct._snode* noundef %13) #10, !dbg !7625
  br label %20, !dbg !7625

14:                                               ; preds = %2
  %15 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !7627
  %16 = call %struct._snode* @sys_slist_peek_tail.16(%struct._slist* noundef %15) #10, !dbg !7627
  %17 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7627
  call void @z_snode_next_set.15(%struct._snode* noundef %16, %struct._snode* noundef %17) #10, !dbg !7627
  %18 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !7627
  %19 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7627
  call void @z_slist_tail_set.17(%struct._slist* noundef %18, %struct._snode* noundef %19) #10, !dbg !7627
  br label %20

20:                                               ; preds = %14, %9
  ret void, !dbg !7621
}

; Function Attrs: noinline nounwind optnone
define internal void @z_snode_next_set.15(%struct._snode* noundef %0, %struct._snode* noundef %1) #1 !dbg !7629 {
  %3 = alloca %struct._snode*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %3, metadata !7632, metadata !DIExpression()), !dbg !7633
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !7634, metadata !DIExpression()), !dbg !7635
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7636
  %6 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !7637
  %7 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 0, i32 0, !dbg !7638
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !7639
  ret void, !dbg !7640
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_tail.16(%struct._slist* noundef %0) #1 !dbg !7641 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !7642, metadata !DIExpression()), !dbg !7643
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !7644
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 1, !dbg !7645
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7645
  ret %struct._snode* %5, !dbg !7646
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_tail_set.17(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !7647 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !7648, metadata !DIExpression()), !dbg !7649
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !7650, metadata !DIExpression()), !dbg !7651
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7652
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !7653
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 1, !dbg !7654
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !7655
  ret void, !dbg !7656
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_head_set.18(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !7657 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !7658, metadata !DIExpression()), !dbg !7659
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !7660, metadata !DIExpression()), !dbg !7661
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !7662
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !7663
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 0, !dbg !7664
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !7665
  ret void, !dbg !7666
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pm_notifier_unregister(%struct.pm_notifier* noundef %0) #1 !dbg !7667 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.pm_notifier*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %struct.pm_notifier* %0, %struct.pm_notifier** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_notifier** %8, metadata !7670, metadata !DIExpression()), !dbg !7671
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7672, metadata !DIExpression()), !dbg !7673
  store i32 -22, i32* %9, align 4, !dbg !7673
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !7674, metadata !DIExpression()), !dbg !7675
  store %struct.k_spinlock.13* @pm_notifier_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !7066, metadata !DIExpression()) #9, !dbg !7676
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !7678
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !7074, metadata !DIExpression()) #9, !dbg !7679
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7076, metadata !DIExpression()) #9, !dbg !7680
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !7682, !srcloc !7081
  store i32 %13, i32* %2, align 4, !dbg !7682
  %14 = load i32, i32* %2, align 4, !dbg !7683
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7684
  store i32 %14, i32* %15, align 4, !dbg !7685
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !7686
  %17 = load i32, i32* %16, align 4, !dbg !7686
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !7687
  store i32 %17, i32* %18, align 4, !dbg !7687
  %19 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !7687
  %20 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !7687
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %19, i8* align 4 %20, i32 4, i1 false), !dbg !7687
  %21 = load %struct.pm_notifier*, %struct.pm_notifier** %8, align 4, !dbg !7688
  %22 = getelementptr inbounds %struct.pm_notifier, %struct.pm_notifier* %21, i32 0, i32 0, !dbg !7690
  %23 = call zeroext i1 @sys_slist_find_and_remove.19(%struct._slist* noundef @pm_notifiers, %struct._snode* noundef %22) #10, !dbg !7691
  br i1 %23, label %24, label %25, !dbg !7692

24:                                               ; preds = %1
  store i32 0, i32* %9, align 4, !dbg !7693
  br label %25, !dbg !7695

25:                                               ; preds = %24, %1
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !7696
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !7696
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !7696
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @pm_notifier_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !7117, metadata !DIExpression()) #9, !dbg !7697
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !7123, metadata !DIExpression()) #9, !dbg !7699
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !7700
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !7701
  %33 = load i32, i32* %32, align 4, !dbg !7701
  store i32 %33, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7036, metadata !DIExpression()) #9, !dbg !7702
  %34 = load i32, i32* %3, align 4, !dbg !7704
  %35 = icmp ne i32 %34, 0, !dbg !7705
  br i1 %35, label %36, label %37, !dbg !7706

36:                                               ; preds = %25
  br label %38, !dbg !7707

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7708, !srcloc !7048
  br label %38, !dbg !7709

38:                                               ; preds = %36, %37
  %39 = load i32, i32* %9, align 4, !dbg !7710
  ret i32 %39, !dbg !7711
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_find_and_remove.19(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !7712 {
  %3 = alloca i1, align 1
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  %7 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !7715, metadata !DIExpression()), !dbg !7716
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !7717, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !7718, metadata !DIExpression()), !dbg !7716
  store %struct._snode* null, %struct._snode** %6, align 4, !dbg !7716
  call void @llvm.dbg.declare(metadata %struct._snode** %7, metadata !7719, metadata !DIExpression()), !dbg !7716
  %8 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7720
  %9 = call %struct._snode* @sys_slist_peek_head.10(%struct._slist* noundef %8) #10, !dbg !7720
  store %struct._snode* %9, %struct._snode** %7, align 4, !dbg !7720
  br label %10, !dbg !7720

10:                                               ; preds = %23, %2
  %11 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !7722
  %12 = icmp ne %struct._snode* %11, null, !dbg !7722
  br i1 %12, label %13, label %26, !dbg !7720

13:                                               ; preds = %10
  %14 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !7724
  %15 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !7724
  %16 = icmp eq %struct._snode* %14, %15, !dbg !7724
  br i1 %16, label %17, label %21, !dbg !7727

17:                                               ; preds = %13
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7728
  %19 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !7728
  %20 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !7728
  call void @sys_slist_remove.20(%struct._slist* noundef %18, %struct._snode* noundef %19, %struct._snode* noundef %20) #10, !dbg !7728
  store i1 true, i1* %3, align 1, !dbg !7728
  br label %27, !dbg !7728

21:                                               ; preds = %13
  %22 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !7727
  store %struct._snode* %22, %struct._snode** %6, align 4, !dbg !7727
  br label %23, !dbg !7727

23:                                               ; preds = %21
  %24 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !7722
  %25 = call %struct._snode* @sys_slist_peek_next.11(%struct._snode* noundef %24) #10, !dbg !7722
  store %struct._snode* %25, %struct._snode** %7, align 4, !dbg !7722
  br label %10, !dbg !7722, !llvm.loop !7730

26:                                               ; preds = %10
  store i1 false, i1* %3, align 1, !dbg !7716
  br label %27, !dbg !7716

27:                                               ; preds = %26, %17
  %28 = load i1, i1* %3, align 1, !dbg !7716
  ret i1 %28, !dbg !7716
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_remove.20(%struct._slist* noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) #1 !dbg !7731 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !7734, metadata !DIExpression()), !dbg !7735
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !7736, metadata !DIExpression()), !dbg !7735
  store %struct._snode* %2, %struct._snode** %6, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !7737, metadata !DIExpression()), !dbg !7735
  %7 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !7738
  %8 = icmp eq %struct._snode* %7, null, !dbg !7738
  br i1 %8, label %9, label %22, !dbg !7735

9:                                                ; preds = %3
  %10 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7740
  %11 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !7740
  %12 = call %struct._snode* @z_snode_next_peek.13(%struct._snode* noundef %11) #10, !dbg !7740
  call void @z_slist_head_set.18(%struct._slist* noundef %10, %struct._snode* noundef %12) #10, !dbg !7740
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7742
  %14 = call %struct._snode* @sys_slist_peek_tail.16(%struct._slist* noundef %13) #10, !dbg !7742
  %15 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !7742
  %16 = icmp eq %struct._snode* %14, %15, !dbg !7742
  br i1 %16, label %17, label %21, !dbg !7740

17:                                               ; preds = %9
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7744
  %19 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7744
  %20 = call %struct._snode* @sys_slist_peek_head.10(%struct._slist* noundef %19) #10, !dbg !7744
  call void @z_slist_tail_set.17(%struct._slist* noundef %18, %struct._snode* noundef %20) #10, !dbg !7744
  br label %21, !dbg !7744

21:                                               ; preds = %17, %9
  br label %34, !dbg !7740

22:                                               ; preds = %3
  %23 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !7746
  %24 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !7746
  %25 = call %struct._snode* @z_snode_next_peek.13(%struct._snode* noundef %24) #10, !dbg !7746
  call void @z_snode_next_set.15(%struct._snode* noundef %23, %struct._snode* noundef %25) #10, !dbg !7746
  %26 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7748
  %27 = call %struct._snode* @sys_slist_peek_tail.16(%struct._slist* noundef %26) #10, !dbg !7748
  %28 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !7748
  %29 = icmp eq %struct._snode* %27, %28, !dbg !7748
  br i1 %29, label %30, label %33, !dbg !7746

30:                                               ; preds = %22
  %31 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !7750
  %32 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !7750
  call void @z_slist_tail_set.17(%struct._slist* noundef %31, %struct._snode* noundef %32) #10, !dbg !7750
  br label %33, !dbg !7750

33:                                               ; preds = %30, %22
  br label %34

34:                                               ; preds = %33, %21
  %35 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !7735
  call void @z_snode_next_set.15(%struct._snode* noundef %35, %struct._snode* noundef null) #10, !dbg !7735
  ret void, !dbg !7735
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.pm_state_info* @pm_state_next_get(i8 noundef zeroext %0) #1 !dbg !7752 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !7755, metadata !DIExpression()), !dbg !7756
  %3 = load i8, i8* %2, align 1, !dbg !7757
  %4 = zext i8 %3 to i32, !dbg !7758
  %5 = getelementptr inbounds [1 x %struct.pm_state_info], [1 x %struct.pm_state_info]* @z_cpus_pm_state, i32 0, i32 %4, !dbg !7758
  ret %struct.pm_state_info* %5, !dbg !7759
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.pm_state_info* @pm_policy_next_state(i8 noundef zeroext %0, i32 noundef %1) #1 !dbg !7760 {
  %3 = alloca %struct.pm_state_info*, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.pm_state_info*, align 4
  %8 = alloca i16, align 2
  %9 = alloca %struct.pm_state_info*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8 %0, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7771, metadata !DIExpression()), !dbg !7772
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.declare(metadata i8* %6, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata %struct.pm_state_info** %7, metadata !7777, metadata !DIExpression()), !dbg !7778
  %12 = load i8, i8* %4, align 1, !dbg !7779
  %13 = call zeroext i8 @pm_state_cpu_get_all(i8 noundef zeroext %12, %struct.pm_state_info** noundef %7) #10, !dbg !7780
  store i8 %13, i8* %6, align 1, !dbg !7781
  call void @llvm.dbg.declare(metadata i16* %8, metadata !7782, metadata !DIExpression()), !dbg !7784
  %14 = load i8, i8* %6, align 1, !dbg !7785
  %15 = zext i8 %14 to i16, !dbg !7786
  %16 = sext i16 %15 to i32, !dbg !7786
  %17 = sub nsw i32 %16, 1, !dbg !7787
  %18 = trunc i32 %17 to i16, !dbg !7786
  store i16 %18, i16* %8, align 2, !dbg !7784
  br label %19, !dbg !7788

19:                                               ; preds = %66, %2
  %20 = load i16, i16* %8, align 2, !dbg !7789
  %21 = sext i16 %20 to i32, !dbg !7789
  %22 = icmp sge i32 %21, 0, !dbg !7791
  br i1 %22, label %23, label %69, !dbg !7792

23:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata %struct.pm_state_info** %9, metadata !7793, metadata !DIExpression()), !dbg !7795
  %24 = load %struct.pm_state_info*, %struct.pm_state_info** %7, align 4, !dbg !7796
  %25 = load i16, i16* %8, align 2, !dbg !7797
  %26 = sext i16 %25 to i32, !dbg !7796
  %27 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %24, i32 %26, !dbg !7796
  store %struct.pm_state_info* %27, %struct.pm_state_info** %9, align 4, !dbg !7795
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7800, metadata !DIExpression()), !dbg !7801
  %28 = load %struct.pm_state_info*, %struct.pm_state_info** %9, align 4, !dbg !7802
  %29 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %28, i32 0, i32 0, !dbg !7804
  %30 = load i32, i32* %29, align 4, !dbg !7804
  %31 = load %struct.pm_state_info*, %struct.pm_state_info** %9, align 4, !dbg !7805
  %32 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %31, i32 0, i32 1, !dbg !7806
  %33 = load i8, i8* %32, align 4, !dbg !7806
  %34 = call zeroext i1 @pm_policy_state_lock_is_active(i32 noundef %30, i8 noundef zeroext %33) #10, !dbg !7807
  br i1 %34, label %35, label %36, !dbg !7808

35:                                               ; preds = %23
  br label %66, !dbg !7809

36:                                               ; preds = %23
  %37 = load %struct.pm_state_info*, %struct.pm_state_info** %9, align 4, !dbg !7811
  %38 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %37, i32 0, i32 2, !dbg !7812
  %39 = load i32, i32* %38, align 4, !dbg !7812
  %40 = call i32 @k_us_to_ticks_ceil32.23(i32 noundef %39) #10, !dbg !7813
  store i32 %40, i32* %10, align 4, !dbg !7814
  %41 = load %struct.pm_state_info*, %struct.pm_state_info** %9, align 4, !dbg !7815
  %42 = getelementptr inbounds %struct.pm_state_info, %struct.pm_state_info* %41, i32 0, i32 3, !dbg !7816
  %43 = load i32, i32* %42, align 4, !dbg !7816
  %44 = call i32 @k_us_to_ticks_ceil32.23(i32 noundef %43) #10, !dbg !7817
  store i32 %44, i32* %11, align 4, !dbg !7818
  %45 = load i32, i32* @max_latency_ticks, align 4, !dbg !7819
  %46 = sext i32 %45 to i64, !dbg !7819
  %47 = icmp ne i64 %46, -1, !dbg !7821
  br i1 %47, label %48, label %53, !dbg !7822

48:                                               ; preds = %36
  %49 = load i32, i32* %11, align 4, !dbg !7823
  %50 = load i32, i32* @max_latency_ticks, align 4, !dbg !7824
  %51 = icmp uge i32 %49, %50, !dbg !7825
  br i1 %51, label %52, label %53, !dbg !7826

52:                                               ; preds = %48
  br label %66, !dbg !7827

53:                                               ; preds = %48, %36
  %54 = load i32, i32* %5, align 4, !dbg !7829
  %55 = sext i32 %54 to i64, !dbg !7829
  %56 = icmp eq i64 %55, -1, !dbg !7831
  br i1 %56, label %63, label %57, !dbg !7832

57:                                               ; preds = %53
  %58 = load i32, i32* %5, align 4, !dbg !7833
  %59 = load i32, i32* %10, align 4, !dbg !7834
  %60 = load i32, i32* %11, align 4, !dbg !7835
  %61 = add i32 %59, %60, !dbg !7836
  %62 = icmp uge i32 %58, %61, !dbg !7837
  br i1 %62, label %63, label %65, !dbg !7838

63:                                               ; preds = %57, %53
  %64 = load %struct.pm_state_info*, %struct.pm_state_info** %9, align 4, !dbg !7839
  store %struct.pm_state_info* %64, %struct.pm_state_info** %3, align 4, !dbg !7841
  br label %70, !dbg !7841

65:                                               ; preds = %57
  br label %66, !dbg !7842

66:                                               ; preds = %65, %52, %35
  %67 = load i16, i16* %8, align 2, !dbg !7843
  %68 = add i16 %67, -1, !dbg !7843
  store i16 %68, i16* %8, align 2, !dbg !7843
  br label %19, !dbg !7844, !llvm.loop !7845

69:                                               ; preds = %19
  store %struct.pm_state_info* null, %struct.pm_state_info** %3, align 4, !dbg !7847
  br label %70, !dbg !7847

70:                                               ; preds = %69, %63
  %71 = load %struct.pm_state_info*, %struct.pm_state_info** %3, align 4, !dbg !7848
  ret %struct.pm_state_info* %71, !dbg !7848
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @pm_policy_state_lock_is_active(i32 noundef %0, i8 noundef zeroext %1) #1 !dbg !7849 {
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7852, metadata !DIExpression()), !dbg !7853
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7854, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7856, metadata !DIExpression()), !dbg !7858
  store i32 0, i32* %6, align 4, !dbg !7858
  br label %7, !dbg !7859

7:                                                ; preds = %37, %2
  %8 = load i32, i32* %6, align 4, !dbg !7860
  %9 = icmp ult i32 %8, 0, !dbg !7862
  br i1 %9, label %10, label %40, !dbg !7863

10:                                               ; preds = %7
  %11 = load i32, i32* %6, align 4, !dbg !7864
  %12 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %11, !dbg !7867
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %12, i32 0, i32 0, !dbg !7868
  %14 = load i32, i32* %13, align 4, !dbg !7868
  %15 = load i32, i32* %4, align 4, !dbg !7869
  %16 = icmp eq i32 %14, %15, !dbg !7870
  br i1 %16, label %17, label %36, !dbg !7871

17:                                               ; preds = %10
  %18 = load i32, i32* %6, align 4, !dbg !7872
  %19 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %18, !dbg !7873
  %20 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %19, i32 0, i32 1, !dbg !7874
  %21 = load i8, i8* %20, align 4, !dbg !7874
  %22 = zext i8 %21 to i32, !dbg !7873
  %23 = load i8, i8* %5, align 1, !dbg !7875
  %24 = zext i8 %23 to i32, !dbg !7875
  %25 = icmp eq i32 %22, %24, !dbg !7876
  br i1 %25, label %30, label %26, !dbg !7877

26:                                               ; preds = %17
  %27 = load i8, i8* %5, align 1, !dbg !7878
  %28 = zext i8 %27 to i32, !dbg !7878
  %29 = icmp eq i32 %28, 255, !dbg !7879
  br i1 %29, label %30, label %36, !dbg !7880

30:                                               ; preds = %26, %17
  %31 = load i32, i32* %6, align 4, !dbg !7881
  %32 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %31, !dbg !7883
  %33 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %32, i32 0, i32 2, !dbg !7884
  %34 = call i32 @atomic_get(i32* noundef %33) #10, !dbg !7885
  %35 = icmp ne i32 %34, 0, !dbg !7886
  store i1 %35, i1* %3, align 1, !dbg !7887
  br label %41, !dbg !7887

36:                                               ; preds = %26, %10
  br label %37, !dbg !7888

37:                                               ; preds = %36
  %38 = load i32, i32* %6, align 4, !dbg !7889
  %39 = add i32 %38, 1, !dbg !7889
  store i32 %39, i32* %6, align 4, !dbg !7889
  br label %7, !dbg !7890, !llvm.loop !7891

40:                                               ; preds = %7
  store i1 false, i1* %3, align 1, !dbg !7893
  br label %41, !dbg !7893

41:                                               ; preds = %40, %30
  %42 = load i1, i1* %3, align 1, !dbg !7894
  ret i1 %42, !dbg !7894
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_us_to_ticks_ceil32.23(i32 noundef %0) #1 !dbg !7895 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !7896, metadata !DIExpression()), !dbg !7897
  %15 = load i32, i32* %14, align 4, !dbg !7898
  %16 = zext i32 %15 to i64, !dbg !7898
  store i64 %16, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !7899, metadata !DIExpression()), !dbg !7901
  store i32 1000000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7903, metadata !DIExpression()), !dbg !7904
  store i32 32768, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7905, metadata !DIExpression()), !dbg !7906
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !7907, metadata !DIExpression()), !dbg !7908
  store i8 1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !7909, metadata !DIExpression()), !dbg !7910
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !7911, metadata !DIExpression()), !dbg !7912
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !7913, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7915, metadata !DIExpression()), !dbg !7916
  %17 = load i8, i8* %6, align 1, !dbg !7917
  %18 = trunc i8 %17 to i1, !dbg !7917
  br i1 %18, label %19, label %28, !dbg !7918

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !7919
  %21 = load i32, i32* %4, align 4, !dbg !7920
  %22 = icmp ugt i32 %20, %21, !dbg !7921
  br i1 %22, label %23, label %28, !dbg !7922

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !7923
  %25 = load i32, i32* %4, align 4, !dbg !7924
  %26 = urem i32 %24, %25, !dbg !7925
  %27 = icmp eq i32 %26, 0, !dbg !7926
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !7927
  %30 = zext i1 %29 to i8, !dbg !7916
  store i8 %30, i8* %10, align 1, !dbg !7916
  call void @llvm.dbg.declare(metadata i8* %11, metadata !7928, metadata !DIExpression()), !dbg !7929
  %31 = load i8, i8* %6, align 1, !dbg !7930
  %32 = trunc i8 %31 to i1, !dbg !7930
  br i1 %32, label %33, label %42, !dbg !7931

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !7932
  %35 = load i32, i32* %5, align 4, !dbg !7933
  %36 = icmp ugt i32 %34, %35, !dbg !7934
  br i1 %36, label %37, label %42, !dbg !7935

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !7936
  %39 = load i32, i32* %5, align 4, !dbg !7937
  %40 = urem i32 %38, %39, !dbg !7938
  %41 = icmp eq i32 %40, 0, !dbg !7939
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !7927
  %44 = zext i1 %43 to i8, !dbg !7929
  store i8 %44, i8* %11, align 1, !dbg !7929
  %45 = load i32, i32* %4, align 4, !dbg !7940
  %46 = load i32, i32* %5, align 4, !dbg !7942
  %47 = icmp eq i32 %45, %46, !dbg !7943
  br i1 %47, label %48, label %59, !dbg !7944

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !7945
  %50 = trunc i8 %49 to i1, !dbg !7945
  br i1 %50, label %51, label %55, !dbg !7945

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !7947
  %53 = trunc i64 %52 to i32, !dbg !7948
  %54 = zext i32 %53 to i64, !dbg !7949
  br label %57, !dbg !7945

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !7950
  br label %57, !dbg !7945

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !7945
  store i64 %58, i64* %2, align 8, !dbg !7951
  br label %196, !dbg !7951

59:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i64* %12, metadata !7952, metadata !DIExpression()), !dbg !7953
  store i64 0, i64* %12, align 8, !dbg !7953
  %60 = load i8, i8* %10, align 1, !dbg !7954
  %61 = trunc i8 %60 to i1, !dbg !7954
  br i1 %61, label %87, label %62, !dbg !7956

62:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !7957, metadata !DIExpression()), !dbg !7959
  %63 = load i8, i8* %11, align 1, !dbg !7960
  %64 = trunc i8 %63 to i1, !dbg !7960
  br i1 %64, label %65, label %69, !dbg !7960

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !7961
  %67 = load i32, i32* %5, align 4, !dbg !7962
  %68 = udiv i32 %66, %67, !dbg !7963
  br label %71, !dbg !7960

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !7964
  br label %71, !dbg !7960

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !7960
  store i32 %72, i32* %13, align 4, !dbg !7959
  %73 = load i8, i8* %8, align 1, !dbg !7965
  %74 = trunc i8 %73 to i1, !dbg !7965
  br i1 %74, label %75, label %79, !dbg !7967

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !7968
  %77 = sub i32 %76, 1, !dbg !7970
  %78 = zext i32 %77 to i64, !dbg !7968
  store i64 %78, i64* %12, align 8, !dbg !7971
  br label %79, !dbg !7972

79:                                               ; preds = %75, %71
  %80 = load i8, i8* %9, align 1, !dbg !7973
  %81 = trunc i8 %80 to i1, !dbg !7973
  br i1 %81, label %82, label %86, !dbg !7975

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !7976
  %84 = udiv i32 %83, 2, !dbg !7978
  %85 = zext i32 %84 to i64, !dbg !7976
  store i64 %85, i64* %12, align 8, !dbg !7979
  br label %86, !dbg !7980

86:                                               ; preds = %82, %79
  br label %87, !dbg !7981

87:                                               ; preds = %86, %59
  %88 = load i8, i8* %11, align 1, !dbg !7982
  %89 = trunc i8 %88 to i1, !dbg !7982
  br i1 %89, label %90, label %115, !dbg !7984

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !7985
  %92 = load i64, i64* %3, align 8, !dbg !7987
  %93 = add i64 %92, %91, !dbg !7987
  store i64 %93, i64* %3, align 8, !dbg !7987
  %94 = load i8, i8* %7, align 1, !dbg !7988
  %95 = trunc i8 %94 to i1, !dbg !7988
  br i1 %95, label %96, label %107, !dbg !7990

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !7991
  %98 = icmp ult i64 %97, 4294967296, !dbg !7992
  br i1 %98, label %99, label %107, !dbg !7993

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !7994
  %101 = trunc i64 %100 to i32, !dbg !7996
  %102 = load i32, i32* %4, align 4, !dbg !7997
  %103 = load i32, i32* %5, align 4, !dbg !7998
  %104 = udiv i32 %102, %103, !dbg !7999
  %105 = udiv i32 %101, %104, !dbg !8000
  %106 = zext i32 %105 to i64, !dbg !8001
  store i64 %106, i64* %2, align 8, !dbg !8002
  br label %196, !dbg !8002

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !8003
  %109 = load i32, i32* %4, align 4, !dbg !8005
  %110 = zext i32 %109 to i64, !dbg !8006
  %111 = load i32, i32* %5, align 4, !dbg !8007
  %112 = zext i32 %111 to i64, !dbg !8007
  %113 = udiv i64 %110, %112, !dbg !8008
  %114 = udiv i64 %108, %113, !dbg !8009
  store i64 %114, i64* %2, align 8, !dbg !8010
  br label %196, !dbg !8010

115:                                              ; preds = %87
  %116 = load i8, i8* %10, align 1, !dbg !8011
  %117 = trunc i8 %116 to i1, !dbg !8011
  br i1 %117, label %118, label %137, !dbg !8013

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !8014
  %120 = trunc i8 %119 to i1, !dbg !8014
  br i1 %120, label %121, label %129, !dbg !8017

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !8018
  %123 = trunc i64 %122 to i32, !dbg !8020
  %124 = load i32, i32* %5, align 4, !dbg !8021
  %125 = load i32, i32* %4, align 4, !dbg !8022
  %126 = udiv i32 %124, %125, !dbg !8023
  %127 = mul i32 %123, %126, !dbg !8024
  %128 = zext i32 %127 to i64, !dbg !8025
  store i64 %128, i64* %2, align 8, !dbg !8026
  br label %196, !dbg !8026

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !8027
  %131 = load i32, i32* %5, align 4, !dbg !8029
  %132 = zext i32 %131 to i64, !dbg !8030
  %133 = load i32, i32* %4, align 4, !dbg !8031
  %134 = zext i32 %133 to i64, !dbg !8031
  %135 = udiv i64 %132, %134, !dbg !8032
  %136 = mul i64 %130, %135, !dbg !8033
  store i64 %136, i64* %2, align 8, !dbg !8034
  br label %196, !dbg !8034

137:                                              ; preds = %115
  %138 = load i8, i8* %7, align 1, !dbg !8035
  %139 = trunc i8 %138 to i1, !dbg !8035
  br i1 %139, label %140, label %152, !dbg !8038

140:                                              ; preds = %137
  %141 = load i64, i64* %3, align 8, !dbg !8039
  %142 = load i32, i32* %5, align 4, !dbg !8041
  %143 = zext i32 %142 to i64, !dbg !8041
  %144 = mul i64 %141, %143, !dbg !8042
  %145 = load i64, i64* %12, align 8, !dbg !8043
  %146 = add i64 %144, %145, !dbg !8044
  %147 = load i32, i32* %4, align 4, !dbg !8045
  %148 = zext i32 %147 to i64, !dbg !8045
  %149 = udiv i64 %146, %148, !dbg !8046
  %150 = trunc i64 %149 to i32, !dbg !8047
  %151 = zext i32 %150 to i64, !dbg !8047
  store i64 %151, i64* %2, align 8, !dbg !8048
  br label %196, !dbg !8048

152:                                              ; preds = %137
  %153 = load i8, i8* %6, align 1, !dbg !8049
  %154 = trunc i8 %153 to i1, !dbg !8049
  br i1 %154, label %155, label %175, !dbg !8051

155:                                              ; preds = %152
  %156 = load i32, i32* %4, align 4, !dbg !8052
  %157 = zext i32 %156 to i64, !dbg !8052
  %158 = mul i64 31536000, %157, !dbg !8052
  %159 = add i64 %158, 4294967294, !dbg !8052
  %160 = udiv i64 %159, 4294967295, !dbg !8052
  %161 = load i32, i32* %5, align 4, !dbg !8052
  %162 = zext i32 %161 to i64, !dbg !8052
  %163 = mul i64 %160, %162, !dbg !8052
  %164 = icmp ule i64 %163, 4294967295, !dbg !8052
  br i1 %164, label %165, label %175, !dbg !8053

165:                                              ; preds = %155
  %166 = load i64, i64* %3, align 8, !dbg !8054
  %167 = load i32, i32* %5, align 4, !dbg !8056
  %168 = zext i32 %167 to i64, !dbg !8056
  %169 = mul i64 %166, %168, !dbg !8057
  %170 = load i64, i64* %12, align 8, !dbg !8058
  %171 = add i64 %169, %170, !dbg !8059
  %172 = load i32, i32* %4, align 4, !dbg !8060
  %173 = zext i32 %172 to i64, !dbg !8060
  %174 = udiv i64 %171, %173, !dbg !8061
  store i64 %174, i64* %2, align 8, !dbg !8062
  br label %196, !dbg !8062

175:                                              ; preds = %155, %152
  %176 = load i64, i64* %3, align 8, !dbg !8063
  %177 = load i32, i32* %4, align 4, !dbg !8065
  %178 = zext i32 %177 to i64, !dbg !8065
  %179 = udiv i64 %176, %178, !dbg !8066
  %180 = load i32, i32* %5, align 4, !dbg !8067
  %181 = zext i32 %180 to i64, !dbg !8067
  %182 = mul i64 %179, %181, !dbg !8068
  %183 = load i64, i64* %3, align 8, !dbg !8069
  %184 = load i32, i32* %4, align 4, !dbg !8070
  %185 = zext i32 %184 to i64, !dbg !8070
  %186 = urem i64 %183, %185, !dbg !8071
  %187 = load i32, i32* %5, align 4, !dbg !8072
  %188 = zext i32 %187 to i64, !dbg !8072
  %189 = mul i64 %186, %188, !dbg !8073
  %190 = load i64, i64* %12, align 8, !dbg !8074
  %191 = add i64 %189, %190, !dbg !8075
  %192 = load i32, i32* %4, align 4, !dbg !8076
  %193 = zext i32 %192 to i64, !dbg !8076
  %194 = udiv i64 %191, %193, !dbg !8077
  %195 = add i64 %182, %194, !dbg !8078
  store i64 %195, i64* %2, align 8, !dbg !8079
  br label %196, !dbg !8079

196:                                              ; preds = %57, %99, %107, %121, %129, %140, %165, %175
  %197 = load i64, i64* %2, align 8, !dbg !8080
  %198 = trunc i64 %197 to i32, !dbg !8081
  ret i32 %198, !dbg !8082
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_policy_state_lock_get(i32 noundef %0, i8 noundef zeroext %1) #1 !dbg !8083 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8086, metadata !DIExpression()), !dbg !8087
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8088, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8090, metadata !DIExpression()), !dbg !8092
  store i32 0, i32* %5, align 4, !dbg !8092
  br label %6, !dbg !8093

6:                                                ; preds = %35, %2
  %7 = load i32, i32* %5, align 4, !dbg !8094
  %8 = icmp ult i32 %7, 0, !dbg !8096
  br i1 %8, label %9, label %38, !dbg !8097

9:                                                ; preds = %6
  %10 = load i32, i32* %5, align 4, !dbg !8098
  %11 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %10, !dbg !8101
  %12 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11, i32 0, i32 0, !dbg !8102
  %13 = load i32, i32* %12, align 4, !dbg !8102
  %14 = load i32, i32* %3, align 4, !dbg !8103
  %15 = icmp eq i32 %13, %14, !dbg !8104
  br i1 %15, label %16, label %34, !dbg !8105

16:                                               ; preds = %9
  %17 = load i32, i32* %5, align 4, !dbg !8106
  %18 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %17, !dbg !8107
  %19 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %18, i32 0, i32 1, !dbg !8108
  %20 = load i8, i8* %19, align 4, !dbg !8108
  %21 = zext i8 %20 to i32, !dbg !8107
  %22 = load i8, i8* %4, align 1, !dbg !8109
  %23 = zext i8 %22 to i32, !dbg !8109
  %24 = icmp eq i32 %21, %23, !dbg !8110
  br i1 %24, label %29, label %25, !dbg !8111

25:                                               ; preds = %16
  %26 = load i8, i8* %4, align 1, !dbg !8112
  %27 = zext i8 %26 to i32, !dbg !8112
  %28 = icmp eq i32 %27, 255, !dbg !8113
  br i1 %28, label %29, label %34, !dbg !8114

29:                                               ; preds = %25, %16
  %30 = load i32, i32* %5, align 4, !dbg !8115
  %31 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %30, !dbg !8117
  %32 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %31, i32 0, i32 2, !dbg !8118
  %33 = call i32 @atomic_inc(i32* noundef %32) #10, !dbg !8119
  br label %34, !dbg !8120

34:                                               ; preds = %29, %25, %9
  br label %35, !dbg !8121

35:                                               ; preds = %34
  %36 = load i32, i32* %5, align 4, !dbg !8122
  %37 = add i32 %36, 1, !dbg !8122
  store i32 %37, i32* %5, align 4, !dbg !8122
  br label %6, !dbg !8123, !llvm.loop !8124

38:                                               ; preds = %6
  ret void, !dbg !8126
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_inc(i32* noundef %0) #1 !dbg !8127 {
  %2 = alloca i32*, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !8131, metadata !DIExpression()), !dbg !8132
  %3 = load i32*, i32** %2, align 4, !dbg !8133
  %4 = call i32 @atomic_add(i32* noundef %3, i32 noundef 1) #10, !dbg !8134
  ret i32 %4, !dbg !8135
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_add(i32* noundef %0, i32 noundef %1) #1 !dbg !8136 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !8137, metadata !DIExpression()), !dbg !8138
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8139, metadata !DIExpression()), !dbg !8140
  br label %5, !dbg !8141

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8142, !srcloc !8144
  br label %6, !dbg !8142

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !8145
  %8 = load i32, i32* %4, align 4, !dbg !8146
  %9 = call i32 @z_impl_atomic_add(i32* noundef %7, i32 noundef %8) #10, !dbg !8147
  ret i32 %9, !dbg !8148
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_policy_state_lock_put(i32 noundef %0, i8 noundef zeroext %1) #1 !dbg !8149 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8150, metadata !DIExpression()), !dbg !8151
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8152, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8154, metadata !DIExpression()), !dbg !8156
  store i32 0, i32* %5, align 4, !dbg !8156
  br label %7, !dbg !8157

7:                                                ; preds = %37, %2
  %8 = load i32, i32* %5, align 4, !dbg !8158
  %9 = icmp ult i32 %8, 0, !dbg !8160
  br i1 %9, label %10, label %40, !dbg !8161

10:                                               ; preds = %7
  %11 = load i32, i32* %5, align 4, !dbg !8162
  %12 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %11, !dbg !8165
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %12, i32 0, i32 0, !dbg !8166
  %14 = load i32, i32* %13, align 4, !dbg !8166
  %15 = load i32, i32* %3, align 4, !dbg !8167
  %16 = icmp eq i32 %14, %15, !dbg !8168
  br i1 %16, label %17, label %36, !dbg !8169

17:                                               ; preds = %10
  %18 = load i32, i32* %5, align 4, !dbg !8170
  %19 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %18, !dbg !8171
  %20 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %19, i32 0, i32 1, !dbg !8172
  %21 = load i8, i8* %20, align 4, !dbg !8172
  %22 = zext i8 %21 to i32, !dbg !8171
  %23 = load i8, i8* %4, align 1, !dbg !8173
  %24 = zext i8 %23 to i32, !dbg !8173
  %25 = icmp eq i32 %22, %24, !dbg !8174
  br i1 %25, label %30, label %26, !dbg !8175

26:                                               ; preds = %17
  %27 = load i8, i8* %4, align 1, !dbg !8176
  %28 = zext i8 %27 to i32, !dbg !8176
  %29 = icmp eq i32 %28, 255, !dbg !8177
  br i1 %29, label %30, label %36, !dbg !8178

30:                                               ; preds = %26, %17
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8179, metadata !DIExpression()), !dbg !8181
  %31 = load i32, i32* %5, align 4, !dbg !8182
  %32 = getelementptr inbounds [0 x %struct.anon.3], [0 x %struct.anon.3]* @substate_lock_t, i32 0, i32 %31, !dbg !8183
  %33 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %32, i32 0, i32 2, !dbg !8184
  %34 = call i32 @atomic_dec(i32* noundef %33) #10, !dbg !8185
  store i32 %34, i32* %6, align 4, !dbg !8181
  %35 = load i32, i32* %6, align 4, !dbg !8186
  br label %36, !dbg !8187

36:                                               ; preds = %30, %26, %10
  br label %37, !dbg !8188

37:                                               ; preds = %36
  %38 = load i32, i32* %5, align 4, !dbg !8189
  %39 = add i32 %38, 1, !dbg !8189
  store i32 %39, i32* %5, align 4, !dbg !8189
  br label %7, !dbg !8190, !llvm.loop !8191

40:                                               ; preds = %7
  ret void, !dbg !8193
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_dec(i32* noundef %0) #1 !dbg !8194 {
  %2 = alloca i32*, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !8195, metadata !DIExpression()), !dbg !8196
  %3 = load i32*, i32** %2, align 4, !dbg !8197
  %4 = call i32 @atomic_sub(i32* noundef %3, i32 noundef 1) #10, !dbg !8198
  ret i32 %4, !dbg !8199
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_sub(i32* noundef %0, i32 noundef %1) #1 !dbg !8200 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !8201, metadata !DIExpression()), !dbg !8202
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8203, metadata !DIExpression()), !dbg !8204
  br label %5, !dbg !8205

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8206, !srcloc !8208
  br label %6, !dbg !8206

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !8209
  %8 = load i32, i32* %4, align 4, !dbg !8210
  %9 = call i32 @z_impl_atomic_sub(i32* noundef %7, i32 noundef %8) #10, !dbg !8211
  ret i32 %9, !dbg !8212
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_policy_latency_request_add(%struct.pm_policy_latency_request* noundef %0, i32 noundef %1) #1 !dbg !8213 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.pm_policy_latency_request*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %struct.pm_policy_latency_request* %0, %struct.pm_policy_latency_request** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_policy_latency_request** %9, metadata !8216, metadata !DIExpression()), !dbg !8217
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8218, metadata !DIExpression()), !dbg !8219
  %12 = load i32, i32* %10, align 4, !dbg !8220
  %13 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %9, align 4, !dbg !8221
  %14 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %13, i32 0, i32 1, !dbg !8222
  store i32 %12, i32* %14, align 4, !dbg !8223
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !8224, metadata !DIExpression()), !dbg !8229
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !8230, metadata !DIExpression()) #9, !dbg !8235
  %15 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !8237
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !8238, metadata !DIExpression()) #9, !dbg !8239
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8240, metadata !DIExpression()) #9, !dbg !8242
  %16 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8244, !srcloc !8245
  store i32 %16, i32* %4, align 4, !dbg !8244
  %17 = load i32, i32* %4, align 4, !dbg !8246
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !8247
  store i32 %17, i32* %18, align 4, !dbg !8248
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !8249
  %20 = load i32, i32* %19, align 4, !dbg !8249
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !8250
  store i32 %20, i32* %21, align 4, !dbg !8250
  %22 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %9, align 4, !dbg !8251
  %23 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %22, i32 0, i32 0, !dbg !8252
  call void @sys_slist_append.24(%struct._slist* noundef @latency_reqs, %struct._snode* noundef %23) #10, !dbg !8253
  call void @update_max_latency() #10, !dbg !8254
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !8255
  %25 = bitcast i32* %24 to [1 x i32]*, !dbg !8255
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !8255
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %28 = bitcast i32* %27 to [1 x i32]*
  store [1 x i32] %26, [1 x i32]* %28, align 4
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !8256, metadata !DIExpression()) #9, !dbg !8260
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !8262, metadata !DIExpression()) #9, !dbg !8263
  %29 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !8264
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !8265
  %31 = load i32, i32* %30, align 4, !dbg !8265
  store i32 %31, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8266, metadata !DIExpression()) #9, !dbg !8268
  %32 = load i32, i32* %3, align 4, !dbg !8270
  %33 = icmp ne i32 %32, 0, !dbg !8272
  br i1 %33, label %34, label %35, !dbg !8273

34:                                               ; preds = %2
  br label %36, !dbg !8274

35:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8276, !srcloc !8277
  br label %36, !dbg !8278

36:                                               ; preds = %34, %35
  ret void, !dbg !8279
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_append.24(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8280 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !8284, metadata !DIExpression()), !dbg !8285
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8286, metadata !DIExpression()), !dbg !8285
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8285
  call void @z_snode_next_set.29(%struct._snode* noundef %5, %struct._snode* noundef null) #10, !dbg !8285
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8287
  %7 = call %struct._snode* @sys_slist_peek_tail.30(%struct._slist* noundef %6) #10, !dbg !8287
  %8 = icmp eq %struct._snode* %7, null, !dbg !8287
  br i1 %8, label %9, label %14, !dbg !8285

9:                                                ; preds = %2
  %10 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8289
  %11 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8289
  call void @z_slist_tail_set.31(%struct._slist* noundef %10, %struct._snode* noundef %11) #10, !dbg !8289
  %12 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8289
  %13 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8289
  call void @z_slist_head_set.32(%struct._slist* noundef %12, %struct._snode* noundef %13) #10, !dbg !8289
  br label %20, !dbg !8289

14:                                               ; preds = %2
  %15 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8291
  %16 = call %struct._snode* @sys_slist_peek_tail.30(%struct._slist* noundef %15) #10, !dbg !8291
  %17 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8291
  call void @z_snode_next_set.29(%struct._snode* noundef %16, %struct._snode* noundef %17) #10, !dbg !8291
  %18 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8291
  %19 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8291
  call void @z_slist_tail_set.31(%struct._slist* noundef %18, %struct._snode* noundef %19) #10, !dbg !8291
  br label %20

20:                                               ; preds = %14, %9
  ret void, !dbg !8285
}

; Function Attrs: noinline nounwind optnone
define internal void @update_max_latency() #1 !dbg !8293 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.pm_policy_latency_request*, align 4
  %3 = alloca %struct.pm_policy_latency_subscription*, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 -1, i32* %1, align 4, !dbg !8295
  call void @llvm.dbg.declare(metadata %struct.pm_policy_latency_request** %2, metadata !8296, metadata !DIExpression()), !dbg !8297
  %5 = call %struct._snode* @sys_slist_peek_head.25(%struct._slist* noundef @latency_reqs) #10, !dbg !8298
  %6 = icmp ne %struct._snode* %5, null, !dbg !8298
  br i1 %6, label %7, label %12, !dbg !8298

7:                                                ; preds = %0
  %8 = call %struct._snode* @sys_slist_peek_head.25(%struct._slist* noundef @latency_reqs) #10, !dbg !8298
  %9 = bitcast %struct._snode* %8 to i8*, !dbg !8298
  %10 = getelementptr inbounds i8, i8* %9, i32 0, !dbg !8298
  %11 = bitcast i8* %10 to %struct.pm_policy_latency_request*, !dbg !8298
  br label %13, !dbg !8298

12:                                               ; preds = %0
  br label %13, !dbg !8298

13:                                               ; preds = %12, %7
  %14 = phi %struct.pm_policy_latency_request* [ %11, %7 ], [ null, %12 ], !dbg !8298
  store %struct.pm_policy_latency_request* %14, %struct.pm_policy_latency_request** %2, align 4, !dbg !8298
  br label %15, !dbg !8298

15:                                               ; preds = %51, %13
  %16 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %2, align 4, !dbg !8300
  %17 = icmp ne %struct.pm_policy_latency_request* %16, null, !dbg !8300
  br i1 %17, label %18, label %53, !dbg !8298

18:                                               ; preds = %15
  %19 = load i32, i32* %1, align 4, !dbg !8302
  %20 = icmp eq i32 %19, -1, !dbg !8305
  br i1 %20, label %27, label %21, !dbg !8306

21:                                               ; preds = %18
  %22 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %2, align 4, !dbg !8307
  %23 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %22, i32 0, i32 1, !dbg !8308
  %24 = load i32, i32* %23, align 4, !dbg !8308
  %25 = load i32, i32* %1, align 4, !dbg !8309
  %26 = icmp slt i32 %24, %25, !dbg !8310
  br i1 %26, label %27, label %31, !dbg !8311

27:                                               ; preds = %21, %18
  %28 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %2, align 4, !dbg !8312
  %29 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %28, i32 0, i32 1, !dbg !8314
  %30 = load i32, i32* %29, align 4, !dbg !8314
  store i32 %30, i32* %1, align 4, !dbg !8315
  br label %31, !dbg !8316

31:                                               ; preds = %27, %21
  br label %32, !dbg !8317

32:                                               ; preds = %31
  %33 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %2, align 4, !dbg !8300
  %34 = icmp ne %struct.pm_policy_latency_request* %33, null, !dbg !8300
  br i1 %34, label %35, label %50, !dbg !8300

35:                                               ; preds = %32
  %36 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %2, align 4, !dbg !8300
  %37 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %36, i32 0, i32 0, !dbg !8300
  %38 = call %struct._snode* @sys_slist_peek_next.26(%struct._snode* noundef %37) #10, !dbg !8300
  %39 = icmp ne %struct._snode* %38, null, !dbg !8300
  br i1 %39, label %40, label %47, !dbg !8300

40:                                               ; preds = %35
  %41 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %2, align 4, !dbg !8300
  %42 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %41, i32 0, i32 0, !dbg !8300
  %43 = call %struct._snode* @sys_slist_peek_next.26(%struct._snode* noundef %42) #10, !dbg !8300
  %44 = bitcast %struct._snode* %43 to i8*, !dbg !8300
  %45 = getelementptr inbounds i8, i8* %44, i32 0, !dbg !8300
  %46 = bitcast i8* %45 to %struct.pm_policy_latency_request*, !dbg !8300
  br label %48, !dbg !8300

47:                                               ; preds = %35
  br label %48, !dbg !8300

48:                                               ; preds = %47, %40
  %49 = phi %struct.pm_policy_latency_request* [ %46, %40 ], [ null, %47 ], !dbg !8300
  br label %51, !dbg !8300

50:                                               ; preds = %32
  br label %51, !dbg !8300

51:                                               ; preds = %50, %48
  %52 = phi %struct.pm_policy_latency_request* [ %49, %48 ], [ null, %50 ], !dbg !8300
  store %struct.pm_policy_latency_request* %52, %struct.pm_policy_latency_request** %2, align 4, !dbg !8300
  br label %15, !dbg !8300, !llvm.loop !8318

53:                                               ; preds = %15
  %54 = load i32, i32* @max_latency_us, align 4, !dbg !8320
  %55 = load i32, i32* %1, align 4, !dbg !8322
  %56 = icmp ne i32 %54, %55, !dbg !8323
  br i1 %56, label %57, label %106, !dbg !8324

57:                                               ; preds = %53
  call void @llvm.dbg.declare(metadata %struct.pm_policy_latency_subscription** %3, metadata !8325, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8328, metadata !DIExpression()), !dbg !8329
  store i32 -1, i32* %4, align 4, !dbg !8329
  %58 = call %struct._snode* @sys_slist_peek_head.25(%struct._slist* noundef @latency_subs) #10, !dbg !8330
  %59 = icmp ne %struct._snode* %58, null, !dbg !8330
  br i1 %59, label %60, label %65, !dbg !8330

60:                                               ; preds = %57
  %61 = call %struct._snode* @sys_slist_peek_head.25(%struct._slist* noundef @latency_subs) #10, !dbg !8330
  %62 = bitcast %struct._snode* %61 to i8*, !dbg !8330
  %63 = getelementptr inbounds i8, i8* %62, i32 0, !dbg !8330
  %64 = bitcast i8* %63 to %struct.pm_policy_latency_subscription*, !dbg !8330
  br label %66, !dbg !8330

65:                                               ; preds = %57
  br label %66, !dbg !8330

66:                                               ; preds = %65, %60
  %67 = phi %struct.pm_policy_latency_subscription* [ %64, %60 ], [ null, %65 ], !dbg !8330
  store %struct.pm_policy_latency_subscription* %67, %struct.pm_policy_latency_subscription** %3, align 4, !dbg !8330
  br label %68, !dbg !8330

68:                                               ; preds = %95, %66
  %69 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %3, align 4, !dbg !8332
  %70 = icmp ne %struct.pm_policy_latency_subscription* %69, null, !dbg !8332
  br i1 %70, label %71, label %97, !dbg !8330

71:                                               ; preds = %68
  %72 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %3, align 4, !dbg !8334
  %73 = getelementptr inbounds %struct.pm_policy_latency_subscription, %struct.pm_policy_latency_subscription* %72, i32 0, i32 1, !dbg !8336
  %74 = load void (i32)*, void (i32)** %73, align 4, !dbg !8336
  %75 = load i32, i32* %1, align 4, !dbg !8337
  call void %74(i32 noundef %75) #10, !dbg !8334
  br label %76, !dbg !8338

76:                                               ; preds = %71
  %77 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %3, align 4, !dbg !8332
  %78 = icmp ne %struct.pm_policy_latency_subscription* %77, null, !dbg !8332
  br i1 %78, label %79, label %94, !dbg !8332

79:                                               ; preds = %76
  %80 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %3, align 4, !dbg !8332
  %81 = getelementptr inbounds %struct.pm_policy_latency_subscription, %struct.pm_policy_latency_subscription* %80, i32 0, i32 0, !dbg !8332
  %82 = call %struct._snode* @sys_slist_peek_next.26(%struct._snode* noundef %81) #10, !dbg !8332
  %83 = icmp ne %struct._snode* %82, null, !dbg !8332
  br i1 %83, label %84, label %91, !dbg !8332

84:                                               ; preds = %79
  %85 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %3, align 4, !dbg !8332
  %86 = getelementptr inbounds %struct.pm_policy_latency_subscription, %struct.pm_policy_latency_subscription* %85, i32 0, i32 0, !dbg !8332
  %87 = call %struct._snode* @sys_slist_peek_next.26(%struct._snode* noundef %86) #10, !dbg !8332
  %88 = bitcast %struct._snode* %87 to i8*, !dbg !8332
  %89 = getelementptr inbounds i8, i8* %88, i32 0, !dbg !8332
  %90 = bitcast i8* %89 to %struct.pm_policy_latency_subscription*, !dbg !8332
  br label %92, !dbg !8332

91:                                               ; preds = %79
  br label %92, !dbg !8332

92:                                               ; preds = %91, %84
  %93 = phi %struct.pm_policy_latency_subscription* [ %90, %84 ], [ null, %91 ], !dbg !8332
  br label %95, !dbg !8332

94:                                               ; preds = %76
  br label %95, !dbg !8332

95:                                               ; preds = %94, %92
  %96 = phi %struct.pm_policy_latency_subscription* [ %93, %92 ], [ null, %94 ], !dbg !8332
  store %struct.pm_policy_latency_subscription* %96, %struct.pm_policy_latency_subscription** %3, align 4, !dbg !8332
  br label %68, !dbg !8332, !llvm.loop !8339

97:                                               ; preds = %68
  %98 = load i32, i32* %1, align 4, !dbg !8341
  %99 = icmp ne i32 %98, -1, !dbg !8343
  br i1 %99, label %100, label %103, !dbg !8344

100:                                              ; preds = %97
  %101 = load i32, i32* %1, align 4, !dbg !8345
  %102 = call i32 @k_us_to_ticks_ceil32.23(i32 noundef %101) #10, !dbg !8347
  store i32 %102, i32* %4, align 4, !dbg !8348
  br label %103, !dbg !8349

103:                                              ; preds = %100, %97
  %104 = load i32, i32* %1, align 4, !dbg !8350
  store i32 %104, i32* @max_latency_us, align 4, !dbg !8351
  %105 = load i32, i32* %4, align 4, !dbg !8352
  store i32 %105, i32* @max_latency_ticks, align 4, !dbg !8353
  br label %106, !dbg !8354

106:                                              ; preds = %103, %53
  ret void, !dbg !8355
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_head.25(%struct._slist* noundef %0) #1 !dbg !8356 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !8359, metadata !DIExpression()), !dbg !8360
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !8361
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 0, !dbg !8362
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8362
  ret %struct._snode* %5, !dbg !8363
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next.26(%struct._snode* noundef %0) #1 !dbg !8364 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !8367, metadata !DIExpression()), !dbg !8368
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8368
  %4 = icmp ne %struct._snode* %3, null, !dbg !8368
  br i1 %4, label %5, label %8, !dbg !8368

5:                                                ; preds = %1
  %6 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8368
  %7 = call %struct._snode* @sys_slist_peek_next_no_check.27(%struct._snode* noundef %6) #10, !dbg !8368
  br label %9, !dbg !8368

8:                                                ; preds = %1
  br label %9, !dbg !8368

9:                                                ; preds = %8, %5
  %10 = phi %struct._snode* [ %7, %5 ], [ null, %8 ], !dbg !8368
  ret %struct._snode* %10, !dbg !8368
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next_no_check.27(%struct._snode* noundef %0) #1 !dbg !8369 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !8370, metadata !DIExpression()), !dbg !8371
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8371
  %4 = call %struct._snode* @z_snode_next_peek.28(%struct._snode* noundef %3) #10, !dbg !8371
  ret %struct._snode* %4, !dbg !8371
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @z_snode_next_peek.28(%struct._snode* noundef %0) #1 !dbg !8372 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !8373, metadata !DIExpression()), !dbg !8374
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8375
  %4 = getelementptr inbounds %struct._snode, %struct._snode* %3, i32 0, i32 0, !dbg !8376
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8376
  ret %struct._snode* %5, !dbg !8377
}

; Function Attrs: noinline nounwind optnone
define internal void @z_snode_next_set.29(%struct._snode* noundef %0, %struct._snode* noundef %1) #1 !dbg !8378 {
  %3 = alloca %struct._snode*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %3, metadata !8381, metadata !DIExpression()), !dbg !8382
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8383, metadata !DIExpression()), !dbg !8384
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8385
  %6 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !8386
  %7 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 0, i32 0, !dbg !8387
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !8388
  ret void, !dbg !8389
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_tail.30(%struct._slist* noundef %0) #1 !dbg !8390 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !8391, metadata !DIExpression()), !dbg !8392
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !8393
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 1, !dbg !8394
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8394
  ret %struct._snode* %5, !dbg !8395
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_tail_set.31(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8396 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !8397, metadata !DIExpression()), !dbg !8398
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8399, metadata !DIExpression()), !dbg !8400
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8401
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8402
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 1, !dbg !8403
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !8404
  ret void, !dbg !8405
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_head_set.32(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8406 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !8407, metadata !DIExpression()), !dbg !8408
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8409, metadata !DIExpression()), !dbg !8410
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8411
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8412
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 0, !dbg !8413
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !8414
  ret void, !dbg !8415
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_policy_latency_request_update(%struct.pm_policy_latency_request* noundef %0, i32 noundef %1) #1 !dbg !8416 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.pm_policy_latency_request*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %struct.pm_policy_latency_request* %0, %struct.pm_policy_latency_request** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_policy_latency_request** %9, metadata !8417, metadata !DIExpression()), !dbg !8418
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8419, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !8421, metadata !DIExpression()), !dbg !8422
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !8230, metadata !DIExpression()) #9, !dbg !8423
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !8425
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !8238, metadata !DIExpression()) #9, !dbg !8426
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8240, metadata !DIExpression()) #9, !dbg !8427
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8429, !srcloc !8245
  store i32 %13, i32* %4, align 4, !dbg !8429
  %14 = load i32, i32* %4, align 4, !dbg !8430
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !8431
  store i32 %14, i32* %15, align 4, !dbg !8432
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !8433
  %17 = load i32, i32* %16, align 4, !dbg !8433
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !8434
  store i32 %17, i32* %18, align 4, !dbg !8434
  %19 = load i32, i32* %10, align 4, !dbg !8435
  %20 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %9, align 4, !dbg !8436
  %21 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %20, i32 0, i32 1, !dbg !8437
  store i32 %19, i32* %21, align 4, !dbg !8438
  call void @update_max_latency() #10, !dbg !8439
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !8440
  %23 = bitcast i32* %22 to [1 x i32]*, !dbg !8440
  %24 = load [1 x i32], [1 x i32]* %23, align 4, !dbg !8440
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %26 = bitcast i32* %25 to [1 x i32]*
  store [1 x i32] %24, [1 x i32]* %26, align 4
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !8256, metadata !DIExpression()) #9, !dbg !8441
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !8262, metadata !DIExpression()) #9, !dbg !8443
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !8444
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !8445
  %29 = load i32, i32* %28, align 4, !dbg !8445
  store i32 %29, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8266, metadata !DIExpression()) #9, !dbg !8446
  %30 = load i32, i32* %3, align 4, !dbg !8448
  %31 = icmp ne i32 %30, 0, !dbg !8449
  br i1 %31, label %32, label %33, !dbg !8450

32:                                               ; preds = %2
  br label %34, !dbg !8451

33:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8452, !srcloc !8277
  br label %34, !dbg !8453

34:                                               ; preds = %32, %33
  ret void, !dbg !8454
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_policy_latency_request_remove(%struct.pm_policy_latency_request* noundef %0) #1 !dbg !8455 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.pm_policy_latency_request*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  store %struct.pm_policy_latency_request* %0, %struct.pm_policy_latency_request** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_policy_latency_request** %8, metadata !8458, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !8460, metadata !DIExpression()), !dbg !8461
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !8230, metadata !DIExpression()) #9, !dbg !8462
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !8464
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !8238, metadata !DIExpression()) #9, !dbg !8465
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8240, metadata !DIExpression()) #9, !dbg !8466
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8468, !srcloc !8245
  store i32 %11, i32* %3, align 4, !dbg !8468
  %12 = load i32, i32* %3, align 4, !dbg !8469
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !8470
  store i32 %12, i32* %13, align 4, !dbg !8471
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !8472
  %15 = load i32, i32* %14, align 4, !dbg !8472
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !8473
  store i32 %15, i32* %16, align 4, !dbg !8473
  %17 = load %struct.pm_policy_latency_request*, %struct.pm_policy_latency_request** %8, align 4, !dbg !8474
  %18 = getelementptr inbounds %struct.pm_policy_latency_request, %struct.pm_policy_latency_request* %17, i32 0, i32 0, !dbg !8475
  %19 = call zeroext i1 @sys_slist_find_and_remove.33(%struct._slist* noundef @latency_reqs, %struct._snode* noundef %18) #10, !dbg !8476
  call void @update_max_latency() #10, !dbg !8477
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !8478
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !8478
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !8478
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !8256, metadata !DIExpression()) #9, !dbg !8479
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !8262, metadata !DIExpression()) #9, !dbg !8481
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !8482
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !8483
  %27 = load i32, i32* %26, align 4, !dbg !8483
  store i32 %27, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8266, metadata !DIExpression()) #9, !dbg !8484
  %28 = load i32, i32* %2, align 4, !dbg !8486
  %29 = icmp ne i32 %28, 0, !dbg !8487
  br i1 %29, label %30, label %31, !dbg !8488

30:                                               ; preds = %1
  br label %32, !dbg !8489

31:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8490, !srcloc !8277
  br label %32, !dbg !8491

32:                                               ; preds = %30, %31
  ret void, !dbg !8492
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_find_and_remove.33(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8493 {
  %3 = alloca i1, align 1
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  %7 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !8496, metadata !DIExpression()), !dbg !8497
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !8498, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !8499, metadata !DIExpression()), !dbg !8497
  store %struct._snode* null, %struct._snode** %6, align 4, !dbg !8497
  call void @llvm.dbg.declare(metadata %struct._snode** %7, metadata !8500, metadata !DIExpression()), !dbg !8497
  %8 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8501
  %9 = call %struct._snode* @sys_slist_peek_head.25(%struct._slist* noundef %8) #10, !dbg !8501
  store %struct._snode* %9, %struct._snode** %7, align 4, !dbg !8501
  br label %10, !dbg !8501

10:                                               ; preds = %23, %2
  %11 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8503
  %12 = icmp ne %struct._snode* %11, null, !dbg !8503
  br i1 %12, label %13, label %26, !dbg !8501

13:                                               ; preds = %10
  %14 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8505
  %15 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8505
  %16 = icmp eq %struct._snode* %14, %15, !dbg !8505
  br i1 %16, label %17, label %21, !dbg !8508

17:                                               ; preds = %13
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8509
  %19 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8509
  %20 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8509
  call void @sys_slist_remove.34(%struct._slist* noundef %18, %struct._snode* noundef %19, %struct._snode* noundef %20) #10, !dbg !8509
  store i1 true, i1* %3, align 1, !dbg !8509
  br label %27, !dbg !8509

21:                                               ; preds = %13
  %22 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8508
  store %struct._snode* %22, %struct._snode** %6, align 4, !dbg !8508
  br label %23, !dbg !8508

23:                                               ; preds = %21
  %24 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8503
  %25 = call %struct._snode* @sys_slist_peek_next.26(%struct._snode* noundef %24) #10, !dbg !8503
  store %struct._snode* %25, %struct._snode** %7, align 4, !dbg !8503
  br label %10, !dbg !8503, !llvm.loop !8511

26:                                               ; preds = %10
  store i1 false, i1* %3, align 1, !dbg !8497
  br label %27, !dbg !8497

27:                                               ; preds = %26, %17
  %28 = load i1, i1* %3, align 1, !dbg !8497
  ret i1 %28, !dbg !8497
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_remove.34(%struct._slist* noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) #1 !dbg !8512 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !8515, metadata !DIExpression()), !dbg !8516
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !8517, metadata !DIExpression()), !dbg !8516
  store %struct._snode* %2, %struct._snode** %6, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !8518, metadata !DIExpression()), !dbg !8516
  %7 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8519
  %8 = icmp eq %struct._snode* %7, null, !dbg !8519
  br i1 %8, label %9, label %22, !dbg !8516

9:                                                ; preds = %3
  %10 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8521
  %11 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8521
  %12 = call %struct._snode* @z_snode_next_peek.28(%struct._snode* noundef %11) #10, !dbg !8521
  call void @z_slist_head_set.32(%struct._slist* noundef %10, %struct._snode* noundef %12) #10, !dbg !8521
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8523
  %14 = call %struct._snode* @sys_slist_peek_tail.30(%struct._slist* noundef %13) #10, !dbg !8523
  %15 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8523
  %16 = icmp eq %struct._snode* %14, %15, !dbg !8523
  br i1 %16, label %17, label %21, !dbg !8521

17:                                               ; preds = %9
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8525
  %19 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8525
  %20 = call %struct._snode* @sys_slist_peek_head.25(%struct._slist* noundef %19) #10, !dbg !8525
  call void @z_slist_tail_set.31(%struct._slist* noundef %18, %struct._snode* noundef %20) #10, !dbg !8525
  br label %21, !dbg !8525

21:                                               ; preds = %17, %9
  br label %34, !dbg !8521

22:                                               ; preds = %3
  %23 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8527
  %24 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8527
  %25 = call %struct._snode* @z_snode_next_peek.28(%struct._snode* noundef %24) #10, !dbg !8527
  call void @z_snode_next_set.29(%struct._snode* noundef %23, %struct._snode* noundef %25) #10, !dbg !8527
  %26 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8529
  %27 = call %struct._snode* @sys_slist_peek_tail.30(%struct._slist* noundef %26) #10, !dbg !8529
  %28 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8529
  %29 = icmp eq %struct._snode* %27, %28, !dbg !8529
  br i1 %29, label %30, label %33, !dbg !8527

30:                                               ; preds = %22
  %31 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8531
  %32 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8531
  call void @z_slist_tail_set.31(%struct._slist* noundef %31, %struct._snode* noundef %32) #10, !dbg !8531
  br label %33, !dbg !8531

33:                                               ; preds = %30, %22
  br label %34

34:                                               ; preds = %33, %21
  %35 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8516
  call void @z_snode_next_set.29(%struct._snode* noundef %35, %struct._snode* noundef null) #10, !dbg !8516
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_policy_latency_changed_subscribe(%struct.pm_policy_latency_subscription* noundef %0, void (i32)* noundef %1) #1 !dbg !8533 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.pm_policy_latency_subscription*, align 4
  %10 = alloca void (i32)*, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %struct.pm_policy_latency_subscription* %0, %struct.pm_policy_latency_subscription** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_policy_latency_subscription** %9, metadata !8536, metadata !DIExpression()), !dbg !8537
  store void (i32)* %1, void (i32)** %10, align 4
  call void @llvm.dbg.declare(metadata void (i32)** %10, metadata !8538, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !8540, metadata !DIExpression()), !dbg !8541
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !8230, metadata !DIExpression()) #9, !dbg !8542
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !8544
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !8238, metadata !DIExpression()) #9, !dbg !8545
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8240, metadata !DIExpression()) #9, !dbg !8546
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8548, !srcloc !8245
  store i32 %13, i32* %4, align 4, !dbg !8548
  %14 = load i32, i32* %4, align 4, !dbg !8549
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !8550
  store i32 %14, i32* %15, align 4, !dbg !8551
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !8552
  %17 = load i32, i32* %16, align 4, !dbg !8552
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !8553
  store i32 %17, i32* %18, align 4, !dbg !8553
  %19 = load void (i32)*, void (i32)** %10, align 4, !dbg !8554
  %20 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %9, align 4, !dbg !8555
  %21 = getelementptr inbounds %struct.pm_policy_latency_subscription, %struct.pm_policy_latency_subscription* %20, i32 0, i32 1, !dbg !8556
  store void (i32)* %19, void (i32)** %21, align 4, !dbg !8557
  %22 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %9, align 4, !dbg !8558
  %23 = getelementptr inbounds %struct.pm_policy_latency_subscription, %struct.pm_policy_latency_subscription* %22, i32 0, i32 0, !dbg !8559
  call void @sys_slist_append.24(%struct._slist* noundef @latency_subs, %struct._snode* noundef %23) #10, !dbg !8560
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !8561
  %25 = bitcast i32* %24 to [1 x i32]*, !dbg !8561
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !8561
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %28 = bitcast i32* %27 to [1 x i32]*
  store [1 x i32] %26, [1 x i32]* %28, align 4
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !8256, metadata !DIExpression()) #9, !dbg !8562
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !8262, metadata !DIExpression()) #9, !dbg !8564
  %29 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !8565
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !8566
  %31 = load i32, i32* %30, align 4, !dbg !8566
  store i32 %31, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8266, metadata !DIExpression()) #9, !dbg !8567
  %32 = load i32, i32* %3, align 4, !dbg !8569
  %33 = icmp ne i32 %32, 0, !dbg !8570
  br i1 %33, label %34, label %35, !dbg !8571

34:                                               ; preds = %2
  br label %36, !dbg !8572

35:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8573, !srcloc !8277
  br label %36, !dbg !8574

36:                                               ; preds = %34, %35
  ret void, !dbg !8575
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pm_policy_latency_changed_unsubscribe(%struct.pm_policy_latency_subscription* noundef %0) #1 !dbg !8576 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.pm_policy_latency_subscription*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  store %struct.pm_policy_latency_subscription* %0, %struct.pm_policy_latency_subscription** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_policy_latency_subscription** %8, metadata !8579, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !8581, metadata !DIExpression()), !dbg !8582
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !8230, metadata !DIExpression()) #9, !dbg !8583
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !8585
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !8238, metadata !DIExpression()) #9, !dbg !8586
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8240, metadata !DIExpression()) #9, !dbg !8587
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8589, !srcloc !8245
  store i32 %11, i32* %3, align 4, !dbg !8589
  %12 = load i32, i32* %3, align 4, !dbg !8590
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !8591
  store i32 %12, i32* %13, align 4, !dbg !8592
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !8593
  %15 = load i32, i32* %14, align 4, !dbg !8593
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !8594
  store i32 %15, i32* %16, align 4, !dbg !8594
  %17 = load %struct.pm_policy_latency_subscription*, %struct.pm_policy_latency_subscription** %8, align 4, !dbg !8595
  %18 = getelementptr inbounds %struct.pm_policy_latency_subscription, %struct.pm_policy_latency_subscription* %17, i32 0, i32 0, !dbg !8596
  %19 = call zeroext i1 @sys_slist_find_and_remove.33(%struct._slist* noundef @latency_subs, %struct._snode* noundef %18) #10, !dbg !8597
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !8598
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !8598
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !8598
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* @latency_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !8256, metadata !DIExpression()) #9, !dbg !8599
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !8262, metadata !DIExpression()) #9, !dbg !8601
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !8602
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !8603
  %27 = load i32, i32* %26, align 4, !dbg !8603
  store i32 %27, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8266, metadata !DIExpression()) #9, !dbg !8604
  %28 = load i32, i32* %2, align 4, !dbg !8606
  %29 = icmp ne i32 %28, 0, !dbg !8607
  br i1 %29, label %30, label %31, !dbg !8608

30:                                               ; preds = %1
  br label %32, !dbg !8609

31:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8610, !srcloc !8277
  br label %32, !dbg !8611

32:                                               ; preds = %30, %31
  ret void, !dbg !8612
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i8 @pm_state_cpu_get_all(i8 noundef zeroext %0, %struct.pm_state_info** noundef %1) #1 !dbg !8613 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %struct.pm_state_info**, align 4
  store i8 %0, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8617, metadata !DIExpression()), !dbg !8618
  store %struct.pm_state_info** %1, %struct.pm_state_info*** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.pm_state_info*** %5, metadata !8619, metadata !DIExpression()), !dbg !8620
  %6 = load i8, i8* %4, align 1, !dbg !8621
  %7 = zext i8 %6 to i32, !dbg !8621
  %8 = icmp uge i32 %7, 1, !dbg !8623
  br i1 %8, label %9, label %10, !dbg !8624

9:                                                ; preds = %2
  store i8 0, i8* %3, align 1, !dbg !8625
  br label %20, !dbg !8625

10:                                               ; preds = %2
  %11 = load i8, i8* %4, align 1, !dbg !8627
  %12 = zext i8 %11 to i32, !dbg !8628
  %13 = getelementptr inbounds [1 x %struct.pm_state_info*], [1 x %struct.pm_state_info*]* @cpus_states, i32 0, i32 %12, !dbg !8628
  %14 = load %struct.pm_state_info*, %struct.pm_state_info** %13, align 4, !dbg !8628
  %15 = load %struct.pm_state_info**, %struct.pm_state_info*** %5, align 4, !dbg !8629
  store %struct.pm_state_info* %14, %struct.pm_state_info** %15, align 4, !dbg !8630
  %16 = load i8, i8* %4, align 1, !dbg !8631
  %17 = zext i8 %16 to i32, !dbg !8632
  %18 = getelementptr inbounds [1 x i8], [1 x i8]* @states_per_cpu, i32 0, i32 %17, !dbg !8632
  %19 = load i8, i8* %18, align 1, !dbg !8632
  store i8 %19, i8* %3, align 1, !dbg !8633
  br label %20, !dbg !8633

20:                                               ; preds = %10, %9
  %21 = load i8, i8* %3, align 1, !dbg !8634
  ret i8 %21, !dbg !8634
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !8635 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8683, metadata !DIExpression()), !dbg !8684
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !8685, metadata !DIExpression()), !dbg !8686
  %5 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !8687
  %6 = icmp ne %struct.__esf* %5, null, !dbg !8689
  br i1 %6, label %7, label %9, !dbg !8690

7:                                                ; preds = %2
  %8 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !8691
  call void @esf_dump(%struct.__esf* noundef %8) #10, !dbg !8693
  br label %9, !dbg !8694

9:                                                ; preds = %7, %2
  %10 = load i32, i32* %3, align 4, !dbg !8695
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !8696
  call void @z_fatal_error(i32 noundef %10, %struct.__esf* noundef %11) #10, !dbg !8697
  ret void, !dbg !8698
}

; Function Attrs: noinline nounwind optnone
define internal void @esf_dump(%struct.__esf* noundef %0) #1 !dbg !8699 {
  %2 = alloca %struct.__esf*, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %2, metadata !8702, metadata !DIExpression()), !dbg !8703
  br label %19, !dbg !8704

19:                                               ; preds = %1
  br label %20, !dbg !8705

20:                                               ; preds = %19
  br label %21, !dbg !8709

21:                                               ; preds = %20
  br label %22, !dbg !8710

22:                                               ; preds = %21
  br label %23, !dbg !8714

23:                                               ; preds = %22
  br label %24, !dbg !8715

24:                                               ; preds = %23
  br label %25, !dbg !8719

25:                                               ; preds = %24
  br label %26, !dbg !8720

26:                                               ; preds = %25
  ret void, !dbg !8724
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved.10* noundef %1) #1 !dbg !8725 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca %struct._callee_saved.10*, align 4
  %5 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !8741, metadata !DIExpression()), !dbg !8742
  store %struct._callee_saved.10* %1, %struct._callee_saved.10** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %4, metadata !8743, metadata !DIExpression()), !dbg !8744
  %6 = load %struct._callee_saved.10*, %struct._callee_saved.10** %4, align 4, !dbg !8745
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8746, metadata !DIExpression()), !dbg !8747
  %7 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !8748
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, !dbg !8749
  %9 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %8, i32 0, i32 0, !dbg !8750
  %10 = bitcast %struct.z_spinlock_key* %9 to i32*, !dbg !8750
  %11 = load i32, i32* %10, align 4, !dbg !8750
  store i32 %11, i32* %5, align 4, !dbg !8747
  %12 = load i32, i32* %5, align 4, !dbg !8751
  %13 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !8752
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef %13) #10, !dbg !8753
  ret void, !dbg !8754
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @arch_syscall_oops(i8* noundef %0) #5 !dbg !8755 {
  %2 = alloca i8*, align 4
  %3 = alloca i32*, align 4
  %4 = alloca %struct.__esf, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8758, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.declare(metadata i32** %3, metadata !8760, metadata !DIExpression()), !dbg !8761
  %5 = load i8*, i8** %2, align 4, !dbg !8762
  %6 = bitcast i8* %5 to i32*, !dbg !8762
  store i32* %6, i32** %3, align 4, !dbg !8761
  call void @llvm.dbg.declare(metadata %struct.__esf* %4, metadata !8763, metadata !DIExpression()), !dbg !8764
  %7 = bitcast %struct.__esf* %4 to i8*, !dbg !8764
  call void @llvm.memset.p0i8.i32(i8* align 4 %7, i8 0, i32 32, i1 false), !dbg !8764
  %8 = load i32*, i32** %3, align 4, !dbg !8765
  %9 = getelementptr inbounds i32, i32* %8, i32 3, !dbg !8765
  %10 = load i32, i32* %9, align 4, !dbg !8765
  %11 = getelementptr inbounds %struct.__esf, %struct.__esf* %4, i32 0, i32 0, !dbg !8766
  %12 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %11, i32 0, i32 6, !dbg !8767
  %13 = bitcast %struct.z_spinlock_key* %12 to i32*, !dbg !8767
  store i32 %10, i32* %13, align 4, !dbg !8768
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef %4) #10, !dbg !8769
  unreachable, !dbg !8770
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_enable(i32 noundef %0) #1 !dbg !8771 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8773, metadata !DIExpression()), !dbg !8774
  %3 = load i32, i32* %2, align 4, !dbg !8775
  call void @__NVIC_EnableIRQ(i32 noundef %3) #10, !dbg !8776
  ret void, !dbg !8777
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_EnableIRQ(i32 noundef %0) #1 !dbg !8778 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8781, metadata !DIExpression()), !dbg !8782
  %3 = load i32, i32* %2, align 4, !dbg !8783
  %4 = icmp sge i32 %3, 0, !dbg !8785
  br i1 %4, label %5, label %9, !dbg !8786

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8787, !srcloc !8789
  %6 = load i32, i32* %2, align 4, !dbg !8790
  %7 = and i32 %6, 31, !dbg !8791
  %8 = shl i32 1, %7, !dbg !8792
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0, i32 0), align 4, !dbg !8793
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8794, !srcloc !8795
  br label %9, !dbg !8796

9:                                                ; preds = %5, %1
  ret void, !dbg !8797
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_disable(i32 noundef %0) #1 !dbg !8798 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8799, metadata !DIExpression()), !dbg !8800
  %3 = load i32, i32* %2, align 4, !dbg !8801
  call void @__NVIC_DisableIRQ(i32 noundef %3) #10, !dbg !8802
  ret void, !dbg !8803
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_DisableIRQ(i32 noundef %0) #1 !dbg !8804 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8805, metadata !DIExpression()), !dbg !8806
  %3 = load i32, i32* %2, align 4, !dbg !8807
  %4 = icmp sge i32 %3, 0, !dbg !8809
  br i1 %4, label %5, label %9, !dbg !8810

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !8811
  %7 = and i32 %6, 31, !dbg !8813
  %8 = shl i32 1, %7, !dbg !8814
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 2, i32 0), align 4, !dbg !8815
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !8816, !srcloc !8820
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !8821, !srcloc !8824
  br label %9, !dbg !8825

9:                                                ; preds = %5, %1
  ret void, !dbg !8826
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) #1 !dbg !8827 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8830, metadata !DIExpression()), !dbg !8831
  %3 = load i32, i32* %2, align 4, !dbg !8832
  %4 = udiv i32 %3, 32, !dbg !8832
  %5 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0), i32 0, i32 %4, !dbg !8833
  %6 = load volatile i32, i32* %5, align 4, !dbg !8833
  %7 = load i32, i32* %2, align 4, !dbg !8834
  %8 = urem i32 %7, 32, !dbg !8834
  %9 = shl i32 1, %8, !dbg !8834
  %10 = and i32 %6, %9, !dbg !8835
  ret i32 %10, !dbg !8836
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !8837 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8840, metadata !DIExpression()), !dbg !8841
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8842, metadata !DIExpression()), !dbg !8843
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8844, metadata !DIExpression()), !dbg !8845
  %7 = load i32, i32* %5, align 4, !dbg !8846
  %8 = add i32 %7, 0, !dbg !8846
  store i32 %8, i32* %5, align 4, !dbg !8846
  %9 = load i32, i32* %4, align 4, !dbg !8849
  %10 = load i32, i32* %5, align 4, !dbg !8850
  call void @__NVIC_SetPriority(i32 noundef %9, i32 noundef %10) #10, !dbg !8851
  ret void, !dbg !8852
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #1 !dbg !8853 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8856, metadata !DIExpression()), !dbg !8857
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8858, metadata !DIExpression()), !dbg !8859
  %5 = load i32, i32* %3, align 4, !dbg !8860
  %6 = icmp sge i32 %5, 0, !dbg !8862
  br i1 %6, label %7, label %29, !dbg !8863

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !8864
  %9 = lshr i32 %8, 2, !dbg !8864
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !8866
  %11 = load volatile i32, i32* %10, align 4, !dbg !8866
  %12 = load i32, i32* %3, align 4, !dbg !8867
  %13 = and i32 %12, 3, !dbg !8867
  %14 = mul i32 %13, 8, !dbg !8867
  %15 = shl i32 255, %14, !dbg !8868
  %16 = xor i32 %15, -1, !dbg !8869
  %17 = and i32 %11, %16, !dbg !8870
  %18 = load i32, i32* %4, align 4, !dbg !8871
  %19 = shl i32 %18, 6, !dbg !8872
  %20 = and i32 %19, 255, !dbg !8873
  %21 = load i32, i32* %3, align 4, !dbg !8874
  %22 = and i32 %21, 3, !dbg !8874
  %23 = mul i32 %22, 8, !dbg !8874
  %24 = shl i32 %20, %23, !dbg !8875
  %25 = or i32 %17, %24, !dbg !8876
  %26 = load i32, i32* %3, align 4, !dbg !8877
  %27 = lshr i32 %26, 2, !dbg !8877
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !8878
  store volatile i32 %25, i32* %28, align 4, !dbg !8879
  br label %55, !dbg !8880

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !8881
  %31 = and i32 %30, 15, !dbg !8881
  %32 = sub i32 %31, 8, !dbg !8881
  %33 = lshr i32 %32, 2, !dbg !8881
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !8883
  %35 = load volatile i32, i32* %34, align 4, !dbg !8883
  %36 = load i32, i32* %3, align 4, !dbg !8884
  %37 = and i32 %36, 3, !dbg !8884
  %38 = mul i32 %37, 8, !dbg !8884
  %39 = shl i32 255, %38, !dbg !8885
  %40 = xor i32 %39, -1, !dbg !8886
  %41 = and i32 %35, %40, !dbg !8887
  %42 = load i32, i32* %4, align 4, !dbg !8888
  %43 = shl i32 %42, 6, !dbg !8889
  %44 = and i32 %43, 255, !dbg !8890
  %45 = load i32, i32* %3, align 4, !dbg !8891
  %46 = and i32 %45, 3, !dbg !8891
  %47 = mul i32 %46, 8, !dbg !8891
  %48 = shl i32 %44, %47, !dbg !8892
  %49 = or i32 %41, %48, !dbg !8893
  %50 = load i32, i32* %3, align 4, !dbg !8894
  %51 = and i32 %50, 15, !dbg !8894
  %52 = sub i32 %51, 8, !dbg !8894
  %53 = lshr i32 %52, 2, !dbg !8894
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !8895
  store volatile i32 %49, i32* %54, align 4, !dbg !8896
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !8897
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_irq_spurious(i8* noundef %0) #1 !dbg !8898 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8899, metadata !DIExpression()), !dbg !8900
  %3 = load i8*, i8** %2, align 4, !dbg !8901
  call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #10, !dbg !8902
  ret void, !dbg !8903
}

; Function Attrs: noinline nounwind optnone
define dso_local void @_arch_isr_direct_pm() #1 !dbg !8904 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8905, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8907, metadata !DIExpression()) #9, !dbg !8909
  %4 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8911, !srcloc !8912
  store i32 %4, i32* %2, align 4, !dbg !8911
  %5 = load i32, i32* %2, align 4, !dbg !8913
  store i32 %5, i32* %3, align 4, !dbg !8914
  %6 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1), align 4, !dbg !8915
  %7 = icmp ne i32 %6, 0, !dbg !8917
  br i1 %7, label %8, label %9, !dbg !8918

8:                                                ; preds = %0
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1), align 4, !dbg !8919
  call void @z_pm_save_idle_exit() #10, !dbg !8921
  br label %9, !dbg !8922

9:                                                ; preds = %8, %0
  %10 = load i32, i32* %3, align 4, !dbg !8923
  store i32 %10, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8924, metadata !DIExpression()) #9, !dbg !8926
  %11 = load i32, i32* %1, align 4, !dbg !8928
  %12 = icmp ne i32 %11, 0, !dbg !8930
  br i1 %12, label %13, label %14, !dbg !8931

13:                                               ; preds = %9
  br label %15, !dbg !8932

14:                                               ; preds = %9
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8934, !srcloc !8935
  br label %15, !dbg !8936

15:                                               ; preds = %13, %14
  ret void, !dbg !8937
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_nmi() #1 !dbg !8938 {
  call void @z_SysNmiOnReset() #10, !dbg !8940
  call void @z_arm_int_exit() #10, !dbg !8941
  ret void, !dbg !8942
}

declare dso_local void @z_SysNmiOnReset() #0

declare dso_local void @z_arm_int_exit() #0

; Function Attrs: noinline nounwind optnone
define weak dso_local void @relocate_vector_table() #1 !dbg !8943 {
  ret void, !dbg !8945
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_prep_c() #1 !dbg !8946 {
  call void @relocate_vector_table() #10, !dbg !8947
  call void @z_bss_zero() #10, !dbg !8948
  call void @z_data_copy() #10, !dbg !8949
  call void @z_arm_interrupt_init() #10, !dbg !8950
  call void @z_cstart() #12, !dbg !8951
  unreachable, !dbg !8951
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_swap(i32 noundef %0) #1 !dbg !8952 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8954, metadata !DIExpression()), !dbg !8955
  %4 = load i32, i32* %3, align 4, !dbg !8956
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8957
  %6 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %5, i32 0, i32 6, !dbg !8958
  %7 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %6, i32 0, i32 0, !dbg !8959
  store i32 %4, i32* %7, align 8, !dbg !8960
  %8 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8961
  %9 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8962
  %10 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %9, i32 0, i32 6, !dbg !8963
  %11 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %10, i32 0, i32 1, !dbg !8964
  store i32 %8, i32* %11, align 4, !dbg !8965
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !8966
  %13 = or i32 %12, 268435456, !dbg !8966
  store volatile i32 %13, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !8966
  store i32 0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8967, metadata !DIExpression()) #9, !dbg !8969
  %14 = load i32, i32* %2, align 4, !dbg !8971
  %15 = icmp ne i32 %14, 0, !dbg !8973
  br i1 %15, label %16, label %17, !dbg !8974

16:                                               ; preds = %1
  br label %18, !dbg !8975

17:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8977, !srcloc !8978
  br label %18, !dbg !8979

18:                                               ; preds = %16, %17
  %19 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8980
  %20 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %19, i32 0, i32 6, !dbg !8981
  %21 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %20, i32 0, i32 1, !dbg !8982
  %22 = load i32, i32* %21, align 4, !dbg !8982
  ret i32 %22, !dbg !8983
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_new_thread(%struct.k_thread.132* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #1 !dbg !8984 {
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.z_thread_stack_element*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca void (i8*, i8*, i8*)*, align 4
  %12 = alloca i8*, align 4
  %13 = alloca i8*, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %struct.__basic_sf*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !9087, metadata !DIExpression()), !dbg !9088
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %9, metadata !9089, metadata !DIExpression()), !dbg !9090
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !9091, metadata !DIExpression()), !dbg !9092
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %11, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %11, metadata !9093, metadata !DIExpression()), !dbg !9094
  store i8* %4, i8** %12, align 4
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9095, metadata !DIExpression()), !dbg !9096
  store i8* %5, i8** %13, align 4
  call void @llvm.dbg.declare(metadata i8** %13, metadata !9097, metadata !DIExpression()), !dbg !9098
  store i8* %6, i8** %14, align 4
  call void @llvm.dbg.declare(metadata i8** %14, metadata !9099, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.declare(metadata %struct.__basic_sf** %15, metadata !9101, metadata !DIExpression()), !dbg !9102
  %16 = load i8*, i8** %10, align 4, !dbg !9103
  %17 = getelementptr inbounds i8, i8* %16, i32 -32, !dbg !9103
  %18 = bitcast i8* %17 to %struct.__basic_sf*, !dbg !9103
  store %struct.__basic_sf* %18, %struct.__basic_sf** %15, align 4, !dbg !9104
  %19 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9105
  %20 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %19, i32 0, i32 6, !dbg !9106
  %21 = bitcast %struct.z_spinlock_key* %20 to i32*, !dbg !9106
  store i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32* %21, align 4, !dbg !9107
  %22 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9108
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 6, !dbg !9109
  %24 = bitcast %struct.z_spinlock_key* %23 to i32*, !dbg !9109
  %25 = load i32, i32* %24, align 4, !dbg !9110
  %26 = and i32 %25, -2, !dbg !9110
  store i32 %26, i32* %24, align 4, !dbg !9110
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %11, align 4, !dbg !9111
  %28 = ptrtoint void (i8*, i8*, i8*)* %27 to i32, !dbg !9112
  %29 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9113
  %30 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %29, i32 0, i32 0, !dbg !9114
  %31 = bitcast %struct.z_spinlock_key* %30 to i32*, !dbg !9114
  store i32 %28, i32* %31, align 4, !dbg !9115
  %32 = load i8*, i8** %12, align 4, !dbg !9116
  %33 = ptrtoint i8* %32 to i32, !dbg !9117
  %34 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9118
  %35 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %34, i32 0, i32 1, !dbg !9119
  %36 = bitcast %struct.z_spinlock_key* %35 to i32*, !dbg !9119
  store i32 %33, i32* %36, align 4, !dbg !9120
  %37 = load i8*, i8** %13, align 4, !dbg !9121
  %38 = ptrtoint i8* %37 to i32, !dbg !9122
  %39 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9123
  %40 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %39, i32 0, i32 2, !dbg !9124
  %41 = bitcast %struct.z_spinlock_key* %40 to i32*, !dbg !9124
  store i32 %38, i32* %41, align 4, !dbg !9125
  %42 = load i8*, i8** %14, align 4, !dbg !9126
  %43 = ptrtoint i8* %42 to i32, !dbg !9127
  %44 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9128
  %45 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %44, i32 0, i32 3, !dbg !9129
  %46 = bitcast %struct.z_spinlock_key* %45 to i32*, !dbg !9129
  store i32 %43, i32* %46, align 4, !dbg !9130
  %47 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9131
  %48 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %47, i32 0, i32 7, !dbg !9132
  store i32 16777216, i32* %48, align 4, !dbg !9133
  %49 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !9134
  %50 = ptrtoint %struct.__basic_sf* %49 to i32, !dbg !9135
  %51 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !9136
  %52 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %51, i32 0, i32 1, !dbg !9137
  %53 = getelementptr inbounds %struct._callee_saved.10, %struct._callee_saved.10* %52, i32 0, i32 8, !dbg !9138
  store i32 %50, i32* %53, align 8, !dbg !9139
  %54 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !9140
  %55 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %54, i32 0, i32 6, !dbg !9141
  %56 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %55, i32 0, i32 0, !dbg !9142
  store i32 0, i32* %56, align 8, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_switch_to_main_thread(%struct.k_thread.132* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) #1 !dbg !9145 {
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca void (i8*, i8*, i8*)*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !9148, metadata !DIExpression()), !dbg !9149
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9150, metadata !DIExpression()), !dbg !9151
  store void (i8*, i8*, i8*)* %2, void (i8*, i8*, i8*)** %6, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %6, metadata !9152, metadata !DIExpression()), !dbg !9153
  call void @z_arm_prepare_switch_to_main() #10, !dbg !9154
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !9155
  store %struct.k_thread.132* %7, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9156
  %8 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %6, align 4, !dbg !9157
  %9 = load i8*, i8** %5, align 4, !dbg !9158
  call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie i\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %8, i8* %9) #9, !dbg !9159, !srcloc !9160
  unreachable, !dbg !9161
}

; Function Attrs: noinline nounwind optnone
define internal void @z_arm_prepare_switch_to_main() #1 !dbg !9162 {
  ret void, !dbg !9163
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved.10* noundef %3) #1 !dbg !9164 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._callee_saved.10*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca %struct.__esf*, align 4
  %15 = alloca %struct.__esf, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9181, metadata !DIExpression()), !dbg !9182
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9183, metadata !DIExpression()), !dbg !9184
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9185, metadata !DIExpression()), !dbg !9186
  store %struct._callee_saved.10* %3, %struct._callee_saved.10** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %9, metadata !9187, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9189, metadata !DIExpression()), !dbg !9190
  store i32 0, i32* %10, align 4, !dbg !9190
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9191, metadata !DIExpression()), !dbg !9192
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !9193
  %17 = and i32 %16, 511, !dbg !9194
  store i32 %17, i32* %11, align 4, !dbg !9192
  call void @llvm.dbg.declare(metadata i8* %12, metadata !9195, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.declare(metadata i8* %13, metadata !9197, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.declare(metadata %struct.__esf** %14, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.declare(metadata %struct.__esf* %15, metadata !9201, metadata !DIExpression()), !dbg !9202
  store i32 0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9203, metadata !DIExpression()) #9, !dbg !9205
  %18 = load i32, i32* %5, align 4, !dbg !9207
  %19 = icmp ne i32 %18, 0, !dbg !9209
  br i1 %19, label %20, label %21, !dbg !9210

20:                                               ; preds = %4
  br label %22, !dbg !9211

21:                                               ; preds = %4
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !9213, !srcloc !9214
  br label %22, !dbg !9215

22:                                               ; preds = %20, %21
  %23 = load i32, i32* %6, align 4, !dbg !9216
  %24 = load i32, i32* %7, align 4, !dbg !9217
  %25 = load i32, i32* %8, align 4, !dbg !9218
  %26 = call %struct.__esf* @get_esf(i32 noundef %23, i32 noundef %24, i32 noundef %25, i8* noundef %13) #10, !dbg !9219
  store %struct.__esf* %26, %struct.__esf** %14, align 4, !dbg !9220
  %27 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !9221
  %28 = load i32, i32* %11, align 4, !dbg !9222
  %29 = call i32 @fault_handle(%struct.__esf* noundef %27, i32 noundef %28, i8* noundef %12) #10, !dbg !9223
  store i32 %29, i32* %10, align 4, !dbg !9224
  %30 = load i8, i8* %12, align 1, !dbg !9225
  %31 = trunc i8 %30 to i1, !dbg !9225
  br i1 %31, label %32, label %33, !dbg !9227

32:                                               ; preds = %22
  br label %60, !dbg !9228

33:                                               ; preds = %22
  %34 = bitcast %struct.__esf* %15 to i8*, !dbg !9230
  %35 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !9231
  %36 = bitcast %struct.__esf* %35 to i8*, !dbg !9231
  %37 = call i8* @memcpy(i8* noundef %34, i8* noundef %36, i32 noundef 32) #10, !dbg !9232
  %38 = load %struct._callee_saved.10*, %struct._callee_saved.10** %9, align 4, !dbg !9233
  %39 = load i8, i8* %13, align 1, !dbg !9234
  %40 = trunc i8 %39 to i1, !dbg !9234
  br i1 %40, label %41, label %53, !dbg !9236

41:                                               ; preds = %33
  %42 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !9237
  %43 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %42, i32 0, i32 7, !dbg !9240
  %44 = load i32, i32* %43, align 4, !dbg !9240
  %45 = and i32 %44, 511, !dbg !9241
  %46 = icmp eq i32 %45, 0, !dbg !9242
  br i1 %46, label %47, label %52, !dbg !9243

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !9244
  %49 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %48, i32 0, i32 7, !dbg !9246
  %50 = load i32, i32* %49, align 4, !dbg !9247
  %51 = or i32 %50, 511, !dbg !9247
  store i32 %51, i32* %49, align 4, !dbg !9247
  br label %52, !dbg !9248

52:                                               ; preds = %47, %41
  br label %58, !dbg !9249

53:                                               ; preds = %33
  %54 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !9250
  %55 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %54, i32 0, i32 7, !dbg !9252
  %56 = load i32, i32* %55, align 4, !dbg !9253
  %57 = and i32 %56, -512, !dbg !9253
  store i32 %57, i32* %55, align 4, !dbg !9253
  br label %58

58:                                               ; preds = %53, %52
  %59 = load i32, i32* %10, align 4, !dbg !9254
  call void @z_arm_fatal_error(i32 noundef %59, %struct.__esf* noundef %15) #10, !dbg !9255
  br label %60, !dbg !9256

60:                                               ; preds = %58, %32
  ret void, !dbg !9256
}

; Function Attrs: noinline nounwind optnone
define internal %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3) #1 !dbg !9257 {
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.__esf*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9261, metadata !DIExpression()), !dbg !9262
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9265, metadata !DIExpression()), !dbg !9266
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.declare(metadata i8* %10, metadata !9269, metadata !DIExpression()), !dbg !9270
  store i8 0, i8* %10, align 1, !dbg !9270
  call void @llvm.dbg.declare(metadata %struct.__esf** %11, metadata !9271, metadata !DIExpression()), !dbg !9272
  store %struct.__esf* null, %struct.__esf** %11, align 4, !dbg !9272
  %16 = load i8*, i8** %9, align 4, !dbg !9273
  store i8 0, i8* %16, align 1, !dbg !9274
  %17 = load i32, i32* %8, align 4, !dbg !9275
  %18 = and i32 %17, -16777216, !dbg !9277
  %19 = icmp ne i32 %18, -16777216, !dbg !9278
  br i1 %19, label %20, label %21, !dbg !9279

20:                                               ; preds = %4
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !9280
  br label %49, !dbg !9280

21:                                               ; preds = %4
  %22 = load i32, i32* %8, align 4, !dbg !9282
  %23 = and i32 %22, 8, !dbg !9284
  %24 = icmp ne i32 %23, 0, !dbg !9284
  br i1 %24, label %25, label %32, !dbg !9285

25:                                               ; preds = %21
  %26 = load i32, i32* %8, align 4, !dbg !9286
  %27 = and i32 %26, 4, !dbg !9287
  %28 = icmp ne i32 %27, 0, !dbg !9287
  br i1 %28, label %32, label %29, !dbg !9288

29:                                               ; preds = %25
  br label %30, !dbg !9289

30:                                               ; preds = %29
  br label %31, !dbg !9291

31:                                               ; preds = %30
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !9295
  br label %49, !dbg !9295

32:                                               ; preds = %25, %21
  %33 = load i8, i8* %10, align 1, !dbg !9296
  %34 = trunc i8 %33 to i1, !dbg !9296
  br i1 %34, label %47, label %35, !dbg !9298

35:                                               ; preds = %32
  %36 = load i32, i32* %8, align 4, !dbg !9299
  %37 = and i32 %36, 8, !dbg !9302
  %38 = icmp ne i32 %37, 0, !dbg !9302
  br i1 %38, label %39, label %42, !dbg !9303

39:                                               ; preds = %35
  %40 = load i32, i32* %7, align 4, !dbg !9304
  %41 = inttoptr i32 %40 to %struct.__esf*, !dbg !9306
  store %struct.__esf* %41, %struct.__esf** %11, align 4, !dbg !9307
  br label %46, !dbg !9308

42:                                               ; preds = %35
  %43 = load i32, i32* %6, align 4, !dbg !9309
  %44 = inttoptr i32 %43 to %struct.__esf*, !dbg !9311
  store %struct.__esf* %44, %struct.__esf** %11, align 4, !dbg !9312
  %45 = load i8*, i8** %9, align 4, !dbg !9313
  store i8 1, i8* %45, align 1, !dbg !9314
  br label %46

46:                                               ; preds = %42, %39
  br label %47, !dbg !9315

47:                                               ; preds = %46, %32
  %48 = load %struct.__esf*, %struct.__esf** %11, align 4, !dbg !9316
  store %struct.__esf* %48, %struct.__esf** %5, align 4, !dbg !9317
  br label %49, !dbg !9317

49:                                               ; preds = %47, %31, %20
  %50 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !9318
  ret %struct.__esf* %50, !dbg !9318
}

; Function Attrs: noinline nounwind optnone
define internal i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !9319 {
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !9322, metadata !DIExpression()), !dbg !9323
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9324, metadata !DIExpression()), !dbg !9325
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9326, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9328, metadata !DIExpression()), !dbg !9329
  store i32 0, i32* %7, align 4, !dbg !9329
  %8 = load i8*, i8** %6, align 4, !dbg !9330
  store i8 0, i8* %8, align 1, !dbg !9331
  %9 = load i32, i32* %5, align 4, !dbg !9332
  switch i32 %9, label %14 [
    i32 3, label %10
  ], !dbg !9333

10:                                               ; preds = %3
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !9334
  %12 = load i8*, i8** %6, align 4, !dbg !9336
  %13 = call i32 @hard_fault(%struct.__esf* noundef %11, i8* noundef %12) #10, !dbg !9337
  store i32 %13, i32* %7, align 4, !dbg !9338
  br label %17, !dbg !9339

14:                                               ; preds = %3
  %15 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !9340
  %16 = load i32, i32* %5, align 4, !dbg !9341
  call void @reserved_exception(%struct.__esf* noundef %15, i32 noundef %16) #10, !dbg !9342
  br label %17, !dbg !9343

17:                                               ; preds = %14, %10
  %18 = load i8*, i8** %6, align 4, !dbg !9344
  %19 = load i8, i8* %18, align 1, !dbg !9346
  %20 = trunc i8 %19 to i1, !dbg !9346
  %21 = zext i1 %20 to i32, !dbg !9347
  %22 = icmp eq i32 %21, 0, !dbg !9348
  br i1 %22, label %23, label %26, !dbg !9349

23:                                               ; preds = %17
  %24 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !9350
  %25 = load i32, i32* %5, align 4, !dbg !9352
  call void @fault_show(%struct.__esf* noundef %24, i32 noundef %25) #10, !dbg !9353
  br label %26, !dbg !9354

26:                                               ; preds = %23, %17
  %27 = load i32, i32* %7, align 4, !dbg !9355
  ret i32 %27, !dbg !9356
}

; Function Attrs: noinline nounwind optnone
define internal i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef %1) #1 !dbg !9357 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !9360, metadata !DIExpression()), !dbg !9361
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9362, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9364, metadata !DIExpression()), !dbg !9365
  store i32 0, i32* %5, align 4, !dbg !9365
  br label %14, !dbg !9366

14:                                               ; preds = %2
  br label %15, !dbg !9367

15:                                               ; preds = %14
  %16 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !9371
  %17 = call zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %16) #10, !dbg !9373
  br i1 %17, label %18, label %26, !dbg !9374

18:                                               ; preds = %15
  br label %19, !dbg !9375

19:                                               ; preds = %18
  br label %20, !dbg !9377

20:                                               ; preds = %19
  %21 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !9381
  %22 = getelementptr inbounds %struct.__esf, %struct.__esf* %21, i32 0, i32 0, !dbg !9382
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 0, !dbg !9383
  %24 = bitcast %struct.z_spinlock_key* %23 to i32*, !dbg !9383
  %25 = load i32, i32* %24, align 4, !dbg !9383
  store i32 %25, i32* %5, align 4, !dbg !9384
  br label %26, !dbg !9385

26:                                               ; preds = %20, %15
  %27 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !9386
  %28 = call zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %27, i1 noundef zeroext true) #10, !dbg !9387
  %29 = load i8*, i8** %4, align 4, !dbg !9388
  %30 = zext i1 %28 to i8, !dbg !9389
  store i8 %30, i8* %29, align 1, !dbg !9389
  %31 = load i32, i32* %5, align 4, !dbg !9390
  ret i32 %31, !dbg !9391
}

; Function Attrs: noinline nounwind optnone
define internal void @reserved_exception(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !9392 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !9397, metadata !DIExpression()), !dbg !9398
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9399, metadata !DIExpression()), !dbg !9400
  %9 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !9401
  br label %10, !dbg !9402

10:                                               ; preds = %2
  br label %11, !dbg !9403

11:                                               ; preds = %10
  ret void, !dbg !9407
}

; Function Attrs: noinline nounwind optnone
define internal void @fault_show(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !9408 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !9409, metadata !DIExpression()), !dbg !9410
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9411, metadata !DIExpression()), !dbg !9412
  %5 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !9413
  %6 = load i32, i32* %4, align 4, !dbg !9414
  ret void, !dbg !9415
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #1 !dbg !9416 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i16*, align 4
  %5 = alloca i16, align 2
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !9419, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.declare(metadata i16** %4, metadata !9421, metadata !DIExpression()), !dbg !9422
  %6 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !9423
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %6, i32 0, i32 0, !dbg !9424
  %8 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %7, i32 0, i32 6, !dbg !9425
  %9 = bitcast %struct.z_spinlock_key* %8 to i32*, !dbg !9425
  %10 = load i32, i32* %9, align 4, !dbg !9425
  %11 = inttoptr i32 %10 to i16*, !dbg !9426
  store i16* %11, i16** %4, align 4, !dbg !9422
  call void @llvm.dbg.declare(metadata i16* %5, metadata !9427, metadata !DIExpression()), !dbg !9428
  %12 = load i16*, i16** %4, align 4, !dbg !9429
  %13 = getelementptr inbounds i16, i16* %12, i32 -1, !dbg !9430
  %14 = load i16, i16* %13, align 2, !dbg !9431
  store i16 %14, i16* %5, align 2, !dbg !9428
  %15 = load i16, i16* %5, align 2, !dbg !9432
  %16 = zext i16 %15 to i32, !dbg !9432
  %17 = and i32 %16, 65280, !dbg !9434
  %18 = icmp eq i32 %17, 57088, !dbg !9435
  br i1 %18, label %19, label %25, !dbg !9436

19:                                               ; preds = %1
  %20 = load i16, i16* %5, align 2, !dbg !9437
  %21 = zext i16 %20 to i32, !dbg !9437
  %22 = and i32 %21, 255, !dbg !9438
  %23 = icmp eq i32 %22, 2, !dbg !9439
  br i1 %23, label %24, label %25, !dbg !9440

24:                                               ; preds = %19
  store i1 true, i1* %2, align 1, !dbg !9441
  br label %26, !dbg !9441

25:                                               ; preds = %19, %1
  store i1 false, i1* %2, align 1, !dbg !9443
  br label %26, !dbg !9443

26:                                               ; preds = %25, %24
  %27 = load i1, i1* %2, align 1, !dbg !9444
  ret i1 %27, !dbg !9444
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %0, i1 noundef zeroext %1) #1 !dbg !9445 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8, align 1
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !9448, metadata !DIExpression()), !dbg !9449
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9450, metadata !DIExpression()), !dbg !9451
  ret i1 false, !dbg !9452
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault_init() #1 !dbg !9453 {
  ret void, !dbg !9454
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_interrupt_init() #1 !dbg !9455 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9457, metadata !DIExpression()), !dbg !9458
  store i32 0, i32* %1, align 4, !dbg !9458
  br label %2, !dbg !9459

2:                                                ; preds = %7, %0
  %3 = load i32, i32* %1, align 4, !dbg !9460
  %4 = icmp slt i32 %3, 26, !dbg !9463
  br i1 %4, label %5, label %10, !dbg !9464

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4, !dbg !9465
  call void @__NVIC_SetPriority.41(i32 noundef %6, i32 noundef 0) #10, !dbg !9467
  br label %7, !dbg !9468

7:                                                ; preds = %5
  %8 = load i32, i32* %1, align 4, !dbg !9469
  %9 = add nsw i32 %8, 1, !dbg !9469
  store i32 %9, i32* %1, align 4, !dbg !9469
  br label %2, !dbg !9470, !llvm.loop !9471

10:                                               ; preds = %2
  ret void, !dbg !9473
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.41(i32 noundef %0, i32 noundef %1) #1 !dbg !9474 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9475, metadata !DIExpression()), !dbg !9476
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9477, metadata !DIExpression()), !dbg !9478
  %5 = load i32, i32* %3, align 4, !dbg !9479
  %6 = icmp sge i32 %5, 0, !dbg !9481
  br i1 %6, label %7, label %29, !dbg !9482

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !9483
  %9 = lshr i32 %8, 2, !dbg !9483
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !9485
  %11 = load volatile i32, i32* %10, align 4, !dbg !9485
  %12 = load i32, i32* %3, align 4, !dbg !9486
  %13 = and i32 %12, 3, !dbg !9486
  %14 = mul i32 %13, 8, !dbg !9486
  %15 = shl i32 255, %14, !dbg !9487
  %16 = xor i32 %15, -1, !dbg !9488
  %17 = and i32 %11, %16, !dbg !9489
  %18 = load i32, i32* %4, align 4, !dbg !9490
  %19 = shl i32 %18, 6, !dbg !9491
  %20 = and i32 %19, 255, !dbg !9492
  %21 = load i32, i32* %3, align 4, !dbg !9493
  %22 = and i32 %21, 3, !dbg !9493
  %23 = mul i32 %22, 8, !dbg !9493
  %24 = shl i32 %20, %23, !dbg !9494
  %25 = or i32 %17, %24, !dbg !9495
  %26 = load i32, i32* %3, align 4, !dbg !9496
  %27 = lshr i32 %26, 2, !dbg !9496
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !9497
  store volatile i32 %25, i32* %28, align 4, !dbg !9498
  br label %55, !dbg !9499

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !9500
  %31 = and i32 %30, 15, !dbg !9500
  %32 = sub i32 %31, 8, !dbg !9500
  %33 = lshr i32 %32, 2, !dbg !9500
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !9502
  %35 = load volatile i32, i32* %34, align 4, !dbg !9502
  %36 = load i32, i32* %3, align 4, !dbg !9503
  %37 = and i32 %36, 3, !dbg !9503
  %38 = mul i32 %37, 8, !dbg !9503
  %39 = shl i32 255, %38, !dbg !9504
  %40 = xor i32 %39, -1, !dbg !9505
  %41 = and i32 %35, %40, !dbg !9506
  %42 = load i32, i32* %4, align 4, !dbg !9507
  %43 = shl i32 %42, 6, !dbg !9508
  %44 = and i32 %43, 255, !dbg !9509
  %45 = load i32, i32* %3, align 4, !dbg !9510
  %46 = and i32 %45, 3, !dbg !9510
  %47 = mul i32 %46, 8, !dbg !9510
  %48 = shl i32 %44, %47, !dbg !9511
  %49 = or i32 %41, %48, !dbg !9512
  %50 = load i32, i32* %3, align 4, !dbg !9513
  %51 = and i32 %50, 15, !dbg !9513
  %52 = sub i32 %51, 8, !dbg !9513
  %53 = lshr i32 %52, 2, !dbg !9513
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !9514
  store volatile i32 %49, i32* %54, align 4, !dbg !9515
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !9516
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_abort(%struct.k_thread.132* noundef %0) #1 !dbg !9517 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !9616, metadata !DIExpression()), !dbg !9617
  %4 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9618
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !9620
  %6 = icmp eq %struct.k_thread.132* %4, %5, !dbg !9621
  br i1 %6, label %7, label %19, !dbg !9622

7:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9623, metadata !DIExpression()) #9, !dbg !9627
  %8 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !9634, !srcloc !9635
  store i32 %8, i32* %2, align 4, !dbg !9634
  %9 = load i32, i32* %2, align 4, !dbg !9636
  %10 = icmp ne i32 %9, 0, !dbg !9637
  %11 = zext i1 %10 to i64, !dbg !9637
  %12 = select i1 %10, i32 1, i32 0, !dbg !9637
  br i1 %10, label %13, label %18, !dbg !9638

13:                                               ; preds = %7
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !9639
  %15 = or i32 %14, 268435456, !dbg !9639
  store volatile i32 %15, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !9639
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !9641
  %17 = and i32 %16, -32769, !dbg !9641
  store volatile i32 %17, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !9641
  br label %18, !dbg !9642

18:                                               ; preds = %13, %7
  br label %19, !dbg !9643

19:                                               ; preds = %18, %1
  %20 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !9644
  call void @z_thread_abort(%struct.k_thread.132* noundef %20) #10, !dbg !9645
  ret void, !dbg !9646
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcpy(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !9647 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9653, metadata !DIExpression()), !dbg !9654
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9655, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9657, metadata !DIExpression()), !dbg !9658
  %6 = load i8*, i8** %3, align 4, !dbg !9659
  store i8* %6, i8** %5, align 4, !dbg !9658
  br label %7, !dbg !9660

7:                                                ; preds = %12, %2
  %8 = load i8*, i8** %4, align 4, !dbg !9661
  %9 = load i8, i8* %8, align 1, !dbg !9662
  %10 = zext i8 %9 to i32, !dbg !9662
  %11 = icmp ne i32 %10, 0, !dbg !9663
  br i1 %11, label %12, label %20, !dbg !9660

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 4, !dbg !9664
  %14 = load i8, i8* %13, align 1, !dbg !9666
  %15 = load i8*, i8** %3, align 4, !dbg !9667
  store i8 %14, i8* %15, align 1, !dbg !9668
  %16 = load i8*, i8** %3, align 4, !dbg !9669
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !9669
  store i8* %17, i8** %3, align 4, !dbg !9669
  %18 = load i8*, i8** %4, align 4, !dbg !9670
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9670
  store i8* %19, i8** %4, align 4, !dbg !9670
  br label %7, !dbg !9660, !llvm.loop !9671

20:                                               ; preds = %7
  %21 = load i8*, i8** %3, align 4, !dbg !9673
  store i8 0, i8* %21, align 1, !dbg !9674
  %22 = load i8*, i8** %5, align 4, !dbg !9675
  ret i8* %22, !dbg !9676
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !9677 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9680, metadata !DIExpression()), !dbg !9681
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9682, metadata !DIExpression()), !dbg !9683
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9684, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9686, metadata !DIExpression()), !dbg !9687
  %8 = load i8*, i8** %4, align 4, !dbg !9688
  store i8* %8, i8** %7, align 4, !dbg !9687
  br label %9, !dbg !9689

9:                                                ; preds = %19, %3
  %10 = load i32, i32* %6, align 4, !dbg !9690
  %11 = icmp ugt i32 %10, 0, !dbg !9691
  br i1 %11, label %12, label %17, !dbg !9692

12:                                               ; preds = %9
  %13 = load i8*, i8** %5, align 4, !dbg !9693
  %14 = load i8, i8* %13, align 1, !dbg !9694
  %15 = zext i8 %14 to i32, !dbg !9694
  %16 = icmp ne i32 %15, 0, !dbg !9695
  br label %17

17:                                               ; preds = %12, %9
  %18 = phi i1 [ false, %9 ], [ %16, %12 ], !dbg !9696
  br i1 %18, label %19, label %29, !dbg !9689

19:                                               ; preds = %17
  %20 = load i8*, i8** %5, align 4, !dbg !9697
  %21 = load i8, i8* %20, align 1, !dbg !9699
  %22 = load i8*, i8** %4, align 4, !dbg !9700
  store i8 %21, i8* %22, align 1, !dbg !9701
  %23 = load i8*, i8** %5, align 4, !dbg !9702
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9702
  store i8* %24, i8** %5, align 4, !dbg !9702
  %25 = load i8*, i8** %4, align 4, !dbg !9703
  %26 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !9703
  store i8* %26, i8** %4, align 4, !dbg !9703
  %27 = load i32, i32* %6, align 4, !dbg !9704
  %28 = add i32 %27, -1, !dbg !9704
  store i32 %28, i32* %6, align 4, !dbg !9704
  br label %9, !dbg !9689, !llvm.loop !9705

29:                                               ; preds = %17
  br label %30, !dbg !9707

30:                                               ; preds = %33, %29
  %31 = load i32, i32* %6, align 4, !dbg !9708
  %32 = icmp ugt i32 %31, 0, !dbg !9709
  br i1 %32, label %33, label %39, !dbg !9707

33:                                               ; preds = %30
  %34 = load i8*, i8** %4, align 4, !dbg !9710
  store i8 0, i8* %34, align 1, !dbg !9712
  %35 = load i8*, i8** %4, align 4, !dbg !9713
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !9713
  store i8* %36, i8** %4, align 4, !dbg !9713
  %37 = load i32, i32* %6, align 4, !dbg !9714
  %38 = add i32 %37, -1, !dbg !9714
  store i32 %38, i32* %6, align 4, !dbg !9714
  br label %30, !dbg !9707, !llvm.loop !9715

39:                                               ; preds = %30
  %40 = load i8*, i8** %7, align 4, !dbg !9717
  ret i8* %40, !dbg !9718
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strchr(i8* noundef %0, i32 noundef %1) #1 !dbg !9719 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9722, metadata !DIExpression()), !dbg !9723
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9726, metadata !DIExpression()), !dbg !9727
  %6 = load i32, i32* %4, align 4, !dbg !9728
  %7 = trunc i32 %6 to i8, !dbg !9729
  store i8 %7, i8* %5, align 1, !dbg !9727
  br label %8, !dbg !9730

8:                                                ; preds = %22, %2
  %9 = load i8*, i8** %3, align 4, !dbg !9731
  %10 = load i8, i8* %9, align 1, !dbg !9732
  %11 = zext i8 %10 to i32, !dbg !9732
  %12 = load i8, i8* %5, align 1, !dbg !9733
  %13 = zext i8 %12 to i32, !dbg !9733
  %14 = icmp ne i32 %11, %13, !dbg !9734
  br i1 %14, label %15, label %20, !dbg !9735

15:                                               ; preds = %8
  %16 = load i8*, i8** %3, align 4, !dbg !9736
  %17 = load i8, i8* %16, align 1, !dbg !9737
  %18 = zext i8 %17 to i32, !dbg !9737
  %19 = icmp ne i32 %18, 0, !dbg !9738
  br label %20

20:                                               ; preds = %15, %8
  %21 = phi i1 [ false, %8 ], [ %19, %15 ], !dbg !9739
  br i1 %21, label %22, label %25, !dbg !9730

22:                                               ; preds = %20
  %23 = load i8*, i8** %3, align 4, !dbg !9740
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9740
  store i8* %24, i8** %3, align 4, !dbg !9740
  br label %8, !dbg !9730, !llvm.loop !9742

25:                                               ; preds = %20
  %26 = load i8*, i8** %3, align 4, !dbg !9744
  %27 = load i8, i8* %26, align 1, !dbg !9745
  %28 = zext i8 %27 to i32, !dbg !9745
  %29 = load i8, i8* %5, align 1, !dbg !9746
  %30 = zext i8 %29 to i32, !dbg !9746
  %31 = icmp eq i32 %28, %30, !dbg !9747
  br i1 %31, label %32, label %34, !dbg !9748

32:                                               ; preds = %25
  %33 = load i8*, i8** %3, align 4, !dbg !9749
  br label %35, !dbg !9748

34:                                               ; preds = %25
  br label %35, !dbg !9748

35:                                               ; preds = %34, %32
  %36 = phi i8* [ %33, %32 ], [ null, %34 ], !dbg !9748
  ret i8* %36, !dbg !9750
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strrchr(i8* noundef %0, i32 noundef %1) #1 !dbg !9751 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9752, metadata !DIExpression()), !dbg !9753
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9756, metadata !DIExpression()), !dbg !9757
  store i8* null, i8** %5, align 4, !dbg !9757
  br label %6, !dbg !9758

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !9759
  %8 = load i8, i8* %7, align 1, !dbg !9762
  %9 = zext i8 %8 to i32, !dbg !9762
  %10 = load i32, i32* %4, align 4, !dbg !9763
  %11 = trunc i32 %10 to i8, !dbg !9764
  %12 = zext i8 %11 to i32, !dbg !9764
  %13 = icmp eq i32 %9, %12, !dbg !9765
  br i1 %13, label %14, label %16, !dbg !9766

14:                                               ; preds = %6
  %15 = load i8*, i8** %3, align 4, !dbg !9767
  store i8* %15, i8** %5, align 4, !dbg !9769
  br label %16, !dbg !9770

16:                                               ; preds = %14, %6
  br label %17, !dbg !9771

17:                                               ; preds = %16
  %18 = load i8*, i8** %3, align 4, !dbg !9772
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9772
  store i8* %19, i8** %3, align 4, !dbg !9772
  %20 = load i8, i8* %18, align 1, !dbg !9773
  %21 = icmp ne i8 %20, 0, !dbg !9771
  br i1 %21, label %6, label %22, !dbg !9771, !llvm.loop !9774

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 4, !dbg !9776
  ret i8* %23, !dbg !9777
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strlen(i8* noundef %0) #1 !dbg !9778 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9783, metadata !DIExpression()), !dbg !9784
  store i32 0, i32* %3, align 4, !dbg !9784
  br label %4, !dbg !9785

4:                                                ; preds = %9, %1
  %5 = load i8*, i8** %2, align 4, !dbg !9786
  %6 = load i8, i8* %5, align 1, !dbg !9787
  %7 = zext i8 %6 to i32, !dbg !9787
  %8 = icmp ne i32 %7, 0, !dbg !9788
  br i1 %8, label %9, label %14, !dbg !9785

9:                                                ; preds = %4
  %10 = load i8*, i8** %2, align 4, !dbg !9789
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9789
  store i8* %11, i8** %2, align 4, !dbg !9789
  %12 = load i32, i32* %3, align 4, !dbg !9791
  %13 = add i32 %12, 1, !dbg !9791
  store i32 %13, i32* %3, align 4, !dbg !9791
  br label %4, !dbg !9785, !llvm.loop !9792

14:                                               ; preds = %4
  %15 = load i32, i32* %3, align 4, !dbg !9794
  ret i32 %15, !dbg !9795
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strnlen(i8* noundef %0, i32 noundef %1) #1 !dbg !9796 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9799, metadata !DIExpression()), !dbg !9800
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9801, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9803, metadata !DIExpression()), !dbg !9804
  store i32 0, i32* %5, align 4, !dbg !9804
  br label %6, !dbg !9805

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !9806
  %8 = load i8, i8* %7, align 1, !dbg !9807
  %9 = zext i8 %8 to i32, !dbg !9807
  %10 = icmp ne i32 %9, 0, !dbg !9808
  br i1 %10, label %11, label %15, !dbg !9809

11:                                               ; preds = %6
  %12 = load i32, i32* %5, align 4, !dbg !9810
  %13 = load i32, i32* %4, align 4, !dbg !9811
  %14 = icmp ult i32 %12, %13, !dbg !9812
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi i1 [ false, %6 ], [ %14, %11 ], !dbg !9813
  br i1 %16, label %17, label %22, !dbg !9805

17:                                               ; preds = %15
  %18 = load i8*, i8** %3, align 4, !dbg !9814
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9814
  store i8* %19, i8** %3, align 4, !dbg !9814
  %20 = load i32, i32* %5, align 4, !dbg !9816
  %21 = add i32 %20, 1, !dbg !9816
  store i32 %21, i32* %5, align 4, !dbg !9816
  br label %6, !dbg !9805, !llvm.loop !9817

22:                                               ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !9819
  ret i32 %23, !dbg !9820
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strcmp(i8* noundef %0, i8* noundef %1) #1 !dbg !9821 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9824, metadata !DIExpression()), !dbg !9825
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9826, metadata !DIExpression()), !dbg !9827
  br label %5, !dbg !9828

5:                                                ; preds = %20, %2
  %6 = load i8*, i8** %3, align 4, !dbg !9829
  %7 = load i8, i8* %6, align 1, !dbg !9830
  %8 = zext i8 %7 to i32, !dbg !9830
  %9 = load i8*, i8** %4, align 4, !dbg !9831
  %10 = load i8, i8* %9, align 1, !dbg !9832
  %11 = zext i8 %10 to i32, !dbg !9832
  %12 = icmp eq i32 %8, %11, !dbg !9833
  br i1 %12, label %13, label %18, !dbg !9834

13:                                               ; preds = %5
  %14 = load i8*, i8** %3, align 4, !dbg !9835
  %15 = load i8, i8* %14, align 1, !dbg !9836
  %16 = zext i8 %15 to i32, !dbg !9836
  %17 = icmp ne i32 %16, 0, !dbg !9837
  br label %18

18:                                               ; preds = %13, %5
  %19 = phi i1 [ false, %5 ], [ %17, %13 ], !dbg !9838
  br i1 %19, label %20, label %25, !dbg !9828

20:                                               ; preds = %18
  %21 = load i8*, i8** %3, align 4, !dbg !9839
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !9839
  store i8* %22, i8** %3, align 4, !dbg !9839
  %23 = load i8*, i8** %4, align 4, !dbg !9841
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9841
  store i8* %24, i8** %4, align 4, !dbg !9841
  br label %5, !dbg !9828, !llvm.loop !9842

25:                                               ; preds = %18
  %26 = load i8*, i8** %3, align 4, !dbg !9844
  %27 = load i8, i8* %26, align 1, !dbg !9845
  %28 = zext i8 %27 to i32, !dbg !9845
  %29 = load i8*, i8** %4, align 4, !dbg !9846
  %30 = load i8, i8* %29, align 1, !dbg !9847
  %31 = zext i8 %30 to i32, !dbg !9847
  %32 = sub nsw i32 %28, %31, !dbg !9848
  ret i32 %32, !dbg !9849
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strncmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !9850 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9853, metadata !DIExpression()), !dbg !9854
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9855, metadata !DIExpression()), !dbg !9856
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9857, metadata !DIExpression()), !dbg !9858
  br label %7, !dbg !9859

7:                                                ; preds = %25, %3
  %8 = load i32, i32* %6, align 4, !dbg !9860
  %9 = icmp ugt i32 %8, 0, !dbg !9861
  br i1 %9, label %10, label %23, !dbg !9862

10:                                               ; preds = %7
  %11 = load i8*, i8** %4, align 4, !dbg !9863
  %12 = load i8, i8* %11, align 1, !dbg !9864
  %13 = zext i8 %12 to i32, !dbg !9864
  %14 = load i8*, i8** %5, align 4, !dbg !9865
  %15 = load i8, i8* %14, align 1, !dbg !9866
  %16 = zext i8 %15 to i32, !dbg !9866
  %17 = icmp eq i32 %13, %16, !dbg !9867
  br i1 %17, label %18, label %23, !dbg !9868

18:                                               ; preds = %10
  %19 = load i8*, i8** %4, align 4, !dbg !9869
  %20 = load i8, i8* %19, align 1, !dbg !9870
  %21 = zext i8 %20 to i32, !dbg !9870
  %22 = icmp ne i32 %21, 0, !dbg !9871
  br label %23

23:                                               ; preds = %18, %10, %7
  %24 = phi i1 [ false, %10 ], [ false, %7 ], [ %22, %18 ], !dbg !9872
  br i1 %24, label %25, label %32, !dbg !9859

25:                                               ; preds = %23
  %26 = load i8*, i8** %4, align 4, !dbg !9873
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !9873
  store i8* %27, i8** %4, align 4, !dbg !9873
  %28 = load i8*, i8** %5, align 4, !dbg !9875
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !9875
  store i8* %29, i8** %5, align 4, !dbg !9875
  %30 = load i32, i32* %6, align 4, !dbg !9876
  %31 = add i32 %30, -1, !dbg !9876
  store i32 %31, i32* %6, align 4, !dbg !9876
  br label %7, !dbg !9859, !llvm.loop !9877

32:                                               ; preds = %23
  %33 = load i32, i32* %6, align 4, !dbg !9879
  %34 = icmp eq i32 %33, 0, !dbg !9880
  br i1 %34, label %35, label %36, !dbg !9881

35:                                               ; preds = %32
  br label %44, !dbg !9881

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 4, !dbg !9882
  %38 = load i8, i8* %37, align 1, !dbg !9883
  %39 = zext i8 %38 to i32, !dbg !9883
  %40 = load i8*, i8** %5, align 4, !dbg !9884
  %41 = load i8, i8* %40, align 1, !dbg !9885
  %42 = zext i8 %41 to i32, !dbg !9885
  %43 = sub nsw i32 %39, %42, !dbg !9886
  br label %44, !dbg !9881

44:                                               ; preds = %36, %35
  %45 = phi i32 [ 0, %35 ], [ %43, %36 ], !dbg !9881
  ret i32 %45, !dbg !9887
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef %1, i8** noundef %2) #1 !dbg !9888 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8**, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9892, metadata !DIExpression()), !dbg !9893
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9894, metadata !DIExpression()), !dbg !9895
  store i8** %2, i8*** %7, align 4
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.declare(metadata i8** %9, metadata !9900, metadata !DIExpression()), !dbg !9901
  %10 = load i8*, i8** %5, align 4, !dbg !9902
  %11 = icmp ne i8* %10, null, !dbg !9902
  br i1 %11, label %12, label %14, !dbg !9902

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 4, !dbg !9903
  br label %17, !dbg !9902

14:                                               ; preds = %3
  %15 = load i8**, i8*** %7, align 4, !dbg !9904
  %16 = load i8*, i8** %15, align 4, !dbg !9905
  br label %17, !dbg !9902

17:                                               ; preds = %14, %12
  %18 = phi i8* [ %13, %12 ], [ %16, %14 ], !dbg !9902
  store i8* %18, i8** %8, align 4, !dbg !9906
  br label %19, !dbg !9907

19:                                               ; preds = %33, %17
  %20 = load i8*, i8** %8, align 4, !dbg !9908
  %21 = load i8, i8* %20, align 1, !dbg !9909
  %22 = zext i8 %21 to i32, !dbg !9909
  %23 = icmp ne i32 %22, 0, !dbg !9909
  br i1 %23, label %24, label %31, !dbg !9910

24:                                               ; preds = %19
  %25 = load i8*, i8** %6, align 4, !dbg !9911
  %26 = load i8*, i8** %8, align 4, !dbg !9912
  %27 = load i8, i8* %26, align 1, !dbg !9913
  %28 = zext i8 %27 to i32, !dbg !9913
  %29 = call i8* @strchr(i8* noundef %25, i32 noundef %28) #10, !dbg !9914
  %30 = icmp ne i8* %29, null, !dbg !9910
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i1 [ false, %19 ], [ %30, %24 ], !dbg !9915
  br i1 %32, label %33, label %36, !dbg !9907

33:                                               ; preds = %31
  %34 = load i8*, i8** %8, align 4, !dbg !9916
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !9916
  store i8* %35, i8** %8, align 4, !dbg !9916
  br label %19, !dbg !9907, !llvm.loop !9918

36:                                               ; preds = %31
  %37 = load i8*, i8** %8, align 4, !dbg !9920
  %38 = load i8, i8* %37, align 1, !dbg !9922
  %39 = zext i8 %38 to i32, !dbg !9922
  %40 = icmp eq i32 %39, 0, !dbg !9923
  br i1 %40, label %41, label %44, !dbg !9924

41:                                               ; preds = %36
  %42 = load i8*, i8** %8, align 4, !dbg !9925
  %43 = load i8**, i8*** %7, align 4, !dbg !9927
  store i8* %42, i8** %43, align 4, !dbg !9928
  store i8* null, i8** %4, align 4, !dbg !9929
  br label %79, !dbg !9929

44:                                               ; preds = %36
  %45 = load i8*, i8** %8, align 4, !dbg !9930
  store i8* %45, i8** %9, align 4, !dbg !9931
  br label %46, !dbg !9932

46:                                               ; preds = %61, %44
  %47 = load i8*, i8** %9, align 4, !dbg !9933
  %48 = load i8, i8* %47, align 1, !dbg !9934
  %49 = zext i8 %48 to i32, !dbg !9934
  %50 = icmp ne i32 %49, 0, !dbg !9934
  br i1 %50, label %51, label %59, !dbg !9935

51:                                               ; preds = %46
  %52 = load i8*, i8** %6, align 4, !dbg !9936
  %53 = load i8*, i8** %9, align 4, !dbg !9937
  %54 = load i8, i8* %53, align 1, !dbg !9938
  %55 = zext i8 %54 to i32, !dbg !9938
  %56 = call i8* @strchr(i8* noundef %52, i32 noundef %55) #10, !dbg !9939
  %57 = icmp ne i8* %56, null, !dbg !9940
  %58 = xor i1 %57, true, !dbg !9940
  br label %59

59:                                               ; preds = %51, %46
  %60 = phi i1 [ false, %46 ], [ %58, %51 ], !dbg !9915
  br i1 %60, label %61, label %64, !dbg !9932

61:                                               ; preds = %59
  %62 = load i8*, i8** %9, align 4, !dbg !9941
  %63 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !9941
  store i8* %63, i8** %9, align 4, !dbg !9941
  br label %46, !dbg !9932, !llvm.loop !9943

64:                                               ; preds = %59
  %65 = load i8*, i8** %9, align 4, !dbg !9945
  %66 = load i8, i8* %65, align 1, !dbg !9947
  %67 = zext i8 %66 to i32, !dbg !9947
  %68 = icmp ne i32 %67, 0, !dbg !9948
  br i1 %68, label %69, label %74, !dbg !9949

69:                                               ; preds = %64
  %70 = load i8*, i8** %9, align 4, !dbg !9950
  store i8 0, i8* %70, align 1, !dbg !9952
  %71 = load i8*, i8** %9, align 4, !dbg !9953
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !9954
  %73 = load i8**, i8*** %7, align 4, !dbg !9955
  store i8* %72, i8** %73, align 4, !dbg !9956
  br label %77, !dbg !9957

74:                                               ; preds = %64
  %75 = load i8*, i8** %9, align 4, !dbg !9958
  %76 = load i8**, i8*** %7, align 4, !dbg !9960
  store i8* %75, i8** %76, align 4, !dbg !9961
  br label %77

77:                                               ; preds = %74, %69
  %78 = load i8*, i8** %8, align 4, !dbg !9962
  store i8* %78, i8** %4, align 4, !dbg !9963
  br label %79, !dbg !9963

79:                                               ; preds = %77, %41
  %80 = load i8*, i8** %4, align 4, !dbg !9964
  ret i8* %80, !dbg !9964
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcat(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !9965 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9966, metadata !DIExpression()), !dbg !9967
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9968, metadata !DIExpression()), !dbg !9969
  %5 = load i8*, i8** %3, align 4, !dbg !9970
  %6 = load i8*, i8** %3, align 4, !dbg !9971
  %7 = call i32 @strlen(i8* noundef %6) #10, !dbg !9972
  %8 = getelementptr inbounds i8, i8* %5, i32 %7, !dbg !9973
  %9 = load i8*, i8** %4, align 4, !dbg !9974
  %10 = call i8* @strcpy(i8* noundef %8, i8* noundef %9) #10, !dbg !9975
  %11 = load i8*, i8** %3, align 4, !dbg !9976
  ret i8* %11, !dbg !9977
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncat(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !9978 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9979, metadata !DIExpression()), !dbg !9980
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9981, metadata !DIExpression()), !dbg !9982
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9983, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9985, metadata !DIExpression()), !dbg !9986
  %9 = load i8*, i8** %4, align 4, !dbg !9987
  store i8* %9, i8** %7, align 4, !dbg !9986
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9988, metadata !DIExpression()), !dbg !9989
  %10 = load i8*, i8** %4, align 4, !dbg !9990
  %11 = call i32 @strlen(i8* noundef %10) #10, !dbg !9991
  store i32 %11, i32* %8, align 4, !dbg !9989
  %12 = load i32, i32* %8, align 4, !dbg !9992
  %13 = load i8*, i8** %4, align 4, !dbg !9993
  %14 = getelementptr inbounds i8, i8* %13, i32 %12, !dbg !9993
  store i8* %14, i8** %4, align 4, !dbg !9993
  br label %15, !dbg !9994

15:                                               ; preds = %26, %3
  %16 = load i32, i32* %6, align 4, !dbg !9995
  %17 = add i32 %16, -1, !dbg !9995
  store i32 %17, i32* %6, align 4, !dbg !9995
  %18 = icmp ugt i32 %16, 0, !dbg !9996
  br i1 %18, label %19, label %24, !dbg !9997

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 4, !dbg !9998
  %21 = load i8, i8* %20, align 1, !dbg !9999
  %22 = zext i8 %21 to i32, !dbg !9999
  %23 = icmp ne i32 %22, 0, !dbg !10000
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i1 [ false, %15 ], [ %23, %19 ], !dbg !10001
  br i1 %25, label %26, label %32, !dbg !9994

26:                                               ; preds = %24
  %27 = load i8*, i8** %5, align 4, !dbg !10002
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !10002
  store i8* %28, i8** %5, align 4, !dbg !10002
  %29 = load i8, i8* %27, align 1, !dbg !10004
  %30 = load i8*, i8** %4, align 4, !dbg !10005
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !10005
  store i8* %31, i8** %4, align 4, !dbg !10005
  store i8 %29, i8* %30, align 1, !dbg !10006
  br label %15, !dbg !9994, !llvm.loop !10007

32:                                               ; preds = %24
  %33 = load i8*, i8** %4, align 4, !dbg !10009
  store i8 0, i8* %33, align 1, !dbg !10010
  %34 = load i8*, i8** %7, align 4, !dbg !10011
  ret i8* %34, !dbg !10012
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @memcmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !10013 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10016, metadata !DIExpression()), !dbg !10017
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10018, metadata !DIExpression()), !dbg !10019
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10020, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10022, metadata !DIExpression()), !dbg !10023
  %10 = load i8*, i8** %5, align 4, !dbg !10024
  store i8* %10, i8** %8, align 4, !dbg !10023
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10025, metadata !DIExpression()), !dbg !10026
  %11 = load i8*, i8** %6, align 4, !dbg !10027
  store i8* %11, i8** %9, align 4, !dbg !10026
  %12 = load i32, i32* %7, align 4, !dbg !10028
  %13 = icmp ne i32 %12, 0, !dbg !10028
  br i1 %13, label %15, label %14, !dbg !10030

14:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !10031
  br label %43, !dbg !10031

15:                                               ; preds = %3
  br label %16, !dbg !10033

16:                                               ; preds = %30, %15
  %17 = load i32, i32* %7, align 4, !dbg !10034
  %18 = add i32 %17, -1, !dbg !10034
  store i32 %18, i32* %7, align 4, !dbg !10034
  %19 = icmp ugt i32 %18, 0, !dbg !10035
  br i1 %19, label %20, label %28, !dbg !10036

20:                                               ; preds = %16
  %21 = load i8*, i8** %8, align 4, !dbg !10037
  %22 = load i8, i8* %21, align 1, !dbg !10038
  %23 = zext i8 %22 to i32, !dbg !10038
  %24 = load i8*, i8** %9, align 4, !dbg !10039
  %25 = load i8, i8* %24, align 1, !dbg !10040
  %26 = zext i8 %25 to i32, !dbg !10040
  %27 = icmp eq i32 %23, %26, !dbg !10041
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i1 [ false, %16 ], [ %27, %20 ], !dbg !10042
  br i1 %29, label %30, label %35, !dbg !10033

30:                                               ; preds = %28
  %31 = load i8*, i8** %8, align 4, !dbg !10043
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !10043
  store i8* %32, i8** %8, align 4, !dbg !10043
  %33 = load i8*, i8** %9, align 4, !dbg !10045
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !10045
  store i8* %34, i8** %9, align 4, !dbg !10045
  br label %16, !dbg !10033, !llvm.loop !10046

35:                                               ; preds = %28
  %36 = load i8*, i8** %8, align 4, !dbg !10048
  %37 = load i8, i8* %36, align 1, !dbg !10049
  %38 = zext i8 %37 to i32, !dbg !10049
  %39 = load i8*, i8** %9, align 4, !dbg !10050
  %40 = load i8, i8* %39, align 1, !dbg !10051
  %41 = zext i8 %40 to i32, !dbg !10051
  %42 = sub nsw i32 %38, %41, !dbg !10052
  store i32 %42, i32* %4, align 4, !dbg !10053
  br label %43, !dbg !10053

43:                                               ; preds = %35, %14
  %44 = load i32, i32* %4, align 4, !dbg !10054
  ret i32 %44, !dbg !10054
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memmove(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !10055 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10058, metadata !DIExpression()), !dbg !10059
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10060, metadata !DIExpression()), !dbg !10061
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10062, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10064, metadata !DIExpression()), !dbg !10065
  %9 = load i8*, i8** %4, align 4, !dbg !10066
  store i8* %9, i8** %7, align 4, !dbg !10065
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10067, metadata !DIExpression()), !dbg !10068
  %10 = load i8*, i8** %5, align 4, !dbg !10069
  store i8* %10, i8** %8, align 4, !dbg !10068
  %11 = load i8*, i8** %7, align 4, !dbg !10070
  %12 = load i8*, i8** %8, align 4, !dbg !10072
  %13 = ptrtoint i8* %11 to i32, !dbg !10073
  %14 = ptrtoint i8* %12 to i32, !dbg !10073
  %15 = sub i32 %13, %14, !dbg !10073
  %16 = load i32, i32* %6, align 4, !dbg !10074
  %17 = icmp ult i32 %15, %16, !dbg !10075
  br i1 %17, label %18, label %33, !dbg !10076

18:                                               ; preds = %3
  br label %19, !dbg !10077

19:                                               ; preds = %22, %18
  %20 = load i32, i32* %6, align 4, !dbg !10079
  %21 = icmp ugt i32 %20, 0, !dbg !10080
  br i1 %21, label %22, label %32, !dbg !10077

22:                                               ; preds = %19
  %23 = load i32, i32* %6, align 4, !dbg !10081
  %24 = add i32 %23, -1, !dbg !10081
  store i32 %24, i32* %6, align 4, !dbg !10081
  %25 = load i8*, i8** %8, align 4, !dbg !10083
  %26 = load i32, i32* %6, align 4, !dbg !10084
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !10083
  %28 = load i8, i8* %27, align 1, !dbg !10083
  %29 = load i8*, i8** %7, align 4, !dbg !10085
  %30 = load i32, i32* %6, align 4, !dbg !10086
  %31 = getelementptr inbounds i8, i8* %29, i32 %30, !dbg !10085
  store i8 %28, i8* %31, align 1, !dbg !10087
  br label %19, !dbg !10077, !llvm.loop !10088

32:                                               ; preds = %19
  br label %48, !dbg !10090

33:                                               ; preds = %3
  br label %34, !dbg !10091

34:                                               ; preds = %37, %33
  %35 = load i32, i32* %6, align 4, !dbg !10093
  %36 = icmp ugt i32 %35, 0, !dbg !10094
  br i1 %36, label %37, label %47, !dbg !10091

37:                                               ; preds = %34
  %38 = load i8*, i8** %8, align 4, !dbg !10095
  %39 = load i8, i8* %38, align 1, !dbg !10097
  %40 = load i8*, i8** %7, align 4, !dbg !10098
  store i8 %39, i8* %40, align 1, !dbg !10099
  %41 = load i8*, i8** %7, align 4, !dbg !10100
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !10100
  store i8* %42, i8** %7, align 4, !dbg !10100
  %43 = load i8*, i8** %8, align 4, !dbg !10101
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !10101
  store i8* %44, i8** %8, align 4, !dbg !10101
  %45 = load i32, i32* %6, align 4, !dbg !10102
  %46 = add i32 %45, -1, !dbg !10102
  store i32 %46, i32* %6, align 4, !dbg !10102
  br label %34, !dbg !10091, !llvm.loop !10103

47:                                               ; preds = %34
  br label %48

48:                                               ; preds = %47, %32
  %49 = load i8*, i8** %4, align 4, !dbg !10105
  ret i8* %49, !dbg !10106
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memcpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !10107 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10112, metadata !DIExpression()), !dbg !10113
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10114, metadata !DIExpression()), !dbg !10115
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10116, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10118, metadata !DIExpression()), !dbg !10119
  %13 = load i8*, i8** %5, align 4, !dbg !10120
  store i8* %13, i8** %8, align 4, !dbg !10119
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10121, metadata !DIExpression()), !dbg !10122
  %14 = load i8*, i8** %6, align 4, !dbg !10123
  store i8* %14, i8** %9, align 4, !dbg !10122
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10124, metadata !DIExpression()), !dbg !10126
  store i32 3, i32* %10, align 4, !dbg !10126
  %15 = load i8*, i8** %5, align 4, !dbg !10127
  %16 = ptrtoint i8* %15 to i32, !dbg !10129
  %17 = load i8*, i8** %9, align 4, !dbg !10130
  %18 = ptrtoint i8* %17 to i32, !dbg !10131
  %19 = xor i32 %16, %18, !dbg !10132
  %20 = and i32 %19, 3, !dbg !10133
  %21 = icmp eq i32 %20, 0, !dbg !10134
  br i1 %21, label %22, label %62, !dbg !10135

22:                                               ; preds = %3
  br label %23, !dbg !10136

23:                                               ; preds = %33, %22
  %24 = load i8*, i8** %8, align 4, !dbg !10138
  %25 = ptrtoint i8* %24 to i32, !dbg !10139
  %26 = and i32 %25, 3, !dbg !10140
  %27 = icmp ne i32 %26, 0, !dbg !10136
  br i1 %27, label %28, label %41, !dbg !10136

28:                                               ; preds = %23
  %29 = load i32, i32* %7, align 4, !dbg !10141
  %30 = icmp eq i32 %29, 0, !dbg !10144
  br i1 %30, label %31, label %33, !dbg !10145

31:                                               ; preds = %28
  %32 = load i8*, i8** %5, align 4, !dbg !10146
  store i8* %32, i8** %4, align 4, !dbg !10148
  br label %76, !dbg !10148

33:                                               ; preds = %28
  %34 = load i8*, i8** %9, align 4, !dbg !10149
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !10149
  store i8* %35, i8** %9, align 4, !dbg !10149
  %36 = load i8, i8* %34, align 1, !dbg !10150
  %37 = load i8*, i8** %8, align 4, !dbg !10151
  %38 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !10151
  store i8* %38, i8** %8, align 4, !dbg !10151
  store i8 %36, i8* %37, align 1, !dbg !10152
  %39 = load i32, i32* %7, align 4, !dbg !10153
  %40 = add i32 %39, -1, !dbg !10153
  store i32 %40, i32* %7, align 4, !dbg !10153
  br label %23, !dbg !10136, !llvm.loop !10154

41:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata i32** %11, metadata !10156, metadata !DIExpression()), !dbg !10157
  %42 = load i8*, i8** %8, align 4, !dbg !10158
  %43 = bitcast i8* %42 to i32*, !dbg !10159
  store i32* %43, i32** %11, align 4, !dbg !10157
  call void @llvm.dbg.declare(metadata i32** %12, metadata !10160, metadata !DIExpression()), !dbg !10161
  %44 = load i8*, i8** %9, align 4, !dbg !10162
  %45 = bitcast i8* %44 to i32*, !dbg !10163
  store i32* %45, i32** %12, align 4, !dbg !10161
  br label %46, !dbg !10164

46:                                               ; preds = %49, %41
  %47 = load i32, i32* %7, align 4, !dbg !10165
  %48 = icmp uge i32 %47, 4, !dbg !10166
  br i1 %48, label %49, label %57, !dbg !10164

49:                                               ; preds = %46
  %50 = load i32*, i32** %12, align 4, !dbg !10167
  %51 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !10167
  store i32* %51, i32** %12, align 4, !dbg !10167
  %52 = load i32, i32* %50, align 4, !dbg !10169
  %53 = load i32*, i32** %11, align 4, !dbg !10170
  %54 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !10170
  store i32* %54, i32** %11, align 4, !dbg !10170
  store i32 %52, i32* %53, align 4, !dbg !10171
  %55 = load i32, i32* %7, align 4, !dbg !10172
  %56 = sub i32 %55, 4, !dbg !10172
  store i32 %56, i32* %7, align 4, !dbg !10172
  br label %46, !dbg !10164, !llvm.loop !10173

57:                                               ; preds = %46
  %58 = load i32*, i32** %11, align 4, !dbg !10175
  %59 = bitcast i32* %58 to i8*, !dbg !10176
  store i8* %59, i8** %8, align 4, !dbg !10177
  %60 = load i32*, i32** %12, align 4, !dbg !10178
  %61 = bitcast i32* %60 to i8*, !dbg !10179
  store i8* %61, i8** %9, align 4, !dbg !10180
  br label %62, !dbg !10181

62:                                               ; preds = %57, %3
  br label %63, !dbg !10182

63:                                               ; preds = %66, %62
  %64 = load i32, i32* %7, align 4, !dbg !10183
  %65 = icmp ugt i32 %64, 0, !dbg !10184
  br i1 %65, label %66, label %74, !dbg !10182

66:                                               ; preds = %63
  %67 = load i8*, i8** %9, align 4, !dbg !10185
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !10185
  store i8* %68, i8** %9, align 4, !dbg !10185
  %69 = load i8, i8* %67, align 1, !dbg !10187
  %70 = load i8*, i8** %8, align 4, !dbg !10188
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !10188
  store i8* %71, i8** %8, align 4, !dbg !10188
  store i8 %69, i8* %70, align 1, !dbg !10189
  %72 = load i32, i32* %7, align 4, !dbg !10190
  %73 = add i32 %72, -1, !dbg !10190
  store i32 %73, i32* %7, align 4, !dbg !10190
  br label %63, !dbg !10182, !llvm.loop !10191

74:                                               ; preds = %63
  %75 = load i8*, i8** %5, align 4, !dbg !10193
  store i8* %75, i8** %4, align 4, !dbg !10194
  br label %76, !dbg !10194

76:                                               ; preds = %74, %31
  %77 = load i8*, i8** %4, align 4, !dbg !10195
  ret i8* %77, !dbg !10195
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !10196 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32*, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10199, metadata !DIExpression()), !dbg !10200
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10201, metadata !DIExpression()), !dbg !10202
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10203, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10205, metadata !DIExpression()), !dbg !10206
  %12 = load i8*, i8** %5, align 4, !dbg !10207
  store i8* %12, i8** %8, align 4, !dbg !10206
  call void @llvm.dbg.declare(metadata i8* %9, metadata !10208, metadata !DIExpression()), !dbg !10209
  %13 = load i32, i32* %6, align 4, !dbg !10210
  %14 = trunc i32 %13 to i8, !dbg !10211
  store i8 %14, i8* %9, align 1, !dbg !10209
  br label %15, !dbg !10212

15:                                               ; preds = %25, %3
  %16 = load i8*, i8** %8, align 4, !dbg !10213
  %17 = ptrtoint i8* %16 to i32, !dbg !10214
  %18 = and i32 %17, 3, !dbg !10215
  %19 = icmp ne i32 %18, 0, !dbg !10212
  br i1 %19, label %20, label %31, !dbg !10212

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 4, !dbg !10216
  %22 = icmp eq i32 %21, 0, !dbg !10219
  br i1 %22, label %23, label %25, !dbg !10220

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 4, !dbg !10221
  store i8* %24, i8** %4, align 4, !dbg !10223
  br label %67, !dbg !10223

25:                                               ; preds = %20
  %26 = load i8, i8* %9, align 1, !dbg !10224
  %27 = load i8*, i8** %8, align 4, !dbg !10225
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !10225
  store i8* %28, i8** %8, align 4, !dbg !10225
  store i8 %26, i8* %27, align 1, !dbg !10226
  %29 = load i32, i32* %7, align 4, !dbg !10227
  %30 = add i32 %29, -1, !dbg !10227
  store i32 %30, i32* %7, align 4, !dbg !10227
  br label %15, !dbg !10212, !llvm.loop !10228

31:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32** %10, metadata !10230, metadata !DIExpression()), !dbg !10231
  %32 = load i8*, i8** %8, align 4, !dbg !10232
  %33 = bitcast i8* %32 to i32*, !dbg !10233
  store i32* %33, i32** %10, align 4, !dbg !10231
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10234, metadata !DIExpression()), !dbg !10235
  %34 = load i8, i8* %9, align 1, !dbg !10236
  %35 = zext i8 %34 to i32, !dbg !10237
  store i32 %35, i32* %11, align 4, !dbg !10235
  %36 = load i32, i32* %11, align 4, !dbg !10238
  %37 = shl i32 %36, 8, !dbg !10239
  %38 = load i32, i32* %11, align 4, !dbg !10240
  %39 = or i32 %38, %37, !dbg !10240
  store i32 %39, i32* %11, align 4, !dbg !10240
  %40 = load i32, i32* %11, align 4, !dbg !10241
  %41 = shl i32 %40, 16, !dbg !10242
  %42 = load i32, i32* %11, align 4, !dbg !10243
  %43 = or i32 %42, %41, !dbg !10243
  store i32 %43, i32* %11, align 4, !dbg !10243
  br label %44, !dbg !10244

44:                                               ; preds = %47, %31
  %45 = load i32, i32* %7, align 4, !dbg !10245
  %46 = icmp uge i32 %45, 4, !dbg !10246
  br i1 %46, label %47, label %53, !dbg !10244

47:                                               ; preds = %44
  %48 = load i32, i32* %11, align 4, !dbg !10247
  %49 = load i32*, i32** %10, align 4, !dbg !10249
  %50 = getelementptr inbounds i32, i32* %49, i32 1, !dbg !10249
  store i32* %50, i32** %10, align 4, !dbg !10249
  store i32 %48, i32* %49, align 4, !dbg !10250
  %51 = load i32, i32* %7, align 4, !dbg !10251
  %52 = sub i32 %51, 4, !dbg !10251
  store i32 %52, i32* %7, align 4, !dbg !10251
  br label %44, !dbg !10244, !llvm.loop !10252

53:                                               ; preds = %44
  %54 = load i32*, i32** %10, align 4, !dbg !10254
  %55 = bitcast i32* %54 to i8*, !dbg !10255
  store i8* %55, i8** %8, align 4, !dbg !10256
  br label %56, !dbg !10257

56:                                               ; preds = %59, %53
  %57 = load i32, i32* %7, align 4, !dbg !10258
  %58 = icmp ugt i32 %57, 0, !dbg !10259
  br i1 %58, label %59, label %65, !dbg !10257

59:                                               ; preds = %56
  %60 = load i8, i8* %9, align 1, !dbg !10260
  %61 = load i8*, i8** %8, align 4, !dbg !10262
  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !10262
  store i8* %62, i8** %8, align 4, !dbg !10262
  store i8 %60, i8* %61, align 1, !dbg !10263
  %63 = load i32, i32* %7, align 4, !dbg !10264
  %64 = add i32 %63, -1, !dbg !10264
  store i32 %64, i32* %7, align 4, !dbg !10264
  br label %56, !dbg !10257, !llvm.loop !10265

65:                                               ; preds = %56
  %66 = load i8*, i8** %5, align 4, !dbg !10267
  store i8* %66, i8** %4, align 4, !dbg !10268
  br label %67, !dbg !10268

67:                                               ; preds = %65, %23
  %68 = load i8*, i8** %4, align 4, !dbg !10269
  ret i8* %68, !dbg !10269
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memchr(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !10270 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10273, metadata !DIExpression()), !dbg !10274
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10275, metadata !DIExpression()), !dbg !10276
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10277, metadata !DIExpression()), !dbg !10278
  %9 = load i32, i32* %7, align 4, !dbg !10279
  %10 = icmp ne i32 %9, 0, !dbg !10281
  br i1 %10, label %11, label %31, !dbg !10282

11:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10283, metadata !DIExpression()), !dbg !10285
  %12 = load i8*, i8** %5, align 4, !dbg !10286
  store i8* %12, i8** %8, align 4, !dbg !10285
  br label %13, !dbg !10287

13:                                               ; preds = %26, %11
  %14 = load i8*, i8** %8, align 4, !dbg !10288
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !10288
  store i8* %15, i8** %8, align 4, !dbg !10288
  %16 = load i8, i8* %14, align 1, !dbg !10291
  %17 = zext i8 %16 to i32, !dbg !10291
  %18 = load i32, i32* %6, align 4, !dbg !10292
  %19 = trunc i32 %18 to i8, !dbg !10293
  %20 = zext i8 %19 to i32, !dbg !10293
  %21 = icmp eq i32 %17, %20, !dbg !10294
  br i1 %21, label %22, label %25, !dbg !10295

22:                                               ; preds = %13
  %23 = load i8*, i8** %8, align 4, !dbg !10296
  %24 = getelementptr inbounds i8, i8* %23, i32 -1, !dbg !10298
  store i8* %24, i8** %4, align 4, !dbg !10299
  br label %32, !dbg !10299

25:                                               ; preds = %13
  br label %26, !dbg !10300

26:                                               ; preds = %25
  %27 = load i32, i32* %7, align 4, !dbg !10301
  %28 = add i32 %27, -1, !dbg !10301
  store i32 %28, i32* %7, align 4, !dbg !10301
  %29 = icmp ne i32 %28, 0, !dbg !10302
  br i1 %29, label %13, label %30, !dbg !10300, !llvm.loop !10303

30:                                               ; preds = %26
  br label %31, !dbg !10305

31:                                               ; preds = %30, %3
  store i8* null, i8** %4, align 4, !dbg !10306
  br label %32, !dbg !10306

32:                                               ; preds = %31, %22
  %33 = load i8*, i8** %4, align 4, !dbg !10307
  ret i8* %33, !dbg !10307
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) #1 !dbg !10308 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !10309, metadata !DIExpression()), !dbg !10310
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !10311
  store i32 (i32)* %3, i32 (i32)** @_stdout_hook, align 4, !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: noinline nounwind optnone
define internal i32 @_stdout_hook_default(i32 noundef %0) #1 !dbg !10314 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10315, metadata !DIExpression()), !dbg !10316
  %3 = load i32, i32* %2, align 4, !dbg !10317
  ret i32 -1, !dbg !10318
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !10319 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10322, metadata !DIExpression()), !dbg !10323
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10324, metadata !DIExpression()), !dbg !10325
  %5 = load i32*, i32** %4, align 4, !dbg !10326
  %6 = icmp eq i32* %5, inttoptr (i32 2 to i32*), !dbg !10327
  br i1 %6, label %10, label %7, !dbg !10328

7:                                                ; preds = %2
  %8 = load i32*, i32** %4, align 4, !dbg !10329
  %9 = icmp eq i32* %8, inttoptr (i32 3 to i32*), !dbg !10330
  br i1 %9, label %10, label %14, !dbg !10331

10:                                               ; preds = %7, %2
  %11 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10332
  %12 = load i32, i32* %3, align 4, !dbg !10333
  %13 = call i32 %11(i32 noundef %12) #10, !dbg !10332
  br label %15, !dbg !10331

14:                                               ; preds = %7
  br label %15, !dbg !10331

15:                                               ; preds = %14, %10
  %16 = phi i32 [ %13, %10 ], [ -1, %14 ], !dbg !10331
  ret i32 %16, !dbg !10334
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !10335 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10336, metadata !DIExpression()), !dbg !10337
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10338, metadata !DIExpression()), !dbg !10339
  %5 = load i32, i32* %3, align 4, !dbg !10340
  %6 = load i32*, i32** %4, align 4, !dbg !10341
  %7 = call i32 @zephyr_fputc(i32 noundef %5, i32* noundef %6) #10, !dbg !10342
  ret i32 %7, !dbg !10343
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !10344 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10346, metadata !DIExpression()), !dbg !10347
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10348, metadata !DIExpression()), !dbg !10349
  br label %5, !dbg !10350

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !10351, !srcloc !10353
  br label %6, !dbg !10351

6:                                                ; preds = %5
  %7 = load i32, i32* %3, align 4, !dbg !10354
  %8 = load i32*, i32** %4, align 4, !dbg !10355
  %9 = call i32 @z_impl_zephyr_fputc(i32 noundef %7, i32* noundef %8) #10, !dbg !10356
  ret i32 %9, !dbg !10357
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) #1 !dbg !10358 {
  %3 = alloca i8*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10362, metadata !DIExpression()), !dbg !10363
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10364, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10366, metadata !DIExpression()), !dbg !10367
  %7 = load i8*, i8** %3, align 4, !dbg !10368
  %8 = call i32 @strlen(i8* noundef %7) #10, !dbg !10369
  store i32 %8, i32* %5, align 4, !dbg !10367
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10370, metadata !DIExpression()), !dbg !10371
  %9 = load i8*, i8** %3, align 4, !dbg !10372
  %10 = load i32, i32* %5, align 4, !dbg !10373
  %11 = load i32*, i32** %4, align 4, !dbg !10374
  %12 = call i32 @fwrite(i8* noundef %9, i32 noundef 1, i32 noundef %10, i32* noundef %11) #10, !dbg !10375
  store i32 %12, i32* %6, align 4, !dbg !10376
  %13 = load i32, i32* %5, align 4, !dbg !10377
  %14 = load i32, i32* %6, align 4, !dbg !10378
  %15 = icmp eq i32 %13, %14, !dbg !10379
  %16 = zext i1 %15 to i64, !dbg !10377
  %17 = select i1 %15, i32 0, i32 -1, !dbg !10377
  ret i32 %17, !dbg !10380
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !10381 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10384, metadata !DIExpression()), !dbg !10385
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10386, metadata !DIExpression()), !dbg !10387
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10388, metadata !DIExpression()), !dbg !10389
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !10390, metadata !DIExpression()), !dbg !10391
  %9 = load i8*, i8** %5, align 4, !dbg !10392
  %10 = load i32, i32* %6, align 4, !dbg !10393
  %11 = load i32, i32* %7, align 4, !dbg !10394
  %12 = load i32*, i32** %8, align 4, !dbg !10395
  %13 = call i32 @zephyr_fwrite(i8* noundef %9, i32 noundef %10, i32 noundef %11, i32* noundef %12) #10, !dbg !10396
  ret i32 %13, !dbg !10397
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !10398 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10399, metadata !DIExpression()), !dbg !10400
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10401, metadata !DIExpression()), !dbg !10402
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10403, metadata !DIExpression()), !dbg !10404
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !10405, metadata !DIExpression()), !dbg !10406
  br label %9, !dbg !10407

9:                                                ; preds = %4
  call void asm sideeffect "", "~{memory}"() #9, !dbg !10408, !srcloc !10410
  br label %10, !dbg !10408

10:                                               ; preds = %9
  %11 = load i8*, i8** %5, align 4, !dbg !10411
  %12 = load i32, i32* %6, align 4, !dbg !10412
  %13 = load i32, i32* %7, align 4, !dbg !10413
  %14 = load i32*, i32** %8, align 4, !dbg !10414
  %15 = call i32 @z_impl_zephyr_fwrite(i8* noundef %11, i32 noundef %12, i32 noundef %13, i32* noundef %14) #10, !dbg !10415
  ret i32 %15, !dbg !10416
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !10417 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10418, metadata !DIExpression()), !dbg !10419
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10420, metadata !DIExpression()), !dbg !10421
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10422, metadata !DIExpression()), !dbg !10423
  store i32* %3, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !10424, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10428, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.declare(metadata i8** %12, metadata !10430, metadata !DIExpression()), !dbg !10431
  %13 = load i32*, i32** %9, align 4, !dbg !10432
  %14 = icmp ne i32* %13, inttoptr (i32 2 to i32*), !dbg !10434
  br i1 %14, label %15, label %18, !dbg !10435

15:                                               ; preds = %4
  %16 = load i32*, i32** %9, align 4, !dbg !10436
  %17 = icmp ne i32* %16, inttoptr (i32 3 to i32*), !dbg !10437
  br i1 %17, label %24, label %18, !dbg !10438

18:                                               ; preds = %15, %4
  %19 = load i32, i32* %8, align 4, !dbg !10439
  %20 = icmp eq i32 %19, 0, !dbg !10440
  br i1 %20, label %24, label %21, !dbg !10441

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4, !dbg !10442
  %23 = icmp eq i32 %22, 0, !dbg !10443
  br i1 %23, label %24, label %25, !dbg !10444

24:                                               ; preds = %21, %18, %15
  store i32 0, i32* %5, align 4, !dbg !10445
  br label %56, !dbg !10445

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 4, !dbg !10447
  store i8* %26, i8** %12, align 4, !dbg !10448
  %27 = load i32, i32* %8, align 4, !dbg !10449
  store i32 %27, i32* %10, align 4, !dbg !10450
  br label %28, !dbg !10451

28:                                               ; preds = %48, %25
  %29 = load i32, i32* %7, align 4, !dbg !10452
  store i32 %29, i32* %11, align 4, !dbg !10454
  br label %30, !dbg !10455

30:                                               ; preds = %42, %28
  %31 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10456
  %32 = load i8*, i8** %12, align 4, !dbg !10459
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !10459
  store i8* %33, i8** %12, align 4, !dbg !10459
  %34 = load i8, i8* %32, align 1, !dbg !10460
  %35 = zext i8 %34 to i32, !dbg !10461
  %36 = call i32 %31(i32 noundef %35) #10, !dbg !10456
  %37 = icmp eq i32 %36, -1, !dbg !10462
  br i1 %37, label %38, label %39, !dbg !10463

38:                                               ; preds = %30
  br label %52, !dbg !10464

39:                                               ; preds = %30
  %40 = load i32, i32* %11, align 4, !dbg !10466
  %41 = add i32 %40, -1, !dbg !10466
  store i32 %41, i32* %11, align 4, !dbg !10466
  br label %42, !dbg !10467

42:                                               ; preds = %39
  %43 = load i32, i32* %11, align 4, !dbg !10468
  %44 = icmp ugt i32 %43, 0, !dbg !10469
  br i1 %44, label %30, label %45, !dbg !10467, !llvm.loop !10470

45:                                               ; preds = %42
  %46 = load i32, i32* %10, align 4, !dbg !10472
  %47 = add i32 %46, -1, !dbg !10472
  store i32 %47, i32* %10, align 4, !dbg !10472
  br label %48, !dbg !10473

48:                                               ; preds = %45
  %49 = load i32, i32* %10, align 4, !dbg !10474
  %50 = icmp ugt i32 %49, 0, !dbg !10475
  br i1 %50, label %28, label %51, !dbg !10473, !llvm.loop !10476

51:                                               ; preds = %48
  br label %52, !dbg !10473

52:                                               ; preds = %51, %38
  call void @llvm.dbg.label(metadata !10478), !dbg !10479
  %53 = load i32, i32* %8, align 4, !dbg !10480
  %54 = load i32, i32* %10, align 4, !dbg !10481
  %55 = sub i32 %53, %54, !dbg !10482
  store i32 %55, i32* %5, align 4, !dbg !10483
  br label %56, !dbg !10483

56:                                               ; preds = %52, %24
  %57 = load i32, i32* %5, align 4, !dbg !10484
  ret i32 %57, !dbg !10484
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @puts(i8* noundef %0) #1 !dbg !10485 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10488, metadata !DIExpression()), !dbg !10489
  %4 = load i8*, i8** %3, align 4, !dbg !10490
  %5 = call i32 @fputs(i8* noundef %4, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !10492
  %6 = icmp eq i32 %5, -1, !dbg !10493
  br i1 %6, label %7, label %8, !dbg !10494

7:                                                ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !10495
  br label %13, !dbg !10495

8:                                                ; preds = %1
  %9 = call i32 @fputc(i32 noundef 10, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !10497
  %10 = icmp eq i32 %9, -1, !dbg !10498
  %11 = zext i1 %10 to i64, !dbg !10497
  %12 = select i1 %10, i32 -1, i32 0, !dbg !10497
  store i32 %12, i32* %2, align 4, !dbg !10499
  br label %13, !dbg !10499

13:                                               ; preds = %8, %7
  %14 = load i32, i32* %2, align 4, !dbg !10500
  ret i32 %14, !dbg !10500
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nordicsemi_nrf51_init(%struct.device.397* noundef %0) #1 !dbg !10501 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10504, metadata !DIExpression()), !dbg !10505
  %6 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !10506
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10507, metadata !DIExpression()) #9, !dbg !10509
  %7 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10511, !srcloc !10512
  store i32 %7, i32* %3, align 4, !dbg !10511
  %8 = load i32, i32* %3, align 4, !dbg !10513
  store i32 %8, i32* %5, align 4, !dbg !10514
  %9 = load i32, i32* %5, align 4, !dbg !10515
  store i32 %9, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10516, metadata !DIExpression()) #9, !dbg !10518
  %10 = load i32, i32* %2, align 4, !dbg !10520
  %11 = icmp ne i32 %10, 0, !dbg !10522
  br i1 %11, label %12, label %13, !dbg !10523

12:                                               ; preds = %1
  br label %14, !dbg !10524

13:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10526, !srcloc !10527
  br label %14, !dbg !10528

14:                                               ; preds = %12, %13
  ret i32 0, !dbg !10529
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_arch_reboot(i32 noundef %0) #1 !dbg !10530 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10533, metadata !DIExpression()), !dbg !10534
  %3 = load i32, i32* %2, align 4, !dbg !10535
  %4 = trunc i32 %3 to i8, !dbg !10536
  call void @nrf_power_gpregret_set(%struct.NRF_POWER_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_POWER_Type*), i8 noundef zeroext %4) #10, !dbg !10537
  call void @__NVIC_SystemReset() #12, !dbg !10538
  unreachable, !dbg !10538
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_power_gpregret_set(%struct.NRF_POWER_Type* noundef %0, i8 noundef zeroext %1) #1 !dbg !10539 {
  %3 = alloca %struct.NRF_POWER_Type*, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32*, align 4
  store %struct.NRF_POWER_Type* %0, %struct.NRF_POWER_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_POWER_Type** %3, metadata !10543, metadata !DIExpression()), !dbg !10544
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10545, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.declare(metadata i32** %5, metadata !10547, metadata !DIExpression()), !dbg !10548
  %6 = load %struct.NRF_POWER_Type*, %struct.NRF_POWER_Type** %3, align 4, !dbg !10549
  %7 = getelementptr inbounds %struct.NRF_POWER_Type, %struct.NRF_POWER_Type* %6, i32 0, i32 17, !dbg !10552
  %8 = getelementptr inbounds i32, i32* %7, i32 0, !dbg !10553
  store i32* %8, i32** %5, align 4, !dbg !10554
  %9 = load i8, i8* %4, align 1, !dbg !10555
  %10 = zext i8 %9 to i32, !dbg !10555
  %11 = load i32*, i32** %5, align 4, !dbg !10556
  store volatile i32 %10, i32* %11, align 4, !dbg !10557
  ret void, !dbg !10558
}

; Function Attrs: noinline noreturn nounwind optnone
define internal void @__NVIC_SystemReset() #5 !dbg !10559 {
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !10560, !srcloc !10563
  store volatile i32 100270084, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 3), align 4, !dbg !10564
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !10565, !srcloc !10563
  br label %1, !dbg !10567

1:                                                ; preds = %1, %0
  call void asm sideeffect "nop", ""() #9, !dbg !10568, !srcloc !10572
  br label %1, !dbg !10573, !llvm.loop !10574
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_busy_wait(i32 noundef %0) #1 !dbg !10577 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10578, metadata !DIExpression()), !dbg !10579
  %3 = load i32, i32* %2, align 4, !dbg !10580
  %4 = icmp ule i32 %3, 2, !dbg !10582
  br i1 %4, label %5, label %6, !dbg !10583

5:                                                ; preds = %1
  br label %10, !dbg !10584

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4, !dbg !10586
  %8 = sub i32 %7, 2, !dbg !10586
  store i32 %8, i32* %2, align 4, !dbg !10586
  %9 = load i32, i32* %2, align 4, !dbg !10587
  call void @nrfx_coredep_delay_us(i32 noundef %9) #10, !dbg !10588
  br label %10, !dbg !10589

10:                                               ; preds = %6, %5
  ret void, !dbg !10589
}

; Function Attrs: noinline nounwind optnone
define internal void @nrfx_coredep_delay_us(i32 noundef %0) #1 !dbg !523 {
  %2 = alloca i32, align 4
  %3 = alloca void (i32)*, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10590, metadata !DIExpression()), !dbg !10591
  %5 = load i32, i32* %2, align 4, !dbg !10592
  %6 = icmp eq i32 %5, 0, !dbg !10594
  br i1 %6, label %7, label %8, !dbg !10595

7:                                                ; preds = %1
  br label %13, !dbg !10596

8:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata void (i32)** %3, metadata !10598, metadata !DIExpression()), !dbg !10600
  store void (i32)* inttoptr (i32 or (i32 ptrtoint ([3 x i16]* @nrfx_coredep_delay_us.delay_machine_code to i32), i32 1) to void (i32)*), void (i32)** %3, align 4, !dbg !10600
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10601, metadata !DIExpression()), !dbg !10602
  %9 = load i32, i32* %2, align 4, !dbg !10603
  %10 = mul i32 %9, 16, !dbg !10604
  store i32 %10, i32* %4, align 4, !dbg !10602
  %11 = load void (i32)*, void (i32)** %3, align 4, !dbg !10605
  %12 = load i32, i32* %4, align 4, !dbg !10606
  call void %11(i32 noundef %12) #10, !dbg !10605
  br label %13, !dbg !10607

13:                                               ; preds = %8, %7
  ret void, !dbg !10607
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @pm_state_set(i32 noundef %0, i8 noundef zeroext %1) #1 !dbg !10608 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10610, metadata !DIExpression()), !dbg !10611
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10612, metadata !DIExpression()), !dbg !10613
  %9 = load i8, i8* %4, align 1, !dbg !10614
  %10 = load i32, i32* %3, align 4, !dbg !10615
  switch i32 %10, label %12 [
    i32 6, label %11
  ], !dbg !10616

11:                                               ; preds = %2
  call void @nrf_power_system_off(%struct.NRF_POWER_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_POWER_Type*)) #10, !dbg !10617
  br label %15, !dbg !10619

12:                                               ; preds = %2
  br label %13, !dbg !10620

13:                                               ; preds = %12
  br label %14, !dbg !10621

14:                                               ; preds = %13
  br label %15, !dbg !10625

15:                                               ; preds = %14, %11
  ret void, !dbg !10626
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_power_system_off(%struct.NRF_POWER_Type* noundef %0) #1 !dbg !10627 {
  %2 = alloca %struct.NRF_POWER_Type*, align 4
  store %struct.NRF_POWER_Type* %0, %struct.NRF_POWER_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_POWER_Type** %2, metadata !10630, metadata !DIExpression()), !dbg !10631
  %3 = load %struct.NRF_POWER_Type*, %struct.NRF_POWER_Type** %2, align 4, !dbg !10632
  %4 = getelementptr inbounds %struct.NRF_POWER_Type, %struct.NRF_POWER_Type* %3, i32 0, i32 13, !dbg !10633
  store volatile i32 1, i32* %4, align 4, !dbg !10634
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !10635, !srcloc !10638
  br label %5, !dbg !10639

5:                                                ; preds = %1, %5
  call void asm sideeffect "wfe", "~{memory}"() #9, !dbg !10640, !srcloc !10642
  br label %5, !dbg !10639, !llvm.loop !10643
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @pm_state_exit_post_ops(i32 noundef %0, i8 noundef zeroext %1) #1 !dbg !10645 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10646, metadata !DIExpression()), !dbg !10647
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10648, metadata !DIExpression()), !dbg !10649
  %10 = load i8, i8* %5, align 1, !dbg !10650
  %11 = load i32, i32* %4, align 4, !dbg !10651
  switch i32 %11, label %13 [
    i32 6, label %12
  ], !dbg !10652

12:                                               ; preds = %2
  br label %16, !dbg !10653

13:                                               ; preds = %2
  br label %14, !dbg !10655

14:                                               ; preds = %13
  br label %15, !dbg !10656

15:                                               ; preds = %14
  br label %16, !dbg !10660

16:                                               ; preds = %15, %12
  store i32 0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10661, metadata !DIExpression()) #9, !dbg !10663
  %17 = load i32, i32* %3, align 4, !dbg !10665
  %18 = icmp ne i32 %17, 0, !dbg !10667
  br i1 %18, label %19, label %20, !dbg !10668

19:                                               ; preds = %16
  br label %21, !dbg !10669

20:                                               ; preds = %16
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10671, !srcloc !10672
  br label %21, !dbg !10673

21:                                               ; preds = %19, %20
  ret void, !dbg !10674
}

; Function Attrs: noinline nounwind optnone
define internal i32 @api_blocking_start(%struct.device.397* noundef %0, i8* noundef %1) #1 !dbg !10675 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.k_sem.475, align 4
  %7 = alloca i32, align 4
  %8 = alloca %union.argument_value, align 8
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !10676, metadata !DIExpression()), !dbg !10677
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.declare(metadata %struct.k_sem.475* %6, metadata !10680, metadata !DIExpression()), !dbg !10690
  %9 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %6, i32 0, i32 0, !dbg !10691
  %10 = getelementptr inbounds %struct._wait_q_t.460, %struct._wait_q_t.460* %9, i32 0, i32 0, !dbg !10691
  %11 = getelementptr inbounds %struct._dnode.70, %struct._dnode.70* %10, i32 0, i32 0, !dbg !10691
  %12 = bitcast %union.anon.0.68* %11 to %struct._dnode.70**, !dbg !10691
  %13 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %6, i32 0, i32 0, !dbg !10691
  %14 = getelementptr inbounds %struct._wait_q_t.460, %struct._wait_q_t.460* %13, i32 0, i32 0, !dbg !10691
  store %struct._dnode.70* %14, %struct._dnode.70** %12, align 4, !dbg !10691
  %15 = getelementptr inbounds %struct._dnode.70, %struct._dnode.70* %10, i32 0, i32 1, !dbg !10691
  %16 = bitcast %union.anon.0.68* %15 to %struct._dnode.70**, !dbg !10691
  %17 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %6, i32 0, i32 0, !dbg !10691
  %18 = getelementptr inbounds %struct._wait_q_t.460, %struct._wait_q_t.460* %17, i32 0, i32 0, !dbg !10691
  store %struct._dnode.70* %18, %struct._dnode.70** %16, align 4, !dbg !10691
  %19 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %6, i32 0, i32 1, !dbg !10691
  store i32 0, i32* %19, align 4, !dbg !10691
  %20 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %6, i32 0, i32 2, !dbg !10691
  store i32 1, i32* %20, align 4, !dbg !10691
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10692, metadata !DIExpression()), !dbg !10693
  %21 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !10694
  %22 = load i8*, i8** %5, align 4, !dbg !10695
  %23 = bitcast %struct.k_sem.475* %6 to i8*, !dbg !10696
  %24 = call i32 @api_start(%struct.device.397* noundef %21, i8* noundef %22, void (%struct.device.397*, i8*, i8*)* noundef @blocking_start_callback, i8* noundef %23) #10, !dbg !10697
  store i32 %24, i32* %7, align 4, !dbg !10698
  %25 = load i32, i32* %7, align 4, !dbg !10699
  %26 = icmp slt i32 %25, 0, !dbg !10701
  br i1 %26, label %27, label %29, !dbg !10702

27:                                               ; preds = %2
  %28 = load i32, i32* %7, align 4, !dbg !10703
  store i32 %28, i32* %3, align 4, !dbg !10705
  br label %36, !dbg !10705

29:                                               ; preds = %2
  %30 = getelementptr inbounds %union.argument_value, %union.argument_value* %8, i32 0, i32 0, !dbg !10706
  %31 = call i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #10, !dbg !10706
  store i64 %31, i64* %30, align 8, !dbg !10706
  %32 = getelementptr inbounds %union.argument_value, %union.argument_value* %8, i32 0, i32 0, !dbg !10707
  %33 = bitcast i64* %32 to [1 x i64]*, !dbg !10707
  %34 = load [1 x i64], [1 x i64]* %33, align 8, !dbg !10707
  %35 = call i32 @k_sem_take(%struct.k_sem.475* noundef %6, [1 x i64] %34) #10, !dbg !10707
  store i32 %35, i32* %3, align 4, !dbg !10708
  br label %36, !dbg !10708

36:                                               ; preds = %29, %27
  %37 = load i32, i32* %3, align 4, !dbg !10709
  ret i32 %37, !dbg !10709
}

; Function Attrs: noinline nounwind optnone
define internal i32 @api_stop(%struct.device.397* noundef %0, i8* noundef %1) #1 !dbg !10710 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i8*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !10711, metadata !DIExpression()), !dbg !10712
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10713, metadata !DIExpression()), !dbg !10714
  %5 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !10715
  %6 = load i8*, i8** %4, align 4, !dbg !10716
  %7 = call i32 @stop(%struct.device.397* noundef %5, i8* noundef %6, i32 noundef 128) #10, !dbg !10717
  ret i32 %7, !dbg !10718
}

; Function Attrs: noinline nounwind optnone
define internal i32 @api_start(%struct.device.397* noundef %0, i8* noundef %1, void (%struct.device.397*, i8*, i8*)* noundef %2, i8* noundef %3) #1 !dbg !10719 {
  %5 = alloca %struct.device.397*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca void (%struct.device.397*, i8*, i8*)*, align 4
  %8 = alloca i8*, align 4
  store %struct.device.397* %0, %struct.device.397** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %5, metadata !10720, metadata !DIExpression()), !dbg !10721
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10722, metadata !DIExpression()), !dbg !10723
  store void (%struct.device.397*, i8*, i8*)* %2, void (%struct.device.397*, i8*, i8*)** %7, align 4
  call void @llvm.dbg.declare(metadata void (%struct.device.397*, i8*, i8*)** %7, metadata !10724, metadata !DIExpression()), !dbg !10725
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10726, metadata !DIExpression()), !dbg !10727
  %9 = load %struct.device.397*, %struct.device.397** %5, align 4, !dbg !10728
  %10 = load i8*, i8** %6, align 4, !dbg !10729
  %11 = load void (%struct.device.397*, i8*, i8*)*, void (%struct.device.397*, i8*, i8*)** %7, align 4, !dbg !10730
  %12 = load i8*, i8** %8, align 4, !dbg !10731
  %13 = call i32 @async_start(%struct.device.397* noundef %9, i8* noundef %10, void (%struct.device.397*, i8*, i8*)* noundef %11, i8* noundef %12, i32 noundef 128) #10, !dbg !10732
  ret i32 %13, !dbg !10733
}

; Function Attrs: noinline nounwind optnone
define internal i32 @get_status(%struct.device.397* noundef %0, i8* noundef %1) #1 !dbg !10734 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !10735, metadata !DIExpression()), !dbg !10736
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10737, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10739, metadata !DIExpression()), !dbg !10740
  %6 = load i8*, i8** %4, align 4, !dbg !10741
  %7 = ptrtoint i8* %6 to i32, !dbg !10742
  store i32 %7, i32* %5, align 4, !dbg !10740
  %8 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !10743
  %9 = load i32, i32* %5, align 4, !dbg !10743
  %10 = call %struct.nrf_clock_control_sub_data* @get_sub_data(%struct.device.397* noundef %8, i32 noundef %9) #10, !dbg !10743
  %11 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %10, i32 0, i32 2, !dbg !10743
  %12 = load i32, i32* %11, align 4, !dbg !10743
  %13 = and i32 %12, 7, !dbg !10743
  ret i32 %13, !dbg !10744
}

; Function Attrs: noinline nounwind optnone
define internal %struct.nrf_clock_control_sub_data* @get_sub_data(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !10745 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.nrf_clock_control_data*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !10749, metadata !DIExpression()), !dbg !10750
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10751, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_data** %5, metadata !10753, metadata !DIExpression()), !dbg !10755
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !10756
  %7 = getelementptr inbounds %struct.device.397, %struct.device.397* %6, i32 0, i32 4, !dbg !10757
  %8 = load i8*, i8** %7, align 4, !dbg !10757
  %9 = bitcast i8* %8 to %struct.nrf_clock_control_data*, !dbg !10756
  store %struct.nrf_clock_control_data* %9, %struct.nrf_clock_control_data** %5, align 4, !dbg !10755
  %10 = load %struct.nrf_clock_control_data*, %struct.nrf_clock_control_data** %5, align 4, !dbg !10758
  %11 = getelementptr inbounds %struct.nrf_clock_control_data, %struct.nrf_clock_control_data* %10, i32 0, i32 1, !dbg !10759
  %12 = load i32, i32* %4, align 4, !dbg !10760
  %13 = getelementptr inbounds [2 x %struct.nrf_clock_control_sub_data], [2 x %struct.nrf_clock_control_sub_data]* %11, i32 0, i32 %12, !dbg !10758
  ret %struct.nrf_clock_control_sub_data* %13, !dbg !10761
}

; Function Attrs: noinline nounwind optnone
define internal i32 @async_start(%struct.device.397* noundef %0, i8* noundef %1, void (%struct.device.397*, i8*, i8*)* noundef %2, i8* noundef %3, i32 noundef %4) #1 !dbg !10762 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.device.397*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca void (%struct.device.397*, i8*, i8*)*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.nrf_clock_control_sub_data*, align 4
  %14 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %7, metadata !10765, metadata !DIExpression()), !dbg !10766
  store i8* %1, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10767, metadata !DIExpression()), !dbg !10768
  store void (%struct.device.397*, i8*, i8*)* %2, void (%struct.device.397*, i8*, i8*)** %9, align 4
  call void @llvm.dbg.declare(metadata void (%struct.device.397*, i8*, i8*)** %9, metadata !10769, metadata !DIExpression()), !dbg !10770
  store i8* %3, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !10771, metadata !DIExpression()), !dbg !10772
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10773, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10775, metadata !DIExpression()), !dbg !10776
  %15 = load i8*, i8** %8, align 4, !dbg !10777
  %16 = ptrtoint i8* %15 to i32, !dbg !10778
  store i32 %16, i32* %12, align 4, !dbg !10776
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_sub_data** %13, metadata !10779, metadata !DIExpression()), !dbg !10780
  %17 = load %struct.device.397*, %struct.device.397** %7, align 4, !dbg !10781
  %18 = load i32, i32* %12, align 4, !dbg !10782
  %19 = call %struct.nrf_clock_control_sub_data* @get_sub_data(%struct.device.397* noundef %17, i32 noundef %18) #10, !dbg !10783
  store %struct.nrf_clock_control_sub_data* %19, %struct.nrf_clock_control_sub_data** %13, align 4, !dbg !10780
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10784, metadata !DIExpression()), !dbg !10785
  %20 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %13, align 4, !dbg !10786
  %21 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %20, i32 0, i32 2, !dbg !10787
  %22 = load i32, i32* %11, align 4, !dbg !10788
  %23 = call i32 @set_starting_state(i32* noundef %21, i32 noundef %22) #10, !dbg !10789
  store i32 %23, i32* %14, align 4, !dbg !10790
  %24 = load i32, i32* %14, align 4, !dbg !10791
  %25 = icmp slt i32 %24, 0, !dbg !10793
  br i1 %25, label %26, label %28, !dbg !10794

26:                                               ; preds = %5
  %27 = load i32, i32* %14, align 4, !dbg !10795
  store i32 %27, i32* %6, align 4, !dbg !10797
  br label %40, !dbg !10797

28:                                               ; preds = %5
  %29 = load void (%struct.device.397*, i8*, i8*)*, void (%struct.device.397*, i8*, i8*)** %9, align 4, !dbg !10798
  %30 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %13, align 4, !dbg !10799
  %31 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %30, i32 0, i32 0, !dbg !10800
  store void (%struct.device.397*, i8*, i8*)* %29, void (%struct.device.397*, i8*, i8*)** %31, align 4, !dbg !10801
  %32 = load i8*, i8** %10, align 4, !dbg !10802
  %33 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %13, align 4, !dbg !10803
  %34 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %33, i32 0, i32 1, !dbg !10804
  store i8* %32, i8** %34, align 4, !dbg !10805
  %35 = load %struct.device.397*, %struct.device.397** %7, align 4, !dbg !10806
  %36 = load i32, i32* %12, align 4, !dbg !10807
  %37 = call %struct.nrf_clock_control_sub_config* @get_sub_config(%struct.device.397* noundef %35, i32 noundef %36) #10, !dbg !10808
  %38 = getelementptr inbounds %struct.nrf_clock_control_sub_config, %struct.nrf_clock_control_sub_config* %37, i32 0, i32 0, !dbg !10809
  %39 = load void ()*, void ()** %38, align 4, !dbg !10809
  call void %39() #10, !dbg !10808
  store i32 0, i32* %6, align 4, !dbg !10810
  br label %40, !dbg !10810

40:                                               ; preds = %28, %26
  %41 = load i32, i32* %6, align 4, !dbg !10811
  ret i32 %41, !dbg !10811
}

; Function Attrs: noinline nounwind optnone
define internal i32 @set_starting_state(i32* noundef %0, i32 noundef %1) #1 !dbg !10812 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32* %0, i32** %5, align 4
  call void @llvm.dbg.declare(metadata i32** %5, metadata !10815, metadata !DIExpression()), !dbg !10816
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10819, metadata !DIExpression()), !dbg !10820
  store i32 0, i32* %7, align 4, !dbg !10820
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10821, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10823, metadata !DIExpression()) #9, !dbg !10825
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10827, !srcloc !10828
  store i32 %10, i32* %4, align 4, !dbg !10827
  %11 = load i32, i32* %4, align 4, !dbg !10829
  store i32 %11, i32* %8, align 4, !dbg !10822
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10830, metadata !DIExpression()), !dbg !10831
  %12 = load i32*, i32** %5, align 4, !dbg !10832
  %13 = load i32, i32* %12, align 4, !dbg !10832
  %14 = and i32 %13, 192, !dbg !10832
  store i32 %14, i32* %9, align 4, !dbg !10831
  %15 = load i32*, i32** %5, align 4, !dbg !10833
  %16 = load i32, i32* %15, align 4, !dbg !10835
  %17 = and i32 %16, 7, !dbg !10836
  %18 = icmp eq i32 %17, 1, !dbg !10837
  br i1 %18, label %19, label %23, !dbg !10838

19:                                               ; preds = %2
  %20 = load i32, i32* %6, align 4, !dbg !10839
  %21 = or i32 0, %20, !dbg !10841
  %22 = load i32*, i32** %5, align 4, !dbg !10842
  store i32 %21, i32* %22, align 4, !dbg !10843
  br label %30, !dbg !10844

23:                                               ; preds = %2
  %24 = load i32, i32* %9, align 4, !dbg !10845
  %25 = load i32, i32* %6, align 4, !dbg !10847
  %26 = icmp ne i32 %24, %25, !dbg !10848
  br i1 %26, label %27, label %28, !dbg !10849

27:                                               ; preds = %23
  store i32 -1, i32* %7, align 4, !dbg !10850
  br label %29, !dbg !10852

28:                                               ; preds = %23
  store i32 -120, i32* %7, align 4, !dbg !10853
  br label %29

29:                                               ; preds = %28, %27
  br label %30

30:                                               ; preds = %29, %19
  %31 = load i32, i32* %8, align 4, !dbg !10855
  store i32 %31, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10856, metadata !DIExpression()) #9, !dbg !10858
  %32 = load i32, i32* %3, align 4, !dbg !10860
  %33 = icmp ne i32 %32, 0, !dbg !10862
  br i1 %33, label %34, label %35, !dbg !10863

34:                                               ; preds = %30
  br label %36, !dbg !10864

35:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10866, !srcloc !10867
  br label %36, !dbg !10868

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %7, align 4, !dbg !10869
  ret i32 %37, !dbg !10870
}

; Function Attrs: noinline nounwind optnone
define internal %struct.nrf_clock_control_sub_config* @get_sub_config(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !10871 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.nrf_clock_control_config*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !10876, metadata !DIExpression()), !dbg !10877
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10878, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_config** %5, metadata !10880, metadata !DIExpression()), !dbg !10882
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !10883
  %7 = getelementptr inbounds %struct.device.397, %struct.device.397* %6, i32 0, i32 1, !dbg !10884
  %8 = load i8*, i8** %7, align 4, !dbg !10884
  %9 = bitcast i8* %8 to %struct.nrf_clock_control_config*, !dbg !10883
  store %struct.nrf_clock_control_config* %9, %struct.nrf_clock_control_config** %5, align 4, !dbg !10882
  %10 = load %struct.nrf_clock_control_config*, %struct.nrf_clock_control_config** %5, align 4, !dbg !10885
  %11 = getelementptr inbounds %struct.nrf_clock_control_config, %struct.nrf_clock_control_config* %10, i32 0, i32 0, !dbg !10886
  %12 = load i32, i32* %4, align 4, !dbg !10887
  %13 = getelementptr inbounds [2 x %struct.nrf_clock_control_sub_config], [2 x %struct.nrf_clock_control_sub_config]* %11, i32 0, i32 %12, !dbg !10885
  ret %struct.nrf_clock_control_sub_config* %13, !dbg !10888
}

; Function Attrs: noinline nounwind optnone
define internal i32 @stop(%struct.device.397* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !10889 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.397*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.nrf_clock_control_sub_data*, align 4
  %10 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %5, metadata !10892, metadata !DIExpression()), !dbg !10893
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10894, metadata !DIExpression()), !dbg !10895
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10896, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10898, metadata !DIExpression()), !dbg !10899
  %11 = load i8*, i8** %6, align 4, !dbg !10900
  %12 = ptrtoint i8* %11 to i32, !dbg !10901
  store i32 %12, i32* %8, align 4, !dbg !10899
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_sub_data** %9, metadata !10902, metadata !DIExpression()), !dbg !10903
  %13 = load %struct.device.397*, %struct.device.397** %5, align 4, !dbg !10904
  %14 = load i32, i32* %8, align 4, !dbg !10905
  %15 = call %struct.nrf_clock_control_sub_data* @get_sub_data(%struct.device.397* noundef %13, i32 noundef %14) #10, !dbg !10906
  store %struct.nrf_clock_control_sub_data* %15, %struct.nrf_clock_control_sub_data** %9, align 4, !dbg !10903
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10907, metadata !DIExpression()), !dbg !10908
  %16 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %9, align 4, !dbg !10909
  %17 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %16, i32 0, i32 2, !dbg !10910
  %18 = load i32, i32* %7, align 4, !dbg !10911
  %19 = call i32 @set_off_state(i32* noundef %17, i32 noundef %18) #10, !dbg !10912
  store i32 %19, i32* %10, align 4, !dbg !10913
  %20 = load i32, i32* %10, align 4, !dbg !10914
  %21 = icmp slt i32 %20, 0, !dbg !10916
  br i1 %21, label %22, label %24, !dbg !10917

22:                                               ; preds = %3
  %23 = load i32, i32* %10, align 4, !dbg !10918
  store i32 %23, i32* %4, align 4, !dbg !10920
  br label %30, !dbg !10920

24:                                               ; preds = %3
  %25 = load %struct.device.397*, %struct.device.397** %5, align 4, !dbg !10921
  %26 = load i32, i32* %8, align 4, !dbg !10922
  %27 = call %struct.nrf_clock_control_sub_config* @get_sub_config(%struct.device.397* noundef %25, i32 noundef %26) #10, !dbg !10923
  %28 = getelementptr inbounds %struct.nrf_clock_control_sub_config, %struct.nrf_clock_control_sub_config* %27, i32 0, i32 1, !dbg !10924
  %29 = load void ()*, void ()** %28, align 4, !dbg !10924
  call void %29() #10, !dbg !10923
  store i32 0, i32* %4, align 4, !dbg !10925
  br label %30, !dbg !10925

30:                                               ; preds = %24, %22
  %31 = load i32, i32* %4, align 4, !dbg !10926
  ret i32 %31, !dbg !10926
}

; Function Attrs: noinline nounwind optnone
define internal i32 @set_off_state(i32* noundef %0, i32 noundef %1) #1 !dbg !10927 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32* %0, i32** %5, align 4
  call void @llvm.dbg.declare(metadata i32** %5, metadata !10928, metadata !DIExpression()), !dbg !10929
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10930, metadata !DIExpression()), !dbg !10931
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10932, metadata !DIExpression()), !dbg !10933
  store i32 0, i32* %7, align 4, !dbg !10933
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10934, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10823, metadata !DIExpression()) #9, !dbg !10936
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10938, !srcloc !10828
  store i32 %10, i32* %4, align 4, !dbg !10938
  %11 = load i32, i32* %4, align 4, !dbg !10939
  store i32 %11, i32* %8, align 4, !dbg !10935
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10940, metadata !DIExpression()), !dbg !10941
  %12 = load i32*, i32** %5, align 4, !dbg !10942
  %13 = load i32, i32* %12, align 4, !dbg !10942
  %14 = and i32 %13, 192, !dbg !10942
  store i32 %14, i32* %9, align 4, !dbg !10941
  %15 = load i32, i32* %9, align 4, !dbg !10943
  %16 = icmp ne i32 %15, 0, !dbg !10945
  br i1 %16, label %17, label %22, !dbg !10946

17:                                               ; preds = %2
  %18 = load i32, i32* %9, align 4, !dbg !10947
  %19 = load i32, i32* %6, align 4, !dbg !10948
  %20 = icmp ne i32 %18, %19, !dbg !10949
  br i1 %20, label %21, label %22, !dbg !10950

21:                                               ; preds = %17
  store i32 -1, i32* %7, align 4, !dbg !10951
  br label %24, !dbg !10953

22:                                               ; preds = %17, %2
  %23 = load i32*, i32** %5, align 4, !dbg !10954
  store i32 1, i32* %23, align 4, !dbg !10956
  br label %24

24:                                               ; preds = %22, %21
  %25 = load i32, i32* %8, align 4, !dbg !10957
  store i32 %25, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10856, metadata !DIExpression()) #9, !dbg !10958
  %26 = load i32, i32* %3, align 4, !dbg !10960
  %27 = icmp ne i32 %26, 0, !dbg !10961
  br i1 %27, label %28, label %29, !dbg !10962

28:                                               ; preds = %24
  br label %30, !dbg !10963

29:                                               ; preds = %24
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10964, !srcloc !10867
  br label %30, !dbg !10965

30:                                               ; preds = %28, %29
  %31 = load i32, i32* %7, align 4, !dbg !10966
  ret i32 %31, !dbg !10967
}

; Function Attrs: noinline nounwind optnone
define internal void @blocking_start_callback(%struct.device.397* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !10968 {
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.k_sem.475*, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !10969, metadata !DIExpression()), !dbg !10970
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10971, metadata !DIExpression()), !dbg !10972
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %7, metadata !10975, metadata !DIExpression()), !dbg !10977
  %8 = load i8*, i8** %6, align 4, !dbg !10978
  %9 = bitcast i8* %8 to %struct.k_sem.475*, !dbg !10978
  store %struct.k_sem.475* %9, %struct.k_sem.475** %7, align 4, !dbg !10977
  %10 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !10979
  call void @k_sem_give(%struct.k_sem.475* noundef %10) #10, !dbg !10980
  ret void, !dbg !10981
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64(i64 noundef %0) #1 !dbg !10982 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !10985, metadata !DIExpression()), !dbg !10986
  %15 = load i64, i64* %14, align 8, !dbg !10987
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !10988, metadata !DIExpression()), !dbg !10990
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10992, metadata !DIExpression()), !dbg !10993
  store i32 32768, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10994, metadata !DIExpression()), !dbg !10995
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10996, metadata !DIExpression()), !dbg !10997
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !10998, metadata !DIExpression()), !dbg !10999
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !11000, metadata !DIExpression()), !dbg !11001
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !11002, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata i8* %10, metadata !11004, metadata !DIExpression()), !dbg !11005
  %16 = load i8, i8* %6, align 1, !dbg !11006
  %17 = trunc i8 %16 to i1, !dbg !11006
  br i1 %17, label %18, label %27, !dbg !11007

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !11008
  %20 = load i32, i32* %4, align 4, !dbg !11009
  %21 = icmp ugt i32 %19, %20, !dbg !11010
  br i1 %21, label %22, label %27, !dbg !11011

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !11012
  %24 = load i32, i32* %4, align 4, !dbg !11013
  %25 = urem i32 %23, %24, !dbg !11014
  %26 = icmp eq i32 %25, 0, !dbg !11015
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !11016
  %29 = zext i1 %28 to i8, !dbg !11005
  store i8 %29, i8* %10, align 1, !dbg !11005
  call void @llvm.dbg.declare(metadata i8* %11, metadata !11017, metadata !DIExpression()), !dbg !11018
  %30 = load i8, i8* %6, align 1, !dbg !11019
  %31 = trunc i8 %30 to i1, !dbg !11019
  br i1 %31, label %32, label %41, !dbg !11020

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !11021
  %34 = load i32, i32* %5, align 4, !dbg !11022
  %35 = icmp ugt i32 %33, %34, !dbg !11023
  br i1 %35, label %36, label %41, !dbg !11024

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !11025
  %38 = load i32, i32* %5, align 4, !dbg !11026
  %39 = urem i32 %37, %38, !dbg !11027
  %40 = icmp eq i32 %39, 0, !dbg !11028
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !11016
  %43 = zext i1 %42 to i8, !dbg !11018
  store i8 %43, i8* %11, align 1, !dbg !11018
  %44 = load i32, i32* %4, align 4, !dbg !11029
  %45 = load i32, i32* %5, align 4, !dbg !11031
  %46 = icmp eq i32 %44, %45, !dbg !11032
  br i1 %46, label %47, label %58, !dbg !11033

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !11034
  %49 = trunc i8 %48 to i1, !dbg !11034
  br i1 %49, label %50, label %54, !dbg !11034

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !11036
  %52 = trunc i64 %51 to i32, !dbg !11037
  %53 = zext i32 %52 to i64, !dbg !11038
  br label %56, !dbg !11034

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !11039
  br label %56, !dbg !11034

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !11034
  store i64 %57, i64* %2, align 8, !dbg !11040
  br label %195, !dbg !11040

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !11041, metadata !DIExpression()), !dbg !11042
  store i64 0, i64* %12, align 8, !dbg !11042
  %59 = load i8, i8* %10, align 1, !dbg !11043
  %60 = trunc i8 %59 to i1, !dbg !11043
  br i1 %60, label %86, label %61, !dbg !11045

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11046, metadata !DIExpression()), !dbg !11048
  %62 = load i8, i8* %11, align 1, !dbg !11049
  %63 = trunc i8 %62 to i1, !dbg !11049
  br i1 %63, label %64, label %68, !dbg !11049

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !11050
  %66 = load i32, i32* %5, align 4, !dbg !11051
  %67 = udiv i32 %65, %66, !dbg !11052
  br label %70, !dbg !11049

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !11053
  br label %70, !dbg !11049

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !11049
  store i32 %71, i32* %13, align 4, !dbg !11048
  %72 = load i8, i8* %8, align 1, !dbg !11054
  %73 = trunc i8 %72 to i1, !dbg !11054
  br i1 %73, label %74, label %78, !dbg !11056

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !11057
  %76 = sub i32 %75, 1, !dbg !11059
  %77 = zext i32 %76 to i64, !dbg !11057
  store i64 %77, i64* %12, align 8, !dbg !11060
  br label %78, !dbg !11061

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !11062
  %80 = trunc i8 %79 to i1, !dbg !11062
  br i1 %80, label %81, label %85, !dbg !11064

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !11065
  %83 = udiv i32 %82, 2, !dbg !11067
  %84 = zext i32 %83 to i64, !dbg !11065
  store i64 %84, i64* %12, align 8, !dbg !11068
  br label %85, !dbg !11069

85:                                               ; preds = %81, %78
  br label %86, !dbg !11070

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !11071
  %88 = trunc i8 %87 to i1, !dbg !11071
  br i1 %88, label %89, label %114, !dbg !11073

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !11074
  %91 = load i64, i64* %3, align 8, !dbg !11076
  %92 = add i64 %91, %90, !dbg !11076
  store i64 %92, i64* %3, align 8, !dbg !11076
  %93 = load i8, i8* %7, align 1, !dbg !11077
  %94 = trunc i8 %93 to i1, !dbg !11077
  br i1 %94, label %95, label %106, !dbg !11079

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !11080
  %97 = icmp ult i64 %96, 4294967296, !dbg !11081
  br i1 %97, label %98, label %106, !dbg !11082

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !11083
  %100 = trunc i64 %99 to i32, !dbg !11085
  %101 = load i32, i32* %4, align 4, !dbg !11086
  %102 = load i32, i32* %5, align 4, !dbg !11087
  %103 = udiv i32 %101, %102, !dbg !11088
  %104 = udiv i32 %100, %103, !dbg !11089
  %105 = zext i32 %104 to i64, !dbg !11090
  store i64 %105, i64* %2, align 8, !dbg !11091
  br label %195, !dbg !11091

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !11092
  %108 = load i32, i32* %4, align 4, !dbg !11094
  %109 = zext i32 %108 to i64, !dbg !11095
  %110 = load i32, i32* %5, align 4, !dbg !11096
  %111 = zext i32 %110 to i64, !dbg !11096
  %112 = udiv i64 %109, %111, !dbg !11097
  %113 = udiv i64 %107, %112, !dbg !11098
  store i64 %113, i64* %2, align 8, !dbg !11099
  br label %195, !dbg !11099

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !11100
  %116 = trunc i8 %115 to i1, !dbg !11100
  br i1 %116, label %117, label %136, !dbg !11102

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !11103
  %119 = trunc i8 %118 to i1, !dbg !11103
  br i1 %119, label %120, label %128, !dbg !11106

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !11107
  %122 = trunc i64 %121 to i32, !dbg !11109
  %123 = load i32, i32* %5, align 4, !dbg !11110
  %124 = load i32, i32* %4, align 4, !dbg !11111
  %125 = udiv i32 %123, %124, !dbg !11112
  %126 = mul i32 %122, %125, !dbg !11113
  %127 = zext i32 %126 to i64, !dbg !11114
  store i64 %127, i64* %2, align 8, !dbg !11115
  br label %195, !dbg !11115

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !11116
  %130 = load i32, i32* %5, align 4, !dbg !11118
  %131 = zext i32 %130 to i64, !dbg !11119
  %132 = load i32, i32* %4, align 4, !dbg !11120
  %133 = zext i32 %132 to i64, !dbg !11120
  %134 = udiv i64 %131, %133, !dbg !11121
  %135 = mul i64 %129, %134, !dbg !11122
  store i64 %135, i64* %2, align 8, !dbg !11123
  br label %195, !dbg !11123

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !11124
  %138 = trunc i8 %137 to i1, !dbg !11124
  br i1 %138, label %139, label %151, !dbg !11127

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !11128
  %141 = load i32, i32* %5, align 4, !dbg !11130
  %142 = zext i32 %141 to i64, !dbg !11130
  %143 = mul i64 %140, %142, !dbg !11131
  %144 = load i64, i64* %12, align 8, !dbg !11132
  %145 = add i64 %143, %144, !dbg !11133
  %146 = load i32, i32* %4, align 4, !dbg !11134
  %147 = zext i32 %146 to i64, !dbg !11134
  %148 = udiv i64 %145, %147, !dbg !11135
  %149 = trunc i64 %148 to i32, !dbg !11136
  %150 = zext i32 %149 to i64, !dbg !11136
  store i64 %150, i64* %2, align 8, !dbg !11137
  br label %195, !dbg !11137

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !11138
  %153 = trunc i8 %152 to i1, !dbg !11138
  br i1 %153, label %154, label %174, !dbg !11140

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !11141
  %156 = zext i32 %155 to i64, !dbg !11141
  %157 = mul i64 31536000, %156, !dbg !11141
  %158 = add i64 %157, 4294967294, !dbg !11141
  %159 = udiv i64 %158, 4294967295, !dbg !11141
  %160 = load i32, i32* %5, align 4, !dbg !11141
  %161 = zext i32 %160 to i64, !dbg !11141
  %162 = mul i64 %159, %161, !dbg !11141
  %163 = icmp ule i64 %162, 4294967295, !dbg !11141
  br i1 %163, label %164, label %174, !dbg !11142

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !11143
  %166 = load i32, i32* %5, align 4, !dbg !11145
  %167 = zext i32 %166 to i64, !dbg !11145
  %168 = mul i64 %165, %167, !dbg !11146
  %169 = load i64, i64* %12, align 8, !dbg !11147
  %170 = add i64 %168, %169, !dbg !11148
  %171 = load i32, i32* %4, align 4, !dbg !11149
  %172 = zext i32 %171 to i64, !dbg !11149
  %173 = udiv i64 %170, %172, !dbg !11150
  store i64 %173, i64* %2, align 8, !dbg !11151
  br label %195, !dbg !11151

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !11152
  %176 = load i32, i32* %4, align 4, !dbg !11154
  %177 = zext i32 %176 to i64, !dbg !11154
  %178 = udiv i64 %175, %177, !dbg !11155
  %179 = load i32, i32* %5, align 4, !dbg !11156
  %180 = zext i32 %179 to i64, !dbg !11156
  %181 = mul i64 %178, %180, !dbg !11157
  %182 = load i64, i64* %3, align 8, !dbg !11158
  %183 = load i32, i32* %4, align 4, !dbg !11159
  %184 = zext i32 %183 to i64, !dbg !11159
  %185 = urem i64 %182, %184, !dbg !11160
  %186 = load i32, i32* %5, align 4, !dbg !11161
  %187 = zext i32 %186 to i64, !dbg !11161
  %188 = mul i64 %185, %187, !dbg !11162
  %189 = load i64, i64* %12, align 8, !dbg !11163
  %190 = add i64 %188, %189, !dbg !11164
  %191 = load i32, i32* %4, align 4, !dbg !11165
  %192 = zext i32 %191 to i64, !dbg !11165
  %193 = udiv i64 %190, %192, !dbg !11166
  %194 = add i64 %181, %193, !dbg !11167
  store i64 %194, i64* %2, align 8, !dbg !11168
  br label %195, !dbg !11168

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !11169
  ret i64 %196, !dbg !11170
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sem_take(%struct.k_sem.475* noundef %0, [1 x i64] %1) #1 !dbg !11171 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_sem.475*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_sem.475* %0, %struct.k_sem.475** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %4, metadata !11178, metadata !DIExpression()), !dbg !11179
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !11180, metadata !DIExpression()), !dbg !11181
  br label %7, !dbg !11182

7:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11183, !srcloc !11185
  br label %8, !dbg !11183

8:                                                ; preds = %7
  %9 = load %struct.k_sem.475*, %struct.k_sem.475** %4, align 4, !dbg !11186
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11187
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !11187
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !11187
  %13 = call i32 @z_impl_k_sem_take(%struct.k_sem.475* noundef %9, [1 x i64] %12) #10, !dbg !11187
  ret i32 %13, !dbg !11188
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_give(%struct.k_sem.475* noundef %0) #1 !dbg !11189 {
  %2 = alloca %struct.k_sem.475*, align 4
  store %struct.k_sem.475* %0, %struct.k_sem.475** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %2, metadata !11192, metadata !DIExpression()), !dbg !11193
  br label %3, !dbg !11194

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11195, !srcloc !11197
  br label %4, !dbg !11195

4:                                                ; preds = %3
  %5 = load %struct.k_sem.475*, %struct.k_sem.475** %2, align 4, !dbg !11198
  call void @z_impl_k_sem_give(%struct.k_sem.475* noundef %5) #10, !dbg !11199
  ret void, !dbg !11200
}

; Function Attrs: noinline nounwind optnone
define internal void @generic_hfclk_start() #1 !dbg !11201 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11202, metadata !DIExpression()), !dbg !11203
  call void @llvm.dbg.declare(metadata i8* %4, metadata !11204, metadata !DIExpression()), !dbg !11205
  store i8 0, i8* %4, align 1, !dbg !11205
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11206, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10823, metadata !DIExpression()) #9, !dbg !11208
  %6 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11210, !srcloc !10828
  store i32 %6, i32* %2, align 4, !dbg !11210
  %7 = load i32, i32* %2, align 4, !dbg !11211
  store i32 %7, i32* %5, align 4, !dbg !11207
  %8 = load i32, i32* @hfclk_users, align 4, !dbg !11212
  %9 = or i32 %8, 2, !dbg !11212
  store i32 %9, i32* @hfclk_users, align 4, !dbg !11212
  %10 = load i32, i32* @hfclk_users, align 4, !dbg !11213
  %11 = and i32 %10, 1, !dbg !11215
  %12 = icmp ne i32 %11, 0, !dbg !11215
  br i1 %12, label %13, label %21, !dbg !11216

13:                                               ; preds = %0
  %14 = bitcast i32* %3 to i8*, !dbg !11217
  %15 = call zeroext i1 @nrfx_clock_is_running(i32 noundef 1, i8* noundef %14) #10, !dbg !11219
  %16 = load i32, i32* %3, align 4, !dbg !11220
  %17 = icmp eq i32 %16, 1, !dbg !11222
  br i1 %17, label %18, label %20, !dbg !11223

18:                                               ; preds = %13
  store i8 1, i8* %4, align 1, !dbg !11224
  %19 = call i32* @get_hf_flags() #10, !dbg !11226
  call void @set_on_state(i32* noundef %19) #10, !dbg !11227
  br label %20, !dbg !11228

20:                                               ; preds = %18, %13
  br label %21, !dbg !11229

21:                                               ; preds = %20, %0
  %22 = load i32, i32* %5, align 4, !dbg !11230
  store i32 %22, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10856, metadata !DIExpression()) #9, !dbg !11231
  %23 = load i32, i32* %1, align 4, !dbg !11233
  %24 = icmp ne i32 %23, 0, !dbg !11234
  br i1 %24, label %25, label %26, !dbg !11235

25:                                               ; preds = %21
  br label %27, !dbg !11236

26:                                               ; preds = %21
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11237, !srcloc !10867
  br label %27, !dbg !11238

27:                                               ; preds = %25, %26
  %28 = load i8, i8* %4, align 1, !dbg !11239
  %29 = trunc i8 %28 to i1, !dbg !11239
  br i1 %29, label %30, label %31, !dbg !11241

30:                                               ; preds = %27
  call void @clkstarted_handle(%struct.device.397* noundef @__device_dts_ord_23, i32 noundef 0) #10, !dbg !11242
  br label %32, !dbg !11244

31:                                               ; preds = %27
  call void @hfclk_start() #10, !dbg !11245
  br label %32, !dbg !11246

32:                                               ; preds = %31, %30
  ret void, !dbg !11246
}

; Function Attrs: noinline nounwind optnone
define internal void @generic_hfclk_stop() #1 !dbg !11247 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11248, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10823, metadata !DIExpression()) #9, !dbg !11250
  %4 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11252, !srcloc !10828
  store i32 %4, i32* %2, align 4, !dbg !11252
  %5 = load i32, i32* %2, align 4, !dbg !11253
  store i32 %5, i32* %3, align 4, !dbg !11249
  %6 = load i32, i32* @hfclk_users, align 4, !dbg !11254
  %7 = and i32 %6, -3, !dbg !11254
  store i32 %7, i32* @hfclk_users, align 4, !dbg !11254
  %8 = load i32, i32* @hfclk_users, align 4, !dbg !11255
  %9 = and i32 %8, 1, !dbg !11257
  %10 = icmp ne i32 %9, 0, !dbg !11257
  br i1 %10, label %12, label %11, !dbg !11258

11:                                               ; preds = %0
  call void @hfclk_stop() #10, !dbg !11259
  br label %12, !dbg !11261

12:                                               ; preds = %11, %0
  %13 = load i32, i32* %3, align 4, !dbg !11262
  store i32 %13, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10856, metadata !DIExpression()) #9, !dbg !11263
  %14 = load i32, i32* %1, align 4, !dbg !11265
  %15 = icmp ne i32 %14, 0, !dbg !11266
  br i1 %15, label %16, label %17, !dbg !11267

16:                                               ; preds = %12
  br label %18, !dbg !11268

17:                                               ; preds = %12
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11269, !srcloc !10867
  br label %18, !dbg !11270

18:                                               ; preds = %16, %17
  ret void, !dbg !11271
}

; Function Attrs: noinline nounwind optnone
define internal void @lfclk_start() #1 !dbg !11272 {
  call void @nrfx_clock_lfclk_start() #10, !dbg !11273
  ret void, !dbg !11274
}

; Function Attrs: noinline nounwind optnone
define internal void @lfclk_stop() #1 !dbg !11275 {
  call void @nrfx_clock_lfclk_stop() #10, !dbg !11276
  ret void, !dbg !11277
}

; Function Attrs: noinline nounwind optnone
define internal void @nrfx_clock_lfclk_stop() #1 !dbg !11278 {
  call void @nrfx_clock_stop(i32 noundef 0) #10, !dbg !11279
  ret void, !dbg !11280
}

; Function Attrs: noinline nounwind optnone
define internal void @nrfx_clock_lfclk_start() #1 !dbg !11281 {
  call void @nrfx_clock_start(i32 noundef 0) #10, !dbg !11282
  ret void, !dbg !11283
}

; Function Attrs: noinline nounwind optnone
define internal void @hfclk_stop() #1 !dbg !11284 {
  call void @nrfx_clock_hfclk_stop() #10, !dbg !11285
  ret void, !dbg !11286
}

; Function Attrs: noinline nounwind optnone
define internal void @nrfx_clock_hfclk_stop() #1 !dbg !11287 {
  call void @nrfx_clock_stop(i32 noundef 1) #10, !dbg !11288
  ret void, !dbg !11289
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrfx_clock_is_running(i32 noundef %0, i8* noundef %1) #1 !dbg !11290 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11293, metadata !DIExpression()), !dbg !11294
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11295, metadata !DIExpression()), !dbg !11296
  %5 = load i32, i32* %3, align 4, !dbg !11297
  %6 = load i8*, i8** %4, align 4, !dbg !11298
  %7 = call zeroext i1 @nrf_clock_is_running(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef %5, i8* noundef %6) #10, !dbg !11299
  ret i1 %7, !dbg !11300
}

; Function Attrs: noinline nounwind optnone
define internal i32* @get_hf_flags() #1 !dbg !11301 {
  %1 = alloca %struct.nrf_clock_control_data*, align 4
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_data** %1, metadata !11304, metadata !DIExpression()), !dbg !11305
  %2 = load i8*, i8** getelementptr inbounds (%struct.device.397, %struct.device.397* @__device_dts_ord_23, i32 0, i32 4), align 4, !dbg !11306
  %3 = bitcast i8* %2 to %struct.nrf_clock_control_data*, !dbg !11307
  store %struct.nrf_clock_control_data* %3, %struct.nrf_clock_control_data** %1, align 4, !dbg !11305
  %4 = load %struct.nrf_clock_control_data*, %struct.nrf_clock_control_data** %1, align 4, !dbg !11308
  %5 = getelementptr inbounds %struct.nrf_clock_control_data, %struct.nrf_clock_control_data* %4, i32 0, i32 1, !dbg !11309
  %6 = getelementptr inbounds [2 x %struct.nrf_clock_control_sub_data], [2 x %struct.nrf_clock_control_sub_data]* %5, i32 0, i32 0, !dbg !11308
  %7 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %6, i32 0, i32 2, !dbg !11310
  ret i32* %7, !dbg !11311
}

; Function Attrs: noinline nounwind optnone
define internal void @set_on_state(i32* noundef %0) #1 !dbg !11312 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !11315, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11317, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10823, metadata !DIExpression()) #9, !dbg !11319
  %6 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11321, !srcloc !10828
  store i32 %6, i32* %3, align 4, !dbg !11321
  %7 = load i32, i32* %3, align 4, !dbg !11322
  store i32 %7, i32* %5, align 4, !dbg !11318
  %8 = load i32*, i32** %4, align 4, !dbg !11323
  %9 = load i32, i32* %8, align 4, !dbg !11323
  %10 = and i32 %9, 192, !dbg !11323
  %11 = or i32 2, %10, !dbg !11324
  %12 = load i32*, i32** %4, align 4, !dbg !11325
  store i32 %11, i32* %12, align 4, !dbg !11326
  %13 = load i32, i32* %5, align 4, !dbg !11327
  store i32 %13, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10856, metadata !DIExpression()) #9, !dbg !11328
  %14 = load i32, i32* %2, align 4, !dbg !11330
  %15 = icmp ne i32 %14, 0, !dbg !11331
  br i1 %15, label %16, label %17, !dbg !11332

16:                                               ; preds = %1
  br label %18, !dbg !11333

17:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11334, !srcloc !10867
  br label %18, !dbg !11335

18:                                               ; preds = %16, %17
  ret void, !dbg !11336
}

; Function Attrs: noinline nounwind optnone
define internal void @clkstarted_handle(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !11337 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.nrf_clock_control_sub_data*, align 4
  %6 = alloca void (%struct.device.397*, i8*, i8*)*, align 4
  %7 = alloca i8*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !11340, metadata !DIExpression()), !dbg !11341
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11342, metadata !DIExpression()), !dbg !11343
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_sub_data** %5, metadata !11344, metadata !DIExpression()), !dbg !11345
  %8 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11346
  %9 = load i32, i32* %4, align 4, !dbg !11347
  %10 = call %struct.nrf_clock_control_sub_data* @get_sub_data(%struct.device.397* noundef %8, i32 noundef %9) #10, !dbg !11348
  store %struct.nrf_clock_control_sub_data* %10, %struct.nrf_clock_control_sub_data** %5, align 4, !dbg !11345
  call void @llvm.dbg.declare(metadata void (%struct.device.397*, i8*, i8*)** %6, metadata !11349, metadata !DIExpression()), !dbg !11350
  %11 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %5, align 4, !dbg !11351
  %12 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %11, i32 0, i32 0, !dbg !11352
  %13 = load void (%struct.device.397*, i8*, i8*)*, void (%struct.device.397*, i8*, i8*)** %12, align 4, !dbg !11352
  store void (%struct.device.397*, i8*, i8*)* %13, void (%struct.device.397*, i8*, i8*)** %6, align 4, !dbg !11350
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11353, metadata !DIExpression()), !dbg !11354
  %14 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %5, align 4, !dbg !11355
  %15 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %14, i32 0, i32 1, !dbg !11356
  %16 = load i8*, i8** %15, align 4, !dbg !11356
  store i8* %16, i8** %7, align 4, !dbg !11354
  %17 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %5, align 4, !dbg !11357
  %18 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %17, i32 0, i32 0, !dbg !11358
  store void (%struct.device.397*, i8*, i8*)* null, void (%struct.device.397*, i8*, i8*)** %18, align 4, !dbg !11359
  %19 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %5, align 4, !dbg !11360
  %20 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %19, i32 0, i32 2, !dbg !11361
  call void @set_on_state(i32* noundef %20) #10, !dbg !11362
  %21 = load void (%struct.device.397*, i8*, i8*)*, void (%struct.device.397*, i8*, i8*)** %6, align 4, !dbg !11363
  %22 = icmp ne void (%struct.device.397*, i8*, i8*)* %21, null, !dbg !11363
  br i1 %22, label %23, label %29, !dbg !11365

23:                                               ; preds = %2
  %24 = load void (%struct.device.397*, i8*, i8*)*, void (%struct.device.397*, i8*, i8*)** %6, align 4, !dbg !11366
  %25 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11368
  %26 = load i32, i32* %4, align 4, !dbg !11369
  %27 = inttoptr i32 %26 to i8*, !dbg !11370
  %28 = load i8*, i8** %7, align 4, !dbg !11371
  call void %24(%struct.device.397* noundef %25, i8* noundef %27, i8* noundef %28) #10, !dbg !11366
  br label %29, !dbg !11372

29:                                               ; preds = %23, %2
  ret void, !dbg !11373
}

; Function Attrs: noinline nounwind optnone
define internal void @hfclk_start() #1 !dbg !11374 {
  call void @nrfx_clock_hfclk_start() #10, !dbg !11375
  ret void, !dbg !11376
}

; Function Attrs: noinline nounwind optnone
define internal void @nrfx_clock_hfclk_start() #1 !dbg !11377 {
  call void @nrfx_clock_start(i32 noundef 1) #10, !dbg !11378
  ret void, !dbg !11379
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_clock_is_running(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !11380 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.NRF_CLOCK_Type*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %5, metadata !11385, metadata !DIExpression()), !dbg !11386
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11387, metadata !DIExpression()), !dbg !11388
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11389, metadata !DIExpression()), !dbg !11390
  %8 = load i32, i32* %6, align 4, !dbg !11391
  switch i32 %8, label %49 [
    i32 0, label %9
    i32 1, label %29
  ], !dbg !11392

9:                                                ; preds = %3
  %10 = load i8*, i8** %7, align 4, !dbg !11393
  %11 = icmp ne i8* %10, null, !dbg !11396
  br i1 %11, label %12, label %20, !dbg !11397

12:                                               ; preds = %9
  %13 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !11398
  %14 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %13, i32 0, i32 21, !dbg !11400
  %15 = load volatile i32, i32* %14, align 4, !dbg !11400
  %16 = and i32 %15, 3, !dbg !11401
  %17 = lshr i32 %16, 0, !dbg !11402
  %18 = load i8*, i8** %7, align 4, !dbg !11403
  %19 = bitcast i8* %18 to i32*, !dbg !11404
  store i32 %17, i32* %19, align 4, !dbg !11405
  br label %20, !dbg !11406

20:                                               ; preds = %12, %9
  %21 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !11407
  %22 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %21, i32 0, i32 21, !dbg !11409
  %23 = load volatile i32, i32* %22, align 4, !dbg !11409
  %24 = and i32 %23, 65536, !dbg !11410
  %25 = lshr i32 %24, 16, !dbg !11411
  %26 = icmp ne i32 %25, 0, !dbg !11411
  br i1 %26, label %27, label %28, !dbg !11412

27:                                               ; preds = %20
  store i1 true, i1* %4, align 1, !dbg !11413
  br label %51, !dbg !11413

28:                                               ; preds = %20
  br label %50, !dbg !11415

29:                                               ; preds = %3
  %30 = load i8*, i8** %7, align 4, !dbg !11416
  %31 = icmp ne i8* %30, null, !dbg !11418
  br i1 %31, label %32, label %40, !dbg !11419

32:                                               ; preds = %29
  %33 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !11420
  %34 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %33, i32 0, i32 18, !dbg !11422
  %35 = load volatile i32, i32* %34, align 4, !dbg !11422
  %36 = and i32 %35, 1, !dbg !11423
  %37 = lshr i32 %36, 0, !dbg !11424
  %38 = load i8*, i8** %7, align 4, !dbg !11425
  %39 = bitcast i8* %38 to i32*, !dbg !11426
  store i32 %37, i32* %39, align 4, !dbg !11427
  br label %40, !dbg !11428

40:                                               ; preds = %32, %29
  %41 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !11429
  %42 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %41, i32 0, i32 18, !dbg !11431
  %43 = load volatile i32, i32* %42, align 4, !dbg !11431
  %44 = and i32 %43, 65536, !dbg !11432
  %45 = lshr i32 %44, 16, !dbg !11433
  %46 = icmp ne i32 %45, 0, !dbg !11433
  br i1 %46, label %47, label %48, !dbg !11434

47:                                               ; preds = %40
  store i1 true, i1* %4, align 1, !dbg !11435
  br label %51, !dbg !11435

48:                                               ; preds = %40
  br label %50, !dbg !11437

49:                                               ; preds = %3
  store i1 false, i1* %4, align 1, !dbg !11438
  br label %51, !dbg !11438

50:                                               ; preds = %48, %28
  store i1 false, i1* %4, align 1, !dbg !11439
  br label %51, !dbg !11439

51:                                               ; preds = %50, %49, %47, %27
  %52 = load i1, i1* %4, align 1, !dbg !11440
  ret i1 %52, !dbg !11440
}

; Function Attrs: noinline nounwind optnone
define internal i32 @clk_init(%struct.device.397* noundef %0) #1 !dbg !941 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.nrf_clock_control_sub_data*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11443, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @z_arm_irq_priority_set(i32 noundef 0, i32 noundef 1, i32 noundef 0) #10, !dbg !11448
  %8 = call i32 @nrfx_clock_init(void (i32)* noundef @clock_event_handler) #10, !dbg !11450
  store i32 %8, i32* %4, align 4, !dbg !11451
  %9 = load i32, i32* %4, align 4, !dbg !11452
  %10 = icmp ne i32 %9, 195887104, !dbg !11454
  br i1 %10, label %11, label %12, !dbg !11455

11:                                               ; preds = %1
  store i32 -5, i32* %2, align 4, !dbg !11456
  br label %35, !dbg !11456

12:                                               ; preds = %1
  call void @hfclkaudio_init() #10, !dbg !11458
  call void @nrfx_clock_enable() #10, !dbg !11459
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11460, metadata !DIExpression()), !dbg !11462
  store i32 0, i32* %6, align 4, !dbg !11462
  br label %13, !dbg !11463

13:                                               ; preds = %31, %12
  %14 = load i32, i32* %6, align 4, !dbg !11464
  %15 = icmp ult i32 %14, 2, !dbg !11466
  br i1 %15, label %16, label %34, !dbg !11467

16:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_sub_data** %7, metadata !11468, metadata !DIExpression()), !dbg !11470
  %17 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11471
  %18 = load i32, i32* %6, align 4, !dbg !11472
  %19 = call %struct.nrf_clock_control_sub_data* @get_sub_data(%struct.device.397* noundef %17, i32 noundef %18) #10, !dbg !11473
  store %struct.nrf_clock_control_sub_data* %19, %struct.nrf_clock_control_sub_data** %7, align 4, !dbg !11470
  %20 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11474
  %21 = load i32, i32* %6, align 4, !dbg !11475
  %22 = call %struct.onoff_manager* @get_onoff_manager(%struct.device.397* noundef %20, i32 noundef %21) #10, !dbg !11476
  %23 = call i32 @onoff_manager_init(%struct.onoff_manager* noundef %22, %struct.onoff_transitions* noundef @clk_init.transitions) #10, !dbg !11477
  store i32 %23, i32* %5, align 4, !dbg !11478
  %24 = load i32, i32* %5, align 4, !dbg !11479
  %25 = icmp slt i32 %24, 0, !dbg !11481
  br i1 %25, label %26, label %28, !dbg !11482

26:                                               ; preds = %16
  %27 = load i32, i32* %5, align 4, !dbg !11483
  store i32 %27, i32* %2, align 4, !dbg !11485
  br label %35, !dbg !11485

28:                                               ; preds = %16
  %29 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %7, align 4, !dbg !11486
  %30 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %29, i32 0, i32 2, !dbg !11487
  store i32 1, i32* %30, align 4, !dbg !11488
  br label %31, !dbg !11489

31:                                               ; preds = %28
  %32 = load i32, i32* %6, align 4, !dbg !11490
  %33 = add i32 %32, 1, !dbg !11490
  store i32 %33, i32* %6, align 4, !dbg !11490
  br label %13, !dbg !11491, !llvm.loop !11492

34:                                               ; preds = %13
  store i32 0, i32* %2, align 4, !dbg !11494
  br label %35, !dbg !11494

35:                                               ; preds = %34, %26, %11
  %36 = load i32, i32* %2, align 4, !dbg !11495
  ret i32 %36, !dbg !11495
}

; Function Attrs: noinline nounwind optnone
define internal void @clock_event_handler(i32 noundef %0) #1 !dbg !11496 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca %struct.nrf_clock_control_sub_data*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !11499, metadata !DIExpression()), !dbg !11500
  store %struct.device.397* @__device_dts_ord_23, %struct.device.397** %3, align 4, !dbg !11500
  %5 = load i32, i32* %2, align 4, !dbg !11501
  switch i32 %5, label %20 [
    i32 0, label %6
    i32 1, label %17
    i32 3, label %19
  ], !dbg !11502

6:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_sub_data** %4, metadata !11503, metadata !DIExpression()), !dbg !11506
  %7 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11507
  %8 = call %struct.nrf_clock_control_sub_data* @get_sub_data(%struct.device.397* noundef %7, i32 noundef 0) #10, !dbg !11508
  store %struct.nrf_clock_control_sub_data* %8, %struct.nrf_clock_control_sub_data** %4, align 4, !dbg !11506
  %9 = load %struct.nrf_clock_control_sub_data*, %struct.nrf_clock_control_sub_data** %4, align 4, !dbg !11509
  %10 = getelementptr inbounds %struct.nrf_clock_control_sub_data, %struct.nrf_clock_control_sub_data* %9, i32 0, i32 2, !dbg !11509
  %11 = load i32, i32* %10, align 4, !dbg !11509
  %12 = and i32 %11, 7, !dbg !11509
  %13 = icmp eq i32 %12, 0, !dbg !11511
  br i1 %13, label %14, label %16, !dbg !11512

14:                                               ; preds = %6
  %15 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11513
  call void @clkstarted_handle(%struct.device.397* noundef %15, i32 noundef 0) #10, !dbg !11515
  br label %16, !dbg !11516

16:                                               ; preds = %14, %6
  br label %21, !dbg !11517

17:                                               ; preds = %1
  %18 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11518
  call void @clkstarted_handle(%struct.device.397* noundef %18, i32 noundef 1) #10, !dbg !11519
  br label %21, !dbg !11520

19:                                               ; preds = %1
  br label %21, !dbg !11521

20:                                               ; preds = %1
  br label %21, !dbg !11522

21:                                               ; preds = %20, %19, %17, %16
  ret void, !dbg !11523
}

; Function Attrs: noinline nounwind optnone
define internal void @hfclkaudio_init() #1 !dbg !11524 {
  ret void, !dbg !11525
}

; Function Attrs: noinline nounwind optnone
define internal %struct.onoff_manager* @get_onoff_manager(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !11526 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.nrf_clock_control_data*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !11529, metadata !DIExpression()), !dbg !11530
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11531, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_data** %5, metadata !11533, metadata !DIExpression()), !dbg !11534
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11535
  %7 = getelementptr inbounds %struct.device.397, %struct.device.397* %6, i32 0, i32 4, !dbg !11536
  %8 = load i8*, i8** %7, align 4, !dbg !11536
  %9 = bitcast i8* %8 to %struct.nrf_clock_control_data*, !dbg !11535
  store %struct.nrf_clock_control_data* %9, %struct.nrf_clock_control_data** %5, align 4, !dbg !11534
  %10 = load %struct.nrf_clock_control_data*, %struct.nrf_clock_control_data** %5, align 4, !dbg !11537
  %11 = getelementptr inbounds %struct.nrf_clock_control_data, %struct.nrf_clock_control_data* %10, i32 0, i32 0, !dbg !11538
  %12 = load i32, i32* %4, align 4, !dbg !11539
  %13 = getelementptr inbounds [2 x %struct.onoff_manager], [2 x %struct.onoff_manager]* %11, i32 0, i32 %12, !dbg !11537
  ret %struct.onoff_manager* %13, !dbg !11540
}

; Function Attrs: noinline nounwind optnone
define internal void @onoff_start(%struct.onoff_manager* noundef %0, void (%struct.onoff_manager*, i32)* noundef %1) #1 !dbg !11541 {
  %3 = alloca %struct.onoff_manager*, align 4
  %4 = alloca void (%struct.onoff_manager*, i32)*, align 4
  %5 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %3, metadata !11542, metadata !DIExpression()), !dbg !11543
  store void (%struct.onoff_manager*, i32)* %1, void (%struct.onoff_manager*, i32)** %4, align 4
  call void @llvm.dbg.declare(metadata void (%struct.onoff_manager*, i32)** %4, metadata !11544, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11546, metadata !DIExpression()), !dbg !11547
  %6 = load %struct.onoff_manager*, %struct.onoff_manager** %3, align 4, !dbg !11548
  %7 = call i8* @get_subsys(%struct.onoff_manager* noundef %6) #10, !dbg !11549
  %8 = load void (%struct.onoff_manager*, i32)*, void (%struct.onoff_manager*, i32)** %4, align 4, !dbg !11550
  %9 = bitcast void (%struct.onoff_manager*, i32)* %8 to i8*, !dbg !11550
  %10 = call i32 @async_start(%struct.device.397* noundef @__device_dts_ord_23, i8* noundef %7, void (%struct.device.397*, i8*, i8*)* noundef @onoff_started_callback, i8* noundef %9, i32 noundef 64) #10, !dbg !11551
  store i32 %10, i32* %5, align 4, !dbg !11552
  %11 = load i32, i32* %5, align 4, !dbg !11553
  %12 = icmp slt i32 %11, 0, !dbg !11555
  br i1 %12, label %13, label %17, !dbg !11556

13:                                               ; preds = %2
  %14 = load void (%struct.onoff_manager*, i32)*, void (%struct.onoff_manager*, i32)** %4, align 4, !dbg !11557
  %15 = load %struct.onoff_manager*, %struct.onoff_manager** %3, align 4, !dbg !11559
  %16 = load i32, i32* %5, align 4, !dbg !11560
  call void %14(%struct.onoff_manager* noundef %15, i32 noundef %16) #10, !dbg !11557
  br label %17, !dbg !11561

17:                                               ; preds = %13, %2
  ret void, !dbg !11562
}

; Function Attrs: noinline nounwind optnone
define internal void @onoff_stop(%struct.onoff_manager* noundef %0, void (%struct.onoff_manager*, i32)* noundef %1) #1 !dbg !11563 {
  %3 = alloca %struct.onoff_manager*, align 4
  %4 = alloca void (%struct.onoff_manager*, i32)*, align 4
  %5 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %3, metadata !11564, metadata !DIExpression()), !dbg !11565
  store void (%struct.onoff_manager*, i32)* %1, void (%struct.onoff_manager*, i32)** %4, align 4
  call void @llvm.dbg.declare(metadata void (%struct.onoff_manager*, i32)** %4, metadata !11566, metadata !DIExpression()), !dbg !11567
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11568, metadata !DIExpression()), !dbg !11569
  %6 = load %struct.onoff_manager*, %struct.onoff_manager** %3, align 4, !dbg !11570
  %7 = call i8* @get_subsys(%struct.onoff_manager* noundef %6) #10, !dbg !11571
  %8 = call i32 @stop(%struct.device.397* noundef @__device_dts_ord_23, i8* noundef %7, i32 noundef 64) #10, !dbg !11572
  store i32 %8, i32* %5, align 4, !dbg !11573
  %9 = load void (%struct.onoff_manager*, i32)*, void (%struct.onoff_manager*, i32)** %4, align 4, !dbg !11574
  %10 = load %struct.onoff_manager*, %struct.onoff_manager** %3, align 4, !dbg !11575
  %11 = load i32, i32* %5, align 4, !dbg !11576
  call void %9(%struct.onoff_manager* noundef %10, i32 noundef %11) #10, !dbg !11574
  ret void, !dbg !11577
}

; Function Attrs: noinline nounwind optnone
define internal i8* @get_subsys(%struct.onoff_manager* noundef %0) #1 !dbg !11578 {
  %2 = alloca %struct.onoff_manager*, align 4
  %3 = alloca %struct.nrf_clock_control_data*, align 4
  %4 = alloca i32, align 4
  store %struct.onoff_manager* %0, %struct.onoff_manager** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %2, metadata !11581, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.declare(metadata %struct.nrf_clock_control_data** %3, metadata !11583, metadata !DIExpression()), !dbg !11584
  %5 = load i8*, i8** getelementptr inbounds (%struct.device.397, %struct.device.397* @__device_dts_ord_23, i32 0, i32 4), align 4, !dbg !11585
  %6 = bitcast i8* %5 to %struct.nrf_clock_control_data*, !dbg !11586
  store %struct.nrf_clock_control_data* %6, %struct.nrf_clock_control_data** %3, align 4, !dbg !11584
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11587, metadata !DIExpression()), !dbg !11588
  %7 = load %struct.onoff_manager*, %struct.onoff_manager** %2, align 4, !dbg !11589
  %8 = load %struct.nrf_clock_control_data*, %struct.nrf_clock_control_data** %3, align 4, !dbg !11590
  %9 = getelementptr inbounds %struct.nrf_clock_control_data, %struct.nrf_clock_control_data* %8, i32 0, i32 0, !dbg !11591
  %10 = getelementptr inbounds [2 x %struct.onoff_manager], [2 x %struct.onoff_manager]* %9, i32 0, i32 0, !dbg !11590
  %11 = ptrtoint %struct.onoff_manager* %7 to i32, !dbg !11592
  %12 = ptrtoint %struct.onoff_manager* %10 to i32, !dbg !11592
  %13 = sub i32 %11, %12, !dbg !11592
  %14 = sdiv exact i32 %13, 28, !dbg !11592
  store i32 %14, i32* %4, align 4, !dbg !11588
  %15 = load i32, i32* %4, align 4, !dbg !11593
  %16 = inttoptr i32 %15 to i8*, !dbg !11594
  ret i8* %16, !dbg !11595
}

; Function Attrs: noinline nounwind optnone
define internal void @onoff_started_callback(%struct.device.397* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !11596 {
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.onoff_manager*, align 4
  %9 = alloca void (%struct.onoff_manager*, i32)*, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !11597, metadata !DIExpression()), !dbg !11598
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11599, metadata !DIExpression()), !dbg !11600
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11601, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11603, metadata !DIExpression()), !dbg !11604
  %10 = load i8*, i8** %5, align 4, !dbg !11605
  %11 = ptrtoint i8* %10 to i32, !dbg !11606
  store i32 %11, i32* %7, align 4, !dbg !11604
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %8, metadata !11607, metadata !DIExpression()), !dbg !11608
  %12 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !11609
  %13 = load i32, i32* %7, align 4, !dbg !11610
  %14 = call %struct.onoff_manager* @get_onoff_manager(%struct.device.397* noundef %12, i32 noundef %13) #10, !dbg !11611
  store %struct.onoff_manager* %14, %struct.onoff_manager** %8, align 4, !dbg !11608
  call void @llvm.dbg.declare(metadata void (%struct.onoff_manager*, i32)** %9, metadata !11612, metadata !DIExpression()), !dbg !11613
  %15 = load i8*, i8** %6, align 4, !dbg !11614
  %16 = bitcast i8* %15 to void (%struct.onoff_manager*, i32)*, !dbg !11614
  store void (%struct.onoff_manager*, i32)* %16, void (%struct.onoff_manager*, i32)** %9, align 4, !dbg !11613
  %17 = load void (%struct.onoff_manager*, i32)*, void (%struct.onoff_manager*, i32)** %9, align 4, !dbg !11615
  %18 = load %struct.onoff_manager*, %struct.onoff_manager** %8, align 4, !dbg !11616
  call void %17(%struct.onoff_manager* noundef %18, i32 noundef 0) #10, !dbg !11615
  ret void, !dbg !11617
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.onoff_manager* @z_nrf_clock_control_get_onoff(i8* noundef %0) #1 !dbg !11618 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11621, metadata !DIExpression()), !dbg !11622
  %3 = load i8*, i8** %2, align 4, !dbg !11623
  %4 = ptrtoint i8* %3 to i32, !dbg !11624
  %5 = call %struct.onoff_manager* @get_onoff_manager(%struct.device.397* noundef @__device_dts_ord_23, i32 noundef %4) #10, !dbg !11625
  ret %struct.onoff_manager* %5, !dbg !11626
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_nrf_clock_bt_ctlr_hf_request() #1 !dbg !11627 {
  %1 = call i32 @atomic_or.57(i32* noundef @hfclk_users, i32 noundef 1) #10, !dbg !11628
  %2 = and i32 %1, 2, !dbg !11630
  %3 = icmp ne i32 %2, 0, !dbg !11630
  br i1 %3, label %4, label %5, !dbg !11631

4:                                                ; preds = %0
  br label %6, !dbg !11632

5:                                                ; preds = %0
  call void @hfclk_start() #10, !dbg !11634
  br label %6, !dbg !11635

6:                                                ; preds = %5, %4
  ret void, !dbg !11635
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_or.57(i32* noundef %0, i32 noundef %1) #1 !dbg !11636 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !11637, metadata !DIExpression()), !dbg !11638
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11639, metadata !DIExpression()), !dbg !11640
  br label %5, !dbg !11641

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11642, !srcloc !11644
  br label %6, !dbg !11642

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !11645
  %8 = load i32, i32* %4, align 4, !dbg !11646
  %9 = call i32 @z_impl_atomic_or(i32* noundef %7, i32 noundef %8) #10, !dbg !11647
  ret i32 %9, !dbg !11648
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_nrf_clock_bt_ctlr_hf_release() #1 !dbg !11649 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11650, metadata !DIExpression()), !dbg !11651
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10823, metadata !DIExpression()) #9, !dbg !11652
  %4 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11654, !srcloc !10828
  store i32 %4, i32* %2, align 4, !dbg !11654
  %5 = load i32, i32* %2, align 4, !dbg !11655
  store i32 %5, i32* %3, align 4, !dbg !11651
  %6 = load i32, i32* @hfclk_users, align 4, !dbg !11656
  %7 = and i32 %6, -2, !dbg !11656
  store i32 %7, i32* @hfclk_users, align 4, !dbg !11656
  %8 = load i32, i32* @hfclk_users, align 4, !dbg !11657
  %9 = and i32 %8, 2, !dbg !11659
  %10 = icmp ne i32 %9, 0, !dbg !11659
  br i1 %10, label %12, label %11, !dbg !11660

11:                                               ; preds = %0
  call void @hfclk_stop() #10, !dbg !11661
  br label %12, !dbg !11663

12:                                               ; preds = %11, %0
  %13 = load i32, i32* %3, align 4, !dbg !11664
  store i32 %13, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10856, metadata !DIExpression()) #9, !dbg !11665
  %14 = load i32, i32* %1, align 4, !dbg !11667
  %15 = icmp ne i32 %14, 0, !dbg !11668
  br i1 %15, label %16, label %17, !dbg !11669

16:                                               ; preds = %12
  br label %18, !dbg !11670

17:                                               ; preds = %12
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11671, !srcloc !10867
  br label %18, !dbg !11672

18:                                               ; preds = %16, %17
  ret void, !dbg !11673
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_nrf_clock_control_lf_on(i32 noundef %0) #1 !dbg !745 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.onoff_manager*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11674, metadata !DIExpression()), !dbg !11675
  %5 = call i32 @atomic_set(i32* noundef @z_nrf_clock_control_lf_on.on, i32 noundef 1) #10, !dbg !11676
  %6 = icmp eq i32 %5, 0, !dbg !11678
  br i1 %6, label %7, label %11, !dbg !11679

7:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11680, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.declare(metadata %struct.onoff_manager** %4, metadata !11683, metadata !DIExpression()), !dbg !11684
  %8 = call %struct.onoff_manager* @get_onoff_manager(%struct.device.397* noundef @__device_dts_ord_23, i32 noundef 1) #10, !dbg !11685
  store %struct.onoff_manager* %8, %struct.onoff_manager** %4, align 4, !dbg !11684
  call void @sys_notify_init_spinwait(%struct.sys_notify* noundef getelementptr inbounds (%struct.onoff_client, %struct.onoff_client* @z_nrf_clock_control_lf_on.cli, i32 0, i32 1)) #10, !dbg !11686
  %9 = load %struct.onoff_manager*, %struct.onoff_manager** %4, align 4, !dbg !11687
  %10 = call i32 @onoff_request(%struct.onoff_manager* noundef %9, %struct.onoff_client* noundef @z_nrf_clock_control_lf_on.cli) #10, !dbg !11688
  store i32 %10, i32* %3, align 4, !dbg !11689
  br label %11, !dbg !11690

11:                                               ; preds = %7, %1
  %12 = load i32, i32* %2, align 4, !dbg !11691
  switch i32 %12, label %16 [
    i32 1, label %13
    i32 2, label %13
    i32 0, label %15
  ], !dbg !11692

13:                                               ; preds = %11, %11
  %14 = load i32, i32* %2, align 4, !dbg !11693
  call void @lfclk_spinwait(i32 noundef %14) #10, !dbg !11695
  br label %17, !dbg !11696

15:                                               ; preds = %11
  br label %17, !dbg !11697

16:                                               ; preds = %11
  br label %17, !dbg !11698

17:                                               ; preds = %16, %15, %13
  ret void, !dbg !11699
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_set(i32* noundef %0, i32 noundef %1) #1 !dbg !11700 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !11701, metadata !DIExpression()), !dbg !11702
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11703, metadata !DIExpression()), !dbg !11704
  br label %5, !dbg !11705

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11706, !srcloc !11708
  br label %6, !dbg !11706

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !11709
  %8 = load i32, i32* %4, align 4, !dbg !11710
  %9 = call i32 @z_impl_atomic_set(i32* noundef %7, i32 noundef %8) #10, !dbg !11711
  ret i32 %9, !dbg !11712
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_notify_init_spinwait(%struct.sys_notify* noundef %0) #1 !dbg !11713 {
  %2 = alloca %struct.sys_notify*, align 4
  %3 = alloca %struct.sys_notify, align 4
  store %struct.sys_notify* %0, %struct.sys_notify** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.sys_notify** %2, metadata !11717, metadata !DIExpression()), !dbg !11718
  %4 = load %struct.sys_notify*, %struct.sys_notify** %2, align 4, !dbg !11719
  %5 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %3, i32 0, i32 0, !dbg !11720
  %6 = bitcast %union.method* %5 to i8*, !dbg !11720
  call void @llvm.memset.p0i8.i32(i8* align 4 %6, i8 0, i32 4, i1 false), !dbg !11720
  %7 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %3, i32 0, i32 1, !dbg !11720
  store volatile i32 1, i32* %7, align 4, !dbg !11720
  %8 = getelementptr inbounds %struct.sys_notify, %struct.sys_notify* %3, i32 0, i32 2, !dbg !11720
  store volatile i32 0, i32* %8, align 4, !dbg !11720
  %9 = bitcast %struct.sys_notify* %4 to i8*, !dbg !11721
  %10 = bitcast %struct.sys_notify* %3 to i8*, !dbg !11721
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %9, i8* align 4 %10, i32 12, i1 true), !dbg !11721
  ret void, !dbg !11722
}

; Function Attrs: noinline nounwind optnone
define internal void @lfclk_spinwait(i32 noundef %0) #1 !dbg !883 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11723, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11725, metadata !DIExpression()), !dbg !11726
  %8 = load i32, i32* %4, align 4, !dbg !11727
  %9 = icmp eq i32 %8, 1, !dbg !11729
  br i1 %9, label %10, label %14, !dbg !11730

10:                                               ; preds = %1
  %11 = call i32 @nrf_clock_lf_srccopy_get(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*)) #10, !dbg !11731
  %12 = icmp eq i32 %11, 1, !dbg !11732
  br i1 %12, label %13, label %14, !dbg !11733

13:                                               ; preds = %10
  br label %72, !dbg !11734

14:                                               ; preds = %10, %1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !11736, metadata !DIExpression()), !dbg !11737
  %15 = call zeroext i1 @k_is_in_isr() #10, !dbg !11738
  br i1 %15, label %18, label %16, !dbg !11739

16:                                               ; preds = %14
  %17 = call zeroext i1 @k_is_pre_kernel() #10, !dbg !11740
  br label %18, !dbg !11739

18:                                               ; preds = %16, %14
  %19 = phi i1 [ true, %14 ], [ %17, %16 ]
  %20 = zext i1 %19 to i8, !dbg !11737
  store i8 %20, i8* %6, align 1, !dbg !11737
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11741, metadata !DIExpression()), !dbg !11742
  %21 = load i8, i8* %6, align 1, !dbg !11743
  %22 = trunc i8 %21 to i1, !dbg !11743
  br i1 %22, label %23, label %26, !dbg !11743

23:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10823, metadata !DIExpression()) #9, !dbg !11744
  %24 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11746, !srcloc !10828
  store i32 %24, i32* %3, align 4, !dbg !11746
  %25 = load i32, i32* %3, align 4, !dbg !11747
  br label %27, !dbg !11743

26:                                               ; preds = %18
  br label %27, !dbg !11743

27:                                               ; preds = %26, %23
  %28 = phi i32 [ %25, %23 ], [ 0, %26 ], !dbg !11743
  store i32 %28, i32* %7, align 4, !dbg !11742
  %29 = load i8, i8* %6, align 1, !dbg !11748
  %30 = trunc i8 %29 to i1, !dbg !11748
  br i1 %30, label %32, label %31, !dbg !11750

31:                                               ; preds = %27
  call void @nrf_clock_int_disable(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 2) #10, !dbg !11751
  br label %32, !dbg !11753

32:                                               ; preds = %31, %27
  br label %33, !dbg !11754

33:                                               ; preds = %60, %32
  %34 = bitcast i32* %5 to i8*, !dbg !11755
  %35 = call zeroext i1 @nrfx_clock_is_running(i32 noundef 0, i8* noundef %34) #10, !dbg !11756
  br i1 %35, label %36, label %44, !dbg !11757

36:                                               ; preds = %33
  %37 = load i32, i32* %5, align 4, !dbg !11758
  %38 = icmp eq i32 %37, 1, !dbg !11759
  br i1 %38, label %42, label %39, !dbg !11760

39:                                               ; preds = %36
  %40 = load i32, i32* %4, align 4, !dbg !11761
  %41 = icmp eq i32 %40, 1, !dbg !11762
  br label %42, !dbg !11760

42:                                               ; preds = %39, %36
  %43 = phi i1 [ true, %36 ], [ %41, %39 ]
  br label %44

44:                                               ; preds = %42, %33
  %45 = phi i1 [ false, %33 ], [ %43, %42 ], !dbg !11763
  %46 = xor i1 %45, true, !dbg !11764
  br i1 %46, label %47, label %61, !dbg !11754

47:                                               ; preds = %44
  %48 = load i8, i8* %6, align 1, !dbg !11765
  %49 = trunc i8 %48 to i1, !dbg !11765
  br i1 %49, label %50, label %52, !dbg !11770

50:                                               ; preds = %47
  %51 = load i32, i32* %7, align 4, !dbg !11771
  call void @k_cpu_atomic_idle(i32 noundef %51) #10, !dbg !11773
  br label %54, !dbg !11774

52:                                               ; preds = %47
  %53 = call i32 @k_msleep(i32 noundef 1) #10, !dbg !11775
  br label %54

54:                                               ; preds = %52, %50
  %55 = call i32 @nrf_clock_lf_src_get(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*)) #10, !dbg !11777
  %56 = icmp eq i32 %55, 0, !dbg !11779
  br i1 %56, label %57, label %60, !dbg !11780

57:                                               ; preds = %54
  %58 = call zeroext i1 @nrf_clock_event_check(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 260) #10, !dbg !11781
  br i1 %58, label %59, label %60, !dbg !11782

59:                                               ; preds = %57
  call void @nrf_clock_event_clear(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 260) #10, !dbg !11783
  call void @nrf_clock_lf_src_set(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 1) #10, !dbg !11785
  call void @__NVIC_ClearPendingIRQ(i32 noundef 0) #10, !dbg !11786
  call void @nrf_clock_task_trigger(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 8) #10, !dbg !11787
  br label %60, !dbg !11788

60:                                               ; preds = %59, %57, %54
  br label %33, !dbg !11754, !llvm.loop !11789

61:                                               ; preds = %44
  %62 = load i8, i8* %6, align 1, !dbg !11791
  %63 = trunc i8 %62 to i1, !dbg !11791
  br i1 %63, label %64, label %71, !dbg !11793

64:                                               ; preds = %61
  %65 = load i32, i32* %7, align 4, !dbg !11794
  store i32 %65, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10856, metadata !DIExpression()) #9, !dbg !11796
  %66 = load i32, i32* %2, align 4, !dbg !11798
  %67 = icmp ne i32 %66, 0, !dbg !11799
  br i1 %67, label %68, label %69, !dbg !11800

68:                                               ; preds = %64
  br label %70, !dbg !11801

69:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11802, !srcloc !10867
  br label %70, !dbg !11803

70:                                               ; preds = %68, %69
  br label %72, !dbg !11804

71:                                               ; preds = %61
  call void @nrf_clock_int_enable(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 2) #10, !dbg !11805
  br label %72

72:                                               ; preds = %13, %71, %70
  ret void, !dbg !11807
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_clock_lf_srccopy_get(%struct.NRF_CLOCK_Type* noundef %0) #1 !dbg !11808 {
  %2 = alloca %struct.NRF_CLOCK_Type*, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %2, metadata !11811, metadata !DIExpression()), !dbg !11812
  %3 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %2, align 4, !dbg !11813
  %4 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %3, i32 0, i32 22, !dbg !11814
  %5 = load volatile i32, i32* %4, align 4, !dbg !11814
  %6 = and i32 %5, 3, !dbg !11815
  %7 = lshr i32 %6, 0, !dbg !11816
  ret i32 %7, !dbg !11817
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_pre_kernel() #1 !dbg !11818 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !11819
  %2 = trunc i8 %1 to i1, !dbg !11819
  %3 = xor i1 %2, true, !dbg !11820
  ret i1 %3, !dbg !11821
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_int_disable(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !11822 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !11825, metadata !DIExpression()), !dbg !11826
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11827, metadata !DIExpression()), !dbg !11828
  %5 = load i32, i32* %4, align 4, !dbg !11829
  %6 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !11830
  %7 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %6, i32 0, i32 15, !dbg !11831
  store volatile i32 %5, i32* %7, align 4, !dbg !11832
  ret void, !dbg !11833
}

; Function Attrs: noinline nounwind optnone
define internal void @k_cpu_atomic_idle(i32 noundef %0) #1 !dbg !11834 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11835, metadata !DIExpression()), !dbg !11836
  %3 = load i32, i32* %2, align 4, !dbg !11837
  call void @arch_cpu_atomic_idle(i32 noundef %3) #10, !dbg !11838
  ret void, !dbg !11839
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msleep(i32 noundef %0) #1 !dbg !11840 {
  %2 = alloca i32, align 4
  %3 = alloca %union.argument_value, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11843, metadata !DIExpression()), !dbg !11844
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11845
  %5 = load i32, i32* %2, align 4, !dbg !11845
  %6 = icmp sgt i32 %5, 0, !dbg !11845
  br i1 %6, label %7, label %9, !dbg !11845

7:                                                ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !11845
  br label %10, !dbg !11845

9:                                                ; preds = %1
  br label %10, !dbg !11845

10:                                               ; preds = %9, %7
  %11 = phi i32 [ %8, %7 ], [ 0, %9 ], !dbg !11845
  %12 = sext i32 %11 to i64, !dbg !11845
  %13 = call i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #10, !dbg !11845
  store i64 %13, i64* %4, align 8, !dbg !11845
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11846
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !11846
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !11846
  %17 = call i32 @k_sleep([1 x i64] %16) #10, !dbg !11846
  ret i32 %17, !dbg !11847
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_clock_lf_src_get(%struct.NRF_CLOCK_Type* noundef %0) #1 !dbg !11848 {
  %2 = alloca %struct.NRF_CLOCK_Type*, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %2, metadata !11849, metadata !DIExpression()), !dbg !11850
  %3 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %2, align 4, !dbg !11851
  %4 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %3, i32 0, i32 24, !dbg !11852
  %5 = load volatile i32, i32* %4, align 4, !dbg !11852
  ret i32 %5, !dbg !11853
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_clock_event_check(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !11854 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !11858, metadata !DIExpression()), !dbg !11859
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11860, metadata !DIExpression()), !dbg !11861
  %5 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !11862
  %6 = bitcast %struct.NRF_CLOCK_Type* %5 to i8*, !dbg !11863
  %7 = load i32, i32* %4, align 4, !dbg !11864
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !11865
  %9 = bitcast i8* %8 to i32*, !dbg !11866
  %10 = load volatile i32, i32* %9, align 4, !dbg !11866
  %11 = icmp ne i32 %10, 0, !dbg !11867
  ret i1 %11, !dbg !11868
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_event_clear(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !11869 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !11872, metadata !DIExpression()), !dbg !11873
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11874, metadata !DIExpression()), !dbg !11875
  %5 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !11876
  %6 = bitcast %struct.NRF_CLOCK_Type* %5 to i8*, !dbg !11877
  %7 = load i32, i32* %4, align 4, !dbg !11878
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !11879
  %9 = bitcast i8* %8 to i32*, !dbg !11880
  store volatile i32 0, i32* %9, align 4, !dbg !11881
  %10 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !11882
  %11 = bitcast %struct.NRF_CLOCK_Type* %10 to i8*, !dbg !11883
  %12 = load i32, i32* %4, align 4, !dbg !11884
  %13 = getelementptr inbounds i8, i8* %11, i32 %12, !dbg !11885
  call void @nrf_event_readback(i8* noundef %13) #10, !dbg !11886
  ret void, !dbg !11887
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_lf_src_set(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !11888 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !11891, metadata !DIExpression()), !dbg !11892
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11893, metadata !DIExpression()), !dbg !11894
  %5 = load i32, i32* %4, align 4, !dbg !11895
  %6 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !11896
  %7 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %6, i32 0, i32 24, !dbg !11897
  store volatile i32 %5, i32* %7, align 4, !dbg !11898
  ret void, !dbg !11899
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_ClearPendingIRQ(i32 noundef %0) #1 !dbg !11900 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11901, metadata !DIExpression()), !dbg !11902
  %3 = load i32, i32* %2, align 4, !dbg !11903
  %4 = icmp sge i32 %3, 0, !dbg !11905
  br i1 %4, label %5, label %9, !dbg !11906

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !11907
  %7 = and i32 %6, 31, !dbg !11909
  %8 = shl i32 1, %7, !dbg !11910
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 6, i32 0), align 4, !dbg !11911
  br label %9, !dbg !11912

9:                                                ; preds = %5, %1
  ret void, !dbg !11913
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_task_trigger(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !11914 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !11918, metadata !DIExpression()), !dbg !11919
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11920, metadata !DIExpression()), !dbg !11921
  %5 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !11922
  %6 = bitcast %struct.NRF_CLOCK_Type* %5 to i8*, !dbg !11923
  %7 = load i32, i32* %4, align 4, !dbg !11924
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !11925
  %9 = bitcast i8* %8 to i32*, !dbg !11926
  store volatile i32 1, i32* %9, align 4, !dbg !11927
  ret void, !dbg !11928
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_int_enable(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !11929 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !11930, metadata !DIExpression()), !dbg !11931
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11932, metadata !DIExpression()), !dbg !11933
  %5 = load i32, i32* %4, align 4, !dbg !11934
  %6 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !11935
  %7 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %6, i32 0, i32 14, !dbg !11936
  store volatile i32 %5, i32* %7, align 4, !dbg !11937
  ret void, !dbg !11938
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_event_readback(i8* noundef %0) #1 !dbg !11939 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11941, metadata !DIExpression()), !dbg !11942
  %3 = load i8*, i8** %2, align 4, !dbg !11943
  ret void, !dbg !11944
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep([1 x i64] %0) #1 !dbg !11945 {
  %2 = alloca %union.argument_value, align 8
  %3 = getelementptr inbounds %union.argument_value, %union.argument_value* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %2, metadata !11948, metadata !DIExpression()), !dbg !11949
  br label %5, !dbg !11950

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11951, !srcloc !11953
  br label %6, !dbg !11951

6:                                                ; preds = %5
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %2, i32 0, i32 0, !dbg !11954
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !11954
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !11954
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #10, !dbg !11954
  ret i32 %10, !dbg !11955
}

declare dso_local void @arch_cpu_atomic_idle(i32 noundef) #0

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_console_init(%struct.device.397* noundef %0) #1 !dbg !11956 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.397*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !11957, metadata !DIExpression()), !dbg !11958
  %4 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !11959
  %5 = call zeroext i1 @device_is_ready(%struct.device.397* noundef @__device_dts_ord_49) #10, !dbg !11960
  br i1 %5, label %7, label %6, !dbg !11962

6:                                                ; preds = %1
  store i32 -19, i32* %2, align 4, !dbg !11963
  br label %8, !dbg !11963

7:                                                ; preds = %1
  call void @uart_console_hook_install() #10, !dbg !11965
  store i32 0, i32* %2, align 4, !dbg !11966
  br label %8, !dbg !11966

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %2, align 4, !dbg !11967
  ret i32 %9, !dbg !11967
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @device_is_ready(%struct.device.397* noundef %0) #1 !dbg !11968 {
  %2 = alloca %struct.device.397*, align 4
  store %struct.device.397* %0, %struct.device.397** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %2, metadata !11972, metadata !DIExpression()), !dbg !11973
  br label %3, !dbg !11974

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11975, !srcloc !11977
  br label %4, !dbg !11975

4:                                                ; preds = %3
  %5 = load %struct.device.397*, %struct.device.397** %2, align 4, !dbg !11978
  %6 = call zeroext i1 @z_impl_device_is_ready(%struct.device.397* noundef %5) #10, !dbg !11979
  ret i1 %6, !dbg !11980
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_console_hook_install() #1 !dbg !11981 {
  call void @__stdout_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !11982
  call void @__printk_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !11983
  ret void, !dbg !11984
}

; Function Attrs: noinline nounwind optnone
define internal i32 @console_out(i32 noundef %0) #1 !dbg !11985 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11986, metadata !DIExpression()), !dbg !11987
  %3 = load i32, i32* %2, align 4, !dbg !11988
  %4 = icmp eq i32 10, %3, !dbg !11990
  br i1 %4, label %5, label %6, !dbg !11991

5:                                                ; preds = %1
  call void @uart_poll_out(%struct.device.397* noundef @__device_dts_ord_49, i8 noundef zeroext 13) #10, !dbg !11992
  br label %6, !dbg !11994

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !11995
  %8 = trunc i32 %7 to i8, !dbg !11995
  call void @uart_poll_out(%struct.device.397* noundef @__device_dts_ord_49, i8 noundef zeroext %8) #10, !dbg !11996
  %9 = load i32, i32* %2, align 4, !dbg !11997
  ret i32 %9, !dbg !11998
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_poll_out(%struct.device.397* noundef %0, i8 noundef zeroext %1) #1 !dbg !11999 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i8, align 1
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12001, metadata !DIExpression()), !dbg !12002
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !12003, metadata !DIExpression()), !dbg !12004
  br label %5, !dbg !12005

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !12006, !srcloc !12008
  br label %6, !dbg !12006

6:                                                ; preds = %5
  %7 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12009
  %8 = load i8, i8* %4, align 1, !dbg !12010
  call void @z_impl_uart_poll_out(%struct.device.397* noundef %7, i8 noundef zeroext %8) #10, !dbg !12011
  ret void, !dbg !12012
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_uart_poll_out(%struct.device.397* noundef %0, i8 noundef zeroext %1) #1 !dbg !12013 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_driver_api*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12014, metadata !DIExpression()), !dbg !12015
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !12016, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.declare(metadata %struct.uart_driver_api** %5, metadata !12018, metadata !DIExpression()), !dbg !12019
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12020
  %7 = getelementptr inbounds %struct.device.397, %struct.device.397* %6, i32 0, i32 2, !dbg !12021
  %8 = load i8*, i8** %7, align 4, !dbg !12021
  %9 = bitcast i8* %8 to %struct.uart_driver_api*, !dbg !12022
  store %struct.uart_driver_api* %9, %struct.uart_driver_api** %5, align 4, !dbg !12019
  %10 = load %struct.uart_driver_api*, %struct.uart_driver_api** %5, align 4, !dbg !12023
  %11 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %10, i32 0, i32 1, !dbg !12024
  %12 = load void (%struct.device.397*, i8)*, void (%struct.device.397*, i8)** %11, align 4, !dbg !12024
  %13 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12025
  %14 = load i8, i8* %4, align 1, !dbg !12026
  call void %12(%struct.device.397* noundef %13, i8 noundef zeroext %14) #10, !dbg !12023
  ret void, !dbg !12027
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_impl_device_is_ready(%struct.device.397* noundef %0) #1 !dbg !12028 {
  %2 = alloca %struct.device.397*, align 4
  store %struct.device.397* %0, %struct.device.397** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %2, metadata !12029, metadata !DIExpression()), !dbg !12030
  %3 = load %struct.device.397*, %struct.device.397** %2, align 4, !dbg !12031
  %4 = call zeroext i1 @z_device_is_ready(%struct.device.397* noundef %3) #10, !dbg !12032
  ret i1 %4, !dbg !12033
}

; Function Attrs: noinline nounwind optnone
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) #1 !dbg !12034 {
  %4 = alloca %struct.k_fifo*, align 4
  %5 = alloca %struct.k_fifo*, align 4
  %6 = alloca i8 (i8*, i8)*, align 4
  store %struct.k_fifo* %0, %struct.k_fifo** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %4, metadata !12080, metadata !DIExpression()), !dbg !12081
  store %struct.k_fifo* %1, %struct.k_fifo** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %5, metadata !12082, metadata !DIExpression()), !dbg !12083
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** %6, align 4
  call void @llvm.dbg.declare(metadata i8 (i8*, i8)** %6, metadata !12084, metadata !DIExpression()), !dbg !12085
  %7 = load %struct.k_fifo*, %struct.k_fifo** %4, align 4, !dbg !12086
  %8 = load %struct.k_fifo*, %struct.k_fifo** %5, align 4, !dbg !12087
  %9 = load i8 (i8*, i8)*, i8 (i8*, i8)** %6, align 4, !dbg !12088
  ret void, !dbg !12089
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_pin_configure(%struct.device.397* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !12090 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.397*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca %struct.gpio_nrfx_cfg*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.nrfx_gpiote_trigger_config_t, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.nrfx_gpiote_output_config_t, align 4
  %17 = alloca %struct.z_spinlock_key, align 4
  store %struct.device.397* %0, %struct.device.397** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %5, metadata !12091, metadata !DIExpression()), !dbg !12092
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12093, metadata !DIExpression()), !dbg !12094
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12095, metadata !DIExpression()), !dbg !12096
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12097, metadata !DIExpression()), !dbg !12098
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12099, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12101, metadata !DIExpression()), !dbg !12102
  call void @llvm.dbg.declare(metadata %struct.gpio_nrfx_cfg** %11, metadata !12103, metadata !DIExpression()), !dbg !12105
  %18 = load %struct.device.397*, %struct.device.397** %5, align 4, !dbg !12106
  %19 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %18) #10, !dbg !12107
  store %struct.gpio_nrfx_cfg* %19, %struct.gpio_nrfx_cfg** %11, align 4, !dbg !12105
  call void @llvm.dbg.declare(metadata i32* %12, metadata !12108, metadata !DIExpression()), !dbg !12109
  %20 = load %struct.gpio_nrfx_cfg*, %struct.gpio_nrfx_cfg** %11, align 4, !dbg !12110
  %21 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %20, i32 0, i32 3, !dbg !12110
  %22 = load i8, i8* %21, align 4, !dbg !12110
  %23 = zext i8 %22 to i32, !dbg !12110
  %24 = shl i32 %23, 5, !dbg !12110
  %25 = load i8, i8* %6, align 1, !dbg !12110
  %26 = zext i8 %25 to i32, !dbg !12110
  %27 = and i32 %26, 31, !dbg !12110
  %28 = or i32 %24, %27, !dbg !12110
  store i32 %28, i32* %12, align 4, !dbg !12109
  %29 = load i32, i32* %12, align 4, !dbg !12111
  %30 = call i32 @nrfx_gpiote_channel_get(i32 noundef %29, i8* noundef %9) #10, !dbg !12112
  store i32 %30, i32* %8, align 4, !dbg !12113
  %31 = load i32, i32* %8, align 4, !dbg !12114
  %32 = icmp eq i32 %31, 195887104, !dbg !12115
  %33 = zext i1 %32 to i8, !dbg !12116
  store i8 %33, i8* %10, align 1, !dbg !12116
  %34 = load i32, i32* %7, align 4, !dbg !12117
  %35 = and i32 %34, 196608, !dbg !12119
  %36 = icmp eq i32 %35, 0, !dbg !12120
  br i1 %36, label %37, label %46, !dbg !12121

37:                                               ; preds = %3
  %38 = load i32, i32* %12, align 4, !dbg !12122
  %39 = call i32 @nrfx_gpiote_pin_uninit(i32 noundef %38) #10, !dbg !12124
  %40 = load i8, i8* %10, align 1, !dbg !12125
  %41 = trunc i8 %40 to i1, !dbg !12125
  br i1 %41, label %42, label %45, !dbg !12127

42:                                               ; preds = %37
  %43 = load i8, i8* %9, align 1, !dbg !12128
  %44 = call i32 @nrfx_gpiote_channel_free(i8 noundef zeroext %43) #10, !dbg !12130
  store i32 %44, i32* %8, align 4, !dbg !12131
  br label %45, !dbg !12132

45:                                               ; preds = %42, %37
  store i32 0, i32* %4, align 4, !dbg !12133
  br label %121, !dbg !12133

46:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_trigger_config_t* %13, metadata !12134, metadata !DIExpression()), !dbg !12140
  %47 = bitcast %struct.nrfx_gpiote_trigger_config_t* %13 to i8*, !dbg !12140
  call void @llvm.memset.p0i8.i32(i8* align 4 %47, i8 0, i32 8, i1 false), !dbg !12140
  %48 = load i32, i32* %12, align 4, !dbg !12141
  %49 = call i32 @nrfx_gpiote_input_configure(i32 noundef %48, %struct.z_spinlock_key* noundef null, %struct.nrfx_gpiote_trigger_config_t* noundef %13, %struct.nrfx_gpiote_handler_config_t* noundef null) #10, !dbg !12142
  store i32 %49, i32* %8, align 4, !dbg !12143
  %50 = load i32, i32* %8, align 4, !dbg !12144
  %51 = icmp ne i32 %50, 195887104, !dbg !12146
  br i1 %51, label %52, label %53, !dbg !12147

52:                                               ; preds = %46
  store i32 -22, i32* %4, align 4, !dbg !12148
  br label %121, !dbg !12148

53:                                               ; preds = %46
  %54 = load i8, i8* %10, align 1, !dbg !12150
  %55 = trunc i8 %54 to i1, !dbg !12150
  br i1 %55, label %56, label %59, !dbg !12152

56:                                               ; preds = %53
  %57 = load i8, i8* %9, align 1, !dbg !12153
  %58 = call i32 @nrfx_gpiote_channel_free(i8 noundef zeroext %57) #10, !dbg !12155
  store i32 %58, i32* %8, align 4, !dbg !12156
  br label %59, !dbg !12157

59:                                               ; preds = %56, %53
  %60 = load i32, i32* %7, align 4, !dbg !12158
  %61 = and i32 %60, 131072, !dbg !12160
  %62 = icmp ne i32 %61, 0, !dbg !12160
  br i1 %62, label %63, label %111, !dbg !12161

63:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12162, metadata !DIExpression()), !dbg !12165
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12166, metadata !DIExpression()), !dbg !12167
  %64 = load i32, i32* %7, align 4, !dbg !12168
  %65 = call i32 @get_drive(i32 noundef %64, i32* noundef %14) #10, !dbg !12169
  store i32 %65, i32* %15, align 4, !dbg !12167
  %66 = load i32, i32* %15, align 4, !dbg !12170
  %67 = icmp ne i32 %66, 0, !dbg !12172
  br i1 %67, label %68, label %70, !dbg !12173

68:                                               ; preds = %63
  %69 = load i32, i32* %15, align 4, !dbg !12174
  store i32 %69, i32* %4, align 4, !dbg !12176
  br label %121, !dbg !12176

70:                                               ; preds = %63
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_output_config_t* %16, metadata !12177, metadata !DIExpression()), !dbg !12186
  %71 = getelementptr inbounds %struct.nrfx_gpiote_output_config_t, %struct.nrfx_gpiote_output_config_t* %16, i32 0, i32 0, !dbg !12187
  %72 = load i32, i32* %14, align 4, !dbg !12188
  store i32 %72, i32* %71, align 4, !dbg !12187
  %73 = getelementptr inbounds %struct.nrfx_gpiote_output_config_t, %struct.nrfx_gpiote_output_config_t* %16, i32 0, i32 1, !dbg !12187
  %74 = load i32, i32* %7, align 4, !dbg !12189
  %75 = and i32 %74, 65536, !dbg !12190
  %76 = icmp ne i32 %75, 0, !dbg !12191
  %77 = zext i1 %76 to i64, !dbg !12191
  %78 = select i1 %76, i32 0, i32 1, !dbg !12191
  store i32 %78, i32* %73, align 4, !dbg !12187
  %79 = getelementptr inbounds %struct.nrfx_gpiote_output_config_t, %struct.nrfx_gpiote_output_config_t* %16, i32 0, i32 2, !dbg !12187
  %80 = load i32, i32* %7, align 4, !dbg !12192
  %81 = call i32 @get_pull(i32 noundef %80) #10, !dbg !12193
  store i32 %81, i32* %79, align 4, !dbg !12187
  %82 = load i32, i32* %7, align 4, !dbg !12194
  %83 = and i32 %82, 524288, !dbg !12196
  %84 = icmp ne i32 %83, 0, !dbg !12196
  br i1 %84, label %85, label %92, !dbg !12197

85:                                               ; preds = %70
  %86 = load %struct.gpio_nrfx_cfg*, %struct.gpio_nrfx_cfg** %11, align 4, !dbg !12198
  %87 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %86, i32 0, i32 1, !dbg !12200
  %88 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %87, align 4, !dbg !12200
  %89 = load i8, i8* %6, align 1, !dbg !12201
  %90 = zext i8 %89 to i32, !dbg !12201
  %91 = shl i32 1, %90, !dbg !12201
  call void @nrf_gpio_port_out_set(%struct.NRF_GPIO_Type* noundef %88, i32 noundef %91) #10, !dbg !12202
  br label %104, !dbg !12203

92:                                               ; preds = %70
  %93 = load i32, i32* %7, align 4, !dbg !12204
  %94 = and i32 %93, 262144, !dbg !12206
  %95 = icmp ne i32 %94, 0, !dbg !12206
  br i1 %95, label %96, label %103, !dbg !12207

96:                                               ; preds = %92
  %97 = load %struct.gpio_nrfx_cfg*, %struct.gpio_nrfx_cfg** %11, align 4, !dbg !12208
  %98 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %97, i32 0, i32 1, !dbg !12210
  %99 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %98, align 4, !dbg !12210
  %100 = load i8, i8* %6, align 1, !dbg !12211
  %101 = zext i8 %100 to i32, !dbg !12211
  %102 = shl i32 1, %101, !dbg !12211
  call void @nrf_gpio_port_out_clear(%struct.NRF_GPIO_Type* noundef %99, i32 noundef %102) #10, !dbg !12212
  br label %103, !dbg !12213

103:                                              ; preds = %96, %92
  br label %104

104:                                              ; preds = %103, %85
  %105 = load i32, i32* %12, align 4, !dbg !12214
  %106 = call i32 @nrfx_gpiote_output_configure(i32 noundef %105, %struct.nrfx_gpiote_output_config_t* noundef %16, %struct.nrfx_gpiote_task_config_t* noundef null) #10, !dbg !12215
  store i32 %106, i32* %8, align 4, !dbg !12216
  %107 = load i32, i32* %8, align 4, !dbg !12217
  %108 = icmp ne i32 %107, 195887104, !dbg !12218
  %109 = zext i1 %108 to i64, !dbg !12219
  %110 = select i1 %108, i32 -22, i32 0, !dbg !12219
  store i32 %110, i32* %4, align 4, !dbg !12220
  br label %121, !dbg !12220

111:                                              ; preds = %59
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %17, metadata !12221, metadata !DIExpression()), !dbg !12226
  %112 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %17, i32 0, i32 0, !dbg !12227
  %113 = load i32, i32* %7, align 4, !dbg !12228
  %114 = call i32 @get_pull(i32 noundef %113) #10, !dbg !12229
  store i32 %114, i32* %112, align 4, !dbg !12227
  %115 = load i32, i32* %12, align 4, !dbg !12230
  %116 = call i32 @nrfx_gpiote_input_configure(i32 noundef %115, %struct.z_spinlock_key* noundef %17, %struct.nrfx_gpiote_trigger_config_t* noundef null, %struct.nrfx_gpiote_handler_config_t* noundef null) #10, !dbg !12231
  store i32 %116, i32* %8, align 4, !dbg !12232
  %117 = load i32, i32* %8, align 4, !dbg !12233
  %118 = icmp ne i32 %117, 195887104, !dbg !12234
  %119 = zext i1 %118 to i64, !dbg !12235
  %120 = select i1 %118, i32 -22, i32 0, !dbg !12235
  store i32 %120, i32* %4, align 4, !dbg !12236
  br label %121, !dbg !12236

121:                                              ; preds = %111, %104, %68, %52, %45
  %122 = load i32, i32* %4, align 4, !dbg !12237
  ret i32 %122, !dbg !12237
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_port_get_raw(%struct.device.397* noundef %0, i32* noundef %1) #1 !dbg !12238 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca %struct.NRF_GPIO_Type*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12239, metadata !DIExpression()), !dbg !12240
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !12241, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %5, metadata !12243, metadata !DIExpression()), !dbg !12244
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12245
  %7 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %6) #10, !dbg !12246
  %8 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %7, i32 0, i32 1, !dbg !12247
  %9 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %8, align 4, !dbg !12247
  store %struct.NRF_GPIO_Type* %9, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12244
  %10 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12248
  %11 = call i32 @nrf_gpio_port_in_read(%struct.NRF_GPIO_Type* noundef %10) #10, !dbg !12249
  %12 = load i32*, i32** %4, align 4, !dbg !12250
  store i32 %11, i32* %12, align 4, !dbg !12251
  ret i32 0, !dbg !12252
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_port_set_masked_raw(%struct.device.397* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !12253 {
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.NRF_GPIO_Type*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !12254, metadata !DIExpression()), !dbg !12255
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12256, metadata !DIExpression()), !dbg !12257
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12258, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %7, metadata !12260, metadata !DIExpression()), !dbg !12261
  %10 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !12262
  %11 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %10) #10, !dbg !12263
  %12 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %11, i32 0, i32 1, !dbg !12264
  %13 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %12, align 4, !dbg !12264
  store %struct.NRF_GPIO_Type* %13, %struct.NRF_GPIO_Type** %7, align 4, !dbg !12261
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12265, metadata !DIExpression()), !dbg !12267
  %14 = load i32, i32* %6, align 4, !dbg !12268
  %15 = load i32, i32* %5, align 4, !dbg !12269
  %16 = and i32 %14, %15, !dbg !12270
  store i32 %16, i32* %8, align 4, !dbg !12267
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12271, metadata !DIExpression()), !dbg !12272
  %17 = load i32, i32* %8, align 4, !dbg !12273
  %18 = xor i32 %17, -1, !dbg !12274
  %19 = load i32, i32* %5, align 4, !dbg !12275
  %20 = and i32 %18, %19, !dbg !12276
  store i32 %20, i32* %9, align 4, !dbg !12272
  %21 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %7, align 4, !dbg !12277
  %22 = load i32, i32* %8, align 4, !dbg !12278
  call void @nrf_gpio_port_out_set(%struct.NRF_GPIO_Type* noundef %21, i32 noundef %22) #10, !dbg !12279
  %23 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %7, align 4, !dbg !12280
  %24 = load i32, i32* %9, align 4, !dbg !12281
  call void @nrf_gpio_port_out_clear(%struct.NRF_GPIO_Type* noundef %23, i32 noundef %24) #10, !dbg !12282
  ret i32 0, !dbg !12283
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_port_set_bits_raw(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !12284 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.NRF_GPIO_Type*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12285, metadata !DIExpression()), !dbg !12286
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12287, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %5, metadata !12289, metadata !DIExpression()), !dbg !12290
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12291
  %7 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %6) #10, !dbg !12292
  %8 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %7, i32 0, i32 1, !dbg !12293
  %9 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %8, align 4, !dbg !12293
  store %struct.NRF_GPIO_Type* %9, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12290
  %10 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12294
  %11 = load i32, i32* %4, align 4, !dbg !12295
  call void @nrf_gpio_port_out_set(%struct.NRF_GPIO_Type* noundef %10, i32 noundef %11) #10, !dbg !12296
  ret i32 0, !dbg !12297
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_port_clear_bits_raw(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !12298 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.NRF_GPIO_Type*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12299, metadata !DIExpression()), !dbg !12300
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12301, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %5, metadata !12303, metadata !DIExpression()), !dbg !12304
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12305
  %7 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %6) #10, !dbg !12306
  %8 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %7, i32 0, i32 1, !dbg !12307
  %9 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %8, align 4, !dbg !12307
  store %struct.NRF_GPIO_Type* %9, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12304
  %10 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12308
  %11 = load i32, i32* %4, align 4, !dbg !12309
  call void @nrf_gpio_port_out_clear(%struct.NRF_GPIO_Type* noundef %10, i32 noundef %11) #10, !dbg !12310
  ret i32 0, !dbg !12311
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_port_toggle_bits(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !12312 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.NRF_GPIO_Type*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12313, metadata !DIExpression()), !dbg !12314
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12315, metadata !DIExpression()), !dbg !12316
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %5, metadata !12317, metadata !DIExpression()), !dbg !12318
  %9 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12319
  %10 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %9) #10, !dbg !12320
  %11 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %10, i32 0, i32 1, !dbg !12321
  %12 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %11, align 4, !dbg !12321
  store %struct.NRF_GPIO_Type* %12, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12318
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12322, metadata !DIExpression()), !dbg !12323
  %13 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12324
  %14 = call i32 @nrf_gpio_port_out_read(%struct.NRF_GPIO_Type* noundef %13) #10, !dbg !12325
  %15 = load i32, i32* %4, align 4, !dbg !12326
  %16 = xor i32 %14, %15, !dbg !12327
  store i32 %16, i32* %6, align 4, !dbg !12323
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12328, metadata !DIExpression()), !dbg !12329
  %17 = load i32, i32* %6, align 4, !dbg !12330
  %18 = load i32, i32* %4, align 4, !dbg !12331
  %19 = and i32 %17, %18, !dbg !12332
  store i32 %19, i32* %7, align 4, !dbg !12329
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12333, metadata !DIExpression()), !dbg !12334
  %20 = load i32, i32* %6, align 4, !dbg !12335
  %21 = xor i32 %20, -1, !dbg !12336
  %22 = load i32, i32* %4, align 4, !dbg !12337
  %23 = and i32 %21, %22, !dbg !12338
  store i32 %23, i32* %8, align 4, !dbg !12334
  %24 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12339
  %25 = load i32, i32* %7, align 4, !dbg !12340
  call void @nrf_gpio_port_out_set(%struct.NRF_GPIO_Type* noundef %24, i32 noundef %25) #10, !dbg !12341
  %26 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %5, align 4, !dbg !12342
  %27 = load i32, i32* %8, align 4, !dbg !12343
  call void @nrf_gpio_port_out_clear(%struct.NRF_GPIO_Type* noundef %26, i32 noundef %27) #10, !dbg !12344
  ret i32 0, !dbg !12345
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_pin_interrupt_configure(%struct.device.397* noundef %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !12346 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.device.397*, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct.nrfx_gpiote_trigger_config_t, align 4
  store %struct.device.397* %0, %struct.device.397** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %6, metadata !12347, metadata !DIExpression()), !dbg !12348
  store i8 %1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12349, metadata !DIExpression()), !dbg !12350
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12351, metadata !DIExpression()), !dbg !12352
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12353, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12355, metadata !DIExpression()), !dbg !12356
  %14 = load %struct.device.397*, %struct.device.397** %6, align 4, !dbg !12357
  %15 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %14) #10, !dbg !12357
  %16 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %15, i32 0, i32 3, !dbg !12357
  %17 = load i8, i8* %16, align 4, !dbg !12357
  %18 = zext i8 %17 to i32, !dbg !12357
  %19 = shl i32 %18, 5, !dbg !12357
  %20 = load i8, i8* %7, align 1, !dbg !12357
  %21 = zext i8 %20 to i32, !dbg !12357
  %22 = and i32 %21, 31, !dbg !12357
  %23 = or i32 %19, %22, !dbg !12357
  store i32 %23, i32* %10, align 4, !dbg !12356
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12358, metadata !DIExpression()), !dbg !12359
  call void @llvm.dbg.declare(metadata i8* %12, metadata !12360, metadata !DIExpression()), !dbg !12361
  %24 = load i32, i32* %8, align 4, !dbg !12362
  %25 = icmp eq i32 %24, 2097152, !dbg !12364
  br i1 %25, label %26, label %28, !dbg !12365

26:                                               ; preds = %4
  %27 = load i32, i32* %10, align 4, !dbg !12366
  call void @nrfx_gpiote_trigger_disable(i32 noundef %27) #10, !dbg !12368
  store i32 0, i32* %5, align 4, !dbg !12369
  br label %71, !dbg !12369

28:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_trigger_config_t* %13, metadata !12370, metadata !DIExpression()), !dbg !12371
  %29 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %13, i32 0, i32 0, !dbg !12372
  %30 = load i32, i32* %8, align 4, !dbg !12373
  %31 = load i32, i32* %9, align 4, !dbg !12374
  %32 = call i32 @get_trigger(i32 noundef %30, i32 noundef %31) #10, !dbg !12375
  store i32 %32, i32* %29, align 4, !dbg !12372
  %33 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %13, i32 0, i32 1, !dbg !12372
  store i8* null, i8** %33, align 4, !dbg !12372
  %34 = load i8, i8* %7, align 1, !dbg !12376
  %35 = zext i8 %34 to i32, !dbg !12376
  %36 = shl i32 1, %35, !dbg !12376
  %37 = load %struct.device.397*, %struct.device.397** %6, align 4, !dbg !12378
  %38 = call %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %37) #10, !dbg !12379
  %39 = getelementptr inbounds %struct.gpio_nrfx_cfg, %struct.gpio_nrfx_cfg* %38, i32 0, i32 2, !dbg !12380
  %40 = load i32, i32* %39, align 4, !dbg !12380
  %41 = and i32 %36, %40, !dbg !12381
  %42 = icmp ne i32 %41, 0, !dbg !12381
  br i1 %42, label %63, label %43, !dbg !12382

43:                                               ; preds = %28
  %44 = load i32, i32* %8, align 4, !dbg !12383
  %45 = icmp eq i32 %44, 20971520, !dbg !12384
  br i1 %45, label %46, label %63, !dbg !12385

46:                                               ; preds = %43
  %47 = load i32, i32* %10, align 4, !dbg !12386
  %48 = call i32 @nrf_gpio_pin_dir_get(i32 noundef %47) #10, !dbg !12387
  %49 = icmp eq i32 %48, 0, !dbg !12388
  br i1 %49, label %50, label %63, !dbg !12389

50:                                               ; preds = %46
  %51 = load i32, i32* %10, align 4, !dbg !12390
  %52 = call i32 @nrfx_gpiote_channel_get(i32 noundef %51, i8* noundef %12) #10, !dbg !12392
  store i32 %52, i32* %11, align 4, !dbg !12393
  %53 = load i32, i32* %11, align 4, !dbg !12394
  %54 = icmp eq i32 %53, 195887108, !dbg !12396
  br i1 %54, label %55, label %61, !dbg !12397

55:                                               ; preds = %50
  %56 = call i32 @nrfx_gpiote_channel_alloc(i8* noundef %12) #10, !dbg !12398
  store i32 %56, i32* %11, align 4, !dbg !12400
  %57 = load i32, i32* %11, align 4, !dbg !12401
  %58 = icmp ne i32 %57, 195887104, !dbg !12403
  br i1 %58, label %59, label %60, !dbg !12404

59:                                               ; preds = %55
  store i32 -12, i32* %5, align 4, !dbg !12405
  br label %71, !dbg !12405

60:                                               ; preds = %55
  br label %61, !dbg !12407

61:                                               ; preds = %60, %50
  %62 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %13, i32 0, i32 1, !dbg !12408
  store i8* %12, i8** %62, align 4, !dbg !12409
  br label %63, !dbg !12410

63:                                               ; preds = %61, %46, %43, %28
  %64 = load i32, i32* %10, align 4, !dbg !12411
  %65 = call i32 @nrfx_gpiote_input_configure(i32 noundef %64, %struct.z_spinlock_key* noundef null, %struct.nrfx_gpiote_trigger_config_t* noundef %13, %struct.nrfx_gpiote_handler_config_t* noundef null) #10, !dbg !12412
  store i32 %65, i32* %11, align 4, !dbg !12413
  %66 = load i32, i32* %11, align 4, !dbg !12414
  %67 = icmp ne i32 %66, 195887104, !dbg !12416
  br i1 %67, label %68, label %69, !dbg !12417

68:                                               ; preds = %63
  store i32 -22, i32* %5, align 4, !dbg !12418
  br label %71, !dbg !12418

69:                                               ; preds = %63
  %70 = load i32, i32* %10, align 4, !dbg !12420
  call void @nrfx_gpiote_trigger_enable(i32 noundef %70, i1 noundef zeroext true) #10, !dbg !12421
  store i32 0, i32* %5, align 4, !dbg !12422
  br label %71, !dbg !12422

71:                                               ; preds = %69, %68, %59, %26
  %72 = load i32, i32* %5, align 4, !dbg !12423
  ret i32 %72, !dbg !12423
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_manage_callback(%struct.device.397* noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !12424 {
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca %struct.gpio_callback*, align 4
  %6 = alloca i8, align 1
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !12425, metadata !DIExpression()), !dbg !12426
  store %struct.gpio_callback* %1, %struct.gpio_callback** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %5, metadata !12427, metadata !DIExpression()), !dbg !12428
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12429, metadata !DIExpression()), !dbg !12430
  %8 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !12431
  %9 = call %struct.gpio_nrfx_data* @get_port_data(%struct.device.397* noundef %8) #10, !dbg !12432
  %10 = getelementptr inbounds %struct.gpio_nrfx_data, %struct.gpio_nrfx_data* %9, i32 0, i32 1, !dbg !12433
  %11 = load %struct.gpio_callback*, %struct.gpio_callback** %5, align 4, !dbg !12434
  %12 = load i8, i8* %6, align 1, !dbg !12435
  %13 = trunc i8 %12 to i1, !dbg !12435
  %14 = call i32 @gpio_manage_callback(%struct._slist* noundef %10, %struct.gpio_callback* noundef %11, i1 noundef zeroext %13) #10, !dbg !12436
  ret i32 %14, !dbg !12437
}

; Function Attrs: noinline nounwind optnone
define internal %struct.gpio_nrfx_data* @get_port_data(%struct.device.397* noundef %0) #1 !dbg !12438 {
  %2 = alloca %struct.device.397*, align 4
  store %struct.device.397* %0, %struct.device.397** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %2, metadata !12442, metadata !DIExpression()), !dbg !12443
  %3 = load %struct.device.397*, %struct.device.397** %2, align 4, !dbg !12444
  %4 = getelementptr inbounds %struct.device.397, %struct.device.397* %3, i32 0, i32 4, !dbg !12445
  %5 = load i8*, i8** %4, align 4, !dbg !12445
  %6 = bitcast i8* %5 to %struct.gpio_nrfx_data*, !dbg !12444
  ret %struct.gpio_nrfx_data* %6, !dbg !12446
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_manage_callback(%struct._slist* noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !12447 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._slist*, align 4
  %6 = alloca %struct.gpio_callback*, align 4
  %7 = alloca i8, align 1
  store %struct._slist* %0, %struct._slist** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %5, metadata !12452, metadata !DIExpression()), !dbg !12453
  store %struct.gpio_callback* %1, %struct.gpio_callback** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %6, metadata !12454, metadata !DIExpression()), !dbg !12455
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12456, metadata !DIExpression()), !dbg !12457
  %9 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !12458
  %10 = call zeroext i1 @sys_slist_is_empty.60(%struct._slist* noundef %9) #10, !dbg !12460
  br i1 %10, label %22, label %11, !dbg !12461

11:                                               ; preds = %3
  %12 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !12462
  %13 = load %struct.gpio_callback*, %struct.gpio_callback** %6, align 4, !dbg !12465
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %13, i32 0, i32 0, !dbg !12466
  %15 = call zeroext i1 @sys_slist_find_and_remove.61(%struct._slist* noundef %12, %struct._snode* noundef %14) #10, !dbg !12467
  br i1 %15, label %21, label %16, !dbg !12468

16:                                               ; preds = %11
  %17 = load i8, i8* %7, align 1, !dbg !12469
  %18 = trunc i8 %17 to i1, !dbg !12469
  br i1 %18, label %20, label %19, !dbg !12472

19:                                               ; preds = %16
  store i32 -22, i32* %4, align 4, !dbg !12473
  br label %35, !dbg !12473

20:                                               ; preds = %16
  br label %21, !dbg !12475

21:                                               ; preds = %20, %11
  br label %27, !dbg !12476

22:                                               ; preds = %3
  %23 = load i8, i8* %7, align 1, !dbg !12477
  %24 = trunc i8 %23 to i1, !dbg !12477
  br i1 %24, label %26, label %25, !dbg !12479

25:                                               ; preds = %22
  store i32 -22, i32* %4, align 4, !dbg !12480
  br label %35, !dbg !12480

26:                                               ; preds = %22
  br label %27

27:                                               ; preds = %26, %21
  %28 = load i8, i8* %7, align 1, !dbg !12482
  %29 = trunc i8 %28 to i1, !dbg !12482
  br i1 %29, label %30, label %34, !dbg !12484

30:                                               ; preds = %27
  %31 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !12485
  %32 = load %struct.gpio_callback*, %struct.gpio_callback** %6, align 4, !dbg !12487
  %33 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %32, i32 0, i32 0, !dbg !12488
  call void @sys_slist_prepend(%struct._slist* noundef %31, %struct._snode* noundef %33) #10, !dbg !12489
  br label %34, !dbg !12490

34:                                               ; preds = %30, %27
  store i32 0, i32* %4, align 4, !dbg !12491
  br label %35, !dbg !12491

35:                                               ; preds = %34, %25, %19
  %36 = load i32, i32* %4, align 4, !dbg !12492
  ret i32 %36, !dbg !12492
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_is_empty.60(%struct._slist* noundef %0) #1 !dbg !12493 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !12496, metadata !DIExpression()), !dbg !12497
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !12497
  %4 = call %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %3) #10, !dbg !12497
  %5 = icmp eq %struct._snode* %4, null, !dbg !12497
  ret i1 %5, !dbg !12497
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_find_and_remove.61(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !12498 {
  %3 = alloca i1, align 1
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  %7 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !12501, metadata !DIExpression()), !dbg !12502
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !12503, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !12504, metadata !DIExpression()), !dbg !12502
  store %struct._snode* null, %struct._snode** %6, align 4, !dbg !12502
  call void @llvm.dbg.declare(metadata %struct._snode** %7, metadata !12505, metadata !DIExpression()), !dbg !12502
  %8 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12506
  %9 = call %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %8) #10, !dbg !12506
  store %struct._snode* %9, %struct._snode** %7, align 4, !dbg !12506
  br label %10, !dbg !12506

10:                                               ; preds = %23, %2
  %11 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !12508
  %12 = icmp ne %struct._snode* %11, null, !dbg !12508
  br i1 %12, label %13, label %26, !dbg !12506

13:                                               ; preds = %10
  %14 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !12510
  %15 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !12510
  %16 = icmp eq %struct._snode* %14, %15, !dbg !12510
  br i1 %16, label %17, label %21, !dbg !12513

17:                                               ; preds = %13
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12514
  %19 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !12514
  %20 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !12514
  call void @sys_slist_remove.67(%struct._slist* noundef %18, %struct._snode* noundef %19, %struct._snode* noundef %20) #10, !dbg !12514
  store i1 true, i1* %3, align 1, !dbg !12514
  br label %27, !dbg !12514

21:                                               ; preds = %13
  %22 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !12513
  store %struct._snode* %22, %struct._snode** %6, align 4, !dbg !12513
  br label %23, !dbg !12513

23:                                               ; preds = %21
  %24 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !12508
  %25 = call %struct._snode* @sys_slist_peek_next.68(%struct._snode* noundef %24) #10, !dbg !12508
  store %struct._snode* %25, %struct._snode** %7, align 4, !dbg !12508
  br label %10, !dbg !12508, !llvm.loop !12516

26:                                               ; preds = %10
  store i1 false, i1* %3, align 1, !dbg !12502
  br label %27, !dbg !12502

27:                                               ; preds = %26, %17
  %28 = load i1, i1* %3, align 1, !dbg !12502
  ret i1 %28, !dbg !12502
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !12517 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !12520, metadata !DIExpression()), !dbg !12521
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !12522, metadata !DIExpression()), !dbg !12521
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12521
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !12521
  %7 = call %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %6) #10, !dbg !12521
  call void @z_snode_next_set.63(%struct._snode* noundef %5, %struct._snode* noundef %7) #10, !dbg !12521
  %8 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !12521
  %9 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12521
  call void @z_slist_head_set.64(%struct._slist* noundef %8, %struct._snode* noundef %9) #10, !dbg !12521
  %10 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !12523
  %11 = call %struct._snode* @sys_slist_peek_tail.65(%struct._slist* noundef %10) #10, !dbg !12523
  %12 = icmp eq %struct._snode* %11, null, !dbg !12523
  br i1 %12, label %13, label %17, !dbg !12521

13:                                               ; preds = %2
  %14 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !12525
  %15 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !12525
  %16 = call %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %15) #10, !dbg !12525
  call void @z_slist_tail_set.66(%struct._slist* noundef %14, %struct._snode* noundef %16) #10, !dbg !12525
  br label %17, !dbg !12525

17:                                               ; preds = %13, %2
  ret void, !dbg !12521
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %0) #1 !dbg !12527 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !12530, metadata !DIExpression()), !dbg !12531
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !12532
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 0, !dbg !12533
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12533
  ret %struct._snode* %5, !dbg !12534
}

; Function Attrs: noinline nounwind optnone
define internal void @z_snode_next_set.63(%struct._snode* noundef %0, %struct._snode* noundef %1) #1 !dbg !12535 {
  %3 = alloca %struct._snode*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %3, metadata !12538, metadata !DIExpression()), !dbg !12539
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !12540, metadata !DIExpression()), !dbg !12541
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12542
  %6 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !12543
  %7 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 0, i32 0, !dbg !12544
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !12545
  ret void, !dbg !12546
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_head_set.64(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !12547 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !12548, metadata !DIExpression()), !dbg !12549
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !12550, metadata !DIExpression()), !dbg !12551
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12552
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !12553
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 0, !dbg !12554
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !12555
  ret void, !dbg !12556
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_tail.65(%struct._slist* noundef %0) #1 !dbg !12557 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !12558, metadata !DIExpression()), !dbg !12559
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !12560
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 1, !dbg !12561
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12561
  ret %struct._snode* %5, !dbg !12562
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_tail_set.66(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !12563 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !12564, metadata !DIExpression()), !dbg !12565
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !12566, metadata !DIExpression()), !dbg !12567
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12568
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !12569
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 1, !dbg !12570
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !12571
  ret void, !dbg !12572
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_remove.67(%struct._slist* noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) #1 !dbg !12573 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !12576, metadata !DIExpression()), !dbg !12577
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !12578, metadata !DIExpression()), !dbg !12577
  store %struct._snode* %2, %struct._snode** %6, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !12579, metadata !DIExpression()), !dbg !12577
  %7 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !12580
  %8 = icmp eq %struct._snode* %7, null, !dbg !12580
  br i1 %8, label %9, label %22, !dbg !12577

9:                                                ; preds = %3
  %10 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12582
  %11 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !12582
  %12 = call %struct._snode* @z_snode_next_peek.70(%struct._snode* noundef %11) #10, !dbg !12582
  call void @z_slist_head_set.64(%struct._slist* noundef %10, %struct._snode* noundef %12) #10, !dbg !12582
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12584
  %14 = call %struct._snode* @sys_slist_peek_tail.65(%struct._slist* noundef %13) #10, !dbg !12584
  %15 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !12584
  %16 = icmp eq %struct._snode* %14, %15, !dbg !12584
  br i1 %16, label %17, label %21, !dbg !12582

17:                                               ; preds = %9
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12586
  %19 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12586
  %20 = call %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %19) #10, !dbg !12586
  call void @z_slist_tail_set.66(%struct._slist* noundef %18, %struct._snode* noundef %20) #10, !dbg !12586
  br label %21, !dbg !12586

21:                                               ; preds = %17, %9
  br label %34, !dbg !12582

22:                                               ; preds = %3
  %23 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !12588
  %24 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !12588
  %25 = call %struct._snode* @z_snode_next_peek.70(%struct._snode* noundef %24) #10, !dbg !12588
  call void @z_snode_next_set.63(%struct._snode* noundef %23, %struct._snode* noundef %25) #10, !dbg !12588
  %26 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12590
  %27 = call %struct._snode* @sys_slist_peek_tail.65(%struct._slist* noundef %26) #10, !dbg !12590
  %28 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !12590
  %29 = icmp eq %struct._snode* %27, %28, !dbg !12590
  br i1 %29, label %30, label %33, !dbg !12588

30:                                               ; preds = %22
  %31 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12592
  %32 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !12592
  call void @z_slist_tail_set.66(%struct._slist* noundef %31, %struct._snode* noundef %32) #10, !dbg !12592
  br label %33, !dbg !12592

33:                                               ; preds = %30, %22
  br label %34

34:                                               ; preds = %33, %21
  %35 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !12577
  call void @z_snode_next_set.63(%struct._snode* noundef %35, %struct._snode* noundef null) #10, !dbg !12577
  ret void, !dbg !12577
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next.68(%struct._snode* noundef %0) #1 !dbg !12594 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !12597, metadata !DIExpression()), !dbg !12598
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !12598
  %4 = icmp ne %struct._snode* %3, null, !dbg !12598
  br i1 %4, label %5, label %8, !dbg !12598

5:                                                ; preds = %1
  %6 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !12598
  %7 = call %struct._snode* @sys_slist_peek_next_no_check.69(%struct._snode* noundef %6) #10, !dbg !12598
  br label %9, !dbg !12598

8:                                                ; preds = %1
  br label %9, !dbg !12598

9:                                                ; preds = %8, %5
  %10 = phi %struct._snode* [ %7, %5 ], [ null, %8 ], !dbg !12598
  ret %struct._snode* %10, !dbg !12598
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next_no_check.69(%struct._snode* noundef %0) #1 !dbg !12599 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !12600, metadata !DIExpression()), !dbg !12601
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !12601
  %4 = call %struct._snode* @z_snode_next_peek.70(%struct._snode* noundef %3) #10, !dbg !12601
  ret %struct._snode* %4, !dbg !12601
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @z_snode_next_peek.70(%struct._snode* noundef %0) #1 !dbg !12602 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !12603, metadata !DIExpression()), !dbg !12604
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !12605
  %4 = getelementptr inbounds %struct._snode, %struct._snode* %3, i32 0, i32 0, !dbg !12606
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !12606
  ret %struct._snode* %5, !dbg !12607
}

; Function Attrs: noinline nounwind optnone
define internal %struct.gpio_nrfx_cfg* @get_port_cfg(%struct.device.397* noundef %0) #1 !dbg !12608 {
  %2 = alloca %struct.device.397*, align 4
  store %struct.device.397* %0, %struct.device.397** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %2, metadata !12611, metadata !DIExpression()), !dbg !12612
  %3 = load %struct.device.397*, %struct.device.397** %2, align 4, !dbg !12613
  %4 = getelementptr inbounds %struct.device.397, %struct.device.397* %3, i32 0, i32 1, !dbg !12614
  %5 = load i8*, i8** %4, align 4, !dbg !12614
  %6 = bitcast i8* %5 to %struct.gpio_nrfx_cfg*, !dbg !12613
  ret %struct.gpio_nrfx_cfg* %6, !dbg !12615
}

; Function Attrs: noinline nounwind optnone
define internal i32 @get_trigger(i32 noundef %0, i32 noundef %1) #1 !dbg !12616 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12619, metadata !DIExpression()), !dbg !12620
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12621, metadata !DIExpression()), !dbg !12622
  %6 = load i32, i32* %4, align 4, !dbg !12623
  %7 = icmp eq i32 %6, 4194304, !dbg !12625
  br i1 %7, label %8, label %13, !dbg !12626

8:                                                ; preds = %2
  %9 = load i32, i32* %5, align 4, !dbg !12627
  %10 = icmp eq i32 %9, 33554432, !dbg !12629
  %11 = zext i1 %10 to i64, !dbg !12627
  %12 = select i1 %10, i32 4, i32 5, !dbg !12627
  store i32 %12, i32* %3, align 4, !dbg !12630
  br label %24, !dbg !12630

13:                                               ; preds = %2
  %14 = load i32, i32* %5, align 4, !dbg !12631
  %15 = icmp eq i32 %14, 100663296, !dbg !12632
  br i1 %15, label %16, label %17, !dbg !12631

16:                                               ; preds = %13
  br label %22, !dbg !12631

17:                                               ; preds = %13
  %18 = load i32, i32* %5, align 4, !dbg !12633
  %19 = icmp eq i32 %18, 33554432, !dbg !12634
  %20 = zext i1 %19 to i64, !dbg !12633
  %21 = select i1 %19, i32 2, i32 1, !dbg !12633
  br label %22, !dbg !12631

22:                                               ; preds = %17, %16
  %23 = phi i32 [ 3, %16 ], [ %21, %17 ], !dbg !12631
  store i32 %23, i32* %3, align 4, !dbg !12635
  br label %24, !dbg !12635

24:                                               ; preds = %22, %8
  %25 = load i32, i32* %3, align 4, !dbg !12636
  ret i32 %25, !dbg !12636
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_pin_dir_get(i32 noundef %0) #1 !dbg !12637 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12640, metadata !DIExpression()), !dbg !12641
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !12642, metadata !DIExpression()), !dbg !12643
  %4 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode(i32* noundef %2) #10, !dbg !12644
  store %struct.NRF_GPIO_Type* %4, %struct.NRF_GPIO_Type** %3, align 4, !dbg !12643
  %5 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !12645
  %6 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %5, i32 0, i32 9, !dbg !12646
  %7 = load i32, i32* %2, align 4, !dbg !12647
  %8 = getelementptr inbounds [32 x i32], [32 x i32]* %6, i32 0, i32 %7, !dbg !12645
  %9 = load volatile i32, i32* %8, align 4, !dbg !12645
  %10 = and i32 %9, 1, !dbg !12648
  %11 = lshr i32 %10, 0, !dbg !12649
  ret i32 %11, !dbg !12650
}

; Function Attrs: noinline nounwind optnone
define internal %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode(i32* noundef %0) #1 !dbg !12651 {
  %2 = alloca i32*, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !12654, metadata !DIExpression()), !dbg !12655
  %3 = load i32*, i32** %2, align 4, !dbg !12656
  %4 = call i32 @nrf_gpio_pin_port_number_extract(i32* noundef %3) #10, !dbg !12657
  switch i32 %4, label %5 [
    i32 0, label %6
  ], !dbg !12658

5:                                                ; preds = %1
  br label %6, !dbg !12659

6:                                                ; preds = %1, %5
  ret %struct.NRF_GPIO_Type* inttoptr (i32 1342177280 to %struct.NRF_GPIO_Type*), !dbg !12662
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_pin_port_number_extract(i32* noundef %0) #1 !dbg !12663 {
  %2 = alloca i32*, align 4
  %3 = alloca i32, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !12666, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12668, metadata !DIExpression()), !dbg !12669
  %4 = load i32*, i32** %2, align 4, !dbg !12670
  %5 = load i32, i32* %4, align 4, !dbg !12671
  store i32 %5, i32* %3, align 4, !dbg !12669
  %6 = load i32, i32* %3, align 4, !dbg !12672
  %7 = and i32 %6, 31, !dbg !12673
  %8 = load i32*, i32** %2, align 4, !dbg !12674
  store i32 %7, i32* %8, align 4, !dbg !12675
  %9 = load i32, i32* %3, align 4, !dbg !12676
  %10 = lshr i32 %9, 5, !dbg !12677
  ret i32 %10, !dbg !12678
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_port_out_read(%struct.NRF_GPIO_Type* noundef %0) #1 !dbg !12679 {
  %2 = alloca %struct.NRF_GPIO_Type*, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %2, metadata !12684, metadata !DIExpression()), !dbg !12685
  %3 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %2, align 4, !dbg !12686
  %4 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %3, i32 0, i32 1, !dbg !12687
  %5 = load volatile i32, i32* %4, align 4, !dbg !12687
  ret i32 %5, !dbg !12688
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_port_out_set(%struct.NRF_GPIO_Type* noundef %0, i32 noundef %1) #1 !dbg !12689 {
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !12692, metadata !DIExpression()), !dbg !12693
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12694, metadata !DIExpression()), !dbg !12695
  %5 = load i32, i32* %4, align 4, !dbg !12696
  %6 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !12697
  %7 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %6, i32 0, i32 2, !dbg !12698
  store volatile i32 %5, i32* %7, align 4, !dbg !12699
  ret void, !dbg !12700
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_port_out_clear(%struct.NRF_GPIO_Type* noundef %0, i32 noundef %1) #1 !dbg !12701 {
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !12702, metadata !DIExpression()), !dbg !12703
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12704, metadata !DIExpression()), !dbg !12705
  %5 = load i32, i32* %4, align 4, !dbg !12706
  %6 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !12707
  %7 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %6, i32 0, i32 3, !dbg !12708
  store volatile i32 %5, i32* %7, align 4, !dbg !12709
  ret void, !dbg !12710
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_port_in_read(%struct.NRF_GPIO_Type* noundef %0) #1 !dbg !12711 {
  %2 = alloca %struct.NRF_GPIO_Type*, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %2, metadata !12712, metadata !DIExpression()), !dbg !12713
  %3 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %2, align 4, !dbg !12714
  %4 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %3, i32 0, i32 4, !dbg !12715
  %5 = load volatile i32, i32* %4, align 4, !dbg !12715
  ret i32 %5, !dbg !12716
}

; Function Attrs: noinline nounwind optnone
define internal i32 @get_drive(i32 noundef %0, i32* noundef %1) #1 !dbg !12717 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12721, metadata !DIExpression()), !dbg !12722
  store i32* %1, i32** %5, align 4
  call void @llvm.dbg.declare(metadata i32** %5, metadata !12723, metadata !DIExpression()), !dbg !12724
  %6 = load i32, i32* %4, align 4, !dbg !12725
  %7 = and i32 %6, 774, !dbg !12726
  switch i32 %7, label %24 [
    i32 0, label %8
    i32 512, label %10
    i32 256, label %12
    i32 768, label %14
    i32 6, label %16
    i32 262, label %18
    i32 2, label %20
    i32 514, label %22
  ], !dbg !12727

8:                                                ; preds = %2
  %9 = load i32*, i32** %5, align 4, !dbg !12728
  store i32 0, i32* %9, align 4, !dbg !12730
  br label %25, !dbg !12731

10:                                               ; preds = %2
  %11 = load i32*, i32** %5, align 4, !dbg !12732
  store i32 2, i32* %11, align 4, !dbg !12733
  br label %25, !dbg !12734

12:                                               ; preds = %2
  %13 = load i32*, i32** %5, align 4, !dbg !12735
  store i32 1, i32* %13, align 4, !dbg !12736
  br label %25, !dbg !12737

14:                                               ; preds = %2
  %15 = load i32*, i32** %5, align 4, !dbg !12738
  store i32 3, i32* %15, align 4, !dbg !12739
  br label %25, !dbg !12740

16:                                               ; preds = %2
  %17 = load i32*, i32** %5, align 4, !dbg !12741
  store i32 6, i32* %17, align 4, !dbg !12742
  br label %25, !dbg !12743

18:                                               ; preds = %2
  %19 = load i32*, i32** %5, align 4, !dbg !12744
  store i32 7, i32* %19, align 4, !dbg !12745
  br label %25, !dbg !12746

20:                                               ; preds = %2
  %21 = load i32*, i32** %5, align 4, !dbg !12747
  store i32 4, i32* %21, align 4, !dbg !12748
  br label %25, !dbg !12749

22:                                               ; preds = %2
  %23 = load i32*, i32** %5, align 4, !dbg !12750
  store i32 5, i32* %23, align 4, !dbg !12751
  br label %25, !dbg !12752

24:                                               ; preds = %2
  store i32 -22, i32* %3, align 4, !dbg !12753
  br label %26, !dbg !12753

25:                                               ; preds = %22, %20, %18, %16, %14, %12, %10, %8
  store i32 0, i32* %3, align 4, !dbg !12754
  br label %26, !dbg !12754

26:                                               ; preds = %25, %24
  %27 = load i32, i32* %3, align 4, !dbg !12755
  ret i32 %27, !dbg !12755
}

; Function Attrs: noinline nounwind optnone
define internal i32 @get_pull(i32 noundef %0) #1 !dbg !12756 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12759, metadata !DIExpression()), !dbg !12760
  %4 = load i32, i32* %3, align 4, !dbg !12761
  %5 = and i32 %4, 16, !dbg !12763
  %6 = icmp ne i32 %5, 0, !dbg !12763
  br i1 %6, label %7, label %8, !dbg !12764

7:                                                ; preds = %1
  store i32 3, i32* %2, align 4, !dbg !12765
  br label %15, !dbg !12765

8:                                                ; preds = %1
  %9 = load i32, i32* %3, align 4, !dbg !12767
  %10 = and i32 %9, 32, !dbg !12769
  %11 = icmp ne i32 %10, 0, !dbg !12769
  br i1 %11, label %12, label %13, !dbg !12770

12:                                               ; preds = %8
  store i32 1, i32* %2, align 4, !dbg !12771
  br label %15, !dbg !12771

13:                                               ; preds = %8
  br label %14

14:                                               ; preds = %13
  store i32 0, i32* %2, align 4, !dbg !12773
  br label %15, !dbg !12773

15:                                               ; preds = %14, %12, %7
  %16 = load i32, i32* %2, align 4, !dbg !12774
  ret i32 %16, !dbg !12774
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_nrfx_init(%struct.device.397* noundef %0) #1 !dbg !1216 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12775, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12777, metadata !DIExpression()), !dbg !12778
  %5 = call zeroext i1 @nrfx_gpiote_is_init() #10, !dbg !12779
  br i1 %5, label %6, label %7, !dbg !12781

6:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !12782
  br label %13, !dbg !12782

7:                                                ; preds = %1
  %8 = call i32 @nrfx_gpiote_init(i8 noundef zeroext 0) #10, !dbg !12784
  store i32 %8, i32* %4, align 4, !dbg !12785
  %9 = load i32, i32* %4, align 4, !dbg !12786
  %10 = icmp ne i32 %9, 195887104, !dbg !12788
  br i1 %10, label %11, label %12, !dbg !12789

11:                                               ; preds = %7
  store i32 -5, i32* %2, align 4, !dbg !12790
  br label %13, !dbg !12790

12:                                               ; preds = %7
  call void @nrfx_gpiote_global_callback_set(void (i32, i32, i8*)* noundef @nrfx_gpio_handler, i8* noundef null) #10, !dbg !12792
  call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 1, i32 noundef 0) #10, !dbg !12793
  store i32 0, i32* %2, align 4, !dbg !12795
  br label %13, !dbg !12795

13:                                               ; preds = %12, %11, %6
  %14 = load i32, i32* %2, align 4, !dbg !12796
  ret i32 %14, !dbg !12796
}

; Function Attrs: noinline nounwind optnone
define internal void @nrfx_gpio_handler(i32 noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !12797 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.device.397*, align 4
  %10 = alloca %struct.gpio_nrfx_data*, align 4
  %11 = alloca %struct._slist*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12798, metadata !DIExpression()), !dbg !12799
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12800, metadata !DIExpression()), !dbg !12801
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12802, metadata !DIExpression()), !dbg !12803
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12804, metadata !DIExpression()), !dbg !12805
  %12 = load i32, i32* %4, align 4, !dbg !12806
  store i32 %12, i32* %7, align 4, !dbg !12805
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12807, metadata !DIExpression()), !dbg !12808
  %13 = call i32 @nrf_gpio_pin_port_number_extract(i32* noundef %7) #10, !dbg !12809
  store i32 %13, i32* %8, align 4, !dbg !12808
  call void @llvm.dbg.declare(metadata %struct.device.397** %9, metadata !12810, metadata !DIExpression()), !dbg !12811
  %14 = load i32, i32* %8, align 4, !dbg !12812
  %15 = call %struct.device.397* @get_dev(i32 noundef %14) #10, !dbg !12813
  store %struct.device.397* %15, %struct.device.397** %9, align 4, !dbg !12811
  %16 = load %struct.device.397*, %struct.device.397** %9, align 4, !dbg !12814
  %17 = icmp eq %struct.device.397* %16, null, !dbg !12816
  br i1 %17, label %18, label %19, !dbg !12817

18:                                               ; preds = %3
  br label %28, !dbg !12818

19:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata %struct.gpio_nrfx_data** %10, metadata !12820, metadata !DIExpression()), !dbg !12821
  %20 = load %struct.device.397*, %struct.device.397** %9, align 4, !dbg !12822
  %21 = call %struct.gpio_nrfx_data* @get_port_data(%struct.device.397* noundef %20) #10, !dbg !12823
  store %struct.gpio_nrfx_data* %21, %struct.gpio_nrfx_data** %10, align 4, !dbg !12821
  call void @llvm.dbg.declare(metadata %struct._slist** %11, metadata !12824, metadata !DIExpression()), !dbg !12825
  %22 = load %struct.gpio_nrfx_data*, %struct.gpio_nrfx_data** %10, align 4, !dbg !12826
  %23 = getelementptr inbounds %struct.gpio_nrfx_data, %struct.gpio_nrfx_data* %22, i32 0, i32 1, !dbg !12827
  store %struct._slist* %23, %struct._slist** %11, align 4, !dbg !12825
  %24 = load %struct._slist*, %struct._slist** %11, align 4, !dbg !12828
  %25 = load %struct.device.397*, %struct.device.397** %9, align 4, !dbg !12829
  %26 = load i32, i32* %7, align 4, !dbg !12830
  %27 = shl i32 1, %26, !dbg !12830
  call void @gpio_fire_callbacks(%struct._slist* noundef %24, %struct.device.397* noundef %25, i32 noundef %27) #10, !dbg !12831
  br label %28, !dbg !12832

28:                                               ; preds = %19, %18
  ret void, !dbg !12832
}

; Function Attrs: noinline nounwind optnone
define internal %struct.device.397* @get_dev(i32 noundef %0) #1 !dbg !12833 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.397*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12836, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12838, metadata !DIExpression()), !dbg !12839
  store %struct.device.397* null, %struct.device.397** %3, align 4, !dbg !12839
  %4 = load i32, i32* %2, align 4, !dbg !12840
  %5 = icmp eq i32 0, %4, !dbg !12840
  br i1 %5, label %6, label %7, !dbg !12843

6:                                                ; preds = %1
  store %struct.device.397* @__device_dts_ord_54, %struct.device.397** %3, align 4, !dbg !12844
  br label %7, !dbg !12844

7:                                                ; preds = %6, %1
  %8 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !12846
  ret %struct.device.397* %8, !dbg !12847
}

; Function Attrs: noinline nounwind optnone
define internal void @gpio_fire_callbacks(%struct._slist* noundef %0, %struct.device.397* noundef %1, i32 noundef %2) #1 !dbg !12848 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct.device.397*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.gpio_callback*, align 4
  %8 = alloca %struct.gpio_callback*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !12851, metadata !DIExpression()), !dbg !12852
  store %struct.device.397* %1, %struct.device.397** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %5, metadata !12853, metadata !DIExpression()), !dbg !12854
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12855, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %7, metadata !12857, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %8, metadata !12859, metadata !DIExpression()), !dbg !12860
  %9 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12861
  %10 = call %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %9) #10, !dbg !12861
  %11 = icmp ne %struct._snode* %10, null, !dbg !12861
  br i1 %11, label %12, label %18, !dbg !12861

12:                                               ; preds = %3
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !12861
  %14 = call %struct._snode* @sys_slist_peek_head.62(%struct._slist* noundef %13) #10, !dbg !12861
  %15 = bitcast %struct._snode* %14 to i8*, !dbg !12861
  %16 = getelementptr inbounds i8, i8* %15, i32 0, !dbg !12861
  %17 = bitcast i8* %16 to %struct.gpio_callback*, !dbg !12861
  br label %19, !dbg !12861

18:                                               ; preds = %3
  br label %19, !dbg !12861

19:                                               ; preds = %18, %12
  %20 = phi %struct.gpio_callback* [ %17, %12 ], [ null, %18 ], !dbg !12861
  store %struct.gpio_callback* %20, %struct.gpio_callback** %7, align 4, !dbg !12861
  %21 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12861
  %22 = icmp ne %struct.gpio_callback* %21, null, !dbg !12861
  br i1 %22, label %23, label %38, !dbg !12861

23:                                               ; preds = %19
  %24 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12861
  %25 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %24, i32 0, i32 0, !dbg !12861
  %26 = call %struct._snode* @sys_slist_peek_next.68(%struct._snode* noundef %25) #10, !dbg !12861
  %27 = icmp ne %struct._snode* %26, null, !dbg !12861
  br i1 %27, label %28, label %35, !dbg !12861

28:                                               ; preds = %23
  %29 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12861
  %30 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %29, i32 0, i32 0, !dbg !12861
  %31 = call %struct._snode* @sys_slist_peek_next.68(%struct._snode* noundef %30) #10, !dbg !12861
  %32 = bitcast %struct._snode* %31 to i8*, !dbg !12861
  %33 = getelementptr inbounds i8, i8* %32, i32 0, !dbg !12861
  %34 = bitcast i8* %33 to %struct.gpio_callback*, !dbg !12861
  br label %36, !dbg !12861

35:                                               ; preds = %23
  br label %36, !dbg !12861

36:                                               ; preds = %35, %28
  %37 = phi %struct.gpio_callback* [ %34, %28 ], [ null, %35 ], !dbg !12861
  br label %39, !dbg !12861

38:                                               ; preds = %19
  br label %39, !dbg !12861

39:                                               ; preds = %38, %36
  %40 = phi %struct.gpio_callback* [ %37, %36 ], [ null, %38 ], !dbg !12861
  store %struct.gpio_callback* %40, %struct.gpio_callback** %8, align 4, !dbg !12861
  br label %41, !dbg !12861

41:                                               ; preds = %83, %39
  %42 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12863
  %43 = icmp ne %struct.gpio_callback* %42, null, !dbg !12863
  br i1 %43, label %44, label %85, !dbg !12861

44:                                               ; preds = %41
  %45 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12865
  %46 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %45, i32 0, i32 2, !dbg !12868
  %47 = load i32, i32* %46, align 4, !dbg !12868
  %48 = load i32, i32* %6, align 4, !dbg !12869
  %49 = and i32 %47, %48, !dbg !12870
  %50 = icmp ne i32 %49, 0, !dbg !12870
  br i1 %50, label %51, label %62, !dbg !12871

51:                                               ; preds = %44
  %52 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12872
  %53 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %52, i32 0, i32 1, !dbg !12874
  %54 = load void (%struct.device.397*, %struct.gpio_callback*, i32)*, void (%struct.device.397*, %struct.gpio_callback*, i32)** %53, align 4, !dbg !12874
  %55 = load %struct.device.397*, %struct.device.397** %5, align 4, !dbg !12875
  %56 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12876
  %57 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12877
  %58 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %57, i32 0, i32 2, !dbg !12878
  %59 = load i32, i32* %58, align 4, !dbg !12878
  %60 = load i32, i32* %6, align 4, !dbg !12879
  %61 = and i32 %59, %60, !dbg !12880
  call void %54(%struct.device.397* noundef %55, %struct.gpio_callback* noundef %56, i32 noundef %61) #10, !dbg !12872
  br label %62, !dbg !12881

62:                                               ; preds = %51, %44
  br label %63, !dbg !12882

63:                                               ; preds = %62
  %64 = load %struct.gpio_callback*, %struct.gpio_callback** %8, align 4, !dbg !12863
  store %struct.gpio_callback* %64, %struct.gpio_callback** %7, align 4, !dbg !12863
  %65 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12863
  %66 = icmp ne %struct.gpio_callback* %65, null, !dbg !12863
  br i1 %66, label %67, label %82, !dbg !12863

67:                                               ; preds = %63
  %68 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12863
  %69 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %68, i32 0, i32 0, !dbg !12863
  %70 = call %struct._snode* @sys_slist_peek_next.68(%struct._snode* noundef %69) #10, !dbg !12863
  %71 = icmp ne %struct._snode* %70, null, !dbg !12863
  br i1 %71, label %72, label %79, !dbg !12863

72:                                               ; preds = %67
  %73 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !12863
  %74 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %73, i32 0, i32 0, !dbg !12863
  %75 = call %struct._snode* @sys_slist_peek_next.68(%struct._snode* noundef %74) #10, !dbg !12863
  %76 = bitcast %struct._snode* %75 to i8*, !dbg !12863
  %77 = getelementptr inbounds i8, i8* %76, i32 0, !dbg !12863
  %78 = bitcast i8* %77 to %struct.gpio_callback*, !dbg !12863
  br label %80, !dbg !12863

79:                                               ; preds = %67
  br label %80, !dbg !12863

80:                                               ; preds = %79, %72
  %81 = phi %struct.gpio_callback* [ %78, %72 ], [ null, %79 ], !dbg !12863
  br label %83, !dbg !12863

82:                                               ; preds = %63
  br label %83, !dbg !12863

83:                                               ; preds = %82, %80
  %84 = phi %struct.gpio_callback* [ %81, %80 ], [ null, %82 ], !dbg !12863
  store %struct.gpio_callback* %84, %struct.gpio_callback** %8, align 4, !dbg !12863
  br label %41, !dbg !12863, !llvm.loop !12883

85:                                               ; preds = %41
  ret void, !dbg !12885
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_nrfx_poll_in(%struct.device.397* noundef %0, i8* noundef %1) #1 !dbg !12886 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i8*, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !12887, metadata !DIExpression()), !dbg !12888
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12889, metadata !DIExpression()), !dbg !12890
  %6 = call zeroext i1 @nrf_uart_event_check(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 264) #10, !dbg !12891
  br i1 %6, label %8, label %7, !dbg !12893

7:                                                ; preds = %2
  store i32 -1, i32* %3, align 4, !dbg !12894
  br label %11, !dbg !12894

8:                                                ; preds = %2
  call void @nrf_uart_event_clear(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 264) #10, !dbg !12896
  %9 = call zeroext i8 @nrf_uart_rxd_get(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*)) #10, !dbg !12897
  %10 = load i8*, i8** %5, align 4, !dbg !12898
  store i8 %9, i8* %10, align 1, !dbg !12899
  store i32 0, i32* %3, align 4, !dbg !12900
  br label %11, !dbg !12900

11:                                               ; preds = %8, %7
  %12 = load i32, i32* %3, align 4, !dbg !12901
  ret i32 %12, !dbg !12901
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_nrfx_poll_out(%struct.device.397* noundef %0, i8 noundef zeroext %1) #1 !dbg !1455 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !12902, metadata !DIExpression()), !dbg !12903
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !12904, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.declare(metadata i32** %5, metadata !12906, metadata !DIExpression()), !dbg !12907
  store i32* @uart_nrfx_poll_out.poll_out_lock, i32** %5, align 4, !dbg !12908
  %9 = call zeroext i1 @k_is_in_isr() #10, !dbg !12909
  br i1 %9, label %25, label %10, !dbg !12911

10:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12912, metadata !DIExpression()), !dbg !12914
  store i8 100, i8* %6, align 1, !dbg !12914
  br label %11, !dbg !12915

11:                                               ; preds = %23, %10
  %12 = load i32*, i32** %5, align 4, !dbg !12916
  %13 = call zeroext i1 @atomic_cas(i32* noundef %12, i32 noundef 0, i32 noundef 1) #10, !dbg !12917
  %14 = zext i1 %13 to i32, !dbg !12917
  %15 = icmp eq i32 %14, 0, !dbg !12918
  br i1 %15, label %16, label %24, !dbg !12915

16:                                               ; preds = %11
  %17 = call i32 @k_msleep.75(i32 noundef 1) #10, !dbg !12919
  %18 = load i8, i8* %6, align 1, !dbg !12923
  %19 = add i8 %18, -1, !dbg !12923
  store i8 %19, i8* %6, align 1, !dbg !12923
  %20 = zext i8 %19 to i32, !dbg !12923
  %21 = icmp eq i32 %20, 0, !dbg !12925
  br i1 %21, label %22, label %23, !dbg !12926

22:                                               ; preds = %16
  br label %24, !dbg !12927

23:                                               ; preds = %16
  br label %11, !dbg !12915, !llvm.loop !12929

24:                                               ; preds = %22, %11
  br label %27, !dbg !12931

25:                                               ; preds = %2
  %26 = load i32*, i32** %5, align 4, !dbg !12932
  store i32 1, i32* %26, align 4, !dbg !12934
  br label %27

27:                                               ; preds = %25, %24
  call void @event_txdrdy_clear() #10, !dbg !12935
  call void @nrf_uart_task_trigger(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 8) #10, !dbg !12936
  %28 = load i8, i8* %4, align 1, !dbg !12937
  call void @nrf_uart_txd_set(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i8 noundef zeroext %28) #10, !dbg !12938
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12939, metadata !DIExpression()), !dbg !12940
  br label %29, !dbg !12941

29:                                               ; preds = %27
  store i32 0, i32* %7, align 4, !dbg !12942
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12944, metadata !DIExpression()), !dbg !12942
  store i32 1000, i32* %8, align 4, !dbg !12942
  br label %30, !dbg !12942

30:                                               ; preds = %34, %29
  %31 = call zeroext i1 @event_txdrdy_check() #10, !dbg !12945
  br i1 %31, label %32, label %33, !dbg !12948

32:                                               ; preds = %30
  store i32 1, i32* %7, align 4, !dbg !12949
  br label %38, !dbg !12949

33:                                               ; preds = %30
  call void @nrfx_busy_wait(i32 noundef 1) #10, !dbg !12948
  br label %34, !dbg !12948

34:                                               ; preds = %33
  %35 = load i32, i32* %8, align 4, !dbg !12942
  %36 = add i32 %35, -1, !dbg !12942
  store i32 %36, i32* %8, align 4, !dbg !12942
  %37 = icmp ne i32 %36, 0, !dbg !12948
  br i1 %37, label %30, label %38, !dbg !12948, !llvm.loop !12951

38:                                               ; preds = %34, %32
  br label %39, !dbg !12942

39:                                               ; preds = %38
  call void @nrf_uart_task_trigger(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 12) #10, !dbg !12952
  %40 = load i32*, i32** %5, align 4, !dbg !12953
  store i32 0, i32* %40, align 4, !dbg !12954
  ret void, !dbg !12955
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_nrfx_err_check(%struct.device.397* noundef %0) #1 !dbg !12956 {
  %2 = alloca %struct.device.397*, align 4
  store %struct.device.397* %0, %struct.device.397** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %2, metadata !12957, metadata !DIExpression()), !dbg !12958
  %3 = call i32 @nrf_uart_errorsrc_get_and_clear(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*)) #10, !dbg !12959
  ret i32 %3, !dbg !12960
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_nrfx_configure(%struct.device.397* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !12961 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca %struct.uart_config*, align 4
  %6 = alloca %struct.uart_nrfx_data*, align 4
  %7 = alloca %struct._thread_arch.15, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !12962, metadata !DIExpression()), !dbg !12963
  store %struct.uart_config* %1, %struct.uart_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %5, metadata !12964, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.declare(metadata %struct.uart_nrfx_data** %6, metadata !12966, metadata !DIExpression()), !dbg !12968
  %8 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !12969
  %9 = getelementptr inbounds %struct.device.397, %struct.device.397* %8, i32 0, i32 4, !dbg !12970
  %10 = load i8*, i8** %9, align 4, !dbg !12970
  %11 = bitcast i8* %10 to %struct.uart_nrfx_data*, !dbg !12969
  store %struct.uart_nrfx_data* %11, %struct.uart_nrfx_data** %6, align 4, !dbg !12968
  call void @llvm.dbg.declare(metadata %struct._thread_arch.15* %7, metadata !12971, metadata !DIExpression()), !dbg !12979
  %12 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !12980
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %12, i32 0, i32 2, !dbg !12982
  %14 = load i8, i8* %13, align 1, !dbg !12982
  %15 = zext i8 %14 to i32, !dbg !12980
  %16 = icmp ne i32 %15, 1, !dbg !12983
  br i1 %16, label %17, label %18, !dbg !12984

17:                                               ; preds = %2
  store i32 -134, i32* %3, align 4, !dbg !12985
  br label %58, !dbg !12985

18:                                               ; preds = %2
  %19 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !12987
  %20 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %19, i32 0, i32 3, !dbg !12989
  %21 = load i8, i8* %20, align 2, !dbg !12989
  %22 = zext i8 %21 to i32, !dbg !12987
  %23 = icmp ne i32 %22, 3, !dbg !12990
  br i1 %23, label %24, label %25, !dbg !12991

24:                                               ; preds = %18
  store i32 -134, i32* %3, align 4, !dbg !12992
  br label %58, !dbg !12992

25:                                               ; preds = %18
  %26 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !12994
  %27 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %26, i32 0, i32 4, !dbg !12995
  %28 = load i8, i8* %27, align 1, !dbg !12995
  %29 = zext i8 %28 to i32, !dbg !12994
  switch i32 %29, label %33 [
    i32 0, label %30
    i32 1, label %32
  ], !dbg !12996

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %7, i32 0, i32 0, !dbg !12997
  store i32 0, i32* %31, align 4, !dbg !12999
  br label %34, !dbg !13000

32:                                               ; preds = %25
  store i32 -134, i32* %3, align 4, !dbg !13001
  br label %58, !dbg !13001

33:                                               ; preds = %25
  store i32 -134, i32* %3, align 4, !dbg !13004
  br label %58, !dbg !13004

34:                                               ; preds = %30
  %35 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !13005
  %36 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %35, i32 0, i32 1, !dbg !13006
  %37 = load i8, i8* %36, align 4, !dbg !13006
  %38 = zext i8 %37 to i32, !dbg !13005
  switch i32 %38, label %43 [
    i32 0, label %39
    i32 2, label %41
  ], !dbg !13007

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %7, i32 0, i32 1, !dbg !13008
  store i32 0, i32* %40, align 4, !dbg !13010
  br label %44, !dbg !13011

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %7, i32 0, i32 1, !dbg !13012
  store i32 14, i32* %42, align 4, !dbg !13013
  br label %44, !dbg !13014

43:                                               ; preds = %34
  store i32 -134, i32* %3, align 4, !dbg !13015
  br label %58, !dbg !13015

44:                                               ; preds = %41, %39
  %45 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !13016
  %46 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !13018
  %47 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %46, i32 0, i32 0, !dbg !13019
  %48 = load i32, i32* %47, align 4, !dbg !13019
  %49 = call i32 @baudrate_set(%struct.device.397* noundef %45, i32 noundef %48) #10, !dbg !13020
  %50 = icmp ne i32 %49, 0, !dbg !13021
  br i1 %50, label %51, label %52, !dbg !13022

51:                                               ; preds = %44
  store i32 -134, i32* %3, align 4, !dbg !13023
  br label %58, !dbg !13023

52:                                               ; preds = %44
  call void @nrf_uart_configure(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), %struct._thread_arch.15* noundef %7) #10, !dbg !13025
  %53 = load %struct.uart_nrfx_data*, %struct.uart_nrfx_data** %6, align 4, !dbg !13026
  %54 = getelementptr inbounds %struct.uart_nrfx_data, %struct.uart_nrfx_data* %53, i32 0, i32 0, !dbg !13027
  %55 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !13028
  %56 = bitcast %struct.uart_config* %54 to i8*, !dbg !13029
  %57 = bitcast %struct.uart_config* %55 to i8*, !dbg !13029
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 8, i1 false), !dbg !13029
  store i32 0, i32* %3, align 4, !dbg !13030
  br label %58, !dbg !13030

58:                                               ; preds = %52, %51, %43, %33, %32, %24, %17
  %59 = load i32, i32* %3, align 4, !dbg !13031
  ret i32 %59, !dbg !13031
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_nrfx_config_get(%struct.device.397* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !13032 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca %struct.uart_config*, align 4
  %5 = alloca %struct.uart_nrfx_data*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !13033, metadata !DIExpression()), !dbg !13034
  store %struct.uart_config* %1, %struct.uart_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %4, metadata !13035, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.declare(metadata %struct.uart_nrfx_data** %5, metadata !13037, metadata !DIExpression()), !dbg !13038
  %6 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !13039
  %7 = getelementptr inbounds %struct.device.397, %struct.device.397* %6, i32 0, i32 4, !dbg !13040
  %8 = load i8*, i8** %7, align 4, !dbg !13040
  %9 = bitcast i8* %8 to %struct.uart_nrfx_data*, !dbg !13039
  store %struct.uart_nrfx_data* %9, %struct.uart_nrfx_data** %5, align 4, !dbg !13038
  %10 = load %struct.uart_config*, %struct.uart_config** %4, align 4, !dbg !13041
  %11 = load %struct.uart_nrfx_data*, %struct.uart_nrfx_data** %5, align 4, !dbg !13042
  %12 = getelementptr inbounds %struct.uart_nrfx_data, %struct.uart_nrfx_data* %11, i32 0, i32 0, !dbg !13043
  %13 = bitcast %struct.uart_config* %10 to i8*, !dbg !13043
  %14 = bitcast %struct.uart_config* %12 to i8*, !dbg !13043
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %13, i8* align 4 %14, i32 8, i1 false), !dbg !13043
  ret i32 0, !dbg !13044
}

; Function Attrs: noinline nounwind optnone
define internal i32 @baudrate_set(%struct.device.397* noundef %0, i32 noundef %1) #1 !dbg !13045 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !13048, metadata !DIExpression()), !dbg !13049
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13050, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13052, metadata !DIExpression()), !dbg !13054
  %7 = load i32, i32* %5, align 4, !dbg !13055
  switch i32 %7, label %28 [
    i32 300, label %8
    i32 600, label %9
    i32 1200, label %10
    i32 2400, label %11
    i32 4800, label %12
    i32 9600, label %13
    i32 14400, label %14
    i32 19200, label %15
    i32 28800, label %16
    i32 31250, label %17
    i32 38400, label %18
    i32 56000, label %19
    i32 57600, label %20
    i32 76800, label %21
    i32 115200, label %22
    i32 230400, label %23
    i32 250000, label %24
    i32 460800, label %25
    i32 921600, label %26
    i32 1000000, label %27
  ], !dbg !13056

8:                                                ; preds = %2
  store i32 81920, i32* %6, align 4, !dbg !13057
  br label %29, !dbg !13059

9:                                                ; preds = %2
  store i32 159744, i32* %6, align 4, !dbg !13060
  br label %29, !dbg !13061

10:                                               ; preds = %2
  store i32 323584, i32* %6, align 4, !dbg !13062
  br label %29, !dbg !13063

11:                                               ; preds = %2
  store i32 643072, i32* %6, align 4, !dbg !13064
  br label %29, !dbg !13065

12:                                               ; preds = %2
  store i32 1290240, i32* %6, align 4, !dbg !13066
  br label %29, !dbg !13067

13:                                               ; preds = %2
  store i32 2576384, i32* %6, align 4, !dbg !13068
  br label %29, !dbg !13069

14:                                               ; preds = %2
  store i32 3866624, i32* %6, align 4, !dbg !13070
  br label %29, !dbg !13071

15:                                               ; preds = %2
  store i32 5152768, i32* %6, align 4, !dbg !13072
  br label %29, !dbg !13073

16:                                               ; preds = %2
  store i32 7729152, i32* %6, align 4, !dbg !13074
  br label %29, !dbg !13075

17:                                               ; preds = %2
  store i32 8388608, i32* %6, align 4, !dbg !13076
  br label %29, !dbg !13077

18:                                               ; preds = %2
  store i32 10309632, i32* %6, align 4, !dbg !13078
  br label %29, !dbg !13079

19:                                               ; preds = %2
  store i32 15007744, i32* %6, align 4, !dbg !13080
  br label %29, !dbg !13081

20:                                               ; preds = %2
  store i32 15462400, i32* %6, align 4, !dbg !13082
  br label %29, !dbg !13083

21:                                               ; preds = %2
  store i32 20615168, i32* %6, align 4, !dbg !13084
  br label %29, !dbg !13085

22:                                               ; preds = %2
  store i32 30924800, i32* %6, align 4, !dbg !13086
  br label %29, !dbg !13087

23:                                               ; preds = %2
  store i32 61845504, i32* %6, align 4, !dbg !13088
  br label %29, !dbg !13089

24:                                               ; preds = %2
  store i32 67108864, i32* %6, align 4, !dbg !13090
  br label %29, !dbg !13091

25:                                               ; preds = %2
  store i32 123695104, i32* %6, align 4, !dbg !13092
  br label %29, !dbg !13093

26:                                               ; preds = %2
  store i32 247386112, i32* %6, align 4, !dbg !13094
  br label %29, !dbg !13095

27:                                               ; preds = %2
  store i32 268435456, i32* %6, align 4, !dbg !13096
  br label %29, !dbg !13097

28:                                               ; preds = %2
  store i32 -22, i32* %3, align 4, !dbg !13098
  br label %31, !dbg !13098

29:                                               ; preds = %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8
  %30 = load i32, i32* %6, align 4, !dbg !13099
  call void @nrf_uart_baudrate_set(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef %30) #10, !dbg !13100
  store i32 0, i32* %3, align 4, !dbg !13101
  br label %31, !dbg !13101

31:                                               ; preds = %29, %28
  %32 = load i32, i32* %3, align 4, !dbg !13102
  ret i32 %32, !dbg !13102
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_uart_configure(%struct.NRF_UART_Type* noundef %0, %struct._thread_arch.15* noundef %1) #1 !dbg !13103 {
  %3 = alloca %struct.NRF_UART_Type*, align 4
  %4 = alloca %struct._thread_arch.15*, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %3, metadata !13108, metadata !DIExpression()), !dbg !13109
  store %struct._thread_arch.15* %1, %struct._thread_arch.15** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_arch.15** %4, metadata !13110, metadata !DIExpression()), !dbg !13111
  %5 = load %struct._thread_arch.15*, %struct._thread_arch.15** %4, align 4, !dbg !13112
  %6 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %5, i32 0, i32 1, !dbg !13113
  %7 = load i32, i32* %6, align 4, !dbg !13113
  %8 = load %struct._thread_arch.15*, %struct._thread_arch.15** %4, align 4, !dbg !13114
  %9 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %8, i32 0, i32 0, !dbg !13115
  %10 = load i32, i32* %9, align 4, !dbg !13115
  %11 = or i32 %7, %10, !dbg !13116
  %12 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %3, align 4, !dbg !13117
  %13 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %12, i32 0, i32 35, !dbg !13118
  store volatile i32 %11, i32* %13, align 4, !dbg !13119
  ret void, !dbg !13120
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_uart_baudrate_set(%struct.NRF_UART_Type* noundef %0, i32 noundef %1) #1 !dbg !13121 {
  %3 = alloca %struct.NRF_UART_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %3, metadata !13124, metadata !DIExpression()), !dbg !13125
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13126, metadata !DIExpression()), !dbg !13127
  %5 = load i32, i32* %4, align 4, !dbg !13128
  %6 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %3, align 4, !dbg !13129
  %7 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %6, i32 0, i32 33, !dbg !13130
  store volatile i32 %5, i32* %7, align 4, !dbg !13131
  ret void, !dbg !13132
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_uart_errorsrc_get_and_clear(%struct.NRF_UART_Type* noundef %0) #1 !dbg !13133 {
  %2 = alloca %struct.NRF_UART_Type*, align 4
  %3 = alloca i32, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %2, metadata !13136, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13138, metadata !DIExpression()), !dbg !13139
  %4 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %2, align 4, !dbg !13140
  %5 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %4, i32 0, i32 22, !dbg !13141
  %6 = load volatile i32, i32* %5, align 4, !dbg !13141
  store i32 %6, i32* %3, align 4, !dbg !13139
  %7 = load i32, i32* %3, align 4, !dbg !13142
  %8 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %2, align 4, !dbg !13143
  %9 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %8, i32 0, i32 22, !dbg !13144
  store volatile i32 %7, i32* %9, align 4, !dbg !13145
  %10 = load i32, i32* %3, align 4, !dbg !13146
  ret i32 %10, !dbg !13147
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @atomic_cas(i32* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !13148 {
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !13151, metadata !DIExpression()), !dbg !13152
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13153, metadata !DIExpression()), !dbg !13154
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13155, metadata !DIExpression()), !dbg !13156
  br label %7, !dbg !13157

7:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #9, !dbg !13158, !srcloc !13160
  br label %8, !dbg !13158

8:                                                ; preds = %7
  %9 = load i32*, i32** %4, align 4, !dbg !13161
  %10 = load i32, i32* %5, align 4, !dbg !13162
  %11 = load i32, i32* %6, align 4, !dbg !13163
  %12 = call zeroext i1 @z_impl_atomic_cas(i32* noundef %9, i32 noundef %10, i32 noundef %11) #10, !dbg !13164
  ret i1 %12, !dbg !13165
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msleep.75(i32 noundef %0) #1 !dbg !13166 {
  %2 = alloca i32, align 4
  %3 = alloca %union.argument_value, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13167, metadata !DIExpression()), !dbg !13168
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13169
  %5 = load i32, i32* %2, align 4, !dbg !13169
  %6 = icmp sgt i32 %5, 0, !dbg !13169
  br i1 %6, label %7, label %9, !dbg !13169

7:                                                ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !13169
  br label %10, !dbg !13169

9:                                                ; preds = %1
  br label %10, !dbg !13169

10:                                               ; preds = %9, %7
  %11 = phi i32 [ %8, %7 ], [ 0, %9 ], !dbg !13169
  %12 = sext i32 %11 to i64, !dbg !13169
  %13 = call i64 @k_ms_to_ticks_ceil64.77(i64 noundef %12) #10, !dbg !13169
  store i64 %13, i64* %4, align 8, !dbg !13169
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13170
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !13170
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !13170
  %17 = call i32 @k_sleep.78([1 x i64] %16) #10, !dbg !13170
  ret i32 %17, !dbg !13171
}

; Function Attrs: noinline nounwind optnone
define internal void @event_txdrdy_clear() #1 !dbg !13172 {
  call void @nrf_uart_event_clear(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 284) #10, !dbg !13173
  ret void, !dbg !13174
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_uart_task_trigger(%struct.NRF_UART_Type* noundef %0, i32 noundef %1) #1 !dbg !13175 {
  %3 = alloca %struct.NRF_UART_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %3, metadata !13179, metadata !DIExpression()), !dbg !13180
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13181, metadata !DIExpression()), !dbg !13182
  %5 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %3, align 4, !dbg !13183
  %6 = bitcast %struct.NRF_UART_Type* %5 to i8*, !dbg !13184
  %7 = load i32, i32* %4, align 4, !dbg !13185
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !13186
  %9 = bitcast i8* %8 to i32*, !dbg !13187
  store volatile i32 1, i32* %9, align 4, !dbg !13188
  ret void, !dbg !13189
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_uart_txd_set(%struct.NRF_UART_Type* noundef %0, i8 noundef zeroext %1) #1 !dbg !13190 {
  %3 = alloca %struct.NRF_UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %3, metadata !13193, metadata !DIExpression()), !dbg !13194
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !13195, metadata !DIExpression()), !dbg !13196
  %5 = load i8, i8* %4, align 1, !dbg !13197
  %6 = zext i8 %5 to i32, !dbg !13197
  %7 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %3, align 4, !dbg !13198
  %8 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %7, i32 0, i32 31, !dbg !13199
  store volatile i32 %6, i32* %8, align 4, !dbg !13200
  ret void, !dbg !13201
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @event_txdrdy_check() #1 !dbg !13202 {
  %1 = call zeroext i1 @nrf_uart_event_check(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 284) #10, !dbg !13203
  ret i1 %1, !dbg !13204
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_uart_event_check(%struct.NRF_UART_Type* noundef %0, i32 noundef %1) #1 !dbg !13205 {
  %3 = alloca %struct.NRF_UART_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %3, metadata !13211, metadata !DIExpression()), !dbg !13212
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13213, metadata !DIExpression()), !dbg !13214
  %5 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %3, align 4, !dbg !13215
  %6 = bitcast %struct.NRF_UART_Type* %5 to i8*, !dbg !13216
  %7 = load i32, i32* %4, align 4, !dbg !13217
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !13218
  %9 = bitcast i8* %8 to i32*, !dbg !13219
  %10 = load volatile i32, i32* %9, align 4, !dbg !13219
  %11 = icmp ne i32 %10, 0, !dbg !13220
  ret i1 %11, !dbg !13221
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_uart_event_clear(%struct.NRF_UART_Type* noundef %0, i32 noundef %1) #1 !dbg !13222 {
  %3 = alloca %struct.NRF_UART_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %3, metadata !13225, metadata !DIExpression()), !dbg !13226
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13227, metadata !DIExpression()), !dbg !13228
  %5 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %3, align 4, !dbg !13229
  %6 = bitcast %struct.NRF_UART_Type* %5 to i8*, !dbg !13230
  %7 = load i32, i32* %4, align 4, !dbg !13231
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !13232
  %9 = bitcast i8* %8 to i32*, !dbg !13233
  store volatile i32 0, i32* %9, align 4, !dbg !13234
  %10 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %3, align 4, !dbg !13235
  %11 = bitcast %struct.NRF_UART_Type* %10 to i8*, !dbg !13236
  %12 = load i32, i32* %4, align 4, !dbg !13237
  %13 = getelementptr inbounds i8, i8* %11, i32 %12, !dbg !13238
  call void @nrf_event_readback.76(i8* noundef %13) #10, !dbg !13239
  ret void, !dbg !13240
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_event_readback.76(i8* noundef %0) #1 !dbg !13241 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !13242, metadata !DIExpression()), !dbg !13243
  %3 = load i8*, i8** %2, align 4, !dbg !13244
  ret void, !dbg !13245
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64.77(i64 noundef %0) #1 !dbg !13246 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !13247, metadata !DIExpression()), !dbg !13248
  %15 = load i64, i64* %14, align 8, !dbg !13249
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !13250, metadata !DIExpression()), !dbg !13252
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13254, metadata !DIExpression()), !dbg !13255
  store i32 32768, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13256, metadata !DIExpression()), !dbg !13257
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !13258, metadata !DIExpression()), !dbg !13259
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !13260, metadata !DIExpression()), !dbg !13261
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !13262, metadata !DIExpression()), !dbg !13263
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !13264, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.declare(metadata i8* %10, metadata !13266, metadata !DIExpression()), !dbg !13267
  %16 = load i8, i8* %6, align 1, !dbg !13268
  %17 = trunc i8 %16 to i1, !dbg !13268
  br i1 %17, label %18, label %27, !dbg !13269

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !13270
  %20 = load i32, i32* %4, align 4, !dbg !13271
  %21 = icmp ugt i32 %19, %20, !dbg !13272
  br i1 %21, label %22, label %27, !dbg !13273

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !13274
  %24 = load i32, i32* %4, align 4, !dbg !13275
  %25 = urem i32 %23, %24, !dbg !13276
  %26 = icmp eq i32 %25, 0, !dbg !13277
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !13278
  %29 = zext i1 %28 to i8, !dbg !13267
  store i8 %29, i8* %10, align 1, !dbg !13267
  call void @llvm.dbg.declare(metadata i8* %11, metadata !13279, metadata !DIExpression()), !dbg !13280
  %30 = load i8, i8* %6, align 1, !dbg !13281
  %31 = trunc i8 %30 to i1, !dbg !13281
  br i1 %31, label %32, label %41, !dbg !13282

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !13283
  %34 = load i32, i32* %5, align 4, !dbg !13284
  %35 = icmp ugt i32 %33, %34, !dbg !13285
  br i1 %35, label %36, label %41, !dbg !13286

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !13287
  %38 = load i32, i32* %5, align 4, !dbg !13288
  %39 = urem i32 %37, %38, !dbg !13289
  %40 = icmp eq i32 %39, 0, !dbg !13290
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !13278
  %43 = zext i1 %42 to i8, !dbg !13280
  store i8 %43, i8* %11, align 1, !dbg !13280
  %44 = load i32, i32* %4, align 4, !dbg !13291
  %45 = load i32, i32* %5, align 4, !dbg !13293
  %46 = icmp eq i32 %44, %45, !dbg !13294
  br i1 %46, label %47, label %58, !dbg !13295

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !13296
  %49 = trunc i8 %48 to i1, !dbg !13296
  br i1 %49, label %50, label %54, !dbg !13296

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !13298
  %52 = trunc i64 %51 to i32, !dbg !13299
  %53 = zext i32 %52 to i64, !dbg !13300
  br label %56, !dbg !13296

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !13301
  br label %56, !dbg !13296

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !13296
  store i64 %57, i64* %2, align 8, !dbg !13302
  br label %195, !dbg !13302

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !13303, metadata !DIExpression()), !dbg !13304
  store i64 0, i64* %12, align 8, !dbg !13304
  %59 = load i8, i8* %10, align 1, !dbg !13305
  %60 = trunc i8 %59 to i1, !dbg !13305
  br i1 %60, label %86, label %61, !dbg !13307

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13308, metadata !DIExpression()), !dbg !13310
  %62 = load i8, i8* %11, align 1, !dbg !13311
  %63 = trunc i8 %62 to i1, !dbg !13311
  br i1 %63, label %64, label %68, !dbg !13311

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !13312
  %66 = load i32, i32* %5, align 4, !dbg !13313
  %67 = udiv i32 %65, %66, !dbg !13314
  br label %70, !dbg !13311

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !13315
  br label %70, !dbg !13311

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !13311
  store i32 %71, i32* %13, align 4, !dbg !13310
  %72 = load i8, i8* %8, align 1, !dbg !13316
  %73 = trunc i8 %72 to i1, !dbg !13316
  br i1 %73, label %74, label %78, !dbg !13318

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !13319
  %76 = sub i32 %75, 1, !dbg !13321
  %77 = zext i32 %76 to i64, !dbg !13319
  store i64 %77, i64* %12, align 8, !dbg !13322
  br label %78, !dbg !13323

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !13324
  %80 = trunc i8 %79 to i1, !dbg !13324
  br i1 %80, label %81, label %85, !dbg !13326

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !13327
  %83 = udiv i32 %82, 2, !dbg !13329
  %84 = zext i32 %83 to i64, !dbg !13327
  store i64 %84, i64* %12, align 8, !dbg !13330
  br label %85, !dbg !13331

85:                                               ; preds = %81, %78
  br label %86, !dbg !13332

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !13333
  %88 = trunc i8 %87 to i1, !dbg !13333
  br i1 %88, label %89, label %114, !dbg !13335

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !13336
  %91 = load i64, i64* %3, align 8, !dbg !13338
  %92 = add i64 %91, %90, !dbg !13338
  store i64 %92, i64* %3, align 8, !dbg !13338
  %93 = load i8, i8* %7, align 1, !dbg !13339
  %94 = trunc i8 %93 to i1, !dbg !13339
  br i1 %94, label %95, label %106, !dbg !13341

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !13342
  %97 = icmp ult i64 %96, 4294967296, !dbg !13343
  br i1 %97, label %98, label %106, !dbg !13344

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !13345
  %100 = trunc i64 %99 to i32, !dbg !13347
  %101 = load i32, i32* %4, align 4, !dbg !13348
  %102 = load i32, i32* %5, align 4, !dbg !13349
  %103 = udiv i32 %101, %102, !dbg !13350
  %104 = udiv i32 %100, %103, !dbg !13351
  %105 = zext i32 %104 to i64, !dbg !13352
  store i64 %105, i64* %2, align 8, !dbg !13353
  br label %195, !dbg !13353

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !13354
  %108 = load i32, i32* %4, align 4, !dbg !13356
  %109 = zext i32 %108 to i64, !dbg !13357
  %110 = load i32, i32* %5, align 4, !dbg !13358
  %111 = zext i32 %110 to i64, !dbg !13358
  %112 = udiv i64 %109, %111, !dbg !13359
  %113 = udiv i64 %107, %112, !dbg !13360
  store i64 %113, i64* %2, align 8, !dbg !13361
  br label %195, !dbg !13361

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !13362
  %116 = trunc i8 %115 to i1, !dbg !13362
  br i1 %116, label %117, label %136, !dbg !13364

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !13365
  %119 = trunc i8 %118 to i1, !dbg !13365
  br i1 %119, label %120, label %128, !dbg !13368

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !13369
  %122 = trunc i64 %121 to i32, !dbg !13371
  %123 = load i32, i32* %5, align 4, !dbg !13372
  %124 = load i32, i32* %4, align 4, !dbg !13373
  %125 = udiv i32 %123, %124, !dbg !13374
  %126 = mul i32 %122, %125, !dbg !13375
  %127 = zext i32 %126 to i64, !dbg !13376
  store i64 %127, i64* %2, align 8, !dbg !13377
  br label %195, !dbg !13377

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !13378
  %130 = load i32, i32* %5, align 4, !dbg !13380
  %131 = zext i32 %130 to i64, !dbg !13381
  %132 = load i32, i32* %4, align 4, !dbg !13382
  %133 = zext i32 %132 to i64, !dbg !13382
  %134 = udiv i64 %131, %133, !dbg !13383
  %135 = mul i64 %129, %134, !dbg !13384
  store i64 %135, i64* %2, align 8, !dbg !13385
  br label %195, !dbg !13385

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !13386
  %138 = trunc i8 %137 to i1, !dbg !13386
  br i1 %138, label %139, label %151, !dbg !13389

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !13390
  %141 = load i32, i32* %5, align 4, !dbg !13392
  %142 = zext i32 %141 to i64, !dbg !13392
  %143 = mul i64 %140, %142, !dbg !13393
  %144 = load i64, i64* %12, align 8, !dbg !13394
  %145 = add i64 %143, %144, !dbg !13395
  %146 = load i32, i32* %4, align 4, !dbg !13396
  %147 = zext i32 %146 to i64, !dbg !13396
  %148 = udiv i64 %145, %147, !dbg !13397
  %149 = trunc i64 %148 to i32, !dbg !13398
  %150 = zext i32 %149 to i64, !dbg !13398
  store i64 %150, i64* %2, align 8, !dbg !13399
  br label %195, !dbg !13399

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !13400
  %153 = trunc i8 %152 to i1, !dbg !13400
  br i1 %153, label %154, label %174, !dbg !13402

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !13403
  %156 = zext i32 %155 to i64, !dbg !13403
  %157 = mul i64 31536000, %156, !dbg !13403
  %158 = add i64 %157, 4294967294, !dbg !13403
  %159 = udiv i64 %158, 4294967295, !dbg !13403
  %160 = load i32, i32* %5, align 4, !dbg !13403
  %161 = zext i32 %160 to i64, !dbg !13403
  %162 = mul i64 %159, %161, !dbg !13403
  %163 = icmp ule i64 %162, 4294967295, !dbg !13403
  br i1 %163, label %164, label %174, !dbg !13404

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !13405
  %166 = load i32, i32* %5, align 4, !dbg !13407
  %167 = zext i32 %166 to i64, !dbg !13407
  %168 = mul i64 %165, %167, !dbg !13408
  %169 = load i64, i64* %12, align 8, !dbg !13409
  %170 = add i64 %168, %169, !dbg !13410
  %171 = load i32, i32* %4, align 4, !dbg !13411
  %172 = zext i32 %171 to i64, !dbg !13411
  %173 = udiv i64 %170, %172, !dbg !13412
  store i64 %173, i64* %2, align 8, !dbg !13413
  br label %195, !dbg !13413

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !13414
  %176 = load i32, i32* %4, align 4, !dbg !13416
  %177 = zext i32 %176 to i64, !dbg !13416
  %178 = udiv i64 %175, %177, !dbg !13417
  %179 = load i32, i32* %5, align 4, !dbg !13418
  %180 = zext i32 %179 to i64, !dbg !13418
  %181 = mul i64 %178, %180, !dbg !13419
  %182 = load i64, i64* %3, align 8, !dbg !13420
  %183 = load i32, i32* %4, align 4, !dbg !13421
  %184 = zext i32 %183 to i64, !dbg !13421
  %185 = urem i64 %182, %184, !dbg !13422
  %186 = load i32, i32* %5, align 4, !dbg !13423
  %187 = zext i32 %186 to i64, !dbg !13423
  %188 = mul i64 %185, %187, !dbg !13424
  %189 = load i64, i64* %12, align 8, !dbg !13425
  %190 = add i64 %188, %189, !dbg !13426
  %191 = load i32, i32* %4, align 4, !dbg !13427
  %192 = zext i32 %191 to i64, !dbg !13427
  %193 = udiv i64 %190, %192, !dbg !13428
  %194 = add i64 %181, %193, !dbg !13429
  store i64 %194, i64* %2, align 8, !dbg !13430
  br label %195, !dbg !13430

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !13431
  ret i64 %196, !dbg !13432
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.78([1 x i64] %0) #1 !dbg !13433 {
  %2 = alloca %union.argument_value, align 8
  %3 = getelementptr inbounds %union.argument_value, %union.argument_value* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %2, metadata !13440, metadata !DIExpression()), !dbg !13441
  br label %5, !dbg !13442

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !13443, !srcloc !13445
  br label %6, !dbg !13443

6:                                                ; preds = %5
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %2, i32 0, i32 0, !dbg !13446
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !13446
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !13446
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #10, !dbg !13446
  ret i32 %10, !dbg !13447
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i8 @nrf_uart_rxd_get(%struct.NRF_UART_Type* noundef %0) #1 !dbg !13448 {
  %2 = alloca %struct.NRF_UART_Type*, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %2, metadata !13451, metadata !DIExpression()), !dbg !13452
  %3 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %2, align 4, !dbg !13453
  %4 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %3, i32 0, i32 30, !dbg !13454
  %5 = load volatile i32, i32* %4, align 4, !dbg !13454
  %6 = trunc i32 %5 to i8, !dbg !13453
  ret i8 %6, !dbg !13455
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_nrfx_init(%struct.device.397* noundef %0) #1 !dbg !13456 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca %struct.uart_nrfx_data*, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.uart_nrfx_config*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !13457, metadata !DIExpression()), !dbg !13458
  call void @llvm.dbg.declare(metadata %struct.uart_nrfx_data** %4, metadata !13459, metadata !DIExpression()), !dbg !13460
  %7 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !13461
  %8 = getelementptr inbounds %struct.device.397, %struct.device.397* %7, i32 0, i32 4, !dbg !13462
  %9 = load i8*, i8** %8, align 4, !dbg !13462
  %10 = bitcast i8* %9 to %struct.uart_nrfx_data*, !dbg !13461
  store %struct.uart_nrfx_data* %10, %struct.uart_nrfx_data** %4, align 4, !dbg !13460
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13463, metadata !DIExpression()), !dbg !13464
  call void @llvm.dbg.declare(metadata %struct.uart_nrfx_config** %6, metadata !13465, metadata !DIExpression()), !dbg !13467
  %11 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !13468
  %12 = getelementptr inbounds %struct.device.397, %struct.device.397* %11, i32 0, i32 1, !dbg !13469
  %13 = load i8*, i8** %12, align 4, !dbg !13469
  %14 = bitcast i8* %13 to %struct.uart_nrfx_config*, !dbg !13468
  store %struct.uart_nrfx_config* %14, %struct.uart_nrfx_config** %6, align 4, !dbg !13467
  call void @nrf_uart_disable(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*)) #10, !dbg !13470
  %15 = load %struct.uart_nrfx_config*, %struct.uart_nrfx_config** %6, align 4, !dbg !13471
  %16 = getelementptr inbounds %struct.uart_nrfx_config, %struct.uart_nrfx_config* %15, i32 0, i32 0, !dbg !13472
  %17 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %16, align 4, !dbg !13472
  %18 = call i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %17, i8 noundef zeroext 0) #10, !dbg !13473
  store i32 %18, i32* %5, align 4, !dbg !13474
  %19 = load i32, i32* %5, align 4, !dbg !13475
  %20 = icmp slt i32 %19, 0, !dbg !13477
  br i1 %20, label %21, label %23, !dbg !13478

21:                                               ; preds = %1
  %22 = load i32, i32* %5, align 4, !dbg !13479
  store i32 %22, i32* %2, align 4, !dbg !13481
  br label %33, !dbg !13481

23:                                               ; preds = %1
  %24 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !13482
  %25 = load %struct.uart_nrfx_data*, %struct.uart_nrfx_data** %4, align 4, !dbg !13483
  %26 = getelementptr inbounds %struct.uart_nrfx_data, %struct.uart_nrfx_data* %25, i32 0, i32 0, !dbg !13484
  %27 = call i32 @uart_nrfx_configure(%struct.device.397* noundef %24, %struct.uart_config* noundef %26) #10, !dbg !13485
  store i32 %27, i32* %5, align 4, !dbg !13486
  %28 = load i32, i32* %5, align 4, !dbg !13487
  %29 = icmp ne i32 %28, 0, !dbg !13487
  br i1 %29, label %30, label %32, !dbg !13489

30:                                               ; preds = %23
  %31 = load i32, i32* %5, align 4, !dbg !13490
  store i32 %31, i32* %2, align 4, !dbg !13492
  br label %33, !dbg !13492

32:                                               ; preds = %23
  call void @nrf_uart_enable(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*)) #10, !dbg !13493
  call void @nrf_uart_event_clear(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 264) #10, !dbg !13494
  call void @nrf_uart_task_trigger(%struct.NRF_UART_Type* noundef inttoptr (i32 1073750016 to %struct.NRF_UART_Type*), i32 noundef 0) #10, !dbg !13497
  store i32 0, i32* %2, align 4, !dbg !13498
  br label %33, !dbg !13498

33:                                               ; preds = %32, %30, %21
  %34 = load i32, i32* %2, align 4, !dbg !13499
  ret i32 %34, !dbg !13499
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_uart_disable(%struct.NRF_UART_Type* noundef %0) #1 !dbg !13500 {
  %2 = alloca %struct.NRF_UART_Type*, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %2, metadata !13503, metadata !DIExpression()), !dbg !13504
  %3 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %2, align 4, !dbg !13505
  %4 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %3, i32 0, i32 24, !dbg !13506
  store volatile i32 0, i32* %4, align 4, !dbg !13507
  ret void, !dbg !13508
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1) #1 !dbg !13509 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pinctrl_dev_config*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.pinctrl_state*, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %4, metadata !13512, metadata !DIExpression()), !dbg !13513
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !13514, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13516, metadata !DIExpression()), !dbg !13517
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %7, metadata !13518, metadata !DIExpression()), !dbg !13519
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !13520
  %9 = load i8, i8* %5, align 1, !dbg !13521
  %10 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %8, i8 noundef zeroext %9, %struct.pinctrl_state** noundef %7) #10, !dbg !13522
  store i32 %10, i32* %6, align 4, !dbg !13523
  %11 = load i32, i32* %6, align 4, !dbg !13524
  %12 = icmp slt i32 %11, 0, !dbg !13526
  br i1 %12, label %13, label %15, !dbg !13527

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4, !dbg !13528
  store i32 %14, i32* %3, align 4, !dbg !13530
  br label %19, !dbg !13530

15:                                               ; preds = %2
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !13531
  %17 = load %struct.pinctrl_state*, %struct.pinctrl_state** %7, align 4, !dbg !13532
  %18 = call i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %16, %struct.pinctrl_state* noundef %17) #10, !dbg !13533
  store i32 %18, i32* %3, align 4, !dbg !13534
  br label %19, !dbg !13534

19:                                               ; preds = %15, %13
  %20 = load i32, i32* %3, align 4, !dbg !13535
  ret i32 %20, !dbg !13535
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_uart_enable(%struct.NRF_UART_Type* noundef %0) #1 !dbg !13536 {
  %2 = alloca %struct.NRF_UART_Type*, align 4
  store %struct.NRF_UART_Type* %0, %struct.NRF_UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_UART_Type** %2, metadata !13537, metadata !DIExpression()), !dbg !13538
  %3 = load %struct.NRF_UART_Type*, %struct.NRF_UART_Type** %2, align 4, !dbg !13539
  %4 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %3, i32 0, i32 24, !dbg !13540
  store volatile i32 4, i32* %4, align 4, !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %0, %struct.pinctrl_state* noundef %1) #1 !dbg !13543 {
  %3 = alloca %struct.pinctrl_dev_config*, align 4
  %4 = alloca %struct.pinctrl_state*, align 4
  %5 = alloca i32, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %3, metadata !13546, metadata !DIExpression()), !dbg !13547
  store %struct.pinctrl_state* %1, %struct.pinctrl_state** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %4, metadata !13548, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13550, metadata !DIExpression()), !dbg !13551
  %6 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %3, align 4, !dbg !13552
  %7 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %6, i32 0, i32 0, !dbg !13553
  %8 = load i32, i32* %7, align 4, !dbg !13553
  store i32 %8, i32* %5, align 4, !dbg !13554
  %9 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13555
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %9, i32 0, i32 0, !dbg !13556
  %11 = load i32*, i32** %10, align 4, !dbg !13556
  %12 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13557
  %13 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %12, i32 0, i32 1, !dbg !13558
  %14 = load i8, i8* %13, align 4, !dbg !13558
  %15 = load i32, i32* %5, align 4, !dbg !13559
  %16 = call i32 @pinctrl_configure_pins(i32* noundef %11, i8 noundef zeroext %14, i32 noundef %15) #10, !dbg !13560
  ret i32 %16, !dbg !13561
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @sys_clock_idle_exit() #1 !dbg !13562 {
  ret void, !dbg !13564
}

; Function Attrs: noinline nounwind optnone
define dso_local void @rtc_nrf_isr(i8* noundef %0) #1 !dbg !13565 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !13566, metadata !DIExpression()), !dbg !13567
  %4 = load i8*, i8** %2, align 4, !dbg !13568
  %5 = call i32 @nrf_rtc_int_enable_check(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef 2) #10, !dbg !13569
  %6 = icmp ne i32 %5, 0, !dbg !13569
  br i1 %6, label %7, label %12, !dbg !13571

7:                                                ; preds = %1
  %8 = call zeroext i1 @nrf_rtc_event_check(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef 260) #10, !dbg !13572
  br i1 %8, label %9, label %12, !dbg !13573

9:                                                ; preds = %7
  call void @nrf_rtc_event_clear(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef 260) #10, !dbg !13574
  %10 = load volatile i32, i32* @overflow_cnt, align 4, !dbg !13576
  %11 = add i32 %10, 1, !dbg !13576
  store volatile i32 %11, i32* @overflow_cnt, align 4, !dbg !13576
  br label %12, !dbg !13577

12:                                               ; preds = %9, %7, %1
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13578, metadata !DIExpression()), !dbg !13580
  store i32 0, i32* %3, align 4, !dbg !13580
  br label %13, !dbg !13581

13:                                               ; preds = %18, %12
  %14 = load i32, i32* %3, align 4, !dbg !13582
  %15 = icmp slt i32 %14, 1, !dbg !13584
  br i1 %15, label %16, label %21, !dbg !13585

16:                                               ; preds = %13
  %17 = load i32, i32* %3, align 4, !dbg !13586
  call void @process_channel(i32 noundef %17) #10, !dbg !13588
  br label %18, !dbg !13589

18:                                               ; preds = %16
  %19 = load i32, i32* %3, align 4, !dbg !13590
  %20 = add nsw i32 %19, 1, !dbg !13590
  store i32 %20, i32* %3, align 4, !dbg !13590
  br label %13, !dbg !13591, !llvm.loop !13592

21:                                               ; preds = %13
  ret void, !dbg !13594
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_rtc_int_enable_check(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !13595 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !13600, metadata !DIExpression()), !dbg !13601
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13602, metadata !DIExpression()), !dbg !13603
  %5 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13604
  %6 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %5, i32 0, i32 10, !dbg !13605
  %7 = load volatile i32, i32* %6, align 4, !dbg !13605
  %8 = load i32, i32* %4, align 4, !dbg !13606
  %9 = and i32 %7, %8, !dbg !13607
  ret i32 %9, !dbg !13608
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_rtc_event_check(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !13609 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !13612, metadata !DIExpression()), !dbg !13613
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13614, metadata !DIExpression()), !dbg !13615
  %5 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13616
  %6 = bitcast %struct.NRF_RTC_Type* %5 to i8*, !dbg !13617
  %7 = load i32, i32* %4, align 4, !dbg !13618
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !13619
  %9 = bitcast i8* %8 to i32*, !dbg !13620
  %10 = load volatile i32, i32* %9, align 4, !dbg !13620
  %11 = icmp ne i32 %10, 0, !dbg !13621
  ret i1 %11, !dbg !13622
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_event_clear(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !13623 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !13626, metadata !DIExpression()), !dbg !13627
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13628, metadata !DIExpression()), !dbg !13629
  %5 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13630
  %6 = bitcast %struct.NRF_RTC_Type* %5 to i8*, !dbg !13631
  %7 = load i32, i32* %4, align 4, !dbg !13632
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !13633
  %9 = bitcast i8* %8 to i32*, !dbg !13634
  store volatile i32 0, i32* %9, align 4, !dbg !13635
  %10 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13636
  %11 = bitcast %struct.NRF_RTC_Type* %10 to i8*, !dbg !13637
  %12 = load i32, i32* %4, align 4, !dbg !13638
  %13 = getelementptr inbounds i8, i8* %11, i32 %12, !dbg !13639
  call void @nrf_event_readback.82(i8* noundef %13) #10, !dbg !13640
  ret void, !dbg !13641
}

; Function Attrs: noinline nounwind optnone
define internal void @process_channel(i32 noundef %0) #1 !dbg !13642 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca void (i32, i64, i8*)*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13643, metadata !DIExpression()), !dbg !13644
  %8 = load i32, i32* %2, align 4, !dbg !13645
  %9 = call zeroext i1 @channel_processing_check_and_clear(i32 noundef %8) #10, !dbg !13647
  br i1 %9, label %10, label %46, !dbg !13648

10:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata i8** %3, metadata !13649, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.declare(metadata i64* %5, metadata !13654, metadata !DIExpression()), !dbg !13655
  call void @llvm.dbg.declare(metadata i64* %6, metadata !13656, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.declare(metadata void (i32, i64, i8*)** %7, metadata !13658, metadata !DIExpression()), !dbg !13659
  store void (i32, i64, i8*)* null, void (i32, i64, i8*)** %7, align 4, !dbg !13659
  %11 = call i64 @z_nrf_rtc_timer_read() #10, !dbg !13660
  store i64 %11, i64* %5, align 8, !dbg !13661
  %12 = call i32 @full_int_lock() #10, !dbg !13662
  store i32 %12, i32* %4, align 4, !dbg !13663
  %13 = load i32, i32* %2, align 4, !dbg !13664
  %14 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %13, !dbg !13665
  %15 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %14, i32 0, i32 2, !dbg !13666
  %16 = load volatile i64, i64* %15, align 8, !dbg !13666
  store i64 %16, i64* %6, align 8, !dbg !13667
  %17 = load i64, i64* %5, align 8, !dbg !13668
  %18 = load i64, i64* %6, align 8, !dbg !13670
  %19 = icmp uge i64 %17, %18, !dbg !13671
  br i1 %19, label %20, label %36, !dbg !13672

20:                                               ; preds = %10
  %21 = load i32, i32* %2, align 4, !dbg !13673
  %22 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %21, !dbg !13675
  %23 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %22, i32 0, i32 0, !dbg !13676
  %24 = load void (i32, i64, i8*)*, void (i32, i64, i8*)** %23, align 8, !dbg !13676
  store void (i32, i64, i8*)* %24, void (i32, i64, i8*)** %7, align 4, !dbg !13677
  %25 = load i32, i32* %2, align 4, !dbg !13678
  %26 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %25, !dbg !13679
  %27 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %26, i32 0, i32 1, !dbg !13680
  %28 = load i8*, i8** %27, align 4, !dbg !13680
  store i8* %28, i8** %3, align 4, !dbg !13681
  %29 = load i32, i32* %2, align 4, !dbg !13682
  %30 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %29, !dbg !13683
  %31 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %30, i32 0, i32 0, !dbg !13684
  store void (i32, i64, i8*)* null, void (i32, i64, i8*)** %31, align 8, !dbg !13685
  %32 = load i32, i32* %2, align 4, !dbg !13686
  %33 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %32, !dbg !13687
  %34 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %33, i32 0, i32 2, !dbg !13688
  store volatile i64 -1, i64* %34, align 8, !dbg !13689
  %35 = load i32, i32* %2, align 4, !dbg !13690
  call void @event_disable(i32 noundef %35) #10, !dbg !13691
  br label %36, !dbg !13692

36:                                               ; preds = %20, %10
  %37 = load i32, i32* %4, align 4, !dbg !13693
  call void @full_int_unlock(i32 noundef %37) #10, !dbg !13694
  %38 = load void (i32, i64, i8*)*, void (i32, i64, i8*)** %7, align 4, !dbg !13695
  %39 = icmp ne void (i32, i64, i8*)* %38, null, !dbg !13695
  br i1 %39, label %40, label %45, !dbg !13697

40:                                               ; preds = %36
  %41 = load void (i32, i64, i8*)*, void (i32, i64, i8*)** %7, align 4, !dbg !13698
  %42 = load i32, i32* %2, align 4, !dbg !13700
  %43 = load i64, i64* %6, align 8, !dbg !13701
  %44 = load i8*, i8** %3, align 4, !dbg !13702
  call void %41(i32 noundef %42, i64 noundef %43, i8* noundef %44) #10, !dbg !13698
  br label %45, !dbg !13703

45:                                               ; preds = %40, %36
  br label %46, !dbg !13704

46:                                               ; preds = %45, %1
  ret void, !dbg !13705
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @channel_processing_check_and_clear(i32 noundef %0) #1 !dbg !13706 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13707, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.declare(metadata i8* %3, metadata !13709, metadata !DIExpression()), !dbg !13710
  store i8 0, i8* %3, align 1, !dbg !13710
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13711, metadata !DIExpression()), !dbg !13712
  %5 = call i32 @full_int_lock() #10, !dbg !13713
  store i32 %5, i32* %4, align 4, !dbg !13712
  %6 = load i32, i32* %2, align 4, !dbg !13714
  %7 = shl i32 65536, %6, !dbg !13714
  %8 = call i32 @nrf_rtc_int_enable_check(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %7) #10, !dbg !13716
  %9 = icmp ne i32 %8, 0, !dbg !13716
  br i1 %9, label %10, label %29, !dbg !13717

10:                                               ; preds = %1
  %11 = load i32, i32* %2, align 4, !dbg !13718
  %12 = shl i32 1, %11, !dbg !13718
  %13 = xor i32 %12, -1, !dbg !13720
  %14 = call i32 @atomic_and.81(i32* noundef @force_isr_mask, i32 noundef %13) #10, !dbg !13721
  %15 = icmp ne i32 %14, 0, !dbg !13721
  br i1 %15, label %21, label %16, !dbg !13722

16:                                               ; preds = %10
  %17 = load i32, i32* %2, align 4, !dbg !13723
  %18 = mul i32 %17, 4, !dbg !13723
  %19 = add i32 320, %18, !dbg !13723
  %20 = call zeroext i1 @nrf_rtc_event_check(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %19) #10, !dbg !13724
  br label %21, !dbg !13722

21:                                               ; preds = %16, %10
  %22 = phi i1 [ true, %10 ], [ %20, %16 ]
  %23 = zext i1 %22 to i8, !dbg !13725
  store i8 %23, i8* %3, align 1, !dbg !13725
  %24 = load i8, i8* %3, align 1, !dbg !13726
  %25 = trunc i8 %24 to i1, !dbg !13726
  br i1 %25, label %26, label %28, !dbg !13728

26:                                               ; preds = %21
  %27 = load i32, i32* %2, align 4, !dbg !13729
  call void @event_clear(i32 noundef %27) #10, !dbg !13731
  br label %28, !dbg !13732

28:                                               ; preds = %26, %21
  br label %29, !dbg !13733

29:                                               ; preds = %28, %1
  %30 = load i32, i32* %4, align 4, !dbg !13734
  call void @full_int_unlock(i32 noundef %30) #10, !dbg !13735
  %31 = load i8, i8* %3, align 1, !dbg !13736
  %32 = trunc i8 %31 to i1, !dbg !13736
  ret i1 %32, !dbg !13737
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_nrf_rtc_timer_read() #1 !dbg !13738 {
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i64* %1, metadata !13741, metadata !DIExpression()), !dbg !13742
  %3 = load volatile i32, i32* @overflow_cnt, align 4, !dbg !13743
  %4 = zext i32 %3 to i64, !dbg !13744
  %5 = shl i64 %4, 24, !dbg !13745
  store i64 %5, i64* %1, align 8, !dbg !13742
  call void asm sideeffect "dmb 0xF", "~{memory}"() #9, !dbg !13746, !srcloc !13749
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13750, metadata !DIExpression()), !dbg !13751
  %6 = call i32 @counter() #10, !dbg !13752
  store i32 %6, i32* %2, align 4, !dbg !13751
  %7 = load i32, i32* %2, align 4, !dbg !13753
  %8 = zext i32 %7 to i64, !dbg !13753
  %9 = load i64, i64* %1, align 8, !dbg !13754
  %10 = add i64 %9, %8, !dbg !13754
  store i64 %10, i64* %1, align 8, !dbg !13754
  %11 = load i32, i32* %2, align 4, !dbg !13755
  %12 = icmp ult i32 %11, 1048576, !dbg !13757
  br i1 %12, label %13, label %21, !dbg !13758

13:                                               ; preds = %0
  %14 = load i64, i64* %1, align 8, !dbg !13759
  %15 = load volatile i64, i64* @anchor, align 8, !dbg !13762
  %16 = icmp ult i64 %14, %15, !dbg !13763
  br i1 %16, label %17, label %20, !dbg !13764

17:                                               ; preds = %13
  %18 = load i64, i64* %1, align 8, !dbg !13765
  %19 = add i64 %18, 16777216, !dbg !13765
  store i64 %19, i64* %1, align 8, !dbg !13765
  br label %20, !dbg !13767

20:                                               ; preds = %17, %13
  br label %22, !dbg !13768

21:                                               ; preds = %0
  br label %22

22:                                               ; preds = %21, %20
  %23 = load i64, i64* %1, align 8, !dbg !13769
  ret i64 %23, !dbg !13770
}

; Function Attrs: noinline nounwind optnone
define internal i32 @full_int_lock() #1 !dbg !13771 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13772, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.declare(metadata i32* %1, metadata !13774, metadata !DIExpression()) #9, !dbg !13776
  %3 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13780, !srcloc !13781
  store i32 %3, i32* %1, align 4, !dbg !13780
  %4 = load i32, i32* %1, align 4, !dbg !13782
  store i32 %4, i32* %2, align 4, !dbg !13783
  %5 = load i32, i32* %2, align 4, !dbg !13784
  ret i32 %5, !dbg !13785
}

; Function Attrs: noinline nounwind optnone
define internal void @event_disable(i32 noundef %0) #1 !dbg !13786 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13787, metadata !DIExpression()), !dbg !13788
  %3 = load i32, i32* %2, align 4, !dbg !13789
  %4 = shl i32 65536, %3, !dbg !13789
  call void @nrf_rtc_event_disable(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %4) #10, !dbg !13790
  ret void, !dbg !13791
}

; Function Attrs: noinline nounwind optnone
define internal void @full_int_unlock(i32 noundef %0) #1 !dbg !13792 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13793, metadata !DIExpression()), !dbg !13794
  %4 = load i32, i32* %3, align 4, !dbg !13795
  store i32 %4, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13798, metadata !DIExpression()) #9, !dbg !13800
  %5 = load i32, i32* %2, align 4, !dbg !13802
  %6 = icmp ne i32 %5, 0, !dbg !13804
  br i1 %6, label %7, label %8, !dbg !13805

7:                                                ; preds = %1
  br label %9, !dbg !13806

8:                                                ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13808, !srcloc !13809
  br label %9, !dbg !13810

9:                                                ; preds = %7, %8
  ret void, !dbg !13811
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_event_disable(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !13812 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !13815, metadata !DIExpression()), !dbg !13816
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13817, metadata !DIExpression()), !dbg !13818
  %5 = load i32, i32* %4, align 4, !dbg !13819
  %6 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13820
  %7 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %6, i32 0, i32 15, !dbg !13821
  store volatile i32 %5, i32* %7, align 4, !dbg !13822
  ret void, !dbg !13823
}

; Function Attrs: noinline nounwind optnone
define internal i32 @counter() #1 !dbg !13824 {
  %1 = call i32 @nrf_rtc_counter_get(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*)) #10, !dbg !13825
  ret i32 %1, !dbg !13826
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_rtc_counter_get(%struct.NRF_RTC_Type* noundef %0) #1 !dbg !13827 {
  %2 = alloca %struct.NRF_RTC_Type*, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %2, metadata !13830, metadata !DIExpression()), !dbg !13831
  %3 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %2, align 4, !dbg !13832
  %4 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %3, i32 0, i32 17, !dbg !13833
  %5 = load volatile i32, i32* %4, align 4, !dbg !13833
  ret i32 %5, !dbg !13834
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_and.81(i32* noundef %0, i32 noundef %1) #1 !dbg !13835 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !13836, metadata !DIExpression()), !dbg !13837
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13838, metadata !DIExpression()), !dbg !13839
  br label %5, !dbg !13840

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !13841, !srcloc !13843
  br label %6, !dbg !13841

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !13844
  %8 = load i32, i32* %4, align 4, !dbg !13845
  %9 = call i32 @z_impl_atomic_and(i32* noundef %7, i32 noundef %8) #10, !dbg !13846
  ret i32 %9, !dbg !13847
}

; Function Attrs: noinline nounwind optnone
define internal void @event_clear(i32 noundef %0) #1 !dbg !13848 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13849, metadata !DIExpression()), !dbg !13850
  %3 = load i32, i32* %2, align 4, !dbg !13851
  %4 = mul i32 %3, 4, !dbg !13851
  %5 = add i32 320, %4, !dbg !13851
  call void @nrf_rtc_event_clear(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %5) #10, !dbg !13852
  ret void, !dbg !13853
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_event_readback.82(i8* noundef %0) #1 !dbg !13854 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !13855, metadata !DIExpression()), !dbg !13856
  %3 = load i8*, i8** %2, align 4, !dbg !13857
  ret void, !dbg !13858
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_driver_init(%struct.device.397* noundef %0) #1 !dbg !1600 {
  %2 = alloca %struct.device.397*, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %2, metadata !13859, metadata !DIExpression()), !dbg !13860
  %5 = load %struct.device.397*, %struct.device.397** %2, align 4, !dbg !13861
  call void @nrf_rtc_prescaler_set(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef 0) #10, !dbg !13862
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13863, metadata !DIExpression()), !dbg !13865
  store i32 0, i32* %3, align 4, !dbg !13865
  br label %6, !dbg !13866

6:                                                ; preds = %15, %1
  %7 = load i32, i32* %3, align 4, !dbg !13867
  %8 = icmp slt i32 %7, 1, !dbg !13869
  br i1 %8, label %9, label %18, !dbg !13870

9:                                                ; preds = %6
  %10 = load i32, i32* %3, align 4, !dbg !13871
  %11 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %10, !dbg !13873
  %12 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %11, i32 0, i32 2, !dbg !13874
  store volatile i64 -1, i64* %12, align 8, !dbg !13875
  %13 = load i32, i32* %3, align 4, !dbg !13876
  %14 = shl i32 65536, %13, !dbg !13876
  call void @nrf_rtc_int_enable(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %14) #10, !dbg !13877
  br label %15, !dbg !13878

15:                                               ; preds = %9
  %16 = load i32, i32* %3, align 4, !dbg !13879
  %17 = add nsw i32 %16, 1, !dbg !13879
  store i32 %17, i32* %3, align 4, !dbg !13879
  br label %6, !dbg !13880, !llvm.loop !13881

18:                                               ; preds = %6
  call void @nrf_rtc_int_enable(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef 2) #10, !dbg !13883
  call void @__NVIC_ClearPendingIRQ.83(i32 noundef 17) #10, !dbg !13884
  call void @z_arm_irq_priority_set(i32 noundef 17, i32 noundef 1, i32 noundef 0) #10, !dbg !13885
  call void @arch_irq_enable(i32 noundef 17) #10, !dbg !13887
  call void @nrf_rtc_task_trigger(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef 8) #10, !dbg !13888
  call void @nrf_rtc_task_trigger(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef 0) #10, !dbg !13889
  store i32 1, i32* @int_mask, align 4, !dbg !13890
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13891, metadata !DIExpression()), !dbg !13892
  %19 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !13893
  %20 = sdiv i32 %19, 32768, !dbg !13893
  %21 = sub i32 8388608, %20, !dbg !13893
  %22 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !13893
  %23 = sdiv i32 %22, 32768, !dbg !13893
  %24 = udiv i32 %21, %23, !dbg !13893
  store i32 %24, i32* %4, align 4, !dbg !13892
  %25 = load i32, i32* %4, align 4, !dbg !13894
  %26 = zext i32 %25 to i64, !dbg !13894
  %27 = call i32 @compare_set(i32 noundef 0, i64 noundef %26, void (i32, i64, i8*)* noundef @sys_clock_timeout_handler, i8* noundef null) #10, !dbg !13895
  call void @z_nrf_clock_control_lf_on(i32 noundef 2) #10, !dbg !13896
  ret i32 0, !dbg !13897
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_prescaler_set(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !13898 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !13899, metadata !DIExpression()), !dbg !13900
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13901, metadata !DIExpression()), !dbg !13902
  %5 = load i32, i32* %4, align 4, !dbg !13903
  %6 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13904
  %7 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %6, i32 0, i32 18, !dbg !13905
  store volatile i32 %5, i32* %7, align 4, !dbg !13906
  ret void, !dbg !13907
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_int_enable(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !13908 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !13909, metadata !DIExpression()), !dbg !13910
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13911, metadata !DIExpression()), !dbg !13912
  %5 = load i32, i32* %4, align 4, !dbg !13913
  %6 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13914
  %7 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %6, i32 0, i32 10, !dbg !13915
  store volatile i32 %5, i32* %7, align 4, !dbg !13916
  ret void, !dbg !13917
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_ClearPendingIRQ.83(i32 noundef %0) #1 !dbg !13918 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13919, metadata !DIExpression()), !dbg !13920
  %3 = load i32, i32* %2, align 4, !dbg !13921
  %4 = icmp sge i32 %3, 0, !dbg !13923
  br i1 %4, label %5, label %9, !dbg !13924

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !13925
  %7 = and i32 %6, 31, !dbg !13927
  %8 = shl i32 1, %7, !dbg !13928
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 6, i32 0), align 4, !dbg !13929
  br label %9, !dbg !13930

9:                                                ; preds = %5, %1
  ret void, !dbg !13931
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_task_trigger(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !13932 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !13936, metadata !DIExpression()), !dbg !13937
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13938, metadata !DIExpression()), !dbg !13939
  %5 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !13940
  %6 = ptrtoint %struct.NRF_RTC_Type* %5 to i32, !dbg !13941
  %7 = load i32, i32* %4, align 4, !dbg !13942
  %8 = add i32 %6, %7, !dbg !13943
  %9 = inttoptr i32 %8 to i32*, !dbg !13944
  store volatile i32 1, i32* %9, align 4, !dbg !13945
  ret void, !dbg !13946
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec() #1 !dbg !13947 {
  ret i32 32768, !dbg !13948
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_clock_timeout_handler(i32 noundef %0, i64 noundef %1, i8* noundef %2) #1 !dbg !13949 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13950, metadata !DIExpression()), !dbg !13951
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !13952, metadata !DIExpression()), !dbg !13953
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !13954, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13956, metadata !DIExpression()), !dbg !13957
  %10 = load i64, i64* %5, align 8, !dbg !13958
  %11 = call i32 @absolute_time_to_cc(i64 noundef %10) #10, !dbg !13959
  store i32 %11, i32* %7, align 4, !dbg !13957
  call void @llvm.dbg.declare(metadata i64* %8, metadata !13960, metadata !DIExpression()), !dbg !13961
  %12 = load i64, i64* %5, align 8, !dbg !13962
  %13 = load i64, i64* @last_count, align 8, !dbg !13963
  %14 = sub i64 %12, %13, !dbg !13964
  %15 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !13965
  %16 = sdiv i32 %15, 32768, !dbg !13965
  %17 = sext i32 %16 to i64, !dbg !13965
  %18 = udiv i64 %14, %17, !dbg !13966
  store i64 %18, i64* %8, align 8, !dbg !13961
  %19 = load i64, i64* %8, align 8, !dbg !13967
  %20 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !13968
  %21 = sdiv i32 %20, 32768, !dbg !13968
  %22 = sext i32 %21 to i64, !dbg !13968
  %23 = mul i64 %19, %22, !dbg !13969
  %24 = load i64, i64* @last_count, align 8, !dbg !13970
  %25 = add i64 %24, %23, !dbg !13970
  store i64 %25, i64* @last_count, align 8, !dbg !13970
  call void @llvm.dbg.declare(metadata i8* %9, metadata !13971, metadata !DIExpression()), !dbg !13972
  %26 = load i32, i32* %7, align 4, !dbg !13973
  %27 = call zeroext i1 @anchor_update(i32 noundef %26) #10, !dbg !13974
  %28 = zext i1 %27 to i8, !dbg !13972
  store i8 %28, i8* %9, align 1, !dbg !13972
  %29 = load i64, i64* %8, align 8, !dbg !13975
  %30 = trunc i64 %29 to i32, !dbg !13976
  call void @sys_clock_announce(i32 noundef %30) #10, !dbg !13977
  %31 = load i32, i32* %7, align 4, !dbg !13978
  %32 = load i32, i32* %4, align 4, !dbg !13980
  %33 = call i32 @get_comparator(i32 noundef %32) #10, !dbg !13981
  %34 = icmp eq i32 %31, %33, !dbg !13982
  br i1 %34, label %35, label %42, !dbg !13983

35:                                               ; preds = %3
  %36 = load i8, i8* %9, align 1, !dbg !13984
  %37 = trunc i8 %36 to i1, !dbg !13984
  br i1 %37, label %40, label %38, !dbg !13987

38:                                               ; preds = %35
  %39 = load i32, i32* %4, align 4, !dbg !13988
  call void @set_comparator(i32 noundef %39, i32 noundef 8388608) #10, !dbg !13990
  br label %40, !dbg !13991

40:                                               ; preds = %38, %35
  %41 = load i32, i32* %4, align 4, !dbg !13992
  call void @event_enable(i32 noundef %41) #10, !dbg !13993
  br label %42, !dbg !13994

42:                                               ; preds = %40, %3
  ret void, !dbg !13995
}

; Function Attrs: noinline nounwind optnone
define internal i32 @compare_set(i32 noundef %0, i64 noundef %1, void (i32, i64, i8*)* noundef %2, i8* noundef %3) #1 !dbg !13996 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca void (i32, i64, i8*)*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13999, metadata !DIExpression()), !dbg !14000
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !14001, metadata !DIExpression()), !dbg !14002
  store void (i32, i64, i8*)* %2, void (i32, i64, i8*)** %7, align 4
  call void @llvm.dbg.declare(metadata void (i32, i64, i8*)** %7, metadata !14003, metadata !DIExpression()), !dbg !14004
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !14005, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.declare(metadata i8* %9, metadata !14007, metadata !DIExpression()), !dbg !14008
  %11 = load i32, i32* %5, align 4, !dbg !14009
  %12 = call zeroext i1 @compare_int_lock(i32 noundef %11) #10, !dbg !14010
  %13 = zext i1 %12 to i8, !dbg !14011
  store i8 %13, i8* %9, align 1, !dbg !14011
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14012, metadata !DIExpression()), !dbg !14013
  %14 = load i32, i32* %5, align 4, !dbg !14014
  %15 = load i64, i64* %6, align 8, !dbg !14015
  %16 = load void (i32, i64, i8*)*, void (i32, i64, i8*)** %7, align 4, !dbg !14016
  %17 = load i8*, i8** %8, align 4, !dbg !14017
  %18 = call i32 @compare_set_nolocks(i32 noundef %14, i64 noundef %15, void (i32, i64, i8*)* noundef %16, i8* noundef %17) #10, !dbg !14018
  store i32 %18, i32* %10, align 4, !dbg !14013
  %19 = load i32, i32* %5, align 4, !dbg !14019
  %20 = load i8, i8* %9, align 1, !dbg !14020
  %21 = trunc i8 %20 to i1, !dbg !14020
  call void @compare_int_unlock(i32 noundef %19, i1 noundef zeroext %21) #10, !dbg !14021
  %22 = load i32, i32* %10, align 4, !dbg !14022
  ret i32 %22, !dbg !14023
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @compare_int_lock(i32 noundef %0) #1 !dbg !14024 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14025, metadata !DIExpression()), !dbg !14026
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14027, metadata !DIExpression()), !dbg !14028
  %4 = load i32, i32* %2, align 4, !dbg !14029
  %5 = shl i32 1, %4, !dbg !14029
  %6 = xor i32 %5, -1, !dbg !14030
  %7 = call i32 @atomic_and.81(i32* noundef @int_mask, i32 noundef %6) #10, !dbg !14031
  store i32 %7, i32* %3, align 4, !dbg !14028
  %8 = load i32, i32* %2, align 4, !dbg !14032
  %9 = shl i32 65536, %8, !dbg !14032
  call void @nrf_rtc_int_disable(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %9) #10, !dbg !14033
  call void asm sideeffect "dmb 0xF", "~{memory}"() #9, !dbg !14034, !srcloc !13749
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !14036, !srcloc !14039
  %10 = load i32, i32* %3, align 4, !dbg !14040
  %11 = load i32, i32* %2, align 4, !dbg !14041
  %12 = shl i32 1, %11, !dbg !14041
  %13 = and i32 %10, %12, !dbg !14042
  %14 = icmp ne i32 %13, 0, !dbg !14040
  ret i1 %14, !dbg !14043
}

; Function Attrs: noinline nounwind optnone
define internal i32 @compare_set_nolocks(i32 noundef %0, i64 noundef %1, void (i32, i64, i8*)* noundef %2, i8* noundef %3) #1 !dbg !14044 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca void (i32, i64, i8*)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14045, metadata !DIExpression()), !dbg !14046
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !14047, metadata !DIExpression()), !dbg !14048
  store void (i32, i64, i8*)* %2, void (i32, i64, i8*)** %8, align 4
  call void @llvm.dbg.declare(metadata void (i32, i64, i8*)** %8, metadata !14049, metadata !DIExpression()), !dbg !14050
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !14051, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14053, metadata !DIExpression()), !dbg !14054
  store i32 0, i32* %10, align 4, !dbg !14054
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14055, metadata !DIExpression()), !dbg !14056
  %14 = load i64, i64* %7, align 8, !dbg !14057
  %15 = call i32 @absolute_time_to_cc(i64 noundef %14) #10, !dbg !14058
  store i32 %15, i32* %11, align 4, !dbg !14056
  call void @llvm.dbg.declare(metadata i64* %12, metadata !14059, metadata !DIExpression()), !dbg !14060
  %16 = call i64 @z_nrf_rtc_timer_read() #10, !dbg !14061
  store i64 %16, i64* %12, align 8, !dbg !14060
  %17 = load i64, i64* %12, align 8, !dbg !14062
  %18 = load i64, i64* %7, align 8, !dbg !14064
  %19 = icmp ult i64 %17, %18, !dbg !14065
  br i1 %19, label %20, label %44, !dbg !14066

20:                                               ; preds = %4
  %21 = load i64, i64* %7, align 8, !dbg !14067
  %22 = load i64, i64* %12, align 8, !dbg !14070
  %23 = sub i64 %21, %22, !dbg !14071
  %24 = icmp ugt i64 %23, 16777216, !dbg !14072
  br i1 %24, label %25, label %26, !dbg !14073

25:                                               ; preds = %20
  store i32 -22, i32* %5, align 4, !dbg !14074
  br label %62, !dbg !14074

26:                                               ; preds = %20
  %27 = load i64, i64* %7, align 8, !dbg !14076
  %28 = load i32, i32* %6, align 4, !dbg !14078
  %29 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %28, !dbg !14079
  %30 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %29, i32 0, i32 2, !dbg !14080
  %31 = load volatile i64, i64* %30, align 8, !dbg !14080
  %32 = icmp ne i64 %27, %31, !dbg !14081
  br i1 %32, label %33, label %43, !dbg !14082

33:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %13, metadata !14083, metadata !DIExpression()), !dbg !14085
  %34 = load i32, i32* %6, align 4, !dbg !14086
  %35 = load i32, i32* %11, align 4, !dbg !14087
  %36 = call i32 @set_absolute_alarm(i32 noundef %34, i32 noundef %35) #10, !dbg !14088
  store i32 %36, i32* %13, align 4, !dbg !14085
  %37 = load i32, i32* %13, align 4, !dbg !14089
  %38 = load i32, i32* %11, align 4, !dbg !14090
  %39 = call i32 @counter_sub(i32 noundef %37, i32 noundef %38) #10, !dbg !14091
  %40 = zext i32 %39 to i64, !dbg !14091
  %41 = load i64, i64* %7, align 8, !dbg !14092
  %42 = add i64 %41, %40, !dbg !14092
  store i64 %42, i64* %7, align 8, !dbg !14092
  br label %43, !dbg !14093

43:                                               ; preds = %33, %26
  br label %48, !dbg !14094

44:                                               ; preds = %4
  %45 = load i32, i32* %6, align 4, !dbg !14095
  %46 = shl i32 1, %45, !dbg !14095
  %47 = call i32 @atomic_or.84(i32* noundef @force_isr_mask, i32 noundef %46) #10, !dbg !14097
  br label %48

48:                                               ; preds = %44, %43
  %49 = load i64, i64* %7, align 8, !dbg !14098
  %50 = load i32, i32* %6, align 4, !dbg !14099
  %51 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %50, !dbg !14100
  %52 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %51, i32 0, i32 2, !dbg !14101
  store volatile i64 %49, i64* %52, align 8, !dbg !14102
  %53 = load void (i32, i64, i8*)*, void (i32, i64, i8*)** %8, align 4, !dbg !14103
  %54 = load i32, i32* %6, align 4, !dbg !14104
  %55 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %54, !dbg !14105
  %56 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %55, i32 0, i32 0, !dbg !14106
  store void (i32, i64, i8*)* %53, void (i32, i64, i8*)** %56, align 8, !dbg !14107
  %57 = load i8*, i8** %9, align 4, !dbg !14108
  %58 = load i32, i32* %6, align 4, !dbg !14109
  %59 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %58, !dbg !14110
  %60 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %59, i32 0, i32 1, !dbg !14111
  store i8* %57, i8** %60, align 4, !dbg !14112
  %61 = load i32, i32* %10, align 4, !dbg !14113
  store i32 %61, i32* %5, align 4, !dbg !14114
  br label %62, !dbg !14114

62:                                               ; preds = %48, %25
  %63 = load i32, i32* %5, align 4, !dbg !14115
  ret i32 %63, !dbg !14115
}

; Function Attrs: noinline nounwind optnone
define internal void @compare_int_unlock(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !14116 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14119, metadata !DIExpression()), !dbg !14120
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !14121, metadata !DIExpression()), !dbg !14122
  %6 = load i8, i8* %4, align 1, !dbg !14123
  %7 = trunc i8 %6 to i1, !dbg !14123
  br i1 %7, label %8, label %21, !dbg !14125

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4, !dbg !14126
  %10 = shl i32 1, %9, !dbg !14126
  %11 = call i32 @atomic_or.84(i32* noundef @int_mask, i32 noundef %10) #10, !dbg !14128
  %12 = load i32, i32* %3, align 4, !dbg !14129
  %13 = shl i32 65536, %12, !dbg !14129
  call void @nrf_rtc_int_enable(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %13) #10, !dbg !14130
  %14 = call i32 @atomic_get(i32* noundef @force_isr_mask) #10, !dbg !14131
  %15 = load i32, i32* %3, align 4, !dbg !14133
  %16 = shl i32 1, %15, !dbg !14133
  %17 = and i32 %14, %16, !dbg !14134
  %18 = icmp ne i32 %17, 0, !dbg !14134
  br i1 %18, label %19, label %20, !dbg !14135

19:                                               ; preds = %8
  call void @__NVIC_SetPendingIRQ(i32 noundef 17) #10, !dbg !14136
  br label %20, !dbg !14138

20:                                               ; preds = %19, %8
  br label %21, !dbg !14139

21:                                               ; preds = %20, %2
  ret void, !dbg !14140
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atomic_or.84(i32* noundef %0, i32 noundef %1) #1 !dbg !14141 {
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !14142, metadata !DIExpression()), !dbg !14143
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14144, metadata !DIExpression()), !dbg !14145
  br label %5, !dbg !14146

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !14147, !srcloc !14149
  br label %6, !dbg !14147

6:                                                ; preds = %5
  %7 = load i32*, i32** %3, align 4, !dbg !14150
  %8 = load i32, i32* %4, align 4, !dbg !14151
  %9 = call i32 @z_impl_atomic_or(i32* noundef %7, i32 noundef %8) #10, !dbg !14152
  ret i32 %9, !dbg !14153
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPendingIRQ(i32 noundef %0) #1 !dbg !14154 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14155, metadata !DIExpression()), !dbg !14156
  %3 = load i32, i32* %2, align 4, !dbg !14157
  %4 = icmp sge i32 %3, 0, !dbg !14159
  br i1 %4, label %5, label %9, !dbg !14160

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !14161
  %7 = and i32 %6, 31, !dbg !14163
  %8 = shl i32 1, %7, !dbg !14164
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 4, i32 0), align 4, !dbg !14165
  br label %9, !dbg !14166

9:                                                ; preds = %5, %1
  ret void, !dbg !14167
}

; Function Attrs: noinline nounwind optnone
define internal i32 @absolute_time_to_cc(i64 noundef %0) #1 !dbg !14168 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !14171, metadata !DIExpression()), !dbg !14172
  %3 = load i64, i64* %2, align 8, !dbg !14173
  %4 = and i64 %3, 16777215, !dbg !14174
  %5 = trunc i64 %4 to i32, !dbg !14173
  ret i32 %5, !dbg !14175
}

; Function Attrs: noinline nounwind optnone
define internal i32 @set_absolute_alarm(i32 noundef %0, i32 noundef %1) #1 !dbg !14176 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14179, metadata !DIExpression()), !dbg !14180
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14181, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14183, metadata !DIExpression()), !dbg !14184
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14185, metadata !DIExpression()), !dbg !14186
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14187, metadata !DIExpression()), !dbg !14188
  %10 = load i32, i32* %4, align 4, !dbg !14189
  %11 = and i32 %10, 16777215, !dbg !14190
  store i32 %11, i32* %7, align 4, !dbg !14188
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14191, metadata !DIExpression()), !dbg !14192
  %12 = load i32, i32* %3, align 4, !dbg !14193
  %13 = call i32 @get_comparator(i32 noundef %12) #10, !dbg !14194
  store i32 %13, i32* %8, align 4, !dbg !14192
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14195, metadata !DIExpression()), !dbg !14196
  store i32 2, i32* %9, align 4, !dbg !14196
  br label %14, !dbg !14197

14:                                               ; preds = %52, %2
  %15 = call i32 @counter() #10, !dbg !14198
  store i32 %15, i32* %5, align 4, !dbg !14200
  %16 = load i32, i32* %3, align 4, !dbg !14201
  %17 = load i32, i32* %5, align 4, !dbg !14202
  call void @set_comparator(i32 noundef %16, i32 noundef %17) #10, !dbg !14203
  %18 = load i32, i32* %8, align 4, !dbg !14204
  %19 = load i32, i32* %5, align 4, !dbg !14206
  %20 = call i32 @counter_sub(i32 noundef %18, i32 noundef %19) #10, !dbg !14207
  %21 = icmp eq i32 %20, 1, !dbg !14208
  br i1 %21, label %22, label %23, !dbg !14209

22:                                               ; preds = %14
  call void @k_busy_wait(i32 noundef 19) #10, !dbg !14210
  br label %23, !dbg !14212

23:                                               ; preds = %22, %14
  %24 = load i32, i32* %7, align 4, !dbg !14213
  %25 = load i32, i32* %5, align 4, !dbg !14215
  %26 = add i32 %25, 2, !dbg !14216
  %27 = call i32 @counter_sub(i32 noundef %24, i32 noundef %26) #10, !dbg !14217
  %28 = icmp ugt i32 %27, 8388608, !dbg !14218
  br i1 %28, label %29, label %35, !dbg !14219

29:                                               ; preds = %23
  %30 = load i32, i32* %5, align 4, !dbg !14220
  %31 = load i32, i32* %9, align 4, !dbg !14222
  %32 = add i32 %30, %31, !dbg !14223
  store i32 %32, i32* %7, align 4, !dbg !14224
  %33 = load i32, i32* %9, align 4, !dbg !14225
  %34 = add i32 %33, 1, !dbg !14225
  store i32 %34, i32* %9, align 4, !dbg !14225
  br label %35, !dbg !14226

35:                                               ; preds = %29, %23
  %36 = load i32, i32* %3, align 4, !dbg !14227
  call void @event_clear(i32 noundef %36) #10, !dbg !14228
  %37 = load i32, i32* %3, align 4, !dbg !14229
  call void @event_enable(i32 noundef %37) #10, !dbg !14230
  %38 = load i32, i32* %3, align 4, !dbg !14231
  %39 = load i32, i32* %7, align 4, !dbg !14232
  call void @set_comparator(i32 noundef %38, i32 noundef %39) #10, !dbg !14233
  %40 = call i32 @counter() #10, !dbg !14234
  store i32 %40, i32* %6, align 4, !dbg !14235
  %41 = load i32, i32* %7, align 4, !dbg !14236
  store i32 %41, i32* %8, align 4, !dbg !14237
  br label %42, !dbg !14238

42:                                               ; preds = %35
  %43 = load i32, i32* %6, align 4, !dbg !14239
  %44 = load i32, i32* %5, align 4, !dbg !14240
  %45 = icmp ne i32 %43, %44, !dbg !14241
  br i1 %45, label %46, label %52, !dbg !14242

46:                                               ; preds = %42
  %47 = load i32, i32* %7, align 4, !dbg !14243
  %48 = load i32, i32* %6, align 4, !dbg !14244
  %49 = add i32 %48, 2, !dbg !14245
  %50 = call i32 @counter_sub(i32 noundef %47, i32 noundef %49) #10, !dbg !14246
  %51 = icmp ugt i32 %50, 8388608, !dbg !14247
  br label %52

52:                                               ; preds = %46, %42
  %53 = phi i1 [ false, %42 ], [ %51, %46 ], !dbg !14248
  br i1 %53, label %14, label %54, !dbg !14238, !llvm.loop !14249

54:                                               ; preds = %52
  %55 = load i32, i32* %7, align 4, !dbg !14251
  ret i32 %55, !dbg !14252
}

; Function Attrs: noinline nounwind optnone
define internal i32 @counter_sub(i32 noundef %0, i32 noundef %1) #1 !dbg !14253 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14256, metadata !DIExpression()), !dbg !14257
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14258, metadata !DIExpression()), !dbg !14259
  %5 = load i32, i32* %3, align 4, !dbg !14260
  %6 = load i32, i32* %4, align 4, !dbg !14261
  %7 = sub i32 %5, %6, !dbg !14262
  %8 = and i32 %7, 16777215, !dbg !14263
  ret i32 %8, !dbg !14264
}

; Function Attrs: noinline nounwind optnone
define internal i32 @get_comparator(i32 noundef %0) #1 !dbg !14265 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14268, metadata !DIExpression()), !dbg !14269
  %3 = load i32, i32* %2, align 4, !dbg !14270
  %4 = call i32 @nrf_rtc_cc_get(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %3) #10, !dbg !14271
  ret i32 %4, !dbg !14272
}

; Function Attrs: noinline nounwind optnone
define internal void @set_comparator(i32 noundef %0, i32 noundef %1) #1 !dbg !14273 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14276, metadata !DIExpression()), !dbg !14277
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14278, metadata !DIExpression()), !dbg !14279
  %5 = load i32, i32* %3, align 4, !dbg !14280
  %6 = load i32, i32* %4, align 4, !dbg !14281
  %7 = and i32 %6, 16777215, !dbg !14282
  call void @nrf_rtc_cc_set(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %5, i32 noundef %7) #10, !dbg !14283
  ret void, !dbg !14284
}

; Function Attrs: noinline nounwind optnone
define internal void @k_busy_wait(i32 noundef %0) #1 !dbg !14285 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14286, metadata !DIExpression()), !dbg !14287
  br label %3, !dbg !14288

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !14289, !srcloc !14291
  br label %4, !dbg !14289

4:                                                ; preds = %3
  %5 = load i32, i32* %2, align 4, !dbg !14292
  call void @z_impl_k_busy_wait(i32 noundef %5) #10, !dbg !14293
  ret void, !dbg !14294
}

; Function Attrs: noinline nounwind optnone
define internal void @event_enable(i32 noundef %0) #1 !dbg !14295 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14296, metadata !DIExpression()), !dbg !14297
  %3 = load i32, i32* %2, align 4, !dbg !14298
  %4 = shl i32 65536, %3, !dbg !14298
  call void @nrf_rtc_event_enable(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %4) #10, !dbg !14299
  ret void, !dbg !14300
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_event_enable(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !14301 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !14302, metadata !DIExpression()), !dbg !14303
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14304, metadata !DIExpression()), !dbg !14305
  %5 = load i32, i32* %4, align 4, !dbg !14306
  %6 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !14307
  %7 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %6, i32 0, i32 14, !dbg !14308
  store volatile i32 %5, i32* %7, align 4, !dbg !14309
  ret void, !dbg !14310
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_cc_set(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !14311 {
  %4 = alloca %struct.NRF_RTC_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %4, metadata !14314, metadata !DIExpression()), !dbg !14315
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14316, metadata !DIExpression()), !dbg !14317
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14318, metadata !DIExpression()), !dbg !14319
  %7 = load i32, i32* %6, align 4, !dbg !14320
  %8 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %4, align 4, !dbg !14321
  %9 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %8, i32 0, i32 20, !dbg !14322
  %10 = load i32, i32* %5, align 4, !dbg !14323
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i32 0, i32 %10, !dbg !14321
  store volatile i32 %7, i32* %11, align 4, !dbg !14324
  ret void, !dbg !14325
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_rtc_cc_get(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !14326 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !14327, metadata !DIExpression()), !dbg !14328
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14329, metadata !DIExpression()), !dbg !14330
  %5 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !14331
  %6 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %5, i32 0, i32 20, !dbg !14332
  %7 = load i32, i32* %4, align 4, !dbg !14333
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i32 0, i32 %7, !dbg !14331
  %9 = load volatile i32, i32* %8, align 4, !dbg !14331
  ret i32 %9, !dbg !14334
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_rtc_int_disable(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !14335 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !14336, metadata !DIExpression()), !dbg !14337
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14338, metadata !DIExpression()), !dbg !14339
  %5 = load i32, i32* %4, align 4, !dbg !14340
  %6 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !14341
  %7 = getelementptr inbounds %struct.NRF_RTC_Type, %struct.NRF_RTC_Type* %6, i32 0, i32 11, !dbg !14342
  store volatile i32 %5, i32* %7, align 4, !dbg !14343
  ret void, !dbg !14344
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @anchor_update(i32 noundef %0) #1 !dbg !14345 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14348, metadata !DIExpression()), !dbg !14349
  %4 = load i32, i32* %3, align 4, !dbg !14350
  %5 = call zeroext i1 @in_anchor_range(i32 noundef %4) #10, !dbg !14352
  br i1 %5, label %6, label %13, !dbg !14353

6:                                                ; preds = %1
  %7 = load volatile i32, i32* @overflow_cnt, align 4, !dbg !14354
  %8 = zext i32 %7 to i64, !dbg !14356
  %9 = shl i64 %8, 24, !dbg !14357
  %10 = load i32, i32* %3, align 4, !dbg !14358
  %11 = zext i32 %10 to i64, !dbg !14358
  %12 = add i64 %9, %11, !dbg !14359
  store volatile i64 %12, i64* @anchor, align 8, !dbg !14360
  store i1 true, i1* %2, align 1, !dbg !14361
  br label %14, !dbg !14361

13:                                               ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !14362
  br label %14, !dbg !14362

14:                                               ; preds = %13, %6
  %15 = load i1, i1* %2, align 1, !dbg !14363
  ret i1 %15, !dbg !14363
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @in_anchor_range(i32 noundef %0) #1 !dbg !14364 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14365, metadata !DIExpression()), !dbg !14366
  %3 = load i32, i32* %2, align 4, !dbg !14367
  %4 = icmp uge i32 %3, 2097152, !dbg !14368
  br i1 %4, label %5, label %8, !dbg !14369

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !14370
  %7 = icmp ult i32 %6, 14680064, !dbg !14371
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ false, %1 ], [ %7, %5 ], !dbg !14372
  ret i1 %9, !dbg !14373
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_nrf_rtc_timer_compare_evt_address_get(i32 noundef %0) #1 !dbg !14374 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14375, metadata !DIExpression()), !dbg !14376
  %3 = load i32, i32* %2, align 4, !dbg !14377
  %4 = trunc i32 %3 to i8, !dbg !14377
  %5 = call i32 @nrf_rtc_compare_event_get(i8 noundef zeroext %4) #10, !dbg !14378
  %6 = call i32 @nrf_rtc_event_address_get(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %5) #10, !dbg !14379
  ret i32 %6, !dbg !14380
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_rtc_compare_event_get(i8 noundef zeroext %0) #1 !dbg !14381 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !14384, metadata !DIExpression()), !dbg !14385
  %3 = load i8, i8* %2, align 1, !dbg !14386
  %4 = zext i8 %3 to i32, !dbg !14386
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds (%struct.NRF_RTC_Type, %struct.NRF_RTC_Type* null, i32 0, i32 8), i32 0, i32 %4, !dbg !14386
  %6 = ptrtoint i32* %5 to i32, !dbg !14386
  ret i32 %6, !dbg !14387
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_rtc_event_address_get(%struct.NRF_RTC_Type* noundef %0, i32 noundef %1) #1 !dbg !14388 {
  %3 = alloca %struct.NRF_RTC_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_RTC_Type* %0, %struct.NRF_RTC_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_RTC_Type** %3, metadata !14391, metadata !DIExpression()), !dbg !14392
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14393, metadata !DIExpression()), !dbg !14394
  %5 = load %struct.NRF_RTC_Type*, %struct.NRF_RTC_Type** %3, align 4, !dbg !14395
  %6 = ptrtoint %struct.NRF_RTC_Type* %5 to i32, !dbg !14396
  %7 = load i32, i32* %4, align 4, !dbg !14397
  %8 = add i32 %6, %7, !dbg !14398
  ret i32 %8, !dbg !14399
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_nrf_rtc_timer_capture_task_address_get(i32 noundef %0) #1 !dbg !14400 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14401, metadata !DIExpression()), !dbg !14402
  %3 = load i32, i32* %2, align 4, !dbg !14403
  ret i32 0, !dbg !14404
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_nrf_rtc_timer_compare_int_lock(i32 noundef %0) #1 !dbg !14405 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14406, metadata !DIExpression()), !dbg !14407
  %3 = load i32, i32* %2, align 4, !dbg !14408
  %4 = call zeroext i1 @compare_int_lock(i32 noundef %3) #10, !dbg !14409
  ret i1 %4, !dbg !14410
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_nrf_rtc_timer_compare_int_unlock(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !14411 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14412, metadata !DIExpression()), !dbg !14413
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !14414, metadata !DIExpression()), !dbg !14415
  %6 = load i32, i32* %3, align 4, !dbg !14416
  %7 = load i8, i8* %4, align 1, !dbg !14417
  %8 = trunc i8 %7 to i1, !dbg !14417
  call void @compare_int_unlock(i32 noundef %6, i1 noundef zeroext %8) #10, !dbg !14418
  ret void, !dbg !14419
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_nrf_rtc_timer_compare_read(i32 noundef %0) #1 !dbg !14420 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14421, metadata !DIExpression()), !dbg !14422
  %3 = load i32, i32* %2, align 4, !dbg !14423
  %4 = call i32 @nrf_rtc_cc_get(%struct.NRF_RTC_Type* noundef inttoptr (i32 1073811456 to %struct.NRF_RTC_Type*), i32 noundef %3) #10, !dbg !14424
  ret i32 %4, !dbg !14425
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_nrf_rtc_timer_get_ticks([1 x i64] %0) #1 !dbg !14426 {
  %2 = alloca i64, align 8
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %9 = bitcast i64* %8 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %9, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !14433, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.declare(metadata i64* %4, metadata !14435, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.declare(metadata i64* %5, metadata !14437, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.declare(metadata i64* %6, metadata !14439, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.declare(metadata i64* %7, metadata !14441, metadata !DIExpression()), !dbg !14442
  br label %10, !dbg !14443

10:                                               ; preds = %13, %1
  %11 = call i64 @z_nrf_rtc_timer_read() #10, !dbg !14444
  store i64 %11, i64* %4, align 8, !dbg !14446
  %12 = call i64 @sys_clock_tick_get() #10, !dbg !14447
  store i64 %12, i64* %5, align 8, !dbg !14448
  br label %13, !dbg !14449

13:                                               ; preds = %10
  %14 = load i64, i64* %4, align 8, !dbg !14450
  %15 = call i64 @z_nrf_rtc_timer_read() #10, !dbg !14451
  %16 = icmp ne i64 %14, %15, !dbg !14452
  br i1 %16, label %10, label %17, !dbg !14449, !llvm.loop !14453

17:                                               ; preds = %13
  %18 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14455
  %19 = load i64, i64* %18, align 8, !dbg !14455
  %20 = sub nsw i64 -2, %19, !dbg !14455
  store i64 %20, i64* %7, align 8, !dbg !14456
  %21 = load i64, i64* %7, align 8, !dbg !14457
  %22 = icmp slt i64 %21, 0, !dbg !14459
  br i1 %22, label %23, label %35, !dbg !14460

23:                                               ; preds = %17
  %24 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14461
  %25 = load i64, i64* %24, align 8, !dbg !14461
  %26 = icmp sgt i64 %25, 16777216, !dbg !14463
  br i1 %26, label %27, label %28, !dbg !14464

27:                                               ; preds = %23
  br label %33, !dbg !14464

28:                                               ; preds = %23
  %29 = load i64, i64* %4, align 8, !dbg !14465
  %30 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14466
  %31 = load i64, i64* %30, align 8, !dbg !14466
  %32 = add i64 %29, %31, !dbg !14467
  br label %33, !dbg !14464

33:                                               ; preds = %28, %27
  %34 = phi i64 [ -22, %27 ], [ %32, %28 ], !dbg !14464
  store i64 %34, i64* %2, align 8, !dbg !14468
  br label %46, !dbg !14468

35:                                               ; preds = %17
  %36 = load i64, i64* %7, align 8, !dbg !14469
  %37 = load i64, i64* %5, align 8, !dbg !14470
  %38 = sub nsw i64 %36, %37, !dbg !14471
  store i64 %38, i64* %6, align 8, !dbg !14472
  %39 = load i64, i64* %6, align 8, !dbg !14473
  %40 = icmp sgt i64 %39, 16777216, !dbg !14475
  br i1 %40, label %41, label %42, !dbg !14476

41:                                               ; preds = %35
  store i64 -22, i64* %2, align 8, !dbg !14477
  br label %46, !dbg !14477

42:                                               ; preds = %35
  %43 = load i64, i64* %4, align 8, !dbg !14479
  %44 = load i64, i64* %6, align 8, !dbg !14480
  %45 = add i64 %43, %44, !dbg !14481
  store i64 %45, i64* %2, align 8, !dbg !14482
  br label %46, !dbg !14482

46:                                               ; preds = %42, %41, %33
  %47 = load i64, i64* %2, align 8, !dbg !14483
  ret i64 %47, !dbg !14483
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_nrf_rtc_timer_set(i32 noundef %0, i64 noundef %1, void (i32, i64, i8*)* noundef %2, i8* noundef %3) #1 !dbg !14484 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca void (i32, i64, i8*)*, align 4
  %8 = alloca i8*, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14485, metadata !DIExpression()), !dbg !14486
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !14487, metadata !DIExpression()), !dbg !14488
  store void (i32, i64, i8*)* %2, void (i32, i64, i8*)** %7, align 4
  call void @llvm.dbg.declare(metadata void (i32, i64, i8*)** %7, metadata !14489, metadata !DIExpression()), !dbg !14490
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !14491, metadata !DIExpression()), !dbg !14492
  %9 = load i32, i32* %5, align 4, !dbg !14493
  %10 = load i64, i64* %6, align 8, !dbg !14494
  %11 = load void (i32, i64, i8*)*, void (i32, i64, i8*)** %7, align 4, !dbg !14495
  %12 = load i8*, i8** %8, align 4, !dbg !14496
  %13 = call i32 @compare_set(i32 noundef %9, i64 noundef %10, void (i32, i64, i8*)* noundef %11, i8* noundef %12) #10, !dbg !14497
  ret i32 %13, !dbg !14498
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_nrf_rtc_timer_abort(i32 noundef %0) #1 !dbg !14499 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14500, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.declare(metadata i8* %3, metadata !14502, metadata !DIExpression()), !dbg !14503
  %4 = load i32, i32* %2, align 4, !dbg !14504
  %5 = call zeroext i1 @compare_int_lock(i32 noundef %4) #10, !dbg !14505
  %6 = zext i1 %5 to i8, !dbg !14503
  store i8 %6, i8* %3, align 1, !dbg !14503
  %7 = load i32, i32* %2, align 4, !dbg !14506
  %8 = getelementptr inbounds [1 x %struct.z_nrf_rtc_timer_chan_data], [1 x %struct.z_nrf_rtc_timer_chan_data]* @cc_data, i32 0, i32 %7, !dbg !14507
  %9 = getelementptr inbounds %struct.z_nrf_rtc_timer_chan_data, %struct.z_nrf_rtc_timer_chan_data* %8, i32 0, i32 2, !dbg !14508
  store volatile i64 -1, i64* %9, align 8, !dbg !14509
  %10 = load i32, i32* %2, align 4, !dbg !14510
  call void @event_clear(i32 noundef %10) #10, !dbg !14511
  %11 = load i32, i32* %2, align 4, !dbg !14512
  call void @event_disable(i32 noundef %11) #10, !dbg !14513
  %12 = load i32, i32* %2, align 4, !dbg !14514
  %13 = shl i32 1, %12, !dbg !14514
  %14 = xor i32 %13, -1, !dbg !14515
  %15 = call i32 @atomic_and.81(i32* noundef @force_isr_mask, i32 noundef %14) #10, !dbg !14516
  %16 = load i32, i32* %2, align 4, !dbg !14517
  %17 = load i8, i8* %3, align 1, !dbg !14518
  %18 = trunc i8 %17 to i1, !dbg !14518
  call void @compare_int_unlock(i32 noundef %16, i1 noundef zeroext %18) #10, !dbg !14519
  ret void, !dbg !14520
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_nrf_rtc_timer_chan_alloc() #1 !dbg !14521 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14524, metadata !DIExpression()), !dbg !14525
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14526, metadata !DIExpression()), !dbg !14527
  br label %4, !dbg !14528

4:                                                ; preds = %22, %0
  %5 = load i32, i32* @alloc_mask, align 4, !dbg !14529
  %6 = icmp ne i32 %5, 0, !dbg !14529
  br i1 %6, label %7, label %11, !dbg !14529

7:                                                ; preds = %4
  %8 = load i32, i32* @alloc_mask, align 4, !dbg !14531
  %9 = call i32 @llvm.ctlz.i32(i32 %8, i1 false), !dbg !14532
  %10 = sub nsw i32 31, %9, !dbg !14533
  br label %12, !dbg !14529

11:                                               ; preds = %4
  br label %12, !dbg !14529

12:                                               ; preds = %11, %7
  %13 = phi i32 [ %10, %7 ], [ -1, %11 ], !dbg !14529
  store i32 %13, i32* %2, align 4, !dbg !14534
  %14 = load i32, i32* %2, align 4, !dbg !14535
  %15 = icmp slt i32 %14, 0, !dbg !14537
  br i1 %15, label %16, label %17, !dbg !14538

16:                                               ; preds = %12
  store i32 -12, i32* %1, align 4, !dbg !14539
  br label %31, !dbg !14539

17:                                               ; preds = %12
  %18 = load i32, i32* %2, align 4, !dbg !14541
  %19 = shl i32 1, %18, !dbg !14541
  %20 = xor i32 %19, -1, !dbg !14542
  %21 = call i32 @atomic_and.81(i32* noundef @alloc_mask, i32 noundef %20) #10, !dbg !14543
  store i32 %21, i32* %3, align 4, !dbg !14544
  br label %22, !dbg !14545

22:                                               ; preds = %17
  %23 = load i32, i32* %3, align 4, !dbg !14546
  %24 = load i32, i32* %2, align 4, !dbg !14547
  %25 = shl i32 1, %24, !dbg !14547
  %26 = and i32 %23, %25, !dbg !14548
  %27 = icmp ne i32 %26, 0, !dbg !14549
  %28 = xor i1 %27, true, !dbg !14549
  br i1 %28, label %4, label %29, !dbg !14545, !llvm.loop !14550

29:                                               ; preds = %22
  %30 = load i32, i32* %2, align 4, !dbg !14552
  store i32 %30, i32* %1, align 4, !dbg !14553
  br label %31, !dbg !14553

31:                                               ; preds = %29, %16
  %32 = load i32, i32* %1, align 4, !dbg !14554
  ret i32 %32, !dbg !14554
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optnone
define dso_local void @z_nrf_rtc_timer_chan_free(i32 noundef %0) #1 !dbg !14555 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14556, metadata !DIExpression()), !dbg !14557
  %3 = load i32, i32* %2, align 4, !dbg !14558
  %4 = shl i32 1, %3, !dbg !14558
  %5 = call i32 @atomic_or.84(i32* noundef @alloc_mask, i32 noundef %4) #10, !dbg !14559
  ret void, !dbg !14560
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_nrf_rtc_timer_trigger_overflow() #1 !dbg !14561 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14562, metadata !DIExpression()), !dbg !14563
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14564, metadata !DIExpression()), !dbg !14565
  store i32 0, i32* %3, align 4, !dbg !14565
  store i32 -134, i32* %1, align 4, !dbg !14566
  br label %8, !dbg !14566

5:                                                ; No predecessors!
  call void @llvm.dbg.label(metadata !14569), !dbg !14570
  %6 = load i32, i32* %2, align 4, !dbg !14571
  call void @full_int_unlock(i32 noundef %6) #10, !dbg !14572
  %7 = load i32, i32* %3, align 4, !dbg !14573
  store i32 %7, i32* %1, align 4, !dbg !14574
  br label %8, !dbg !14574

8:                                                ; preds = %5, %0
  %9 = load i32, i32* %1, align 4, !dbg !14575
  ret i32 %9, !dbg !14575
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !14576 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14577, metadata !DIExpression()), !dbg !14578
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !14579, metadata !DIExpression()), !dbg !14580
  %9 = load i8, i8* %4, align 1, !dbg !14581
  %10 = trunc i8 %9 to i1, !dbg !14581
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14582, metadata !DIExpression()), !dbg !14583
  %11 = load i32, i32* %3, align 4, !dbg !14584
  %12 = sext i32 %11 to i64, !dbg !14584
  %13 = icmp eq i64 %12, -1, !dbg !14585
  br i1 %13, label %14, label %21, !dbg !14586

14:                                               ; preds = %2
  %15 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14587
  %16 = sdiv i32 %15, 32768, !dbg !14587
  %17 = sub i32 8388608, %16, !dbg !14587
  %18 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14587
  %19 = sdiv i32 %18, 32768, !dbg !14587
  %20 = udiv i32 %17, %19, !dbg !14587
  br label %23, !dbg !14586

21:                                               ; preds = %2
  %22 = load i32, i32* %3, align 4, !dbg !14588
  br label %23, !dbg !14586

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %20, %14 ], [ %22, %21 ], !dbg !14586
  store i32 %24, i32* %3, align 4, !dbg !14589
  %25 = load i32, i32* %3, align 4, !dbg !14590
  %26 = sub nsw i32 %25, 1, !dbg !14590
  %27 = icmp sle i32 %26, 0, !dbg !14590
  br i1 %27, label %28, label %29, !dbg !14590

28:                                               ; preds = %23
  br label %51, !dbg !14590

29:                                               ; preds = %23
  %30 = load i32, i32* %3, align 4, !dbg !14590
  %31 = sub nsw i32 %30, 1, !dbg !14590
  %32 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14590
  %33 = sdiv i32 %32, 32768, !dbg !14590
  %34 = sub i32 8388608, %33, !dbg !14590
  %35 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14590
  %36 = sdiv i32 %35, 32768, !dbg !14590
  %37 = udiv i32 %34, %36, !dbg !14590
  %38 = icmp slt i32 %31, %37, !dbg !14590
  br i1 %38, label %39, label %42, !dbg !14590

39:                                               ; preds = %29
  %40 = load i32, i32* %3, align 4, !dbg !14590
  %41 = sub nsw i32 %40, 1, !dbg !14590
  br label %49, !dbg !14590

42:                                               ; preds = %29
  %43 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14590
  %44 = sdiv i32 %43, 32768, !dbg !14590
  %45 = sub i32 8388608, %44, !dbg !14590
  %46 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14590
  %47 = sdiv i32 %46, 32768, !dbg !14590
  %48 = udiv i32 %45, %47, !dbg !14590
  br label %49, !dbg !14590

49:                                               ; preds = %42, %39
  %50 = phi i32 [ %41, %39 ], [ %48, %42 ], !dbg !14590
  br label %51, !dbg !14590

51:                                               ; preds = %49, %28
  %52 = phi i32 [ 0, %28 ], [ %50, %49 ], !dbg !14590
  store i32 %52, i32* %3, align 4, !dbg !14591
  %53 = load i32, i32* %3, align 4, !dbg !14592
  %54 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14593
  %55 = sdiv i32 %54, 32768, !dbg !14593
  %56 = sub i32 8388608, %55, !dbg !14593
  %57 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14593
  %58 = sdiv i32 %57, 32768, !dbg !14593
  %59 = udiv i32 %56, %58, !dbg !14593
  %60 = sub i32 %59, 1, !dbg !14594
  %61 = icmp ult i32 %53, %60, !dbg !14595
  %62 = zext i1 %61 to i8, !dbg !14596
  store i8 %62, i8* @sys_busy, align 1, !dbg !14596
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14597, metadata !DIExpression()), !dbg !14598
  %63 = call i64 @z_nrf_rtc_timer_read() #10, !dbg !14599
  %64 = load i64, i64* @last_count, align 8, !dbg !14600
  %65 = sub i64 %63, %64, !dbg !14601
  %66 = trunc i64 %65 to i32, !dbg !14599
  store i32 %66, i32* %6, align 4, !dbg !14598
  %67 = load i32, i32* %6, align 4, !dbg !14602
  %68 = icmp uge i32 %67, 8388608, !dbg !14604
  br i1 %68, label %69, label %70, !dbg !14605

69:                                               ; preds = %51
  store i32 0, i32* %3, align 4, !dbg !14606
  br label %70, !dbg !14608

70:                                               ; preds = %69, %51
  %71 = load i32, i32* %3, align 4, !dbg !14609
  %72 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14610
  %73 = sdiv i32 %72, 32768, !dbg !14610
  %74 = mul nsw i32 %71, %73, !dbg !14611
  %75 = add nsw i32 %74, 1, !dbg !14612
  %76 = load i32, i32* %6, align 4, !dbg !14613
  %77 = add i32 %75, %76, !dbg !14614
  store i32 %77, i32* %5, align 4, !dbg !14615
  %78 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14616
  %79 = sdiv i32 %78, 32768, !dbg !14616
  %80 = sub nsw i32 %79, 1, !dbg !14617
  %81 = load i32, i32* %5, align 4, !dbg !14618
  %82 = add i32 %81, %80, !dbg !14618
  store i32 %82, i32* %5, align 4, !dbg !14618
  %83 = load i32, i32* %5, align 4, !dbg !14619
  %84 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14620
  %85 = sdiv i32 %84, 32768, !dbg !14620
  %86 = udiv i32 %83, %85, !dbg !14621
  %87 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14622
  %88 = sdiv i32 %87, 32768, !dbg !14622
  %89 = mul i32 %86, %88, !dbg !14623
  store i32 %89, i32* %5, align 4, !dbg !14624
  %90 = load i32, i32* %5, align 4, !dbg !14625
  %91 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14627
  %92 = sdiv i32 %91, 32768, !dbg !14627
  %93 = sub i32 8388608, %92, !dbg !14627
  %94 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14627
  %95 = sdiv i32 %94, 32768, !dbg !14627
  %96 = udiv i32 %93, %95, !dbg !14627
  %97 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14627
  %98 = sdiv i32 %97, 32768, !dbg !14627
  %99 = mul i32 %96, %98, !dbg !14627
  %100 = icmp ugt i32 %90, %99, !dbg !14628
  br i1 %100, label %101, label %111, !dbg !14629

101:                                              ; preds = %70
  %102 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14630
  %103 = sdiv i32 %102, 32768, !dbg !14630
  %104 = sub i32 8388608, %103, !dbg !14630
  %105 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14630
  %106 = sdiv i32 %105, 32768, !dbg !14630
  %107 = udiv i32 %104, %106, !dbg !14630
  %108 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14630
  %109 = sdiv i32 %108, 32768, !dbg !14630
  %110 = mul i32 %107, %109, !dbg !14630
  store i32 %110, i32* %5, align 4, !dbg !14632
  br label %111, !dbg !14633

111:                                              ; preds = %101, %70
  call void @llvm.dbg.declare(metadata i64* %7, metadata !14634, metadata !DIExpression()), !dbg !14635
  %112 = load i32, i32* %5, align 4, !dbg !14636
  %113 = zext i32 %112 to i64, !dbg !14636
  %114 = load i64, i64* @last_count, align 8, !dbg !14637
  %115 = add i64 %113, %114, !dbg !14638
  store i64 %115, i64* %7, align 8, !dbg !14635
  %116 = load i64, i64* %7, align 8, !dbg !14639
  %117 = call i32 @compare_set(i32 noundef 0, i64 noundef %116, void (i32, i64, i8*)* noundef @sys_clock_timeout_handler, i8* noundef null) #10, !dbg !14640
  ret void, !dbg !14641
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_elapsed() #1 !dbg !14642 {
  %1 = call i64 @z_nrf_rtc_timer_read() #10, !dbg !14643
  %2 = load i64, i64* @last_count, align 8, !dbg !14644
  %3 = sub i64 %1, %2, !dbg !14645
  %4 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !14646
  %5 = sdiv i32 %4, 32768, !dbg !14646
  %6 = sext i32 %5 to i64, !dbg !14646
  %7 = udiv i64 %3, %6, !dbg !14647
  %8 = trunc i64 %7 to i32, !dbg !14648
  ret i32 %8, !dbg !14649
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_cycle_get_32() #1 !dbg !14650 {
  %1 = call i64 @z_nrf_rtc_timer_read() #10, !dbg !14651
  %2 = trunc i64 %1 to i32, !dbg !14652
  ret i32 %2, !dbg !14653
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1, %struct.pinctrl_state** noundef %2) #1 !dbg !14654 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.pinctrl_dev_config*, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.pinctrl_state**, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %5, metadata !14673, metadata !DIExpression()), !dbg !14674
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !14675, metadata !DIExpression()), !dbg !14676
  store %struct.pinctrl_state** %2, %struct.pinctrl_state*** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state*** %7, metadata !14677, metadata !DIExpression()), !dbg !14678
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !14679
  %9 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %8, i32 0, i32 1, !dbg !14680
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %9, align 4, !dbg !14680
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, !dbg !14679
  %12 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !14681
  store %struct.pinctrl_state* %11, %struct.pinctrl_state** %12, align 4, !dbg !14682
  br label %13, !dbg !14683

13:                                               ; preds = %35, %3
  %14 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !14684
  %15 = load %struct.pinctrl_state*, %struct.pinctrl_state** %14, align 4, !dbg !14685
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !14686
  %17 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %16, i32 0, i32 1, !dbg !14687
  %18 = load %struct.pinctrl_state*, %struct.pinctrl_state** %17, align 4, !dbg !14687
  %19 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !14688
  %20 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %19, i32 0, i32 2, !dbg !14689
  %21 = load i8, i8* %20, align 4, !dbg !14689
  %22 = zext i8 %21 to i32, !dbg !14686
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %18, i32 %22, !dbg !14686
  %24 = icmp ult %struct.pinctrl_state* %15, %23, !dbg !14690
  br i1 %24, label %25, label %39, !dbg !14683

25:                                               ; preds = %13
  %26 = load i8, i8* %6, align 1, !dbg !14691
  %27 = zext i8 %26 to i32, !dbg !14691
  %28 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !14694
  %29 = load %struct.pinctrl_state*, %struct.pinctrl_state** %28, align 4, !dbg !14695
  %30 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %29, i32 0, i32 2, !dbg !14696
  %31 = load i8, i8* %30, align 1, !dbg !14696
  %32 = zext i8 %31 to i32, !dbg !14697
  %33 = icmp eq i32 %27, %32, !dbg !14698
  br i1 %33, label %34, label %35, !dbg !14699

34:                                               ; preds = %25
  store i32 0, i32* %4, align 4, !dbg !14700
  br label %40, !dbg !14700

35:                                               ; preds = %25
  %36 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !14702
  %37 = load %struct.pinctrl_state*, %struct.pinctrl_state** %36, align 4, !dbg !14703
  %38 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %37, i32 1, !dbg !14703
  store %struct.pinctrl_state* %38, %struct.pinctrl_state** %36, align 4, !dbg !14703
  br label %13, !dbg !14683, !llvm.loop !14704

39:                                               ; preds = %13
  store i32 -2, i32* %4, align 4, !dbg !14706
  br label %40, !dbg !14706

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4, !dbg !14707
  ret i32 %41, !dbg !14707
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_configure_pins(i32* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !14708 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32* %0, i32** %5, align 4
  call void @llvm.dbg.declare(metadata i32** %5, metadata !14712, metadata !DIExpression()), !dbg !14713
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !14714, metadata !DIExpression()), !dbg !14715
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14716, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.declare(metadata i8* %8, metadata !14718, metadata !DIExpression()), !dbg !14720
  store i8 0, i8* %8, align 1, !dbg !14720
  br label %14, !dbg !14721

14:                                               ; preds = %137, %3
  %15 = load i8, i8* %8, align 1, !dbg !14722
  %16 = zext i8 %15 to i32, !dbg !14722
  %17 = load i8, i8* %6, align 1, !dbg !14724
  %18 = zext i8 %17 to i32, !dbg !14724
  %19 = icmp slt i32 %16, %18, !dbg !14725
  br i1 %19, label %20, label %140, !dbg !14726

20:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14727, metadata !DIExpression()), !dbg !14729
  %21 = load i32*, i32** %5, align 4, !dbg !14730
  %22 = load i8, i8* %8, align 1, !dbg !14730
  %23 = zext i8 %22 to i32, !dbg !14730
  %24 = getelementptr inbounds i32, i32* %21, i32 %23, !dbg !14730
  %25 = load i32, i32* %24, align 4, !dbg !14730
  %26 = lshr i32 %25, 9, !dbg !14730
  %27 = and i32 %26, 15, !dbg !14730
  store i32 %27, i32* %9, align 4, !dbg !14729
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14731, metadata !DIExpression()), !dbg !14732
  %28 = load i32*, i32** %5, align 4, !dbg !14733
  %29 = load i8, i8* %8, align 1, !dbg !14733
  %30 = zext i8 %29 to i32, !dbg !14733
  %31 = getelementptr inbounds i32, i32* %28, i32 %30, !dbg !14733
  %32 = load i32, i32* %31, align 4, !dbg !14733
  %33 = lshr i32 %32, 0, !dbg !14733
  %34 = and i32 %33, 127, !dbg !14733
  store i32 %34, i32* %10, align 4, !dbg !14732
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14734, metadata !DIExpression()), !dbg !14735
  store i32 -1, i32* %11, align 4, !dbg !14735
  call void @llvm.dbg.declare(metadata i32* %12, metadata !14736, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.declare(metadata i32* %13, metadata !14738, metadata !DIExpression()), !dbg !14739
  %35 = load i32, i32* %10, align 4, !dbg !14740
  %36 = icmp eq i32 %35, 127, !dbg !14742
  br i1 %36, label %37, label %38, !dbg !14743

37:                                               ; preds = %20
  store i32 -1, i32* %10, align 4, !dbg !14744
  br label %38, !dbg !14746

38:                                               ; preds = %37, %20
  %39 = load i32*, i32** %5, align 4, !dbg !14747
  %40 = load i8, i8* %8, align 1, !dbg !14747
  %41 = zext i8 %40 to i32, !dbg !14747
  %42 = getelementptr inbounds i32, i32* %39, i32 %41, !dbg !14747
  %43 = load i32, i32* %42, align 4, !dbg !14747
  %44 = lshr i32 %43, 16, !dbg !14747
  %45 = and i32 %44, 65535, !dbg !14747
  switch i32 %45, label %104 [
    i32 0, label %46
    i32 1, label %51
    i32 2, label %56
    i32 3, label %61
    i32 7, label %66
    i32 8, label %71
    i32 9, label %76
    i32 10, label %81
    i32 11, label %86
    i32 12, label %95
  ], !dbg !14748

46:                                               ; preds = %38
  %47 = load i32, i32* %10, align 4, !dbg !14749
  %48 = load i32, i32* %7, align 4, !dbg !14751
  %49 = inttoptr i32 %48 to %struct.NRF_UART_Type*, !dbg !14751
  %50 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %49, i32 0, i32 27, !dbg !14751
  store volatile i32 %47, i32* %50, align 4, !dbg !14752
  store i32 1, i32* %11, align 4, !dbg !14753
  store i32 1, i32* %12, align 4, !dbg !14754
  store i32 1, i32* %13, align 4, !dbg !14755
  br label %105, !dbg !14756

51:                                               ; preds = %38
  %52 = load i32, i32* %10, align 4, !dbg !14757
  %53 = load i32, i32* %7, align 4, !dbg !14758
  %54 = inttoptr i32 %53 to %struct.NRF_UART_Type*, !dbg !14758
  %55 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %54, i32 0, i32 29, !dbg !14758
  store volatile i32 %52, i32* %55, align 4, !dbg !14759
  store i32 0, i32* %12, align 4, !dbg !14760
  store i32 0, i32* %13, align 4, !dbg !14761
  br label %105, !dbg !14762

56:                                               ; preds = %38
  %57 = load i32, i32* %10, align 4, !dbg !14763
  %58 = load i32, i32* %7, align 4, !dbg !14764
  %59 = inttoptr i32 %58 to %struct.NRF_UART_Type*, !dbg !14764
  %60 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %59, i32 0, i32 26, !dbg !14764
  store volatile i32 %57, i32* %60, align 4, !dbg !14765
  store i32 1, i32* %11, align 4, !dbg !14766
  store i32 1, i32* %12, align 4, !dbg !14767
  store i32 1, i32* %13, align 4, !dbg !14768
  br label %105, !dbg !14769

61:                                               ; preds = %38
  %62 = load i32, i32* %10, align 4, !dbg !14770
  %63 = load i32, i32* %7, align 4, !dbg !14771
  %64 = inttoptr i32 %63 to %struct.NRF_UART_Type*, !dbg !14771
  %65 = getelementptr inbounds %struct.NRF_UART_Type, %struct.NRF_UART_Type* %64, i32 0, i32 28, !dbg !14771
  store volatile i32 %62, i32* %65, align 4, !dbg !14772
  store i32 0, i32* %12, align 4, !dbg !14773
  store i32 0, i32* %13, align 4, !dbg !14774
  br label %105, !dbg !14775

66:                                               ; preds = %38
  %67 = load i32, i32* %10, align 4, !dbg !14776
  %68 = load i32, i32* %7, align 4, !dbg !14777
  %69 = inttoptr i32 %68 to %struct.NRF_SPIS_Type*, !dbg !14777
  %70 = getelementptr inbounds %struct.NRF_SPIS_Type, %struct.NRF_SPIS_Type* %69, i32 0, i32 21, !dbg !14777
  store volatile i32 %67, i32* %70, align 4, !dbg !14778
  store i32 0, i32* %12, align 4, !dbg !14779
  store i32 0, i32* %13, align 4, !dbg !14780
  br label %105, !dbg !14781

71:                                               ; preds = %38
  %72 = load i32, i32* %10, align 4, !dbg !14782
  %73 = load i32, i32* %7, align 4, !dbg !14783
  %74 = inttoptr i32 %73 to %struct.NRF_SPIS_Type*, !dbg !14783
  %75 = getelementptr inbounds %struct.NRF_SPIS_Type, %struct.NRF_SPIS_Type* %74, i32 0, i32 23, !dbg !14783
  store volatile i32 %72, i32* %75, align 4, !dbg !14784
  store i32 0, i32* %12, align 4, !dbg !14785
  store i32 0, i32* %13, align 4, !dbg !14786
  br label %105, !dbg !14787

76:                                               ; preds = %38
  %77 = load i32, i32* %10, align 4, !dbg !14788
  %78 = load i32, i32* %7, align 4, !dbg !14789
  %79 = inttoptr i32 %78 to %struct.NRF_SPIS_Type*, !dbg !14789
  %80 = getelementptr inbounds %struct.NRF_SPIS_Type, %struct.NRF_SPIS_Type* %79, i32 0, i32 22, !dbg !14789
  store volatile i32 %77, i32* %80, align 4, !dbg !14790
  store i32 0, i32* %12, align 4, !dbg !14791
  store i32 1, i32* %13, align 4, !dbg !14792
  br label %105, !dbg !14793

81:                                               ; preds = %38
  %82 = load i32, i32* %10, align 4, !dbg !14794
  %83 = load i32, i32* %7, align 4, !dbg !14795
  %84 = inttoptr i32 %83 to %struct.NRF_SPIS_Type*, !dbg !14795
  %85 = getelementptr inbounds %struct.NRF_SPIS_Type, %struct.NRF_SPIS_Type* %84, i32 0, i32 24, !dbg !14795
  store volatile i32 %82, i32* %85, align 4, !dbg !14796
  store i32 0, i32* %12, align 4, !dbg !14797
  store i32 0, i32* %13, align 4, !dbg !14798
  br label %105, !dbg !14799

86:                                               ; preds = %38
  %87 = load i32, i32* %10, align 4, !dbg !14800
  %88 = load i32, i32* %7, align 4, !dbg !14801
  %89 = inttoptr i32 %88 to %struct.NRF_TWI_Type*, !dbg !14801
  %90 = getelementptr inbounds %struct.NRF_TWI_Type, %struct.NRF_TWI_Type* %89, i32 0, i32 29, !dbg !14801
  store volatile i32 %87, i32* %90, align 4, !dbg !14802
  %91 = load i32, i32* %9, align 4, !dbg !14803
  %92 = icmp eq i32 %91, 0, !dbg !14805
  br i1 %92, label %93, label %94, !dbg !14806

93:                                               ; preds = %86
  store i32 6, i32* %9, align 4, !dbg !14807
  br label %94, !dbg !14809

94:                                               ; preds = %93, %86
  store i32 0, i32* %12, align 4, !dbg !14810
  store i32 0, i32* %13, align 4, !dbg !14811
  br label %105, !dbg !14812

95:                                               ; preds = %38
  %96 = load i32, i32* %10, align 4, !dbg !14813
  %97 = load i32, i32* %7, align 4, !dbg !14814
  %98 = inttoptr i32 %97 to %struct.NRF_TWI_Type*, !dbg !14814
  %99 = getelementptr inbounds %struct.NRF_TWI_Type, %struct.NRF_TWI_Type* %98, i32 0, i32 30, !dbg !14814
  store volatile i32 %96, i32* %99, align 4, !dbg !14815
  %100 = load i32, i32* %9, align 4, !dbg !14816
  %101 = icmp eq i32 %100, 0, !dbg !14818
  br i1 %101, label %102, label %103, !dbg !14819

102:                                              ; preds = %95
  store i32 6, i32* %9, align 4, !dbg !14820
  br label %103, !dbg !14822

103:                                              ; preds = %102, %95
  store i32 0, i32* %12, align 4, !dbg !14823
  store i32 0, i32* %13, align 4, !dbg !14824
  br label %105, !dbg !14825

104:                                              ; preds = %38
  store i32 -134, i32* %4, align 4, !dbg !14826
  br label %141, !dbg !14826

105:                                              ; preds = %103, %94, %81, %76, %71, %66, %61, %56, %51, %46
  %106 = load i32, i32* %10, align 4, !dbg !14827
  %107 = icmp ne i32 %106, 127, !dbg !14829
  br i1 %107, label %108, label %136, !dbg !14830

108:                                              ; preds = %105
  %109 = load i32, i32* %11, align 4, !dbg !14831
  %110 = icmp ne i32 %109, -1, !dbg !14834
  br i1 %110, label %111, label %114, !dbg !14835

111:                                              ; preds = %108
  %112 = load i32, i32* %10, align 4, !dbg !14836
  %113 = load i32, i32* %11, align 4, !dbg !14838
  call void @nrf_gpio_pin_write(i32 noundef %112, i32 noundef %113) #10, !dbg !14839
  br label %114, !dbg !14840

114:                                              ; preds = %111, %108
  %115 = load i32*, i32** %5, align 4, !dbg !14841
  %116 = load i8, i8* %8, align 1, !dbg !14841
  %117 = zext i8 %116 to i32, !dbg !14841
  %118 = getelementptr inbounds i32, i32* %115, i32 %117, !dbg !14841
  %119 = load i32, i32* %118, align 4, !dbg !14841
  %120 = lshr i32 %119, 13, !dbg !14841
  %121 = and i32 %120, 1, !dbg !14841
  %122 = icmp eq i32 %121, 1, !dbg !14843
  br i1 %122, label %123, label %124, !dbg !14844

123:                                              ; preds = %114
  store i32 0, i32* %12, align 4, !dbg !14845
  store i32 1, i32* %13, align 4, !dbg !14847
  br label %124, !dbg !14848

124:                                              ; preds = %123, %114
  %125 = load i32, i32* %10, align 4, !dbg !14849
  %126 = load i32, i32* %12, align 4, !dbg !14850
  %127 = load i32, i32* %13, align 4, !dbg !14851
  %128 = load i32*, i32** %5, align 4, !dbg !14852
  %129 = load i8, i8* %8, align 1, !dbg !14852
  %130 = zext i8 %129 to i32, !dbg !14852
  %131 = getelementptr inbounds i32, i32* %128, i32 %130, !dbg !14852
  %132 = load i32, i32* %131, align 4, !dbg !14852
  %133 = lshr i32 %132, 7, !dbg !14852
  %134 = and i32 %133, 3, !dbg !14852
  %135 = load i32, i32* %9, align 4, !dbg !14853
  call void @nrf_gpio_cfg(i32 noundef %125, i32 noundef %126, i32 noundef %127, i32 noundef %134, i32 noundef %135, i32 noundef 0) #10, !dbg !14854
  br label %136, !dbg !14855

136:                                              ; preds = %124, %105
  br label %137, !dbg !14856

137:                                              ; preds = %136
  %138 = load i8, i8* %8, align 1, !dbg !14857
  %139 = add i8 %138, 1, !dbg !14857
  store i8 %139, i8* %8, align 1, !dbg !14857
  br label %14, !dbg !14858, !llvm.loop !14859

140:                                              ; preds = %14
  store i32 0, i32* %4, align 4, !dbg !14861
  br label %141, !dbg !14861

141:                                              ; preds = %140, %104
  %142 = load i32, i32* %4, align 4, !dbg !14862
  ret i32 %142, !dbg !14862
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_pin_write(i32 noundef %0, i32 noundef %1) #1 !dbg !14863 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14866, metadata !DIExpression()), !dbg !14867
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14868, metadata !DIExpression()), !dbg !14869
  %5 = load i32, i32* %4, align 4, !dbg !14870
  %6 = icmp eq i32 %5, 0, !dbg !14872
  br i1 %6, label %7, label %9, !dbg !14873

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !14874
  call void @nrf_gpio_pin_clear(i32 noundef %8) #10, !dbg !14876
  br label %11, !dbg !14877

9:                                                ; preds = %2
  %10 = load i32, i32* %3, align 4, !dbg !14878
  call void @nrf_gpio_pin_set(i32 noundef %10) #10, !dbg !14880
  br label %11

11:                                               ; preds = %9, %7
  ret void, !dbg !14881
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_cfg(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #1 !dbg !14882 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.NRF_GPIO_Type*, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14885, metadata !DIExpression()), !dbg !14886
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14887, metadata !DIExpression()), !dbg !14888
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14889, metadata !DIExpression()), !dbg !14890
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14891, metadata !DIExpression()), !dbg !14892
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14893, metadata !DIExpression()), !dbg !14894
  store i32 %5, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !14895, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %13, metadata !14897, metadata !DIExpression()), !dbg !14898
  %15 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.91(i32* noundef %7) #10, !dbg !14899
  store %struct.NRF_GPIO_Type* %15, %struct.NRF_GPIO_Type** %13, align 4, !dbg !14898
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14900, metadata !DIExpression()), !dbg !14901
  store i32 0, i32* %14, align 4, !dbg !14901
  %16 = load i32, i32* %8, align 4, !dbg !14902
  %17 = shl i32 %16, 0, !dbg !14903
  %18 = load i32, i32* %9, align 4, !dbg !14904
  %19 = shl i32 %18, 1, !dbg !14905
  %20 = or i32 %17, %19, !dbg !14906
  %21 = load i32, i32* %10, align 4, !dbg !14907
  %22 = shl i32 %21, 2, !dbg !14908
  %23 = or i32 %20, %22, !dbg !14909
  %24 = load i32, i32* %11, align 4, !dbg !14910
  %25 = shl i32 %24, 8, !dbg !14911
  %26 = or i32 %23, %25, !dbg !14912
  %27 = load i32, i32* %12, align 4, !dbg !14913
  %28 = shl i32 %27, 16, !dbg !14914
  %29 = or i32 %26, %28, !dbg !14915
  %30 = load i32, i32* %14, align 4, !dbg !14916
  %31 = or i32 %30, %29, !dbg !14916
  store i32 %31, i32* %14, align 4, !dbg !14916
  %32 = load i32, i32* %14, align 4, !dbg !14917
  %33 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %13, align 4, !dbg !14918
  %34 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %33, i32 0, i32 9, !dbg !14919
  %35 = load i32, i32* %7, align 4, !dbg !14920
  %36 = getelementptr inbounds [32 x i32], [32 x i32]* %34, i32 0, i32 %35, !dbg !14918
  store volatile i32 %32, i32* %36, align 4, !dbg !14921
  ret void, !dbg !14922
}

; Function Attrs: noinline nounwind optnone
define internal %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.91(i32* noundef %0) #1 !dbg !14923 {
  %2 = alloca i32*, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !14926, metadata !DIExpression()), !dbg !14927
  %3 = load i32*, i32** %2, align 4, !dbg !14928
  %4 = call i32 @nrf_gpio_pin_port_number_extract.92(i32* noundef %3) #10, !dbg !14929
  switch i32 %4, label %5 [
    i32 0, label %6
  ], !dbg !14930

5:                                                ; preds = %1
  br label %6, !dbg !14931

6:                                                ; preds = %1, %5
  ret %struct.NRF_GPIO_Type* inttoptr (i32 1342177280 to %struct.NRF_GPIO_Type*), !dbg !14934
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_pin_port_number_extract.92(i32* noundef %0) #1 !dbg !14935 {
  %2 = alloca i32*, align 4
  %3 = alloca i32, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !14936, metadata !DIExpression()), !dbg !14937
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14938, metadata !DIExpression()), !dbg !14939
  %4 = load i32*, i32** %2, align 4, !dbg !14940
  %5 = load i32, i32* %4, align 4, !dbg !14941
  store i32 %5, i32* %3, align 4, !dbg !14939
  %6 = load i32, i32* %3, align 4, !dbg !14942
  %7 = and i32 %6, 31, !dbg !14943
  %8 = load i32*, i32** %2, align 4, !dbg !14944
  store i32 %7, i32* %8, align 4, !dbg !14945
  %9 = load i32, i32* %3, align 4, !dbg !14946
  %10 = lshr i32 %9, 5, !dbg !14947
  ret i32 %10, !dbg !14948
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_pin_clear(i32 noundef %0) #1 !dbg !14949 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14950, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !14952, metadata !DIExpression()), !dbg !14953
  %4 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.91(i32* noundef %2) #10, !dbg !14954
  store %struct.NRF_GPIO_Type* %4, %struct.NRF_GPIO_Type** %3, align 4, !dbg !14953
  %5 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !14955
  %6 = load i32, i32* %2, align 4, !dbg !14956
  %7 = shl i32 1, %6, !dbg !14957
  call void @nrf_gpio_port_out_clear.94(%struct.NRF_GPIO_Type* noundef %5, i32 noundef %7) #10, !dbg !14958
  ret void, !dbg !14959
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_pin_set(i32 noundef %0) #1 !dbg !14960 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14961, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !14963, metadata !DIExpression()), !dbg !14964
  %4 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.91(i32* noundef %2) #10, !dbg !14965
  store %struct.NRF_GPIO_Type* %4, %struct.NRF_GPIO_Type** %3, align 4, !dbg !14964
  %5 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !14966
  %6 = load i32, i32* %2, align 4, !dbg !14967
  %7 = shl i32 1, %6, !dbg !14968
  call void @nrf_gpio_port_out_set.93(%struct.NRF_GPIO_Type* noundef %5, i32 noundef %7) #10, !dbg !14969
  ret void, !dbg !14970
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_port_out_set.93(%struct.NRF_GPIO_Type* noundef %0, i32 noundef %1) #1 !dbg !14971 {
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !14974, metadata !DIExpression()), !dbg !14975
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14976, metadata !DIExpression()), !dbg !14977
  %5 = load i32, i32* %4, align 4, !dbg !14978
  %6 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !14979
  %7 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %6, i32 0, i32 2, !dbg !14980
  store volatile i32 %5, i32* %7, align 4, !dbg !14981
  ret void, !dbg !14982
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_port_out_clear.94(%struct.NRF_GPIO_Type* noundef %0, i32 noundef %1) #1 !dbg !14983 {
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !14984, metadata !DIExpression()), !dbg !14985
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14986, metadata !DIExpression()), !dbg !14987
  %5 = load i32, i32* %4, align 4, !dbg !14988
  %6 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !14989
  %7 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %6, i32 0, i32 3, !dbg !14990
  store volatile i32 %5, i32* %7, align 4, !dbg !14991
  ret void, !dbg !14992
}

; Function Attrs: noinline nounwind optnone
define dso_local void @SystemCoreClockUpdate() #1 !dbg !14993 {
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !14994
  ret void, !dbg !14995
}

; Function Attrs: noinline nounwind optnone
define dso_local void @SystemInit() #1 !dbg !14996 {
  %1 = call zeroext i1 @nrf51_errata_26() #10, !dbg !14997
  br i1 %1, label %2, label %3, !dbg !14999

2:                                                ; preds = %0
  store volatile i32 -1073217569, i32* inttoptr (i32 1073743108 to i32*), align 4, !dbg !15000
  store volatile i32 32768, i32* inttoptr (i32 1073769496 to i32*), align 4, !dbg !15002
  br label %3, !dbg !15003

3:                                                ; preds = %2, %0
  %4 = call zeroext i1 @nrf51_errata_59() #10, !dbg !15004
  br i1 %4, label %5, label %6, !dbg !15006

5:                                                ; preds = %3
  store volatile i32 1, i32* getelementptr inbounds (%struct.NRF_MPU_Type, %struct.NRF_MPU_Type* inttoptr (i32 1073741824 to %struct.NRF_MPU_Type*), i32 0, i32 6), align 4, !dbg !15007
  br label %6, !dbg !15009

6:                                                ; preds = %5, %3
  %7 = call zeroext i1 @nrf51_errata_76() #10, !dbg !15010
  br i1 %7, label %8, label %18, !dbg !15012

8:                                                ; preds = %6
  %9 = load volatile i32, i32* inttoptr (i32 1074195456 to i32*), align 4, !dbg !15013
  %10 = icmp ne i32 %9, 1, !dbg !15016
  br i1 %10, label %11, label %17, !dbg !15017

11:                                               ; preds = %8
  store volatile i32 37749, i32* inttoptr (i32 1074195456 to i32*), align 4, !dbg !15018
  br label %12, !dbg !15020

12:                                               ; preds = %15, %11
  %13 = load volatile i32, i32* inttoptr (i32 1074195456 to i32*), align 4, !dbg !15021
  %14 = icmp ne i32 %13, 1, !dbg !15022
  br i1 %14, label %15, label %16, !dbg !15020

15:                                               ; preds = %12
  br label %12, !dbg !15020, !llvm.loop !15023

16:                                               ; preds = %12
  br label %17, !dbg !15025

17:                                               ; preds = %16, %8
  store volatile i32 192, i32* inttoptr (i32 1074195476 to i32*), align 4, !dbg !15026
  br label %18, !dbg !15027

18:                                               ; preds = %17, %6
  call void @SystemCoreClockUpdate() #10, !dbg !15028
  ret void, !dbg !15029
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf51_errata_26() #1 !dbg !15030 {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15032, metadata !DIExpression()), !dbg !15033
  %4 = load i32, i32* inttoptr (i32 -268431392 to i32*), align 4, !dbg !15034
  %5 = and i32 %4, 255, !dbg !15035
  store i32 %5, i32* %2, align 4, !dbg !15033
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15036, metadata !DIExpression()), !dbg !15037
  %6 = load i32, i32* inttoptr (i32 -268431384 to i32*), align 4, !dbg !15038
  %7 = and i32 %6, 240, !dbg !15039
  %8 = lshr i32 %7, 4, !dbg !15040
  store i32 %8, i32* %3, align 4, !dbg !15037
  %9 = load i32, i32* %2, align 4, !dbg !15041
  %10 = icmp eq i32 %9, 1, !dbg !15043
  br i1 %10, label %11, label %26, !dbg !15044

11:                                               ; preds = %0
  %12 = load i32, i32* %3, align 4, !dbg !15045
  switch i32 %12, label %25 [
    i32 0, label %13
    i32 1, label %14
    i32 2, label %15
    i32 3, label %16
    i32 4, label %17
    i32 7, label %18
    i32 8, label %19
    i32 9, label %20
    i32 10, label %21
    i32 11, label %22
    i32 12, label %23
    i32 13, label %24
  ], !dbg !15047

13:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15048
  br label %27, !dbg !15048

14:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15050
  br label %27, !dbg !15050

15:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15051
  br label %27, !dbg !15051

16:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15052
  br label %27, !dbg !15052

17:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15053
  br label %27, !dbg !15053

18:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15054
  br label %27, !dbg !15054

19:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15055
  br label %27, !dbg !15055

20:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15056
  br label %27, !dbg !15056

21:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15057
  br label %27, !dbg !15057

22:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15058
  br label %27, !dbg !15058

23:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15059
  br label %27, !dbg !15059

24:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15060
  br label %27, !dbg !15060

25:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15061
  br label %27, !dbg !15061

26:                                               ; preds = %0
  store i1 false, i1* %1, align 1, !dbg !15062
  br label %27, !dbg !15062

27:                                               ; preds = %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13
  %28 = load i1, i1* %1, align 1, !dbg !15063
  ret i1 %28, !dbg !15063
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf51_errata_59() #1 !dbg !15064 {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15065, metadata !DIExpression()), !dbg !15066
  %4 = load i32, i32* inttoptr (i32 -268431392 to i32*), align 4, !dbg !15067
  %5 = and i32 %4, 255, !dbg !15068
  store i32 %5, i32* %2, align 4, !dbg !15066
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15069, metadata !DIExpression()), !dbg !15070
  %6 = load i32, i32* inttoptr (i32 -268431384 to i32*), align 4, !dbg !15071
  %7 = and i32 %6, 240, !dbg !15072
  %8 = lshr i32 %7, 4, !dbg !15073
  store i32 %8, i32* %3, align 4, !dbg !15070
  %9 = load i32, i32* %2, align 4, !dbg !15074
  %10 = icmp eq i32 %9, 1, !dbg !15076
  br i1 %10, label %11, label %26, !dbg !15077

11:                                               ; preds = %0
  %12 = load i32, i32* %3, align 4, !dbg !15078
  switch i32 %12, label %25 [
    i32 0, label %13
    i32 1, label %14
    i32 2, label %15
    i32 3, label %16
    i32 4, label %17
    i32 7, label %18
    i32 8, label %19
    i32 9, label %20
    i32 10, label %21
    i32 11, label %22
    i32 12, label %23
    i32 13, label %24
  ], !dbg !15080

13:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15081
  br label %27, !dbg !15081

14:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15083
  br label %27, !dbg !15083

15:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15084
  br label %27, !dbg !15084

16:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15085
  br label %27, !dbg !15085

17:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15086
  br label %27, !dbg !15086

18:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15087
  br label %27, !dbg !15087

19:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15088
  br label %27, !dbg !15088

20:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15089
  br label %27, !dbg !15089

21:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15090
  br label %27, !dbg !15090

22:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15091
  br label %27, !dbg !15091

23:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15092
  br label %27, !dbg !15092

24:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15093
  br label %27, !dbg !15093

25:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15094
  br label %27, !dbg !15094

26:                                               ; preds = %0
  store i1 false, i1* %1, align 1, !dbg !15095
  br label %27, !dbg !15095

27:                                               ; preds = %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13
  %28 = load i1, i1* %1, align 1, !dbg !15096
  ret i1 %28, !dbg !15096
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf51_errata_76() #1 !dbg !15097 {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15098, metadata !DIExpression()), !dbg !15099
  %4 = load i32, i32* inttoptr (i32 -268431392 to i32*), align 4, !dbg !15100
  %5 = and i32 %4, 255, !dbg !15101
  store i32 %5, i32* %2, align 4, !dbg !15099
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15102, metadata !DIExpression()), !dbg !15103
  %6 = load i32, i32* inttoptr (i32 -268431384 to i32*), align 4, !dbg !15104
  %7 = and i32 %6, 240, !dbg !15105
  %8 = lshr i32 %7, 4, !dbg !15106
  store i32 %8, i32* %3, align 4, !dbg !15103
  %9 = load i32, i32* %2, align 4, !dbg !15107
  %10 = icmp eq i32 %9, 1, !dbg !15109
  br i1 %10, label %11, label %26, !dbg !15110

11:                                               ; preds = %0
  %12 = load i32, i32* %3, align 4, !dbg !15111
  switch i32 %12, label %25 [
    i32 0, label %13
    i32 1, label %14
    i32 2, label %15
    i32 3, label %16
    i32 4, label %17
    i32 7, label %18
    i32 8, label %19
    i32 9, label %20
    i32 10, label %21
    i32 11, label %22
    i32 12, label %23
    i32 13, label %24
  ], !dbg !15113

13:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15114
  br label %27, !dbg !15114

14:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15116
  br label %27, !dbg !15116

15:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15117
  br label %27, !dbg !15117

16:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15118
  br label %27, !dbg !15118

17:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15119
  br label %27, !dbg !15119

18:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15120
  br label %27, !dbg !15120

19:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15121
  br label %27, !dbg !15121

20:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15122
  br label %27, !dbg !15122

21:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15123
  br label %27, !dbg !15123

22:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15124
  br label %27, !dbg !15124

23:                                               ; preds = %11
  store i1 false, i1* %1, align 1, !dbg !15125
  br label %27, !dbg !15125

24:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15126
  br label %27, !dbg !15126

25:                                               ; preds = %11
  store i1 true, i1* %1, align 1, !dbg !15127
  br label %27, !dbg !15127

26:                                               ; preds = %0
  store i1 false, i1* %1, align 1, !dbg !15128
  br label %27, !dbg !15128

27:                                               ; preds = %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13
  %28 = load i1, i1* %1, align 1, !dbg !15129
  ret i1 %28, !dbg !15129
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_isr(i8* noundef %0) #1 !dbg !15130 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15132, metadata !DIExpression()), !dbg !15133
  %3 = load i8*, i8** %2, align 4, !dbg !15134
  %4 = bitcast i8* %3 to void ()*, !dbg !15135
  call void %4() #10, !dbg !15136
  ret void, !dbg !15137
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_busy_wait(i32 noundef %0) #1 !dbg !15138 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15139, metadata !DIExpression()), !dbg !15140
  %3 = load i32, i32* %2, align 4, !dbg !15141
  call void @k_busy_wait.100(i32 noundef %3) #10, !dbg !15144
  ret void, !dbg !15145
}

; Function Attrs: noinline nounwind optnone
define internal void @k_busy_wait.100(i32 noundef %0) #1 !dbg !15146 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15147, metadata !DIExpression()), !dbg !15148
  br label %3, !dbg !15149

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15150, !srcloc !15152
  br label %4, !dbg !15150

4:                                                ; preds = %3
  %5 = load i32, i32* %2, align 4, !dbg !15153
  call void @z_impl_k_busy_wait(i32 noundef %5) #10, !dbg !15154
  ret void, !dbg !15155
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @nrfx_error_string_get(i32 noundef %0) #1 !dbg !15156 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15159, metadata !DIExpression()), !dbg !15160
  %4 = load i32, i32* %3, align 4, !dbg !15161
  switch i32 %4, label %21 [
    i32 195887104, label %5
    i32 195887105, label %6
    i32 195887106, label %7
    i32 195887107, label %8
    i32 195887108, label %9
    i32 195887109, label %10
    i32 195887110, label %11
    i32 195887111, label %12
    i32 195887112, label %13
    i32 195887113, label %14
    i32 195887114, label %15
    i32 195887115, label %16
    i32 195887116, label %17
    i32 195952640, label %18
    i32 195952641, label %19
    i32 195952642, label %20
  ], !dbg !15162

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i32 0, i32 0), i8** %2, align 4, !dbg !15163
  br label %22, !dbg !15163

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.102, i32 0, i32 0), i8** %2, align 4, !dbg !15165
  br label %22, !dbg !15165

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.103, i32 0, i32 0), i8** %2, align 4, !dbg !15166
  br label %22, !dbg !15166

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8** %2, align 4, !dbg !15167
  br label %22, !dbg !15167

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i32 0, i32 0), i8** %2, align 4, !dbg !15168
  br label %22, !dbg !15168

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i8** %2, align 4, !dbg !15169
  br label %22, !dbg !15169

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i32 0, i32 0), i8** %2, align 4, !dbg !15170
  br label %22, !dbg !15170

12:                                               ; preds = %1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0), i8** %2, align 4, !dbg !15171
  br label %22, !dbg !15171

13:                                               ; preds = %1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i8** %2, align 4, !dbg !15172
  br label %22, !dbg !15172

14:                                               ; preds = %1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.104, i32 0, i32 0), i8** %2, align 4, !dbg !15173
  br label %22, !dbg !15173

15:                                               ; preds = %1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i8** %2, align 4, !dbg !15174
  br label %22, !dbg !15174

16:                                               ; preds = %1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i8** %2, align 4, !dbg !15175
  br label %22, !dbg !15175

17:                                               ; preds = %1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i8** %2, align 4, !dbg !15176
  br label %22, !dbg !15176

18:                                               ; preds = %1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i32 0, i32 0), i8** %2, align 4, !dbg !15177
  br label %22, !dbg !15177

19:                                               ; preds = %1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8** %2, align 4, !dbg !15178
  br label %22, !dbg !15178

20:                                               ; preds = %1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i32 0, i32 0), i8** %2, align 4, !dbg !15179
  br label %22, !dbg !15179

21:                                               ; preds = %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8** %2, align 4, !dbg !15180
  br label %22, !dbg !15180

22:                                               ; preds = %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %23 = load i8*, i8** %2, align 4, !dbg !15181
  ret i8* %23, !dbg !15181
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @nrfx_flag32_is_allocated(i32 noundef %0, i8 noundef zeroext %1) #1 !dbg !15182 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15186, metadata !DIExpression()), !dbg !15187
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !15188, metadata !DIExpression()), !dbg !15189
  %5 = load i32, i32* %3, align 4, !dbg !15190
  %6 = load i8, i8* %4, align 1, !dbg !15191
  %7 = zext i8 %6 to i32, !dbg !15191
  %8 = shl i32 1, %7, !dbg !15191
  %9 = and i32 %5, %8, !dbg !15192
  %10 = icmp ne i32 %9, 0, !dbg !15193
  %11 = zext i1 %10 to i64, !dbg !15193
  %12 = select i1 %10, i32 0, i32 1, !dbg !15193
  %13 = icmp ne i32 %12, 0, !dbg !15193
  ret i1 %13, !dbg !15194
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_flag32_alloc(i32* noundef %0, i8* noundef %1) #1 !dbg !15195 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !15198, metadata !DIExpression()), !dbg !15199
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15200, metadata !DIExpression()), !dbg !15201
  call void @llvm.dbg.declare(metadata i8* %6, metadata !15202, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.declare(metadata i32* %7, metadata !15204, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15206, metadata !DIExpression()), !dbg !15207
  br label %9, !dbg !15208

9:                                                ; preds = %27, %2
  %10 = load i32*, i32** %4, align 4, !dbg !15209
  %11 = load i32, i32* %10, align 4, !dbg !15211
  store i32 %11, i32* %8, align 4, !dbg !15212
  %12 = load i32, i32* %8, align 4, !dbg !15213
  %13 = call i32 @llvm.ctlz.i32(i32 %12, i1 false), !dbg !15213
  %14 = sub nsw i32 31, %13, !dbg !15214
  %15 = trunc i32 %14 to i8, !dbg !15215
  store i8 %15, i8* %6, align 1, !dbg !15216
  %16 = load i8, i8* %6, align 1, !dbg !15217
  %17 = sext i8 %16 to i32, !dbg !15217
  %18 = icmp slt i32 %17, 0, !dbg !15219
  br i1 %18, label %19, label %20, !dbg !15220

19:                                               ; preds = %9
  store i32 195887106, i32* %3, align 4, !dbg !15221
  br label %36, !dbg !15221

20:                                               ; preds = %9
  %21 = load i32, i32* %8, align 4, !dbg !15223
  %22 = load i8, i8* %6, align 1, !dbg !15224
  %23 = sext i8 %22 to i32, !dbg !15224
  %24 = shl i32 1, %23, !dbg !15224
  %25 = xor i32 %24, -1, !dbg !15225
  %26 = and i32 %21, %25, !dbg !15226
  store i32 %26, i32* %7, align 4, !dbg !15227
  br label %27, !dbg !15228

27:                                               ; preds = %20
  %28 = load i32*, i32** %4, align 4, !dbg !15229
  %29 = load i32, i32* %8, align 4, !dbg !15229
  %30 = load i32, i32* %7, align 4, !dbg !15229
  %31 = call zeroext i1 @atomic_cas.105(i32* noundef %28, i32 noundef %29, i32 noundef %30) #10, !dbg !15229
  %32 = xor i1 %31, true, !dbg !15230
  br i1 %32, label %9, label %33, !dbg !15228, !llvm.loop !15231

33:                                               ; preds = %27
  %34 = load i8, i8* %6, align 1, !dbg !15233
  %35 = load i8*, i8** %5, align 4, !dbg !15234
  store i8 %34, i8* %35, align 1, !dbg !15235
  store i32 195887104, i32* %3, align 4, !dbg !15236
  br label %36, !dbg !15236

36:                                               ; preds = %33, %19
  %37 = load i32, i32* %3, align 4, !dbg !15237
  ret i32 %37, !dbg !15237
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @atomic_cas.105(i32* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !15238 {
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !15239, metadata !DIExpression()), !dbg !15240
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15241, metadata !DIExpression()), !dbg !15242
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15243, metadata !DIExpression()), !dbg !15244
  br label %7, !dbg !15245

7:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15246, !srcloc !15248
  br label %8, !dbg !15246

8:                                                ; preds = %7
  %9 = load i32*, i32** %4, align 4, !dbg !15249
  %10 = load i32, i32* %5, align 4, !dbg !15250
  %11 = load i32, i32* %6, align 4, !dbg !15251
  %12 = call zeroext i1 @z_impl_atomic_cas(i32* noundef %9, i32 noundef %10, i32 noundef %11) #10, !dbg !15252
  ret i1 %12, !dbg !15253
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_flag32_free(i32* noundef %0, i8 noundef zeroext %1) #1 !dbg !15254 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !15257, metadata !DIExpression()), !dbg !15258
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !15259, metadata !DIExpression()), !dbg !15260
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15261, metadata !DIExpression()), !dbg !15262
  call void @llvm.dbg.declare(metadata i32* %7, metadata !15263, metadata !DIExpression()), !dbg !15264
  %8 = load i8, i8* %5, align 1, !dbg !15265
  %9 = zext i8 %8 to i32, !dbg !15265
  %10 = shl i32 1, %9, !dbg !15265
  %11 = load i32*, i32** %4, align 4, !dbg !15267
  %12 = load i32, i32* %11, align 4, !dbg !15268
  %13 = and i32 %10, %12, !dbg !15269
  %14 = icmp ne i32 %13, 0, !dbg !15269
  br i1 %14, label %15, label %16, !dbg !15270

15:                                               ; preds = %2
  store i32 195887108, i32* %3, align 4, !dbg !15271
  br label %32, !dbg !15271

16:                                               ; preds = %2
  br label %17, !dbg !15273

17:                                               ; preds = %25, %16
  %18 = load i32*, i32** %4, align 4, !dbg !15274
  %19 = load i32, i32* %18, align 4, !dbg !15276
  store i32 %19, i32* %7, align 4, !dbg !15277
  %20 = load i32, i32* %7, align 4, !dbg !15278
  %21 = load i8, i8* %5, align 1, !dbg !15279
  %22 = zext i8 %21 to i32, !dbg !15279
  %23 = shl i32 1, %22, !dbg !15279
  %24 = or i32 %20, %23, !dbg !15280
  store i32 %24, i32* %6, align 4, !dbg !15281
  br label %25, !dbg !15282

25:                                               ; preds = %17
  %26 = load i32*, i32** %4, align 4, !dbg !15283
  %27 = load i32, i32* %7, align 4, !dbg !15283
  %28 = load i32, i32* %6, align 4, !dbg !15283
  %29 = call zeroext i1 @atomic_cas.105(i32* noundef %26, i32 noundef %27, i32 noundef %28) #10, !dbg !15283
  %30 = xor i1 %29, true, !dbg !15284
  br i1 %30, label %17, label %31, !dbg !15282, !llvm.loop !15285

31:                                               ; preds = %25
  store i32 195887104, i32* %3, align 4, !dbg !15287
  br label %32, !dbg !15287

32:                                               ; preds = %31, %15
  %33 = load i32, i32* %3, align 4, !dbg !15288
  ret i32 %33, !dbg !15288
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_clock_init(void (i32)* noundef %0) #1 !dbg !15289 {
  %2 = alloca void (i32)*, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store void (i32)* %0, void (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata void (i32)** %2, metadata !15292, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15294, metadata !DIExpression()), !dbg !15295
  store i32 195887104, i32* %3, align 4, !dbg !15295
  %8 = load i8, i8* getelementptr inbounds (%struct.nrfx_clock_cb_t, %struct.nrfx_clock_cb_t* @m_clock_cb, i32 0, i32 1), align 4, !dbg !15296
  %9 = trunc i8 %8 to i1, !dbg !15296
  br i1 %9, label %10, label %11, !dbg !15298

10:                                               ; preds = %1
  store i32 195887116, i32* %3, align 4, !dbg !15299
  br label %13, !dbg !15301

11:                                               ; preds = %1
  %12 = load void (i32)*, void (i32)** %2, align 4, !dbg !15302
  store void (i32)* %12, void (i32)** getelementptr inbounds (%struct.nrfx_clock_cb_t, %struct.nrfx_clock_cb_t* @m_clock_cb, i32 0, i32 0), align 4, !dbg !15304
  store i8 1, i8* getelementptr inbounds (%struct.nrfx_clock_cb_t, %struct.nrfx_clock_cb_t* @m_clock_cb, i32 0, i32 1), align 4, !dbg !15305
  br label %13

13:                                               ; preds = %11, %10
  br label %14, !dbg !15306

14:                                               ; preds = %13
  br label %15, !dbg !15307

15:                                               ; preds = %14
  %16 = load i32, i32* %3, align 4, !dbg !15311
  ret i32 %16, !dbg !15312
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_clock_enable() #1 !dbg !15313 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  call void @nrfx_power_clock_irq_init() #10, !dbg !15314
  %5 = call i32 @clock_initial_lfclksrc_get() #10, !dbg !15315
  call void @nrf_clock_lf_src_set.110(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef %5) #10, !dbg !15316
  br label %6, !dbg !15317

6:                                                ; preds = %0
  br label %7, !dbg !15318

7:                                                ; preds = %6
  ret void, !dbg !15322
}

; Function Attrs: noinline nounwind optnone
define internal void @nrfx_power_clock_irq_init() #1 !dbg !15323 {
  %1 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %1, metadata !15325, metadata !DIExpression()), !dbg !15326
  store i8 3, i8* %1, align 1, !dbg !15327
  %2 = call i32 @nrfx_get_irq_number(i8* noundef inttoptr (i32 1073741824 to i8*)) #10, !dbg !15328
  %3 = call i32 @arch_irq_is_enabled(i32 noundef %2) #10, !dbg !15328
  %4 = icmp ne i32 %3, 0, !dbg !15328
  br i1 %4, label %7, label %5, !dbg !15330

5:                                                ; preds = %0
  %6 = call i32 @nrfx_get_irq_number(i8* noundef inttoptr (i32 1073741824 to i8*)) #10, !dbg !15331
  call void @arch_irq_enable(i32 noundef %6) #10, !dbg !15331
  br label %7, !dbg !15333

7:                                                ; preds = %5, %0
  ret void, !dbg !15334
}

; Function Attrs: noinline nounwind optnone
define internal i32 @clock_initial_lfclksrc_get() #1 !dbg !15335 {
  ret i32 0, !dbg !15338
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_lf_src_set.110(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !15339 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !15342, metadata !DIExpression()), !dbg !15343
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15344, metadata !DIExpression()), !dbg !15345
  %5 = load i32, i32* %4, align 4, !dbg !15346
  %6 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !15347
  %7 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %6, i32 0, i32 24, !dbg !15348
  store volatile i32 %5, i32* %7, align 4, !dbg !15349
  ret void, !dbg !15350
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrfx_get_irq_number(i8* noundef %0) #1 !dbg !15351 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15354, metadata !DIExpression()), !dbg !15355
  %3 = load i8*, i8** %2, align 4, !dbg !15356
  %4 = ptrtoint i8* %3 to i32, !dbg !15356
  %5 = lshr i32 %4, 12, !dbg !15356
  %6 = trunc i32 %5 to i8, !dbg !15356
  %7 = zext i8 %6 to i32, !dbg !15357
  ret i32 %7, !dbg !15358
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_clock_disable() #1 !dbg !15359 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = call i32 @nrfx_get_irq_number(i8* noundef inttoptr (i32 1073741824 to i8*)) #10, !dbg !15360
  call void @arch_irq_disable(i32 noundef %5) #10, !dbg !15360
  call void @nrf_clock_int_disable.111(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 3) #10, !dbg !15362
  br label %6, !dbg !15363

6:                                                ; preds = %0
  br label %7, !dbg !15364

7:                                                ; preds = %6
  ret void, !dbg !15368
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_int_disable.111(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !15369 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !15372, metadata !DIExpression()), !dbg !15373
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15374, metadata !DIExpression()), !dbg !15375
  %5 = load i32, i32* %4, align 4, !dbg !15376
  %6 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !15377
  %7 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %6, i32 0, i32 15, !dbg !15378
  store volatile i32 %5, i32* %7, align 4, !dbg !15379
  ret void, !dbg !15380
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_clock_uninit() #1 !dbg !15381 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  call void @clock_stop(i32 noundef 0) #10, !dbg !15382
  call void @clock_stop(i32 noundef 1) #10, !dbg !15383
  store i8 0, i8* getelementptr inbounds (%struct.nrfx_clock_cb_t, %struct.nrfx_clock_cb_t* @m_clock_cb, i32 0, i32 1), align 4, !dbg !15384
  br label %5, !dbg !15385

5:                                                ; preds = %0
  br label %6, !dbg !15386

6:                                                ; preds = %5
  ret void, !dbg !15390
}

; Function Attrs: noinline nounwind optnone
define internal void @clock_stop(i32 noundef %0) #1 !dbg !15391 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15394, metadata !DIExpression()), !dbg !15395
  %11 = load i32, i32* %2, align 4, !dbg !15396
  switch i32 %11, label %14 [
    i32 0, label %12
    i32 1, label %13
  ], !dbg !15397

12:                                               ; preds = %1
  call void @nrf_clock_int_disable.111(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 2) #10, !dbg !15398
  call void @nrf_clock_event_clear.112(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 260) #10, !dbg !15400
  call void @nrf_clock_task_trigger.113(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 12) #10, !dbg !15401
  br label %15, !dbg !15402

13:                                               ; preds = %1
  call void @nrf_clock_int_disable.111(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 1) #10, !dbg !15403
  call void @nrf_clock_event_clear.112(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 256) #10, !dbg !15404
  call void @nrf_clock_task_trigger.113(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 4) #10, !dbg !15405
  br label %15, !dbg !15406

14:                                               ; preds = %1
  br label %47, !dbg !15407

15:                                               ; preds = %13, %12
  call void @llvm.dbg.declare(metadata i8* %3, metadata !15408, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15410, metadata !DIExpression()), !dbg !15411
  store i32 1, i32* %4, align 4, !dbg !15411
  call void @llvm.dbg.declare(metadata i32** %5, metadata !15412, metadata !DIExpression()), !dbg !15413
  %16 = load i32, i32* %2, align 4, !dbg !15414
  %17 = icmp eq i32 %16, 1, !dbg !15415
  br i1 %17, label %18, label %19, !dbg !15416

18:                                               ; preds = %15
  br label %20, !dbg !15416

19:                                               ; preds = %15
  br label %20, !dbg !15416

20:                                               ; preds = %19, %18
  %21 = phi i32* [ %4, %18 ], [ null, %19 ], !dbg !15416
  store i32* %21, i32** %5, align 4, !dbg !15413
  br label %22, !dbg !15417

22:                                               ; preds = %20
  store i8 0, i8* %3, align 1, !dbg !15418
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15420, metadata !DIExpression()), !dbg !15418
  store i32 10000, i32* %6, align 4, !dbg !15418
  br label %23, !dbg !15418

23:                                               ; preds = %36, %22
  %24 = load i32, i32* %2, align 4, !dbg !15421
  %25 = load i32*, i32** %5, align 4, !dbg !15421
  %26 = bitcast i32* %25 to i8*, !dbg !15421
  %27 = call zeroext i1 @nrfx_clock_is_running.114(i32 noundef %24, i8* noundef %26) #10, !dbg !15421
  br i1 %27, label %28, label %34, !dbg !15421

28:                                               ; preds = %23
  %29 = load i32*, i32** %5, align 4, !dbg !15421
  %30 = icmp ne i32* %29, null, !dbg !15421
  br i1 %30, label %31, label %35, !dbg !15421

31:                                               ; preds = %28
  %32 = load i32, i32* %4, align 4, !dbg !15421
  %33 = icmp ne i32 %32, 1, !dbg !15421
  br i1 %33, label %34, label %35, !dbg !15424

34:                                               ; preds = %31, %23
  store i8 1, i8* %3, align 1, !dbg !15425
  br label %40, !dbg !15425

35:                                               ; preds = %31, %28
  call void @nrfx_busy_wait(i32 noundef 1) #10, !dbg !15424
  br label %36, !dbg !15424

36:                                               ; preds = %35
  %37 = load i32, i32* %6, align 4, !dbg !15418
  %38 = add i32 %37, -1, !dbg !15418
  store i32 %38, i32* %6, align 4, !dbg !15418
  %39 = icmp ne i32 %38, 0, !dbg !15424
  br i1 %39, label %23, label %40, !dbg !15424, !llvm.loop !15427

40:                                               ; preds = %36, %34
  br label %41, !dbg !15418

41:                                               ; preds = %40
  %42 = load i8, i8* %3, align 1, !dbg !15428
  %43 = trunc i8 %42 to i1, !dbg !15428
  br i1 %43, label %47, label %44, !dbg !15430

44:                                               ; preds = %41
  br label %45, !dbg !15431

45:                                               ; preds = %44
  br label %46, !dbg !15433

46:                                               ; preds = %45
  br label %47, !dbg !15437

47:                                               ; preds = %14, %46, %41
  ret void, !dbg !15438
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_event_clear.112(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !15439 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !15442, metadata !DIExpression()), !dbg !15443
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15444, metadata !DIExpression()), !dbg !15445
  %5 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !15446
  %6 = bitcast %struct.NRF_CLOCK_Type* %5 to i8*, !dbg !15447
  %7 = load i32, i32* %4, align 4, !dbg !15448
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !15449
  %9 = bitcast i8* %8 to i32*, !dbg !15450
  store volatile i32 0, i32* %9, align 4, !dbg !15451
  %10 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !15452
  %11 = bitcast %struct.NRF_CLOCK_Type* %10 to i8*, !dbg !15453
  %12 = load i32, i32* %4, align 4, !dbg !15454
  %13 = getelementptr inbounds i8, i8* %11, i32 %12, !dbg !15455
  call void @nrf_event_readback.116(i8* noundef %13) #10, !dbg !15456
  ret void, !dbg !15457
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_task_trigger.113(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !15458 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !15461, metadata !DIExpression()), !dbg !15462
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15463, metadata !DIExpression()), !dbg !15464
  %5 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !15465
  %6 = bitcast %struct.NRF_CLOCK_Type* %5 to i8*, !dbg !15466
  %7 = load i32, i32* %4, align 4, !dbg !15467
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !15468
  %9 = bitcast i8* %8 to i32*, !dbg !15469
  store volatile i32 1, i32* %9, align 4, !dbg !15470
  ret void, !dbg !15471
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrfx_clock_is_running.114(i32 noundef %0, i8* noundef %1) #1 !dbg !15472 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15473, metadata !DIExpression()), !dbg !15474
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !15475, metadata !DIExpression()), !dbg !15476
  %5 = load i32, i32* %3, align 4, !dbg !15477
  %6 = load i8*, i8** %4, align 4, !dbg !15478
  %7 = call zeroext i1 @nrf_clock_is_running.115(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef %5, i8* noundef %6) #10, !dbg !15479
  ret i1 %7, !dbg !15480
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_clock_is_running.115(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !15481 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.NRF_CLOCK_Type*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %5, metadata !15486, metadata !DIExpression()), !dbg !15487
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15488, metadata !DIExpression()), !dbg !15489
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !15490, metadata !DIExpression()), !dbg !15491
  %8 = load i32, i32* %6, align 4, !dbg !15492
  switch i32 %8, label %49 [
    i32 0, label %9
    i32 1, label %29
  ], !dbg !15493

9:                                                ; preds = %3
  %10 = load i8*, i8** %7, align 4, !dbg !15494
  %11 = icmp ne i8* %10, null, !dbg !15497
  br i1 %11, label %12, label %20, !dbg !15498

12:                                               ; preds = %9
  %13 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !15499
  %14 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %13, i32 0, i32 21, !dbg !15501
  %15 = load volatile i32, i32* %14, align 4, !dbg !15501
  %16 = and i32 %15, 3, !dbg !15502
  %17 = lshr i32 %16, 0, !dbg !15503
  %18 = load i8*, i8** %7, align 4, !dbg !15504
  %19 = bitcast i8* %18 to i32*, !dbg !15505
  store i32 %17, i32* %19, align 4, !dbg !15506
  br label %20, !dbg !15507

20:                                               ; preds = %12, %9
  %21 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !15508
  %22 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %21, i32 0, i32 21, !dbg !15510
  %23 = load volatile i32, i32* %22, align 4, !dbg !15510
  %24 = and i32 %23, 65536, !dbg !15511
  %25 = lshr i32 %24, 16, !dbg !15512
  %26 = icmp ne i32 %25, 0, !dbg !15512
  br i1 %26, label %27, label %28, !dbg !15513

27:                                               ; preds = %20
  store i1 true, i1* %4, align 1, !dbg !15514
  br label %51, !dbg !15514

28:                                               ; preds = %20
  br label %50, !dbg !15516

29:                                               ; preds = %3
  %30 = load i8*, i8** %7, align 4, !dbg !15517
  %31 = icmp ne i8* %30, null, !dbg !15519
  br i1 %31, label %32, label %40, !dbg !15520

32:                                               ; preds = %29
  %33 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !15521
  %34 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %33, i32 0, i32 18, !dbg !15523
  %35 = load volatile i32, i32* %34, align 4, !dbg !15523
  %36 = and i32 %35, 1, !dbg !15524
  %37 = lshr i32 %36, 0, !dbg !15525
  %38 = load i8*, i8** %7, align 4, !dbg !15526
  %39 = bitcast i8* %38 to i32*, !dbg !15527
  store i32 %37, i32* %39, align 4, !dbg !15528
  br label %40, !dbg !15529

40:                                               ; preds = %32, %29
  %41 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %5, align 4, !dbg !15530
  %42 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %41, i32 0, i32 18, !dbg !15532
  %43 = load volatile i32, i32* %42, align 4, !dbg !15532
  %44 = and i32 %43, 65536, !dbg !15533
  %45 = lshr i32 %44, 16, !dbg !15534
  %46 = icmp ne i32 %45, 0, !dbg !15534
  br i1 %46, label %47, label %48, !dbg !15535

47:                                               ; preds = %40
  store i1 true, i1* %4, align 1, !dbg !15536
  br label %51, !dbg !15536

48:                                               ; preds = %40
  br label %50, !dbg !15538

49:                                               ; preds = %3
  store i1 false, i1* %4, align 1, !dbg !15539
  br label %51, !dbg !15539

50:                                               ; preds = %48, %28
  store i1 false, i1* %4, align 1, !dbg !15540
  br label %51, !dbg !15540

51:                                               ; preds = %50, %49, %47, %27
  %52 = load i1, i1* %4, align 1, !dbg !15541
  ret i1 %52, !dbg !15541
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_event_readback.116(i8* noundef %0) #1 !dbg !15542 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15543, metadata !DIExpression()), !dbg !15544
  %3 = load i8*, i8** %2, align 4, !dbg !15545
  ret void, !dbg !15546
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_clock_start(i32 noundef %0) #1 !dbg !15547 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15548, metadata !DIExpression()), !dbg !15549
  %4 = load i32, i32* %2, align 4, !dbg !15550
  switch i32 %4, label %23 [
    i32 0, label %5
    i32 1, label %22
  ], !dbg !15551

5:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15552, metadata !DIExpression()), !dbg !15555
  %6 = bitcast i32* %3 to i8*, !dbg !15556
  %7 = call zeroext i1 @nrf_clock_is_running.115(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 0, i8* noundef %6) #10, !dbg !15558
  br i1 %7, label %8, label %10, !dbg !15559

8:                                                ; preds = %5
  %9 = call zeroext i1 @clock_lfclksrc_tweak(i32* noundef %3) #10, !dbg !15560
  br label %20, !dbg !15562

10:                                               ; preds = %5
  %11 = call zeroext i1 @nrf_clock_start_task_check(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 0) #10, !dbg !15563
  br i1 %11, label %12, label %17, !dbg !15565

12:                                               ; preds = %10
  %13 = call i32 @nrf_clock_lf_srccopy_get.119(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*)) #10, !dbg !15566
  store i32 %13, i32* %3, align 4, !dbg !15568
  %14 = call zeroext i1 @clock_lfclksrc_tweak(i32* noundef %3) #10, !dbg !15569
  br i1 %14, label %15, label %16, !dbg !15571

15:                                               ; preds = %12
  call void @nrf_clock_int_enable.120(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 2) #10, !dbg !15572
  br label %24, !dbg !15574

16:                                               ; preds = %12
  br label %19, !dbg !15575

17:                                               ; preds = %10
  %18 = call i32 @clock_initial_lfclksrc_get() #10, !dbg !15576
  store i32 %18, i32* %3, align 4, !dbg !15578
  br label %19

19:                                               ; preds = %17, %16
  br label %20

20:                                               ; preds = %19, %8
  %21 = load i32, i32* %3, align 4, !dbg !15579
  call void @nrf_clock_lf_src_set.110(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef %21) #10, !dbg !15580
  call void @nrf_clock_event_clear.112(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 260) #10, !dbg !15581
  call void @nrf_clock_int_enable.120(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 2) #10, !dbg !15582
  call void @nrf_clock_task_trigger.113(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 8) #10, !dbg !15583
  br label %24, !dbg !15584

22:                                               ; preds = %1
  call void @nrf_clock_event_clear.112(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 256) #10, !dbg !15585
  call void @nrf_clock_int_enable.120(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 1) #10, !dbg !15586
  call void @nrf_clock_task_trigger.113(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 0) #10, !dbg !15587
  br label %24, !dbg !15588

23:                                               ; preds = %1
  br label %24, !dbg !15589

24:                                               ; preds = %23, %22, %20, %15
  ret void, !dbg !15590
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @clock_lfclksrc_tweak(i32* noundef %0) #1 !dbg !15591 {
  %2 = alloca i32*, align 4
  %3 = alloca i8, align 1
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !15594, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.declare(metadata i8* %3, metadata !15596, metadata !DIExpression()), !dbg !15597
  %4 = load i32*, i32** %2, align 4, !dbg !15598
  %5 = load i32, i32* %4, align 4, !dbg !15599
  %6 = icmp eq i32 %5, 1, !dbg !15600
  %7 = zext i1 %6 to i8, !dbg !15597
  store i8 %7, i8* %3, align 1, !dbg !15597
  %8 = load i8, i8* %3, align 1, !dbg !15601
  %9 = trunc i8 %8 to i1, !dbg !15601
  br i1 %9, label %14, label %10, !dbg !15602

10:                                               ; preds = %1
  %11 = load i32*, i32** %2, align 4, !dbg !15603
  %12 = load i32, i32* %11, align 4, !dbg !15604
  %13 = icmp eq i32 %12, 0, !dbg !15605
  br label %14, !dbg !15602

14:                                               ; preds = %10, %1
  %15 = phi i1 [ true, %1 ], [ %13, %10 ]
  %16 = zext i1 %15 to i8, !dbg !15606
  store i8 %16, i8* %3, align 1, !dbg !15606
  %17 = load i8, i8* %3, align 1, !dbg !15607
  %18 = trunc i8 %17 to i1, !dbg !15607
  br i1 %18, label %22, label %19, !dbg !15609

19:                                               ; preds = %14
  call void @clock_stop(i32 noundef 0) #10, !dbg !15610
  %20 = call i32 @clock_initial_lfclksrc_get() #10, !dbg !15612
  %21 = load i32*, i32** %2, align 4, !dbg !15613
  store i32 %20, i32* %21, align 4, !dbg !15614
  br label %22, !dbg !15615

22:                                               ; preds = %19, %14
  %23 = load i8, i8* %3, align 1, !dbg !15616
  %24 = trunc i8 %23 to i1, !dbg !15616
  ret i1 %24, !dbg !15617
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_clock_start_task_check(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !15618 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.NRF_CLOCK_Type*, align 4
  %5 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %4, metadata !15621, metadata !DIExpression()), !dbg !15622
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15623, metadata !DIExpression()), !dbg !15624
  %6 = load i32, i32* %5, align 4, !dbg !15625
  switch i32 %6, label %21 [
    i32 0, label %7
    i32 1, label %14
  ], !dbg !15626

7:                                                ; preds = %2
  %8 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %4, align 4, !dbg !15627
  %9 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %8, i32 0, i32 20, !dbg !15629
  %10 = load volatile i32, i32* %9, align 4, !dbg !15629
  %11 = and i32 %10, 1, !dbg !15630
  %12 = lshr i32 %11, 0, !dbg !15631
  %13 = icmp ne i32 %12, 0, !dbg !15632
  store i1 %13, i1* %3, align 1, !dbg !15633
  br label %22, !dbg !15633

14:                                               ; preds = %2
  %15 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %4, align 4, !dbg !15634
  %16 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %15, i32 0, i32 17, !dbg !15635
  %17 = load volatile i32, i32* %16, align 4, !dbg !15635
  %18 = and i32 %17, 1, !dbg !15636
  %19 = lshr i32 %18, 0, !dbg !15637
  %20 = icmp ne i32 %19, 0, !dbg !15638
  store i1 %20, i1* %3, align 1, !dbg !15639
  br label %22, !dbg !15639

21:                                               ; preds = %2
  store i1 false, i1* %3, align 1, !dbg !15640
  br label %22, !dbg !15640

22:                                               ; preds = %21, %14, %7
  %23 = load i1, i1* %3, align 1, !dbg !15641
  ret i1 %23, !dbg !15641
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_clock_lf_srccopy_get.119(%struct.NRF_CLOCK_Type* noundef %0) #1 !dbg !15642 {
  %2 = alloca %struct.NRF_CLOCK_Type*, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %2, metadata !15645, metadata !DIExpression()), !dbg !15646
  %3 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %2, align 4, !dbg !15647
  %4 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %3, i32 0, i32 22, !dbg !15648
  %5 = load volatile i32, i32* %4, align 4, !dbg !15648
  %6 = and i32 %5, 3, !dbg !15649
  %7 = lshr i32 %6, 0, !dbg !15650
  ret i32 %7, !dbg !15651
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_clock_int_enable.120(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !15652 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !15653, metadata !DIExpression()), !dbg !15654
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15655, metadata !DIExpression()), !dbg !15656
  %5 = load i32, i32* %4, align 4, !dbg !15657
  %6 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !15658
  %7 = getelementptr inbounds %struct.NRF_CLOCK_Type, %struct.NRF_CLOCK_Type* %6, i32 0, i32 14, !dbg !15659
  store volatile i32 %5, i32* %7, align 4, !dbg !15660
  ret void, !dbg !15661
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_clock_stop(i32 noundef %0) #1 !dbg !15662 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15663, metadata !DIExpression()), !dbg !15664
  %3 = load i32, i32* %2, align 4, !dbg !15665
  call void @clock_stop(i32 noundef %3) #10, !dbg !15666
  ret void, !dbg !15667
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_clock_calibration_start() #1 !dbg !15668 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !15671, metadata !DIExpression()), !dbg !15672
  store i32 195887104, i32* %1, align 4, !dbg !15672
  br label %6, !dbg !15673

6:                                                ; preds = %0
  br label %7, !dbg !15674

7:                                                ; preds = %6
  %8 = load i32, i32* %1, align 4, !dbg !15678
  ret i32 %8, !dbg !15679
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_clock_is_calibrating() #1 !dbg !15680 {
  ret i32 195887104, !dbg !15681
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_clock_calibration_timer_start(i8 noundef zeroext %0) #1 !dbg !15682 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !15685, metadata !DIExpression()), !dbg !15686
  %3 = load i8, i8* %2, align 1, !dbg !15687
  ret void, !dbg !15688
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_clock_calibration_timer_stop() #1 !dbg !15689 {
  ret void, !dbg !15690
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_power_clock_irq_handler() #1 !dbg !15691 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i32, align 4
  %10 = call zeroext i1 @nrf_clock_event_check.125(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 256) #10, !dbg !15692
  br i1 %10, label %11, label %15, !dbg !15694

11:                                               ; preds = %0
  call void @nrf_clock_event_clear.112(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 256) #10, !dbg !15695
  br label %12, !dbg !15697

12:                                               ; preds = %11
  br label %13, !dbg !15698

13:                                               ; preds = %12
  call void @nrf_clock_int_disable.111(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 1) #10, !dbg !15702
  %14 = load void (i32)*, void (i32)** getelementptr inbounds (%struct.nrfx_clock_cb_t, %struct.nrfx_clock_cb_t* @m_clock_cb, i32 0, i32 0), align 4, !dbg !15703
  call void %14(i32 noundef 0) #10, !dbg !15704
  br label %15, !dbg !15705

15:                                               ; preds = %13, %0
  %16 = call zeroext i1 @nrf_clock_event_check.125(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 260) #10, !dbg !15706
  br i1 %16, label %17, label %28, !dbg !15708

17:                                               ; preds = %15
  call void @nrf_clock_event_clear.112(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 260) #10, !dbg !15709
  br label %18, !dbg !15711

18:                                               ; preds = %17
  br label %19, !dbg !15712

19:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata i32* %9, metadata !15716, metadata !DIExpression()), !dbg !15717
  %20 = bitcast i32* %9 to i8*, !dbg !15718
  %21 = call zeroext i1 @nrf_clock_is_running.115(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 0, i8* noundef %20) #10, !dbg !15719
  %22 = load i32, i32* %9, align 4, !dbg !15720
  %23 = icmp eq i32 %22, 0, !dbg !15722
  br i1 %23, label %24, label %25, !dbg !15723

24:                                               ; preds = %19
  call void @nrf_clock_lf_src_set.110(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 1) #10, !dbg !15724
  call void @nrf_clock_task_trigger.113(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 8) #10, !dbg !15726
  br label %27, !dbg !15727

25:                                               ; preds = %19
  call void @nrf_clock_int_disable.111(%struct.NRF_CLOCK_Type* noundef inttoptr (i32 1073741824 to %struct.NRF_CLOCK_Type*), i32 noundef 2) #10, !dbg !15728
  %26 = load void (i32)*, void (i32)** getelementptr inbounds (%struct.nrfx_clock_cb_t, %struct.nrfx_clock_cb_t* @m_clock_cb, i32 0, i32 0), align 4, !dbg !15730
  call void %26(i32 noundef 1) #10, !dbg !15731
  br label %27

27:                                               ; preds = %25, %24
  br label %28, !dbg !15732

28:                                               ; preds = %27, %15
  ret void, !dbg !15733
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_clock_event_check.125(%struct.NRF_CLOCK_Type* noundef %0, i32 noundef %1) #1 !dbg !15734 {
  %3 = alloca %struct.NRF_CLOCK_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_CLOCK_Type* %0, %struct.NRF_CLOCK_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_CLOCK_Type** %3, metadata !15737, metadata !DIExpression()), !dbg !15738
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15739, metadata !DIExpression()), !dbg !15740
  %5 = load %struct.NRF_CLOCK_Type*, %struct.NRF_CLOCK_Type** %3, align 4, !dbg !15741
  %6 = bitcast %struct.NRF_CLOCK_Type* %5 to i8*, !dbg !15742
  %7 = load i32, i32* %4, align 4, !dbg !15743
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !15744
  %9 = bitcast i8* %8 to i32*, !dbg !15745
  %10 = load volatile i32, i32* %9, align 4, !dbg !15745
  %11 = icmp ne i32 %10, 0, !dbg !15746
  ret i1 %11, !dbg !15747
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_pin_uninit(i32 noundef %0) #1 !dbg !15748 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15751, metadata !DIExpression()), !dbg !15752
  %4 = load i32, i32* %3, align 4, !dbg !15753
  %5 = call zeroext i1 @pin_in_use(i32 noundef %4) #10, !dbg !15755
  br i1 %5, label %7, label %6, !dbg !15756

6:                                                ; preds = %1
  store i32 195887108, i32* %2, align 4, !dbg !15757
  br label %11, !dbg !15757

7:                                                ; preds = %1
  %8 = load i32, i32* %3, align 4, !dbg !15759
  call void @nrfx_gpiote_trigger_disable(i32 noundef %8) #10, !dbg !15760
  %9 = load i32, i32* %3, align 4, !dbg !15761
  call void @pin_handler_trigger_uninit(i32 noundef %9) #10, !dbg !15762
  %10 = load i32, i32* %3, align 4, !dbg !15763
  call void @nrf_gpio_cfg_default(i32 noundef %10) #10, !dbg !15764
  store i32 195887104, i32* %2, align 4, !dbg !15765
  br label %11, !dbg !15765

11:                                               ; preds = %7, %6
  %12 = load i32, i32* %2, align 4, !dbg !15766
  ret i32 %12, !dbg !15766
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @pin_in_use(i32 noundef %0) #1 !dbg !15767 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15768, metadata !DIExpression()), !dbg !15769
  %3 = load i32, i32* %2, align 4, !dbg !15770
  %4 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %3, !dbg !15771
  %5 = load i16, i16* %4, align 2, !dbg !15771
  %6 = zext i16 %5 to i32, !dbg !15771
  %7 = and i32 %6, 1, !dbg !15772
  %8 = icmp ne i32 %7, 0, !dbg !15771
  ret i1 %8, !dbg !15773
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_trigger_disable(i32 noundef %0) #1 !dbg !15774 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15777, metadata !DIExpression()), !dbg !15778
  %4 = load i32, i32* %2, align 4, !dbg !15779
  %5 = call zeroext i1 @pin_in_use_by_te(i32 noundef %4) #10, !dbg !15781
  br i1 %5, label %6, label %17, !dbg !15782

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4, !dbg !15783
  %8 = call zeroext i1 @pin_is_input(i32 noundef %7) #10, !dbg !15784
  br i1 %8, label %9, label %17, !dbg !15785

9:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata i8* %3, metadata !15786, metadata !DIExpression()), !dbg !15788
  %10 = load i32, i32* %2, align 4, !dbg !15789
  %11 = call zeroext i8 @pin_te_get(i32 noundef %10) #10, !dbg !15790
  store i8 %11, i8* %3, align 1, !dbg !15788
  %12 = load i8, i8* %3, align 1, !dbg !15791
  %13 = zext i8 %12 to i32, !dbg !15791
  %14 = shl i32 1, %13, !dbg !15791
  call void @nrf_gpiote_int_disable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %14) #10, !dbg !15792
  %15 = load i8, i8* %3, align 1, !dbg !15793
  %16 = zext i8 %15 to i32, !dbg !15793
  call void @nrf_gpiote_event_disable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %16) #10, !dbg !15794
  br label %19, !dbg !15795

17:                                               ; preds = %6, %1
  %18 = load i32, i32* %2, align 4, !dbg !15796
  call void @nrf_gpio_cfg_sense_set(i32 noundef %18, i32 noundef 0) #10, !dbg !15798
  br label %19

19:                                               ; preds = %17, %9
  ret void, !dbg !15799
}

; Function Attrs: noinline nounwind optnone
define internal void @pin_handler_trigger_uninit(i32 noundef %0) #1 !dbg !15800 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15801, metadata !DIExpression()), !dbg !15802
  %3 = load i32, i32* %2, align 4, !dbg !15803
  %4 = call zeroext i1 @pin_in_use_by_te(i32 noundef %3) #10, !dbg !15805
  br i1 %4, label %5, label %9, !dbg !15806

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !15807
  %7 = call zeroext i8 @pin_te_get(i32 noundef %6) #10, !dbg !15809
  %8 = zext i8 %7 to i32, !dbg !15809
  call void @nrf_gpiote_te_default(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %8) #10, !dbg !15810
  br label %11, !dbg !15811

9:                                                ; preds = %1
  %10 = load i32, i32* %2, align 4, !dbg !15812
  call void @nrf_bitmask_bit_clear(i32 noundef %10, i8* noundef bitcast (i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 5, i32 0) to i8*)) #10, !dbg !15814
  br label %11

11:                                               ; preds = %9, %5
  %12 = load i32, i32* %2, align 4, !dbg !15815
  call void @release_handler(i32 noundef %12) #10, !dbg !15816
  %13 = load i32, i32* %2, align 4, !dbg !15817
  %14 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %13, !dbg !15818
  store i16 0, i16* %14, align 2, !dbg !15819
  ret void, !dbg !15820
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_cfg_default(i32 noundef %0) #1 !dbg !15821 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15822, metadata !DIExpression()), !dbg !15823
  %3 = load i32, i32* %2, align 4, !dbg !15824
  call void @nrf_gpio_cfg.130(i32 noundef %3, i32 noundef 0, i32 noundef 1, i32 noundef 0, i32 noundef 0, i32 noundef 0) #10, !dbg !15825
  ret void, !dbg !15826
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_cfg.130(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #1 !dbg !15827 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.NRF_GPIO_Type*, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !15828, metadata !DIExpression()), !dbg !15829
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15830, metadata !DIExpression()), !dbg !15831
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !15832, metadata !DIExpression()), !dbg !15833
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !15834, metadata !DIExpression()), !dbg !15835
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !15836, metadata !DIExpression()), !dbg !15837
  store i32 %5, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !15838, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %13, metadata !15840, metadata !DIExpression()), !dbg !15841
  %15 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %7) #10, !dbg !15842
  store %struct.NRF_GPIO_Type* %15, %struct.NRF_GPIO_Type** %13, align 4, !dbg !15841
  call void @llvm.dbg.declare(metadata i32* %14, metadata !15843, metadata !DIExpression()), !dbg !15844
  store i32 0, i32* %14, align 4, !dbg !15844
  %16 = load i32, i32* %8, align 4, !dbg !15845
  %17 = shl i32 %16, 0, !dbg !15846
  %18 = load i32, i32* %9, align 4, !dbg !15847
  %19 = shl i32 %18, 1, !dbg !15848
  %20 = or i32 %17, %19, !dbg !15849
  %21 = load i32, i32* %10, align 4, !dbg !15850
  %22 = shl i32 %21, 2, !dbg !15851
  %23 = or i32 %20, %22, !dbg !15852
  %24 = load i32, i32* %11, align 4, !dbg !15853
  %25 = shl i32 %24, 8, !dbg !15854
  %26 = or i32 %23, %25, !dbg !15855
  %27 = load i32, i32* %12, align 4, !dbg !15856
  %28 = shl i32 %27, 16, !dbg !15857
  %29 = or i32 %26, %28, !dbg !15858
  %30 = load i32, i32* %14, align 4, !dbg !15859
  %31 = or i32 %30, %29, !dbg !15859
  store i32 %31, i32* %14, align 4, !dbg !15859
  %32 = load i32, i32* %14, align 4, !dbg !15860
  %33 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %13, align 4, !dbg !15861
  %34 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %33, i32 0, i32 9, !dbg !15862
  %35 = load i32, i32* %7, align 4, !dbg !15863
  %36 = getelementptr inbounds [32 x i32], [32 x i32]* %34, i32 0, i32 %35, !dbg !15861
  store volatile i32 %32, i32* %36, align 4, !dbg !15864
  ret void, !dbg !15865
}

; Function Attrs: noinline nounwind optnone
define internal %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %0) #1 !dbg !15866 {
  %2 = alloca i32*, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !15869, metadata !DIExpression()), !dbg !15870
  %3 = load i32*, i32** %2, align 4, !dbg !15871
  %4 = call i32 @nrf_gpio_pin_port_number_extract.132(i32* noundef %3) #10, !dbg !15872
  switch i32 %4, label %5 [
    i32 0, label %6
  ], !dbg !15873

5:                                                ; preds = %1
  br label %6, !dbg !15874

6:                                                ; preds = %1, %5
  ret %struct.NRF_GPIO_Type* inttoptr (i32 1342177280 to %struct.NRF_GPIO_Type*), !dbg !15877
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_pin_port_number_extract.132(i32* noundef %0) #1 !dbg !15878 {
  %2 = alloca i32*, align 4
  %3 = alloca i32, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !15879, metadata !DIExpression()), !dbg !15880
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15881, metadata !DIExpression()), !dbg !15882
  %4 = load i32*, i32** %2, align 4, !dbg !15883
  %5 = load i32, i32* %4, align 4, !dbg !15884
  store i32 %5, i32* %3, align 4, !dbg !15882
  %6 = load i32, i32* %3, align 4, !dbg !15885
  %7 = and i32 %6, 31, !dbg !15886
  %8 = load i32*, i32** %2, align 4, !dbg !15887
  store i32 %7, i32* %8, align 4, !dbg !15888
  %9 = load i32, i32* %3, align 4, !dbg !15889
  %10 = lshr i32 %9, 5, !dbg !15890
  ret i32 %10, !dbg !15891
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @pin_in_use_by_te(i32 noundef %0) #1 !dbg !15892 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15893, metadata !DIExpression()), !dbg !15894
  %3 = load i32, i32* %2, align 4, !dbg !15895
  %4 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %3, !dbg !15896
  %5 = load i16, i16* %4, align 2, !dbg !15896
  %6 = zext i16 %5 to i32, !dbg !15896
  %7 = and i32 %6, 32, !dbg !15897
  %8 = icmp ne i32 %7, 0, !dbg !15896
  ret i1 %8, !dbg !15898
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i8 @pin_te_get(i32 noundef %0) #1 !dbg !15899 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15902, metadata !DIExpression()), !dbg !15903
  %3 = load i32, i32* %2, align 4, !dbg !15904
  %4 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %3, !dbg !15904
  %5 = load i16, i16* %4, align 2, !dbg !15904
  %6 = zext i16 %5 to i32, !dbg !15904
  %7 = and i32 %6, 57344, !dbg !15904
  %8 = lshr i32 %7, 13, !dbg !15904
  %9 = trunc i32 %8 to i8, !dbg !15904
  ret i8 %9, !dbg !15905
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_te_default(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !15906 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !15909, metadata !DIExpression()), !dbg !15910
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15911, metadata !DIExpression()), !dbg !15912
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !15913
  %6 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %5, i32 0, i32 9, !dbg !15914
  %7 = load i32, i32* %4, align 4, !dbg !15915
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i32 0, i32 %7, !dbg !15913
  store volatile i32 0, i32* %8, align 4, !dbg !15916
  ret void, !dbg !15917
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_bitmask_bit_clear(i32 noundef %0, i8* noundef %1) #1 !dbg !15918 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15922, metadata !DIExpression()), !dbg !15923
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !15924, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15926, metadata !DIExpression()), !dbg !15927
  %7 = load i8*, i8** %4, align 4, !dbg !15928
  store i8* %7, i8** %5, align 4, !dbg !15927
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15929, metadata !DIExpression()), !dbg !15930
  %8 = load i32, i32* %3, align 4, !dbg !15931
  %9 = udiv i32 %8, 8, !dbg !15931
  store i32 %9, i32* %6, align 4, !dbg !15930
  %10 = load i32, i32* %3, align 4, !dbg !15932
  %11 = and i32 %10, 7, !dbg !15932
  store i32 %11, i32* %3, align 4, !dbg !15933
  %12 = load i32, i32* %3, align 4, !dbg !15934
  %13 = shl i32 1, %12, !dbg !15935
  %14 = xor i32 %13, -1, !dbg !15936
  %15 = load i8*, i8** %5, align 4, !dbg !15937
  %16 = load i32, i32* %6, align 4, !dbg !15938
  %17 = getelementptr inbounds i8, i8* %15, i32 %16, !dbg !15937
  %18 = load i8, i8* %17, align 1, !dbg !15939
  %19 = zext i8 %18 to i32, !dbg !15939
  %20 = and i32 %19, %14, !dbg !15939
  %21 = trunc i32 %20 to i8, !dbg !15939
  store i8 %21, i8* %17, align 1, !dbg !15939
  ret void, !dbg !15940
}

; Function Attrs: noinline nounwind optnone
define internal void @release_handler(i32 noundef %0) #1 !dbg !15941 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15942, metadata !DIExpression()), !dbg !15943
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15944, metadata !DIExpression()), !dbg !15945
  %5 = load i32, i32* %2, align 4, !dbg !15946
  %6 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %5, !dbg !15946
  %7 = load i16, i16* %6, align 2, !dbg !15946
  %8 = zext i16 %7 to i32, !dbg !15946
  %9 = and i32 %8, 256, !dbg !15946
  %10 = icmp ne i32 %9, 0, !dbg !15946
  br i1 %10, label %11, label %18, !dbg !15946

11:                                               ; preds = %1
  %12 = load i32, i32* %2, align 4, !dbg !15946
  %13 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %12, !dbg !15946
  %14 = load i16, i16* %13, align 2, !dbg !15946
  %15 = zext i16 %14 to i32, !dbg !15946
  %16 = and i32 %15, 7680, !dbg !15946
  %17 = lshr i32 %16, 9, !dbg !15946
  br label %19, !dbg !15946

18:                                               ; preds = %1
  br label %19, !dbg !15946

19:                                               ; preds = %18, %11
  %20 = phi i32 [ %17, %11 ], [ -1, %18 ], !dbg !15946
  store i32 %20, i32* %3, align 4, !dbg !15945
  %21 = load i32, i32* %3, align 4, !dbg !15947
  %22 = icmp eq i32 %21, -1, !dbg !15949
  br i1 %22, label %23, label %24, !dbg !15950

23:                                               ; preds = %19
  br label %41, !dbg !15951

24:                                               ; preds = %19
  %25 = load i32, i32* %2, align 4, !dbg !15953
  %26 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %25, !dbg !15954
  %27 = load i16, i16* %26, align 2, !dbg !15955
  %28 = zext i16 %27 to i32, !dbg !15955
  %29 = and i32 %28, -7937, !dbg !15955
  %30 = trunc i32 %29 to i16, !dbg !15955
  store i16 %30, i16* %26, align 2, !dbg !15955
  %31 = load i32, i32* %3, align 4, !dbg !15956
  %32 = call zeroext i1 @handler_in_use(i32 noundef %31) #10, !dbg !15958
  br i1 %32, label %41, label %33, !dbg !15959

33:                                               ; preds = %24
  %34 = load i32, i32* %3, align 4, !dbg !15960
  %35 = getelementptr inbounds [1 x %struct.nrfx_gpiote_handler_config_t], [1 x %struct.nrfx_gpiote_handler_config_t]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 0), i32 0, i32 %34, !dbg !15962
  %36 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %35, i32 0, i32 0, !dbg !15963
  store void (i32, i32, i8*)* null, void (i32, i32, i8*)** %36, align 4, !dbg !15964
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15965, metadata !DIExpression()), !dbg !15966
  %37 = load i32, i32* %3, align 4, !dbg !15967
  %38 = trunc i32 %37 to i8, !dbg !15967
  %39 = call i32 @nrfx_flag32_free(i32* noundef getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 4), i8 noundef zeroext %38) #10, !dbg !15968
  store i32 %39, i32* %4, align 4, !dbg !15966
  %40 = load i32, i32* %4, align 4, !dbg !15969
  br label %41, !dbg !15970

41:                                               ; preds = %23, %33, %24
  ret void, !dbg !15971
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @handler_in_use(i32 noundef %0) #1 !dbg !15972 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15973, metadata !DIExpression()), !dbg !15974
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15975, metadata !DIExpression()), !dbg !15977
  store i32 0, i32* %4, align 4, !dbg !15977
  br label %5, !dbg !15978

5:                                                ; preds = %29, %1
  %6 = load i32, i32* %4, align 4, !dbg !15979
  %7 = icmp ult i32 %6, 32, !dbg !15981
  br i1 %7, label %8, label %32, !dbg !15982

8:                                                ; preds = %5
  %9 = load i32, i32* %4, align 4, !dbg !15983
  %10 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %9, !dbg !15983
  %11 = load i16, i16* %10, align 2, !dbg !15983
  %12 = zext i16 %11 to i32, !dbg !15983
  %13 = and i32 %12, 256, !dbg !15983
  %14 = icmp ne i32 %13, 0, !dbg !15983
  br i1 %14, label %15, label %22, !dbg !15983

15:                                               ; preds = %8
  %16 = load i32, i32* %4, align 4, !dbg !15983
  %17 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %16, !dbg !15983
  %18 = load i16, i16* %17, align 2, !dbg !15983
  %19 = zext i16 %18 to i32, !dbg !15983
  %20 = and i32 %19, 7680, !dbg !15983
  %21 = lshr i32 %20, 9, !dbg !15983
  br label %23, !dbg !15983

22:                                               ; preds = %8
  br label %23, !dbg !15983

23:                                               ; preds = %22, %15
  %24 = phi i32 [ %21, %15 ], [ -1, %22 ], !dbg !15983
  %25 = load i32, i32* %3, align 4, !dbg !15986
  %26 = icmp eq i32 %24, %25, !dbg !15987
  br i1 %26, label %27, label %28, !dbg !15988

27:                                               ; preds = %23
  store i1 true, i1* %2, align 1, !dbg !15989
  br label %33, !dbg !15989

28:                                               ; preds = %23
  br label %29, !dbg !15991

29:                                               ; preds = %28
  %30 = load i32, i32* %4, align 4, !dbg !15992
  %31 = add i32 %30, 1, !dbg !15992
  store i32 %31, i32* %4, align 4, !dbg !15992
  br label %5, !dbg !15993, !llvm.loop !15994

32:                                               ; preds = %5
  store i1 false, i1* %2, align 1, !dbg !15996
  br label %33, !dbg !15996

33:                                               ; preds = %32, %27
  %34 = load i1, i1* %2, align 1, !dbg !15997
  ret i1 %34, !dbg !15997
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @pin_is_input(i32 noundef %0) #1 !dbg !15998 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15999, metadata !DIExpression()), !dbg !16000
  %3 = load i32, i32* %2, align 4, !dbg !16001
  %4 = call zeroext i1 @pin_is_output(i32 noundef %3) #10, !dbg !16002
  %5 = xor i1 %4, true, !dbg !16003
  ret i1 %5, !dbg !16004
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_int_disable(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !16005 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !16006, metadata !DIExpression()), !dbg !16007
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16008, metadata !DIExpression()), !dbg !16009
  %5 = load i32, i32* %4, align 4, !dbg !16010
  %6 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !16011
  %7 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %6, i32 0, i32 7, !dbg !16012
  store volatile i32 %5, i32* %7, align 4, !dbg !16013
  ret void, !dbg !16014
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_event_disable(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !16015 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !16016, metadata !DIExpression()), !dbg !16017
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16018, metadata !DIExpression()), !dbg !16019
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !16020
  %6 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %5, i32 0, i32 9, !dbg !16021
  %7 = load i32, i32* %4, align 4, !dbg !16022
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i32 0, i32 %7, !dbg !16020
  %9 = load volatile i32, i32* %8, align 4, !dbg !16023
  %10 = and i32 %9, -4, !dbg !16023
  store volatile i32 %10, i32* %8, align 4, !dbg !16023
  ret void, !dbg !16024
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_cfg_sense_set(i32 noundef %0, i32 noundef %1) #1 !dbg !16025 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16028, metadata !DIExpression()), !dbg !16029
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16030, metadata !DIExpression()), !dbg !16031
  %5 = load i32, i32* %3, align 4, !dbg !16032
  call void @nrf_gpio_reconfigure(i32 noundef %5, i32* noundef null, i32* noundef null, i32* noundef null, i32* noundef null, i32* noundef %4) #10, !dbg !16033
  ret void, !dbg !16034
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_reconfigure(i32 noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4, i32* noundef %5) #1 !dbg !16035 {
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32*, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32*, align 4
  %13 = alloca %struct.NRF_GPIO_Type*, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16048, metadata !DIExpression()), !dbg !16049
  store i32* %1, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !16050, metadata !DIExpression()), !dbg !16051
  store i32* %2, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !16052, metadata !DIExpression()), !dbg !16053
  store i32* %3, i32** %10, align 4
  call void @llvm.dbg.declare(metadata i32** %10, metadata !16054, metadata !DIExpression()), !dbg !16055
  store i32* %4, i32** %11, align 4
  call void @llvm.dbg.declare(metadata i32** %11, metadata !16056, metadata !DIExpression()), !dbg !16057
  store i32* %5, i32** %12, align 4
  call void @llvm.dbg.declare(metadata i32** %12, metadata !16058, metadata !DIExpression()), !dbg !16059
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %13, metadata !16060, metadata !DIExpression()), !dbg !16061
  %16 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %7) #10, !dbg !16062
  store %struct.NRF_GPIO_Type* %16, %struct.NRF_GPIO_Type** %13, align 4, !dbg !16061
  call void @llvm.dbg.declare(metadata i32* %14, metadata !16063, metadata !DIExpression()), !dbg !16064
  %17 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %13, align 4, !dbg !16065
  %18 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %17, i32 0, i32 9, !dbg !16066
  %19 = load i32, i32* %7, align 4, !dbg !16067
  %20 = getelementptr inbounds [32 x i32], [32 x i32]* %18, i32 0, i32 %19, !dbg !16065
  %21 = load volatile i32, i32* %20, align 4, !dbg !16065
  store i32 %21, i32* %14, align 4, !dbg !16064
  call void @llvm.dbg.declare(metadata i32* %15, metadata !16068, metadata !DIExpression()), !dbg !16069
  %22 = load i32*, i32** %8, align 4, !dbg !16070
  %23 = icmp ne i32* %22, null, !dbg !16070
  %24 = zext i1 %23 to i64, !dbg !16070
  %25 = select i1 %23, i32 1, i32 0, !dbg !16070
  %26 = load i32*, i32** %9, align 4, !dbg !16071
  %27 = icmp ne i32* %26, null, !dbg !16071
  %28 = zext i1 %27 to i64, !dbg !16071
  %29 = select i1 %27, i32 2, i32 0, !dbg !16071
  %30 = or i32 %25, %29, !dbg !16072
  %31 = load i32*, i32** %10, align 4, !dbg !16073
  %32 = icmp ne i32* %31, null, !dbg !16073
  %33 = zext i1 %32 to i64, !dbg !16073
  %34 = select i1 %32, i32 12, i32 0, !dbg !16073
  %35 = or i32 %30, %34, !dbg !16074
  %36 = load i32*, i32** %11, align 4, !dbg !16075
  %37 = icmp ne i32* %36, null, !dbg !16075
  %38 = zext i1 %37 to i64, !dbg !16075
  %39 = select i1 %37, i32 1792, i32 0, !dbg !16075
  %40 = or i32 %35, %39, !dbg !16076
  %41 = load i32*, i32** %12, align 4, !dbg !16077
  %42 = icmp ne i32* %41, null, !dbg !16077
  %43 = zext i1 %42 to i64, !dbg !16077
  %44 = select i1 %42, i32 196608, i32 0, !dbg !16077
  %45 = or i32 %40, %44, !dbg !16078
  store i32 %45, i32* %15, align 4, !dbg !16069
  %46 = load i32, i32* %15, align 4, !dbg !16079
  %47 = xor i32 %46, -1, !dbg !16080
  %48 = load i32, i32* %14, align 4, !dbg !16081
  %49 = and i32 %48, %47, !dbg !16081
  store i32 %49, i32* %14, align 4, !dbg !16081
  %50 = load i32*, i32** %8, align 4, !dbg !16082
  %51 = icmp ne i32* %50, null, !dbg !16082
  br i1 %51, label %52, label %55, !dbg !16082

52:                                               ; preds = %6
  %53 = load i32*, i32** %8, align 4, !dbg !16083
  %54 = load i32, i32* %53, align 4, !dbg !16084
  br label %56, !dbg !16082

55:                                               ; preds = %6
  br label %56, !dbg !16082

56:                                               ; preds = %55, %52
  %57 = phi i32 [ %54, %52 ], [ 0, %55 ], !dbg !16082
  %58 = shl i32 %57, 0, !dbg !16085
  %59 = load i32*, i32** %9, align 4, !dbg !16086
  %60 = icmp ne i32* %59, null, !dbg !16086
  br i1 %60, label %61, label %64, !dbg !16086

61:                                               ; preds = %56
  %62 = load i32*, i32** %9, align 4, !dbg !16087
  %63 = load i32, i32* %62, align 4, !dbg !16088
  br label %65, !dbg !16086

64:                                               ; preds = %56
  br label %65, !dbg !16086

65:                                               ; preds = %64, %61
  %66 = phi i32 [ %63, %61 ], [ 0, %64 ], !dbg !16086
  %67 = shl i32 %66, 1, !dbg !16089
  %68 = or i32 %58, %67, !dbg !16090
  %69 = load i32*, i32** %10, align 4, !dbg !16091
  %70 = icmp ne i32* %69, null, !dbg !16091
  br i1 %70, label %71, label %74, !dbg !16091

71:                                               ; preds = %65
  %72 = load i32*, i32** %10, align 4, !dbg !16092
  %73 = load i32, i32* %72, align 4, !dbg !16093
  br label %75, !dbg !16091

74:                                               ; preds = %65
  br label %75, !dbg !16091

75:                                               ; preds = %74, %71
  %76 = phi i32 [ %73, %71 ], [ 0, %74 ], !dbg !16091
  %77 = shl i32 %76, 2, !dbg !16094
  %78 = or i32 %68, %77, !dbg !16095
  %79 = load i32*, i32** %11, align 4, !dbg !16096
  %80 = icmp ne i32* %79, null, !dbg !16096
  br i1 %80, label %81, label %84, !dbg !16096

81:                                               ; preds = %75
  %82 = load i32*, i32** %11, align 4, !dbg !16097
  %83 = load i32, i32* %82, align 4, !dbg !16098
  br label %85, !dbg !16096

84:                                               ; preds = %75
  br label %85, !dbg !16096

85:                                               ; preds = %84, %81
  %86 = phi i32 [ %83, %81 ], [ 0, %84 ], !dbg !16096
  %87 = shl i32 %86, 8, !dbg !16099
  %88 = or i32 %78, %87, !dbg !16100
  %89 = load i32*, i32** %12, align 4, !dbg !16101
  %90 = icmp ne i32* %89, null, !dbg !16101
  br i1 %90, label %91, label %94, !dbg !16101

91:                                               ; preds = %85
  %92 = load i32*, i32** %12, align 4, !dbg !16102
  %93 = load i32, i32* %92, align 4, !dbg !16103
  br label %95, !dbg !16101

94:                                               ; preds = %85
  br label %95, !dbg !16101

95:                                               ; preds = %94, %91
  %96 = phi i32 [ %93, %91 ], [ 0, %94 ], !dbg !16101
  %97 = shl i32 %96, 16, !dbg !16104
  %98 = or i32 %88, %97, !dbg !16105
  %99 = load i32, i32* %14, align 4, !dbg !16106
  %100 = or i32 %99, %98, !dbg !16106
  store i32 %100, i32* %14, align 4, !dbg !16106
  %101 = load i32, i32* %14, align 4, !dbg !16107
  %102 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %13, align 4, !dbg !16108
  %103 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %102, i32 0, i32 9, !dbg !16109
  %104 = load i32, i32* %7, align 4, !dbg !16110
  %105 = getelementptr inbounds [32 x i32], [32 x i32]* %103, i32 0, i32 %104, !dbg !16108
  store volatile i32 %101, i32* %105, align 4, !dbg !16111
  ret void, !dbg !16112
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @pin_is_output(i32 noundef %0) #1 !dbg !16113 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16114, metadata !DIExpression()), !dbg !16115
  %3 = load i32, i32* %2, align 4, !dbg !16116
  %4 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %3, !dbg !16116
  %5 = load i16, i16* %4, align 2, !dbg !16116
  %6 = zext i16 %5 to i32, !dbg !16116
  %7 = and i32 %6, 2, !dbg !16116
  %8 = icmp eq i32 %7, 2, !dbg !16116
  ret i1 %8, !dbg !16117
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_input_configure(i32 noundef %0, %struct.z_spinlock_key* noundef %1, %struct.nrfx_gpiote_trigger_config_t* noundef %2, %struct.nrfx_gpiote_handler_config_t* noundef %3) #1 !dbg !16118 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.z_spinlock_key*, align 4
  %8 = alloca %struct.nrfx_gpiote_trigger_config_t*, align 4
  %9 = alloca %struct.nrfx_gpiote_handler_config_t*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16136, metadata !DIExpression()), !dbg !16137
  store %struct.z_spinlock_key* %1, %struct.z_spinlock_key** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key** %7, metadata !16138, metadata !DIExpression()), !dbg !16139
  store %struct.nrfx_gpiote_trigger_config_t* %2, %struct.nrfx_gpiote_trigger_config_t** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_trigger_config_t** %8, metadata !16140, metadata !DIExpression()), !dbg !16141
  store %struct.nrfx_gpiote_handler_config_t* %3, %struct.nrfx_gpiote_handler_config_t** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_handler_config_t** %9, metadata !16142, metadata !DIExpression()), !dbg !16143
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16144, metadata !DIExpression()), !dbg !16145
  %18 = load %struct.z_spinlock_key*, %struct.z_spinlock_key** %7, align 4, !dbg !16146
  %19 = icmp ne %struct.z_spinlock_key* %18, null, !dbg !16146
  br i1 %19, label %20, label %40, !dbg !16148

20:                                               ; preds = %4
  %21 = load i32, i32* %6, align 4, !dbg !16149
  %22 = call zeroext i1 @pin_is_task_output(i32 noundef %21) #10, !dbg !16152
  br i1 %22, label %23, label %24, !dbg !16153

23:                                               ; preds = %20
  store i32 195887108, i32* %5, align 4, !dbg !16154
  br label %150, !dbg !16154

24:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16156, metadata !DIExpression()), !dbg !16157
  store i32 0, i32* %11, align 4, !dbg !16157
  call void @llvm.dbg.declare(metadata i32* %12, metadata !16158, metadata !DIExpression()), !dbg !16159
  store i32 0, i32* %12, align 4, !dbg !16159
  %25 = load i32, i32* %6, align 4, !dbg !16160
  %26 = load %struct.z_spinlock_key*, %struct.z_spinlock_key** %7, align 4, !dbg !16161
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %26, i32 0, i32 0, !dbg !16162
  call void @nrf_gpio_reconfigure(i32 noundef %25, i32* noundef %11, i32* noundef %12, i32* noundef %27, i32* noundef null, i32* noundef null) #10, !dbg !16163
  %28 = load i32, i32* %6, align 4, !dbg !16164
  %29 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %28, !dbg !16165
  %30 = load i16, i16* %29, align 2, !dbg !16166
  %31 = zext i16 %30 to i32, !dbg !16166
  %32 = and i32 %31, -3, !dbg !16166
  %33 = trunc i32 %32 to i16, !dbg !16166
  store i16 %33, i16* %29, align 2, !dbg !16166
  %34 = load i32, i32* %6, align 4, !dbg !16167
  %35 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %34, !dbg !16168
  %36 = load i16, i16* %35, align 2, !dbg !16169
  %37 = zext i16 %36 to i32, !dbg !16169
  %38 = or i32 %37, 1, !dbg !16169
  %39 = trunc i32 %38 to i16, !dbg !16169
  store i16 %39, i16* %35, align 2, !dbg !16169
  br label %40, !dbg !16170

40:                                               ; preds = %24, %4
  %41 = load %struct.nrfx_gpiote_trigger_config_t*, %struct.nrfx_gpiote_trigger_config_t** %8, align 4, !dbg !16171
  %42 = icmp ne %struct.nrfx_gpiote_trigger_config_t* %41, null, !dbg !16171
  br i1 %42, label %43, label %135, !dbg !16173

43:                                               ; preds = %40
  call void @llvm.dbg.declare(metadata i32* %13, metadata !16174, metadata !DIExpression()), !dbg !16176
  %44 = load %struct.nrfx_gpiote_trigger_config_t*, %struct.nrfx_gpiote_trigger_config_t** %8, align 4, !dbg !16177
  %45 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %44, i32 0, i32 0, !dbg !16178
  %46 = load i32, i32* %45, align 4, !dbg !16178
  store i32 %46, i32* %13, align 4, !dbg !16176
  call void @llvm.dbg.declare(metadata i8* %14, metadata !16179, metadata !DIExpression()), !dbg !16180
  %47 = load %struct.nrfx_gpiote_trigger_config_t*, %struct.nrfx_gpiote_trigger_config_t** %8, align 4, !dbg !16181
  %48 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %47, i32 0, i32 1, !dbg !16182
  %49 = load i8*, i8** %48, align 4, !dbg !16182
  %50 = icmp ne i8* %49, null, !dbg !16181
  %51 = zext i1 %50 to i64, !dbg !16181
  %52 = select i1 %50, i32 1, i32 0, !dbg !16181
  %53 = icmp ne i32 %52, 0, !dbg !16181
  %54 = zext i1 %53 to i8, !dbg !16180
  store i8 %54, i8* %14, align 1, !dbg !16180
  %55 = load i32, i32* %6, align 4, !dbg !16183
  %56 = call zeroext i1 @pin_is_output(i32 noundef %55) #10, !dbg !16185
  br i1 %56, label %57, label %62, !dbg !16186

57:                                               ; preds = %43
  %58 = load i8, i8* %14, align 1, !dbg !16187
  %59 = trunc i8 %58 to i1, !dbg !16187
  br i1 %59, label %60, label %61, !dbg !16190

60:                                               ; preds = %57
  store i32 195887108, i32* %5, align 4, !dbg !16191
  br label %150, !dbg !16191

61:                                               ; preds = %57
  br label %110, !dbg !16193

62:                                               ; preds = %43
  %63 = load i32, i32* %6, align 4, !dbg !16194
  %64 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %63, !dbg !16196
  %65 = load i16, i16* %64, align 2, !dbg !16197
  %66 = zext i16 %65 to i32, !dbg !16197
  %67 = and i32 %66, -57377, !dbg !16197
  %68 = trunc i32 %67 to i16, !dbg !16197
  store i16 %68, i16* %64, align 2, !dbg !16197
  %69 = load i8, i8* %14, align 1, !dbg !16198
  %70 = trunc i8 %69 to i1, !dbg !16198
  br i1 %70, label %71, label %109, !dbg !16200

71:                                               ; preds = %62
  call void @llvm.dbg.declare(metadata i8* %15, metadata !16201, metadata !DIExpression()), !dbg !16203
  %72 = load i32, i32* %13, align 4, !dbg !16204
  %73 = icmp ule i32 %72, 3, !dbg !16205
  %74 = zext i1 %73 to i8, !dbg !16203
  store i8 %74, i8* %15, align 1, !dbg !16203
  %75 = load i8, i8* %15, align 1, !dbg !16206
  %76 = trunc i8 %75 to i1, !dbg !16206
  br i1 %76, label %78, label %77, !dbg !16208

77:                                               ; preds = %71
  store i32 195887108, i32* %5, align 4, !dbg !16209
  br label %150, !dbg !16209

78:                                               ; preds = %71
  call void @llvm.dbg.declare(metadata i8* %16, metadata !16211, metadata !DIExpression()), !dbg !16212
  %79 = load %struct.nrfx_gpiote_trigger_config_t*, %struct.nrfx_gpiote_trigger_config_t** %8, align 4, !dbg !16213
  %80 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %79, i32 0, i32 1, !dbg !16214
  %81 = load i8*, i8** %80, align 4, !dbg !16214
  %82 = load i8, i8* %81, align 1, !dbg !16215
  store i8 %82, i8* %16, align 1, !dbg !16212
  %83 = load i32, i32* %13, align 4, !dbg !16216
  %84 = icmp eq i32 %83, 0, !dbg !16218
  br i1 %84, label %85, label %88, !dbg !16219

85:                                               ; preds = %78
  %86 = load i8, i8* %16, align 1, !dbg !16220
  %87 = zext i8 %86 to i32, !dbg !16220
  call void @nrf_gpiote_te_default(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %87) #10, !dbg !16222
  br label %108, !dbg !16223

88:                                               ; preds = %78
  call void @llvm.dbg.declare(metadata i32* %17, metadata !16224, metadata !DIExpression()), !dbg !16226
  %89 = load i32, i32* %13, align 4, !dbg !16227
  %90 = call i32 @gpiote_trigger_to_polarity(i32 noundef %89) #10, !dbg !16228
  store i32 %90, i32* %17, align 4, !dbg !16226
  %91 = load i8, i8* %16, align 1, !dbg !16229
  %92 = zext i8 %91 to i32, !dbg !16229
  call void @nrf_gpiote_event_disable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %92) #10, !dbg !16230
  %93 = load i8, i8* %16, align 1, !dbg !16231
  %94 = zext i8 %93 to i32, !dbg !16231
  %95 = load i32, i32* %6, align 4, !dbg !16232
  %96 = load i32, i32* %17, align 4, !dbg !16233
  call void @nrf_gpiote_event_configure(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %94, i32 noundef %95, i32 noundef %96) #10, !dbg !16234
  %97 = load i8, i8* %16, align 1, !dbg !16235
  %98 = zext i8 %97 to i32, !dbg !16235
  %99 = shl i32 %98, 13, !dbg !16235
  %100 = and i32 %99, 57344, !dbg !16235
  %101 = or i32 32, %100, !dbg !16235
  %102 = load i32, i32* %6, align 4, !dbg !16236
  %103 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %102, !dbg !16237
  %104 = load i16, i16* %103, align 2, !dbg !16238
  %105 = zext i16 %104 to i32, !dbg !16238
  %106 = or i32 %105, %101, !dbg !16238
  %107 = trunc i32 %106 to i16, !dbg !16238
  store i16 %107, i16* %103, align 2, !dbg !16238
  br label %108

108:                                              ; preds = %88, %85
  br label %109, !dbg !16239

109:                                              ; preds = %108, %62
  br label %110

110:                                              ; preds = %109, %61
  %111 = load i8, i8* %14, align 1, !dbg !16240
  %112 = trunc i8 %111 to i1, !dbg !16240
  br i1 %112, label %116, label %113, !dbg !16242

113:                                              ; preds = %110
  %114 = load i32, i32* %13, align 4, !dbg !16243
  %115 = icmp eq i32 %114, 0, !dbg !16244
  br i1 %115, label %116, label %118, !dbg !16245

116:                                              ; preds = %113, %110
  %117 = load i32, i32* %6, align 4, !dbg !16246
  call void @nrf_bitmask_bit_clear(i32 noundef %117, i8* noundef bitcast (i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 5, i32 0) to i8*)) #10, !dbg !16248
  br label %120, !dbg !16249

118:                                              ; preds = %113
  %119 = load i32, i32* %6, align 4, !dbg !16250
  call void @nrf_bitmask_bit_set(i32 noundef %119, i8* noundef bitcast (i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 5, i32 0) to i8*)) #10, !dbg !16252
  br label %120

120:                                              ; preds = %118, %116
  %121 = load i32, i32* %6, align 4, !dbg !16253
  %122 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %121, !dbg !16254
  %123 = load i16, i16* %122, align 2, !dbg !16255
  %124 = zext i16 %123 to i32, !dbg !16255
  %125 = and i32 %124, -29, !dbg !16255
  %126 = trunc i32 %125 to i16, !dbg !16255
  store i16 %126, i16* %122, align 2, !dbg !16255
  %127 = load i32, i32* %13, align 4, !dbg !16256
  %128 = shl i32 %127, 2, !dbg !16256
  %129 = load i32, i32* %6, align 4, !dbg !16257
  %130 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %129, !dbg !16258
  %131 = load i16, i16* %130, align 2, !dbg !16259
  %132 = zext i16 %131 to i32, !dbg !16259
  %133 = or i32 %132, %128, !dbg !16259
  %134 = trunc i32 %133 to i16, !dbg !16259
  store i16 %134, i16* %130, align 2, !dbg !16259
  br label %135, !dbg !16260

135:                                              ; preds = %120, %40
  %136 = load %struct.nrfx_gpiote_handler_config_t*, %struct.nrfx_gpiote_handler_config_t** %9, align 4, !dbg !16261
  %137 = icmp ne %struct.nrfx_gpiote_handler_config_t* %136, null, !dbg !16261
  br i1 %137, label %138, label %147, !dbg !16263

138:                                              ; preds = %135
  %139 = load i32, i32* %6, align 4, !dbg !16264
  %140 = load %struct.nrfx_gpiote_handler_config_t*, %struct.nrfx_gpiote_handler_config_t** %9, align 4, !dbg !16266
  %141 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %140, i32 0, i32 0, !dbg !16267
  %142 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %141, align 4, !dbg !16267
  %143 = load %struct.nrfx_gpiote_handler_config_t*, %struct.nrfx_gpiote_handler_config_t** %9, align 4, !dbg !16268
  %144 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %143, i32 0, i32 1, !dbg !16269
  %145 = load i8*, i8** %144, align 4, !dbg !16269
  %146 = call i32 @pin_handler_set(i32 noundef %139, void (i32, i32, i8*)* noundef %142, i8* noundef %145) #10, !dbg !16270
  store i32 %146, i32* %10, align 4, !dbg !16271
  br label %148, !dbg !16272

147:                                              ; preds = %135
  store i32 195887104, i32* %10, align 4, !dbg !16273
  br label %148

148:                                              ; preds = %147, %138
  %149 = load i32, i32* %10, align 4, !dbg !16275
  store i32 %149, i32* %5, align 4, !dbg !16276
  br label %150, !dbg !16276

150:                                              ; preds = %148, %77, %60, %23
  %151 = load i32, i32* %5, align 4, !dbg !16277
  ret i32 %151, !dbg !16277
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @pin_is_task_output(i32 noundef %0) #1 !dbg !16278 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16279, metadata !DIExpression()), !dbg !16280
  %3 = load i32, i32* %2, align 4, !dbg !16281
  %4 = call zeroext i1 @pin_is_output(i32 noundef %3) #10, !dbg !16282
  br i1 %4, label %5, label %8, !dbg !16283

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !16284
  %7 = call zeroext i1 @pin_in_use_by_te(i32 noundef %6) #10, !dbg !16285
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ false, %1 ], [ %7, %5 ], !dbg !16286
  ret i1 %9, !dbg !16287
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpiote_trigger_to_polarity(i32 noundef %0) #1 !dbg !16288 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16291, metadata !DIExpression()), !dbg !16292
  %3 = load i32, i32* %2, align 4, !dbg !16293
  ret i32 %3, !dbg !16294
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_event_configure(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !16295 {
  %5 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %5, metadata !16298, metadata !DIExpression()), !dbg !16299
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16300, metadata !DIExpression()), !dbg !16301
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16302, metadata !DIExpression()), !dbg !16303
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16304, metadata !DIExpression()), !dbg !16305
  %9 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %5, align 4, !dbg !16306
  %10 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %9, i32 0, i32 9, !dbg !16307
  %11 = load i32, i32* %6, align 4, !dbg !16308
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i32 0, i32 %11, !dbg !16306
  %13 = load volatile i32, i32* %12, align 4, !dbg !16309
  %14 = and i32 %13, -204545, !dbg !16309
  store volatile i32 %14, i32* %12, align 4, !dbg !16309
  %15 = load i32, i32* %7, align 4, !dbg !16310
  %16 = shl i32 %15, 8, !dbg !16311
  %17 = and i32 %16, 7936, !dbg !16312
  %18 = load i32, i32* %8, align 4, !dbg !16313
  %19 = shl i32 %18, 16, !dbg !16314
  %20 = and i32 %19, 196608, !dbg !16315
  %21 = or i32 %17, %20, !dbg !16316
  %22 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %5, align 4, !dbg !16317
  %23 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %22, i32 0, i32 9, !dbg !16318
  %24 = load i32, i32* %6, align 4, !dbg !16319
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* %23, i32 0, i32 %24, !dbg !16317
  %26 = load volatile i32, i32* %25, align 4, !dbg !16320
  %27 = or i32 %26, %21, !dbg !16320
  store volatile i32 %27, i32* %25, align 4, !dbg !16320
  ret void, !dbg !16321
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_bitmask_bit_set(i32 noundef %0, i8* noundef %1) #1 !dbg !16322 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16323, metadata !DIExpression()), !dbg !16324
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !16325, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16327, metadata !DIExpression()), !dbg !16328
  %7 = load i8*, i8** %4, align 4, !dbg !16329
  store i8* %7, i8** %5, align 4, !dbg !16328
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16330, metadata !DIExpression()), !dbg !16331
  %8 = load i32, i32* %3, align 4, !dbg !16332
  %9 = udiv i32 %8, 8, !dbg !16332
  store i32 %9, i32* %6, align 4, !dbg !16331
  %10 = load i32, i32* %3, align 4, !dbg !16333
  %11 = and i32 %10, 7, !dbg !16333
  store i32 %11, i32* %3, align 4, !dbg !16334
  %12 = load i32, i32* %3, align 4, !dbg !16335
  %13 = shl i32 1, %12, !dbg !16336
  %14 = load i8*, i8** %5, align 4, !dbg !16337
  %15 = load i32, i32* %6, align 4, !dbg !16338
  %16 = getelementptr inbounds i8, i8* %14, i32 %15, !dbg !16337
  %17 = load i8, i8* %16, align 1, !dbg !16339
  %18 = zext i8 %17 to i32, !dbg !16339
  %19 = or i32 %18, %13, !dbg !16339
  %20 = trunc i32 %19 to i8, !dbg !16339
  store i8 %20, i8* %16, align 1, !dbg !16339
  ret void, !dbg !16340
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pin_handler_set(i32 noundef %0, void (i32, i32, i8*)* noundef %1, i8* noundef %2) #1 !dbg !16341 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca void (i32, i32, i8*)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16344, metadata !DIExpression()), !dbg !16345
  store void (i32, i32, i8*)* %1, void (i32, i32, i8*)** %6, align 4
  call void @llvm.dbg.declare(metadata void (i32, i32, i8*)** %6, metadata !16346, metadata !DIExpression()), !dbg !16347
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !16348, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16350, metadata !DIExpression()), !dbg !16351
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16352, metadata !DIExpression()), !dbg !16353
  %11 = load i32, i32* %5, align 4, !dbg !16354
  call void @release_handler(i32 noundef %11) #10, !dbg !16355
  %12 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %6, align 4, !dbg !16356
  %13 = icmp ne void (i32, i32, i8*)* %12, null, !dbg !16356
  br i1 %13, label %15, label %14, !dbg !16358

14:                                               ; preds = %3
  store i32 195887104, i32* %4, align 4, !dbg !16359
  br label %48, !dbg !16359

15:                                               ; preds = %3
  %16 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %6, align 4, !dbg !16361
  %17 = load i8*, i8** %7, align 4, !dbg !16362
  %18 = call i32 @find_handler(void (i32, i32, i8*)* noundef %16, i8* noundef %17) #10, !dbg !16363
  store i32 %18, i32* %9, align 4, !dbg !16364
  %19 = load i32, i32* %9, align 4, !dbg !16365
  %20 = icmp slt i32 %19, 0, !dbg !16367
  br i1 %20, label %21, label %30, !dbg !16368

21:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i8* %10, metadata !16369, metadata !DIExpression()), !dbg !16371
  %22 = call i32 @nrfx_flag32_alloc(i32* noundef getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 4), i8* noundef %10) #10, !dbg !16372
  store i32 %22, i32* %8, align 4, !dbg !16373
  %23 = load i32, i32* %8, align 4, !dbg !16374
  %24 = icmp ne i32 %23, 195887104, !dbg !16376
  br i1 %24, label %25, label %27, !dbg !16377

25:                                               ; preds = %21
  %26 = load i32, i32* %8, align 4, !dbg !16378
  store i32 %26, i32* %4, align 4, !dbg !16380
  br label %48, !dbg !16380

27:                                               ; preds = %21
  %28 = load i8, i8* %10, align 1, !dbg !16381
  %29 = zext i8 %28 to i32, !dbg !16382
  store i32 %29, i32* %9, align 4, !dbg !16383
  br label %30, !dbg !16384

30:                                               ; preds = %27, %15
  %31 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %6, align 4, !dbg !16385
  %32 = load i32, i32* %9, align 4, !dbg !16386
  %33 = getelementptr inbounds [1 x %struct.nrfx_gpiote_handler_config_t], [1 x %struct.nrfx_gpiote_handler_config_t]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 0), i32 0, i32 %32, !dbg !16387
  %34 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %33, i32 0, i32 0, !dbg !16388
  store void (i32, i32, i8*)* %31, void (i32, i32, i8*)** %34, align 4, !dbg !16389
  %35 = load i8*, i8** %7, align 4, !dbg !16390
  %36 = load i32, i32* %9, align 4, !dbg !16391
  %37 = getelementptr inbounds [1 x %struct.nrfx_gpiote_handler_config_t], [1 x %struct.nrfx_gpiote_handler_config_t]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 0), i32 0, i32 %36, !dbg !16392
  %38 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %37, i32 0, i32 1, !dbg !16393
  store i8* %35, i8** %38, align 4, !dbg !16394
  %39 = load i32, i32* %9, align 4, !dbg !16395
  %40 = shl i32 %39, 9, !dbg !16395
  %41 = or i32 256, %40, !dbg !16395
  %42 = load i32, i32* %5, align 4, !dbg !16396
  %43 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %42, !dbg !16397
  %44 = load i16, i16* %43, align 2, !dbg !16398
  %45 = zext i16 %44 to i32, !dbg !16398
  %46 = or i32 %45, %41, !dbg !16398
  %47 = trunc i32 %46 to i16, !dbg !16398
  store i16 %47, i16* %43, align 2, !dbg !16398
  store i32 195887104, i32* %4, align 4, !dbg !16399
  br label %48, !dbg !16399

48:                                               ; preds = %30, %25, %14
  %49 = load i32, i32* %4, align 4, !dbg !16400
  ret i32 %49, !dbg !16400
}

; Function Attrs: noinline nounwind optnone
define internal i32 @find_handler(void (i32, i32, i8*)* noundef %0, i8* noundef %1) #1 !dbg !16401 {
  %3 = alloca i32, align 4
  %4 = alloca void (i32, i32, i8*)*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store void (i32, i32, i8*)* %0, void (i32, i32, i8*)** %4, align 4
  call void @llvm.dbg.declare(metadata void (i32, i32, i8*)** %4, metadata !16404, metadata !DIExpression()), !dbg !16405
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16406, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16408, metadata !DIExpression()), !dbg !16410
  store i32 0, i32* %6, align 4, !dbg !16410
  br label %7, !dbg !16411

7:                                                ; preds = %27, %2
  %8 = load i32, i32* %6, align 4, !dbg !16412
  %9 = icmp ult i32 %8, 1, !dbg !16414
  br i1 %9, label %10, label %30, !dbg !16415

10:                                               ; preds = %7
  %11 = load i32, i32* %6, align 4, !dbg !16416
  %12 = getelementptr inbounds [1 x %struct.nrfx_gpiote_handler_config_t], [1 x %struct.nrfx_gpiote_handler_config_t]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 0), i32 0, i32 %11, !dbg !16419
  %13 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %12, i32 0, i32 0, !dbg !16420
  %14 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %13, align 4, !dbg !16420
  %15 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %4, align 4, !dbg !16421
  %16 = icmp eq void (i32, i32, i8*)* %14, %15, !dbg !16422
  br i1 %16, label %17, label %26, !dbg !16423

17:                                               ; preds = %10
  %18 = load i32, i32* %6, align 4, !dbg !16424
  %19 = getelementptr inbounds [1 x %struct.nrfx_gpiote_handler_config_t], [1 x %struct.nrfx_gpiote_handler_config_t]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 0), i32 0, i32 %18, !dbg !16425
  %20 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %19, i32 0, i32 1, !dbg !16426
  %21 = load i8*, i8** %20, align 4, !dbg !16426
  %22 = load i8*, i8** %5, align 4, !dbg !16427
  %23 = icmp eq i8* %21, %22, !dbg !16428
  br i1 %23, label %24, label %26, !dbg !16429

24:                                               ; preds = %17
  %25 = load i32, i32* %6, align 4, !dbg !16430
  store i32 %25, i32* %3, align 4, !dbg !16432
  br label %31, !dbg !16432

26:                                               ; preds = %17, %10
  br label %27, !dbg !16433

27:                                               ; preds = %26
  %28 = load i32, i32* %6, align 4, !dbg !16434
  %29 = add i32 %28, 1, !dbg !16434
  store i32 %29, i32* %6, align 4, !dbg !16434
  br label %7, !dbg !16435, !llvm.loop !16436

30:                                               ; preds = %7
  store i32 -1, i32* %3, align 4, !dbg !16438
  br label %31, !dbg !16438

31:                                               ; preds = %30, %24
  %32 = load i32, i32* %3, align 4, !dbg !16439
  ret i32 %32, !dbg !16439
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_output_configure(i32 noundef %0, %struct.nrfx_gpiote_output_config_t* noundef %1, %struct.nrfx_gpiote_task_config_t* noundef %2) #1 !dbg !16440 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.nrfx_gpiote_output_config_t*, align 4
  %7 = alloca %struct.nrfx_gpiote_task_config_t*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16460, metadata !DIExpression()), !dbg !16461
  store %struct.nrfx_gpiote_output_config_t* %1, %struct.nrfx_gpiote_output_config_t** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_output_config_t** %6, metadata !16462, metadata !DIExpression()), !dbg !16463
  store %struct.nrfx_gpiote_task_config_t* %2, %struct.nrfx_gpiote_task_config_t** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_task_config_t** %7, metadata !16464, metadata !DIExpression()), !dbg !16465
  %10 = load %struct.nrfx_gpiote_output_config_t*, %struct.nrfx_gpiote_output_config_t** %6, align 4, !dbg !16466
  %11 = icmp ne %struct.nrfx_gpiote_output_config_t* %10, null, !dbg !16466
  br i1 %11, label %12, label %42, !dbg !16468

12:                                               ; preds = %3
  %13 = load i32, i32* %5, align 4, !dbg !16469
  %14 = call zeroext i1 @pin_is_input(i32 noundef %13) #10, !dbg !16472
  br i1 %14, label %15, label %19, !dbg !16473

15:                                               ; preds = %12
  %16 = load i32, i32* %5, align 4, !dbg !16474
  %17 = call zeroext i1 @pin_in_use_by_te(i32 noundef %16) #10, !dbg !16475
  br i1 %17, label %18, label %19, !dbg !16476

18:                                               ; preds = %15
  store i32 195887108, i32* %4, align 4, !dbg !16477
  br label %86, !dbg !16477

19:                                               ; preds = %15, %12
  %20 = load i32, i32* %5, align 4, !dbg !16479
  %21 = call zeroext i1 @pin_has_trigger(i32 noundef %20) #10, !dbg !16481
  br i1 %21, label %22, label %28, !dbg !16482

22:                                               ; preds = %19
  %23 = load %struct.nrfx_gpiote_output_config_t*, %struct.nrfx_gpiote_output_config_t** %6, align 4, !dbg !16483
  %24 = getelementptr inbounds %struct.nrfx_gpiote_output_config_t, %struct.nrfx_gpiote_output_config_t* %23, i32 0, i32 1, !dbg !16484
  %25 = load i32, i32* %24, align 4, !dbg !16484
  %26 = icmp eq i32 %25, 1, !dbg !16485
  br i1 %26, label %27, label %28, !dbg !16486

27:                                               ; preds = %22
  store i32 195887108, i32* %4, align 4, !dbg !16487
  br label %86, !dbg !16487

28:                                               ; preds = %22, %19
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16489, metadata !DIExpression()), !dbg !16490
  store i32 1, i32* %8, align 4, !dbg !16490
  %29 = load i32, i32* %5, align 4, !dbg !16491
  %30 = load %struct.nrfx_gpiote_output_config_t*, %struct.nrfx_gpiote_output_config_t** %6, align 4, !dbg !16492
  %31 = getelementptr inbounds %struct.nrfx_gpiote_output_config_t, %struct.nrfx_gpiote_output_config_t* %30, i32 0, i32 1, !dbg !16493
  %32 = load %struct.nrfx_gpiote_output_config_t*, %struct.nrfx_gpiote_output_config_t** %6, align 4, !dbg !16494
  %33 = getelementptr inbounds %struct.nrfx_gpiote_output_config_t, %struct.nrfx_gpiote_output_config_t* %32, i32 0, i32 2, !dbg !16495
  %34 = load %struct.nrfx_gpiote_output_config_t*, %struct.nrfx_gpiote_output_config_t** %6, align 4, !dbg !16496
  %35 = getelementptr inbounds %struct.nrfx_gpiote_output_config_t, %struct.nrfx_gpiote_output_config_t* %34, i32 0, i32 0, !dbg !16497
  call void @nrf_gpio_reconfigure(i32 noundef %29, i32* noundef %8, i32* noundef %31, i32* noundef %33, i32* noundef %35, i32* noundef null) #10, !dbg !16498
  %36 = load i32, i32* %5, align 4, !dbg !16499
  %37 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %36, !dbg !16500
  %38 = load i16, i16* %37, align 2, !dbg !16501
  %39 = zext i16 %38 to i32, !dbg !16501
  %40 = or i32 %39, 3, !dbg !16501
  %41 = trunc i32 %40 to i16, !dbg !16501
  store i16 %41, i16* %37, align 2, !dbg !16501
  br label %42, !dbg !16502

42:                                               ; preds = %28, %3
  %43 = load %struct.nrfx_gpiote_task_config_t*, %struct.nrfx_gpiote_task_config_t** %7, align 4, !dbg !16503
  %44 = icmp ne %struct.nrfx_gpiote_task_config_t* %43, null, !dbg !16503
  br i1 %44, label %45, label %85, !dbg !16505

45:                                               ; preds = %42
  %46 = load i32, i32* %5, align 4, !dbg !16506
  %47 = call zeroext i1 @pin_is_input(i32 noundef %46) #10, !dbg !16509
  br i1 %47, label %48, label %49, !dbg !16510

48:                                               ; preds = %45
  store i32 195887108, i32* %4, align 4, !dbg !16511
  br label %86, !dbg !16511

49:                                               ; preds = %45
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16513, metadata !DIExpression()), !dbg !16514
  %50 = load %struct.nrfx_gpiote_task_config_t*, %struct.nrfx_gpiote_task_config_t** %7, align 4, !dbg !16515
  %51 = getelementptr inbounds %struct.nrfx_gpiote_task_config_t, %struct.nrfx_gpiote_task_config_t* %50, i32 0, i32 0, !dbg !16516
  %52 = load i8, i8* %51, align 4, !dbg !16516
  %53 = zext i8 %52 to i32, !dbg !16515
  store i32 %53, i32* %9, align 4, !dbg !16514
  %54 = load i32, i32* %9, align 4, !dbg !16517
  call void @nrf_gpiote_te_default(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %54) #10, !dbg !16518
  %55 = load i32, i32* %5, align 4, !dbg !16519
  %56 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %55, !dbg !16520
  %57 = load i16, i16* %56, align 2, !dbg !16521
  %58 = zext i16 %57 to i32, !dbg !16521
  %59 = and i32 %58, -57377, !dbg !16521
  %60 = trunc i32 %59 to i16, !dbg !16521
  store i16 %60, i16* %56, align 2, !dbg !16521
  %61 = load %struct.nrfx_gpiote_task_config_t*, %struct.nrfx_gpiote_task_config_t** %7, align 4, !dbg !16522
  %62 = getelementptr inbounds %struct.nrfx_gpiote_task_config_t, %struct.nrfx_gpiote_task_config_t* %61, i32 0, i32 1, !dbg !16524
  %63 = load i32, i32* %62, align 4, !dbg !16524
  %64 = icmp ne i32 %63, 0, !dbg !16525
  br i1 %64, label %65, label %84, !dbg !16526

65:                                               ; preds = %49
  %66 = load i32, i32* %9, align 4, !dbg !16527
  %67 = load i32, i32* %5, align 4, !dbg !16529
  %68 = load %struct.nrfx_gpiote_task_config_t*, %struct.nrfx_gpiote_task_config_t** %7, align 4, !dbg !16530
  %69 = getelementptr inbounds %struct.nrfx_gpiote_task_config_t, %struct.nrfx_gpiote_task_config_t* %68, i32 0, i32 1, !dbg !16531
  %70 = load i32, i32* %69, align 4, !dbg !16531
  %71 = load %struct.nrfx_gpiote_task_config_t*, %struct.nrfx_gpiote_task_config_t** %7, align 4, !dbg !16532
  %72 = getelementptr inbounds %struct.nrfx_gpiote_task_config_t, %struct.nrfx_gpiote_task_config_t* %71, i32 0, i32 2, !dbg !16533
  %73 = load i32, i32* %72, align 4, !dbg !16533
  call void @nrf_gpiote_task_configure(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %66, i32 noundef %67, i32 noundef %70, i32 noundef %73) #10, !dbg !16534
  %74 = load i32, i32* %9, align 4, !dbg !16535
  %75 = shl i32 %74, 13, !dbg !16535
  %76 = and i32 %75, 57344, !dbg !16535
  %77 = or i32 32, %76, !dbg !16535
  %78 = load i32, i32* %5, align 4, !dbg !16536
  %79 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %78, !dbg !16537
  %80 = load i16, i16* %79, align 2, !dbg !16538
  %81 = zext i16 %80 to i32, !dbg !16538
  %82 = or i32 %81, %77, !dbg !16538
  %83 = trunc i32 %82 to i16, !dbg !16538
  store i16 %83, i16* %79, align 2, !dbg !16538
  br label %84, !dbg !16539

84:                                               ; preds = %65, %49
  br label %85, !dbg !16540

85:                                               ; preds = %84, %42
  store i32 195887104, i32* %4, align 4, !dbg !16541
  br label %86, !dbg !16541

86:                                               ; preds = %85, %48, %27, %18
  %87 = load i32, i32* %4, align 4, !dbg !16542
  ret i32 %87, !dbg !16542
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @pin_has_trigger(i32 noundef %0) #1 !dbg !16543 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16544, metadata !DIExpression()), !dbg !16545
  %3 = load i32, i32* %2, align 4, !dbg !16546
  %4 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %3, !dbg !16546
  %5 = load i16, i16* %4, align 2, !dbg !16546
  %6 = zext i16 %5 to i32, !dbg !16546
  %7 = and i32 %6, 28, !dbg !16546
  %8 = lshr i32 %7, 2, !dbg !16546
  %9 = icmp ne i32 %8, 0, !dbg !16547
  ret i1 %9, !dbg !16548
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_task_configure(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !16549 {
  %6 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %6, metadata !16552, metadata !DIExpression()), !dbg !16553
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16554, metadata !DIExpression()), !dbg !16555
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16556, metadata !DIExpression()), !dbg !16557
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16558, metadata !DIExpression()), !dbg !16559
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16560, metadata !DIExpression()), !dbg !16561
  %11 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %6, align 4, !dbg !16562
  %12 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %11, i32 0, i32 9, !dbg !16563
  %13 = load i32, i32* %7, align 4, !dbg !16564
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i32 0, i32 %13, !dbg !16562
  %15 = load volatile i32, i32* %14, align 4, !dbg !16565
  %16 = and i32 %15, -1253121, !dbg !16565
  store volatile i32 %16, i32* %14, align 4, !dbg !16565
  %17 = load i32, i32* %8, align 4, !dbg !16566
  %18 = shl i32 %17, 8, !dbg !16567
  %19 = and i32 %18, 7936, !dbg !16568
  %20 = load i32, i32* %9, align 4, !dbg !16569
  %21 = shl i32 %20, 16, !dbg !16570
  %22 = and i32 %21, 196608, !dbg !16571
  %23 = or i32 %19, %22, !dbg !16572
  %24 = load i32, i32* %10, align 4, !dbg !16573
  %25 = shl i32 %24, 20, !dbg !16574
  %26 = and i32 %25, 1048576, !dbg !16575
  %27 = or i32 %23, %26, !dbg !16576
  %28 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %6, align 4, !dbg !16577
  %29 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %28, i32 0, i32 9, !dbg !16578
  %30 = load i32, i32* %7, align 4, !dbg !16579
  %31 = getelementptr inbounds [4 x i32], [4 x i32]* %29, i32 0, i32 %30, !dbg !16577
  %32 = load volatile i32, i32* %31, align 4, !dbg !16580
  %33 = or i32 %32, %27, !dbg !16580
  store volatile i32 %33, i32* %31, align 4, !dbg !16580
  ret void, !dbg !16581
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_global_callback_set(void (i32, i32, i8*)* noundef %0, i8* noundef %1) #1 !dbg !16582 {
  %3 = alloca void (i32, i32, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (i32, i32, i8*)* %0, void (i32, i32, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (i32, i32, i8*)** %3, metadata !16585, metadata !DIExpression()), !dbg !16586
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !16587, metadata !DIExpression()), !dbg !16588
  %5 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %3, align 4, !dbg !16589
  store void (i32, i32, i8*)* %5, void (i32, i32, i8*)** getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 1, i32 0), align 4, !dbg !16590
  %6 = load i8*, i8** %4, align 4, !dbg !16591
  store i8* %6, i8** getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 1, i32 1), align 4, !dbg !16592
  ret void, !dbg !16593
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_channel_get(i32 noundef %0, i8* noundef %1) #1 !dbg !16594 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16597, metadata !DIExpression()), !dbg !16598
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16599, metadata !DIExpression()), !dbg !16600
  %6 = load i32, i32* %4, align 4, !dbg !16601
  %7 = call zeroext i1 @pin_in_use_by_te(i32 noundef %6) #10, !dbg !16603
  br i1 %7, label %8, label %17, !dbg !16604

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4, !dbg !16605
  %10 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %9, !dbg !16605
  %11 = load i16, i16* %10, align 2, !dbg !16605
  %12 = zext i16 %11 to i32, !dbg !16605
  %13 = and i32 %12, 57344, !dbg !16605
  %14 = lshr i32 %13, 13, !dbg !16605
  %15 = trunc i32 %14 to i8, !dbg !16605
  %16 = load i8*, i8** %5, align 4, !dbg !16607
  store i8 %15, i8* %16, align 1, !dbg !16608
  store i32 195887104, i32* %3, align 4, !dbg !16609
  br label %18, !dbg !16609

17:                                               ; preds = %2
  store i32 195887108, i32* %3, align 4, !dbg !16610
  br label %18, !dbg !16610

18:                                               ; preds = %17, %8
  %19 = load i32, i32* %3, align 4, !dbg !16612
  ret i32 %19, !dbg !16612
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_init(i8 noundef zeroext %0) #1 !dbg !16613 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  store i8 %0, i8* %3, align 1
  call void @llvm.dbg.declare(metadata i8* %3, metadata !16616, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16618, metadata !DIExpression()), !dbg !16619
  %13 = load i32, i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 6), align 4, !dbg !16620
  %14 = icmp ne i32 %13, 0, !dbg !16622
  br i1 %14, label %15, label %19, !dbg !16623

15:                                               ; preds = %1
  store i32 195887109, i32* %4, align 4, !dbg !16624
  br label %16, !dbg !16626

16:                                               ; preds = %15
  br label %17, !dbg !16627

17:                                               ; preds = %16
  %18 = load i32, i32* %4, align 4, !dbg !16631
  store i32 %18, i32* %2, align 4, !dbg !16632
  br label %25, !dbg !16632

19:                                               ; preds = %1
  %20 = call i8* @memset(i8* noundef bitcast (i16* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2, i32 0) to i8*), i32 noundef 0, i32 noundef 64) #10, !dbg !16633
  %21 = call i32 @nrfx_get_irq_number.143(i8* noundef inttoptr (i32 1073766400 to i8*)) #10, !dbg !16634
  call void @arch_irq_enable(i32 noundef %21) #10, !dbg !16634
  call void @nrf_gpiote_event_clear(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef 380) #10, !dbg !16635
  call void @nrf_gpiote_int_enable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef -2147483648) #10, !dbg !16636
  store i32 1, i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 6), align 4, !dbg !16637
  store i32 1, i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 4), align 4, !dbg !16638
  store i32 195887104, i32* %4, align 4, !dbg !16639
  br label %22, !dbg !16640

22:                                               ; preds = %19
  br label %23, !dbg !16641

23:                                               ; preds = %22
  %24 = load i32, i32* %4, align 4, !dbg !16645
  store i32 %24, i32* %2, align 4, !dbg !16646
  br label %25, !dbg !16646

25:                                               ; preds = %23, %17
  %26 = load i32, i32* %2, align 4, !dbg !16647
  ret i32 %26, !dbg !16647
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrfx_get_irq_number.143(i8* noundef %0) #1 !dbg !16648 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !16649, metadata !DIExpression()), !dbg !16650
  %3 = load i8*, i8** %2, align 4, !dbg !16651
  %4 = ptrtoint i8* %3 to i32, !dbg !16651
  %5 = lshr i32 %4, 12, !dbg !16651
  %6 = trunc i32 %5 to i8, !dbg !16651
  %7 = zext i8 %6 to i32, !dbg !16652
  ret i32 %7, !dbg !16653
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_event_clear(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !16654 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !16657, metadata !DIExpression()), !dbg !16658
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16659, metadata !DIExpression()), !dbg !16660
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !16661
  %6 = load i32, i32* %4, align 4, !dbg !16662
  %7 = call i32 @nrf_gpiote_event_address_get(%struct.NRF_GPIOTE_Type* noundef %5, i32 noundef %6) #10, !dbg !16663
  %8 = inttoptr i32 %7 to i32*, !dbg !16664
  store volatile i32 0, i32* %8, align 4, !dbg !16665
  %9 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !16666
  %10 = load i32, i32* %4, align 4, !dbg !16667
  %11 = call i32 @nrf_gpiote_event_address_get(%struct.NRF_GPIOTE_Type* noundef %9, i32 noundef %10) #10, !dbg !16668
  %12 = inttoptr i32 %11 to i8*, !dbg !16669
  call void @nrf_event_readback.144(i8* noundef %12) #10, !dbg !16670
  ret void, !dbg !16671
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_int_enable(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !16672 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !16673, metadata !DIExpression()), !dbg !16674
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16675, metadata !DIExpression()), !dbg !16676
  %5 = load i32, i32* %4, align 4, !dbg !16677
  %6 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !16678
  %7 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %6, i32 0, i32 6, !dbg !16679
  store volatile i32 %5, i32* %7, align 4, !dbg !16680
  ret void, !dbg !16681
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpiote_event_address_get(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !16682 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !16687, metadata !DIExpression()), !dbg !16688
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16689, metadata !DIExpression()), !dbg !16690
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !16691
  %6 = ptrtoint %struct.NRF_GPIOTE_Type* %5 to i32, !dbg !16692
  %7 = load i32, i32* %4, align 4, !dbg !16693
  %8 = add i32 %6, %7, !dbg !16694
  ret i32 %8, !dbg !16695
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_event_readback.144(i8* noundef %0) #1 !dbg !16696 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !16697, metadata !DIExpression()), !dbg !16698
  %3 = load i8*, i8** %2, align 4, !dbg !16699
  ret void, !dbg !16700
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @nrfx_gpiote_is_init() #1 !dbg !16701 {
  %1 = load i32, i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 6), align 4, !dbg !16702
  %2 = icmp ne i32 %1, 0, !dbg !16703
  %3 = zext i1 %2 to i64, !dbg !16704
  %4 = select i1 %2, i32 1, i32 0, !dbg !16704
  %5 = icmp ne i32 %4, 0, !dbg !16704
  ret i1 %5, !dbg !16705
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_uninit() #1 !dbg !16706 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16707, metadata !DIExpression()), !dbg !16708
  store i32 0, i32* %1, align 4, !dbg !16709
  br label %6, !dbg !16711

6:                                                ; preds = %41, %0
  %7 = load i32, i32* %1, align 4, !dbg !16712
  %8 = icmp ult i32 %7, 32, !dbg !16714
  br i1 %8, label %9, label %44, !dbg !16715

9:                                                ; preds = %6
  %10 = load i32, i32* %1, align 4, !dbg !16716
  %11 = call zeroext i1 @nrf_gpio_pin_present_check(i32 noundef %10) #10, !dbg !16719
  br i1 %11, label %12, label %40, !dbg !16720

12:                                               ; preds = %9
  %13 = load i32, i32* %1, align 4, !dbg !16721
  %14 = call zeroext i1 @pin_in_use(i32 noundef %13) #10, !dbg !16722
  br i1 %14, label %15, label %40, !dbg !16723

15:                                               ; preds = %12
  %16 = load i32, i32* %1, align 4, !dbg !16724
  %17 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %16, !dbg !16727
  %18 = load i16, i16* %17, align 2, !dbg !16727
  %19 = zext i16 %18 to i32, !dbg !16727
  %20 = and i32 %19, 128, !dbg !16728
  %21 = icmp ne i32 %20, 0, !dbg !16728
  br i1 %21, label %22, label %36, !dbg !16729

22:                                               ; preds = %15
  %23 = load i32, i32* %1, align 4, !dbg !16730
  %24 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %23, !dbg !16732
  %25 = load i16, i16* %24, align 2, !dbg !16733
  %26 = zext i16 %25 to i32, !dbg !16733
  %27 = and i32 %26, -129, !dbg !16733
  %28 = trunc i32 %27 to i16, !dbg !16733
  store i16 %28, i16* %24, align 2, !dbg !16733
  %29 = load i32, i32* %1, align 4, !dbg !16734
  %30 = call zeroext i1 @pin_has_trigger(i32 noundef %29) #10, !dbg !16736
  br i1 %30, label %31, label %33, !dbg !16737

31:                                               ; preds = %22
  %32 = load i32, i32* %1, align 4, !dbg !16738
  call void @nrfx_gpiote_in_uninit(i32 noundef %32) #10, !dbg !16740
  br label %35, !dbg !16741

33:                                               ; preds = %22
  %34 = load i32, i32* %1, align 4, !dbg !16742
  call void @nrfx_gpiote_out_uninit(i32 noundef %34) #10, !dbg !16744
  br label %35

35:                                               ; preds = %33, %31
  br label %39, !dbg !16745

36:                                               ; preds = %15
  %37 = load i32, i32* %1, align 4, !dbg !16746
  %38 = call i32 @nrfx_gpiote_pin_uninit(i32 noundef %37) #10, !dbg !16748
  br label %39

39:                                               ; preds = %36, %35
  br label %40, !dbg !16749

40:                                               ; preds = %39, %12, %9
  br label %41, !dbg !16750

41:                                               ; preds = %40
  %42 = load i32, i32* %1, align 4, !dbg !16751
  %43 = add i32 %42, 1, !dbg !16751
  store i32 %43, i32* %1, align 4, !dbg !16751
  br label %6, !dbg !16752, !llvm.loop !16753

44:                                               ; preds = %6
  store i32 0, i32* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 6), align 4, !dbg !16755
  br label %45, !dbg !16756

45:                                               ; preds = %44
  br label %46, !dbg !16757

46:                                               ; preds = %45
  ret void, !dbg !16761
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_gpio_pin_present_check(i32 noundef %0) #1 !dbg !16762 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16763, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16765, metadata !DIExpression()), !dbg !16766
  %5 = load i32, i32* %2, align 4, !dbg !16767
  %6 = lshr i32 %5, 5, !dbg !16768
  store i32 %6, i32* %3, align 4, !dbg !16766
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16769, metadata !DIExpression()), !dbg !16770
  store i32 0, i32* %4, align 4, !dbg !16770
  %7 = load i32, i32* %3, align 4, !dbg !16771
  switch i32 %7, label %9 [
    i32 0, label %8
  ], !dbg !16772

8:                                                ; preds = %1
  store i32 -1, i32* %4, align 4, !dbg !16773
  br label %9, !dbg !16775

9:                                                ; preds = %1, %8
  %10 = load i32, i32* %2, align 4, !dbg !16776
  %11 = and i32 %10, 31, !dbg !16776
  store i32 %11, i32* %2, align 4, !dbg !16776
  %12 = load i32, i32* %4, align 4, !dbg !16777
  %13 = load i32, i32* %2, align 4, !dbg !16778
  %14 = shl i32 1, %13, !dbg !16779
  %15 = and i32 %12, %14, !dbg !16780
  %16 = icmp ne i32 %15, 0, !dbg !16781
  %17 = zext i1 %16 to i64, !dbg !16781
  %18 = select i1 %16, i32 1, i32 0, !dbg !16781
  %19 = icmp ne i32 %18, 0, !dbg !16781
  ret i1 %19, !dbg !16782
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_in_uninit(i32 noundef %0) #1 !dbg !16783 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16784, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16786, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.declare(metadata i8* %4, metadata !16788, metadata !DIExpression()), !dbg !16789
  %5 = load i32, i32* %2, align 4, !dbg !16790
  %6 = call zeroext i1 @pin_in_use(i32 noundef %5) #10, !dbg !16792
  br i1 %6, label %8, label %7, !dbg !16793

7:                                                ; preds = %1
  br label %45, !dbg !16794

8:                                                ; preds = %1
  %9 = load i32, i32* %2, align 4, !dbg !16796
  %10 = call zeroext i1 @pin_in_use_by_te(i32 noundef %9) #10, !dbg !16797
  br i1 %10, label %11, label %15, !dbg !16797

11:                                               ; preds = %8
  %12 = load i32, i32* %2, align 4, !dbg !16798
  %13 = call zeroext i8 @pin_te_get(i32 noundef %12) #10, !dbg !16799
  %14 = zext i8 %13 to i32, !dbg !16799
  br label %16, !dbg !16797

15:                                               ; preds = %8
  br label %16, !dbg !16797

16:                                               ; preds = %15, %11
  %17 = phi i32 [ %14, %11 ], [ 255, %15 ], !dbg !16797
  %18 = trunc i32 %17 to i8, !dbg !16797
  store i8 %18, i8* %4, align 1, !dbg !16800
  %19 = load i32, i32* %2, align 4, !dbg !16801
  %20 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %19, !dbg !16803
  %21 = load i16, i16* %20, align 2, !dbg !16803
  %22 = zext i16 %21 to i32, !dbg !16803
  %23 = and i32 %22, 64, !dbg !16804
  %24 = icmp ne i32 %23, 0, !dbg !16804
  br i1 %24, label %25, label %33, !dbg !16805

25:                                               ; preds = %16
  %26 = load i32, i32* %2, align 4, !dbg !16806
  call void @pin_handler_trigger_uninit(i32 noundef %26) #10, !dbg !16808
  %27 = load i32, i32* %2, align 4, !dbg !16809
  %28 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %27, !dbg !16810
  %29 = load i16, i16* %28, align 2, !dbg !16811
  %30 = zext i16 %29 to i32, !dbg !16811
  %31 = and i32 %30, -65, !dbg !16811
  %32 = trunc i32 %31 to i16, !dbg !16811
  store i16 %32, i16* %28, align 2, !dbg !16811
  br label %36, !dbg !16812

33:                                               ; preds = %16
  %34 = load i32, i32* %2, align 4, !dbg !16813
  %35 = call i32 @nrfx_gpiote_pin_uninit(i32 noundef %34) #10, !dbg !16815
  store i32 %35, i32* %3, align 4, !dbg !16816
  br label %36

36:                                               ; preds = %33, %25
  %37 = load i8, i8* %4, align 1, !dbg !16817
  %38 = zext i8 %37 to i32, !dbg !16817
  %39 = icmp ne i32 %38, 255, !dbg !16819
  br i1 %39, label %40, label %43, !dbg !16820

40:                                               ; preds = %36
  %41 = load i8, i8* %4, align 1, !dbg !16821
  %42 = call i32 @nrfx_gpiote_channel_free(i8 noundef zeroext %41) #10, !dbg !16823
  br label %43, !dbg !16824

43:                                               ; preds = %40, %36
  %44 = load i32, i32* %3, align 4, !dbg !16825
  br label %45, !dbg !16826

45:                                               ; preds = %43, %7
  ret void, !dbg !16826
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_uninit(i32 noundef %0) #1 !dbg !16827 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16828, metadata !DIExpression()), !dbg !16829
  call void @llvm.dbg.declare(metadata i8* %3, metadata !16830, metadata !DIExpression()), !dbg !16831
  %5 = load i32, i32* %2, align 4, !dbg !16832
  %6 = call zeroext i1 @pin_in_use_by_te(i32 noundef %5) #10, !dbg !16833
  br i1 %6, label %7, label %11, !dbg !16833

7:                                                ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !16834
  %9 = call zeroext i8 @pin_te_get(i32 noundef %8) #10, !dbg !16835
  %10 = zext i8 %9 to i32, !dbg !16835
  br label %12, !dbg !16833

11:                                               ; preds = %1
  br label %12, !dbg !16833

12:                                               ; preds = %11, %7
  %13 = phi i32 [ %10, %7 ], [ 255, %11 ], !dbg !16833
  %14 = trunc i32 %13 to i8, !dbg !16833
  store i8 %14, i8* %3, align 1, !dbg !16831
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16836, metadata !DIExpression()), !dbg !16837
  %15 = load i32, i32* %2, align 4, !dbg !16838
  %16 = call i32 @nrfx_gpiote_pin_uninit(i32 noundef %15) #10, !dbg !16839
  store i32 %16, i32* %4, align 4, !dbg !16837
  %17 = load i8, i8* %3, align 1, !dbg !16840
  %18 = zext i8 %17 to i32, !dbg !16840
  %19 = icmp ne i32 %18, 255, !dbg !16842
  br i1 %19, label %20, label %23, !dbg !16843

20:                                               ; preds = %12
  %21 = load i8, i8* %3, align 1, !dbg !16844
  %22 = call i32 @nrfx_gpiote_channel_free(i8 noundef zeroext %21) #10, !dbg !16846
  br label %23, !dbg !16847

23:                                               ; preds = %20, %12
  %24 = load i32, i32* %4, align 4, !dbg !16848
  ret void, !dbg !16849
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_channel_free(i8 noundef zeroext %0) #1 !dbg !16850 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !16851, metadata !DIExpression()), !dbg !16852
  %3 = load i8, i8* %2, align 1, !dbg !16853
  %4 = call i32 @nrfx_flag32_free(i32* noundef getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 3), i8 noundef zeroext %3) #10, !dbg !16854
  ret i32 %4, !dbg !16855
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_channel_alloc(i8* noundef %0) #1 !dbg !16856 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !16859, metadata !DIExpression()), !dbg !16860
  %3 = load i8*, i8** %2, align 4, !dbg !16861
  %4 = call i32 @nrfx_flag32_alloc(i32* noundef getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 3), i8* noundef %3) #10, !dbg !16862
  ret i32 %4, !dbg !16863
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_out_init(i32 noundef %0, %struct.nrfx_gpiote_out_config_t* noundef %1) #1 !dbg !16864 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.nrfx_gpiote_out_config_t*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16875, metadata !DIExpression()), !dbg !16876
  store %struct.nrfx_gpiote_out_config_t* %1, %struct.nrfx_gpiote_out_config_t** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_out_config_t** %5, metadata !16877, metadata !DIExpression()), !dbg !16878
  call void @llvm.dbg.declare(metadata i8* %6, metadata !16879, metadata !DIExpression()), !dbg !16880
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16881, metadata !DIExpression()), !dbg !16882
  %8 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %5, align 4, !dbg !16883
  %9 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %8, i32 0, i32 2, !dbg !16885
  %10 = load i8, i8* %9, align 4, !dbg !16885
  %11 = trunc i8 %10 to i1, !dbg !16885
  br i1 %11, label %12, label %19, !dbg !16886

12:                                               ; preds = %2
  %13 = call i32 @nrfx_gpiote_channel_alloc(i8* noundef %6) #10, !dbg !16887
  store i32 %13, i32* %7, align 4, !dbg !16889
  %14 = load i32, i32* %7, align 4, !dbg !16890
  %15 = icmp ne i32 %14, 195887104, !dbg !16892
  br i1 %15, label %16, label %18, !dbg !16893

16:                                               ; preds = %12
  %17 = load i32, i32* %7, align 4, !dbg !16894
  store i32 %17, i32* %3, align 4, !dbg !16896
  br label %37, !dbg !16896

18:                                               ; preds = %12
  br label %20, !dbg !16897

19:                                               ; preds = %2
  store i8 -1, i8* %6, align 1, !dbg !16898
  br label %20

20:                                               ; preds = %19, %18
  %21 = load i32, i32* %4, align 4, !dbg !16900
  %22 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %5, align 4, !dbg !16901
  %23 = load i8, i8* %6, align 1, !dbg !16902
  %24 = call i32 @nrfx_gpiote_out_prealloc_init(i32 noundef %21, %struct.nrfx_gpiote_out_config_t* noundef %22, i8 noundef zeroext %23) #10, !dbg !16903
  store i32 %24, i32* %7, align 4, !dbg !16904
  %25 = load i32, i32* %7, align 4, !dbg !16905
  %26 = icmp eq i32 %25, 195887115, !dbg !16907
  br i1 %26, label %27, label %35, !dbg !16908

27:                                               ; preds = %20
  %28 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %5, align 4, !dbg !16909
  %29 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %28, i32 0, i32 2, !dbg !16910
  %30 = load i8, i8* %29, align 4, !dbg !16910
  %31 = trunc i8 %30 to i1, !dbg !16910
  br i1 %31, label %32, label %35, !dbg !16911

32:                                               ; preds = %27
  %33 = load i8, i8* %6, align 1, !dbg !16912
  %34 = call i32 @nrfx_gpiote_channel_free(i8 noundef zeroext %33) #10, !dbg !16914
  br label %35, !dbg !16915

35:                                               ; preds = %32, %27, %20
  %36 = load i32, i32* %7, align 4, !dbg !16916
  store i32 %36, i32* %3, align 4, !dbg !16917
  br label %37, !dbg !16917

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %3, align 4, !dbg !16918
  ret i32 %38, !dbg !16918
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_out_prealloc_init(i32 noundef %0, %struct.nrfx_gpiote_out_config_t* noundef %1, i8 noundef zeroext %2) #1 !dbg !16919 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.nrfx_gpiote_out_config_t*, align 4
  %7 = alloca i8, align 1
  %8 = alloca %struct.nrfx_gpiote_output_config_t, align 4
  %9 = alloca %struct.nrfx_gpiote_task_config_t, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16922, metadata !DIExpression()), !dbg !16923
  store %struct.nrfx_gpiote_out_config_t* %1, %struct.nrfx_gpiote_out_config_t** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_out_config_t** %6, metadata !16924, metadata !DIExpression()), !dbg !16925
  store i8 %2, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !16926, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_output_config_t* %8, metadata !16928, metadata !DIExpression()), !dbg !16929
  %12 = bitcast %struct.nrfx_gpiote_output_config_t* %8 to i8*, !dbg !16929
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %12, i8* align 4 bitcast (%struct.nrfx_gpiote_output_config_t* @__const.nrfx_gpiote_out_prealloc_init.config to i8*), i32 12, i1 false), !dbg !16929
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_task_config_t* %9, metadata !16930, metadata !DIExpression()), !dbg !16931
  call void @llvm.dbg.declare(metadata i8* %10, metadata !16932, metadata !DIExpression()), !dbg !16933
  %13 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %6, align 4, !dbg !16934
  %14 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %13, i32 0, i32 2, !dbg !16935
  %15 = load i8, i8* %14, align 4, !dbg !16935
  %16 = trunc i8 %15 to i1, !dbg !16935
  %17 = zext i1 %16 to i8, !dbg !16933
  store i8 %17, i8* %10, align 1, !dbg !16933
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16936, metadata !DIExpression()), !dbg !16937
  %18 = load i32, i32* %5, align 4, !dbg !16938
  %19 = call zeroext i1 @pin_in_use(i32 noundef %18) #10, !dbg !16940
  br i1 %19, label %20, label %21, !dbg !16941

20:                                               ; preds = %3
  store i32 195887115, i32* %4, align 4, !dbg !16942
  br label %62, !dbg !16942

21:                                               ; preds = %3
  %22 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %6, align 4, !dbg !16944
  %23 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %22, i32 0, i32 1, !dbg !16946
  %24 = load i32, i32* %23, align 4, !dbg !16946
  %25 = icmp eq i32 %24, 1, !dbg !16947
  br i1 %25, label %26, label %28, !dbg !16948

26:                                               ; preds = %21
  %27 = load i32, i32* %5, align 4, !dbg !16949
  call void @nrf_gpio_pin_set.151(i32 noundef %27) #10, !dbg !16951
  br label %28, !dbg !16952

28:                                               ; preds = %26, %21
  %29 = load i8, i8* %10, align 1, !dbg !16953
  %30 = trunc i8 %29 to i1, !dbg !16953
  br i1 %30, label %31, label %42, !dbg !16955

31:                                               ; preds = %28
  %32 = load i8, i8* %7, align 1, !dbg !16956
  %33 = getelementptr inbounds %struct.nrfx_gpiote_task_config_t, %struct.nrfx_gpiote_task_config_t* %9, i32 0, i32 0, !dbg !16958
  store i8 %32, i8* %33, align 4, !dbg !16959
  %34 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %6, align 4, !dbg !16960
  %35 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %34, i32 0, i32 1, !dbg !16961
  %36 = load i32, i32* %35, align 4, !dbg !16961
  %37 = getelementptr inbounds %struct.nrfx_gpiote_task_config_t, %struct.nrfx_gpiote_task_config_t* %9, i32 0, i32 2, !dbg !16962
  store i32 %36, i32* %37, align 4, !dbg !16963
  %38 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %6, align 4, !dbg !16964
  %39 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %38, i32 0, i32 0, !dbg !16965
  %40 = load i32, i32* %39, align 4, !dbg !16965
  %41 = getelementptr inbounds %struct.nrfx_gpiote_task_config_t, %struct.nrfx_gpiote_task_config_t* %9, i32 0, i32 1, !dbg !16966
  store i32 %40, i32* %41, align 4, !dbg !16967
  br label %42, !dbg !16968

42:                                               ; preds = %31, %28
  %43 = load i32, i32* %5, align 4, !dbg !16969
  %44 = load i8, i8* %10, align 1, !dbg !16970
  %45 = trunc i8 %44 to i1, !dbg !16970
  br i1 %45, label %46, label %47, !dbg !16970

46:                                               ; preds = %42
  br label %48, !dbg !16970

47:                                               ; preds = %42
  br label %48, !dbg !16970

48:                                               ; preds = %47, %46
  %49 = phi %struct.nrfx_gpiote_task_config_t* [ %9, %46 ], [ null, %47 ], !dbg !16970
  %50 = call i32 @nrfx_gpiote_output_configure(i32 noundef %43, %struct.nrfx_gpiote_output_config_t* noundef %8, %struct.nrfx_gpiote_task_config_t* noundef %49) #10, !dbg !16971
  store i32 %50, i32* %11, align 4, !dbg !16972
  %51 = load i32, i32* %11, align 4, !dbg !16973
  %52 = icmp eq i32 %51, 195887104, !dbg !16975
  br i1 %52, label %53, label %60, !dbg !16976

53:                                               ; preds = %48
  %54 = load i32, i32* %5, align 4, !dbg !16977
  %55 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %54, !dbg !16979
  %56 = load i16, i16* %55, align 2, !dbg !16980
  %57 = zext i16 %56 to i32, !dbg !16980
  %58 = or i32 %57, 128, !dbg !16980
  %59 = trunc i32 %58 to i16, !dbg !16980
  store i16 %59, i16* %55, align 2, !dbg !16980
  br label %60, !dbg !16981

60:                                               ; preds = %53, %48
  %61 = load i32, i32* %11, align 4, !dbg !16982
  store i32 %61, i32* %4, align 4, !dbg !16983
  br label %62, !dbg !16983

62:                                               ; preds = %60, %20
  %63 = load i32, i32* %4, align 4, !dbg !16984
  ret i32 %63, !dbg !16984
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_pin_set.151(i32 noundef %0) #1 !dbg !16985 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16986, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !16988, metadata !DIExpression()), !dbg !16989
  %4 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %2) #10, !dbg !16990
  store %struct.NRF_GPIO_Type* %4, %struct.NRF_GPIO_Type** %3, align 4, !dbg !16989
  %5 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !16991
  %6 = load i32, i32* %2, align 4, !dbg !16992
  %7 = shl i32 1, %6, !dbg !16993
  call void @nrf_gpio_port_out_set.152(%struct.NRF_GPIO_Type* noundef %5, i32 noundef %7) #10, !dbg !16994
  ret void, !dbg !16995
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_port_out_set.152(%struct.NRF_GPIO_Type* noundef %0, i32 noundef %1) #1 !dbg !16996 {
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !16999, metadata !DIExpression()), !dbg !17000
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17001, metadata !DIExpression()), !dbg !17002
  %5 = load i32, i32* %4, align 4, !dbg !17003
  %6 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17004
  %7 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %6, i32 0, i32 2, !dbg !17005
  store volatile i32 %5, i32* %7, align 4, !dbg !17006
  ret void, !dbg !17007
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_set(i32 noundef %0) #1 !dbg !17008 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17009, metadata !DIExpression()), !dbg !17010
  %3 = load i32, i32* %2, align 4, !dbg !17011
  call void @nrf_gpio_pin_set.151(i32 noundef %3) #10, !dbg !17012
  ret void, !dbg !17013
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_clear(i32 noundef %0) #1 !dbg !17014 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17015, metadata !DIExpression()), !dbg !17016
  %3 = load i32, i32* %2, align 4, !dbg !17017
  call void @nrf_gpio_pin_clear.153(i32 noundef %3) #10, !dbg !17018
  ret void, !dbg !17019
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_pin_clear.153(i32 noundef %0) #1 !dbg !17020 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17021, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !17023, metadata !DIExpression()), !dbg !17024
  %4 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %2) #10, !dbg !17025
  store %struct.NRF_GPIO_Type* %4, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17024
  %5 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17026
  %6 = load i32, i32* %2, align 4, !dbg !17027
  %7 = shl i32 1, %6, !dbg !17028
  call void @nrf_gpio_port_out_clear.154(%struct.NRF_GPIO_Type* noundef %5, i32 noundef %7) #10, !dbg !17029
  ret void, !dbg !17030
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_port_out_clear.154(%struct.NRF_GPIO_Type* noundef %0, i32 noundef %1) #1 !dbg !17031 {
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !17032, metadata !DIExpression()), !dbg !17033
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17034, metadata !DIExpression()), !dbg !17035
  %5 = load i32, i32* %4, align 4, !dbg !17036
  %6 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17037
  %7 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %6, i32 0, i32 3, !dbg !17038
  store volatile i32 %5, i32* %7, align 4, !dbg !17039
  ret void, !dbg !17040
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_toggle(i32 noundef %0) #1 !dbg !17041 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17042, metadata !DIExpression()), !dbg !17043
  %3 = load i32, i32* %2, align 4, !dbg !17044
  call void @nrf_gpio_pin_toggle(i32 noundef %3) #10, !dbg !17045
  ret void, !dbg !17046
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_pin_toggle(i32 noundef %0) #1 !dbg !17047 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17048, metadata !DIExpression()), !dbg !17049
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !17050, metadata !DIExpression()), !dbg !17051
  %5 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %2) #10, !dbg !17052
  store %struct.NRF_GPIO_Type* %5, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17051
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17053, metadata !DIExpression()), !dbg !17054
  %6 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17055
  %7 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %6, i32 0, i32 1, !dbg !17056
  %8 = load volatile i32, i32* %7, align 4, !dbg !17056
  store i32 %8, i32* %4, align 4, !dbg !17054
  %9 = load i32, i32* %4, align 4, !dbg !17057
  %10 = xor i32 %9, -1, !dbg !17058
  %11 = load i32, i32* %2, align 4, !dbg !17059
  %12 = shl i32 1, %11, !dbg !17060
  %13 = and i32 %10, %12, !dbg !17061
  %14 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17062
  %15 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %14, i32 0, i32 2, !dbg !17063
  store volatile i32 %13, i32* %15, align 4, !dbg !17064
  %16 = load i32, i32* %4, align 4, !dbg !17065
  %17 = load i32, i32* %2, align 4, !dbg !17066
  %18 = shl i32 1, %17, !dbg !17067
  %19 = and i32 %16, %18, !dbg !17068
  %20 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17069
  %21 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %20, i32 0, i32 3, !dbg !17070
  store volatile i32 %19, i32* %21, align 4, !dbg !17071
  ret void, !dbg !17072
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_task_enable(i32 noundef %0) #1 !dbg !17073 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17074, metadata !DIExpression()), !dbg !17075
  %3 = load i32, i32* %2, align 4, !dbg !17076
  %4 = call zeroext i8 @pin_te_get(i32 noundef %3) #10, !dbg !17077
  %5 = zext i8 %4 to i32, !dbg !17078
  call void @nrf_gpiote_task_enable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %5) #10, !dbg !17079
  ret void, !dbg !17080
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_task_enable(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17081 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17082, metadata !DIExpression()), !dbg !17083
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17084, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17086, metadata !DIExpression()), !dbg !17087
  %6 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17088
  %7 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %6, i32 0, i32 9, !dbg !17089
  %8 = load i32, i32* %4, align 4, !dbg !17090
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i32 0, i32 %8, !dbg !17088
  %10 = load volatile i32, i32* %9, align 4, !dbg !17088
  %11 = or i32 %10, 3, !dbg !17091
  store i32 %11, i32* %5, align 4, !dbg !17087
  %12 = load i32, i32* %5, align 4, !dbg !17092
  %13 = or i32 %12, 7936, !dbg !17093
  %14 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17094
  %15 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %14, i32 0, i32 9, !dbg !17095
  %16 = load i32, i32* %4, align 4, !dbg !17096
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* %15, i32 0, i32 %16, !dbg !17094
  store volatile i32 %13, i32* %17, align 4, !dbg !17097
  call void asm sideeffect "nop", ""() #9, !dbg !17098, !srcloc !17099
  call void asm sideeffect "nop", ""() #9, !dbg !17100, !srcloc !17101
  call void asm sideeffect "nop", ""() #9, !dbg !17102, !srcloc !17103
  %18 = load i32, i32* %5, align 4, !dbg !17104
  %19 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17105
  %20 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %19, i32 0, i32 9, !dbg !17106
  %21 = load i32, i32* %4, align 4, !dbg !17107
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %20, i32 0, i32 %21, !dbg !17105
  store volatile i32 %18, i32* %22, align 4, !dbg !17108
  ret void, !dbg !17109
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_task_disable(i32 noundef %0) #1 !dbg !17110 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17111, metadata !DIExpression()), !dbg !17112
  %3 = load i32, i32* %2, align 4, !dbg !17113
  %4 = call zeroext i8 @pin_te_get(i32 noundef %3) #10, !dbg !17114
  %5 = zext i8 %4 to i32, !dbg !17115
  call void @nrf_gpiote_task_disable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %5) #10, !dbg !17116
  ret void, !dbg !17117
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_task_disable(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17118 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17119, metadata !DIExpression()), !dbg !17120
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17121, metadata !DIExpression()), !dbg !17122
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17123
  %6 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %5, i32 0, i32 9, !dbg !17124
  %7 = load i32, i32* %4, align 4, !dbg !17125
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i32 0, i32 %7, !dbg !17123
  %9 = load volatile i32, i32* %8, align 4, !dbg !17126
  %10 = and i32 %9, -4, !dbg !17126
  store volatile i32 %10, i32* %8, align 4, !dbg !17126
  ret void, !dbg !17127
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_out_task_get(i32 noundef %0) #1 !dbg !17128 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17131, metadata !DIExpression()), !dbg !17132
  %3 = load i32, i32* %2, align 4, !dbg !17133
  %4 = call zeroext i8 @pin_te_get(i32 noundef %3) #10, !dbg !17134
  %5 = call i32 @nrf_gpiote_out_task_get(i8 noundef zeroext %4) #10, !dbg !17135
  ret i32 %5, !dbg !17136
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpiote_out_task_get(i8 noundef zeroext %0) #1 !dbg !17137 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !17140, metadata !DIExpression()), !dbg !17141
  %3 = load i8, i8* %2, align 1, !dbg !17142
  %4 = zext i8 %3 to i32, !dbg !17142
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* null, i32 0, i32 %4, !dbg !17142
  %6 = ptrtoint i32* %5 to i32, !dbg !17142
  ret i32 %6, !dbg !17143
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_out_task_addr_get(i32 noundef %0) #1 !dbg !17144 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17147, metadata !DIExpression()), !dbg !17148
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17149, metadata !DIExpression()), !dbg !17150
  %4 = load i32, i32* %2, align 4, !dbg !17151
  %5 = call i32 @nrfx_gpiote_out_task_get(i32 noundef %4) #10, !dbg !17152
  store i32 %5, i32* %3, align 4, !dbg !17150
  %6 = load i32, i32* %3, align 4, !dbg !17153
  %7 = call i32 @nrf_gpiote_task_address_get(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %6) #10, !dbg !17154
  ret i32 %7, !dbg !17155
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpiote_task_address_get(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17156 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17159, metadata !DIExpression()), !dbg !17160
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17161, metadata !DIExpression()), !dbg !17162
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17163
  %6 = ptrtoint %struct.NRF_GPIOTE_Type* %5 to i32, !dbg !17164
  %7 = load i32, i32* %4, align 4, !dbg !17165
  %8 = add i32 %6, %7, !dbg !17166
  ret i32 %8, !dbg !17167
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_task_force(i32 noundef %0, i8 noundef zeroext %1) #1 !dbg !17168 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17171, metadata !DIExpression()), !dbg !17172
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !17173, metadata !DIExpression()), !dbg !17174
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17175, metadata !DIExpression()), !dbg !17176
  %6 = load i8, i8* %4, align 1, !dbg !17177
  %7 = zext i8 %6 to i32, !dbg !17177
  %8 = icmp ne i32 %7, 0, !dbg !17177
  %9 = zext i1 %8 to i64, !dbg !17177
  %10 = select i1 %8, i32 1, i32 0, !dbg !17177
  store i32 %10, i32* %5, align 4, !dbg !17176
  %11 = load i32, i32* %3, align 4, !dbg !17178
  %12 = call zeroext i8 @pin_te_get(i32 noundef %11) #10, !dbg !17179
  %13 = zext i8 %12 to i32, !dbg !17180
  %14 = load i32, i32* %5, align 4, !dbg !17181
  call void @nrf_gpiote_task_force(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %13, i32 noundef %14) #10, !dbg !17182
  ret void, !dbg !17183
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_task_force(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !17184 {
  %4 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %4, metadata !17187, metadata !DIExpression()), !dbg !17188
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17189, metadata !DIExpression()), !dbg !17190
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !17191, metadata !DIExpression()), !dbg !17192
  %7 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %4, align 4, !dbg !17193
  %8 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %7, i32 0, i32 9, !dbg !17194
  %9 = load i32, i32* %5, align 4, !dbg !17195
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i32 0, i32 %9, !dbg !17193
  %11 = load volatile i32, i32* %10, align 4, !dbg !17193
  %12 = and i32 %11, -1048577, !dbg !17196
  %13 = load i32, i32* %6, align 4, !dbg !17197
  %14 = shl i32 %13, 20, !dbg !17198
  %15 = and i32 %14, 1048576, !dbg !17199
  %16 = or i32 %12, %15, !dbg !17200
  %17 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %4, align 4, !dbg !17201
  %18 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %17, i32 0, i32 9, !dbg !17202
  %19 = load i32, i32* %5, align 4, !dbg !17203
  %20 = getelementptr inbounds [4 x i32], [4 x i32]* %18, i32 0, i32 %19, !dbg !17201
  store volatile i32 %16, i32* %20, align 4, !dbg !17204
  ret void, !dbg !17205
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_out_task_trigger(i32 noundef %0) #1 !dbg !17206 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17207, metadata !DIExpression()), !dbg !17208
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17209, metadata !DIExpression()), !dbg !17210
  %4 = load i32, i32* %2, align 4, !dbg !17211
  %5 = call zeroext i8 @pin_te_get(i32 noundef %4) #10, !dbg !17212
  %6 = call i32 @nrf_gpiote_out_task_get(i8 noundef zeroext %5) #10, !dbg !17213
  store i32 %6, i32* %3, align 4, !dbg !17210
  %7 = load i32, i32* %3, align 4, !dbg !17214
  call void @nrf_gpiote_task_trigger(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %7) #10, !dbg !17215
  ret void, !dbg !17216
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_task_trigger(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17217 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17220, metadata !DIExpression()), !dbg !17221
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17222, metadata !DIExpression()), !dbg !17223
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17224
  %6 = ptrtoint %struct.NRF_GPIOTE_Type* %5 to i32, !dbg !17225
  %7 = load i32, i32* %4, align 4, !dbg !17226
  %8 = add i32 %6, %7, !dbg !17227
  %9 = inttoptr i32 %8 to i32*, !dbg !17228
  store volatile i32 1, i32* %9, align 4, !dbg !17229
  ret void, !dbg !17230
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_in_init(i32 noundef %0, %struct.nrfx_gpiote_out_config_t* noundef %1, void (i32, i32)* noundef %2) #1 !dbg !17231 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.nrfx_gpiote_out_config_t*, align 4
  %7 = alloca void (i32, i32)*, align 4
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17244, metadata !DIExpression()), !dbg !17245
  store %struct.nrfx_gpiote_out_config_t* %1, %struct.nrfx_gpiote_out_config_t** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_out_config_t** %6, metadata !17246, metadata !DIExpression()), !dbg !17247
  store void (i32, i32)* %2, void (i32, i32)** %7, align 4
  call void @llvm.dbg.declare(metadata void (i32, i32)** %7, metadata !17248, metadata !DIExpression()), !dbg !17249
  call void @llvm.dbg.declare(metadata i8* %8, metadata !17250, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.declare(metadata i32* %9, metadata !17252, metadata !DIExpression()), !dbg !17253
  %10 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %6, align 4, !dbg !17254
  %11 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %10, i32 0, i32 2, !dbg !17256
  %12 = load i8, i8* %11, align 4, !dbg !17256
  %13 = lshr i8 %12, 1, !dbg !17256
  %14 = and i8 %13, 1, !dbg !17256
  %15 = trunc i8 %14 to i1, !dbg !17256
  br i1 %15, label %16, label %23, !dbg !17257

16:                                               ; preds = %3
  %17 = call i32 @nrfx_gpiote_channel_alloc(i8* noundef %8) #10, !dbg !17258
  store i32 %17, i32* %9, align 4, !dbg !17260
  %18 = load i32, i32* %9, align 4, !dbg !17261
  %19 = icmp ne i32 %18, 195887104, !dbg !17263
  br i1 %19, label %20, label %22, !dbg !17264

20:                                               ; preds = %16
  %21 = load i32, i32* %9, align 4, !dbg !17265
  store i32 %21, i32* %4, align 4, !dbg !17267
  br label %44, !dbg !17267

22:                                               ; preds = %16
  br label %24, !dbg !17268

23:                                               ; preds = %3
  store i8 -1, i8* %8, align 1, !dbg !17269
  br label %24

24:                                               ; preds = %23, %22
  %25 = load i32, i32* %5, align 4, !dbg !17271
  %26 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %6, align 4, !dbg !17272
  %27 = load i8, i8* %8, align 1, !dbg !17273
  %28 = load void (i32, i32)*, void (i32, i32)** %7, align 4, !dbg !17274
  %29 = call i32 @nrfx_gpiote_in_prealloc_init(i32 noundef %25, %struct.nrfx_gpiote_out_config_t* noundef %26, i8 noundef zeroext %27, void (i32, i32)* noundef %28) #10, !dbg !17275
  store i32 %29, i32* %9, align 4, !dbg !17276
  %30 = load i32, i32* %9, align 4, !dbg !17277
  %31 = icmp eq i32 %30, 195887106, !dbg !17279
  br i1 %31, label %32, label %42, !dbg !17280

32:                                               ; preds = %24
  %33 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %6, align 4, !dbg !17281
  %34 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %33, i32 0, i32 2, !dbg !17282
  %35 = load i8, i8* %34, align 4, !dbg !17282
  %36 = lshr i8 %35, 1, !dbg !17282
  %37 = and i8 %36, 1, !dbg !17282
  %38 = trunc i8 %37 to i1, !dbg !17282
  br i1 %38, label %39, label %42, !dbg !17283

39:                                               ; preds = %32
  %40 = load i8, i8* %8, align 1, !dbg !17284
  %41 = call i32 @nrfx_gpiote_channel_free(i8 noundef zeroext %40) #10, !dbg !17286
  br label %42, !dbg !17287

42:                                               ; preds = %39, %32, %24
  %43 = load i32, i32* %9, align 4, !dbg !17288
  store i32 %43, i32* %4, align 4, !dbg !17289
  br label %44, !dbg !17289

44:                                               ; preds = %42, %20
  %45 = load i32, i32* %4, align 4, !dbg !17290
  ret i32 %45, !dbg !17290
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_in_prealloc_init(i32 noundef %0, %struct.nrfx_gpiote_out_config_t* noundef %1, i8 noundef zeroext %2, void (i32, i32)* noundef %3) #1 !dbg !17291 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.nrfx_gpiote_out_config_t*, align 4
  %8 = alloca i8, align 1
  %9 = alloca void (i32, i32)*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca %struct.nrfx_gpiote_trigger_config_t, align 4
  %14 = alloca %struct.nrfx_gpiote_handler_config_t, align 4
  %15 = alloca %struct.nrfx_gpiote_output_config_t, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !17294, metadata !DIExpression()), !dbg !17295
  store %struct.nrfx_gpiote_out_config_t* %1, %struct.nrfx_gpiote_out_config_t** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_out_config_t** %7, metadata !17296, metadata !DIExpression()), !dbg !17297
  store i8 %2, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !17298, metadata !DIExpression()), !dbg !17299
  store void (i32, i32)* %3, void (i32, i32)** %9, align 4
  call void @llvm.dbg.declare(metadata void (i32, i32)** %9, metadata !17300, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.declare(metadata i32* %10, metadata !17302, metadata !DIExpression()), !dbg !17303
  call void @llvm.dbg.declare(metadata i8* %11, metadata !17304, metadata !DIExpression()), !dbg !17305
  store i8 0, i8* %11, align 1, !dbg !17305
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !17306, metadata !DIExpression()), !dbg !17307
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_trigger_config_t* %13, metadata !17308, metadata !DIExpression()), !dbg !17309
  %16 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %13, i32 0, i32 0, !dbg !17310
  %17 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %7, align 4, !dbg !17311
  %18 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %17, i32 0, i32 0, !dbg !17312
  %19 = load i32, i32* %18, align 4, !dbg !17312
  %20 = call i32 @gpiote_polarity_to_trigger(i32 noundef %19) #10, !dbg !17313
  store i32 %20, i32* %16, align 4, !dbg !17310
  %21 = getelementptr inbounds %struct.nrfx_gpiote_trigger_config_t, %struct.nrfx_gpiote_trigger_config_t* %13, i32 0, i32 1, !dbg !17310
  %22 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %7, align 4, !dbg !17314
  %23 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %22, i32 0, i32 2, !dbg !17315
  %24 = load i8, i8* %23, align 4, !dbg !17315
  %25 = lshr i8 %24, 1, !dbg !17315
  %26 = and i8 %25, 1, !dbg !17315
  %27 = trunc i8 %26 to i1, !dbg !17315
  br i1 %27, label %28, label %29, !dbg !17314

28:                                               ; preds = %4
  br label %30, !dbg !17314

29:                                               ; preds = %4
  br label %30, !dbg !17314

30:                                               ; preds = %29, %28
  %31 = phi i8* [ %8, %28 ], [ null, %29 ], !dbg !17314
  store i8* %31, i8** %21, align 4, !dbg !17310
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_handler_config_t* %14, metadata !17316, metadata !DIExpression()), !dbg !17317
  %32 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %14, i32 0, i32 0, !dbg !17318
  store void (i32, i32, i8*)* @legacy_handler, void (i32, i32, i8*)** %32, align 4, !dbg !17318
  %33 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %14, i32 0, i32 1, !dbg !17318
  %34 = load void (i32, i32)*, void (i32, i32)** %9, align 4, !dbg !17319
  %35 = bitcast void (i32, i32)* %34 to i8*, !dbg !17320
  store i8* %35, i8** %33, align 4, !dbg !17318
  %36 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %7, align 4, !dbg !17321
  %37 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %36, i32 0, i32 2, !dbg !17323
  %38 = load i8, i8* %37, align 4, !dbg !17323
  %39 = and i8 %38, 1, !dbg !17323
  %40 = trunc i8 %39 to i1, !dbg !17323
  br i1 %40, label %41, label %50, !dbg !17324

41:                                               ; preds = %30
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_output_config_t* %15, metadata !17325, metadata !DIExpression()), !dbg !17327
  %42 = bitcast %struct.nrfx_gpiote_output_config_t* %15 to i8*, !dbg !17327
  call void @llvm.memset.p0i8.i32(i8* align 4 %42, i8 0, i32 12, i1 false), !dbg !17327
  store i8 1, i8* %11, align 1, !dbg !17328
  %43 = load i32, i32* %6, align 4, !dbg !17329
  %44 = call i32 @nrfx_gpiote_output_configure(i32 noundef %43, %struct.nrfx_gpiote_output_config_t* noundef %15, %struct.nrfx_gpiote_task_config_t* noundef null) #10, !dbg !17330
  store i32 %44, i32* %10, align 4, !dbg !17331
  %45 = load i32, i32* %10, align 4, !dbg !17332
  %46 = icmp ne i32 %45, 195887104, !dbg !17334
  br i1 %46, label %47, label %49, !dbg !17335

47:                                               ; preds = %41
  %48 = load i32, i32* %10, align 4, !dbg !17336
  store i32 %48, i32* %5, align 4, !dbg !17338
  br label %89, !dbg !17338

49:                                               ; preds = %41
  br label %55, !dbg !17339

50:                                               ; preds = %30
  %51 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %7, align 4, !dbg !17340
  %52 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %51, i32 0, i32 1, !dbg !17342
  %53 = load i32, i32* %52, align 4, !dbg !17342
  %54 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !17343
  store i32 %53, i32* %54, align 4, !dbg !17344
  br label %55

55:                                               ; preds = %50, %49
  %56 = load %struct.nrfx_gpiote_out_config_t*, %struct.nrfx_gpiote_out_config_t** %7, align 4, !dbg !17345
  %57 = getelementptr inbounds %struct.nrfx_gpiote_out_config_t, %struct.nrfx_gpiote_out_config_t* %56, i32 0, i32 2, !dbg !17347
  %58 = load i8, i8* %57, align 4, !dbg !17347
  %59 = lshr i8 %58, 2, !dbg !17347
  %60 = and i8 %59, 1, !dbg !17347
  %61 = trunc i8 %60 to i1, !dbg !17347
  br i1 %61, label %62, label %69, !dbg !17348

62:                                               ; preds = %55
  %63 = load i32, i32* %6, align 4, !dbg !17349
  %64 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %63, !dbg !17351
  %65 = load i16, i16* %64, align 2, !dbg !17352
  %66 = zext i16 %65 to i32, !dbg !17352
  %67 = or i32 %66, 64, !dbg !17352
  %68 = trunc i32 %67 to i16, !dbg !17352
  store i16 %68, i16* %64, align 2, !dbg !17352
  store i8 1, i8* %11, align 1, !dbg !17353
  br label %69, !dbg !17354

69:                                               ; preds = %62, %55
  %70 = load i32, i32* %6, align 4, !dbg !17355
  %71 = load i8, i8* %11, align 1, !dbg !17356
  %72 = trunc i8 %71 to i1, !dbg !17356
  br i1 %72, label %73, label %74, !dbg !17356

73:                                               ; preds = %69
  br label %75, !dbg !17356

74:                                               ; preds = %69
  br label %75, !dbg !17356

75:                                               ; preds = %74, %73
  %76 = phi %struct.z_spinlock_key* [ null, %73 ], [ %12, %74 ], !dbg !17356
  %77 = call i32 @nrfx_gpiote_input_configure(i32 noundef %70, %struct.z_spinlock_key* noundef %76, %struct.nrfx_gpiote_trigger_config_t* noundef %13, %struct.nrfx_gpiote_handler_config_t* noundef %14) #10, !dbg !17357
  store i32 %77, i32* %10, align 4, !dbg !17358
  %78 = load i32, i32* %10, align 4, !dbg !17359
  %79 = icmp eq i32 %78, 195887104, !dbg !17361
  br i1 %79, label %80, label %87, !dbg !17362

80:                                               ; preds = %75
  %81 = load i32, i32* %6, align 4, !dbg !17363
  %82 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %81, !dbg !17365
  %83 = load i16, i16* %82, align 2, !dbg !17366
  %84 = zext i16 %83 to i32, !dbg !17366
  %85 = or i32 %84, 128, !dbg !17366
  %86 = trunc i32 %85 to i16, !dbg !17366
  store i16 %86, i16* %82, align 2, !dbg !17366
  br label %87, !dbg !17367

87:                                               ; preds = %80, %75
  %88 = load i32, i32* %10, align 4, !dbg !17368
  store i32 %88, i32* %5, align 4, !dbg !17369
  br label %89, !dbg !17369

89:                                               ; preds = %87, %47
  %90 = load i32, i32* %5, align 4, !dbg !17370
  ret i32 %90, !dbg !17370
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpiote_polarity_to_trigger(i32 noundef %0) #1 !dbg !17371 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17374, metadata !DIExpression()), !dbg !17375
  %3 = load i32, i32* %2, align 4, !dbg !17376
  ret i32 %3, !dbg !17377
}

; Function Attrs: noinline nounwind optnone
define internal void @legacy_handler(i32 noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !17378 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17379, metadata !DIExpression()), !dbg !17380
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17381, metadata !DIExpression()), !dbg !17382
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17383, metadata !DIExpression()), !dbg !17384
  %7 = load i8*, i8** %6, align 4, !dbg !17385
  %8 = bitcast i8* %7 to void (i32, i32)*, !dbg !17386
  %9 = load i32, i32* %4, align 4, !dbg !17387
  %10 = load i32, i32* %5, align 4, !dbg !17388
  %11 = call i32 @gpiote_trigger_to_polarity(i32 noundef %10) #10, !dbg !17389
  call void %8(i32 noundef %9, i32 noundef %11) #10, !dbg !17390
  ret void, !dbg !17391
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_trigger_enable(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !17392 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17395, metadata !DIExpression()), !dbg !17396
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !17397, metadata !DIExpression()), !dbg !17398
  %7 = load i32, i32* %3, align 4, !dbg !17399
  %8 = call zeroext i1 @pin_in_use_by_te(i32 noundef %7) #10, !dbg !17401
  br i1 %8, label %9, label %26, !dbg !17402

9:                                                ; preds = %2
  %10 = load i32, i32* %3, align 4, !dbg !17403
  %11 = call zeroext i1 @pin_is_input(i32 noundef %10) #10, !dbg !17404
  br i1 %11, label %12, label %26, !dbg !17405

12:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata i8* %5, metadata !17406, metadata !DIExpression()), !dbg !17408
  %13 = load i32, i32* %3, align 4, !dbg !17409
  %14 = call zeroext i8 @pin_te_get(i32 noundef %13) #10, !dbg !17410
  store i8 %14, i8* %5, align 1, !dbg !17408
  %15 = load i8, i8* %5, align 1, !dbg !17411
  %16 = call i32 @nrf_gpiote_in_event_get(i8 noundef zeroext %15) #10, !dbg !17412
  call void @nrf_gpiote_event_clear(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %16) #10, !dbg !17413
  %17 = load i8, i8* %5, align 1, !dbg !17414
  %18 = zext i8 %17 to i32, !dbg !17414
  call void @nrf_gpiote_event_enable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %18) #10, !dbg !17415
  %19 = load i8, i8* %4, align 1, !dbg !17416
  %20 = trunc i8 %19 to i1, !dbg !17416
  br i1 %20, label %21, label %25, !dbg !17418

21:                                               ; preds = %12
  %22 = load i8, i8* %5, align 1, !dbg !17419
  %23 = zext i8 %22 to i32, !dbg !17419
  %24 = shl i32 1, %23, !dbg !17419
  call void @nrf_gpiote_int_enable(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %24) #10, !dbg !17421
  br label %25, !dbg !17422

25:                                               ; preds = %21, %12
  br label %30, !dbg !17423

26:                                               ; preds = %9, %2
  %27 = load i32, i32* %3, align 4, !dbg !17424
  %28 = load i32, i32* %3, align 4, !dbg !17426
  %29 = call i32 @get_initial_sense(i32 noundef %28) #10, !dbg !17427
  call void @nrf_gpio_cfg_sense_set(i32 noundef %27, i32 noundef %29) #10, !dbg !17428
  br label %30

30:                                               ; preds = %26, %25
  ret void, !dbg !17429
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpiote_in_event_get(i8 noundef zeroext %0) #1 !dbg !17430 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !17433, metadata !DIExpression()), !dbg !17434
  %3 = load i8, i8* %2, align 1, !dbg !17435
  %4 = zext i8 %3 to i32, !dbg !17435
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds (%struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* null, i32 0, i32 2), i32 0, i32 %4, !dbg !17435
  %6 = ptrtoint i32* %5 to i32, !dbg !17435
  ret i32 %6, !dbg !17436
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpiote_event_enable(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17437 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17438, metadata !DIExpression()), !dbg !17439
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17440, metadata !DIExpression()), !dbg !17441
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17442
  %6 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %5, i32 0, i32 9, !dbg !17443
  %7 = load i32, i32* %4, align 4, !dbg !17444
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i32 0, i32 %7, !dbg !17442
  %9 = load volatile i32, i32* %8, align 4, !dbg !17445
  %10 = or i32 %9, 1, !dbg !17445
  store volatile i32 %10, i32* %8, align 4, !dbg !17445
  ret void, !dbg !17446
}

; Function Attrs: noinline nounwind optnone
define internal i32 @get_initial_sense(i32 noundef %0) #1 !dbg !17447 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17450, metadata !DIExpression()), !dbg !17451
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17452, metadata !DIExpression()), !dbg !17453
  %5 = load i32, i32* %2, align 4, !dbg !17454
  %6 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %5, !dbg !17454
  %7 = load i16, i16* %6, align 2, !dbg !17454
  %8 = zext i16 %7 to i32, !dbg !17454
  %9 = and i32 %8, 28, !dbg !17454
  %10 = lshr i32 %9, 2, !dbg !17454
  store i32 %10, i32* %3, align 4, !dbg !17453
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17455, metadata !DIExpression()), !dbg !17456
  %11 = load i32, i32* %3, align 4, !dbg !17457
  %12 = icmp eq i32 %11, 4, !dbg !17459
  br i1 %12, label %13, label %14, !dbg !17460

13:                                               ; preds = %1
  store i32 3, i32* %4, align 4, !dbg !17461
  br label %25, !dbg !17463

14:                                               ; preds = %1
  %15 = load i32, i32* %3, align 4, !dbg !17464
  %16 = icmp eq i32 %15, 5, !dbg !17466
  br i1 %16, label %17, label %18, !dbg !17467

17:                                               ; preds = %14
  store i32 2, i32* %4, align 4, !dbg !17468
  br label %24, !dbg !17470

18:                                               ; preds = %14
  %19 = load i32, i32* %2, align 4, !dbg !17471
  %20 = call i32 @nrf_gpio_pin_read(i32 noundef %19) #10, !dbg !17473
  %21 = icmp ne i32 %20, 0, !dbg !17473
  %22 = zext i1 %21 to i64, !dbg !17473
  %23 = select i1 %21, i32 3, i32 2, !dbg !17473
  store i32 %23, i32* %4, align 4, !dbg !17474
  br label %24

24:                                               ; preds = %18, %17
  br label %25

25:                                               ; preds = %24, %13
  %26 = load i32, i32* %4, align 4, !dbg !17475
  ret i32 %26, !dbg !17476
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_pin_read(i32 noundef %0) #1 !dbg !17477 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17478, metadata !DIExpression()), !dbg !17479
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !17480, metadata !DIExpression()), !dbg !17481
  %4 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %2) #10, !dbg !17482
  store %struct.NRF_GPIO_Type* %4, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17481
  %5 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17483
  %6 = call i32 @nrf_gpio_port_in_read.157(%struct.NRF_GPIO_Type* noundef %5) #10, !dbg !17484
  %7 = load i32, i32* %2, align 4, !dbg !17485
  %8 = lshr i32 %6, %7, !dbg !17486
  %9 = and i32 %8, 1, !dbg !17487
  ret i32 %9, !dbg !17488
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_port_in_read.157(%struct.NRF_GPIO_Type* noundef %0) #1 !dbg !17489 {
  %2 = alloca %struct.NRF_GPIO_Type*, align 4
  store %struct.NRF_GPIO_Type* %0, %struct.NRF_GPIO_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %2, metadata !17494, metadata !DIExpression()), !dbg !17495
  %3 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %2, align 4, !dbg !17496
  %4 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %3, i32 0, i32 4, !dbg !17497
  %5 = load volatile i32, i32* %4, align 4, !dbg !17497
  ret i32 %5, !dbg !17498
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @nrfx_gpiote_in_is_set(i32 noundef %0) #1 !dbg !17499 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17502, metadata !DIExpression()), !dbg !17503
  %3 = load i32, i32* %2, align 4, !dbg !17504
  %4 = call i32 @nrf_gpio_pin_read(i32 noundef %3) #10, !dbg !17505
  %5 = icmp ne i32 %4, 0, !dbg !17505
  %6 = zext i1 %5 to i64, !dbg !17505
  %7 = select i1 %5, i32 1, i32 0, !dbg !17505
  %8 = icmp ne i32 %7, 0, !dbg !17505
  ret i1 %8, !dbg !17506
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_in_event_get(i32 noundef %0) #1 !dbg !17507 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17510, metadata !DIExpression()), !dbg !17511
  %4 = load i32, i32* %3, align 4, !dbg !17512
  %5 = call zeroext i1 @pin_in_use_by_te(i32 noundef %4) #10, !dbg !17514
  br i1 %5, label %6, label %10, !dbg !17515

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !17516
  %8 = call zeroext i8 @pin_te_get(i32 noundef %7) #10, !dbg !17518
  %9 = call i32 @nrf_gpiote_in_event_get(i8 noundef zeroext %8) #10, !dbg !17519
  store i32 %9, i32* %2, align 4, !dbg !17520
  br label %11, !dbg !17520

10:                                               ; preds = %1
  store i32 380, i32* %2, align 4, !dbg !17521
  br label %11, !dbg !17521

11:                                               ; preds = %10, %6
  %12 = load i32, i32* %2, align 4, !dbg !17522
  ret i32 %12, !dbg !17522
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @nrfx_gpiote_in_event_addr_get(i32 noundef %0) #1 !dbg !17523 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17524, metadata !DIExpression()), !dbg !17525
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17526, metadata !DIExpression()), !dbg !17527
  %4 = load i32, i32* %2, align 4, !dbg !17528
  %5 = call i32 @nrfx_gpiote_in_event_get(i32 noundef %4) #10, !dbg !17529
  store i32 %5, i32* %3, align 4, !dbg !17527
  %6 = load i32, i32* %3, align 4, !dbg !17530
  %7 = call i32 @nrf_gpiote_event_address_get(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %6) #10, !dbg !17531
  ret i32 %7, !dbg !17532
}

; Function Attrs: noinline nounwind optnone
define dso_local void @nrfx_gpiote_irq_handler() #1 !dbg !17533 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !17534, metadata !DIExpression()), !dbg !17535
  store i32 0, i32* %1, align 4, !dbg !17535
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17536, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17538, metadata !DIExpression()), !dbg !17539
  store i32 256, i32* %3, align 4, !dbg !17539
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17540, metadata !DIExpression()), !dbg !17541
  store i32 1, i32* %4, align 4, !dbg !17541
  store i32 0, i32* %2, align 4, !dbg !17542
  br label %5, !dbg !17544

5:                                                ; preds = %25, %0
  %6 = load i32, i32* %2, align 4, !dbg !17545
  %7 = icmp ult i32 %6, 4, !dbg !17547
  br i1 %7, label %8, label %28, !dbg !17548

8:                                                ; preds = %5
  %9 = load i32, i32* %3, align 4, !dbg !17549
  %10 = call zeroext i1 @nrf_gpiote_event_check(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %9) #10, !dbg !17552
  br i1 %10, label %11, label %20, !dbg !17553

11:                                               ; preds = %8
  %12 = load i32, i32* %4, align 4, !dbg !17554
  %13 = call i32 @nrf_gpiote_int_enable_check(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %12) #10, !dbg !17555
  %14 = icmp ne i32 %13, 0, !dbg !17555
  br i1 %14, label %15, label %20, !dbg !17556

15:                                               ; preds = %11
  %16 = load i32, i32* %3, align 4, !dbg !17557
  call void @nrf_gpiote_event_clear(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %16) #10, !dbg !17559
  %17 = load i32, i32* %4, align 4, !dbg !17560
  %18 = load i32, i32* %1, align 4, !dbg !17561
  %19 = or i32 %18, %17, !dbg !17561
  store i32 %19, i32* %1, align 4, !dbg !17561
  br label %20, !dbg !17562

20:                                               ; preds = %15, %11, %8
  %21 = load i32, i32* %4, align 4, !dbg !17563
  %22 = shl i32 %21, 1, !dbg !17563
  store i32 %22, i32* %4, align 4, !dbg !17563
  %23 = load i32, i32* %3, align 4, !dbg !17564
  %24 = add i32 %23, 4, !dbg !17565
  store i32 %24, i32* %3, align 4, !dbg !17566
  br label %25, !dbg !17567

25:                                               ; preds = %20
  %26 = load i32, i32* %2, align 4, !dbg !17568
  %27 = add i32 %26, 1, !dbg !17568
  store i32 %27, i32* %2, align 4, !dbg !17568
  br label %5, !dbg !17569, !llvm.loop !17570

28:                                               ; preds = %5
  %29 = call zeroext i1 @nrf_gpiote_event_check(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef 380) #10, !dbg !17572
  br i1 %29, label %30, label %31, !dbg !17574

30:                                               ; preds = %28
  call void @port_event_handle() #10, !dbg !17575
  br label %31, !dbg !17577

31:                                               ; preds = %30, %28
  %32 = load i32, i32* %1, align 4, !dbg !17578
  call void @gpiote_evt_handle(i32 noundef %32) #10, !dbg !17579
  ret void, !dbg !17580
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_gpiote_event_check(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17581 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17584, metadata !DIExpression()), !dbg !17585
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17586, metadata !DIExpression()), !dbg !17587
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17588
  %6 = bitcast %struct.NRF_GPIOTE_Type* %5 to i8*, !dbg !17589
  %7 = load i32, i32* %4, align 4, !dbg !17590
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !17591
  %9 = bitcast i8* %8 to i32*, !dbg !17592
  %10 = load volatile i32, i32* %9, align 4, !dbg !17592
  %11 = icmp ne i32 %10, 0, !dbg !17593
  ret i1 %11, !dbg !17594
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpiote_int_enable_check(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17595 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17598, metadata !DIExpression()), !dbg !17599
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17600, metadata !DIExpression()), !dbg !17601
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17602
  %6 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %5, i32 0, i32 6, !dbg !17603
  %7 = load volatile i32, i32* %6, align 4, !dbg !17603
  %8 = load i32, i32* %4, align 4, !dbg !17604
  %9 = and i32 %7, %8, !dbg !17605
  ret i32 %9, !dbg !17606
}

; Function Attrs: noinline nounwind optnone
define internal void @port_event_handle() #1 !dbg !17607 {
  %1 = alloca [1 x i32], align 4
  %2 = alloca [1 x i32], align 4
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata [1 x i32]* %1, metadata !17608, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.declare(metadata [1 x i32]* %2, metadata !17610, metadata !DIExpression()), !dbg !17611
  %13 = bitcast [1 x i32]* %2 to i8*, !dbg !17611
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !17611
  call void @llvm.dbg.declare(metadata i8* %3, metadata !17612, metadata !DIExpression()), !dbg !17613
  call void @llvm.dbg.declare(metadata i8* %4, metadata !17614, metadata !DIExpression()), !dbg !17615
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17616, metadata !DIExpression()), !dbg !17617
  %14 = getelementptr inbounds [1 x i32], [1 x i32]* %2, i32 0, i32 0, !dbg !17618
  call void @nrf_gpio_ports_read(i32 noundef 0, i32 noundef 1, i32* noundef %14) #10, !dbg !17619
  call void @llvm.dbg.declare(metadata i32* %6, metadata !17620, metadata !DIExpression()), !dbg !17622
  store i32 0, i32* %6, align 4, !dbg !17622
  br label %15, !dbg !17623

15:                                               ; preds = %24, %0
  %16 = load i32, i32* %6, align 4, !dbg !17624
  %17 = icmp ult i32 %16, 1, !dbg !17626
  br i1 %17, label %18, label %27, !dbg !17627

18:                                               ; preds = %15
  %19 = load i32, i32* %6, align 4, !dbg !17628
  %20 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 5), i32 0, i32 %19, !dbg !17630
  %21 = load i32, i32* %20, align 4, !dbg !17630
  %22 = load i32, i32* %6, align 4, !dbg !17631
  %23 = getelementptr inbounds [1 x i32], [1 x i32]* %1, i32 0, i32 %22, !dbg !17632
  store i32 %21, i32* %23, align 4, !dbg !17633
  br label %24, !dbg !17634

24:                                               ; preds = %18
  %25 = load i32, i32* %6, align 4, !dbg !17635
  %26 = add i32 %25, 1, !dbg !17635
  store i32 %26, i32* %6, align 4, !dbg !17635
  br label %15, !dbg !17636, !llvm.loop !17637

27:                                               ; preds = %15
  br label %28, !dbg !17639

28:                                               ; preds = %177, %27
  call void @llvm.dbg.declare(metadata i32* %7, metadata !17640, metadata !DIExpression()), !dbg !17643
  store i32 0, i32* %7, align 4, !dbg !17643
  br label %29, !dbg !17644

29:                                               ; preds = %92, %28
  %30 = load i32, i32* %7, align 4, !dbg !17645
  %31 = icmp ult i32 %30, 1, !dbg !17647
  br i1 %31, label %32, label %95, !dbg !17648

32:                                               ; preds = %29
  br label %33, !dbg !17649

33:                                               ; preds = %90, %32
  %34 = load i32, i32* %7, align 4, !dbg !17651
  %35 = getelementptr inbounds [1 x i32], [1 x i32]* %1, i32 0, i32 %34, !dbg !17652
  %36 = load i32, i32* %35, align 4, !dbg !17652
  %37 = icmp ne i32 %36, 0, !dbg !17649
  br i1 %37, label %38, label %91, !dbg !17649

38:                                               ; preds = %33
  call void @llvm.dbg.declare(metadata i32* %8, metadata !17653, metadata !DIExpression()), !dbg !17655
  call void @llvm.dbg.declare(metadata i8* %9, metadata !17656, metadata !DIExpression()), !dbg !17657
  %39 = load i32, i32* %7, align 4, !dbg !17658
  %40 = getelementptr inbounds [1 x i32], [1 x i32]* %1, i32 0, i32 %39, !dbg !17658
  %41 = load i32, i32* %40, align 4, !dbg !17658
  %42 = call i32 @llvm.cttz.i32(i32 %41, i1 false), !dbg !17658
  %43 = trunc i32 %42 to i8, !dbg !17658
  store i8 %43, i8* %3, align 1, !dbg !17659
  %44 = load i8, i8* %3, align 1, !dbg !17660
  %45 = zext i8 %44 to i32, !dbg !17660
  %46 = shl i32 1, %45, !dbg !17660
  %47 = xor i32 %46, -1, !dbg !17661
  %48 = load i32, i32* %7, align 4, !dbg !17662
  %49 = getelementptr inbounds [1 x i32], [1 x i32]* %1, i32 0, i32 %48, !dbg !17663
  %50 = load i32, i32* %49, align 4, !dbg !17664
  %51 = and i32 %50, %47, !dbg !17664
  store i32 %51, i32* %49, align 4, !dbg !17664
  %52 = load i8, i8* %3, align 1, !dbg !17665
  %53 = zext i8 %52 to i32, !dbg !17665
  %54 = load i32, i32* %7, align 4, !dbg !17666
  %55 = mul i32 32, %54, !dbg !17667
  %56 = add i32 %53, %55, !dbg !17668
  %57 = trunc i32 %56 to i8, !dbg !17665
  store i8 %57, i8* %4, align 1, !dbg !17669
  %58 = load i8, i8* %4, align 1, !dbg !17670
  %59 = zext i8 %58 to i32, !dbg !17670
  %60 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %59, !dbg !17670
  %61 = load i16, i16* %60, align 2, !dbg !17670
  %62 = zext i16 %61 to i32, !dbg !17670
  %63 = and i32 %62, 28, !dbg !17670
  %64 = lshr i32 %63, 2, !dbg !17670
  store i32 %64, i32* %5, align 4, !dbg !17671
  %65 = load i8, i8* %4, align 1, !dbg !17672
  %66 = zext i8 %65 to i32, !dbg !17672
  %67 = call i32 @nrf_gpio_pin_sense_get(i32 noundef %66) #10, !dbg !17673
  store i32 %67, i32* %8, align 4, !dbg !17674
  %68 = load i8, i8* %4, align 1, !dbg !17675
  %69 = zext i8 %68 to i32, !dbg !17675
  %70 = getelementptr inbounds [1 x i32], [1 x i32]* %2, i32 0, i32 0, !dbg !17676
  %71 = bitcast i32* %70 to i8*, !dbg !17676
  %72 = call zeroext i1 @nrf_bitmask_bit_is_set(i32 noundef %69, i8* noundef %71) #10, !dbg !17677
  %73 = zext i1 %72 to i8, !dbg !17678
  store i8 %73, i8* %9, align 1, !dbg !17678
  %74 = load i8, i8* %9, align 1, !dbg !17679
  %75 = trunc i8 %74 to i1, !dbg !17679
  br i1 %75, label %76, label %79, !dbg !17681

76:                                               ; preds = %38
  %77 = load i32, i32* %8, align 4, !dbg !17682
  %78 = icmp eq i32 %77, 2, !dbg !17683
  br i1 %78, label %85, label %79, !dbg !17684

79:                                               ; preds = %76, %38
  %80 = load i8, i8* %9, align 1, !dbg !17685
  %81 = trunc i8 %80 to i1, !dbg !17685
  br i1 %81, label %90, label %82, !dbg !17686

82:                                               ; preds = %79
  %83 = load i32, i32* %8, align 4, !dbg !17687
  %84 = icmp eq i32 %83, 3, !dbg !17688
  br i1 %84, label %85, label %90, !dbg !17689

85:                                               ; preds = %82, %76
  %86 = load i8, i8* %4, align 1, !dbg !17690
  %87 = zext i8 %86 to i32, !dbg !17690
  %88 = load i32, i32* %5, align 4, !dbg !17692
  %89 = load i32, i32* %8, align 4, !dbg !17693
  call void @next_sense_cond_call_handler(i32 noundef %87, i32 noundef %88, i32 noundef %89) #10, !dbg !17694
  br label %90, !dbg !17695

90:                                               ; preds = %85, %82, %79
  br label %33, !dbg !17649, !llvm.loop !17696

91:                                               ; preds = %33
  br label %92, !dbg !17698

92:                                               ; preds = %91
  %93 = load i32, i32* %7, align 4, !dbg !17699
  %94 = add i32 %93, 1, !dbg !17699
  store i32 %94, i32* %7, align 4, !dbg !17699
  br label %29, !dbg !17700, !llvm.loop !17701

95:                                               ; preds = %29
  call void @llvm.dbg.declare(metadata i32* %10, metadata !17703, metadata !DIExpression()), !dbg !17705
  store i32 0, i32* %10, align 4, !dbg !17705
  br label %96, !dbg !17706

96:                                               ; preds = %105, %95
  %97 = load i32, i32* %10, align 4, !dbg !17707
  %98 = icmp ult i32 %97, 1, !dbg !17709
  br i1 %98, label %99, label %108, !dbg !17710

99:                                               ; preds = %96
  %100 = load i32, i32* %10, align 4, !dbg !17711
  %101 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 5), i32 0, i32 %100, !dbg !17713
  %102 = load i32, i32* %101, align 4, !dbg !17713
  %103 = load i32, i32* %10, align 4, !dbg !17714
  %104 = getelementptr inbounds [1 x i32], [1 x i32]* %1, i32 0, i32 %103, !dbg !17715
  store i32 %102, i32* %104, align 4, !dbg !17716
  br label %105, !dbg !17717

105:                                              ; preds = %99
  %106 = load i32, i32* %10, align 4, !dbg !17718
  %107 = add i32 %106, 1, !dbg !17718
  store i32 %107, i32* %10, align 4, !dbg !17718
  br label %96, !dbg !17719, !llvm.loop !17720

108:                                              ; preds = %96
  call void @llvm.dbg.declare(metadata i32* %11, metadata !17722, metadata !DIExpression()), !dbg !17724
  store i32 0, i32* %11, align 4, !dbg !17724
  br label %109, !dbg !17725

109:                                              ; preds = %173, %108
  %110 = load i32, i32* %11, align 4, !dbg !17726
  %111 = icmp ult i32 %110, 1, !dbg !17728
  br i1 %111, label %112, label %176, !dbg !17729

112:                                              ; preds = %109
  call void @llvm.dbg.declare(metadata i32* %12, metadata !17730, metadata !DIExpression()), !dbg !17732
  %113 = load i32, i32* %11, align 4, !dbg !17733
  %114 = getelementptr inbounds [1 x i32], [1 x i32]* %1, i32 0, i32 %113, !dbg !17734
  %115 = load i32, i32* %114, align 4, !dbg !17734
  store i32 %115, i32* %12, align 4, !dbg !17732
  br label %116, !dbg !17735

116:                                              ; preds = %171, %112
  %117 = load i32, i32* %12, align 4, !dbg !17736
  %118 = icmp ne i32 %117, 0, !dbg !17735
  br i1 %118, label %119, label %172, !dbg !17735

119:                                              ; preds = %116
  %120 = load i32, i32* %12, align 4, !dbg !17737
  %121 = call i32 @llvm.cttz.i32(i32 %120, i1 false), !dbg !17737
  %122 = trunc i32 %121 to i8, !dbg !17737
  store i8 %122, i8* %3, align 1, !dbg !17739
  %123 = load i8, i8* %3, align 1, !dbg !17740
  %124 = zext i8 %123 to i32, !dbg !17740
  %125 = shl i32 1, %124, !dbg !17740
  %126 = xor i32 %125, -1, !dbg !17741
  %127 = load i32, i32* %12, align 4, !dbg !17742
  %128 = and i32 %127, %126, !dbg !17742
  store i32 %128, i32* %12, align 4, !dbg !17742
  %129 = load i8, i8* %3, align 1, !dbg !17743
  %130 = zext i8 %129 to i32, !dbg !17743
  %131 = load i32, i32* %11, align 4, !dbg !17744
  %132 = mul i32 32, %131, !dbg !17745
  %133 = add i32 %130, %132, !dbg !17746
  %134 = trunc i32 %133 to i8, !dbg !17743
  store i8 %134, i8* %4, align 1, !dbg !17747
  %135 = load i8, i8* %4, align 1, !dbg !17748
  %136 = zext i8 %135 to i32, !dbg !17748
  %137 = call i32 @nrf_gpio_pin_sense_get(i32 noundef %136) #10, !dbg !17750
  %138 = icmp ne i32 %137, 0, !dbg !17751
  br i1 %138, label %139, label %171, !dbg !17752

139:                                              ; preds = %119
  %140 = load i8, i8* %4, align 1, !dbg !17753
  %141 = zext i8 %140 to i32, !dbg !17753
  %142 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %141, !dbg !17753
  %143 = load i16, i16* %142, align 2, !dbg !17753
  %144 = zext i16 %143 to i32, !dbg !17753
  %145 = and i32 %144, 28, !dbg !17753
  %146 = lshr i32 %145, 2, !dbg !17753
  store i32 %146, i32* %5, align 4, !dbg !17755
  %147 = load i32, i32* %5, align 4, !dbg !17756
  %148 = icmp eq i32 %147, 5, !dbg !17758
  br i1 %148, label %149, label %158, !dbg !17759

149:                                              ; preds = %139
  %150 = load i8, i8* %3, align 1, !dbg !17760
  %151 = zext i8 %150 to i32, !dbg !17760
  %152 = shl i32 1, %151, !dbg !17760
  %153 = xor i32 %152, -1, !dbg !17762
  %154 = load i32, i32* %11, align 4, !dbg !17763
  %155 = getelementptr inbounds [1 x i32], [1 x i32]* %2, i32 0, i32 %154, !dbg !17764
  %156 = load i32, i32* %155, align 4, !dbg !17765
  %157 = and i32 %156, %153, !dbg !17765
  store i32 %157, i32* %155, align 4, !dbg !17765
  br label %170, !dbg !17766

158:                                              ; preds = %139
  %159 = load i32, i32* %5, align 4, !dbg !17767
  %160 = icmp eq i32 %159, 4, !dbg !17769
  br i1 %160, label %161, label %169, !dbg !17770

161:                                              ; preds = %158
  %162 = load i8, i8* %3, align 1, !dbg !17771
  %163 = zext i8 %162 to i32, !dbg !17771
  %164 = shl i32 1, %163, !dbg !17771
  %165 = load i32, i32* %11, align 4, !dbg !17773
  %166 = getelementptr inbounds [1 x i32], [1 x i32]* %2, i32 0, i32 %165, !dbg !17774
  %167 = load i32, i32* %166, align 4, !dbg !17775
  %168 = or i32 %167, %164, !dbg !17775
  store i32 %168, i32* %166, align 4, !dbg !17775
  br label %169, !dbg !17776

169:                                              ; preds = %161, %158
  br label %170

170:                                              ; preds = %169, %149
  br label %171, !dbg !17777

171:                                              ; preds = %170, %119
  br label %116, !dbg !17735, !llvm.loop !17778

172:                                              ; preds = %116
  br label %173, !dbg !17780

173:                                              ; preds = %172
  %174 = load i32, i32* %11, align 4, !dbg !17781
  %175 = add i32 %174, 1, !dbg !17781
  store i32 %175, i32* %11, align 4, !dbg !17781
  br label %109, !dbg !17782, !llvm.loop !17783

176:                                              ; preds = %109
  call void @nrf_gpiote_event_clear(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef 380) #10, !dbg !17785
  br label %177, !dbg !17786

177:                                              ; preds = %176
  %178 = getelementptr inbounds [1 x i32], [1 x i32]* %2, i32 0, i32 0, !dbg !17787
  %179 = getelementptr inbounds [1 x i32], [1 x i32]* %1, i32 0, i32 0, !dbg !17788
  %180 = call zeroext i1 @input_read_and_check(i32* noundef %178, i32* noundef %179) #10, !dbg !17789
  br i1 %180, label %28, label %181, !dbg !17786, !llvm.loop !17790

181:                                              ; preds = %177
  ret void, !dbg !17792
}

; Function Attrs: noinline nounwind optnone
define internal void @gpiote_evt_handle(i32 noundef %0) #1 !dbg !17793 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17794, metadata !DIExpression()), !dbg !17795
  br label %6, !dbg !17796

6:                                                ; preds = %9, %1
  %7 = load i32, i32* %2, align 4, !dbg !17797
  %8 = icmp ne i32 %7, 0, !dbg !17796
  br i1 %8, label %9, label %24, !dbg !17796

9:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17798, metadata !DIExpression()), !dbg !17800
  %10 = load i32, i32* %2, align 4, !dbg !17801
  %11 = call i32 @llvm.cttz.i32(i32 %10, i1 false), !dbg !17801
  store i32 %11, i32* %3, align 4, !dbg !17800
  %12 = load i32, i32* %3, align 4, !dbg !17802
  %13 = shl i32 1, %12, !dbg !17802
  %14 = xor i32 %13, -1, !dbg !17803
  %15 = load i32, i32* %2, align 4, !dbg !17804
  %16 = and i32 %15, %14, !dbg !17804
  store i32 %16, i32* %2, align 4, !dbg !17804
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17805, metadata !DIExpression()), !dbg !17806
  %17 = load i32, i32* %3, align 4, !dbg !17807
  %18 = call i32 @nrf_gpiote_event_pin_get(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %17) #10, !dbg !17808
  store i32 %18, i32* %4, align 4, !dbg !17806
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17809, metadata !DIExpression()), !dbg !17810
  %19 = load i32, i32* %3, align 4, !dbg !17811
  %20 = call i32 @nrf_gpiote_event_polarity_get(%struct.NRF_GPIOTE_Type* noundef inttoptr (i32 1073766400 to %struct.NRF_GPIOTE_Type*), i32 noundef %19) #10, !dbg !17812
  store i32 %20, i32* %5, align 4, !dbg !17810
  %21 = load i32, i32* %4, align 4, !dbg !17813
  %22 = load i32, i32* %5, align 4, !dbg !17814
  %23 = call i32 @gpiote_polarity_to_trigger(i32 noundef %22) #10, !dbg !17815
  call void @call_handler(i32 noundef %21, i32 noundef %23) #10, !dbg !17816
  br label %6, !dbg !17796, !llvm.loop !17817

24:                                               ; preds = %6
  ret void, !dbg !17819
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpiote_event_pin_get(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17820 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17821, metadata !DIExpression()), !dbg !17822
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17823, metadata !DIExpression()), !dbg !17824
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17825
  %6 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %5, i32 0, i32 9, !dbg !17826
  %7 = load i32, i32* %4, align 4, !dbg !17827
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i32 0, i32 %7, !dbg !17825
  %9 = load volatile i32, i32* %8, align 4, !dbg !17825
  %10 = and i32 %9, 7936, !dbg !17828
  %11 = lshr i32 %10, 8, !dbg !17829
  ret i32 %11, !dbg !17830
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpiote_event_polarity_get(%struct.NRF_GPIOTE_Type* noundef %0, i32 noundef %1) #1 !dbg !17831 {
  %3 = alloca %struct.NRF_GPIOTE_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.NRF_GPIOTE_Type* %0, %struct.NRF_GPIOTE_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIOTE_Type** %3, metadata !17834, metadata !DIExpression()), !dbg !17835
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17836, metadata !DIExpression()), !dbg !17837
  %5 = load %struct.NRF_GPIOTE_Type*, %struct.NRF_GPIOTE_Type** %3, align 4, !dbg !17838
  %6 = getelementptr inbounds %struct.NRF_GPIOTE_Type, %struct.NRF_GPIOTE_Type* %5, i32 0, i32 9, !dbg !17839
  %7 = load i32, i32* %4, align 4, !dbg !17840
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i32 0, i32 %7, !dbg !17838
  %9 = load volatile i32, i32* %8, align 4, !dbg !17838
  %10 = and i32 %9, 196608, !dbg !17841
  %11 = lshr i32 %10, 16, !dbg !17842
  ret i32 %11, !dbg !17843
}

; Function Attrs: noinline nounwind optnone
define internal void @call_handler(i32 noundef %0, i32 noundef %1) #1 !dbg !17844 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.nrfx_gpiote_handler_config_t*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17847, metadata !DIExpression()), !dbg !17848
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17849, metadata !DIExpression()), !dbg !17850
  call void @llvm.dbg.declare(metadata %struct.nrfx_gpiote_handler_config_t** %5, metadata !17851, metadata !DIExpression()), !dbg !17852
  %6 = load i32, i32* %3, align 4, !dbg !17853
  %7 = call %struct.nrfx_gpiote_handler_config_t* @channel_handler_get(i32 noundef %6) #10, !dbg !17854
  store %struct.nrfx_gpiote_handler_config_t* %7, %struct.nrfx_gpiote_handler_config_t** %5, align 4, !dbg !17852
  %8 = load %struct.nrfx_gpiote_handler_config_t*, %struct.nrfx_gpiote_handler_config_t** %5, align 4, !dbg !17855
  %9 = icmp ne %struct.nrfx_gpiote_handler_config_t* %8, null, !dbg !17855
  br i1 %9, label %10, label %19, !dbg !17857

10:                                               ; preds = %2
  %11 = load %struct.nrfx_gpiote_handler_config_t*, %struct.nrfx_gpiote_handler_config_t** %5, align 4, !dbg !17858
  %12 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %11, i32 0, i32 0, !dbg !17860
  %13 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %12, align 4, !dbg !17860
  %14 = load i32, i32* %3, align 4, !dbg !17861
  %15 = load i32, i32* %4, align 4, !dbg !17862
  %16 = load %struct.nrfx_gpiote_handler_config_t*, %struct.nrfx_gpiote_handler_config_t** %5, align 4, !dbg !17863
  %17 = getelementptr inbounds %struct.nrfx_gpiote_handler_config_t, %struct.nrfx_gpiote_handler_config_t* %16, i32 0, i32 1, !dbg !17864
  %18 = load i8*, i8** %17, align 4, !dbg !17864
  call void %13(i32 noundef %14, i32 noundef %15, i8* noundef %18) #10, !dbg !17858
  br label %19, !dbg !17865

19:                                               ; preds = %10, %2
  %20 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 1, i32 0), align 4, !dbg !17866
  %21 = icmp ne void (i32, i32, i8*)* %20, null, !dbg !17868
  br i1 %21, label %22, label %27, !dbg !17869

22:                                               ; preds = %19
  %23 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 1, i32 0), align 4, !dbg !17870
  %24 = load i32, i32* %3, align 4, !dbg !17872
  %25 = load i32, i32* %4, align 4, !dbg !17873
  %26 = load i8*, i8** getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 1, i32 1), align 4, !dbg !17874
  call void %23(i32 noundef %24, i32 noundef %25, i8* noundef %26) #10, !dbg !17875
  br label %27, !dbg !17876

27:                                               ; preds = %22, %19
  ret void, !dbg !17877
}

; Function Attrs: noinline nounwind optnone
define internal %struct.nrfx_gpiote_handler_config_t* @channel_handler_get(i32 noundef %0) #1 !dbg !17878 {
  %2 = alloca %struct.nrfx_gpiote_handler_config_t*, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17881, metadata !DIExpression()), !dbg !17882
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17883, metadata !DIExpression()), !dbg !17884
  %5 = load i32, i32* %3, align 4, !dbg !17885
  %6 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %5, !dbg !17885
  %7 = load i16, i16* %6, align 2, !dbg !17885
  %8 = zext i16 %7 to i32, !dbg !17885
  %9 = and i32 %8, 256, !dbg !17885
  %10 = icmp ne i32 %9, 0, !dbg !17885
  br i1 %10, label %11, label %18, !dbg !17885

11:                                               ; preds = %1
  %12 = load i32, i32* %3, align 4, !dbg !17885
  %13 = getelementptr inbounds [32 x i16], [32 x i16]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 2), i32 0, i32 %12, !dbg !17885
  %14 = load i16, i16* %13, align 2, !dbg !17885
  %15 = zext i16 %14 to i32, !dbg !17885
  %16 = and i32 %15, 7680, !dbg !17885
  %17 = lshr i32 %16, 9, !dbg !17885
  br label %19, !dbg !17885

18:                                               ; preds = %1
  br label %19, !dbg !17885

19:                                               ; preds = %18, %11
  %20 = phi i32 [ %17, %11 ], [ -1, %18 ], !dbg !17885
  store i32 %20, i32* %4, align 4, !dbg !17884
  %21 = load i32, i32* %4, align 4, !dbg !17886
  %22 = icmp eq i32 %21, -1, !dbg !17888
  br i1 %22, label %23, label %24, !dbg !17889

23:                                               ; preds = %19
  store %struct.nrfx_gpiote_handler_config_t* null, %struct.nrfx_gpiote_handler_config_t** %2, align 4, !dbg !17890
  br label %27, !dbg !17890

24:                                               ; preds = %19
  %25 = load i32, i32* %4, align 4, !dbg !17892
  %26 = getelementptr inbounds [1 x %struct.nrfx_gpiote_handler_config_t], [1 x %struct.nrfx_gpiote_handler_config_t]* getelementptr inbounds (%struct.gpiote_control_block_t, %struct.gpiote_control_block_t* @m_cb, i32 0, i32 0), i32 0, i32 %25, !dbg !17893
  store %struct.nrfx_gpiote_handler_config_t* %26, %struct.nrfx_gpiote_handler_config_t** %2, align 4, !dbg !17894
  br label %27, !dbg !17894

27:                                               ; preds = %24, %23
  %28 = load %struct.nrfx_gpiote_handler_config_t*, %struct.nrfx_gpiote_handler_config_t** %2, align 4, !dbg !17895
  ret %struct.nrfx_gpiote_handler_config_t* %28, !dbg !17895
}

; Function Attrs: noinline nounwind optnone
define internal void @nrf_gpio_ports_read(i32 noundef %0, i32 noundef %1, i32* noundef %2) #1 !dbg !17896 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 4
  %7 = alloca [1 x %struct.NRF_GPIO_Type*], align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17899, metadata !DIExpression()), !dbg !17900
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17901, metadata !DIExpression()), !dbg !17902
  store i32* %2, i32** %6, align 4
  call void @llvm.dbg.declare(metadata i32** %6, metadata !17903, metadata !DIExpression()), !dbg !17904
  call void @llvm.dbg.declare(metadata [1 x %struct.NRF_GPIO_Type*]* %7, metadata !17905, metadata !DIExpression()), !dbg !17907
  %9 = bitcast [1 x %struct.NRF_GPIO_Type*]* %7 to i8*, !dbg !17907
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %9, i8* align 4 bitcast ([1 x %struct.NRF_GPIO_Type*]* @__const.nrf_gpio_ports_read.gpio_regs to i8*), i32 4, i1 false), !dbg !17907
  call void @llvm.dbg.declare(metadata i32* %8, metadata !17908, metadata !DIExpression()), !dbg !17909
  %10 = load i32, i32* %4, align 4, !dbg !17910
  store i32 %10, i32* %8, align 4, !dbg !17912
  br label %11, !dbg !17913

11:                                               ; preds = %25, %3
  %12 = load i32, i32* %8, align 4, !dbg !17914
  %13 = load i32, i32* %4, align 4, !dbg !17916
  %14 = load i32, i32* %5, align 4, !dbg !17917
  %15 = add i32 %13, %14, !dbg !17918
  %16 = icmp ult i32 %12, %15, !dbg !17919
  br i1 %16, label %17, label %28, !dbg !17920

17:                                               ; preds = %11
  %18 = load i32, i32* %8, align 4, !dbg !17921
  %19 = getelementptr inbounds [1 x %struct.NRF_GPIO_Type*], [1 x %struct.NRF_GPIO_Type*]* %7, i32 0, i32 %18, !dbg !17923
  %20 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %19, align 4, !dbg !17923
  %21 = call i32 @nrf_gpio_port_in_read.157(%struct.NRF_GPIO_Type* noundef %20) #10, !dbg !17924
  %22 = load i32*, i32** %6, align 4, !dbg !17925
  store i32 %21, i32* %22, align 4, !dbg !17926
  %23 = load i32*, i32** %6, align 4, !dbg !17927
  %24 = getelementptr inbounds i32, i32* %23, i32 1, !dbg !17927
  store i32* %24, i32** %6, align 4, !dbg !17927
  br label %25, !dbg !17928

25:                                               ; preds = %17
  %26 = load i32, i32* %8, align 4, !dbg !17929
  %27 = add i32 %26, 1, !dbg !17929
  store i32 %27, i32* %8, align 4, !dbg !17929
  br label %11, !dbg !17930, !llvm.loop !17931

28:                                               ; preds = %11
  ret void, !dbg !17933
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nrf_gpio_pin_sense_get(i32 noundef %0) #1 !dbg !17934 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.NRF_GPIO_Type*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17937, metadata !DIExpression()), !dbg !17938
  call void @llvm.dbg.declare(metadata %struct.NRF_GPIO_Type** %3, metadata !17939, metadata !DIExpression()), !dbg !17940
  %4 = call %struct.NRF_GPIO_Type* @nrf_gpio_pin_port_decode.131(i32* noundef %2) #10, !dbg !17941
  store %struct.NRF_GPIO_Type* %4, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17940
  %5 = load %struct.NRF_GPIO_Type*, %struct.NRF_GPIO_Type** %3, align 4, !dbg !17942
  %6 = getelementptr inbounds %struct.NRF_GPIO_Type, %struct.NRF_GPIO_Type* %5, i32 0, i32 9, !dbg !17943
  %7 = load i32, i32* %2, align 4, !dbg !17944
  %8 = getelementptr inbounds [32 x i32], [32 x i32]* %6, i32 0, i32 %7, !dbg !17942
  %9 = load volatile i32, i32* %8, align 4, !dbg !17942
  %10 = and i32 %9, 196608, !dbg !17945
  %11 = lshr i32 %10, 16, !dbg !17946
  ret i32 %11, !dbg !17947
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @nrf_bitmask_bit_is_set(i32 noundef %0, i8* noundef %1) #1 !dbg !17948 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17951, metadata !DIExpression()), !dbg !17952
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !17953, metadata !DIExpression()), !dbg !17954
  call void @llvm.dbg.declare(metadata i8** %5, metadata !17955, metadata !DIExpression()), !dbg !17956
  %7 = load i8*, i8** %4, align 4, !dbg !17957
  store i8* %7, i8** %5, align 4, !dbg !17956
  call void @llvm.dbg.declare(metadata i32* %6, metadata !17958, metadata !DIExpression()), !dbg !17959
  %8 = load i32, i32* %3, align 4, !dbg !17960
  %9 = udiv i32 %8, 8, !dbg !17960
  store i32 %9, i32* %6, align 4, !dbg !17959
  %10 = load i32, i32* %3, align 4, !dbg !17961
  %11 = and i32 %10, 7, !dbg !17961
  store i32 %11, i32* %3, align 4, !dbg !17962
  %12 = load i32, i32* %3, align 4, !dbg !17963
  %13 = shl i32 1, %12, !dbg !17964
  %14 = load i8*, i8** %5, align 4, !dbg !17965
  %15 = load i32, i32* %6, align 4, !dbg !17966
  %16 = getelementptr inbounds i8, i8* %14, i32 %15, !dbg !17965
  %17 = load i8, i8* %16, align 1, !dbg !17965
  %18 = zext i8 %17 to i32, !dbg !17965
  %19 = and i32 %13, %18, !dbg !17967
  %20 = icmp ne i32 %19, 0, !dbg !17968
  ret i1 %20, !dbg !17969
}

; Function Attrs: noinline nounwind optnone
define internal void @next_sense_cond_call_handler(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !17970 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17973, metadata !DIExpression()), !dbg !17974
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17975, metadata !DIExpression()), !dbg !17976
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !17977, metadata !DIExpression()), !dbg !17978
  %8 = load i32, i32* %5, align 4, !dbg !17979
  %9 = call zeroext i1 @is_level(i32 noundef %8) #10, !dbg !17981
  br i1 %9, label %10, label %22, !dbg !17982

10:                                               ; preds = %3
  %11 = load i32, i32* %4, align 4, !dbg !17983
  %12 = load i32, i32* %5, align 4, !dbg !17985
  call void @call_handler(i32 noundef %11, i32 noundef %12) #10, !dbg !17986
  %13 = load i32, i32* %4, align 4, !dbg !17987
  %14 = call i32 @nrf_gpio_pin_sense_get(i32 noundef %13) #10, !dbg !17989
  %15 = load i32, i32* %6, align 4, !dbg !17990
  %16 = icmp eq i32 %14, %15, !dbg !17991
  br i1 %16, label %17, label %21, !dbg !17992

17:                                               ; preds = %10
  %18 = load i32, i32* %4, align 4, !dbg !17993
  call void @nrf_gpio_cfg_sense_set(i32 noundef %18, i32 noundef 0) #10, !dbg !17995
  %19 = load i32, i32* %4, align 4, !dbg !17996
  %20 = load i32, i32* %6, align 4, !dbg !17997
  call void @nrf_gpio_cfg_sense_set(i32 noundef %19, i32 noundef %20) #10, !dbg !17998
  br label %21, !dbg !17999

21:                                               ; preds = %17, %10
  br label %47, !dbg !18000

22:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18001, metadata !DIExpression()), !dbg !18003
  %23 = load i32, i32* %6, align 4, !dbg !18004
  %24 = icmp eq i32 %23, 2, !dbg !18005
  %25 = zext i1 %24 to i64, !dbg !18006
  %26 = select i1 %24, i32 3, i32 2, !dbg !18006
  store i32 %26, i32* %7, align 4, !dbg !18003
  %27 = load i32, i32* %4, align 4, !dbg !18007
  %28 = load i32, i32* %7, align 4, !dbg !18008
  call void @nrf_gpio_cfg_sense_set(i32 noundef %27, i32 noundef %28) #10, !dbg !18009
  %29 = load i32, i32* %5, align 4, !dbg !18010
  %30 = icmp eq i32 %29, 3, !dbg !18012
  br i1 %30, label %43, label %31, !dbg !18013

31:                                               ; preds = %22
  %32 = load i32, i32* %6, align 4, !dbg !18014
  %33 = icmp eq i32 %32, 2, !dbg !18015
  br i1 %33, label %34, label %37, !dbg !18016

34:                                               ; preds = %31
  %35 = load i32, i32* %5, align 4, !dbg !18017
  %36 = icmp eq i32 %35, 1, !dbg !18018
  br i1 %36, label %43, label %37, !dbg !18019

37:                                               ; preds = %34, %31
  %38 = load i32, i32* %6, align 4, !dbg !18020
  %39 = icmp eq i32 %38, 3, !dbg !18021
  br i1 %39, label %40, label %46, !dbg !18022

40:                                               ; preds = %37
  %41 = load i32, i32* %5, align 4, !dbg !18023
  %42 = icmp eq i32 %41, 2, !dbg !18024
  br i1 %42, label %43, label %46, !dbg !18025

43:                                               ; preds = %40, %34, %22
  %44 = load i32, i32* %4, align 4, !dbg !18026
  %45 = load i32, i32* %5, align 4, !dbg !18028
  call void @call_handler(i32 noundef %44, i32 noundef %45) #10, !dbg !18029
  br label %46, !dbg !18030

46:                                               ; preds = %43, %40, %37
  br label %47

47:                                               ; preds = %46, %21
  ret void, !dbg !18031
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @input_read_and_check(i32* noundef %0, i32* noundef %1) #1 !dbg !18032 {
  %3 = alloca i32*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i8, align 1
  %6 = alloca [1 x i32], align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !18035, metadata !DIExpression()), !dbg !18036
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !18037, metadata !DIExpression()), !dbg !18038
  call void @llvm.dbg.declare(metadata i8* %5, metadata !18039, metadata !DIExpression()), !dbg !18040
  call void @llvm.dbg.declare(metadata [1 x i32]* %6, metadata !18041, metadata !DIExpression()), !dbg !18042
  %9 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i32 0, i32 0, !dbg !18043
  call void @nrf_gpio_ports_read(i32 noundef 0, i32 noundef 1, i32* noundef %9) #10, !dbg !18044
  store i8 0, i8* %5, align 1, !dbg !18045
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18046, metadata !DIExpression()), !dbg !18048
  store i32 0, i32* %7, align 4, !dbg !18048
  br label %10, !dbg !18049

10:                                               ; preds = %42, %2
  %11 = load i32, i32* %7, align 4, !dbg !18050
  %12 = icmp ult i32 %11, 1, !dbg !18052
  br i1 %12, label %13, label %45, !dbg !18053

13:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata i32* %8, metadata !18054, metadata !DIExpression()), !dbg !18056
  %14 = load i32*, i32** %3, align 4, !dbg !18057
  %15 = load i32, i32* %7, align 4, !dbg !18058
  %16 = getelementptr inbounds i32, i32* %14, i32 %15, !dbg !18057
  %17 = load i32, i32* %16, align 4, !dbg !18057
  %18 = load i32, i32* %7, align 4, !dbg !18059
  %19 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i32 0, i32 %18, !dbg !18060
  %20 = load i32, i32* %19, align 4, !dbg !18060
  %21 = xor i32 %17, %20, !dbg !18061
  store i32 %21, i32* %8, align 4, !dbg !18056
  %22 = load i32, i32* %7, align 4, !dbg !18062
  %23 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i32 0, i32 %22, !dbg !18063
  %24 = load i32, i32* %23, align 4, !dbg !18063
  %25 = load i32*, i32** %3, align 4, !dbg !18064
  %26 = load i32, i32* %7, align 4, !dbg !18065
  %27 = getelementptr inbounds i32, i32* %25, i32 %26, !dbg !18064
  store i32 %24, i32* %27, align 4, !dbg !18066
  %28 = load i32, i32* %8, align 4, !dbg !18067
  %29 = icmp ne i32 %28, 0, !dbg !18067
  br i1 %29, label %30, label %37, !dbg !18069

30:                                               ; preds = %13
  %31 = load i32, i32* %8, align 4, !dbg !18070
  %32 = load i32*, i32** %4, align 4, !dbg !18072
  %33 = load i32, i32* %7, align 4, !dbg !18073
  %34 = getelementptr inbounds i32, i32* %32, i32 %33, !dbg !18072
  %35 = load i32, i32* %34, align 4, !dbg !18074
  %36 = and i32 %35, %31, !dbg !18074
  store i32 %36, i32* %34, align 4, !dbg !18074
  store i8 1, i8* %5, align 1, !dbg !18075
  br label %41, !dbg !18076

37:                                               ; preds = %13
  %38 = load i32*, i32** %4, align 4, !dbg !18077
  %39 = load i32, i32* %7, align 4, !dbg !18079
  %40 = getelementptr inbounds i32, i32* %38, i32 %39, !dbg !18077
  store i32 0, i32* %40, align 4, !dbg !18080
  br label %41

41:                                               ; preds = %37, %30
  br label %42, !dbg !18081

42:                                               ; preds = %41
  %43 = load i32, i32* %7, align 4, !dbg !18082
  %44 = add i32 %43, 1, !dbg !18082
  store i32 %44, i32* %7, align 4, !dbg !18082
  br label %10, !dbg !18083, !llvm.loop !18084

45:                                               ; preds = %10
  %46 = load i8, i8* %5, align 1, !dbg !18086
  %47 = trunc i8 %46 to i1, !dbg !18086
  ret i1 %47, !dbg !18087
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @is_level(i32 noundef %0) #1 !dbg !18088 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18091, metadata !DIExpression()), !dbg !18092
  %3 = load i32, i32* %2, align 4, !dbg !18093
  %4 = icmp uge i32 %3, 4, !dbg !18094
  ret i1 %4, !dbg !18095
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_device_state_init() #1 !dbg !18096 {
  %1 = alloca %struct.device.397*, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %1, metadata !18098, metadata !DIExpression()), !dbg !18114
  store %struct.device.397* getelementptr inbounds ([0 x %struct.device.397], [0 x %struct.device.397]* @__device_start, i32 0, i32 0), %struct.device.397** %1, align 4, !dbg !18114
  br label %2, !dbg !18115

2:                                                ; preds = %5, %0
  %3 = load %struct.device.397*, %struct.device.397** %1, align 4, !dbg !18116
  %4 = icmp ult %struct.device.397* %3, getelementptr inbounds ([0 x %struct.device.397], [0 x %struct.device.397]* @__device_end, i32 0, i32 0), !dbg !18117
  br i1 %4, label %5, label %10, !dbg !18115

5:                                                ; preds = %2
  %6 = load %struct.device.397*, %struct.device.397** %1, align 4, !dbg !18118
  %7 = bitcast %struct.device.397* %6 to i8*, !dbg !18118
  call void @z_object_init(i8* noundef %7) #10, !dbg !18120
  %8 = load %struct.device.397*, %struct.device.397** %1, align 4, !dbg !18121
  %9 = getelementptr inbounds %struct.device.397, %struct.device.397* %8, i32 1, !dbg !18121
  store %struct.device.397* %9, %struct.device.397** %1, align 4, !dbg !18121
  br label %2, !dbg !18115, !llvm.loop !18122

10:                                               ; preds = %2
  ret void, !dbg !18124
}

; Function Attrs: noinline nounwind optnone
define internal void @z_object_init(i8* noundef %0) #1 !dbg !18125 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !18126, metadata !DIExpression()), !dbg !18127
  %3 = load i8*, i8** %2, align 4, !dbg !18128
  ret void, !dbg !18129
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.device.397* @z_impl_device_get_binding(i8* noundef %0) #1 !dbg !18130 {
  %2 = alloca %struct.device.397*, align 4
  %3 = alloca i8*, align 4
  %4 = alloca %struct.device.397*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !18133, metadata !DIExpression()), !dbg !18134
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !18135, metadata !DIExpression()), !dbg !18136
  %5 = load i8*, i8** %3, align 4, !dbg !18137
  %6 = icmp eq i8* %5, null, !dbg !18139
  br i1 %6, label %13, label %7, !dbg !18140

7:                                                ; preds = %1
  %8 = load i8*, i8** %3, align 4, !dbg !18141
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !18141
  %10 = load i8, i8* %9, align 1, !dbg !18141
  %11 = zext i8 %10 to i32, !dbg !18141
  %12 = icmp eq i32 %11, 0, !dbg !18142
  br i1 %12, label %13, label %14, !dbg !18143

13:                                               ; preds = %7, %1
  store %struct.device.397* null, %struct.device.397** %2, align 4, !dbg !18144
  br label %54, !dbg !18144

14:                                               ; preds = %7
  store %struct.device.397* getelementptr inbounds ([0 x %struct.device.397], [0 x %struct.device.397]* @__device_start, i32 0, i32 0), %struct.device.397** %4, align 4, !dbg !18146
  br label %15, !dbg !18148

15:                                               ; preds = %30, %14
  %16 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18149
  %17 = icmp ne %struct.device.397* %16, getelementptr inbounds ([0 x %struct.device.397], [0 x %struct.device.397]* @__device_end, i32 0, i32 0), !dbg !18151
  br i1 %17, label %18, label %33, !dbg !18152

18:                                               ; preds = %15
  %19 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18153
  %20 = call zeroext i1 @z_device_is_ready(%struct.device.397* noundef %19) #10, !dbg !18156
  br i1 %20, label %21, label %29, !dbg !18157

21:                                               ; preds = %18
  %22 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18158
  %23 = getelementptr inbounds %struct.device.397, %struct.device.397* %22, i32 0, i32 0, !dbg !18159
  %24 = load i8*, i8** %23, align 4, !dbg !18159
  %25 = load i8*, i8** %3, align 4, !dbg !18160
  %26 = icmp eq i8* %24, %25, !dbg !18161
  br i1 %26, label %27, label %29, !dbg !18162

27:                                               ; preds = %21
  %28 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18163
  store %struct.device.397* %28, %struct.device.397** %2, align 4, !dbg !18165
  br label %54, !dbg !18165

29:                                               ; preds = %21, %18
  br label %30, !dbg !18166

30:                                               ; preds = %29
  %31 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18167
  %32 = getelementptr inbounds %struct.device.397, %struct.device.397* %31, i32 1, !dbg !18167
  store %struct.device.397* %32, %struct.device.397** %4, align 4, !dbg !18167
  br label %15, !dbg !18168, !llvm.loop !18169

33:                                               ; preds = %15
  store %struct.device.397* getelementptr inbounds ([0 x %struct.device.397], [0 x %struct.device.397]* @__device_start, i32 0, i32 0), %struct.device.397** %4, align 4, !dbg !18171
  br label %34, !dbg !18173

34:                                               ; preds = %50, %33
  %35 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18174
  %36 = icmp ne %struct.device.397* %35, getelementptr inbounds ([0 x %struct.device.397], [0 x %struct.device.397]* @__device_end, i32 0, i32 0), !dbg !18176
  br i1 %36, label %37, label %53, !dbg !18177

37:                                               ; preds = %34
  %38 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18178
  %39 = call zeroext i1 @z_device_is_ready(%struct.device.397* noundef %38) #10, !dbg !18181
  br i1 %39, label %40, label %49, !dbg !18182

40:                                               ; preds = %37
  %41 = load i8*, i8** %3, align 4, !dbg !18183
  %42 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18184
  %43 = getelementptr inbounds %struct.device.397, %struct.device.397* %42, i32 0, i32 0, !dbg !18185
  %44 = load i8*, i8** %43, align 4, !dbg !18185
  %45 = call i32 @strcmp(i8* noundef %41, i8* noundef %44) #10, !dbg !18186
  %46 = icmp eq i32 %45, 0, !dbg !18187
  br i1 %46, label %47, label %49, !dbg !18188

47:                                               ; preds = %40
  %48 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18189
  store %struct.device.397* %48, %struct.device.397** %2, align 4, !dbg !18191
  br label %54, !dbg !18191

49:                                               ; preds = %40, %37
  br label %50, !dbg !18192

50:                                               ; preds = %49
  %51 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18193
  %52 = getelementptr inbounds %struct.device.397, %struct.device.397* %51, i32 1, !dbg !18193
  store %struct.device.397* %52, %struct.device.397** %4, align 4, !dbg !18193
  br label %34, !dbg !18194, !llvm.loop !18195

53:                                               ; preds = %34
  store %struct.device.397* null, %struct.device.397** %2, align 4, !dbg !18197
  br label %54, !dbg !18197

54:                                               ; preds = %53, %47, %27, %13
  %55 = load %struct.device.397*, %struct.device.397** %2, align 4, !dbg !18198
  ret %struct.device.397* %55, !dbg !18198
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_device_is_ready(%struct.device.397* noundef %0) #1 !dbg !18199 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.device.397*, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !18202, metadata !DIExpression()), !dbg !18203
  %4 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !18204
  %5 = icmp eq %struct.device.397* %4, null, !dbg !18206
  br i1 %5, label %6, label %7, !dbg !18207

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !18208
  br label %25, !dbg !18208

7:                                                ; preds = %1
  %8 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !18210
  %9 = getelementptr inbounds %struct.device.397, %struct.device.397* %8, i32 0, i32 3, !dbg !18211
  %10 = load %struct.device_state.444*, %struct.device_state.444** %9, align 4, !dbg !18211
  %11 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %10, i32 0, i32 1, !dbg !18212
  %12 = load i8, i8* %11, align 1, !dbg !18212
  %13 = and i8 %12, 1, !dbg !18212
  %14 = trunc i8 %13 to i1, !dbg !18212
  br i1 %14, label %15, label %23, !dbg !18213

15:                                               ; preds = %7
  %16 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !18214
  %17 = getelementptr inbounds %struct.device.397, %struct.device.397* %16, i32 0, i32 3, !dbg !18215
  %18 = load %struct.device_state.444*, %struct.device_state.444** %17, align 4, !dbg !18215
  %19 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %18, i32 0, i32 0, !dbg !18216
  %20 = load i8, i8* %19, align 1, !dbg !18216
  %21 = zext i8 %20 to i32, !dbg !18214
  %22 = icmp eq i32 %21, 0, !dbg !18217
  br label %23

23:                                               ; preds = %15, %7
  %24 = phi i1 [ false, %7 ], [ %22, %15 ], !dbg !18218
  store i1 %24, i1* %2, align 1, !dbg !18219
  br label %25, !dbg !18219

25:                                               ; preds = %23, %6
  %26 = load i1, i1* %2, align 1, !dbg !18220
  ret i1 %26, !dbg !18220
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_device_get_all_static(%struct.device.397** noundef %0) #1 !dbg !18221 {
  %2 = alloca %struct.device.397**, align 4
  store %struct.device.397** %0, %struct.device.397*** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397*** %2, metadata !18225, metadata !DIExpression()), !dbg !18226
  %3 = load %struct.device.397**, %struct.device.397*** %2, align 4, !dbg !18227
  store %struct.device.397* getelementptr inbounds ([0 x %struct.device.397], [0 x %struct.device.397]* @__device_start, i32 0, i32 0), %struct.device.397** %3, align 4, !dbg !18228
  ret i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.397]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.397]* @__device_start to i32)), i32 24), !dbg !18229
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_required_foreach(%struct.device.397* noundef %0, i32 (%struct.device.397*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !18230 {
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i32 (%struct.device.397*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !18237, metadata !DIExpression()), !dbg !18238
  store i32 (%struct.device.397*, i8*)* %1, i32 (%struct.device.397*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.397*, i8*)** %5, metadata !18239, metadata !DIExpression()), !dbg !18240
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !18241, metadata !DIExpression()), !dbg !18242
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18243, metadata !DIExpression()), !dbg !18244
  store i32 0, i32* %7, align 4, !dbg !18244
  call void @llvm.dbg.declare(metadata i16** %8, metadata !18245, metadata !DIExpression()), !dbg !18246
  %9 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18247
  %10 = call i16* @device_required_handles_get(%struct.device.397* noundef %9, i32* noundef %7) #10, !dbg !18248
  store i16* %10, i16** %8, align 4, !dbg !18246
  %11 = load i16*, i16** %8, align 4, !dbg !18249
  %12 = load i32, i32* %7, align 4, !dbg !18250
  %13 = load i32 (%struct.device.397*, i8*)*, i32 (%struct.device.397*, i8*)** %5, align 4, !dbg !18251
  %14 = load i8*, i8** %6, align 4, !dbg !18252
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.397*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !18253
  ret i32 %15, !dbg !18254
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_required_handles_get(%struct.device.397* noundef %0, i32* noundef %1) #1 !dbg !18255 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !18258, metadata !DIExpression()), !dbg !18259
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !18260, metadata !DIExpression()), !dbg !18261
  call void @llvm.dbg.declare(metadata i16** %5, metadata !18262, metadata !DIExpression()), !dbg !18263
  %7 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !18264
  %8 = getelementptr inbounds %struct.device.397, %struct.device.397* %7, i32 0, i32 5, !dbg !18265
  %9 = load i16*, i16** %8, align 4, !dbg !18265
  store i16* %9, i16** %5, align 4, !dbg !18263
  %10 = load i16*, i16** %5, align 4, !dbg !18266
  %11 = icmp ne i16* %10, null, !dbg !18268
  br i1 %11, label %12, label %35, !dbg !18269

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18270, metadata !DIExpression()), !dbg !18272
  store i32 0, i32* %6, align 4, !dbg !18272
  br label %13, !dbg !18273

13:                                               ; preds = %29, %12
  %14 = load i16*, i16** %5, align 4, !dbg !18274
  %15 = load i32, i32* %6, align 4, !dbg !18275
  %16 = getelementptr inbounds i16, i16* %14, i32 %15, !dbg !18274
  %17 = load i16, i16* %16, align 2, !dbg !18274
  %18 = sext i16 %17 to i32, !dbg !18274
  %19 = icmp ne i32 %18, 32767, !dbg !18276
  br i1 %19, label %20, label %27, !dbg !18277

20:                                               ; preds = %13
  %21 = load i16*, i16** %5, align 4, !dbg !18278
  %22 = load i32, i32* %6, align 4, !dbg !18279
  %23 = getelementptr inbounds i16, i16* %21, i32 %22, !dbg !18278
  %24 = load i16, i16* %23, align 2, !dbg !18278
  %25 = sext i16 %24 to i32, !dbg !18278
  %26 = icmp ne i32 %25, -32768, !dbg !18280
  br label %27

27:                                               ; preds = %20, %13
  %28 = phi i1 [ false, %13 ], [ %26, %20 ], !dbg !18281
  br i1 %28, label %29, label %32, !dbg !18273

29:                                               ; preds = %27
  %30 = load i32, i32* %6, align 4, !dbg !18282
  %31 = add i32 %30, 1, !dbg !18282
  store i32 %31, i32* %6, align 4, !dbg !18282
  br label %13, !dbg !18273, !llvm.loop !18284

32:                                               ; preds = %27
  %33 = load i32, i32* %6, align 4, !dbg !18286
  %34 = load i32*, i32** %4, align 4, !dbg !18287
  store i32 %33, i32* %34, align 4, !dbg !18288
  br label %35, !dbg !18289

35:                                               ; preds = %32, %2
  %36 = load i16*, i16** %5, align 4, !dbg !18290
  ret i16* %36, !dbg !18291
}

; Function Attrs: noinline nounwind optnone
define internal i32 @device_visitor(i16* noundef %0, i32 noundef %1, i32 (%struct.device.397*, i8*)* noundef %2, i8* noundef %3) #1 !dbg !18292 {
  %5 = alloca i32, align 4
  %6 = alloca i16*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32 (%struct.device.397*, i8*)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %struct.device.397*, align 4
  %13 = alloca i32, align 4
  store i16* %0, i16** %6, align 4
  call void @llvm.dbg.declare(metadata i16** %6, metadata !18295, metadata !DIExpression()), !dbg !18296
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18297, metadata !DIExpression()), !dbg !18298
  store i32 (%struct.device.397*, i8*)* %2, i32 (%struct.device.397*, i8*)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.397*, i8*)** %8, metadata !18299, metadata !DIExpression()), !dbg !18300
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !18301, metadata !DIExpression()), !dbg !18302
  call void @llvm.dbg.declare(metadata i32* %10, metadata !18303, metadata !DIExpression()), !dbg !18305
  store i32 0, i32* %10, align 4, !dbg !18305
  br label %14, !dbg !18306

14:                                               ; preds = %34, %4
  %15 = load i32, i32* %10, align 4, !dbg !18307
  %16 = load i32, i32* %7, align 4, !dbg !18309
  %17 = icmp ult i32 %15, %16, !dbg !18310
  br i1 %17, label %18, label %37, !dbg !18311

18:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i16* %11, metadata !18312, metadata !DIExpression()), !dbg !18314
  %19 = load i16*, i16** %6, align 4, !dbg !18315
  %20 = load i32, i32* %10, align 4, !dbg !18316
  %21 = getelementptr inbounds i16, i16* %19, i32 %20, !dbg !18315
  %22 = load i16, i16* %21, align 2, !dbg !18315
  store i16 %22, i16* %11, align 2, !dbg !18314
  call void @llvm.dbg.declare(metadata %struct.device.397** %12, metadata !18317, metadata !DIExpression()), !dbg !18318
  %23 = load i16, i16* %11, align 2, !dbg !18319
  %24 = call %struct.device.397* @device_from_handle(i16 noundef signext %23) #10, !dbg !18320
  store %struct.device.397* %24, %struct.device.397** %12, align 4, !dbg !18318
  call void @llvm.dbg.declare(metadata i32* %13, metadata !18321, metadata !DIExpression()), !dbg !18322
  %25 = load i32 (%struct.device.397*, i8*)*, i32 (%struct.device.397*, i8*)** %8, align 4, !dbg !18323
  %26 = load %struct.device.397*, %struct.device.397** %12, align 4, !dbg !18324
  %27 = load i8*, i8** %9, align 4, !dbg !18325
  %28 = call i32 %25(%struct.device.397* noundef %26, i8* noundef %27) #10, !dbg !18323
  store i32 %28, i32* %13, align 4, !dbg !18322
  %29 = load i32, i32* %13, align 4, !dbg !18326
  %30 = icmp slt i32 %29, 0, !dbg !18328
  br i1 %30, label %31, label %33, !dbg !18329

31:                                               ; preds = %18
  %32 = load i32, i32* %13, align 4, !dbg !18330
  store i32 %32, i32* %5, align 4, !dbg !18332
  br label %39, !dbg !18332

33:                                               ; preds = %18
  br label %34, !dbg !18333

34:                                               ; preds = %33
  %35 = load i32, i32* %10, align 4, !dbg !18334
  %36 = add i32 %35, 1, !dbg !18334
  store i32 %36, i32* %10, align 4, !dbg !18334
  br label %14, !dbg !18335, !llvm.loop !18336

37:                                               ; preds = %14
  %38 = load i32, i32* %7, align 4, !dbg !18338
  store i32 %38, i32* %5, align 4, !dbg !18339
  br label %39, !dbg !18339

39:                                               ; preds = %37, %31
  %40 = load i32, i32* %5, align 4, !dbg !18340
  ret i32 %40, !dbg !18340
}

; Function Attrs: noinline nounwind optnone
define internal %struct.device.397* @device_from_handle(i16 noundef signext %0) #1 !dbg !18341 {
  %2 = alloca i16, align 2
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32, align 4
  store i16 %0, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !18344, metadata !DIExpression()), !dbg !18345
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !18346, metadata !DIExpression()), !dbg !18347
  store %struct.device.397* null, %struct.device.397** %3, align 4, !dbg !18347
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18348, metadata !DIExpression()), !dbg !18349
  store i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.397]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.397]* @__device_start to i32)), i32 24), i32* %4, align 4, !dbg !18349
  %5 = load i16, i16* %2, align 2, !dbg !18350
  %6 = sext i16 %5 to i32, !dbg !18350
  %7 = icmp sgt i32 %6, 0, !dbg !18352
  br i1 %7, label %8, label %18, !dbg !18353

8:                                                ; preds = %1
  %9 = load i16, i16* %2, align 2, !dbg !18354
  %10 = sext i16 %9 to i32, !dbg !18355
  %11 = load i32, i32* %4, align 4, !dbg !18356
  %12 = icmp ule i32 %10, %11, !dbg !18357
  br i1 %12, label %13, label %18, !dbg !18358

13:                                               ; preds = %8
  %14 = load i16, i16* %2, align 2, !dbg !18359
  %15 = sext i16 %14 to i32, !dbg !18359
  %16 = sub nsw i32 %15, 1, !dbg !18361
  %17 = getelementptr inbounds [0 x %struct.device.397], [0 x %struct.device.397]* @__device_start, i32 0, i32 %16, !dbg !18362
  store %struct.device.397* %17, %struct.device.397** %3, align 4, !dbg !18363
  br label %18, !dbg !18364

18:                                               ; preds = %13, %8, %1
  %19 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !18365
  ret %struct.device.397* %19, !dbg !18366
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_supported_foreach(%struct.device.397* noundef %0, i32 (%struct.device.397*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !18367 {
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i32 (%struct.device.397*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.397* %0, %struct.device.397** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !18368, metadata !DIExpression()), !dbg !18369
  store i32 (%struct.device.397*, i8*)* %1, i32 (%struct.device.397*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.397*, i8*)** %5, metadata !18370, metadata !DIExpression()), !dbg !18371
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !18372, metadata !DIExpression()), !dbg !18373
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18374, metadata !DIExpression()), !dbg !18375
  store i32 0, i32* %7, align 4, !dbg !18375
  call void @llvm.dbg.declare(metadata i16** %8, metadata !18376, metadata !DIExpression()), !dbg !18377
  %9 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18378
  %10 = call i16* @device_supported_handles_get(%struct.device.397* noundef %9, i32* noundef %7) #10, !dbg !18379
  store i16* %10, i16** %8, align 4, !dbg !18377
  %11 = load i16*, i16** %8, align 4, !dbg !18380
  %12 = load i32, i32* %7, align 4, !dbg !18381
  %13 = load i32 (%struct.device.397*, i8*)*, i32 (%struct.device.397*, i8*)** %5, align 4, !dbg !18382
  %14 = load i8*, i8** %6, align 4, !dbg !18383
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.397*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !18384
  ret i32 %15, !dbg !18385
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_supported_handles_get(%struct.device.397* noundef %0, i32* noundef %1) #1 !dbg !18386 {
  %3 = alloca %struct.device.397*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.device.397* %0, %struct.device.397** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.397** %3, metadata !18387, metadata !DIExpression()), !dbg !18388
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !18389, metadata !DIExpression()), !dbg !18390
  call void @llvm.dbg.declare(metadata i16** %5, metadata !18391, metadata !DIExpression()), !dbg !18392
  %8 = load %struct.device.397*, %struct.device.397** %3, align 4, !dbg !18393
  %9 = getelementptr inbounds %struct.device.397, %struct.device.397* %8, i32 0, i32 5, !dbg !18394
  %10 = load i16*, i16** %9, align 4, !dbg !18394
  store i16* %10, i16** %5, align 4, !dbg !18392
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18395, metadata !DIExpression()), !dbg !18396
  store i32 0, i32* %6, align 4, !dbg !18396
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18397, metadata !DIExpression()), !dbg !18398
  store i32 0, i32* %7, align 4, !dbg !18398
  %11 = load i16*, i16** %5, align 4, !dbg !18399
  %12 = icmp ne i16* %11, null, !dbg !18401
  br i1 %12, label %13, label %42, !dbg !18402

13:                                               ; preds = %2
  br label %14, !dbg !18403

14:                                               ; preds = %25, %13
  %15 = load i32, i32* %6, align 4, !dbg !18405
  %16 = icmp ne i32 %15, 2, !dbg !18406
  br i1 %16, label %17, label %28, !dbg !18403

17:                                               ; preds = %14
  %18 = load i16*, i16** %5, align 4, !dbg !18407
  %19 = load i16, i16* %18, align 2, !dbg !18410
  %20 = sext i16 %19 to i32, !dbg !18410
  %21 = icmp eq i32 %20, -32768, !dbg !18411
  br i1 %21, label %22, label %25, !dbg !18412

22:                                               ; preds = %17
  %23 = load i32, i32* %6, align 4, !dbg !18413
  %24 = add i32 %23, 1, !dbg !18413
  store i32 %24, i32* %6, align 4, !dbg !18413
  br label %25, !dbg !18415

25:                                               ; preds = %22, %17
  %26 = load i16*, i16** %5, align 4, !dbg !18416
  %27 = getelementptr inbounds i16, i16* %26, i32 1, !dbg !18416
  store i16* %27, i16** %5, align 4, !dbg !18416
  br label %14, !dbg !18403, !llvm.loop !18417

28:                                               ; preds = %14
  br label %29, !dbg !18419

29:                                               ; preds = %36, %28
  %30 = load i16*, i16** %5, align 4, !dbg !18420
  %31 = load i32, i32* %7, align 4, !dbg !18421
  %32 = getelementptr inbounds i16, i16* %30, i32 %31, !dbg !18420
  %33 = load i16, i16* %32, align 2, !dbg !18420
  %34 = sext i16 %33 to i32, !dbg !18420
  %35 = icmp ne i32 %34, 32767, !dbg !18422
  br i1 %35, label %36, label %39, !dbg !18419

36:                                               ; preds = %29
  %37 = load i32, i32* %7, align 4, !dbg !18423
  %38 = add i32 %37, 1, !dbg !18423
  store i32 %38, i32* %7, align 4, !dbg !18423
  br label %29, !dbg !18419, !llvm.loop !18425

39:                                               ; preds = %29
  %40 = load i32, i32* %7, align 4, !dbg !18427
  %41 = load i32*, i32** %4, align 4, !dbg !18428
  store i32 %40, i32* %41, align 4, !dbg !18429
  br label %42, !dbg !18430

42:                                               ; preds = %39, %2
  %43 = load i16*, i16** %5, align 4, !dbg !18431
  ret i16* %43, !dbg !18432
}

; Function Attrs: noinline nounwind optnone
define dso_local i32* @z_impl_z_errno() #1 !dbg !18433 {
  %1 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18436
  %2 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %1, i32 0, i32 4, !dbg !18437
  ret i32* %2, !dbg !18438
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump(i32 noundef %0, %struct.__esf* noundef %1, %struct.k_thread.60* noundef %2) #1 !dbg !18439 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca %struct.k_thread.60*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18580, metadata !DIExpression()), !dbg !18581
  store %struct.__esf* %1, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !18582, metadata !DIExpression()), !dbg !18583
  store %struct.k_thread.60* %2, %struct.k_thread.60** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %6, metadata !18584, metadata !DIExpression()), !dbg !18585
  ret void, !dbg !18586
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) #1 !dbg !18587 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18590, metadata !DIExpression()), !dbg !18591
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18592, metadata !DIExpression()), !dbg !18593
  ret void, !dbg !18594
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_buffer_output(i8* noundef %0, i32 noundef %1) #1 !dbg !18595 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !18598, metadata !DIExpression()), !dbg !18599
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18600, metadata !DIExpression()), !dbg !18601
  ret void, !dbg !18602
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_query(i32 noundef %0, i8* noundef %1) #1 !dbg !18603 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18606, metadata !DIExpression()), !dbg !18607
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !18608, metadata !DIExpression()), !dbg !18609
  ret i32 -134, !dbg !18610
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* noundef %1) #1 !dbg !18611 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18614, metadata !DIExpression()), !dbg !18615
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !18616, metadata !DIExpression()), !dbg !18617
  ret i32 -134, !dbg !18618
}

; Function Attrs: noinline noreturn nounwind optnone
define weak dso_local void @arch_system_halt(i32 noundef %0) #5 !dbg !18619 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18621, metadata !DIExpression()), !dbg !18622
  %4 = load i32, i32* %3, align 4, !dbg !18623
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18624, metadata !DIExpression()) #9, !dbg !18626
  %5 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !18628, !srcloc !18629
  store i32 %5, i32* %2, align 4, !dbg !18628
  %6 = load i32, i32* %2, align 4, !dbg !18630
  br label %7, !dbg !18631

7:                                                ; preds = %7, %1
  br label %7, !dbg !18632, !llvm.loop !18635
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !18638 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18641, metadata !DIExpression()), !dbg !18642
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !18643, metadata !DIExpression()), !dbg !18644
  %9 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !18645
  br label %10, !dbg !18646

10:                                               ; preds = %2
  br label %11, !dbg !18647

11:                                               ; preds = %10
  %12 = load i32, i32* %3, align 4, !dbg !18651
  call void @arch_system_halt(i32 noundef %12) #12, !dbg !18652
  unreachable, !dbg !18652
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_fatal_halt(i32 noundef %0) #5 !dbg !18653 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18654, metadata !DIExpression()), !dbg !18655
  %3 = load i32, i32* %2, align 4, !dbg !18656
  call void @arch_system_halt(i32 noundef %3) #12, !dbg !18657
  unreachable, !dbg !18657
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !18658 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.__esf*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.k_thread.60*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18659, metadata !DIExpression()), !dbg !18660
  store %struct.__esf* %1, %struct.__esf** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %8, metadata !18661, metadata !DIExpression()), !dbg !18662
  call void @llvm.dbg.declare(metadata i32* %9, metadata !18663, metadata !DIExpression()), !dbg !18664
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18624, metadata !DIExpression()) #9, !dbg !18665
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !18667, !srcloc !18629
  store i32 %23, i32* %6, align 4, !dbg !18667
  %24 = load i32, i32* %6, align 4, !dbg !18668
  store i32 %24, i32* %9, align 4, !dbg !18664
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %10, metadata !18669, metadata !DIExpression()), !dbg !18670
  %25 = call %struct.k_thread.60* @k_current_get.166() #11, !dbg !18671
  store %struct.k_thread.60* %25, %struct.k_thread.60** %10, align 4, !dbg !18670
  br label %26, !dbg !18672

26:                                               ; preds = %2
  br label %27, !dbg !18673

27:                                               ; preds = %26
  %28 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !18677
  %29 = icmp ne %struct.__esf* %28, null, !dbg !18679
  br i1 %29, label %30, label %43, !dbg !18680

30:                                               ; preds = %27
  %31 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !18681
  store %struct.__esf* %31, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !18682, metadata !DIExpression()), !dbg !18686
  %32 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !18688
  %33 = getelementptr inbounds %struct.__esf, %struct.__esf* %32, i32 0, i32 0, !dbg !18689
  %34 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %33, i32 0, i32 7, !dbg !18690
  %35 = load i32, i32* %34, align 4, !dbg !18690
  %36 = and i32 %35, 511, !dbg !18691
  %37 = icmp ne i32 %36, 0, !dbg !18692
  %38 = zext i1 %37 to i64, !dbg !18692
  %39 = select i1 %37, i32 1, i32 0, !dbg !18692
  br i1 %37, label %40, label %43, !dbg !18693

40:                                               ; preds = %30
  br label %41, !dbg !18694

41:                                               ; preds = %40
  br label %42, !dbg !18696

42:                                               ; preds = %41
  br label %43, !dbg !18700

43:                                               ; preds = %42, %30, %27
  br label %44, !dbg !18701

44:                                               ; preds = %43
  br label %45, !dbg !18702

45:                                               ; preds = %44
  %46 = load i32, i32* %7, align 4, !dbg !18706
  %47 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !18707
  %48 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !18708
  call void @coredump(i32 noundef %46, %struct.__esf* noundef %47, %struct.k_thread.60* noundef %48) #10, !dbg !18709
  %49 = load i32, i32* %7, align 4, !dbg !18710
  %50 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !18711
  call void @k_sys_fatal_error_handler(i32 noundef %49, %struct.__esf* noundef %50) #10, !dbg !18712
  %51 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !18713
  %52 = icmp ne %struct.__esf* %51, null, !dbg !18717
  br i1 %52, label %53, label %64, !dbg !18718

53:                                               ; preds = %45
  %54 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !18719
  store %struct.__esf* %54, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !18682, metadata !DIExpression()), !dbg !18720
  %55 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !18722
  %56 = getelementptr inbounds %struct.__esf, %struct.__esf* %55, i32 0, i32 0, !dbg !18723
  %57 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %56, i32 0, i32 7, !dbg !18724
  %58 = load i32, i32* %57, align 4, !dbg !18724
  %59 = and i32 %58, 511, !dbg !18725
  %60 = icmp ne i32 %59, 0, !dbg !18726
  %61 = zext i1 %60 to i64, !dbg !18726
  %62 = select i1 %60, i32 1, i32 0, !dbg !18726
  br i1 %60, label %63, label %64, !dbg !18727

63:                                               ; preds = %53
  br label %64, !dbg !18728

64:                                               ; preds = %63, %53, %45
  %65 = load i32, i32* %9, align 4, !dbg !18730
  store i32 %65, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18731, metadata !DIExpression()) #9, !dbg !18733
  %66 = load i32, i32* %3, align 4, !dbg !18735
  %67 = icmp ne i32 %66, 0, !dbg !18737
  br i1 %67, label %68, label %69, !dbg !18738

68:                                               ; preds = %64
  br label %70, !dbg !18739

69:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !18741, !srcloc !18742
  br label %70, !dbg !18743

70:                                               ; preds = %68, %69
  %71 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !18744
  call void @k_thread_abort.167(%struct.k_thread.60* noundef %71) #10, !dbg !18747
  ret void, !dbg !18748
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get.166() #6 !dbg !18749 {
  %1 = call %struct.k_thread.60* @z_current_get.168() #11, !dbg !18753
  ret %struct.k_thread.60* %1, !dbg !18754
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort.167(%struct.k_thread.60* noundef %0) #1 !dbg !18755 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !18758, metadata !DIExpression()), !dbg !18759
  br label %3, !dbg !18760

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !18761, !srcloc !18763
  br label %4, !dbg !18761

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !18764
  call void bitcast (void (%struct.k_thread.132*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !18765
  ret void, !dbg !18766
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get.168() #6 !dbg !18767 {
  br label %1, !dbg !18768

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !18769, !srcloc !18771
  br label %2, !dbg !18769

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.132* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !18772
  ret %struct.k_thread.60* %3, !dbg !18773
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !18774 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !18777, metadata !DIExpression()), !dbg !18778
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18779, metadata !DIExpression()), !dbg !18780
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18781, metadata !DIExpression()), !dbg !18782
  %7 = load i8*, i8** %4, align 4, !dbg !18783
  %8 = load i32, i32* %5, align 4, !dbg !18784
  %9 = load i32, i32* %6, align 4, !dbg !18785
  %10 = call i8* @memset(i8* noundef %7, i32 noundef %8, i32 noundef %9) #10, !dbg !18786
  ret void, !dbg !18787
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !18788 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !18791, metadata !DIExpression()), !dbg !18792
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18793, metadata !DIExpression()), !dbg !18794
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18795, metadata !DIExpression()), !dbg !18796
  %7 = load i8*, i8** %4, align 4, !dbg !18797
  %8 = load i8*, i8** %5, align 4, !dbg !18798
  %9 = load i32, i32* %6, align 4, !dbg !18799
  %10 = call i8* @memcpy(i8* noundef %7, i8* noundef %8, i32 noundef %9) #10, !dbg !18800
  ret void, !dbg !18801
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_bss_zero() #1 !dbg !18802 {
  call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #10, !dbg !18803
  ret void, !dbg !18804
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_cpu(i32 noundef %0) #1 !dbg !18805 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18806, metadata !DIExpression()), !dbg !18807
  %3 = load i32, i32* %2, align 4, !dbg !18808
  call void @init_idle_thread(i32 noundef %3) #10, !dbg !18809
  %4 = load i32, i32* %2, align 4, !dbg !18810
  %5 = getelementptr inbounds [1 x %struct.k_thread.132], [1 x %struct.k_thread.132]* @z_idle_threads, i32 0, i32 %4, !dbg !18811
  %6 = load i32, i32* %2, align 4, !dbg !18812
  %7 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %6, !dbg !18813
  %8 = getelementptr inbounds %struct._cpu, %struct._cpu* %7, i32 0, i32 3, !dbg !18814
  store %struct.k_thread.132* %5, %struct.k_thread.132** %8, align 4, !dbg !18815
  %9 = load i32, i32* %2, align 4, !dbg !18816
  %10 = trunc i32 %9 to i8, !dbg !18816
  %11 = load i32, i32* %2, align 4, !dbg !18817
  %12 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %11, !dbg !18818
  %13 = getelementptr inbounds %struct._cpu, %struct._cpu* %12, i32 0, i32 5, !dbg !18819
  store i8 %10, i8* %13, align 4, !dbg !18820
  %14 = load i32, i32* %2, align 4, !dbg !18821
  %15 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %14, !dbg !18822
  %16 = getelementptr inbounds [2048 x %struct.z_thread_stack_element], [2048 x %struct.z_thread_stack_element]* %15, i32 0, i32 0, !dbg !18822
  %17 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %16) #10, !dbg !18823
  %18 = getelementptr inbounds i8, i8* %17, i32 2048, !dbg !18824
  %19 = load i32, i32* %2, align 4, !dbg !18825
  %20 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %19, !dbg !18826
  %21 = getelementptr inbounds %struct._cpu, %struct._cpu* %20, i32 0, i32 1, !dbg !18827
  store i8* %18, i8** %21, align 4, !dbg !18828
  ret void, !dbg !18829
}

; Function Attrs: noinline nounwind optnone
define internal void @init_idle_thread(i32 noundef %0) #1 !dbg !18830 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct.z_thread_stack_element*, align 4
  %5 = alloca i8*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18831, metadata !DIExpression()), !dbg !18832
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !18833, metadata !DIExpression()), !dbg !18834
  %6 = load i32, i32* %2, align 4, !dbg !18835
  %7 = getelementptr inbounds [1 x %struct.k_thread.132], [1 x %struct.k_thread.132]* @z_idle_threads, i32 0, i32 %6, !dbg !18836
  store %struct.k_thread.132* %7, %struct.k_thread.132** %3, align 4, !dbg !18834
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %4, metadata !18837, metadata !DIExpression()), !dbg !18840
  %8 = load i32, i32* %2, align 4, !dbg !18841
  %9 = getelementptr inbounds [1 x [256 x %struct.z_thread_stack_element]], [1 x [256 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %8, !dbg !18842
  %10 = getelementptr inbounds [256 x %struct.z_thread_stack_element], [256 x %struct.z_thread_stack_element]* %9, i32 0, i32 0, !dbg !18842
  store %struct.z_thread_stack_element* %10, %struct.z_thread_stack_element** %4, align 4, !dbg !18840
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18843, metadata !DIExpression()), !dbg !18844
  store i8* null, i8** %5, align 4, !dbg !18844
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !18845
  %12 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %4, align 4, !dbg !18846
  %13 = load i32, i32* %2, align 4, !dbg !18847
  %14 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %13, !dbg !18848
  %15 = bitcast %struct._cpu* %14 to i8*, !dbg !18849
  %16 = load i8*, i8** %5, align 4, !dbg !18850
  %17 = call i8* @z_setup_new_thread(%struct.k_thread.132* noundef %11, %struct.z_thread_stack_element* noundef %12, i32 noundef 256, void (i8*, i8*, i8*)* noundef @idle, i8* noundef %15, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef %16) #10, !dbg !18851
  %18 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !18852
  call void @z_mark_thread_as_started(%struct.k_thread.132* noundef %18) #10, !dbg !18853
  ret void, !dbg !18854
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %0) #1 !dbg !18855 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !18858, metadata !DIExpression()), !dbg !18859
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !18860
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !18861
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !18862
  ret i8* %5, !dbg !18863
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started(%struct.k_thread.132* noundef %0) #1 !dbg !18864 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !18868, metadata !DIExpression()), !dbg !18869
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !18870
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !18871
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !18872
  %6 = load i8, i8* %5, align 1, !dbg !18873
  %7 = zext i8 %6 to i32, !dbg !18873
  %8 = and i32 %7, -5, !dbg !18873
  %9 = trunc i32 %8 to i8, !dbg !18873
  store i8 %9, i8* %5, align 1, !dbg !18873
  ret void, !dbg !18874
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_cstart() #5 !dbg !18875 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.132, align 8
  call void @gcov_static_init() #10, !dbg !18876
  call void @z_sys_init_run_level(i32 noundef 0) #10, !dbg !18877
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18878, metadata !DIExpression()) #9, !dbg !18881
  %4 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #13, !dbg !18886
  %5 = ptrtoint i8* %4 to i32, !dbg !18887
  %6 = add i32 %5, 2048, !dbg !18888
  store i32 %6, i32* %2, align 4, !dbg !18881
  %7 = load i32, i32* %2, align 4, !dbg !18889
  store i32 %7, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !18890, metadata !DIExpression()) #9, !dbg !18892
  %8 = load i32, i32* %1, align 4, !dbg !18894
  call void asm sideeffect "MSR msp, $0", "r"(i32 %8) #9, !dbg !18895, !srcloc !18896
  call void @__NVIC_SetPriority.177(i32 noundef -2, i32 noundef 255) #13, !dbg !18897
  call void @z_arm_fault_init() #13, !dbg !18900
  call void @z_arm_cpu_idle_init() #13, !dbg !18901
  br label %9, !dbg !18902

9:                                                ; preds = %0
  br label %10, !dbg !18903

10:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.k_thread.132* %3, metadata !18905, metadata !DIExpression()), !dbg !18906
  call void @z_dummy_thread_init(%struct.k_thread.132* noundef %3) #10, !dbg !18907
  call void @z_device_state_init() #10, !dbg !18908
  call void @z_sys_init_run_level(i32 noundef 1) #10, !dbg !18909
  call void @z_sys_init_run_level(i32 noundef 2) #10, !dbg !18910
  %11 = call i8* @prepare_multithreading() #10, !dbg !18911
  call void @switch_to_main_thread(i8* noundef %11) #12, !dbg !18912
  unreachable, !dbg !18912
}

; Function Attrs: noinline nounwind optnone
define internal void @gcov_static_init() #1 !dbg !18913 {
  ret void, !dbg !18915
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sys_init_run_level(i32 noundef %0) #1 !dbg !2042 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.init_entry*, align 4
  %4 = alloca %struct.device.397*, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18916, metadata !DIExpression()), !dbg !18917
  call void @llvm.dbg.declare(metadata %struct.init_entry** %3, metadata !18918, metadata !DIExpression()), !dbg !18919
  %6 = load i32, i32* %2, align 4, !dbg !18920
  %7 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %6, !dbg !18922
  %8 = load %struct.init_entry*, %struct.init_entry** %7, align 4, !dbg !18922
  store %struct.init_entry* %8, %struct.init_entry** %3, align 4, !dbg !18923
  br label %9, !dbg !18924

9:                                                ; preds = %56, %1
  %10 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !18925
  %11 = load i32, i32* %2, align 4, !dbg !18927
  %12 = add i32 %11, 1, !dbg !18928
  %13 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %12, !dbg !18929
  %14 = load %struct.init_entry*, %struct.init_entry** %13, align 4, !dbg !18929
  %15 = icmp ult %struct.init_entry* %10, %14, !dbg !18930
  br i1 %15, label %16, label %59, !dbg !18931

16:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.device.397** %4, metadata !18932, metadata !DIExpression()), !dbg !18934
  %17 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !18935
  %18 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %17, i32 0, i32 1, !dbg !18936
  %19 = load %struct.device.397*, %struct.device.397** %18, align 4, !dbg !18936
  store %struct.device.397* %19, %struct.device.397** %4, align 4, !dbg !18934
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18937, metadata !DIExpression()), !dbg !18938
  %20 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !18939
  %21 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %20, i32 0, i32 0, !dbg !18940
  %22 = load i32 (%struct.device.397*)*, i32 (%struct.device.397*)** %21, align 4, !dbg !18940
  %23 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18941
  %24 = call i32 %22(%struct.device.397* noundef %23) #10, !dbg !18939
  store i32 %24, i32* %5, align 4, !dbg !18938
  %25 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18942
  %26 = icmp ne %struct.device.397* %25, null, !dbg !18944
  br i1 %26, label %27, label %55, !dbg !18945

27:                                               ; preds = %16
  %28 = load i32, i32* %5, align 4, !dbg !18946
  %29 = icmp ne i32 %28, 0, !dbg !18949
  br i1 %29, label %30, label %47, !dbg !18950

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 4, !dbg !18951
  %32 = icmp slt i32 %31, 0, !dbg !18954
  br i1 %32, label %33, label %36, !dbg !18955

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !18956
  %35 = sub nsw i32 0, %34, !dbg !18958
  store i32 %35, i32* %5, align 4, !dbg !18959
  br label %36, !dbg !18960

36:                                               ; preds = %33, %30
  %37 = load i32, i32* %5, align 4, !dbg !18961
  %38 = icmp sgt i32 %37, 255, !dbg !18963
  br i1 %38, label %39, label %40, !dbg !18964

39:                                               ; preds = %36
  store i32 255, i32* %5, align 4, !dbg !18965
  br label %40, !dbg !18967

40:                                               ; preds = %39, %36
  %41 = load i32, i32* %5, align 4, !dbg !18968
  %42 = trunc i32 %41 to i8, !dbg !18968
  %43 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18969
  %44 = getelementptr inbounds %struct.device.397, %struct.device.397* %43, i32 0, i32 3, !dbg !18970
  %45 = load %struct.device_state.444*, %struct.device_state.444** %44, align 4, !dbg !18970
  %46 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %45, i32 0, i32 0, !dbg !18971
  store i8 %42, i8* %46, align 1, !dbg !18972
  br label %47, !dbg !18973

47:                                               ; preds = %40, %27
  %48 = load %struct.device.397*, %struct.device.397** %4, align 4, !dbg !18974
  %49 = getelementptr inbounds %struct.device.397, %struct.device.397* %48, i32 0, i32 3, !dbg !18975
  %50 = load %struct.device_state.444*, %struct.device_state.444** %49, align 4, !dbg !18975
  %51 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %50, i32 0, i32 1, !dbg !18976
  %52 = load i8, i8* %51, align 1, !dbg !18977
  %53 = and i8 %52, -2, !dbg !18977
  %54 = or i8 %53, 1, !dbg !18977
  store i8 %54, i8* %51, align 1, !dbg !18977
  br label %55, !dbg !18978

55:                                               ; preds = %47, %16
  br label %56, !dbg !18979

56:                                               ; preds = %55
  %57 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !18980
  %58 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %57, i32 1, !dbg !18980
  store %struct.init_entry* %58, %struct.init_entry** %3, align 4, !dbg !18980
  br label %9, !dbg !18981, !llvm.loop !18982

59:                                               ; preds = %9
  ret void, !dbg !18984
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.177(i32 noundef %0, i32 noundef %1) #1 !dbg !18985 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18986, metadata !DIExpression()), !dbg !18987
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18988, metadata !DIExpression()), !dbg !18989
  %5 = load i32, i32* %3, align 4, !dbg !18990
  %6 = icmp sge i32 %5, 0, !dbg !18992
  br i1 %6, label %7, label %29, !dbg !18993

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !18994
  %9 = lshr i32 %8, 2, !dbg !18994
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !18996
  %11 = load volatile i32, i32* %10, align 4, !dbg !18996
  %12 = load i32, i32* %3, align 4, !dbg !18997
  %13 = and i32 %12, 3, !dbg !18997
  %14 = mul i32 %13, 8, !dbg !18997
  %15 = shl i32 255, %14, !dbg !18998
  %16 = xor i32 %15, -1, !dbg !18999
  %17 = and i32 %11, %16, !dbg !19000
  %18 = load i32, i32* %4, align 4, !dbg !19001
  %19 = shl i32 %18, 6, !dbg !19002
  %20 = and i32 %19, 255, !dbg !19003
  %21 = load i32, i32* %3, align 4, !dbg !19004
  %22 = and i32 %21, 3, !dbg !19004
  %23 = mul i32 %22, 8, !dbg !19004
  %24 = shl i32 %20, %23, !dbg !19005
  %25 = or i32 %17, %24, !dbg !19006
  %26 = load i32, i32* %3, align 4, !dbg !19007
  %27 = lshr i32 %26, 2, !dbg !19007
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !19008
  store volatile i32 %25, i32* %28, align 4, !dbg !19009
  br label %55, !dbg !19010

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !19011
  %31 = and i32 %30, 15, !dbg !19011
  %32 = sub i32 %31, 8, !dbg !19011
  %33 = lshr i32 %32, 2, !dbg !19011
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !19013
  %35 = load volatile i32, i32* %34, align 4, !dbg !19013
  %36 = load i32, i32* %3, align 4, !dbg !19014
  %37 = and i32 %36, 3, !dbg !19014
  %38 = mul i32 %37, 8, !dbg !19014
  %39 = shl i32 255, %38, !dbg !19015
  %40 = xor i32 %39, -1, !dbg !19016
  %41 = and i32 %35, %40, !dbg !19017
  %42 = load i32, i32* %4, align 4, !dbg !19018
  %43 = shl i32 %42, 6, !dbg !19019
  %44 = and i32 %43, 255, !dbg !19020
  %45 = load i32, i32* %3, align 4, !dbg !19021
  %46 = and i32 %45, 3, !dbg !19021
  %47 = mul i32 %46, 8, !dbg !19021
  %48 = shl i32 %44, %47, !dbg !19022
  %49 = or i32 %41, %48, !dbg !19023
  %50 = load i32, i32* %3, align 4, !dbg !19024
  %51 = and i32 %50, 15, !dbg !19024
  %52 = sub i32 %51, 8, !dbg !19024
  %53 = lshr i32 %52, 2, !dbg !19024
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !19025
  store volatile i32 %49, i32* %54, align 4, !dbg !19026
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !19027
}

declare dso_local void @z_arm_cpu_idle_init() #0

; Function Attrs: noinline nounwind optnone
define internal void @z_dummy_thread_init(%struct.k_thread.132* noundef %0) #1 !dbg !19028 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !19030, metadata !DIExpression()), !dbg !19031
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !19032
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !19033
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !19034
  store i8 1, i8* %5, align 1, !dbg !19035
  %6 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !19036
  %7 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %6, i32 0, i32 0, !dbg !19037
  %8 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %7, i32 0, i32 2, !dbg !19038
  store i8 1, i8* %8, align 4, !dbg !19039
  %9 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !19040
  %10 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %9, i32 0, i32 5, !dbg !19041
  store %struct.k_heap.130* null, %struct.k_heap.130** %10, align 4, !dbg !19042
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !19043
  store %struct.k_thread.132* %11, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19044
  ret void, !dbg !19045
}

; Function Attrs: noinline nounwind optnone
define internal i8* @prepare_multithreading() #1 !dbg !19046 {
  %1 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata i8** %1, metadata !19049, metadata !DIExpression()), !dbg !19050
  call void @z_sched_init() #10, !dbg !19051
  store %struct.k_thread.132* @z_main_thread, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 0), align 4, !dbg !19052
  %2 = call i8* @z_setup_new_thread(%struct.k_thread.132* noundef @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0)) #10, !dbg !19053
  store i8* %2, i8** %1, align 4, !dbg !19054
  call void @z_mark_thread_as_started(%struct.k_thread.132* noundef @z_main_thread) #10, !dbg !19055
  call void @z_ready_thread(%struct.k_thread.132* noundef @z_main_thread) #10, !dbg !19056
  call void @z_init_cpu(i32 noundef 0) #10, !dbg !19057
  %3 = load i8*, i8** %1, align 4, !dbg !19058
  ret i8* %3, !dbg !19059
}

; Function Attrs: noinline noreturn nounwind optnone
define internal void @switch_to_main_thread(i8* noundef %0) #5 !dbg !19060 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19063, metadata !DIExpression()), !dbg !19064
  %3 = load i8*, i8** %2, align 4, !dbg !19065
  call void @arch_switch_to_main_thread(%struct.k_thread.132* noundef @z_main_thread, i8* noundef %3, void (i8*, i8*, i8*)* noundef @bg_thread_main) #10, !dbg !19066
  unreachable, !dbg !19067
}

; Function Attrs: noinline nounwind optnone
define internal void @bg_thread_main(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !19068 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !19069, metadata !DIExpression()), !dbg !19070
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !19071, metadata !DIExpression()), !dbg !19072
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19073, metadata !DIExpression()), !dbg !19074
  %7 = load i8*, i8** %4, align 4, !dbg !19075
  %8 = load i8*, i8** %5, align 4, !dbg !19076
  %9 = load i8*, i8** %6, align 4, !dbg !19077
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !19078
  call void @z_sys_init_run_level(i32 noundef 3) #10, !dbg !19079
  call void @boot_banner() #10, !dbg !19080
  call void @z_sys_init_run_level(i32 noundef 4) #10, !dbg !19081
  call void @z_init_static_threads() #10, !dbg !19082
  call void @main() #10, !dbg !19083
  %10 = load i8, i8* getelementptr inbounds (%struct.k_thread.132, %struct.k_thread.132* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !19084
  %11 = zext i8 %10 to i32, !dbg !19084
  %12 = and i32 %11, -2, !dbg !19084
  %13 = trunc i32 %12 to i8, !dbg !19084
  store i8 %13, i8* getelementptr inbounds (%struct.k_thread.132, %struct.k_thread.132* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !19084
  ret void, !dbg !19085
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach(void (%struct.k_thread.132*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !19086 {
  %3 = alloca void (%struct.k_thread.132*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.132*, i8*)* %0, void (%struct.k_thread.132*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.132*, i8*)** %3, metadata !19095, metadata !DIExpression()), !dbg !19096
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !19097, metadata !DIExpression()), !dbg !19098
  ret void, !dbg !19099
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread.132*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !19100 {
  %3 = alloca void (%struct.k_thread.132*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.132*, i8*)* %0, void (%struct.k_thread.132*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.132*, i8*)** %3, metadata !19101, metadata !DIExpression()), !dbg !19102
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !19103, metadata !DIExpression()), !dbg !19104
  ret void, !dbg !19105
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_is_in_isr() #1 !dbg !19106 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !19107, metadata !DIExpression()) #9, !dbg !19109
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !19113, !srcloc !19114
  store i32 %2, i32* %1, align 4, !dbg !19113
  %3 = load i32, i32* %1, align 4, !dbg !19115
  %4 = icmp ne i32 %3, 0, !dbg !19116
  %5 = zext i1 %4 to i64, !dbg !19116
  %6 = select i1 %4, i32 1, i32 0, !dbg !19116
  ret i1 %4, !dbg !19117
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_set() #1 !dbg !19118 {
  %1 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19119
  %2 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %1, i32 0, i32 0, !dbg !19120
  %3 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %2, i32 0, i32 2, !dbg !19121
  %4 = load i8, i8* %3, align 4, !dbg !19122
  %5 = zext i8 %4 to i32, !dbg !19122
  %6 = or i32 %5, 1, !dbg !19122
  %7 = trunc i32 %6 to i8, !dbg !19122
  store i8 %7, i8* %3, align 4, !dbg !19122
  ret void, !dbg !19123
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_clear() #1 !dbg !19124 {
  %1 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19125
  %2 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %1, i32 0, i32 0, !dbg !19126
  %3 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %2, i32 0, i32 2, !dbg !19127
  %4 = load i8, i8* %3, align 4, !dbg !19128
  %5 = zext i8 %4 to i32, !dbg !19128
  %6 = and i32 %5, -2, !dbg !19128
  %7 = trunc i32 %6 to i8, !dbg !19128
  store i8 %7, i8* %3, align 4, !dbg !19128
  ret void, !dbg !19129
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_is_thread_essential() #1 !dbg !19130 {
  %1 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19131
  %2 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %1, i32 0, i32 0, !dbg !19132
  %3 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %2, i32 0, i32 2, !dbg !19133
  %4 = load i8, i8* %3, align 4, !dbg !19133
  %5 = zext i8 %4 to i32, !dbg !19131
  %6 = and i32 %5, 1, !dbg !19134
  %7 = icmp eq i32 %6, 1, !dbg !19135
  ret i1 %7, !dbg !19136
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread.132* noundef %0, i8* noundef %1) #1 !dbg !19137 {
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca i8*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !19140, metadata !DIExpression()), !dbg !19141
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !19142, metadata !DIExpression()), !dbg !19143
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !19144
  %6 = load i8*, i8** %4, align 4, !dbg !19145
  br label %7, !dbg !19146

7:                                                ; preds = %2
  br label %8, !dbg !19147

8:                                                ; preds = %7
  ret i32 -88, !dbg !19149
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_name_get(%struct.k_thread.132* noundef %0) #1 !dbg !19150 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !19153, metadata !DIExpression()), !dbg !19154
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !19155
  ret i8* null, !dbg !19156
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread.132* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !19157 {
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !19160, metadata !DIExpression()), !dbg !19161
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !19162, metadata !DIExpression()), !dbg !19163
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19164, metadata !DIExpression()), !dbg !19165
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !19166
  %8 = load i8*, i8** %5, align 4, !dbg !19167
  %9 = load i32, i32* %6, align 4, !dbg !19168
  ret i32 -88, !dbg !19169
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_state_str(%struct.k_thread.132* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !2062 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store %struct.k_thread.132* %0, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !19170, metadata !DIExpression()), !dbg !19171
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19172, metadata !DIExpression()), !dbg !19173
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19174, metadata !DIExpression()), !dbg !19175
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19176, metadata !DIExpression()), !dbg !19177
  store i32 0, i32* %8, align 4, !dbg !19177
  call void @llvm.dbg.declare(metadata i8* %9, metadata !19178, metadata !DIExpression()), !dbg !19179
  call void @llvm.dbg.declare(metadata i8* %10, metadata !19180, metadata !DIExpression()), !dbg !19181
  %12 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !19182
  %13 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %12, i32 0, i32 0, !dbg !19183
  %14 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %13, i32 0, i32 3, !dbg !19184
  %15 = load i8, i8* %14, align 1, !dbg !19184
  store i8 %15, i8* %10, align 1, !dbg !19181
  %16 = load i8*, i8** %6, align 4, !dbg !19185
  %17 = icmp eq i8* %16, null, !dbg !19187
  br i1 %17, label %21, label %18, !dbg !19188

18:                                               ; preds = %3
  %19 = load i32, i32* %7, align 4, !dbg !19189
  %20 = icmp eq i32 %19, 0, !dbg !19190
  br i1 %20, label %21, label %22, !dbg !19191

21:                                               ; preds = %18, %3
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.181, i32 0, i32 0), i8** %4, align 4, !dbg !19192
  br label %88, !dbg !19192

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4, !dbg !19194
  %24 = add i32 %23, -1, !dbg !19194
  store i32 %24, i32* %7, align 4, !dbg !19194
  call void @llvm.dbg.declare(metadata i8* %11, metadata !19195, metadata !DIExpression()), !dbg !19197
  store i8 0, i8* %11, align 1, !dbg !19197
  br label %25, !dbg !19198

25:                                               ; preds = %80, %22
  %26 = load i8, i8* %10, align 1, !dbg !19199
  %27 = zext i8 %26 to i32, !dbg !19199
  %28 = icmp ne i32 %27, 0, !dbg !19201
  br i1 %28, label %29, label %83, !dbg !19202

29:                                               ; preds = %25
  %30 = load i8, i8* %11, align 1, !dbg !19203
  %31 = zext i8 %30 to i32, !dbg !19203
  %32 = shl i32 1, %31, !dbg !19203
  %33 = trunc i32 %32 to i8, !dbg !19203
  store i8 %33, i8* %9, align 1, !dbg !19205
  %34 = load i8, i8* %10, align 1, !dbg !19206
  %35 = zext i8 %34 to i32, !dbg !19206
  %36 = load i8, i8* %9, align 1, !dbg !19208
  %37 = zext i8 %36 to i32, !dbg !19208
  %38 = and i32 %35, %37, !dbg !19209
  %39 = icmp eq i32 %38, 0, !dbg !19210
  br i1 %39, label %40, label %41, !dbg !19211

40:                                               ; preds = %29
  br label %80, !dbg !19212

41:                                               ; preds = %29
  %42 = load i8*, i8** %6, align 4, !dbg !19214
  %43 = load i32, i32* %8, align 4, !dbg !19215
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !19216
  %45 = load i32, i32* %7, align 4, !dbg !19217
  %46 = load i32, i32* %8, align 4, !dbg !19218
  %47 = sub i32 %45, %46, !dbg !19219
  %48 = load i8, i8* %11, align 1, !dbg !19220
  %49 = zext i8 %48 to i32, !dbg !19221
  %50 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %49, !dbg !19221
  %51 = load i8*, i8** %50, align 4, !dbg !19221
  %52 = load i8, i8* %11, align 1, !dbg !19222
  %53 = zext i8 %52 to i32, !dbg !19223
  %54 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %53, !dbg !19223
  %55 = load i32, i32* %54, align 4, !dbg !19223
  %56 = call i32 @copy_bytes(i8* noundef %44, i32 noundef %47, i8* noundef %51, i32 noundef %55) #10, !dbg !19224
  %57 = load i32, i32* %8, align 4, !dbg !19225
  %58 = add i32 %57, %56, !dbg !19225
  store i32 %58, i32* %8, align 4, !dbg !19225
  %59 = load i8, i8* %9, align 1, !dbg !19226
  %60 = zext i8 %59 to i32, !dbg !19226
  %61 = xor i32 %60, -1, !dbg !19227
  %62 = load i8, i8* %10, align 1, !dbg !19228
  %63 = zext i8 %62 to i32, !dbg !19228
  %64 = and i32 %63, %61, !dbg !19228
  %65 = trunc i32 %64 to i8, !dbg !19228
  store i8 %65, i8* %10, align 1, !dbg !19228
  %66 = load i8, i8* %10, align 1, !dbg !19229
  %67 = zext i8 %66 to i32, !dbg !19229
  %68 = icmp ne i32 %67, 0, !dbg !19231
  br i1 %68, label %69, label %79, !dbg !19232

69:                                               ; preds = %41
  %70 = load i8*, i8** %6, align 4, !dbg !19233
  %71 = load i32, i32* %8, align 4, !dbg !19235
  %72 = getelementptr inbounds i8, i8* %70, i32 %71, !dbg !19236
  %73 = load i32, i32* %7, align 4, !dbg !19237
  %74 = load i32, i32* %8, align 4, !dbg !19238
  %75 = sub i32 %73, %74, !dbg !19239
  %76 = call i32 @copy_bytes(i8* noundef %72, i32 noundef %75, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.182, i32 0, i32 0), i32 noundef 1) #10, !dbg !19240
  %77 = load i32, i32* %8, align 4, !dbg !19241
  %78 = add i32 %77, %76, !dbg !19241
  store i32 %78, i32* %8, align 4, !dbg !19241
  br label %79, !dbg !19242

79:                                               ; preds = %69, %41
  br label %80, !dbg !19243

80:                                               ; preds = %79, %40
  %81 = load i8, i8* %11, align 1, !dbg !19244
  %82 = add i8 %81, 1, !dbg !19244
  store i8 %82, i8* %11, align 1, !dbg !19244
  br label %25, !dbg !19245, !llvm.loop !19246

83:                                               ; preds = %25
  %84 = load i8*, i8** %6, align 4, !dbg !19248
  %85 = load i32, i32* %8, align 4, !dbg !19249
  %86 = getelementptr inbounds i8, i8* %84, i32 %85, !dbg !19248
  store i8 0, i8* %86, align 1, !dbg !19250
  %87 = load i8*, i8** %6, align 4, !dbg !19251
  store i8* %87, i8** %4, align 4, !dbg !19252
  br label %88, !dbg !19252

88:                                               ; preds = %83, %21
  %89 = load i8*, i8** %4, align 4, !dbg !19253
  ret i8* %89, !dbg !19253
}

; Function Attrs: noinline nounwind optnone
define internal i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #1 !dbg !19254 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !19257, metadata !DIExpression()), !dbg !19258
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19259, metadata !DIExpression()), !dbg !19260
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !19261, metadata !DIExpression()), !dbg !19262
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19263, metadata !DIExpression()), !dbg !19264
  call void @llvm.dbg.declare(metadata i32* %9, metadata !19265, metadata !DIExpression()), !dbg !19266
  %10 = load i32, i32* %6, align 4, !dbg !19267
  %11 = load i32, i32* %8, align 4, !dbg !19267
  %12 = icmp ult i32 %10, %11, !dbg !19267
  br i1 %12, label %13, label %15, !dbg !19267

13:                                               ; preds = %4
  %14 = load i32, i32* %6, align 4, !dbg !19267
  br label %17, !dbg !19267

15:                                               ; preds = %4
  %16 = load i32, i32* %8, align 4, !dbg !19267
  br label %17, !dbg !19267

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ], !dbg !19267
  store i32 %18, i32* %9, align 4, !dbg !19268
  %19 = load i8*, i8** %5, align 4, !dbg !19269
  %20 = load i8*, i8** %7, align 4, !dbg !19270
  %21 = load i32, i32* %9, align 4, !dbg !19271
  %22 = call i8* @memcpy(i8* noundef %19, i8* noundef %20, i32 noundef %21) #10, !dbg !19272
  %23 = load i32, i32* %9, align 4, !dbg !19273
  ret i32 %23, !dbg !19274
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_start(%struct.k_thread.132* noundef %0) #1 !dbg !19275 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !19278, metadata !DIExpression()), !dbg !19279
  br label %3, !dbg !19280

3:                                                ; preds = %1
  br label %4, !dbg !19281

4:                                                ; preds = %3
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !19283
  call void @z_sched_start(%struct.k_thread.132* noundef %5) #10, !dbg !19284
  ret void, !dbg !19285
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @z_setup_new_thread(%struct.k_thread.132* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) #1 !dbg !19286 {
  %11 = alloca i8*, align 4
  %12 = alloca %struct.k_thread.132*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 4
  %22 = alloca i8*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %12, metadata !19294, metadata !DIExpression()), !dbg !19295
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !19296, metadata !DIExpression()), !dbg !19297
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !19298, metadata !DIExpression()), !dbg !19299
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !19300, metadata !DIExpression()), !dbg !19301
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !19302, metadata !DIExpression()), !dbg !19303
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !19304, metadata !DIExpression()), !dbg !19305
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !19306, metadata !DIExpression()), !dbg !19307
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !19308, metadata !DIExpression()), !dbg !19309
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !19310, metadata !DIExpression()), !dbg !19311
  store i8* %9, i8** %21, align 4
  call void @llvm.dbg.declare(metadata i8** %21, metadata !19312, metadata !DIExpression()), !dbg !19313
  call void @llvm.dbg.declare(metadata i8** %22, metadata !19314, metadata !DIExpression()), !dbg !19315
  br label %23, !dbg !19316

23:                                               ; preds = %10
  br label %24, !dbg !19317

24:                                               ; preds = %23
  %25 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19319
  %26 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %25, i32 0, i32 3, !dbg !19320
  call void @z_waitq_init(%union.anon.121* noundef %26) #10, !dbg !19321
  %27 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19322
  %28 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %27, i32 0, i32 0, !dbg !19323
  %29 = load i32, i32* %19, align 4, !dbg !19324
  %30 = load i32, i32* %20, align 4, !dbg !19325
  call void @z_init_thread_base(%struct._thread_base.125* noundef %28, i32 noundef %29, i32 noundef 4, i32 noundef %30) #10, !dbg !19326
  %31 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19327
  %32 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !19328
  %33 = load i32, i32* %14, align 4, !dbg !19329
  %34 = call i8* @setup_thread_stack(%struct.k_thread.132* noundef %31, %struct.z_thread_stack_element* noundef %32, i32 noundef %33) #10, !dbg !19330
  store i8* %34, i8** %22, align 4, !dbg !19331
  %35 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19332
  %36 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !19333
  %37 = load i8*, i8** %22, align 4, !dbg !19334
  %38 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !19335
  %39 = load i8*, i8** %16, align 4, !dbg !19336
  %40 = load i8*, i8** %17, align 4, !dbg !19337
  %41 = load i8*, i8** %18, align 4, !dbg !19338
  call void @arch_new_thread(%struct.k_thread.132* noundef %35, %struct.z_thread_stack_element* noundef %36, i8* noundef %37, void (i8*, i8*, i8*)* noundef %38, i8* noundef %39, i8* noundef %40, i8* noundef %41) #10, !dbg !19339
  %42 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19340
  %43 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %42, i32 0, i32 2, !dbg !19341
  store i8* null, i8** %43, align 4, !dbg !19342
  %44 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19343
  %45 = icmp ne %struct.k_thread.132* %44, null, !dbg !19343
  br i1 %45, label %50, label %46, !dbg !19345

46:                                               ; preds = %24
  %47 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19346
  %48 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %47, i32 0, i32 5, !dbg !19348
  store %struct.k_heap.130* null, %struct.k_heap.130** %48, align 4, !dbg !19349
  %49 = load i8*, i8** %22, align 4, !dbg !19350
  store i8* %49, i8** %11, align 4, !dbg !19351
  br label %59, !dbg !19351

50:                                               ; preds = %24
  %51 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19352
  %52 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %51, i32 0, i32 5, !dbg !19353
  %53 = load %struct.k_heap.130*, %struct.k_heap.130** %52, align 4, !dbg !19353
  %54 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19354
  %55 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %54, i32 0, i32 5, !dbg !19355
  store %struct.k_heap.130* %53, %struct.k_heap.130** %55, align 4, !dbg !19356
  br label %56, !dbg !19357

56:                                               ; preds = %50
  br label %57, !dbg !19358

57:                                               ; preds = %56
  %58 = load i8*, i8** %22, align 4, !dbg !19360
  store i8* %58, i8** %11, align 4, !dbg !19361
  br label %59, !dbg !19361

59:                                               ; preds = %57, %46
  %60 = load i8*, i8** %11, align 4, !dbg !19362
  ret i8* %60, !dbg !19362
}

; Function Attrs: noinline nounwind optnone
define internal void @z_waitq_init(%union.anon.121* noundef %0) #1 !dbg !19363 {
  %2 = alloca %union.anon.121*, align 4
  store %union.anon.121* %0, %union.anon.121** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %2, metadata !19367, metadata !DIExpression()), !dbg !19368
  %3 = load %union.anon.121*, %union.anon.121** %2, align 4, !dbg !19369
  %4 = getelementptr inbounds %union.anon.121, %union.anon.121* %3, i32 0, i32 0, !dbg !19370
  call void @sys_dlist_init(%struct._dnode.120* noundef %4) #10, !dbg !19371
  ret void, !dbg !19372
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_thread_base(%struct._thread_base.125* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !19373 {
  %5 = alloca %struct._thread_base.125*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct._thread_base.125* %0, %struct._thread_base.125** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.125** %5, metadata !19377, metadata !DIExpression()), !dbg !19378
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19379, metadata !DIExpression()), !dbg !19380
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19381, metadata !DIExpression()), !dbg !19382
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19383, metadata !DIExpression()), !dbg !19384
  %9 = load %struct._thread_base.125*, %struct._thread_base.125** %5, align 4, !dbg !19385
  %10 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %9, i32 0, i32 1, !dbg !19386
  store %union.anon.121* null, %union.anon.121** %10, align 8, !dbg !19387
  %11 = load i32, i32* %8, align 4, !dbg !19388
  %12 = trunc i32 %11 to i8, !dbg !19389
  %13 = load %struct._thread_base.125*, %struct._thread_base.125** %5, align 4, !dbg !19390
  %14 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %13, i32 0, i32 2, !dbg !19391
  store i8 %12, i8* %14, align 4, !dbg !19392
  %15 = load i32, i32* %7, align 4, !dbg !19393
  %16 = trunc i32 %15 to i8, !dbg !19394
  %17 = load %struct._thread_base.125*, %struct._thread_base.125** %5, align 4, !dbg !19395
  %18 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %17, i32 0, i32 3, !dbg !19396
  store i8 %16, i8* %18, align 1, !dbg !19397
  %19 = load i32, i32* %6, align 4, !dbg !19398
  %20 = trunc i32 %19 to i8, !dbg !19398
  %21 = load %struct._thread_base.125*, %struct._thread_base.125** %5, align 4, !dbg !19399
  %22 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %21, i32 0, i32 4, !dbg !19400
  %23 = bitcast %union.anon.2.7* %22 to %struct.device_state.444*, !dbg !19400
  %24 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %23, i32 0, i32 0, !dbg !19400
  store i8 %20, i8* %24, align 2, !dbg !19401
  %25 = load %struct._thread_base.125*, %struct._thread_base.125** %5, align 4, !dbg !19402
  %26 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %25, i32 0, i32 4, !dbg !19403
  %27 = bitcast %union.anon.2.7* %26 to %struct.device_state.444*, !dbg !19403
  %28 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %27, i32 0, i32 1, !dbg !19403
  store i8 0, i8* %28, align 1, !dbg !19404
  %29 = load %struct._thread_base.125*, %struct._thread_base.125** %5, align 4, !dbg !19405
  call void @z_init_thread_timeout(%struct._thread_base.125* noundef %29) #10, !dbg !19406
  ret void, !dbg !19407
}

; Function Attrs: noinline nounwind optnone
define internal i8* @setup_thread_stack(%struct.k_thread.132* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #1 !dbg !19408 {
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !19411, metadata !DIExpression()), !dbg !19412
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !19413, metadata !DIExpression()), !dbg !19414
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19415, metadata !DIExpression()), !dbg !19416
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19417, metadata !DIExpression()), !dbg !19418
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19419, metadata !DIExpression()), !dbg !19420
  call void @llvm.dbg.declare(metadata i8** %9, metadata !19421, metadata !DIExpression()), !dbg !19422
  call void @llvm.dbg.declare(metadata i8** %10, metadata !19423, metadata !DIExpression()), !dbg !19424
  call void @llvm.dbg.declare(metadata i32* %11, metadata !19425, metadata !DIExpression()), !dbg !19426
  store i32 0, i32* %11, align 4, !dbg !19426
  %16 = load i32, i32* %6, align 4, !dbg !19427
  %17 = add i32 %16, 7, !dbg !19427
  %18 = and i32 %17, -8, !dbg !19427
  %19 = add i32 %18, 0, !dbg !19427
  store i32 %19, i32* %7, align 4, !dbg !19429
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !19430
  %21 = call i8* @Z_KERNEL_STACK_BUFFER.192(%struct.z_thread_stack_element* noundef %20) #10, !dbg !19431
  store i8* %21, i8** %10, align 4, !dbg !19432
  %22 = load i32, i32* %7, align 4, !dbg !19433
  %23 = sub i32 %22, 0, !dbg !19434
  store i32 %23, i32* %8, align 4, !dbg !19435
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !19436
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !19437
  %26 = load i32, i32* %7, align 4, !dbg !19438
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !19439
  store i8* %27, i8** %9, align 4, !dbg !19440
  br label %28, !dbg !19441

28:                                               ; preds = %3
  br label %29, !dbg !19442

29:                                               ; preds = %28
  %30 = load i32, i32* %11, align 4, !dbg !19446
  %31 = add i32 %30, 7, !dbg !19446
  %32 = and i32 %31, -8, !dbg !19446
  store i32 %32, i32* %11, align 4, !dbg !19447
  %33 = load i32, i32* %11, align 4, !dbg !19448
  %34 = load i8*, i8** %9, align 4, !dbg !19449
  %35 = sub i32 0, %33, !dbg !19449
  %36 = getelementptr inbounds i8, i8* %34, i32 %35, !dbg !19449
  store i8* %36, i8** %9, align 4, !dbg !19449
  %37 = load i8*, i8** %9, align 4, !dbg !19450
  ret i8* %37, !dbg !19451
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER.192(%struct.z_thread_stack_element* noundef %0) #1 !dbg !19452 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !19455, metadata !DIExpression()), !dbg !19456
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !19457
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !19458
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !19459
  ret i8* %5, !dbg !19460
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_thread_timeout(%struct._thread_base.125* noundef %0) #1 !dbg !19461 {
  %2 = alloca %struct._thread_base.125*, align 4
  store %struct._thread_base.125* %0, %struct._thread_base.125** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.125** %2, metadata !19465, metadata !DIExpression()), !dbg !19466
  %3 = load %struct._thread_base.125*, %struct._thread_base.125** %2, align 4, !dbg !19467
  %4 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %3, i32 0, i32 7, !dbg !19468
  call void @z_init_timeout(%struct._timeout.124* noundef %4) #10, !dbg !19469
  ret void, !dbg !19470
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_timeout(%struct._timeout.124* noundef %0) #1 !dbg !19471 {
  %2 = alloca %struct._timeout.124*, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %2, metadata !19472, metadata !DIExpression()), !dbg !19473
  %3 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !19474
  %4 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %3, i32 0, i32 0, !dbg !19475
  call void @sys_dnode_init(%struct._dnode.120* noundef %4) #10, !dbg !19476
  ret void, !dbg !19477
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init(%struct._dnode.120* noundef %0) #1 !dbg !19478 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !19481, metadata !DIExpression()), !dbg !19482
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !19483
  %4 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %3, i32 0, i32 0, !dbg !19484
  %5 = bitcast %union.anon.0.118* %4 to %struct._dnode.120**, !dbg !19484
  store %struct._dnode.120* null, %struct._dnode.120** %5, align 4, !dbg !19485
  %6 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !19486
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !19487
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !19487
  store %struct._dnode.120* null, %struct._dnode.120** %8, align 4, !dbg !19488
  ret void, !dbg !19489
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init(%struct._dnode.120* noundef %0) #1 !dbg !19490 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !19494, metadata !DIExpression()), !dbg !19495
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !19496
  %4 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !19497
  %5 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %4, i32 0, i32 0, !dbg !19498
  %6 = bitcast %union.anon.0.118* %5 to %struct._dnode.120**, !dbg !19498
  store %struct._dnode.120* %3, %struct._dnode.120** %6, align 4, !dbg !19499
  %7 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !19500
  %8 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !19501
  %9 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %8, i32 0, i32 1, !dbg !19502
  %10 = bitcast %union.anon.0.118* %9 to %struct._dnode.120**, !dbg !19502
  store %struct._dnode.120* %7, %struct._dnode.120** %10, align 4, !dbg !19503
  ret void, !dbg !19504
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_impl_k_thread_create(%struct.k_thread.132* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) #1 !dbg !19505 {
  %11 = alloca %union.argument_value, align 8
  %12 = alloca %struct.k_thread.132*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %union.argument_value, align 8
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %23 = bitcast i64* %22 to [1 x i64]*
  store [1 x i64] %9, [1 x i64]* %23, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %12, metadata !19512, metadata !DIExpression()), !dbg !19513
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !19514, metadata !DIExpression()), !dbg !19515
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !19516, metadata !DIExpression()), !dbg !19517
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !19518, metadata !DIExpression()), !dbg !19519
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !19520, metadata !DIExpression()), !dbg !19521
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !19522, metadata !DIExpression()), !dbg !19523
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !19524, metadata !DIExpression()), !dbg !19525
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !19526, metadata !DIExpression()), !dbg !19527
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !19528, metadata !DIExpression()), !dbg !19529
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !19530, metadata !DIExpression()), !dbg !19531
  %24 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19532
  %25 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !19533
  %26 = load i32, i32* %14, align 4, !dbg !19534
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !19535
  %28 = load i8*, i8** %16, align 4, !dbg !19536
  %29 = load i8*, i8** %17, align 4, !dbg !19537
  %30 = load i8*, i8** %18, align 4, !dbg !19538
  %31 = load i32, i32* %19, align 4, !dbg !19539
  %32 = load i32, i32* %20, align 4, !dbg !19540
  %33 = call i8* @z_setup_new_thread(%struct.k_thread.132* noundef %24, %struct.z_thread_stack_element* noundef %25, i32 noundef %26, void (i8*, i8*, i8*)* noundef %27, i8* noundef %28, i8* noundef %29, i8* noundef %30, i32 noundef %31, i32 noundef %32, i8* noundef null) #10, !dbg !19541
  %34 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !19542
  %35 = load i64, i64* %34, align 8, !dbg !19542
  %36 = getelementptr inbounds %union.argument_value, %union.argument_value* %21, i32 0, i32 0, !dbg !19542
  store i64 -1, i64* %36, align 8, !dbg !19542
  %37 = icmp eq i64 %35, -1, !dbg !19542
  br i1 %37, label %43, label %38, !dbg !19544

38:                                               ; preds = %10
  %39 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19545
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !19547
  %41 = bitcast i64* %40 to [1 x i64]*, !dbg !19547
  %42 = load [1 x i64], [1 x i64]* %41, align 8, !dbg !19547
  call void @schedule_new_thread(%struct.k_thread.132* noundef %39, [1 x i64] %42) #10, !dbg !19547
  br label %43, !dbg !19548

43:                                               ; preds = %38, %10
  %44 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !19549
  ret %struct.k_thread.132* %44, !dbg !19550
}

; Function Attrs: noinline nounwind optnone
define internal void @schedule_new_thread(%struct.k_thread.132* noundef %0, [1 x i64] %1) #1 !dbg !19551 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !19554, metadata !DIExpression()), !dbg !19555
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !19556, metadata !DIExpression()), !dbg !19557
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !19558
  %9 = load i64, i64* %8, align 8, !dbg !19558
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !19558
  store i64 0, i64* %10, align 8, !dbg !19558
  %11 = icmp eq i64 %9, 0, !dbg !19558
  br i1 %11, label %12, label %14, !dbg !19560

12:                                               ; preds = %2
  %13 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !19561
  call void @k_thread_start(%struct.k_thread.132* noundef %13) #10, !dbg !19563
  br label %19, !dbg !19564

14:                                               ; preds = %2
  %15 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !19565
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !19567
  %17 = bitcast i64* %16 to [1 x i64]*, !dbg !19567
  %18 = load [1 x i64], [1 x i64]* %17, align 8, !dbg !19567
  call void @z_add_thread_timeout(%struct.k_thread.132* noundef %15, [1 x i64] %18) #10, !dbg !19567
  br label %19

19:                                               ; preds = %14, %12
  ret void, !dbg !19568
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_start(%struct.k_thread.132* noundef %0) #1 !dbg !19569 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !19572, metadata !DIExpression()), !dbg !19573
  br label %3, !dbg !19574

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !19575, !srcloc !19577
  br label %4, !dbg !19575

4:                                                ; preds = %3
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !19578
  call void @z_impl_k_thread_start(%struct.k_thread.132* noundef %5) #10, !dbg !19579
  ret void, !dbg !19580
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout(%struct.k_thread.132* noundef %0, [1 x i64] %1) #1 !dbg !19581 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !19582, metadata !DIExpression()), !dbg !19583
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !19584, metadata !DIExpression()), !dbg !19585
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !19586
  %8 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %7, i32 0, i32 0, !dbg !19587
  %9 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %8, i32 0, i32 7, !dbg !19588
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !19589
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !19589
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !19589
  call void @z_add_timeout(%struct._timeout.124* noundef %9, void (%struct._timeout.124*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !19589
  ret void, !dbg !19590
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_static_threads() #1 !dbg !19591 {
  %1 = alloca %struct._static_thread_data.724*, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct._static_thread_data.724*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.724** %1, metadata !19592, metadata !DIExpression()), !dbg !19609
  store %struct._static_thread_data.724* getelementptr inbounds ([0 x %struct._static_thread_data.724], [0 x %struct._static_thread_data.724]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.724** %1, align 4, !dbg !19609
  br label %6, !dbg !19609

6:                                                ; preds = %50, %0
  %7 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19610
  %8 = icmp ult %struct._static_thread_data.724* %7, getelementptr inbounds ([0 x %struct._static_thread_data.724], [0 x %struct._static_thread_data.724]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !19610
  %9 = zext i1 %8 to i32, !dbg !19610
  store i32 %9, i32* %2, align 4, !dbg !19613
  %10 = load i32, i32* %2, align 4, !dbg !19610
  %11 = icmp ne i32 %10, 0, !dbg !19609
  br i1 %11, label %12, label %53, !dbg !19609

12:                                               ; preds = %6
  %13 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19615
  %14 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %13, i32 0, i32 0, !dbg !19617
  %15 = load %struct.k_thread.132*, %struct.k_thread.132** %14, align 4, !dbg !19617
  %16 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19618
  %17 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %16, i32 0, i32 1, !dbg !19619
  %18 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %17, align 4, !dbg !19619
  %19 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19620
  %20 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %19, i32 0, i32 2, !dbg !19621
  %21 = load i32, i32* %20, align 4, !dbg !19621
  %22 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19622
  %23 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %22, i32 0, i32 3, !dbg !19623
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %23, align 4, !dbg !19623
  %25 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19624
  %26 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %25, i32 0, i32 4, !dbg !19625
  %27 = load i8*, i8** %26, align 4, !dbg !19625
  %28 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19626
  %29 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %28, i32 0, i32 5, !dbg !19627
  %30 = load i8*, i8** %29, align 4, !dbg !19627
  %31 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19628
  %32 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %31, i32 0, i32 6, !dbg !19629
  %33 = load i8*, i8** %32, align 4, !dbg !19629
  %34 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19630
  %35 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %34, i32 0, i32 7, !dbg !19631
  %36 = load i32, i32* %35, align 4, !dbg !19631
  %37 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19632
  %38 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %37, i32 0, i32 8, !dbg !19633
  %39 = load i32, i32* %38, align 4, !dbg !19633
  %40 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19634
  %41 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %40, i32 0, i32 11, !dbg !19635
  %42 = load i8*, i8** %41, align 4, !dbg !19635
  %43 = call i8* @z_setup_new_thread(%struct.k_thread.132* noundef %15, %struct.z_thread_stack_element* noundef %18, i32 noundef %21, void (i8*, i8*, i8*)* noundef %24, i8* noundef %27, i8* noundef %30, i8* noundef %33, i32 noundef %36, i32 noundef %39, i8* noundef %42) #10, !dbg !19636
  %44 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19637
  %45 = bitcast %struct._static_thread_data.724* %44 to i8*, !dbg !19637
  %46 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19638
  %47 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %46, i32 0, i32 0, !dbg !19639
  %48 = load %struct.k_thread.132*, %struct.k_thread.132** %47, align 4, !dbg !19639
  %49 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %48, i32 0, i32 2, !dbg !19640
  store i8* %45, i8** %49, align 4, !dbg !19641
  br label %50, !dbg !19642

50:                                               ; preds = %12
  %51 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %1, align 4, !dbg !19643
  %52 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %51, i32 1, !dbg !19643
  store %struct._static_thread_data.724* %52, %struct._static_thread_data.724** %1, align 4, !dbg !19643
  br label %6, !dbg !19643, !llvm.loop !19644

53:                                               ; preds = %6
  call void @k_sched_lock() #10, !dbg !19646
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.724** %3, metadata !19647, metadata !DIExpression()), !dbg !19649
  store %struct._static_thread_data.724* getelementptr inbounds ([0 x %struct._static_thread_data.724], [0 x %struct._static_thread_data.724]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.724** %3, align 4, !dbg !19649
  br label %54, !dbg !19649

54:                                               ; preds = %88, %53
  %55 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %3, align 4, !dbg !19650
  %56 = icmp ult %struct._static_thread_data.724* %55, getelementptr inbounds ([0 x %struct._static_thread_data.724], [0 x %struct._static_thread_data.724]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !19650
  %57 = zext i1 %56 to i32, !dbg !19650
  store i32 %57, i32* %4, align 4, !dbg !19653
  %58 = load i32, i32* %4, align 4, !dbg !19650
  %59 = icmp ne i32 %58, 0, !dbg !19649
  br i1 %59, label %60, label %91, !dbg !19649

60:                                               ; preds = %54
  %61 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %3, align 4, !dbg !19655
  %62 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %61, i32 0, i32 9, !dbg !19658
  %63 = load i32, i32* %62, align 4, !dbg !19658
  %64 = sext i32 %63 to i64, !dbg !19655
  %65 = icmp ne i64 %64, -1, !dbg !19659
  br i1 %65, label %66, label %87, !dbg !19660

66:                                               ; preds = %60
  %67 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %3, align 4, !dbg !19661
  %68 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %67, i32 0, i32 0, !dbg !19663
  %69 = load %struct.k_thread.132*, %struct.k_thread.132** %68, align 4, !dbg !19663
  %70 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !19664
  %71 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %3, align 4, !dbg !19664
  %72 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %71, i32 0, i32 9, !dbg !19664
  %73 = load i32, i32* %72, align 4, !dbg !19664
  %74 = icmp sgt i32 %73, 0, !dbg !19664
  br i1 %74, label %75, label %79, !dbg !19664

75:                                               ; preds = %66
  %76 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %3, align 4, !dbg !19664
  %77 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %76, i32 0, i32 9, !dbg !19664
  %78 = load i32, i32* %77, align 4, !dbg !19664
  br label %80, !dbg !19664

79:                                               ; preds = %66
  br label %80, !dbg !19664

80:                                               ; preds = %79, %75
  %81 = phi i32 [ %78, %75 ], [ 0, %79 ], !dbg !19664
  %82 = sext i32 %81 to i64, !dbg !19664
  %83 = call i64 @k_ms_to_ticks_ceil64.195(i64 noundef %82) #10, !dbg !19664
  store i64 %83, i64* %70, align 8, !dbg !19664
  %84 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !19665
  %85 = bitcast i64* %84 to [1 x i64]*, !dbg !19665
  %86 = load [1 x i64], [1 x i64]* %85, align 8, !dbg !19665
  call void @schedule_new_thread(%struct.k_thread.132* noundef %69, [1 x i64] %86) #10, !dbg !19665
  br label %87, !dbg !19666

87:                                               ; preds = %80, %60
  br label %88, !dbg !19667

88:                                               ; preds = %87
  %89 = load %struct._static_thread_data.724*, %struct._static_thread_data.724** %3, align 4, !dbg !19668
  %90 = getelementptr inbounds %struct._static_thread_data.724, %struct._static_thread_data.724* %89, i32 1, !dbg !19668
  store %struct._static_thread_data.724* %90, %struct._static_thread_data.724** %3, align 4, !dbg !19668
  br label %54, !dbg !19668, !llvm.loop !19669

91:                                               ; preds = %54
  call void @k_sched_unlock() #10, !dbg !19671
  ret void, !dbg !19672
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64.195(i64 noundef %0) #1 !dbg !19673 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !19674, metadata !DIExpression()), !dbg !19675
  %15 = load i64, i64* %14, align 8, !dbg !19676
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !19677, metadata !DIExpression()), !dbg !19679
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19681, metadata !DIExpression()), !dbg !19682
  store i32 32768, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !19683, metadata !DIExpression()), !dbg !19684
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !19685, metadata !DIExpression()), !dbg !19686
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !19687, metadata !DIExpression()), !dbg !19688
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !19689, metadata !DIExpression()), !dbg !19690
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !19691, metadata !DIExpression()), !dbg !19692
  call void @llvm.dbg.declare(metadata i8* %10, metadata !19693, metadata !DIExpression()), !dbg !19694
  %16 = load i8, i8* %6, align 1, !dbg !19695
  %17 = trunc i8 %16 to i1, !dbg !19695
  br i1 %17, label %18, label %27, !dbg !19696

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !19697
  %20 = load i32, i32* %4, align 4, !dbg !19698
  %21 = icmp ugt i32 %19, %20, !dbg !19699
  br i1 %21, label %22, label %27, !dbg !19700

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !19701
  %24 = load i32, i32* %4, align 4, !dbg !19702
  %25 = urem i32 %23, %24, !dbg !19703
  %26 = icmp eq i32 %25, 0, !dbg !19704
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !19705
  %29 = zext i1 %28 to i8, !dbg !19694
  store i8 %29, i8* %10, align 1, !dbg !19694
  call void @llvm.dbg.declare(metadata i8* %11, metadata !19706, metadata !DIExpression()), !dbg !19707
  %30 = load i8, i8* %6, align 1, !dbg !19708
  %31 = trunc i8 %30 to i1, !dbg !19708
  br i1 %31, label %32, label %41, !dbg !19709

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !19710
  %34 = load i32, i32* %5, align 4, !dbg !19711
  %35 = icmp ugt i32 %33, %34, !dbg !19712
  br i1 %35, label %36, label %41, !dbg !19713

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !19714
  %38 = load i32, i32* %5, align 4, !dbg !19715
  %39 = urem i32 %37, %38, !dbg !19716
  %40 = icmp eq i32 %39, 0, !dbg !19717
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !19705
  %43 = zext i1 %42 to i8, !dbg !19707
  store i8 %43, i8* %11, align 1, !dbg !19707
  %44 = load i32, i32* %4, align 4, !dbg !19718
  %45 = load i32, i32* %5, align 4, !dbg !19720
  %46 = icmp eq i32 %44, %45, !dbg !19721
  br i1 %46, label %47, label %58, !dbg !19722

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !19723
  %49 = trunc i8 %48 to i1, !dbg !19723
  br i1 %49, label %50, label %54, !dbg !19723

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !19725
  %52 = trunc i64 %51 to i32, !dbg !19726
  %53 = zext i32 %52 to i64, !dbg !19727
  br label %56, !dbg !19723

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !19728
  br label %56, !dbg !19723

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !19723
  store i64 %57, i64* %2, align 8, !dbg !19729
  br label %195, !dbg !19729

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !19730, metadata !DIExpression()), !dbg !19731
  store i64 0, i64* %12, align 8, !dbg !19731
  %59 = load i8, i8* %10, align 1, !dbg !19732
  %60 = trunc i8 %59 to i1, !dbg !19732
  br i1 %60, label %86, label %61, !dbg !19734

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !19735, metadata !DIExpression()), !dbg !19737
  %62 = load i8, i8* %11, align 1, !dbg !19738
  %63 = trunc i8 %62 to i1, !dbg !19738
  br i1 %63, label %64, label %68, !dbg !19738

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !19739
  %66 = load i32, i32* %5, align 4, !dbg !19740
  %67 = udiv i32 %65, %66, !dbg !19741
  br label %70, !dbg !19738

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !19742
  br label %70, !dbg !19738

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !19738
  store i32 %71, i32* %13, align 4, !dbg !19737
  %72 = load i8, i8* %8, align 1, !dbg !19743
  %73 = trunc i8 %72 to i1, !dbg !19743
  br i1 %73, label %74, label %78, !dbg !19745

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !19746
  %76 = sub i32 %75, 1, !dbg !19748
  %77 = zext i32 %76 to i64, !dbg !19746
  store i64 %77, i64* %12, align 8, !dbg !19749
  br label %78, !dbg !19750

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !19751
  %80 = trunc i8 %79 to i1, !dbg !19751
  br i1 %80, label %81, label %85, !dbg !19753

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !19754
  %83 = udiv i32 %82, 2, !dbg !19756
  %84 = zext i32 %83 to i64, !dbg !19754
  store i64 %84, i64* %12, align 8, !dbg !19757
  br label %85, !dbg !19758

85:                                               ; preds = %81, %78
  br label %86, !dbg !19759

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !19760
  %88 = trunc i8 %87 to i1, !dbg !19760
  br i1 %88, label %89, label %114, !dbg !19762

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !19763
  %91 = load i64, i64* %3, align 8, !dbg !19765
  %92 = add i64 %91, %90, !dbg !19765
  store i64 %92, i64* %3, align 8, !dbg !19765
  %93 = load i8, i8* %7, align 1, !dbg !19766
  %94 = trunc i8 %93 to i1, !dbg !19766
  br i1 %94, label %95, label %106, !dbg !19768

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !19769
  %97 = icmp ult i64 %96, 4294967296, !dbg !19770
  br i1 %97, label %98, label %106, !dbg !19771

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !19772
  %100 = trunc i64 %99 to i32, !dbg !19774
  %101 = load i32, i32* %4, align 4, !dbg !19775
  %102 = load i32, i32* %5, align 4, !dbg !19776
  %103 = udiv i32 %101, %102, !dbg !19777
  %104 = udiv i32 %100, %103, !dbg !19778
  %105 = zext i32 %104 to i64, !dbg !19779
  store i64 %105, i64* %2, align 8, !dbg !19780
  br label %195, !dbg !19780

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !19781
  %108 = load i32, i32* %4, align 4, !dbg !19783
  %109 = zext i32 %108 to i64, !dbg !19784
  %110 = load i32, i32* %5, align 4, !dbg !19785
  %111 = zext i32 %110 to i64, !dbg !19785
  %112 = udiv i64 %109, %111, !dbg !19786
  %113 = udiv i64 %107, %112, !dbg !19787
  store i64 %113, i64* %2, align 8, !dbg !19788
  br label %195, !dbg !19788

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !19789
  %116 = trunc i8 %115 to i1, !dbg !19789
  br i1 %116, label %117, label %136, !dbg !19791

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !19792
  %119 = trunc i8 %118 to i1, !dbg !19792
  br i1 %119, label %120, label %128, !dbg !19795

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !19796
  %122 = trunc i64 %121 to i32, !dbg !19798
  %123 = load i32, i32* %5, align 4, !dbg !19799
  %124 = load i32, i32* %4, align 4, !dbg !19800
  %125 = udiv i32 %123, %124, !dbg !19801
  %126 = mul i32 %122, %125, !dbg !19802
  %127 = zext i32 %126 to i64, !dbg !19803
  store i64 %127, i64* %2, align 8, !dbg !19804
  br label %195, !dbg !19804

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !19805
  %130 = load i32, i32* %5, align 4, !dbg !19807
  %131 = zext i32 %130 to i64, !dbg !19808
  %132 = load i32, i32* %4, align 4, !dbg !19809
  %133 = zext i32 %132 to i64, !dbg !19809
  %134 = udiv i64 %131, %133, !dbg !19810
  %135 = mul i64 %129, %134, !dbg !19811
  store i64 %135, i64* %2, align 8, !dbg !19812
  br label %195, !dbg !19812

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !19813
  %138 = trunc i8 %137 to i1, !dbg !19813
  br i1 %138, label %139, label %151, !dbg !19816

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !19817
  %141 = load i32, i32* %5, align 4, !dbg !19819
  %142 = zext i32 %141 to i64, !dbg !19819
  %143 = mul i64 %140, %142, !dbg !19820
  %144 = load i64, i64* %12, align 8, !dbg !19821
  %145 = add i64 %143, %144, !dbg !19822
  %146 = load i32, i32* %4, align 4, !dbg !19823
  %147 = zext i32 %146 to i64, !dbg !19823
  %148 = udiv i64 %145, %147, !dbg !19824
  %149 = trunc i64 %148 to i32, !dbg !19825
  %150 = zext i32 %149 to i64, !dbg !19825
  store i64 %150, i64* %2, align 8, !dbg !19826
  br label %195, !dbg !19826

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !19827
  %153 = trunc i8 %152 to i1, !dbg !19827
  br i1 %153, label %154, label %174, !dbg !19829

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !19830
  %156 = zext i32 %155 to i64, !dbg !19830
  %157 = mul i64 31536000, %156, !dbg !19830
  %158 = add i64 %157, 4294967294, !dbg !19830
  %159 = udiv i64 %158, 4294967295, !dbg !19830
  %160 = load i32, i32* %5, align 4, !dbg !19830
  %161 = zext i32 %160 to i64, !dbg !19830
  %162 = mul i64 %159, %161, !dbg !19830
  %163 = icmp ule i64 %162, 4294967295, !dbg !19830
  br i1 %163, label %164, label %174, !dbg !19831

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !19832
  %166 = load i32, i32* %5, align 4, !dbg !19834
  %167 = zext i32 %166 to i64, !dbg !19834
  %168 = mul i64 %165, %167, !dbg !19835
  %169 = load i64, i64* %12, align 8, !dbg !19836
  %170 = add i64 %168, %169, !dbg !19837
  %171 = load i32, i32* %4, align 4, !dbg !19838
  %172 = zext i32 %171 to i64, !dbg !19838
  %173 = udiv i64 %170, %172, !dbg !19839
  store i64 %173, i64* %2, align 8, !dbg !19840
  br label %195, !dbg !19840

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !19841
  %176 = load i32, i32* %4, align 4, !dbg !19843
  %177 = zext i32 %176 to i64, !dbg !19843
  %178 = udiv i64 %175, %177, !dbg !19844
  %179 = load i32, i32* %5, align 4, !dbg !19845
  %180 = zext i32 %179 to i64, !dbg !19845
  %181 = mul i64 %178, %180, !dbg !19846
  %182 = load i64, i64* %3, align 8, !dbg !19847
  %183 = load i32, i32* %4, align 4, !dbg !19848
  %184 = zext i32 %183 to i64, !dbg !19848
  %185 = urem i64 %182, %184, !dbg !19849
  %186 = load i32, i32* %5, align 4, !dbg !19850
  %187 = zext i32 %186 to i64, !dbg !19850
  %188 = mul i64 %185, %187, !dbg !19851
  %189 = load i64, i64* %12, align 8, !dbg !19852
  %190 = add i64 %188, %189, !dbg !19853
  %191 = load i32, i32* %4, align 4, !dbg !19854
  %192 = zext i32 %191 to i64, !dbg !19854
  %193 = udiv i64 %190, %192, !dbg !19855
  %194 = add i64 %181, %193, !dbg !19856
  store i64 %194, i64* %2, align 8, !dbg !19857
  br label %195, !dbg !19857

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !19858
  ret i64 %196, !dbg !19859
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !19860 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !19861, metadata !DIExpression()), !dbg !19862
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19863, metadata !DIExpression()), !dbg !19864
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !19865, metadata !DIExpression()), !dbg !19866
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !19867, metadata !DIExpression()), !dbg !19868
  br label %9, !dbg !19869

9:                                                ; preds = %4
  br label %10, !dbg !19870

10:                                               ; preds = %9
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19872
  %12 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %11, i32 0, i32 0, !dbg !19873
  %13 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %12, i32 0, i32 2, !dbg !19874
  %14 = load i8, i8* %13, align 4, !dbg !19875
  %15 = zext i8 %14 to i32, !dbg !19875
  %16 = or i32 %15, 4, !dbg !19875
  %17 = trunc i32 %16 to i8, !dbg !19875
  store i8 %17, i8* %13, align 4, !dbg !19875
  call void @z_thread_essential_clear() #10, !dbg !19876
  %18 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !19877
  %19 = load i8*, i8** %6, align 4, !dbg !19878
  %20 = load i8*, i8** %7, align 4, !dbg !19879
  %21 = load i8*, i8** %8, align 4, !dbg !19880
  call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %18, i8* noundef %19, i8* noundef %20, i8* noundef %21) #12, !dbg !19881
  unreachable, !dbg !19881
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread.132* noundef %0) #1 !dbg !19882 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !19885, metadata !DIExpression()), !dbg !19886
  ret i32 -134, !dbg !19887
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread.132* noundef %0, i32 noundef %1) #1 !dbg !19888 {
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !19891, metadata !DIExpression()), !dbg !19892
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19893, metadata !DIExpression()), !dbg !19894
  ret i32 -134, !dbg !19895
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread.132* noundef %0, %struct.k_spinlock.13* noundef %1) #1 !dbg !19896 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !19902, metadata !DIExpression()), !dbg !19903
  store %struct.k_spinlock.13* %1, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !19904, metadata !DIExpression()), !dbg !19905
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !19906
  %8 = icmp eq %struct.k_thread.132* %7, null, !dbg !19908
  br i1 %8, label %12, label %9, !dbg !19909

9:                                                ; preds = %2
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !19910
  %11 = icmp eq %struct.k_spinlock.13* %10, null, !dbg !19911
  br i1 %11, label %12, label %13, !dbg !19912

12:                                               ; preds = %9, %2
  store i32 -22, i32* %3, align 4, !dbg !19913
  br label %17, !dbg !19913

13:                                               ; preds = %9
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !19915
  %15 = bitcast %struct.k_spinlock.13* %14 to i8*, !dbg !19916
  %16 = bitcast %struct.k_spinlock.13* %6 to i8*, !dbg !19916
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %15, i8* align 1 %16, i32 0, i1 false), !dbg !19916
  store i32 0, i32* %3, align 4, !dbg !19917
  br label %17, !dbg !19917

17:                                               ; preds = %13, %12
  %18 = load i32, i32* %3, align 4, !dbg !19918
  ret i32 %18, !dbg !19918
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock.13* noundef %0) #1 !dbg !19919 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !19922, metadata !DIExpression()), !dbg !19923
  %5 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !19924
  %6 = icmp eq %struct.k_spinlock.13* %5, null, !dbg !19926
  br i1 %6, label %7, label %8, !dbg !19927

7:                                                ; preds = %1
  store i32 -22, i32* %2, align 4, !dbg !19928
  br label %12, !dbg !19928

8:                                                ; preds = %1
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !19930
  %10 = bitcast %struct.k_spinlock.13* %9 to i8*, !dbg !19931
  %11 = bitcast %struct.k_spinlock.13* %4 to i8*, !dbg !19931
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %10, i8* align 1 %11, i32 0, i1 false), !dbg !19931
  store i32 0, i32* %2, align 4, !dbg !19932
  br label %12, !dbg !19932

12:                                               ; preds = %8, %7
  %13 = load i32, i32* %2, align 4, !dbg !19933
  ret i32 %13, !dbg !19933
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pm_save_idle_exit() #1 !dbg !19934 {
  call void @pm_system_resume() #10, !dbg !19936
  call void @sys_clock_idle_exit() #10, !dbg !19937
  ret void, !dbg !19938
}

; Function Attrs: noinline nounwind optnone
define dso_local void @idle(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !19939 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !19940, metadata !DIExpression()), !dbg !19941
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19942, metadata !DIExpression()), !dbg !19943
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !19944, metadata !DIExpression()), !dbg !19945
  %8 = load i8*, i8** %5, align 4, !dbg !19946
  %9 = load i8*, i8** %6, align 4, !dbg !19947
  %10 = load i8*, i8** %7, align 4, !dbg !19948
  br label %11, !dbg !19949

11:                                               ; preds = %3, %20
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19950, metadata !DIExpression()) #9, !dbg !19952
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !19955, !srcloc !19956
  store i32 %12, i32* %4, align 4, !dbg !19955
  %13 = load i32, i32* %4, align 4, !dbg !19957
  %14 = call i32 @z_get_next_timeout_expiry() #10, !dbg !19958
  store i32 %14, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1), align 4, !dbg !19959
  %15 = call zeroext i1 @k_is_pre_kernel.200() #10, !dbg !19960
  br i1 %15, label %19, label %16, !dbg !19962

16:                                               ; preds = %11
  %17 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1), align 4, !dbg !19963
  %18 = call zeroext i1 @pm_system_suspend(i32 noundef %17) #10, !dbg !19964
  br i1 %18, label %20, label %19, !dbg !19965

19:                                               ; preds = %16, %11
  call void @k_cpu_idle() #10, !dbg !19966
  br label %20, !dbg !19968

20:                                               ; preds = %19, %16
  br label %11, !dbg !19949, !llvm.loop !19969
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_pre_kernel.200() #1 !dbg !19971 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !19972
  %2 = trunc i8 %1 to i1, !dbg !19972
  %3 = xor i1 %2, true, !dbg !19973
  ret i1 %3, !dbg !19974
}

; Function Attrs: noinline nounwind optnone
define internal void @k_cpu_idle() #1 !dbg !19975 {
  call void @arch_cpu_idle() #10, !dbg !19976
  ret void, !dbg !19977
}

declare dso_local void @arch_cpu_idle() #0

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem.475* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !19978 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_sem.475*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.k_sem.475* %0, %struct.k_sem.475** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %5, metadata !19992, metadata !DIExpression()), !dbg !19993
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19994, metadata !DIExpression()), !dbg !19995
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19996, metadata !DIExpression()), !dbg !19997
  %8 = load i32, i32* %7, align 4, !dbg !19998
  %9 = icmp eq i32 %8, 0, !dbg !19998
  br i1 %9, label %17, label %10, !dbg !19998

10:                                               ; preds = %3
  %11 = load i32, i32* %7, align 4, !dbg !19998
  %12 = icmp ugt i32 %11, -1, !dbg !19998
  br i1 %12, label %17, label %13, !dbg !19998

13:                                               ; preds = %10
  %14 = load i32, i32* %6, align 4, !dbg !19998
  %15 = load i32, i32* %7, align 4, !dbg !19998
  %16 = icmp ugt i32 %14, %15, !dbg !19998
  br i1 %16, label %17, label %20, !dbg !20000

17:                                               ; preds = %13, %10, %3
  br label %18, !dbg !20001

18:                                               ; preds = %17
  br label %19, !dbg !20003

19:                                               ; preds = %18
  store i32 -22, i32* %4, align 4, !dbg !20005
  br label %33, !dbg !20005

20:                                               ; preds = %13
  %21 = load i32, i32* %6, align 4, !dbg !20006
  %22 = load %struct.k_sem.475*, %struct.k_sem.475** %5, align 4, !dbg !20007
  %23 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %22, i32 0, i32 1, !dbg !20008
  store i32 %21, i32* %23, align 4, !dbg !20009
  %24 = load i32, i32* %7, align 4, !dbg !20010
  %25 = load %struct.k_sem.475*, %struct.k_sem.475** %5, align 4, !dbg !20011
  %26 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %25, i32 0, i32 2, !dbg !20012
  store i32 %24, i32* %26, align 4, !dbg !20013
  br label %27, !dbg !20014

27:                                               ; preds = %20
  br label %28, !dbg !20015

28:                                               ; preds = %27
  %29 = load %struct.k_sem.475*, %struct.k_sem.475** %5, align 4, !dbg !20017
  %30 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %29, i32 0, i32 0, !dbg !20018
  call void @z_waitq_init.201(%struct._wait_q_t.460* noundef %30) #10, !dbg !20019
  %31 = load %struct.k_sem.475*, %struct.k_sem.475** %5, align 4, !dbg !20020
  %32 = bitcast %struct.k_sem.475* %31 to i8*, !dbg !20020
  call void @z_object_init.202(i8* noundef %32) #10, !dbg !20021
  store i32 0, i32* %4, align 4, !dbg !20022
  br label %33, !dbg !20022

33:                                               ; preds = %28, %19
  %34 = load i32, i32* %4, align 4, !dbg !20023
  ret i32 %34, !dbg !20023
}

; Function Attrs: noinline nounwind optnone
define internal void @z_waitq_init.201(%struct._wait_q_t.460* noundef %0) #1 !dbg !20024 {
  %2 = alloca %struct._wait_q_t.460*, align 4
  store %struct._wait_q_t.460* %0, %struct._wait_q_t.460** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._wait_q_t.460** %2, metadata !20028, metadata !DIExpression()), !dbg !20029
  %3 = load %struct._wait_q_t.460*, %struct._wait_q_t.460** %2, align 4, !dbg !20030
  %4 = getelementptr inbounds %struct._wait_q_t.460, %struct._wait_q_t.460* %3, i32 0, i32 0, !dbg !20031
  call void @sys_dlist_init.203(%struct._dnode.70* noundef %4) #10, !dbg !20032
  ret void, !dbg !20033
}

; Function Attrs: noinline nounwind optnone
define internal void @z_object_init.202(i8* noundef %0) #1 !dbg !20034 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !20035, metadata !DIExpression()), !dbg !20036
  %3 = load i8*, i8** %2, align 4, !dbg !20037
  ret void, !dbg !20038
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init.203(%struct._dnode.70* noundef %0) #1 !dbg !20039 {
  %2 = alloca %struct._dnode.70*, align 4
  store %struct._dnode.70* %0, %struct._dnode.70** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.70** %2, metadata !20043, metadata !DIExpression()), !dbg !20044
  %3 = load %struct._dnode.70*, %struct._dnode.70** %2, align 4, !dbg !20045
  %4 = load %struct._dnode.70*, %struct._dnode.70** %2, align 4, !dbg !20046
  %5 = getelementptr inbounds %struct._dnode.70, %struct._dnode.70* %4, i32 0, i32 0, !dbg !20047
  %6 = bitcast %union.anon.0.68* %5 to %struct._dnode.70**, !dbg !20047
  store %struct._dnode.70* %3, %struct._dnode.70** %6, align 4, !dbg !20048
  %7 = load %struct._dnode.70*, %struct._dnode.70** %2, align 4, !dbg !20049
  %8 = load %struct._dnode.70*, %struct._dnode.70** %2, align 4, !dbg !20050
  %9 = getelementptr inbounds %struct._dnode.70, %struct._dnode.70* %8, i32 0, i32 1, !dbg !20051
  %10 = bitcast %union.anon.0.68* %9 to %struct._dnode.70**, !dbg !20051
  store %struct._dnode.70* %7, %struct._dnode.70** %10, align 4, !dbg !20052
  ret void, !dbg !20053
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_sem_give(%struct.k_sem.475* noundef %0) #1 !dbg !20054 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.772*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.k_sem.475*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_thread.772*, align 4
  store %struct.k_sem.475* %0, %struct.k_sem.475** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %7, metadata !20057, metadata !DIExpression()), !dbg !20058
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !20059, metadata !DIExpression()), !dbg !20064
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !20065, metadata !DIExpression()) #9, !dbg !20070
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !20072
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !20073, metadata !DIExpression()) #9, !dbg !20074
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20075, metadata !DIExpression()) #9, !dbg !20077
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !20079, !srcloc !20080
  store i32 %11, i32* %2, align 4, !dbg !20079
  %12 = load i32, i32* %2, align 4, !dbg !20081
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !20082
  store i32 %12, i32* %13, align 4, !dbg !20083
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !20084
  %15 = load i32, i32* %14, align 4, !dbg !20084
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !20085
  store i32 %15, i32* %16, align 4, !dbg !20085
  call void @llvm.dbg.declare(metadata %struct.k_thread.772** %9, metadata !20086, metadata !DIExpression()), !dbg !20160
  br label %17, !dbg !20161

17:                                               ; preds = %1
  br label %18, !dbg !20162

18:                                               ; preds = %17
  %19 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20164
  %20 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %19, i32 0, i32 0, !dbg !20165
  %21 = call %struct.k_thread.772* bitcast (%struct.k_thread.132* (%union.anon.121*)* @z_unpend_first_thread to %struct.k_thread.772* (%struct._wait_q_t.460*)*)(%struct._wait_q_t.460* noundef %20) #10, !dbg !20166
  store %struct.k_thread.772* %21, %struct.k_thread.772** %9, align 4, !dbg !20167
  %22 = load %struct.k_thread.772*, %struct.k_thread.772** %9, align 4, !dbg !20168
  %23 = icmp ne %struct.k_thread.772* %22, null, !dbg !20170
  br i1 %23, label %24, label %31, !dbg !20171

24:                                               ; preds = %18
  %25 = load %struct.k_thread.772*, %struct.k_thread.772** %9, align 4, !dbg !20172
  store %struct.k_thread.772* %25, %struct.k_thread.772** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.772** %3, metadata !20174, metadata !DIExpression()), !dbg !20178
  store i32 0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20180, metadata !DIExpression()), !dbg !20181
  %26 = load i32, i32* %4, align 4, !dbg !20182
  %27 = load %struct.k_thread.772*, %struct.k_thread.772** %3, align 4, !dbg !20183
  %28 = getelementptr inbounds %struct.k_thread.772, %struct.k_thread.772* %27, i32 0, i32 6, !dbg !20184
  %29 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %28, i32 0, i32 1, !dbg !20185
  store i32 %26, i32* %29, align 4, !dbg !20186
  %30 = load %struct.k_thread.772*, %struct.k_thread.772** %9, align 4, !dbg !20187
  call void bitcast (void (%struct.k_thread.132*)* @z_ready_thread to void (%struct.k_thread.772*)*)(%struct.k_thread.772* noundef %30) #10, !dbg !20188
  br label %46, !dbg !20189

31:                                               ; preds = %18
  %32 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20190
  %33 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %32, i32 0, i32 1, !dbg !20192
  %34 = load i32, i32* %33, align 4, !dbg !20192
  %35 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20193
  %36 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %35, i32 0, i32 2, !dbg !20194
  %37 = load i32, i32* %36, align 4, !dbg !20194
  %38 = icmp ne i32 %34, %37, !dbg !20195
  %39 = zext i1 %38 to i64, !dbg !20196
  %40 = select i1 %38, i32 1, i32 0, !dbg !20196
  %41 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20197
  %42 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %41, i32 0, i32 1, !dbg !20198
  %43 = load i32, i32* %42, align 4, !dbg !20199
  %44 = add i32 %43, %40, !dbg !20199
  store i32 %44, i32* %42, align 4, !dbg !20199
  %45 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20200
  call void @handle_poll_events(%struct.k_sem.475* noundef %45) #10, !dbg !20201
  br label %46

46:                                               ; preds = %31, %24
  %47 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !20202
  %48 = bitcast i32* %47 to [1 x i32]*, !dbg !20202
  %49 = load [1 x i32], [1 x i32]* %48, align 4, !dbg !20202
  call void @z_reschedule(%struct.k_spinlock.13* noundef @lock, [1 x i32] %49) #10, !dbg !20202
  br label %50, !dbg !20203

50:                                               ; preds = %46
  br label %51, !dbg !20204

51:                                               ; preds = %50
  ret void, !dbg !20206
}

; Function Attrs: noinline nounwind optnone
define internal void @handle_poll_events(%struct.k_sem.475* noundef %0) #1 !dbg !20207 {
  %2 = alloca %struct.k_sem.475*, align 4
  store %struct.k_sem.475* %0, %struct.k_sem.475** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %2, metadata !20208, metadata !DIExpression()), !dbg !20209
  %3 = load %struct.k_sem.475*, %struct.k_sem.475** %2, align 4, !dbg !20210
  ret void, !dbg !20211
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem.475* noundef %0, [1 x i64] %1) #1 !dbg !20212 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.argument_value, align 8
  %13 = alloca %struct.k_sem.475*, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.z_spinlock_key, align 4
  %16 = alloca %union.argument_value, align 8
  %17 = getelementptr inbounds %union.argument_value, %union.argument_value* %12, i32 0, i32 0
  %18 = bitcast i64* %17 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %18, align 8
  store %struct.k_sem.475* %0, %struct.k_sem.475** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %13, metadata !20219, metadata !DIExpression()), !dbg !20220
  call void @llvm.dbg.declare(metadata %union.argument_value* %12, metadata !20221, metadata !DIExpression()), !dbg !20222
  call void @llvm.dbg.declare(metadata i32* %14, metadata !20223, metadata !DIExpression()), !dbg !20224
  store i32 0, i32* %14, align 4, !dbg !20224
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %15, metadata !20225, metadata !DIExpression()), !dbg !20226
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !20065, metadata !DIExpression()) #9, !dbg !20227
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !20229
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !20073, metadata !DIExpression()) #9, !dbg !20230
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20075, metadata !DIExpression()) #9, !dbg !20231
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !20233, !srcloc !20080
  store i32 %20, i32* %5, align 4, !dbg !20233
  %21 = load i32, i32* %5, align 4, !dbg !20234
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !20235
  store i32 %21, i32* %22, align 4, !dbg !20236
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !20237
  %24 = load i32, i32* %23, align 4, !dbg !20237
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !20238
  store i32 %24, i32* %25, align 4, !dbg !20238
  br label %26, !dbg !20239

26:                                               ; preds = %2
  br label %27, !dbg !20240

27:                                               ; preds = %26
  %28 = load %struct.k_sem.475*, %struct.k_sem.475** %13, align 4, !dbg !20242
  %29 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %28, i32 0, i32 1, !dbg !20242
  %30 = load i32, i32* %29, align 4, !dbg !20242
  %31 = icmp ugt i32 %30, 0, !dbg !20242
  %32 = xor i1 %31, true, !dbg !20242
  %33 = xor i1 %32, true, !dbg !20242
  %34 = zext i1 %33 to i32, !dbg !20242
  %35 = icmp ne i32 %34, 0, !dbg !20242
  br i1 %35, label %36, label %54, !dbg !20244

36:                                               ; preds = %27
  %37 = load %struct.k_sem.475*, %struct.k_sem.475** %13, align 4, !dbg !20245
  %38 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %37, i32 0, i32 1, !dbg !20247
  %39 = load i32, i32* %38, align 4, !dbg !20248
  %40 = add i32 %39, -1, !dbg !20248
  store i32 %40, i32* %38, align 4, !dbg !20248
  %41 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !20249
  %42 = bitcast i32* %41 to [1 x i32]*, !dbg !20249
  %43 = load [1 x i32], [1 x i32]* %42, align 4, !dbg !20249
  %44 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %45 = bitcast i32* %44 to [1 x i32]*
  store [1 x i32] %43, [1 x i32]* %45, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20250, metadata !DIExpression()) #9, !dbg !20254
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20256, metadata !DIExpression()) #9, !dbg !20257
  %46 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !20258
  %47 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !20259
  %48 = load i32, i32* %47, align 4, !dbg !20259
  store i32 %48, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20260, metadata !DIExpression()) #9, !dbg !20262
  %49 = load i32, i32* %4, align 4, !dbg !20264
  %50 = icmp ne i32 %49, 0, !dbg !20266
  br i1 %50, label %51, label %52, !dbg !20267

51:                                               ; preds = %36
  br label %53, !dbg !20268

52:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !20270, !srcloc !20271
  br label %53, !dbg !20272

53:                                               ; preds = %51, %52
  store i32 0, i32* %14, align 4, !dbg !20273
  br label %85, !dbg !20274

54:                                               ; preds = %27
  %55 = getelementptr inbounds %union.argument_value, %union.argument_value* %12, i32 0, i32 0, !dbg !20275
  %56 = load i64, i64* %55, align 8, !dbg !20275
  %57 = getelementptr inbounds %union.argument_value, %union.argument_value* %16, i32 0, i32 0, !dbg !20275
  store i64 0, i64* %57, align 8, !dbg !20275
  %58 = icmp eq i64 %56, 0, !dbg !20275
  br i1 %58, label %59, label %73, !dbg !20277

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !20278
  %61 = bitcast i32* %60 to [1 x i32]*, !dbg !20278
  %62 = load [1 x i32], [1 x i32]* %61, align 4, !dbg !20278
  %63 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0
  %64 = bitcast i32* %63 to [1 x i32]*
  store [1 x i32] %62, [1 x i32]* %64, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !20250, metadata !DIExpression()) #9, !dbg !20280
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !20256, metadata !DIExpression()) #9, !dbg !20282
  %65 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !20283
  %66 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !20284
  %67 = load i32, i32* %66, align 4, !dbg !20284
  store i32 %67, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20260, metadata !DIExpression()) #9, !dbg !20285
  %68 = load i32, i32* %3, align 4, !dbg !20287
  %69 = icmp ne i32 %68, 0, !dbg !20288
  br i1 %69, label %70, label %71, !dbg !20289

70:                                               ; preds = %59
  br label %72, !dbg !20290

71:                                               ; preds = %59
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !20291, !srcloc !20271
  br label %72, !dbg !20292

72:                                               ; preds = %70, %71
  store i32 -16, i32* %14, align 4, !dbg !20293
  br label %85, !dbg !20294

73:                                               ; preds = %54
  br label %74, !dbg !20295

74:                                               ; preds = %73
  br label %75, !dbg !20296

75:                                               ; preds = %74
  %76 = load %struct.k_sem.475*, %struct.k_sem.475** %13, align 4, !dbg !20298
  %77 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %76, i32 0, i32 0, !dbg !20299
  %78 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !20300
  %79 = bitcast i32* %78 to [1 x i32]*, !dbg !20300
  %80 = load [1 x i32], [1 x i32]* %79, align 4, !dbg !20300
  %81 = getelementptr inbounds %union.argument_value, %union.argument_value* %12, i32 0, i32 0, !dbg !20300
  %82 = bitcast i64* %81 to [1 x i64]*, !dbg !20300
  %83 = load [1 x i64], [1 x i64]* %82, align 8, !dbg !20300
  %84 = call i32 bitcast (i32 (%struct.k_spinlock.13*, [1 x i32], %union.anon.121*, [1 x i64])* @z_pend_curr to i32 (%struct.k_spinlock.13*, [1 x i32], %struct._wait_q_t.460*, [1 x i64])*)(%struct.k_spinlock.13* noundef @lock, [1 x i32] %80, %struct._wait_q_t.460* noundef %77, [1 x i64] %83) #10, !dbg !20300
  store i32 %84, i32* %14, align 4, !dbg !20301
  br label %85, !dbg !20302

85:                                               ; preds = %75, %72, %53
  call void @llvm.dbg.label(metadata !20303), !dbg !20304
  br label %86, !dbg !20305

86:                                               ; preds = %85
  br label %87, !dbg !20306

87:                                               ; preds = %86
  %88 = load i32, i32* %14, align 4, !dbg !20308
  ret i32 %88, !dbg !20309
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_sem_reset(%struct.k_sem.475* noundef %0) #1 !dbg !20310 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.772*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.k_sem.475*, align 4
  %8 = alloca %struct.k_thread.772*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_sem.475* %0, %struct.k_sem.475** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem.475** %7, metadata !20311, metadata !DIExpression()), !dbg !20312
  call void @llvm.dbg.declare(metadata %struct.k_thread.772** %8, metadata !20313, metadata !DIExpression()), !dbg !20314
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !20315, metadata !DIExpression()), !dbg !20316
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !20065, metadata !DIExpression()) #9, !dbg !20317
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !20319
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !20073, metadata !DIExpression()) #9, !dbg !20320
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20075, metadata !DIExpression()) #9, !dbg !20321
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !20323, !srcloc !20080
  store i32 %11, i32* %2, align 4, !dbg !20323
  %12 = load i32, i32* %2, align 4, !dbg !20324
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !20325
  store i32 %12, i32* %13, align 4, !dbg !20326
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !20327
  %15 = load i32, i32* %14, align 4, !dbg !20327
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !20328
  store i32 %15, i32* %16, align 4, !dbg !20328
  br label %17, !dbg !20329

17:                                               ; preds = %1, %24
  %18 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20330
  %19 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %18, i32 0, i32 0, !dbg !20332
  %20 = call %struct.k_thread.772* bitcast (%struct.k_thread.132* (%union.anon.121*)* @z_unpend_first_thread to %struct.k_thread.772* (%struct._wait_q_t.460*)*)(%struct._wait_q_t.460* noundef %19) #10, !dbg !20333
  store %struct.k_thread.772* %20, %struct.k_thread.772** %8, align 4, !dbg !20334
  %21 = load %struct.k_thread.772*, %struct.k_thread.772** %8, align 4, !dbg !20335
  %22 = icmp eq %struct.k_thread.772* %21, null, !dbg !20337
  br i1 %22, label %23, label %24, !dbg !20338

23:                                               ; preds = %17
  br label %31, !dbg !20339

24:                                               ; preds = %17
  %25 = load %struct.k_thread.772*, %struct.k_thread.772** %8, align 4, !dbg !20341
  store %struct.k_thread.772* %25, %struct.k_thread.772** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.772** %3, metadata !20174, metadata !DIExpression()), !dbg !20342
  store i32 -11, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20180, metadata !DIExpression()), !dbg !20344
  %26 = load i32, i32* %4, align 4, !dbg !20345
  %27 = load %struct.k_thread.772*, %struct.k_thread.772** %3, align 4, !dbg !20346
  %28 = getelementptr inbounds %struct.k_thread.772, %struct.k_thread.772* %27, i32 0, i32 6, !dbg !20347
  %29 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %28, i32 0, i32 1, !dbg !20348
  store i32 %26, i32* %29, align 4, !dbg !20349
  %30 = load %struct.k_thread.772*, %struct.k_thread.772** %8, align 4, !dbg !20350
  call void bitcast (void (%struct.k_thread.132*)* @z_ready_thread to void (%struct.k_thread.772*)*)(%struct.k_thread.772* noundef %30) #10, !dbg !20351
  br label %17, !dbg !20329, !llvm.loop !20352

31:                                               ; preds = %23
  %32 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20354
  %33 = getelementptr inbounds %struct.k_sem.475, %struct.k_sem.475* %32, i32 0, i32 1, !dbg !20355
  store i32 0, i32* %33, align 4, !dbg !20356
  br label %34, !dbg !20357

34:                                               ; preds = %31
  br label %35, !dbg !20358

35:                                               ; preds = %34
  %36 = load %struct.k_sem.475*, %struct.k_sem.475** %7, align 4, !dbg !20360
  call void @handle_poll_events(%struct.k_sem.475* noundef %36) #10, !dbg !20361
  %37 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !20362
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !20362
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !20362
  call void @z_reschedule(%struct.k_spinlock.13* noundef @lock, [1 x i32] %39) #10, !dbg !20362
  ret void, !dbg !20363
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread.132* noundef %0, %struct.k_thread.132* noundef %1) #1 !dbg !20364 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20367, metadata !DIExpression()), !dbg !20368
  store %struct.k_thread.132* %1, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !20369, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20371, metadata !DIExpression()), !dbg !20372
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20373
  %9 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %8, i32 0, i32 0, !dbg !20374
  %10 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %9, i32 0, i32 4, !dbg !20375
  %11 = bitcast %union.anon.2.7* %10 to %struct.device_state.444*, !dbg !20375
  %12 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %11, i32 0, i32 0, !dbg !20375
  %13 = load i8, i8* %12, align 2, !dbg !20375
  %14 = sext i8 %13 to i32, !dbg !20373
  store i32 %14, i32* %6, align 4, !dbg !20372
  call void @llvm.dbg.declare(metadata i32* %7, metadata !20376, metadata !DIExpression()), !dbg !20377
  %15 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !20378
  %16 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %15, i32 0, i32 0, !dbg !20379
  %17 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %16, i32 0, i32 4, !dbg !20380
  %18 = bitcast %union.anon.2.7* %17 to %struct.device_state.444*, !dbg !20380
  %19 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %18, i32 0, i32 0, !dbg !20380
  %20 = load i8, i8* %19, align 2, !dbg !20380
  %21 = sext i8 %20 to i32, !dbg !20378
  store i32 %21, i32* %7, align 4, !dbg !20377
  %22 = load i32, i32* %6, align 4, !dbg !20381
  %23 = load i32, i32* %7, align 4, !dbg !20383
  %24 = icmp ne i32 %22, %23, !dbg !20384
  br i1 %24, label %25, label %29, !dbg !20385

25:                                               ; preds = %2
  %26 = load i32, i32* %7, align 4, !dbg !20386
  %27 = load i32, i32* %6, align 4, !dbg !20388
  %28 = sub nsw i32 %26, %27, !dbg !20389
  store i32 %28, i32* %3, align 4, !dbg !20390
  br label %30, !dbg !20390

29:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !20391
  br label %30, !dbg !20391

30:                                               ; preds = %29, %25
  %31 = load i32, i32* %3, align 4, !dbg !20392
  ret i32 %31, !dbg !20392
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reset_time_slice(%struct.k_thread.132* noundef %0) #1 !dbg !20393 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20396, metadata !DIExpression()), !dbg !20397
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20398
  %4 = call i32 @slice_time(%struct.k_thread.132* noundef %3) #10, !dbg !20400
  %5 = icmp ne i32 %4, 0, !dbg !20401
  br i1 %5, label %6, label %13, !dbg !20402

6:                                                ; preds = %1
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20403
  %8 = call i32 @slice_time(%struct.k_thread.132* noundef %7) #10, !dbg !20405
  %9 = call i32 @sys_clock_elapsed() #10, !dbg !20406
  %10 = add i32 %8, %9, !dbg !20407
  store i32 %10, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20408
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20409
  %12 = call i32 @slice_time(%struct.k_thread.132* noundef %11) #10, !dbg !20410
  call void @z_set_timeout_expiry(i32 noundef %12, i1 noundef zeroext false) #10, !dbg !20411
  br label %13, !dbg !20412

13:                                               ; preds = %6, %1
  ret void, !dbg !20413
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_time(%struct.k_thread.132* noundef %0) #1 !dbg !20414 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca i32, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20417, metadata !DIExpression()), !dbg !20418
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20419, metadata !DIExpression()), !dbg !20420
  %4 = load i32, i32* @slice_ticks, align 4, !dbg !20421
  store i32 %4, i32* %3, align 4, !dbg !20420
  %5 = load i32, i32* %3, align 4, !dbg !20422
  ret i32 %5, !dbg !20423
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) #1 !dbg !20424 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !20427, metadata !DIExpression()), !dbg !20428
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !20429, metadata !DIExpression()), !dbg !20430
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !20431, metadata !DIExpression()), !dbg !20437
  %13 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !20437
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !20437
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !20438, metadata !DIExpression()), !dbg !20437
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !20439, metadata !DIExpression()) #9, !dbg !20444
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !20446
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !20447, metadata !DIExpression()) #9, !dbg !20448
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20449, metadata !DIExpression()) #9, !dbg !20451
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !20453, !srcloc !20454
  store i32 %15, i32* %3, align 4, !dbg !20453
  %16 = load i32, i32* %3, align 4, !dbg !20455
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !20456
  store i32 %16, i32* %17, align 4, !dbg !20457
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !20458
  %19 = load i32, i32* %18, align 4, !dbg !20458
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !20437
  store i32 %19, i32* %20, align 4, !dbg !20437
  br label %21, !dbg !20437

21:                                               ; preds = %55, %2
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !20459
  %23 = load i32, i32* %22, align 4, !dbg !20459
  %24 = icmp ne i32 %23, 0, !dbg !20459
  %25 = xor i1 %24, true, !dbg !20459
  br i1 %25, label %26, label %57, !dbg !20437

26:                                               ; preds = %21
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20461
  %27 = load i32, i32* %9, align 4, !dbg !20463
  %28 = call i32 @k_ms_to_ticks_ceil32(i32 noundef %27) #10, !dbg !20464
  store i32 %28, i32* @slice_ticks, align 4, !dbg !20465
  %29 = load i32, i32* %9, align 4, !dbg !20466
  %30 = icmp sgt i32 %29, 0, !dbg !20468
  br i1 %30, label %31, label %39, !dbg !20469

31:                                               ; preds = %26
  %32 = load i32, i32* @slice_ticks, align 4, !dbg !20470
  %33 = icmp sgt i32 2, %32, !dbg !20470
  br i1 %33, label %34, label %35, !dbg !20470

34:                                               ; preds = %31
  br label %37, !dbg !20470

35:                                               ; preds = %31
  %36 = load i32, i32* @slice_ticks, align 4, !dbg !20470
  br label %37, !dbg !20470

37:                                               ; preds = %35, %34
  %38 = phi i32 [ 2, %34 ], [ %36, %35 ], !dbg !20470
  store i32 %38, i32* @slice_ticks, align 4, !dbg !20472
  br label %39, !dbg !20473

39:                                               ; preds = %37, %26
  %40 = load i32, i32* %10, align 4, !dbg !20474
  store i32 %40, i32* @slice_max_prio, align 4, !dbg !20475
  %41 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20476
  call void @z_reset_time_slice(%struct.k_thread.132* noundef %41) #10, !dbg !20477
  br label %42, !dbg !20478

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !20459
  %44 = bitcast i32* %43 to [1 x i32]*, !dbg !20459
  %45 = load [1 x i32], [1 x i32]* %44, align 4, !dbg !20459
  %46 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %47 = bitcast i32* %46 to [1 x i32]*
  store [1 x i32] %45, [1 x i32]* %47, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !20479, metadata !DIExpression()) #9, !dbg !20483
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !20485, metadata !DIExpression()) #9, !dbg !20486
  %48 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !20487
  %49 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !20488
  %50 = load i32, i32* %49, align 4, !dbg !20488
  store i32 %50, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20489, metadata !DIExpression()) #9, !dbg !20491
  %51 = load i32, i32* %4, align 4, !dbg !20493
  %52 = icmp ne i32 %51, 0, !dbg !20495
  br i1 %52, label %53, label %54, !dbg !20496

53:                                               ; preds = %42
  br label %55, !dbg !20497

54:                                               ; preds = %42
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !20499, !srcloc !20500
  br label %55, !dbg !20501

55:                                               ; preds = %53, %54
  %56 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !20459
  store i32 1, i32* %56, align 4, !dbg !20459
  br label %21, !dbg !20459, !llvm.loop !20502

57:                                               ; preds = %21
  ret void, !dbg !20504
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #1 !dbg !20505 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !20506, metadata !DIExpression()), !dbg !20507
  %15 = load i32, i32* %14, align 4, !dbg !20508
  %16 = zext i32 %15 to i64, !dbg !20508
  store i64 %16, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !20509, metadata !DIExpression()), !dbg !20511
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20513, metadata !DIExpression()), !dbg !20514
  store i32 32768, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20515, metadata !DIExpression()), !dbg !20516
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !20517, metadata !DIExpression()), !dbg !20518
  store i8 1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !20519, metadata !DIExpression()), !dbg !20520
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !20521, metadata !DIExpression()), !dbg !20522
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !20523, metadata !DIExpression()), !dbg !20524
  call void @llvm.dbg.declare(metadata i8* %10, metadata !20525, metadata !DIExpression()), !dbg !20526
  %17 = load i8, i8* %6, align 1, !dbg !20527
  %18 = trunc i8 %17 to i1, !dbg !20527
  br i1 %18, label %19, label %28, !dbg !20528

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !20529
  %21 = load i32, i32* %4, align 4, !dbg !20530
  %22 = icmp ugt i32 %20, %21, !dbg !20531
  br i1 %22, label %23, label %28, !dbg !20532

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !20533
  %25 = load i32, i32* %4, align 4, !dbg !20534
  %26 = urem i32 %24, %25, !dbg !20535
  %27 = icmp eq i32 %26, 0, !dbg !20536
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !20537
  %30 = zext i1 %29 to i8, !dbg !20526
  store i8 %30, i8* %10, align 1, !dbg !20526
  call void @llvm.dbg.declare(metadata i8* %11, metadata !20538, metadata !DIExpression()), !dbg !20539
  %31 = load i8, i8* %6, align 1, !dbg !20540
  %32 = trunc i8 %31 to i1, !dbg !20540
  br i1 %32, label %33, label %42, !dbg !20541

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !20542
  %35 = load i32, i32* %5, align 4, !dbg !20543
  %36 = icmp ugt i32 %34, %35, !dbg !20544
  br i1 %36, label %37, label %42, !dbg !20545

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !20546
  %39 = load i32, i32* %5, align 4, !dbg !20547
  %40 = urem i32 %38, %39, !dbg !20548
  %41 = icmp eq i32 %40, 0, !dbg !20549
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !20537
  %44 = zext i1 %43 to i8, !dbg !20539
  store i8 %44, i8* %11, align 1, !dbg !20539
  %45 = load i32, i32* %4, align 4, !dbg !20550
  %46 = load i32, i32* %5, align 4, !dbg !20552
  %47 = icmp eq i32 %45, %46, !dbg !20553
  br i1 %47, label %48, label %59, !dbg !20554

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !20555
  %50 = trunc i8 %49 to i1, !dbg !20555
  br i1 %50, label %51, label %55, !dbg !20555

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !20557
  %53 = trunc i64 %52 to i32, !dbg !20558
  %54 = zext i32 %53 to i64, !dbg !20559
  br label %57, !dbg !20555

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !20560
  br label %57, !dbg !20555

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !20555
  store i64 %58, i64* %2, align 8, !dbg !20561
  br label %196, !dbg !20561

59:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i64* %12, metadata !20562, metadata !DIExpression()), !dbg !20563
  store i64 0, i64* %12, align 8, !dbg !20563
  %60 = load i8, i8* %10, align 1, !dbg !20564
  %61 = trunc i8 %60 to i1, !dbg !20564
  br i1 %61, label %87, label %62, !dbg !20566

62:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !20567, metadata !DIExpression()), !dbg !20569
  %63 = load i8, i8* %11, align 1, !dbg !20570
  %64 = trunc i8 %63 to i1, !dbg !20570
  br i1 %64, label %65, label %69, !dbg !20570

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !20571
  %67 = load i32, i32* %5, align 4, !dbg !20572
  %68 = udiv i32 %66, %67, !dbg !20573
  br label %71, !dbg !20570

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !20574
  br label %71, !dbg !20570

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !20570
  store i32 %72, i32* %13, align 4, !dbg !20569
  %73 = load i8, i8* %8, align 1, !dbg !20575
  %74 = trunc i8 %73 to i1, !dbg !20575
  br i1 %74, label %75, label %79, !dbg !20577

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !20578
  %77 = sub i32 %76, 1, !dbg !20580
  %78 = zext i32 %77 to i64, !dbg !20578
  store i64 %78, i64* %12, align 8, !dbg !20581
  br label %79, !dbg !20582

79:                                               ; preds = %75, %71
  %80 = load i8, i8* %9, align 1, !dbg !20583
  %81 = trunc i8 %80 to i1, !dbg !20583
  br i1 %81, label %82, label %86, !dbg !20585

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !20586
  %84 = udiv i32 %83, 2, !dbg !20588
  %85 = zext i32 %84 to i64, !dbg !20586
  store i64 %85, i64* %12, align 8, !dbg !20589
  br label %86, !dbg !20590

86:                                               ; preds = %82, %79
  br label %87, !dbg !20591

87:                                               ; preds = %86, %59
  %88 = load i8, i8* %11, align 1, !dbg !20592
  %89 = trunc i8 %88 to i1, !dbg !20592
  br i1 %89, label %90, label %115, !dbg !20594

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !20595
  %92 = load i64, i64* %3, align 8, !dbg !20597
  %93 = add i64 %92, %91, !dbg !20597
  store i64 %93, i64* %3, align 8, !dbg !20597
  %94 = load i8, i8* %7, align 1, !dbg !20598
  %95 = trunc i8 %94 to i1, !dbg !20598
  br i1 %95, label %96, label %107, !dbg !20600

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !20601
  %98 = icmp ult i64 %97, 4294967296, !dbg !20602
  br i1 %98, label %99, label %107, !dbg !20603

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !20604
  %101 = trunc i64 %100 to i32, !dbg !20606
  %102 = load i32, i32* %4, align 4, !dbg !20607
  %103 = load i32, i32* %5, align 4, !dbg !20608
  %104 = udiv i32 %102, %103, !dbg !20609
  %105 = udiv i32 %101, %104, !dbg !20610
  %106 = zext i32 %105 to i64, !dbg !20611
  store i64 %106, i64* %2, align 8, !dbg !20612
  br label %196, !dbg !20612

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !20613
  %109 = load i32, i32* %4, align 4, !dbg !20615
  %110 = zext i32 %109 to i64, !dbg !20616
  %111 = load i32, i32* %5, align 4, !dbg !20617
  %112 = zext i32 %111 to i64, !dbg !20617
  %113 = udiv i64 %110, %112, !dbg !20618
  %114 = udiv i64 %108, %113, !dbg !20619
  store i64 %114, i64* %2, align 8, !dbg !20620
  br label %196, !dbg !20620

115:                                              ; preds = %87
  %116 = load i8, i8* %10, align 1, !dbg !20621
  %117 = trunc i8 %116 to i1, !dbg !20621
  br i1 %117, label %118, label %137, !dbg !20623

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !20624
  %120 = trunc i8 %119 to i1, !dbg !20624
  br i1 %120, label %121, label %129, !dbg !20627

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !20628
  %123 = trunc i64 %122 to i32, !dbg !20630
  %124 = load i32, i32* %5, align 4, !dbg !20631
  %125 = load i32, i32* %4, align 4, !dbg !20632
  %126 = udiv i32 %124, %125, !dbg !20633
  %127 = mul i32 %123, %126, !dbg !20634
  %128 = zext i32 %127 to i64, !dbg !20635
  store i64 %128, i64* %2, align 8, !dbg !20636
  br label %196, !dbg !20636

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !20637
  %131 = load i32, i32* %5, align 4, !dbg !20639
  %132 = zext i32 %131 to i64, !dbg !20640
  %133 = load i32, i32* %4, align 4, !dbg !20641
  %134 = zext i32 %133 to i64, !dbg !20641
  %135 = udiv i64 %132, %134, !dbg !20642
  %136 = mul i64 %130, %135, !dbg !20643
  store i64 %136, i64* %2, align 8, !dbg !20644
  br label %196, !dbg !20644

137:                                              ; preds = %115
  %138 = load i8, i8* %7, align 1, !dbg !20645
  %139 = trunc i8 %138 to i1, !dbg !20645
  br i1 %139, label %140, label %152, !dbg !20648

140:                                              ; preds = %137
  %141 = load i64, i64* %3, align 8, !dbg !20649
  %142 = load i32, i32* %5, align 4, !dbg !20651
  %143 = zext i32 %142 to i64, !dbg !20651
  %144 = mul i64 %141, %143, !dbg !20652
  %145 = load i64, i64* %12, align 8, !dbg !20653
  %146 = add i64 %144, %145, !dbg !20654
  %147 = load i32, i32* %4, align 4, !dbg !20655
  %148 = zext i32 %147 to i64, !dbg !20655
  %149 = udiv i64 %146, %148, !dbg !20656
  %150 = trunc i64 %149 to i32, !dbg !20657
  %151 = zext i32 %150 to i64, !dbg !20657
  store i64 %151, i64* %2, align 8, !dbg !20658
  br label %196, !dbg !20658

152:                                              ; preds = %137
  %153 = load i8, i8* %6, align 1, !dbg !20659
  %154 = trunc i8 %153 to i1, !dbg !20659
  br i1 %154, label %155, label %175, !dbg !20661

155:                                              ; preds = %152
  %156 = load i32, i32* %4, align 4, !dbg !20662
  %157 = zext i32 %156 to i64, !dbg !20662
  %158 = mul i64 31536000, %157, !dbg !20662
  %159 = add i64 %158, 4294967294, !dbg !20662
  %160 = udiv i64 %159, 4294967295, !dbg !20662
  %161 = load i32, i32* %5, align 4, !dbg !20662
  %162 = zext i32 %161 to i64, !dbg !20662
  %163 = mul i64 %160, %162, !dbg !20662
  %164 = icmp ule i64 %163, 4294967295, !dbg !20662
  br i1 %164, label %165, label %175, !dbg !20663

165:                                              ; preds = %155
  %166 = load i64, i64* %3, align 8, !dbg !20664
  %167 = load i32, i32* %5, align 4, !dbg !20666
  %168 = zext i32 %167 to i64, !dbg !20666
  %169 = mul i64 %166, %168, !dbg !20667
  %170 = load i64, i64* %12, align 8, !dbg !20668
  %171 = add i64 %169, %170, !dbg !20669
  %172 = load i32, i32* %4, align 4, !dbg !20670
  %173 = zext i32 %172 to i64, !dbg !20670
  %174 = udiv i64 %171, %173, !dbg !20671
  store i64 %174, i64* %2, align 8, !dbg !20672
  br label %196, !dbg !20672

175:                                              ; preds = %155, %152
  %176 = load i64, i64* %3, align 8, !dbg !20673
  %177 = load i32, i32* %4, align 4, !dbg !20675
  %178 = zext i32 %177 to i64, !dbg !20675
  %179 = udiv i64 %176, %178, !dbg !20676
  %180 = load i32, i32* %5, align 4, !dbg !20677
  %181 = zext i32 %180 to i64, !dbg !20677
  %182 = mul i64 %179, %181, !dbg !20678
  %183 = load i64, i64* %3, align 8, !dbg !20679
  %184 = load i32, i32* %4, align 4, !dbg !20680
  %185 = zext i32 %184 to i64, !dbg !20680
  %186 = urem i64 %183, %185, !dbg !20681
  %187 = load i32, i32* %5, align 4, !dbg !20682
  %188 = zext i32 %187 to i64, !dbg !20682
  %189 = mul i64 %186, %188, !dbg !20683
  %190 = load i64, i64* %12, align 8, !dbg !20684
  %191 = add i64 %189, %190, !dbg !20685
  %192 = load i32, i32* %4, align 4, !dbg !20686
  %193 = zext i32 %192 to i64, !dbg !20686
  %194 = udiv i64 %191, %193, !dbg !20687
  %195 = add i64 %182, %194, !dbg !20688
  store i64 %195, i64* %2, align 8, !dbg !20689
  br label %196, !dbg !20689

196:                                              ; preds = %57, %99, %107, %121, %129, %140, %165, %175
  %197 = load i64, i64* %2, align 8, !dbg !20690
  %198 = trunc i64 %197 to i32, !dbg !20691
  ret i32 %198, !dbg !20692
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_time_slice(i32 noundef %0) #1 !dbg !20693 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !20694, metadata !DIExpression()), !dbg !20695
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !20696, metadata !DIExpression()), !dbg !20697
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !20439, metadata !DIExpression()) #9, !dbg !20698
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !20700
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !20447, metadata !DIExpression()) #9, !dbg !20701
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !20702
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !20704, !srcloc !20454
  store i32 %15, i32* %2, align 4, !dbg !20704
  %16 = load i32, i32* %2, align 4, !dbg !20705
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !20706
  store i32 %16, i32* %17, align 4, !dbg !20707
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !20708
  %19 = load i32, i32* %18, align 4, !dbg !20708
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !20709
  store i32 %19, i32* %20, align 4, !dbg !20709
  %21 = load %struct.k_thread.132*, %struct.k_thread.132** @pending_current, align 4, !dbg !20710
  %22 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20712
  %23 = icmp eq %struct.k_thread.132* %21, %22, !dbg !20713
  br i1 %23, label %24, label %39, !dbg !20714

24:                                               ; preds = %1
  %25 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20715
  call void @z_reset_time_slice(%struct.k_thread.132* noundef %25) #10, !dbg !20717
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !20718
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !20718
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !20718
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !20479, metadata !DIExpression()) #9, !dbg !20719
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !20485, metadata !DIExpression()) #9, !dbg !20721
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !20722
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !20723
  %33 = load i32, i32* %32, align 4, !dbg !20723
  store i32 %33, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20489, metadata !DIExpression()) #9, !dbg !20724
  %34 = load i32, i32* %4, align 4, !dbg !20726
  %35 = icmp ne i32 %34, 0, !dbg !20727
  br i1 %35, label %36, label %37, !dbg !20728

36:                                               ; preds = %24
  br label %38, !dbg !20729

37:                                               ; preds = %24
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !20730, !srcloc !20500
  br label %38, !dbg !20731

38:                                               ; preds = %36, %37
  br label %78, !dbg !20732

39:                                               ; preds = %1
  store %struct.k_thread.132* null, %struct.k_thread.132** @pending_current, align 4, !dbg !20733
  %40 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20734
  %41 = call i32 @slice_time(%struct.k_thread.132* noundef %40) #10, !dbg !20736
  %42 = icmp ne i32 %41, 0, !dbg !20736
  br i1 %42, label %43, label %63, !dbg !20737

43:                                               ; preds = %39
  %44 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20738
  %45 = call zeroext i1 @sliceable(%struct.k_thread.132* noundef %44) #10, !dbg !20739
  br i1 %45, label %46, label %63, !dbg !20740

46:                                               ; preds = %43
  %47 = load i32, i32* %11, align 4, !dbg !20741
  %48 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20744
  %49 = icmp sge i32 %47, %48, !dbg !20745
  br i1 %49, label %50, label %58, !dbg !20746

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !20747
  %52 = bitcast i32* %51 to [1 x i32]*, !dbg !20747
  %53 = load [1 x i32], [1 x i32]* %52, align 4, !dbg !20747
  %54 = call i32 @slice_expired_locked([1 x i32] %53) #10, !dbg !20747
  %55 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !20747
  store i32 %54, i32* %55, align 4, !dbg !20747
  %56 = bitcast %struct.z_spinlock_key* %12 to i8*, !dbg !20747
  %57 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !20747
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 4, i1 false), !dbg !20747
  br label %62, !dbg !20749

58:                                               ; preds = %46
  %59 = load i32, i32* %11, align 4, !dbg !20750
  %60 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20752
  %61 = sub nsw i32 %60, %59, !dbg !20752
  store i32 %61, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20752
  br label %62

62:                                               ; preds = %58, %50
  br label %64, !dbg !20753

63:                                               ; preds = %43, %39
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20754
  br label %64

64:                                               ; preds = %63, %62
  %65 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !20756
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !20756
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !20756
  %68 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !20479, metadata !DIExpression()) #9, !dbg !20757
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !20485, metadata !DIExpression()) #9, !dbg !20759
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !20760
  %71 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !20761
  %72 = load i32, i32* %71, align 4, !dbg !20761
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !20762
  %73 = load i32, i32* %3, align 4, !dbg !20764
  %74 = icmp ne i32 %73, 0, !dbg !20765
  br i1 %74, label %75, label %76, !dbg !20766

75:                                               ; preds = %64
  br label %77, !dbg !20767

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !20768, !srcloc !20500
  br label %77, !dbg !20769

77:                                               ; preds = %75, %76
  br label %78, !dbg !20770

78:                                               ; preds = %77, %38
  ret void, !dbg !20770
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sliceable(%struct.k_thread.132* noundef %0) #1 !dbg !20771 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20774, metadata !DIExpression()), !dbg !20775
  call void @llvm.dbg.declare(metadata i8* %3, metadata !20776, metadata !DIExpression()), !dbg !20777
  %4 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20778
  %5 = call i32 @is_preempt(%struct.k_thread.132* noundef %4) #10, !dbg !20779
  %6 = icmp ne i32 %5, 0, !dbg !20779
  br i1 %6, label %7, label %24, !dbg !20780

7:                                                ; preds = %1
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20781
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.132* noundef %8) #10, !dbg !20782
  br i1 %9, label %24, label %10, !dbg !20783

10:                                               ; preds = %7
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20784
  %12 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %11, i32 0, i32 0, !dbg !20785
  %13 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %12, i32 0, i32 4, !dbg !20786
  %14 = bitcast %union.anon.2.7* %13 to %struct.device_state.444*, !dbg !20786
  %15 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %14, i32 0, i32 0, !dbg !20786
  %16 = load i8, i8* %15, align 2, !dbg !20786
  %17 = sext i8 %16 to i32, !dbg !20784
  %18 = load i32, i32* @slice_max_prio, align 4, !dbg !20787
  %19 = call zeroext i1 @z_is_prio_higher(i32 noundef %17, i32 noundef %18) #10, !dbg !20788
  br i1 %19, label %24, label %20, !dbg !20789

20:                                               ; preds = %10
  %21 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20790
  %22 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.132* noundef %21) #10, !dbg !20791
  %23 = xor i1 %22, true, !dbg !20792
  br label %24

24:                                               ; preds = %20, %10, %7, %1
  %25 = phi i1 [ false, %10 ], [ false, %7 ], [ false, %1 ], [ %23, %20 ], !dbg !20793
  %26 = zext i1 %25 to i8, !dbg !20777
  store i8 %26, i8* %3, align 1, !dbg !20777
  %27 = load i8, i8* %3, align 1, !dbg !20794
  %28 = trunc i8 %27 to i1, !dbg !20794
  ret i1 %28, !dbg !20795
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_expired_locked([1 x i32] %0) #1 !dbg !20796 {
  %2 = alloca %struct.z_spinlock_key, align 4
  %3 = alloca %struct.z_spinlock_key, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0
  %6 = bitcast i32* %5 to [1 x i32]*
  store [1 x i32] %0, [1 x i32]* %6, align 4
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %3, metadata !20799, metadata !DIExpression()), !dbg !20800
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20801, metadata !DIExpression()), !dbg !20802
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20803
  store %struct.k_thread.132* %7, %struct.k_thread.132** %4, align 4, !dbg !20802
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20804
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.132* noundef %8) #10, !dbg !20806
  br i1 %9, label %12, label %10, !dbg !20807

10:                                               ; preds = %1
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20808
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.132* noundef %11) #10, !dbg !20810
  br label %12, !dbg !20811

12:                                               ; preds = %10, %1
  %13 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20812
  call void @z_reset_time_slice(%struct.k_thread.132* noundef %13) #10, !dbg !20813
  %14 = bitcast %struct.z_spinlock_key* %2 to i8*, !dbg !20814
  %15 = bitcast %struct.z_spinlock_key* %3 to i8*, !dbg !20814
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %14, i8* align 4 %15, i32 4, i1 false), !dbg !20814
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %2, i32 0, i32 0, !dbg !20815
  %17 = load i32, i32* %16, align 4, !dbg !20815
  ret i32 %17, !dbg !20815
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.132* noundef %0) #1 !dbg !20816 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20817, metadata !DIExpression()), !dbg !20818
  call void @llvm.dbg.declare(metadata i8* %3, metadata !20819, metadata !DIExpression()), !dbg !20820
  %4 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20821
  %5 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %4, i32 0, i32 0, !dbg !20822
  %6 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %5, i32 0, i32 3, !dbg !20823
  %7 = load i8, i8* %6, align 1, !dbg !20823
  store i8 %7, i8* %3, align 1, !dbg !20820
  %8 = load i8, i8* %3, align 1, !dbg !20824
  %9 = zext i8 %8 to i32, !dbg !20824
  %10 = and i32 %9, 31, !dbg !20825
  %11 = icmp ne i32 %10, 0, !dbg !20826
  ret i1 %11, !dbg !20827
}

; Function Attrs: noinline nounwind optnone
define internal void @move_thread_to_end_of_prio_q(%struct.k_thread.132* noundef %0) #1 !dbg !20828 {
  %2 = alloca %struct._dnode.120*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca %struct.k_thread.132*, align 4
  %7 = alloca %struct.k_thread.132*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.k_thread.132*, align 4
  %10 = alloca %struct.k_thread.132*, align 4
  %11 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %11, metadata !20829, metadata !DIExpression()), !dbg !20830
  %12 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !20831
  %13 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.132* noundef %12) #10, !dbg !20833
  br i1 %13, label %14, label %31, !dbg !20834

14:                                               ; preds = %1
  %15 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !20835
  store %struct.k_thread.132* %15, %struct.k_thread.132** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %10, metadata !20837, metadata !DIExpression()) #9, !dbg !20839
  %16 = load %struct.k_thread.132*, %struct.k_thread.132** %10, align 4, !dbg !20841
  %17 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %16, i32 0, i32 0, !dbg !20842
  %18 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %17, i32 0, i32 3, !dbg !20843
  %19 = load i8, i8* %18, align 1, !dbg !20844
  %20 = zext i8 %19 to i32, !dbg !20844
  %21 = and i32 %20, -129, !dbg !20844
  %22 = trunc i32 %21 to i8, !dbg !20844
  store i8 %22, i8* %18, align 1, !dbg !20844
  %23 = load %struct.k_thread.132*, %struct.k_thread.132** %10, align 4, !dbg !20845
  %24 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %23) #13, !dbg !20847
  br i1 %24, label %25, label %30, !dbg !20848

25:                                               ; preds = %14
  %26 = load %struct.k_thread.132*, %struct.k_thread.132** %10, align 4, !dbg !20849
  store %struct.k_thread.132* %26, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !20851, metadata !DIExpression()) #9, !dbg !20853
  %27 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !20855
  store %struct.k_thread.132* %27, %struct.k_thread.132** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %7, metadata !20856, metadata !DIExpression()), !dbg !20860
  %28 = bitcast i8* bitcast (%struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1) to i8*) to %struct._dnode.120*, !dbg !20862
  %29 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !20863
  call void @z_priq_dumb_remove(%struct._dnode.120* noundef %28, %struct.k_thread.132* noundef %29) #13, !dbg !20864
  br label %30, !dbg !20865

30:                                               ; preds = %14, %25
  br label %31, !dbg !20866

31:                                               ; preds = %30, %1
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !20867
  store %struct.k_thread.132* %32, %struct.k_thread.132** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %9, metadata !20868, metadata !DIExpression()) #9, !dbg !20870
  %33 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !20872
  %34 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %33, i32 0, i32 0, !dbg !20873
  %35 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %34, i32 0, i32 3, !dbg !20874
  %36 = load i8, i8* %35, align 1, !dbg !20875
  %37 = zext i8 %36 to i32, !dbg !20875
  %38 = or i32 %37, 128, !dbg !20875
  %39 = trunc i32 %38 to i8, !dbg !20875
  store i8 %39, i8* %35, align 1, !dbg !20875
  %40 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !20876
  %41 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %40) #13, !dbg !20878
  br i1 %41, label %42, label %107, !dbg !20879

42:                                               ; preds = %31
  %43 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !20880
  store %struct.k_thread.132* %43, %struct.k_thread.132** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %6, metadata !20882, metadata !DIExpression()) #9, !dbg !20884
  %44 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !20886
  store %struct.k_thread.132* %44, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !20856, metadata !DIExpression()) #9, !dbg !20887
  %45 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !20889
  store %struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1), %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !20890, metadata !DIExpression()) #9, !dbg !20895
  store %struct.k_thread.132* %45, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !20897, metadata !DIExpression()) #9, !dbg !20898
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20899, metadata !DIExpression()) #9, !dbg !20900
  %46 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !20901
  %47 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %46) #13, !dbg !20901
  %48 = icmp ne %struct._dnode.120* %47, null, !dbg !20901
  br i1 %48, label %49, label %54, !dbg !20901

49:                                               ; preds = %42
  %50 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !20901
  %51 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %50) #13, !dbg !20901
  %52 = bitcast %struct._dnode.120* %51 to i8*, !dbg !20901
  %53 = bitcast i8* %52 to %struct.k_thread.132*, !dbg !20901
  br label %55, !dbg !20901

54:                                               ; preds = %42
  br label %55, !dbg !20901

55:                                               ; preds = %54, %49
  %56 = phi %struct.k_thread.132* [ %53, %49 ], [ null, %54 ], !dbg !20901
  store %struct.k_thread.132* %56, %struct.k_thread.132** %4, align 4, !dbg !20901
  br label %57, !dbg !20901

57:                                               ; preds = %98, %55
  %58 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20903
  %59 = icmp ne %struct.k_thread.132* %58, null, !dbg !20903
  br i1 %59, label %60, label %100, !dbg !20901

60:                                               ; preds = %57
  %61 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !20905
  %62 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20908
  %63 = call i32 @z_sched_prio_cmp(%struct.k_thread.132* noundef %61, %struct.k_thread.132* noundef %62) #13, !dbg !20909
  %64 = icmp sgt i32 %63, 0, !dbg !20910
  br i1 %64, label %65, label %74, !dbg !20911

65:                                               ; preds = %60
  %66 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20912
  %67 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %66, i32 0, i32 0, !dbg !20914
  %68 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %67, i32 0, i32 0, !dbg !20915
  %69 = bitcast %union.anon.121* %68 to %struct._dnode.120*, !dbg !20915
  %70 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !20916
  %71 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %70, i32 0, i32 0, !dbg !20917
  %72 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %71, i32 0, i32 0, !dbg !20918
  %73 = bitcast %union.anon.121* %72 to %struct._dnode.120*, !dbg !20918
  call void @sys_dlist_insert(%struct._dnode.120* noundef %69, %struct._dnode.120* noundef %73) #13, !dbg !20919
  br label %106, !dbg !20920

74:                                               ; preds = %60
  %75 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20903
  %76 = icmp ne %struct.k_thread.132* %75, null, !dbg !20903
  br i1 %76, label %77, label %97, !dbg !20903

77:                                               ; preds = %74
  %78 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !20903
  %79 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20903
  %80 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %79, i32 0, i32 0, !dbg !20903
  %81 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %80, i32 0, i32 0, !dbg !20903
  %82 = bitcast %union.anon.121* %81 to %struct._dnode.120*, !dbg !20903
  %83 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %78, %struct._dnode.120* noundef %82) #13, !dbg !20903
  %84 = icmp ne %struct._dnode.120* %83, null, !dbg !20903
  br i1 %84, label %85, label %94, !dbg !20903

85:                                               ; preds = %77
  %86 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !20903
  %87 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20903
  %88 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %87, i32 0, i32 0, !dbg !20903
  %89 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %88, i32 0, i32 0, !dbg !20903
  %90 = bitcast %union.anon.121* %89 to %struct._dnode.120*, !dbg !20903
  %91 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %86, %struct._dnode.120* noundef %90) #13, !dbg !20903
  %92 = bitcast %struct._dnode.120* %91 to i8*, !dbg !20903
  %93 = bitcast i8* %92 to %struct.k_thread.132*, !dbg !20903
  br label %95, !dbg !20903

94:                                               ; preds = %77
  br label %95, !dbg !20903

95:                                               ; preds = %94, %85
  %96 = phi %struct.k_thread.132* [ %93, %85 ], [ null, %94 ], !dbg !20903
  br label %98, !dbg !20903

97:                                               ; preds = %74
  br label %98, !dbg !20903

98:                                               ; preds = %97, %95
  %99 = phi %struct.k_thread.132* [ %96, %95 ], [ null, %97 ], !dbg !20903
  store %struct.k_thread.132* %99, %struct.k_thread.132** %4, align 4, !dbg !20903
  br label %57, !dbg !20903, !llvm.loop !20921

100:                                              ; preds = %57
  %101 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !20923
  %102 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !20924
  %103 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %102, i32 0, i32 0, !dbg !20925
  %104 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %103, i32 0, i32 0, !dbg !20926
  %105 = bitcast %union.anon.121* %104 to %struct._dnode.120*, !dbg !20926
  call void @sys_dlist_append(%struct._dnode.120* noundef %101, %struct._dnode.120* noundef %105) #13, !dbg !20927
  br label %106, !dbg !20928

106:                                              ; preds = %65, %100
  br label %107, !dbg !20929

107:                                              ; preds = %31, %106
  %108 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !20930
  %109 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20931
  %110 = icmp eq %struct.k_thread.132* %108, %109, !dbg !20932
  %111 = zext i1 %110 to i32, !dbg !20932
  call void @update_cache(i32 noundef %111) #10, !dbg !20933
  ret void, !dbg !20934
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_queued(%struct.k_thread.132* noundef %0) #1 !dbg !20935 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20936, metadata !DIExpression()), !dbg !20937
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !20938
  %4 = call zeroext i1 @z_is_thread_state_set(%struct.k_thread.132* noundef %3, i32 noundef 128) #10, !dbg !20939
  ret i1 %4, !dbg !20940
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %0) #1 !dbg !20941 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20942, metadata !DIExpression()), !dbg !20943
  ret i1 true, !dbg !20944
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_dumb_remove(%struct._dnode.120* noundef %0, %struct.k_thread.132* noundef %1) #1 !dbg !20945 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !20946, metadata !DIExpression()), !dbg !20947
  store %struct.k_thread.132* %1, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20948, metadata !DIExpression()), !dbg !20949
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !20950
  %6 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %5, i32 0, i32 0, !dbg !20951
  %7 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %6, i32 0, i32 0, !dbg !20952
  %8 = bitcast %union.anon.121* %7 to %struct._dnode.120*, !dbg !20952
  call void @sys_dlist_remove(%struct._dnode.120* noundef %8) #10, !dbg !20953
  ret void, !dbg !20954
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %0) #1 !dbg !20955 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !20958, metadata !DIExpression()), !dbg !20959
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !20960
  %4 = call zeroext i1 @sys_dlist_is_empty(%struct._dnode.120* noundef %3) #10, !dbg !20961
  br i1 %4, label %5, label %6, !dbg !20961

5:                                                ; preds = %1
  br label %11, !dbg !20961

6:                                                ; preds = %1
  %7 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !20962
  %8 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %7, i32 0, i32 0, !dbg !20963
  %9 = bitcast %union.anon.0.118* %8 to %struct._dnode.120**, !dbg !20963
  %10 = load %struct._dnode.120*, %struct._dnode.120** %9, align 4, !dbg !20963
  br label %11, !dbg !20961

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.120* [ null, %5 ], [ %10, %6 ], !dbg !20961
  ret %struct._dnode.120* %12, !dbg !20964
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !20965 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  %5 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !20968, metadata !DIExpression()), !dbg !20969
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !20970, metadata !DIExpression()), !dbg !20971
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %5, metadata !20972, metadata !DIExpression()), !dbg !20974
  %6 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !20975
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !20976
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !20976
  %9 = load %struct._dnode.120*, %struct._dnode.120** %8, align 4, !dbg !20976
  store %struct._dnode.120* %9, %struct._dnode.120** %5, align 4, !dbg !20974
  %10 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !20977
  %11 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !20978
  %12 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %11, i32 0, i32 1, !dbg !20979
  %13 = bitcast %union.anon.0.118* %12 to %struct._dnode.120**, !dbg !20979
  store %struct._dnode.120* %10, %struct._dnode.120** %13, align 4, !dbg !20980
  %14 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !20981
  %15 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !20982
  %16 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %15, i32 0, i32 0, !dbg !20983
  %17 = bitcast %union.anon.0.118* %16 to %struct._dnode.120**, !dbg !20983
  store %struct._dnode.120* %14, %struct._dnode.120** %17, align 4, !dbg !20984
  %18 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !20985
  %19 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !20986
  %20 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %19, i32 0, i32 0, !dbg !20987
  %21 = bitcast %union.anon.0.118* %20 to %struct._dnode.120**, !dbg !20987
  store %struct._dnode.120* %18, %struct._dnode.120** %21, align 4, !dbg !20988
  %22 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !20989
  %23 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !20990
  %24 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %23, i32 0, i32 1, !dbg !20991
  %25 = bitcast %union.anon.0.118* %24 to %struct._dnode.120**, !dbg !20991
  store %struct._dnode.120* %22, %struct._dnode.120** %25, align 4, !dbg !20992
  ret void, !dbg !20993
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !20994 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !20997, metadata !DIExpression()), !dbg !20998
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !20999, metadata !DIExpression()), !dbg !21000
  %5 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21001
  %6 = icmp ne %struct._dnode.120* %5, null, !dbg !21002
  br i1 %6, label %7, label %11, !dbg !21003

7:                                                ; preds = %2
  %8 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21004
  %9 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21005
  %10 = call %struct._dnode.120* @sys_dlist_peek_next_no_check(%struct._dnode.120* noundef %8, %struct._dnode.120* noundef %9) #10, !dbg !21006
  br label %12, !dbg !21003

11:                                               ; preds = %2
  br label %12, !dbg !21003

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.120* [ %10, %7 ], [ null, %11 ], !dbg !21003
  ret %struct._dnode.120* %13, !dbg !21007
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !21008 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  %5 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !21011, metadata !DIExpression()), !dbg !21012
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !21013, metadata !DIExpression()), !dbg !21014
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %5, metadata !21015, metadata !DIExpression()), !dbg !21016
  %6 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21017
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !21018
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !21018
  %9 = load %struct._dnode.120*, %struct._dnode.120** %8, align 4, !dbg !21018
  store %struct._dnode.120* %9, %struct._dnode.120** %5, align 4, !dbg !21016
  %10 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21019
  %11 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21020
  %12 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %11, i32 0, i32 0, !dbg !21021
  %13 = bitcast %union.anon.0.118* %12 to %struct._dnode.120**, !dbg !21021
  store %struct._dnode.120* %10, %struct._dnode.120** %13, align 4, !dbg !21022
  %14 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !21023
  %15 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21024
  %16 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %15, i32 0, i32 1, !dbg !21025
  %17 = bitcast %union.anon.0.118* %16 to %struct._dnode.120**, !dbg !21025
  store %struct._dnode.120* %14, %struct._dnode.120** %17, align 4, !dbg !21026
  %18 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21027
  %19 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !21028
  %20 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %19, i32 0, i32 0, !dbg !21029
  %21 = bitcast %union.anon.0.118* %20 to %struct._dnode.120**, !dbg !21029
  store %struct._dnode.120* %18, %struct._dnode.120** %21, align 4, !dbg !21030
  %22 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21031
  %23 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21032
  %24 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %23, i32 0, i32 1, !dbg !21033
  %25 = bitcast %union.anon.0.118* %24 to %struct._dnode.120**, !dbg !21033
  store %struct._dnode.120* %22, %struct._dnode.120** %25, align 4, !dbg !21034
  ret void, !dbg !21035
}

; Function Attrs: noinline nounwind optnone
define internal void @update_cache(i32 noundef %0) #1 !dbg !21036 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.132*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !21037, metadata !DIExpression()), !dbg !21038
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %7, metadata !21039, metadata !DIExpression()), !dbg !21040
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !21041, metadata !DIExpression()) #9, !dbg !21045
  %8 = bitcast i8* bitcast (%struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1) to i8*) to %struct._dnode.120*, !dbg !21047
  %9 = call %struct.k_thread.132* @z_priq_dumb_best(%struct._dnode.120* noundef %8) #13, !dbg !21050
  store %struct.k_thread.132* %9, %struct.k_thread.132** %5, align 4, !dbg !21045
  %10 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21051
  %11 = icmp ne %struct.k_thread.132* %10, null, !dbg !21052
  br i1 %11, label %12, label %14, !dbg !21053

12:                                               ; preds = %1
  %13 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21054
  br label %16, !dbg !21053

14:                                               ; preds = %1
  %15 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !21055
  br label %16, !dbg !21053

16:                                               ; preds = %12, %14
  %17 = phi %struct.k_thread.132* [ %13, %12 ], [ %15, %14 ], !dbg !21053
  store %struct.k_thread.132* %17, %struct.k_thread.132** %7, align 4, !dbg !21040
  %18 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21056
  %19 = load i32, i32* %6, align 4, !dbg !21058
  store %struct.k_thread.132* %18, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !21059, metadata !DIExpression()) #9, !dbg !21063
  store i32 %19, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21065, metadata !DIExpression()) #9, !dbg !21066
  %20 = load i32, i32* %4, align 4, !dbg !21067
  %21 = icmp ne i32 %20, 0, !dbg !21069
  br i1 %21, label %22, label %23, !dbg !21070

22:                                               ; preds = %16
  store i1 true, i1* %2, align 1, !dbg !21071
  br label %41, !dbg !21071

23:                                               ; preds = %16
  %24 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !21073
  %25 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.132* noundef %24) #13, !dbg !21075
  br i1 %25, label %26, label %27, !dbg !21076

26:                                               ; preds = %23
  store i1 true, i1* %2, align 1, !dbg !21077
  br label %41, !dbg !21077

27:                                               ; preds = %23
  %28 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21079
  %29 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.132* noundef %28) #13, !dbg !21081
  br i1 %29, label %30, label %31, !dbg !21082

30:                                               ; preds = %27
  store i1 true, i1* %2, align 1, !dbg !21083
  br label %41, !dbg !21083

31:                                               ; preds = %27
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !21085
  %33 = call i32 @is_preempt(%struct.k_thread.132* noundef %32) #13, !dbg !21087
  %34 = icmp ne i32 %33, 0, !dbg !21087
  br i1 %34, label %39, label %35, !dbg !21088

35:                                               ; preds = %31
  %36 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21089
  %37 = call i32 @is_metairq(%struct.k_thread.132* noundef %36) #13, !dbg !21090
  %38 = icmp ne i32 %37, 0, !dbg !21090
  br i1 %38, label %39, label %40, !dbg !21091

39:                                               ; preds = %35, %31
  store i1 true, i1* %2, align 1, !dbg !21092
  br label %41, !dbg !21092

40:                                               ; preds = %35
  store i1 false, i1* %2, align 1, !dbg !21094
  br label %41, !dbg !21094

41:                                               ; preds = %22, %26, %30, %39, %40
  %42 = load i1, i1* %2, align 1, !dbg !21095
  br i1 %42, label %43, label %52, !dbg !21096

43:                                               ; preds = %41
  %44 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21097
  %45 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !21100
  %46 = icmp ne %struct.k_thread.132* %44, %45, !dbg !21101
  br i1 %46, label %47, label %49, !dbg !21102

47:                                               ; preds = %43
  %48 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21103
  call void @z_reset_time_slice(%struct.k_thread.132* noundef %48) #10, !dbg !21105
  br label %49, !dbg !21106

49:                                               ; preds = %47, %43
  %50 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21107
  call void @update_metairq_preempt(%struct.k_thread.132* noundef %50) #10, !dbg !21108
  %51 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21109
  store %struct.k_thread.132* %51, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 0), align 4, !dbg !21110
  br label %54, !dbg !21111

52:                                               ; preds = %41
  %53 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !21112
  store %struct.k_thread.132* %53, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 0), align 4, !dbg !21114
  br label %54

54:                                               ; preds = %52, %49
  ret void, !dbg !21115
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_priq_dumb_best(%struct._dnode.120* noundef %0) #1 !dbg !21116 {
  %2 = alloca %struct._dnode.120*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !21119, metadata !DIExpression()), !dbg !21120
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !21121, metadata !DIExpression()), !dbg !21122
  store %struct.k_thread.132* null, %struct.k_thread.132** %3, align 4, !dbg !21122
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !21123, metadata !DIExpression()), !dbg !21124
  %5 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21125
  %6 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %5) #10, !dbg !21126
  store %struct._dnode.120* %6, %struct._dnode.120** %4, align 4, !dbg !21124
  %7 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21127
  %8 = icmp ne %struct._dnode.120* %7, null, !dbg !21129
  br i1 %8, label %9, label %14, !dbg !21130

9:                                                ; preds = %1
  %10 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21131
  %11 = bitcast %struct._dnode.120* %10 to i8*, !dbg !21131
  %12 = getelementptr inbounds i8, i8* %11, i32 0, !dbg !21131
  %13 = bitcast i8* %12 to %struct.k_thread.132*, !dbg !21131
  store %struct.k_thread.132* %13, %struct.k_thread.132** %3, align 4, !dbg !21133
  br label %14, !dbg !21134

14:                                               ; preds = %9, %1
  %15 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21135
  ret %struct.k_thread.132* %15, !dbg !21136
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.132* noundef %0) #1 !dbg !21137 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21138, metadata !DIExpression()), !dbg !21139
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21140
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21141
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 7, !dbg !21142
  %6 = call zeroext i1 @z_is_inactive_timeout(%struct._timeout.124* noundef %5) #10, !dbg !21143
  %7 = xor i1 %6, true, !dbg !21144
  ret i1 %7, !dbg !21145
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_preempt(%struct.k_thread.132* noundef %0) #1 !dbg !21146 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21147, metadata !DIExpression()), !dbg !21148
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21149
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21150
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 4, !dbg !21151
  %6 = bitcast %union.anon.2.7* %5 to i16*, !dbg !21151
  %7 = load i16, i16* %6, align 2, !dbg !21151
  %8 = zext i16 %7 to i32, !dbg !21149
  %9 = icmp ule i32 %8, 127, !dbg !21152
  %10 = zext i1 %9 to i32, !dbg !21152
  ret i32 %10, !dbg !21153
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_metairq(%struct.k_thread.132* noundef %0) #1 !dbg !21154 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21155, metadata !DIExpression()), !dbg !21156
  ret i32 0, !dbg !21157
}

; Function Attrs: noinline nounwind optnone
define internal void @update_metairq_preempt(%struct.k_thread.132* noundef %0) #1 !dbg !21158 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21159, metadata !DIExpression()), !dbg !21160
  ret void, !dbg !21161
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout(%struct._timeout.124* noundef %0) #1 !dbg !21162 {
  %2 = alloca %struct._timeout.124*, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %2, metadata !21167, metadata !DIExpression()), !dbg !21168
  %3 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !21169
  %4 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %3, i32 0, i32 0, !dbg !21170
  %5 = call zeroext i1 @sys_dnode_is_linked(%struct._dnode.120* noundef %4) #10, !dbg !21171
  %6 = xor i1 %5, true, !dbg !21172
  ret i1 %6, !dbg !21173
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked(%struct._dnode.120* noundef %0) #1 !dbg !21174 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !21179, metadata !DIExpression()), !dbg !21180
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21181
  %4 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %3, i32 0, i32 0, !dbg !21182
  %5 = bitcast %union.anon.0.118* %4 to %struct._dnode.120**, !dbg !21182
  %6 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !21182
  %7 = icmp ne %struct._dnode.120* %6, null, !dbg !21183
  ret i1 %7, !dbg !21184
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.120* @sys_dlist_peek_next_no_check(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !21185 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !21186, metadata !DIExpression()), !dbg !21187
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !21188, metadata !DIExpression()), !dbg !21189
  %5 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21190
  %6 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21191
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !21192
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !21192
  %9 = load %struct._dnode.120*, %struct._dnode.120** %8, align 4, !dbg !21192
  %10 = icmp eq %struct._dnode.120* %5, %9, !dbg !21193
  br i1 %10, label %11, label %12, !dbg !21194

11:                                               ; preds = %2
  br label %17, !dbg !21194

12:                                               ; preds = %2
  %13 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21195
  %14 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %13, i32 0, i32 0, !dbg !21196
  %15 = bitcast %union.anon.0.118* %14 to %struct._dnode.120**, !dbg !21196
  %16 = load %struct._dnode.120*, %struct._dnode.120** %15, align 4, !dbg !21196
  br label %17, !dbg !21194

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.120* [ null, %11 ], [ %16, %12 ], !dbg !21194
  ret %struct._dnode.120* %18, !dbg !21197
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty(%struct._dnode.120* noundef %0) #1 !dbg !21198 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !21201, metadata !DIExpression()), !dbg !21202
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21203
  %4 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %3, i32 0, i32 0, !dbg !21204
  %5 = bitcast %union.anon.0.118* %4 to %struct._dnode.120**, !dbg !21204
  %6 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !21204
  %7 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21205
  %8 = icmp eq %struct._dnode.120* %6, %7, !dbg !21206
  ret i1 %8, !dbg !21207
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove(%struct._dnode.120* noundef %0) #1 !dbg !21208 {
  %2 = alloca %struct._dnode.120*, align 4
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !21211, metadata !DIExpression()), !dbg !21212
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !21213, metadata !DIExpression()), !dbg !21214
  %5 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21215
  %6 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %5, i32 0, i32 1, !dbg !21216
  %7 = bitcast %union.anon.0.118* %6 to %struct._dnode.120**, !dbg !21216
  %8 = load %struct._dnode.120*, %struct._dnode.120** %7, align 4, !dbg !21216
  store %struct._dnode.120* %8, %struct._dnode.120** %3, align 4, !dbg !21214
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !21217, metadata !DIExpression()), !dbg !21218
  %9 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21219
  %10 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %9, i32 0, i32 0, !dbg !21220
  %11 = bitcast %union.anon.0.118* %10 to %struct._dnode.120**, !dbg !21220
  %12 = load %struct._dnode.120*, %struct._dnode.120** %11, align 4, !dbg !21220
  store %struct._dnode.120* %12, %struct._dnode.120** %4, align 4, !dbg !21218
  %13 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21221
  %14 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21222
  %15 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %14, i32 0, i32 0, !dbg !21223
  %16 = bitcast %union.anon.0.118* %15 to %struct._dnode.120**, !dbg !21223
  store %struct._dnode.120* %13, %struct._dnode.120** %16, align 4, !dbg !21224
  %17 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21225
  %18 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !21226
  %19 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %18, i32 0, i32 1, !dbg !21227
  %20 = bitcast %union.anon.0.118* %19 to %struct._dnode.120**, !dbg !21227
  store %struct._dnode.120* %17, %struct._dnode.120** %20, align 4, !dbg !21228
  %21 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21229
  call void @sys_dnode_init.208(%struct._dnode.120* noundef %21) #10, !dbg !21230
  ret void, !dbg !21231
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.208(%struct._dnode.120* noundef %0) #1 !dbg !21232 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !21233, metadata !DIExpression()), !dbg !21234
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21235
  %4 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %3, i32 0, i32 0, !dbg !21236
  %5 = bitcast %union.anon.0.118* %4 to %struct._dnode.120**, !dbg !21236
  store %struct._dnode.120* null, %struct._dnode.120** %5, align 4, !dbg !21237
  %6 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21238
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !21239
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !21239
  store %struct._dnode.120* null, %struct._dnode.120** %8, align 4, !dbg !21240
  ret void, !dbg !21241
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_state_set(%struct.k_thread.132* noundef %0, i32 noundef %1) #1 !dbg !21242 {
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !21245, metadata !DIExpression()), !dbg !21246
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21247, metadata !DIExpression()), !dbg !21248
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21249
  %6 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %5, i32 0, i32 0, !dbg !21250
  %7 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %6, i32 0, i32 3, !dbg !21251
  %8 = load i8, i8* %7, align 1, !dbg !21251
  %9 = zext i8 %8 to i32, !dbg !21249
  %10 = load i32, i32* %4, align 4, !dbg !21252
  %11 = and i32 %9, %10, !dbg !21253
  %12 = icmp ne i32 %11, 0, !dbg !21254
  ret i1 %12, !dbg !21255
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #1 !dbg !21256 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21259, metadata !DIExpression()), !dbg !21260
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21261, metadata !DIExpression()), !dbg !21262
  %5 = load i32, i32* %3, align 4, !dbg !21263
  %6 = load i32, i32* %4, align 4, !dbg !21264
  %7 = call zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %5, i32 noundef %6) #10, !dbg !21265
  ret i1 %7, !dbg !21266
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_idle_thread_object(%struct.k_thread.132* noundef %0) #1 !dbg !21267 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21268, metadata !DIExpression()), !dbg !21269
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21270
  %4 = icmp eq %struct.k_thread.132* %3, getelementptr inbounds ([1 x %struct.k_thread.132], [1 x %struct.k_thread.132]* @z_idle_threads, i32 0, i32 0), !dbg !21271
  ret i1 %4, !dbg !21272
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #1 !dbg !21273 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21274, metadata !DIExpression()), !dbg !21275
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21276, metadata !DIExpression()), !dbg !21277
  %5 = load i32, i32* %3, align 4, !dbg !21278
  %6 = load i32, i32* %4, align 4, !dbg !21279
  %7 = icmp slt i32 %5, %6, !dbg !21280
  ret i1 %7, !dbg !21281
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_ready_thread(%struct.k_thread.132* noundef %0) #1 !dbg !21282 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !21283, metadata !DIExpression()), !dbg !21284
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !21285, metadata !DIExpression()), !dbg !21287
  %11 = bitcast %struct.z_spinlock_key* %9 to i8*, !dbg !21287
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !21287
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !21288, metadata !DIExpression()), !dbg !21287
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !21289
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !21291
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !21292
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !21293
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21295, !srcloc !20454
  store i32 %13, i32* %2, align 4, !dbg !21295
  %14 = load i32, i32* %2, align 4, !dbg !21296
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21297
  store i32 %14, i32* %15, align 4, !dbg !21298
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21299
  %17 = load i32, i32* %16, align 4, !dbg !21299
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !21287
  store i32 %17, i32* %18, align 4, !dbg !21287
  br label %19, !dbg !21287

19:                                               ; preds = %43, %1
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21300
  %21 = load i32, i32* %20, align 4, !dbg !21300
  %22 = icmp ne i32 %21, 0, !dbg !21300
  %23 = xor i1 %22, true, !dbg !21300
  br i1 %23, label %24, label %45, !dbg !21287

24:                                               ; preds = %19
  %25 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21302
  %26 = call zeroext i1 @thread_active_elsewhere(%struct.k_thread.132* noundef %25) #10, !dbg !21305
  br i1 %26, label %29, label %27, !dbg !21306

27:                                               ; preds = %24
  %28 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21307
  call void @ready_thread(%struct.k_thread.132* noundef %28) #10, !dbg !21309
  br label %29, !dbg !21310

29:                                               ; preds = %27, %24
  br label %30, !dbg !21311

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !21300
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !21300
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !21300
  %34 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !21312
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !21314
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !21315
  %37 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !21316
  %38 = load i32, i32* %37, align 4, !dbg !21316
  store i32 %38, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !21317
  %39 = load i32, i32* %3, align 4, !dbg !21319
  %40 = icmp ne i32 %39, 0, !dbg !21320
  br i1 %40, label %41, label %42, !dbg !21321

41:                                               ; preds = %30
  br label %43, !dbg !21322

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21323, !srcloc !20500
  br label %43, !dbg !21324

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21300
  store i32 1, i32* %44, align 4, !dbg !21300
  br label %19, !dbg !21300, !llvm.loop !21325

45:                                               ; preds = %19
  ret void, !dbg !21327
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @thread_active_elsewhere(%struct.k_thread.132* noundef %0) #1 !dbg !21328 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21329, metadata !DIExpression()), !dbg !21330
  ret i1 false, !dbg !21331
}

; Function Attrs: noinline nounwind optnone
define internal void @ready_thread(%struct.k_thread.132* noundef %0) #1 !dbg !21332 {
  %2 = alloca %struct._dnode.120*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca %struct.k_thread.132*, align 4
  %7 = alloca %struct.k_thread.132*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !21333, metadata !DIExpression()), !dbg !21334
  %9 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21335
  %10 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.132* noundef %9) #10, !dbg !21337
  br i1 %10, label %93, label %11, !dbg !21338

11:                                               ; preds = %1
  %12 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21339
  %13 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.132* noundef %12) #10, !dbg !21340
  br i1 %13, label %14, label %93, !dbg !21341

14:                                               ; preds = %11
  br label %15, !dbg !21342

15:                                               ; preds = %14
  br label %16, !dbg !21344

16:                                               ; preds = %15
  %17 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21346
  store %struct.k_thread.132* %17, %struct.k_thread.132** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %7, metadata !20868, metadata !DIExpression()) #9, !dbg !21347
  %18 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21349
  %19 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %18, i32 0, i32 0, !dbg !21350
  %20 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %19, i32 0, i32 3, !dbg !21351
  %21 = load i8, i8* %20, align 1, !dbg !21352
  %22 = zext i8 %21 to i32, !dbg !21352
  %23 = or i32 %22, 128, !dbg !21352
  %24 = trunc i32 %23 to i8, !dbg !21352
  store i8 %24, i8* %20, align 1, !dbg !21352
  %25 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21353
  %26 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %25) #13, !dbg !21354
  br i1 %26, label %27, label %92, !dbg !21355

27:                                               ; preds = %16
  %28 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !21356
  store %struct.k_thread.132* %28, %struct.k_thread.132** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %6, metadata !20882, metadata !DIExpression()) #9, !dbg !21357
  %29 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21359
  store %struct.k_thread.132* %29, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !20856, metadata !DIExpression()) #9, !dbg !21360
  %30 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21362
  store %struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1), %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !20890, metadata !DIExpression()) #9, !dbg !21363
  store %struct.k_thread.132* %30, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !20897, metadata !DIExpression()) #9, !dbg !21365
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20899, metadata !DIExpression()) #9, !dbg !21366
  %31 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21367
  %32 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %31) #13, !dbg !21367
  %33 = icmp ne %struct._dnode.120* %32, null, !dbg !21367
  br i1 %33, label %34, label %39, !dbg !21367

34:                                               ; preds = %27
  %35 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21367
  %36 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %35) #13, !dbg !21367
  %37 = bitcast %struct._dnode.120* %36 to i8*, !dbg !21367
  %38 = bitcast i8* %37 to %struct.k_thread.132*, !dbg !21367
  br label %40, !dbg !21367

39:                                               ; preds = %27
  br label %40, !dbg !21367

40:                                               ; preds = %39, %34
  %41 = phi %struct.k_thread.132* [ %38, %34 ], [ null, %39 ], !dbg !21367
  store %struct.k_thread.132* %41, %struct.k_thread.132** %4, align 4, !dbg !21367
  br label %42, !dbg !21367

42:                                               ; preds = %83, %40
  %43 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21368
  %44 = icmp ne %struct.k_thread.132* %43, null, !dbg !21368
  br i1 %44, label %45, label %85, !dbg !21367

45:                                               ; preds = %42
  %46 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21369
  %47 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21370
  %48 = call i32 @z_sched_prio_cmp(%struct.k_thread.132* noundef %46, %struct.k_thread.132* noundef %47) #13, !dbg !21371
  %49 = icmp sgt i32 %48, 0, !dbg !21372
  br i1 %49, label %50, label %59, !dbg !21373

50:                                               ; preds = %45
  %51 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21374
  %52 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %51, i32 0, i32 0, !dbg !21375
  %53 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %52, i32 0, i32 0, !dbg !21376
  %54 = bitcast %union.anon.121* %53 to %struct._dnode.120*, !dbg !21376
  %55 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21377
  %56 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %55, i32 0, i32 0, !dbg !21378
  %57 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %56, i32 0, i32 0, !dbg !21379
  %58 = bitcast %union.anon.121* %57 to %struct._dnode.120*, !dbg !21379
  call void @sys_dlist_insert(%struct._dnode.120* noundef %54, %struct._dnode.120* noundef %58) #13, !dbg !21380
  br label %91, !dbg !21381

59:                                               ; preds = %45
  %60 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21368
  %61 = icmp ne %struct.k_thread.132* %60, null, !dbg !21368
  br i1 %61, label %62, label %82, !dbg !21368

62:                                               ; preds = %59
  %63 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21368
  %64 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21368
  %65 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %64, i32 0, i32 0, !dbg !21368
  %66 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %65, i32 0, i32 0, !dbg !21368
  %67 = bitcast %union.anon.121* %66 to %struct._dnode.120*, !dbg !21368
  %68 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %63, %struct._dnode.120* noundef %67) #13, !dbg !21368
  %69 = icmp ne %struct._dnode.120* %68, null, !dbg !21368
  br i1 %69, label %70, label %79, !dbg !21368

70:                                               ; preds = %62
  %71 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21368
  %72 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21368
  %73 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %72, i32 0, i32 0, !dbg !21368
  %74 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %73, i32 0, i32 0, !dbg !21368
  %75 = bitcast %union.anon.121* %74 to %struct._dnode.120*, !dbg !21368
  %76 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %71, %struct._dnode.120* noundef %75) #13, !dbg !21368
  %77 = bitcast %struct._dnode.120* %76 to i8*, !dbg !21368
  %78 = bitcast i8* %77 to %struct.k_thread.132*, !dbg !21368
  br label %80, !dbg !21368

79:                                               ; preds = %62
  br label %80, !dbg !21368

80:                                               ; preds = %79, %70
  %81 = phi %struct.k_thread.132* [ %78, %70 ], [ null, %79 ], !dbg !21368
  br label %83, !dbg !21368

82:                                               ; preds = %59
  br label %83, !dbg !21368

83:                                               ; preds = %82, %80
  %84 = phi %struct.k_thread.132* [ %81, %80 ], [ null, %82 ], !dbg !21368
  store %struct.k_thread.132* %84, %struct.k_thread.132** %4, align 4, !dbg !21368
  br label %42, !dbg !21368, !llvm.loop !21382

85:                                               ; preds = %42
  %86 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !21384
  %87 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21385
  %88 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %87, i32 0, i32 0, !dbg !21386
  %89 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %88, i32 0, i32 0, !dbg !21387
  %90 = bitcast %union.anon.121* %89 to %struct._dnode.120*, !dbg !21387
  call void @sys_dlist_append(%struct._dnode.120* noundef %86, %struct._dnode.120* noundef %90) #13, !dbg !21388
  br label %91, !dbg !21389

91:                                               ; preds = %50, %85
  br label %92, !dbg !21390

92:                                               ; preds = %16, %91
  call void @update_cache(i32 noundef 0) #10, !dbg !21391
  call void @flag_ipi() #10, !dbg !21392
  br label %93, !dbg !21393

93:                                               ; preds = %92, %11, %1
  ret void, !dbg !21394
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_ready(%struct.k_thread.132* noundef %0) #1 !dbg !21395 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21396, metadata !DIExpression()), !dbg !21397
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21398
  %4 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.132* noundef %3) #10, !dbg !21399
  %5 = zext i1 %4 to i32, !dbg !21400
  %6 = icmp ne i32 %5, 0, !dbg !21401
  br i1 %6, label %10, label %7, !dbg !21402

7:                                                ; preds = %1
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21403
  %9 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.132* noundef %8) #10, !dbg !21404
  br label %10, !dbg !21402

10:                                               ; preds = %7, %1
  %11 = phi i1 [ true, %1 ], [ %9, %7 ]
  %12 = xor i1 %11, true, !dbg !21405
  ret i1 %12, !dbg !21406
}

; Function Attrs: noinline nounwind optnone
define internal void @flag_ipi() #1 !dbg !21407 {
  ret void, !dbg !21408
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread.132* noundef %0) #1 !dbg !21409 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !21410, metadata !DIExpression()), !dbg !21411
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !21412, metadata !DIExpression()), !dbg !21414
  %11 = bitcast %struct.z_spinlock_key* %9 to i8*, !dbg !21414
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !21414
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !21415, metadata !DIExpression()), !dbg !21414
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !21416
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !21418
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !21419
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !21420
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21422, !srcloc !20454
  store i32 %13, i32* %2, align 4, !dbg !21422
  %14 = load i32, i32* %2, align 4, !dbg !21423
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21424
  store i32 %14, i32* %15, align 4, !dbg !21425
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21426
  %17 = load i32, i32* %16, align 4, !dbg !21426
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !21414
  store i32 %17, i32* %18, align 4, !dbg !21414
  br label %19, !dbg !21414

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21427
  %21 = load i32, i32* %20, align 4, !dbg !21427
  %22 = icmp ne i32 %21, 0, !dbg !21427
  %23 = xor i1 %22, true, !dbg !21427
  br i1 %23, label %24, label %41, !dbg !21414

24:                                               ; preds = %19
  %25 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21429
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.132* noundef %25) #10, !dbg !21431
  br label %26, !dbg !21432

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !21427
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !21427
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !21427
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !21433
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !21435
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !21436
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !21437
  %34 = load i32, i32* %33, align 4, !dbg !21437
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !21438
  %35 = load i32, i32* %3, align 4, !dbg !21440
  %36 = icmp ne i32 %35, 0, !dbg !21441
  br i1 %36, label %37, label %38, !dbg !21442

37:                                               ; preds = %26
  br label %39, !dbg !21443

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21444, !srcloc !20500
  br label %39, !dbg !21445

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21427
  store i32 1, i32* %40, align 4, !dbg !21427
  br label %19, !dbg !21427, !llvm.loop !21446

41:                                               ; preds = %19
  ret void, !dbg !21448
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_start(%struct.k_thread.132* noundef %0) #1 !dbg !21449 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !21450, metadata !DIExpression()), !dbg !21451
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !21452, metadata !DIExpression()), !dbg !21453
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !21454
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !21456
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !21457
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !21458
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21460, !srcloc !20454
  store i32 %11, i32* %2, align 4, !dbg !21460
  %12 = load i32, i32* %2, align 4, !dbg !21461
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21462
  store i32 %12, i32* %13, align 4, !dbg !21463
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21464
  %15 = load i32, i32* %14, align 4, !dbg !21464
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21465
  store i32 %15, i32* %16, align 4, !dbg !21465
  %17 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21466
  %18 = call zeroext i1 @z_has_thread_started(%struct.k_thread.132* noundef %17) #10, !dbg !21468
  br i1 %18, label %19, label %33, !dbg !21469

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21470
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !21470
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !21470
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !21472
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !21474
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !21475
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !21476
  %27 = load i32, i32* %26, align 4, !dbg !21476
  store i32 %27, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !21477
  %28 = load i32, i32* %3, align 4, !dbg !21479
  %29 = icmp ne i32 %28, 0, !dbg !21480
  br i1 %29, label %30, label %31, !dbg !21481

30:                                               ; preds = %19
  br label %32, !dbg !21482

31:                                               ; preds = %19
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21483, !srcloc !20500
  br label %32, !dbg !21484

32:                                               ; preds = %30, %31
  br label %39, !dbg !21485

33:                                               ; preds = %1
  %34 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21486
  call void @z_mark_thread_as_started.213(%struct.k_thread.132* noundef %34) #10, !dbg !21487
  %35 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21488
  call void @ready_thread(%struct.k_thread.132* noundef %35) #10, !dbg !21489
  %36 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21490
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !21490
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !21490
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %38) #10, !dbg !21490
  br label %39, !dbg !21491

39:                                               ; preds = %33, %32
  ret void, !dbg !21491
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_has_thread_started(%struct.k_thread.132* noundef %0) #1 !dbg !21492 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21493, metadata !DIExpression()), !dbg !21494
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21495
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21496
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !21497
  %6 = load i8, i8* %5, align 1, !dbg !21497
  %7 = zext i8 %6 to i32, !dbg !21495
  %8 = and i32 %7, 4, !dbg !21498
  %9 = icmp eq i32 %8, 0, !dbg !21499
  ret i1 %9, !dbg !21500
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started.213(%struct.k_thread.132* noundef %0) #1 !dbg !21501 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21502, metadata !DIExpression()), !dbg !21503
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21504
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21505
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !21506
  %6 = load i8, i8* %5, align 1, !dbg !21507
  %7 = zext i8 %6 to i32, !dbg !21507
  %8 = and i32 %7, -5, !dbg !21507
  %9 = trunc i32 %8 to i8, !dbg !21507
  store i8 %9, i8* %5, align 1, !dbg !21507
  ret void, !dbg !21508
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule(%struct.k_spinlock.13* noundef %0, [1 x i32] %1) #1 !dbg !21509 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0
  %12 = bitcast i32* %11 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %12, align 4
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !21510, metadata !DIExpression()), !dbg !21511
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !21512, metadata !DIExpression()), !dbg !21513
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21514
  %14 = load i32, i32* %13, align 4, !dbg !21514
  %15 = call zeroext i1 @resched(i32 noundef %14) #10, !dbg !21516
  br i1 %15, label %16, label %30, !dbg !21517

16:                                               ; preds = %2
  %17 = call zeroext i1 @need_swap() #10, !dbg !21518
  br i1 %17, label %18, label %30, !dbg !21519

18:                                               ; preds = %16
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !21520
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21522
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !21522
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !21522
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* %19, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !21523, metadata !DIExpression()) #9, !dbg !21527
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !21529, metadata !DIExpression()) #9, !dbg !21530
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !21531
  store %struct.k_spinlock.13* %25, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !21532, metadata !DIExpression()) #9, !dbg !21536
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !21538
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !21539
  %28 = load i32, i32* %27, align 4, !dbg !21539
  %29 = call i32 @z_swap_irqlock(i32 noundef %28) #13, !dbg !21540
  br label %45, !dbg !21541

30:                                               ; preds = %16, %2
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !21542
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21544
  %33 = bitcast i32* %32 to [1 x i32]*, !dbg !21544
  %34 = load [1 x i32], [1 x i32]* %33, align 4, !dbg !21544
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0
  %36 = bitcast i32* %35 to [1 x i32]*
  store [1 x i32] %34, [1 x i32]* %36, align 4
  store %struct.k_spinlock.13* %31, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !20479, metadata !DIExpression()) #9, !dbg !21545
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !20485, metadata !DIExpression()) #9, !dbg !21547
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !21548
  %38 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !21549
  %39 = load i32, i32* %38, align 4, !dbg !21549
  store i32 %39, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !21550
  %40 = load i32, i32* %3, align 4, !dbg !21552
  %41 = icmp ne i32 %40, 0, !dbg !21553
  br i1 %41, label %42, label %43, !dbg !21554

42:                                               ; preds = %30
  br label %44, !dbg !21555

43:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21556, !srcloc !20500
  br label %44, !dbg !21557

44:                                               ; preds = %42, %43
  call void @signal_pending_ipi() #10, !dbg !21558
  br label %45

45:                                               ; preds = %44, %18
  ret void, !dbg !21559
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @resched(i32 noundef %0) #1 !dbg !21560 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21561, metadata !DIExpression()), !dbg !21562
  %5 = load i32, i32* %4, align 4, !dbg !21563
  store i32 %5, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21564, metadata !DIExpression()), !dbg !21568
  %6 = load i32, i32* %3, align 4, !dbg !21570
  %7 = icmp eq i32 %6, 0, !dbg !21571
  br i1 %7, label %8, label %15, !dbg !21572

8:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !21573, metadata !DIExpression()) #9, !dbg !21575
  %9 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !21579, !srcloc !21580
  store i32 %9, i32* %2, align 4, !dbg !21579
  %10 = load i32, i32* %2, align 4, !dbg !21581
  %11 = icmp ne i32 %10, 0, !dbg !21582
  %12 = zext i1 %11 to i64, !dbg !21582
  %13 = select i1 %11, i32 1, i32 0, !dbg !21582
  %14 = xor i1 %11, true, !dbg !21583
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i1 [ false, %1 ], [ %14, %8 ], !dbg !21584
  ret i1 %16, !dbg !21585
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @need_swap() #1 !dbg !21586 {
  %1 = alloca %struct.k_thread.132*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %1, metadata !21587, metadata !DIExpression()), !dbg !21588
  %2 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 0), align 4, !dbg !21589
  store %struct.k_thread.132* %2, %struct.k_thread.132** %1, align 4, !dbg !21590
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %1, align 4, !dbg !21591
  %4 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !21592
  %5 = icmp ne %struct.k_thread.132* %3, %4, !dbg !21593
  ret i1 %5, !dbg !21594
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_swap_irqlock(i32 noundef %0) #1 !dbg !21595 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !21596, metadata !DIExpression()), !dbg !21597
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21598, metadata !DIExpression()), !dbg !21599
  %4 = load i32, i32* %2, align 4, !dbg !21600
  %5 = call i32 @arch_swap(i32 noundef %4) #10, !dbg !21601
  store i32 %5, i32* %3, align 4, !dbg !21602
  %6 = load i32, i32* %3, align 4, !dbg !21603
  ret i32 %6, !dbg !21604
}

; Function Attrs: noinline nounwind optnone
define internal void @signal_pending_ipi() #1 !dbg !21605 {
  ret void, !dbg !21606
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread.132* noundef %0) #1 !dbg !21607 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_thread.132*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %struct.k_thread.132*, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %11, metadata !21608, metadata !DIExpression()), !dbg !21609
  br label %14, !dbg !21610

14:                                               ; preds = %1
  br label %15, !dbg !21611

15:                                               ; preds = %14
  %16 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !21613
  %17 = call i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %16) #10, !dbg !21614
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !21615, metadata !DIExpression()), !dbg !21617
  %18 = bitcast %struct.z_spinlock_key* %12 to i8*, !dbg !21617
  call void @llvm.memset.p0i8.i32(i8* align 4 %18, i8 0, i32 4, i1 false), !dbg !21617
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !21618, metadata !DIExpression()), !dbg !21617
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !20439, metadata !DIExpression()) #9, !dbg !21619
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !21621
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !20447, metadata !DIExpression()) #9, !dbg !21622
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20449, metadata !DIExpression()) #9, !dbg !21623
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21625, !srcloc !20454
  store i32 %20, i32* %4, align 4, !dbg !21625
  %21 = load i32, i32* %4, align 4, !dbg !21626
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21627
  store i32 %21, i32* %22, align 4, !dbg !21628
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21629
  %24 = load i32, i32* %23, align 4, !dbg !21629
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !21617
  store i32 %24, i32* %25, align 4, !dbg !21617
  br label %26, !dbg !21617

26:                                               ; preds = %70, %15
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !21630
  %28 = load i32, i32* %27, align 4, !dbg !21630
  %29 = icmp ne i32 %28, 0, !dbg !21630
  %30 = xor i1 %29, true, !dbg !21630
  br i1 %30, label %31, label %72, !dbg !21617

31:                                               ; preds = %26
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !21632
  %33 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.132* noundef %32) #10, !dbg !21635
  br i1 %33, label %34, label %51, !dbg !21636

34:                                               ; preds = %31
  %35 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !21637
  store %struct.k_thread.132* %35, %struct.k_thread.132** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %6, metadata !20837, metadata !DIExpression()) #9, !dbg !21639
  %36 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21641
  %37 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %36, i32 0, i32 0, !dbg !21642
  %38 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %37, i32 0, i32 3, !dbg !21643
  %39 = load i8, i8* %38, align 1, !dbg !21644
  %40 = zext i8 %39 to i32, !dbg !21644
  %41 = and i32 %40, -129, !dbg !21644
  %42 = trunc i32 %41 to i8, !dbg !21644
  store i8 %42, i8* %38, align 1, !dbg !21644
  %43 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21645
  %44 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %43) #13, !dbg !21646
  br i1 %44, label %45, label %50, !dbg !21647

45:                                               ; preds = %34
  %46 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21648
  store %struct.k_thread.132* %46, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !20851, metadata !DIExpression()) #9, !dbg !21649
  %47 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21651
  store %struct.k_thread.132* %47, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20856, metadata !DIExpression()), !dbg !21652
  %48 = bitcast i8* bitcast (%struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1) to i8*) to %struct._dnode.120*, !dbg !21654
  %49 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !21655
  call void @z_priq_dumb_remove(%struct._dnode.120* noundef %48, %struct.k_thread.132* noundef %49) #13, !dbg !21656
  br label %50, !dbg !21657

50:                                               ; preds = %34, %45
  br label %51, !dbg !21658

51:                                               ; preds = %50, %31
  %52 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !21659
  call void @z_mark_thread_as_suspended(%struct.k_thread.132* noundef %52) #10, !dbg !21660
  %53 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !21661
  %54 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !21662
  %55 = icmp eq %struct.k_thread.132* %53, %54, !dbg !21663
  %56 = zext i1 %55 to i32, !dbg !21663
  call void @update_cache(i32 noundef %56) #10, !dbg !21664
  br label %57, !dbg !21665

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !21630
  %59 = bitcast i32* %58 to [1 x i32]*, !dbg !21630
  %60 = load [1 x i32], [1 x i32]* %59, align 4, !dbg !21630
  %61 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0
  %62 = bitcast i32* %61 to [1 x i32]*
  store [1 x i32] %60, [1 x i32]* %62, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !20479, metadata !DIExpression()) #9, !dbg !21666
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !20485, metadata !DIExpression()) #9, !dbg !21668
  %63 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !21669
  %64 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !21670
  %65 = load i32, i32* %64, align 4, !dbg !21670
  store i32 %65, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20489, metadata !DIExpression()) #9, !dbg !21671
  %66 = load i32, i32* %5, align 4, !dbg !21673
  %67 = icmp ne i32 %66, 0, !dbg !21674
  br i1 %67, label %68, label %69, !dbg !21675

68:                                               ; preds = %57
  br label %70, !dbg !21676

69:                                               ; preds = %57
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21677, !srcloc !20500
  br label %70, !dbg !21678

70:                                               ; preds = %68, %69
  %71 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !21630
  store i32 1, i32* %71, align 4, !dbg !21630
  br label %26, !dbg !21630, !llvm.loop !21679

72:                                               ; preds = %26
  %73 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !21681
  %74 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !21683
  %75 = icmp eq %struct.k_thread.132* %73, %74, !dbg !21684
  br i1 %75, label %76, label %77, !dbg !21685

76:                                               ; preds = %72
  call void @z_reschedule_unlocked() #10, !dbg !21686
  br label %77, !dbg !21688

77:                                               ; preds = %76, %72
  br label %78, !dbg !21689

78:                                               ; preds = %77
  br label %79, !dbg !21690

79:                                               ; preds = %78
  ret void, !dbg !21692
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %0) #1 !dbg !21693 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21694, metadata !DIExpression()), !dbg !21695
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21696
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21697
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 7, !dbg !21698
  %6 = call i32 @z_abort_timeout(%struct._timeout.124* noundef %5) #10, !dbg !21699
  ret i32 %6, !dbg !21700
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_suspended(%struct.k_thread.132* noundef %0) #1 !dbg !21701 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21702, metadata !DIExpression()), !dbg !21703
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21704
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21705
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !21706
  %6 = load i8, i8* %5, align 1, !dbg !21707
  %7 = zext i8 %6 to i32, !dbg !21707
  %8 = or i32 %7, 16, !dbg !21707
  %9 = trunc i32 %8 to i8, !dbg !21707
  store i8 %9, i8* %5, align 1, !dbg !21707
  br label %10, !dbg !21708

10:                                               ; preds = %1
  br label %11, !dbg !21709

11:                                               ; preds = %10
  ret void, !dbg !21711
}

; Function Attrs: noinline nounwind optnone
define internal void @z_reschedule_unlocked() #1 !dbg !21712 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !20449, metadata !DIExpression()) #9, !dbg !21713
  %2 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21715, !srcloc !20454
  store i32 %2, i32* %1, align 4, !dbg !21715
  %3 = load i32, i32* %1, align 4, !dbg !21716
  call void @z_reschedule_irqlock(i32 noundef %3) #10, !dbg !21717
  ret void, !dbg !21718
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule_irqlock(i32 noundef %0) #1 !dbg !21719 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21720, metadata !DIExpression()), !dbg !21721
  %4 = load i32, i32* %3, align 4, !dbg !21722
  %5 = call zeroext i1 @resched(i32 noundef %4) #10, !dbg !21724
  br i1 %5, label %6, label %9, !dbg !21725

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !21726
  %8 = call i32 @z_swap_irqlock(i32 noundef %7) #10, !dbg !21728
  br label %16, !dbg !21729

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !21730
  store i32 %10, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20489, metadata !DIExpression()) #9, !dbg !21732
  %11 = load i32, i32* %2, align 4, !dbg !21734
  %12 = icmp ne i32 %11, 0, !dbg !21735
  br i1 %12, label %13, label %14, !dbg !21736

13:                                               ; preds = %9
  br label %15, !dbg !21737

14:                                               ; preds = %9
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21738, !srcloc !20500
  br label %15, !dbg !21739

15:                                               ; preds = %13, %14
  call void @signal_pending_ipi() #10, !dbg !21740
  br label %16

16:                                               ; preds = %15, %6
  ret void, !dbg !21741
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_resume(%struct.k_thread.132* noundef %0) #1 !dbg !21742 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !21743, metadata !DIExpression()), !dbg !21744
  br label %10, !dbg !21745

10:                                               ; preds = %1
  br label %11, !dbg !21746

11:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !21748, metadata !DIExpression()), !dbg !21749
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !21750
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !21752
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !21753
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !21754
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21756, !srcloc !20454
  store i32 %13, i32* %2, align 4, !dbg !21756
  %14 = load i32, i32* %2, align 4, !dbg !21757
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21758
  store i32 %14, i32* %15, align 4, !dbg !21759
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21760
  %17 = load i32, i32* %16, align 4, !dbg !21760
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21761
  store i32 %17, i32* %18, align 4, !dbg !21761
  %19 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21762
  %20 = call zeroext i1 @z_is_thread_suspended(%struct.k_thread.132* noundef %19) #10, !dbg !21764
  br i1 %20, label %35, label %21, !dbg !21765

21:                                               ; preds = %11
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21766
  %23 = bitcast i32* %22 to [1 x i32]*, !dbg !21766
  %24 = load [1 x i32], [1 x i32]* %23, align 4, !dbg !21766
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %26 = bitcast i32* %25 to [1 x i32]*
  store [1 x i32] %24, [1 x i32]* %26, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !21768
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !21770
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !21771
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !21772
  %29 = load i32, i32* %28, align 4, !dbg !21772
  store i32 %29, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !21773
  %30 = load i32, i32* %3, align 4, !dbg !21775
  %31 = icmp ne i32 %30, 0, !dbg !21776
  br i1 %31, label %32, label %33, !dbg !21777

32:                                               ; preds = %21
  br label %34, !dbg !21778

33:                                               ; preds = %21
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21779, !srcloc !20500
  br label %34, !dbg !21780

34:                                               ; preds = %32, %33
  br label %42, !dbg !21781

35:                                               ; preds = %11
  %36 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21782
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.132* noundef %36) #10, !dbg !21783
  %37 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !21784
  call void @ready_thread(%struct.k_thread.132* noundef %37) #10, !dbg !21785
  %38 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !21786
  %39 = bitcast i32* %38 to [1 x i32]*, !dbg !21786
  %40 = load [1 x i32], [1 x i32]* %39, align 4, !dbg !21786
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %40) #10, !dbg !21786
  br label %41, !dbg !21787

41:                                               ; preds = %35
  br label %42, !dbg !21788

42:                                               ; preds = %34, %41
  ret void, !dbg !21790
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_suspended(%struct.k_thread.132* noundef %0) #1 !dbg !21791 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21792, metadata !DIExpression()), !dbg !21793
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21794
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21795
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !21796
  %6 = load i8, i8* %5, align 1, !dbg !21796
  %7 = zext i8 %6 to i32, !dbg !21794
  %8 = and i32 %7, 16, !dbg !21797
  %9 = icmp ne i32 %8, 0, !dbg !21798
  ret i1 %9, !dbg !21799
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_suspended(%struct.k_thread.132* noundef %0) #1 !dbg !21800 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !21801, metadata !DIExpression()), !dbg !21802
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !21803
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !21804
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !21805
  %6 = load i8, i8* %5, align 1, !dbg !21806
  %7 = zext i8 %6 to i32, !dbg !21806
  %8 = and i32 %7, -17, !dbg !21806
  %9 = trunc i32 %8 to i8, !dbg !21806
  store i8 %9, i8* %5, align 1, !dbg !21806
  br label %10, !dbg !21807

10:                                               ; preds = %1
  br label %11, !dbg !21808

11:                                               ; preds = %10
  ret void, !dbg !21810
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pend_thread(%struct.k_thread.132* noundef %0, %union.anon.121* noundef %1, [1 x i64] %2) #1 !dbg !21811 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct.k_thread.132*, align 4
  %12 = alloca %union.anon.121*, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  %14 = alloca %struct.z_spinlock_key, align 4
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %16 = bitcast i64* %15 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %16, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %11, metadata !21818, metadata !DIExpression()), !dbg !21819
  store %union.anon.121* %1, %union.anon.121** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %12, metadata !21820, metadata !DIExpression()), !dbg !21821
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !21822, metadata !DIExpression()), !dbg !21823
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !21824, metadata !DIExpression()), !dbg !21826
  %17 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !21826
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !21826
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %14, metadata !21827, metadata !DIExpression()), !dbg !21826
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !20439, metadata !DIExpression()) #9, !dbg !21828
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !21830
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !20447, metadata !DIExpression()) #9, !dbg !21831
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20449, metadata !DIExpression()) #9, !dbg !21832
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21834, !srcloc !20454
  store i32 %19, i32* %4, align 4, !dbg !21834
  %20 = load i32, i32* %4, align 4, !dbg !21835
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !21836
  store i32 %20, i32* %21, align 4, !dbg !21837
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !21838
  %23 = load i32, i32* %22, align 4, !dbg !21838
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !21826
  store i32 %23, i32* %24, align 4, !dbg !21826
  br label %25, !dbg !21826

25:                                               ; preds = %49, %3
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !21839
  %27 = load i32, i32* %26, align 4, !dbg !21839
  %28 = icmp ne i32 %27, 0, !dbg !21839
  %29 = xor i1 %28, true, !dbg !21839
  br i1 %29, label %30, label %51, !dbg !21826

30:                                               ; preds = %25
  %31 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !21841
  %32 = load %union.anon.121*, %union.anon.121** %12, align 4, !dbg !21843
  %33 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !21844
  %34 = bitcast i64* %33 to [1 x i64]*, !dbg !21844
  %35 = load [1 x i64], [1 x i64]* %34, align 8, !dbg !21844
  call void @pend_locked(%struct.k_thread.132* noundef %31, %union.anon.121* noundef %32, [1 x i64] %35) #10, !dbg !21844
  br label %36, !dbg !21845

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !21839
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !21839
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !21839
  %40 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20479, metadata !DIExpression()) #9, !dbg !21846
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20485, metadata !DIExpression()) #9, !dbg !21848
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !21849
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21850
  %44 = load i32, i32* %43, align 4, !dbg !21850
  store i32 %44, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20489, metadata !DIExpression()) #9, !dbg !21851
  %45 = load i32, i32* %5, align 4, !dbg !21853
  %46 = icmp ne i32 %45, 0, !dbg !21854
  br i1 %46, label %47, label %48, !dbg !21855

47:                                               ; preds = %36
  br label %49, !dbg !21856

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !21857, !srcloc !20500
  br label %49, !dbg !21858

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !21839
  store i32 1, i32* %50, align 4, !dbg !21839
  br label %25, !dbg !21839, !llvm.loop !21859

51:                                               ; preds = %25
  ret void, !dbg !21861
}

; Function Attrs: noinline nounwind optnone
define internal void @pend_locked(%struct.k_thread.132* noundef %0, %union.anon.121* noundef %1, [1 x i64] %2) #1 !dbg !21862 {
  %4 = alloca %union.argument_value, align 8
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca %union.anon.121*, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !21863, metadata !DIExpression()), !dbg !21864
  store %union.anon.121* %1, %union.anon.121** %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %6, metadata !21865, metadata !DIExpression()), !dbg !21866
  call void @llvm.dbg.declare(metadata %union.argument_value* %4, metadata !21867, metadata !DIExpression()), !dbg !21868
  %9 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21869
  %10 = load %union.anon.121*, %union.anon.121** %6, align 4, !dbg !21870
  call void @add_to_waitq_locked(%struct.k_thread.132* noundef %9, %union.anon.121* noundef %10) #10, !dbg !21871
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21872
  %12 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0, !dbg !21873
  %13 = bitcast i64* %12 to [1 x i64]*, !dbg !21873
  %14 = load [1 x i64], [1 x i64]* %13, align 8, !dbg !21873
  call void @add_thread_timeout(%struct.k_thread.132* noundef %11, [1 x i64] %14) #10, !dbg !21873
  ret void, !dbg !21874
}

; Function Attrs: noinline nounwind optnone
define internal void @add_to_waitq_locked(%struct.k_thread.132* noundef %0, %union.anon.121* noundef %1) #1 !dbg !21875 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca %struct.k_thread.132*, align 4
  %7 = alloca %union.anon.121*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %6, metadata !21878, metadata !DIExpression()), !dbg !21879
  store %union.anon.121* %1, %union.anon.121** %7, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %7, metadata !21880, metadata !DIExpression()), !dbg !21881
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21882
  call void @unready_thread(%struct.k_thread.132* noundef %8) #10, !dbg !21883
  %9 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21884
  call void @z_mark_thread_as_pending(%struct.k_thread.132* noundef %9) #10, !dbg !21885
  br label %10, !dbg !21886

10:                                               ; preds = %2
  br label %11, !dbg !21887

11:                                               ; preds = %10
  %12 = load %union.anon.121*, %union.anon.121** %7, align 4, !dbg !21889
  %13 = icmp ne %union.anon.121* %12, null, !dbg !21891
  br i1 %13, label %14, label %83, !dbg !21892

14:                                               ; preds = %11
  %15 = load %union.anon.121*, %union.anon.121** %7, align 4, !dbg !21893
  %16 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21895
  %17 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %16, i32 0, i32 0, !dbg !21896
  %18 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %17, i32 0, i32 1, !dbg !21897
  store %union.anon.121* %15, %union.anon.121** %18, align 8, !dbg !21898
  %19 = load %union.anon.121*, %union.anon.121** %7, align 4, !dbg !21899
  %20 = getelementptr inbounds %union.anon.121, %union.anon.121* %19, i32 0, i32 0, !dbg !21900
  %21 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !21901
  store %struct._dnode.120* %20, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !20890, metadata !DIExpression()) #9, !dbg !21902
  store %struct.k_thread.132* %21, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20897, metadata !DIExpression()) #9, !dbg !21904
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !20899, metadata !DIExpression()) #9, !dbg !21905
  %22 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21906
  %23 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %22) #13, !dbg !21906
  %24 = icmp ne %struct._dnode.120* %23, null, !dbg !21906
  br i1 %24, label %25, label %30, !dbg !21906

25:                                               ; preds = %14
  %26 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21906
  %27 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %26) #13, !dbg !21906
  %28 = bitcast %struct._dnode.120* %27 to i8*, !dbg !21906
  %29 = bitcast i8* %28 to %struct.k_thread.132*, !dbg !21906
  br label %31, !dbg !21906

30:                                               ; preds = %14
  br label %31, !dbg !21906

31:                                               ; preds = %30, %25
  %32 = phi %struct.k_thread.132* [ %29, %25 ], [ null, %30 ], !dbg !21906
  store %struct.k_thread.132* %32, %struct.k_thread.132** %5, align 4, !dbg !21906
  br label %33, !dbg !21906

33:                                               ; preds = %74, %31
  %34 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21907
  %35 = icmp ne %struct.k_thread.132* %34, null, !dbg !21907
  br i1 %35, label %36, label %76, !dbg !21906

36:                                               ; preds = %33
  %37 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21908
  %38 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21909
  %39 = call i32 @z_sched_prio_cmp(%struct.k_thread.132* noundef %37, %struct.k_thread.132* noundef %38) #13, !dbg !21910
  %40 = icmp sgt i32 %39, 0, !dbg !21911
  br i1 %40, label %41, label %50, !dbg !21912

41:                                               ; preds = %36
  %42 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21913
  %43 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %42, i32 0, i32 0, !dbg !21914
  %44 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %43, i32 0, i32 0, !dbg !21915
  %45 = bitcast %union.anon.121* %44 to %struct._dnode.120*, !dbg !21915
  %46 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21916
  %47 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %46, i32 0, i32 0, !dbg !21917
  %48 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %47, i32 0, i32 0, !dbg !21918
  %49 = bitcast %union.anon.121* %48 to %struct._dnode.120*, !dbg !21918
  call void @sys_dlist_insert(%struct._dnode.120* noundef %45, %struct._dnode.120* noundef %49) #13, !dbg !21919
  br label %82, !dbg !21920

50:                                               ; preds = %36
  %51 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21907
  %52 = icmp ne %struct.k_thread.132* %51, null, !dbg !21907
  br i1 %52, label %53, label %73, !dbg !21907

53:                                               ; preds = %50
  %54 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21907
  %55 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21907
  %56 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %55, i32 0, i32 0, !dbg !21907
  %57 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %56, i32 0, i32 0, !dbg !21907
  %58 = bitcast %union.anon.121* %57 to %struct._dnode.120*, !dbg !21907
  %59 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %54, %struct._dnode.120* noundef %58) #13, !dbg !21907
  %60 = icmp ne %struct._dnode.120* %59, null, !dbg !21907
  br i1 %60, label %61, label %70, !dbg !21907

61:                                               ; preds = %53
  %62 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21907
  %63 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !21907
  %64 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %63, i32 0, i32 0, !dbg !21907
  %65 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %64, i32 0, i32 0, !dbg !21907
  %66 = bitcast %union.anon.121* %65 to %struct._dnode.120*, !dbg !21907
  %67 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %62, %struct._dnode.120* noundef %66) #13, !dbg !21907
  %68 = bitcast %struct._dnode.120* %67 to i8*, !dbg !21907
  %69 = bitcast i8* %68 to %struct.k_thread.132*, !dbg !21907
  br label %71, !dbg !21907

70:                                               ; preds = %53
  br label %71, !dbg !21907

71:                                               ; preds = %70, %61
  %72 = phi %struct.k_thread.132* [ %69, %61 ], [ null, %70 ], !dbg !21907
  br label %74, !dbg !21907

73:                                               ; preds = %50
  br label %74, !dbg !21907

74:                                               ; preds = %73, %71
  %75 = phi %struct.k_thread.132* [ %72, %71 ], [ null, %73 ], !dbg !21907
  store %struct.k_thread.132* %75, %struct.k_thread.132** %5, align 4, !dbg !21907
  br label %33, !dbg !21907, !llvm.loop !21921

76:                                               ; preds = %33
  %77 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !21923
  %78 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21924
  %79 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %78, i32 0, i32 0, !dbg !21925
  %80 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %79, i32 0, i32 0, !dbg !21926
  %81 = bitcast %union.anon.121* %80 to %struct._dnode.120*, !dbg !21926
  call void @sys_dlist_append(%struct._dnode.120* noundef %77, %struct._dnode.120* noundef %81) #13, !dbg !21927
  br label %82, !dbg !21928

82:                                               ; preds = %41, %76
  br label %83, !dbg !21929

83:                                               ; preds = %82, %11
  ret void, !dbg !21930
}

; Function Attrs: noinline nounwind optnone
define internal void @add_thread_timeout(%struct.k_thread.132* noundef %0, [1 x i64] %1) #1 !dbg !21931 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !21934, metadata !DIExpression()), !dbg !21935
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !21936, metadata !DIExpression()), !dbg !21937
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !21938
  %9 = load i64, i64* %8, align 8, !dbg !21938
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !21938
  store i64 -1, i64* %10, align 8, !dbg !21938
  %11 = icmp eq i64 %9, -1, !dbg !21938
  br i1 %11, label %17, label %12, !dbg !21940

12:                                               ; preds = %2
  %13 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21941
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !21943
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !21943
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !21943
  call void @z_add_thread_timeout.216(%struct.k_thread.132* noundef %13, [1 x i64] %16) #10, !dbg !21943
  br label %17, !dbg !21944

17:                                               ; preds = %12, %2
  ret void, !dbg !21945
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout.216(%struct.k_thread.132* noundef %0, [1 x i64] %1) #1 !dbg !21946 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !21947, metadata !DIExpression()), !dbg !21948
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !21949, metadata !DIExpression()), !dbg !21950
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !21951
  %8 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %7, i32 0, i32 0, !dbg !21952
  %9 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %8, i32 0, i32 7, !dbg !21953
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !21954
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !21954
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !21954
  call void @z_add_timeout(%struct._timeout.124* noundef %9, void (%struct._timeout.124*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !21954
  ret void, !dbg !21955
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_timeout(%struct._timeout.124* noundef %0) #1 !dbg !21956 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.124*, align 4
  %9 = alloca %struct.k_thread.132*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i8, align 1
  store %struct._timeout.124* %0, %struct._timeout.124** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %8, metadata !21957, metadata !DIExpression()), !dbg !21958
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %9, metadata !21959, metadata !DIExpression()), !dbg !21960
  %13 = load %struct._timeout.124*, %struct._timeout.124** %8, align 4, !dbg !21961
  %14 = bitcast %struct._timeout.124* %13 to i8*, !dbg !21961
  %15 = getelementptr inbounds i8, i8* %14, i32 -24, !dbg !21961
  %16 = bitcast i8* %15 to %struct.k_thread.132*, !dbg !21961
  store %struct.k_thread.132* %16, %struct.k_thread.132** %9, align 4, !dbg !21960
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !21962, metadata !DIExpression()), !dbg !21964
  %17 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !21964
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !21964
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !21965, metadata !DIExpression()), !dbg !21964
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !21966
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !21968
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !21969
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !21970
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !21972, !srcloc !20454
  store i32 %19, i32* %2, align 4, !dbg !21972
  %20 = load i32, i32* %2, align 4, !dbg !21973
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21974
  store i32 %20, i32* %21, align 4, !dbg !21975
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !21976
  %23 = load i32, i32* %22, align 4, !dbg !21976
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !21964
  store i32 %23, i32* %24, align 4, !dbg !21964
  br label %25, !dbg !21964

25:                                               ; preds = %77, %1
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !21977
  %27 = load i32, i32* %26, align 4, !dbg !21977
  %28 = icmp ne i32 %27, 0, !dbg !21977
  %29 = xor i1 %28, true, !dbg !21977
  br i1 %29, label %30, label %79, !dbg !21964

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i8* %12, metadata !21979, metadata !DIExpression()), !dbg !21981
  %31 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !21982
  %32 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %31, i32 0, i32 0, !dbg !21983
  %33 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %32, i32 0, i32 3, !dbg !21984
  %34 = load i8, i8* %33, align 1, !dbg !21984
  %35 = zext i8 %34 to i32, !dbg !21982
  %36 = and i32 %35, 8, !dbg !21985
  %37 = icmp ne i32 %36, 0, !dbg !21985
  br i1 %37, label %46, label %38, !dbg !21986

38:                                               ; preds = %30
  %39 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !21987
  %40 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %39, i32 0, i32 0, !dbg !21988
  %41 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %40, i32 0, i32 3, !dbg !21989
  %42 = load i8, i8* %41, align 1, !dbg !21989
  %43 = zext i8 %42 to i32, !dbg !21987
  %44 = and i32 %43, 32, !dbg !21990
  %45 = icmp ne i32 %44, 0, !dbg !21986
  br label %46, !dbg !21986

46:                                               ; preds = %38, %30
  %47 = phi i1 [ true, %30 ], [ %45, %38 ]
  %48 = zext i1 %47 to i8, !dbg !21981
  store i8 %48, i8* %12, align 1, !dbg !21981
  %49 = load i8, i8* %12, align 1, !dbg !21991
  %50 = trunc i8 %49 to i1, !dbg !21991
  br i1 %50, label %63, label %51, !dbg !21993

51:                                               ; preds = %46
  %52 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !21994
  %53 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %52, i32 0, i32 0, !dbg !21997
  %54 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %53, i32 0, i32 1, !dbg !21998
  %55 = load %union.anon.121*, %union.anon.121** %54, align 8, !dbg !21998
  %56 = icmp ne %union.anon.121* %55, null, !dbg !21999
  br i1 %56, label %57, label %59, !dbg !22000

57:                                               ; preds = %51
  %58 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22001
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %58) #10, !dbg !22003
  br label %59, !dbg !22004

59:                                               ; preds = %57, %51
  %60 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22005
  call void @z_mark_thread_as_started.213(%struct.k_thread.132* noundef %60) #10, !dbg !22006
  %61 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22007
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.132* noundef %61) #10, !dbg !22008
  %62 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22009
  call void @ready_thread(%struct.k_thread.132* noundef %62) #10, !dbg !22010
  br label %63, !dbg !22011

63:                                               ; preds = %59, %46
  br label %64, !dbg !22012

64:                                               ; preds = %63
  %65 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !21977
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !21977
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !21977
  %68 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !22013
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !22015
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !22016
  %71 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !22017
  %72 = load i32, i32* %71, align 4, !dbg !22017
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !22018
  %73 = load i32, i32* %3, align 4, !dbg !22020
  %74 = icmp ne i32 %73, 0, !dbg !22021
  br i1 %74, label %75, label %76, !dbg !22022

75:                                               ; preds = %64
  br label %77, !dbg !22023

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22024, !srcloc !20500
  br label %77, !dbg !22025

77:                                               ; preds = %75, %76
  %78 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !21977
  store i32 1, i32* %78, align 4, !dbg !21977
  br label %25, !dbg !21977, !llvm.loop !22026

79:                                               ; preds = %25
  ret void, !dbg !22028
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %0) #1 !dbg !22029 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !22030, metadata !DIExpression()), !dbg !22031
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22032
  %4 = call %union.anon.121* @pended_on_thread(%struct.k_thread.132* noundef %3) #10, !dbg !22033
  %5 = getelementptr inbounds %union.anon.121, %union.anon.121* %4, i32 0, i32 0, !dbg !22034
  %6 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22035
  call void @z_priq_dumb_remove(%struct._dnode.120* noundef %5, %struct.k_thread.132* noundef %6) #10, !dbg !22036
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22037
  call void @z_mark_thread_as_not_pending(%struct.k_thread.132* noundef %7) #10, !dbg !22038
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22039
  %9 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %8, i32 0, i32 0, !dbg !22040
  %10 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %9, i32 0, i32 1, !dbg !22041
  store %union.anon.121* null, %union.anon.121** %10, align 8, !dbg !22042
  ret void, !dbg !22043
}

; Function Attrs: noinline nounwind optnone
define internal %union.anon.121* @pended_on_thread(%struct.k_thread.132* noundef %0) #1 !dbg !22044 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !22047, metadata !DIExpression()), !dbg !22048
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22049
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !22050
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 1, !dbg !22051
  %6 = load %union.anon.121*, %union.anon.121** %5, align 8, !dbg !22051
  ret %union.anon.121* %6, !dbg !22052
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_pending(%struct.k_thread.132* noundef %0) #1 !dbg !22053 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !22054, metadata !DIExpression()), !dbg !22055
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22056
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !22057
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !22058
  %6 = load i8, i8* %5, align 1, !dbg !22059
  %7 = zext i8 %6 to i32, !dbg !22059
  %8 = and i32 %7, -3, !dbg !22059
  %9 = trunc i32 %8 to i8, !dbg !22059
  store i8 %9, i8* %5, align 1, !dbg !22059
  ret void, !dbg !22060
}

; Function Attrs: noinline nounwind optnone
define internal void @unready_thread(%struct.k_thread.132* noundef %0) #1 !dbg !22061 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !22062, metadata !DIExpression()), !dbg !22063
  %6 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22064
  %7 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.132* noundef %6) #10, !dbg !22066
  br i1 %7, label %8, label %25, !dbg !22067

8:                                                ; preds = %1
  %9 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22068
  store %struct.k_thread.132* %9, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20837, metadata !DIExpression()) #9, !dbg !22070
  %10 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22072
  %11 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %10, i32 0, i32 0, !dbg !22073
  %12 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %11, i32 0, i32 3, !dbg !22074
  %13 = load i8, i8* %12, align 1, !dbg !22075
  %14 = zext i8 %13 to i32, !dbg !22075
  %15 = and i32 %14, -129, !dbg !22075
  %16 = trunc i32 %15 to i8, !dbg !22075
  store i8 %16, i8* %12, align 1, !dbg !22075
  %17 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22076
  %18 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %17) #13, !dbg !22077
  br i1 %18, label %19, label %24, !dbg !22078

19:                                               ; preds = %8
  %20 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22079
  store %struct.k_thread.132* %20, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !20851, metadata !DIExpression()) #9, !dbg !22080
  %21 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !22082
  store %struct.k_thread.132* %21, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20856, metadata !DIExpression()), !dbg !22083
  %22 = bitcast i8* bitcast (%struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1) to i8*) to %struct._dnode.120*, !dbg !22085
  %23 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !22086
  call void @z_priq_dumb_remove(%struct._dnode.120* noundef %22, %struct.k_thread.132* noundef %23) #13, !dbg !22087
  br label %24, !dbg !22088

24:                                               ; preds = %8, %19
  br label %25, !dbg !22089

25:                                               ; preds = %24, %1
  %26 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22090
  %27 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22091
  %28 = icmp eq %struct.k_thread.132* %26, %27, !dbg !22092
  %29 = zext i1 %28 to i32, !dbg !22092
  call void @update_cache(i32 noundef %29) #10, !dbg !22093
  ret void, !dbg !22094
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_pending(%struct.k_thread.132* noundef %0) #1 !dbg !22095 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !22096, metadata !DIExpression()), !dbg !22097
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22098
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !22099
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !22100
  %6 = load i8, i8* %5, align 1, !dbg !22101
  %7 = zext i8 %6 to i32, !dbg !22101
  %8 = or i32 %7, 2, !dbg !22101
  %9 = trunc i32 %8 to i8, !dbg !22101
  store i8 %9, i8* %5, align 1, !dbg !22101
  ret void, !dbg !22102
}

; Function Attrs: alwaysinline nounwind
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread.132* noundef %0) #8 !dbg !22103 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !22104, metadata !DIExpression()), !dbg !22105
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !22106, metadata !DIExpression()), !dbg !22108
  %11 = bitcast %struct.z_spinlock_key* %9 to i8*, !dbg !22108
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !22108
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !22109, metadata !DIExpression()), !dbg !22108
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !22110
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !22112
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !22113
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !22114
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22116, !srcloc !20454
  store i32 %13, i32* %2, align 4, !dbg !22116
  %14 = load i32, i32* %2, align 4, !dbg !22117
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22118
  store i32 %14, i32* %15, align 4, !dbg !22119
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22120
  %17 = load i32, i32* %16, align 4, !dbg !22120
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22108
  store i32 %17, i32* %18, align 4, !dbg !22108
  br label %19, !dbg !22108

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !22121
  %21 = load i32, i32* %20, align 4, !dbg !22121
  %22 = icmp ne i32 %21, 0, !dbg !22121
  %23 = xor i1 %22, true, !dbg !22121
  br i1 %23, label %24, label %41, !dbg !22108

24:                                               ; preds = %19
  %25 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !22123
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %25) #10, !dbg !22125
  br label %26, !dbg !22126

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22121
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !22121
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !22121
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !22127
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !22129
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !22130
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !22131
  %34 = load i32, i32* %33, align 4, !dbg !22131
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !22132
  %35 = load i32, i32* %3, align 4, !dbg !22134
  %36 = icmp ne i32 %35, 0, !dbg !22135
  br i1 %36, label %37, label %38, !dbg !22136

37:                                               ; preds = %26
  br label %39, !dbg !22137

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22138, !srcloc !20500
  br label %39, !dbg !22139

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !22121
  store i32 1, i32* %40, align 4, !dbg !22121
  br label %19, !dbg !22121, !llvm.loop !22140

41:                                               ; preds = %19
  ret void, !dbg !22142
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon.121* noundef %1, [1 x i64] %2) #1 !dbg !22143 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.121*, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.z_spinlock_key, align 4
  %15 = alloca %struct.z_spinlock_key, align 4
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %17 = bitcast i64* %16 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %17, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !22146, metadata !DIExpression()), !dbg !22147
  store %union.anon.121* %1, %union.anon.121** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %12, metadata !22148, metadata !DIExpression()), !dbg !22149
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !22150, metadata !DIExpression()), !dbg !22151
  %18 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22152
  %19 = load %union.anon.121*, %union.anon.121** %12, align 4, !dbg !22153
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !22154
  %21 = bitcast i64* %20 to [1 x i64]*, !dbg !22154
  %22 = load [1 x i64], [1 x i64]* %21, align 8, !dbg !22154
  call void @pend_locked(%struct.k_thread.132* noundef %18, %union.anon.121* noundef %19, [1 x i64] %22) #10, !dbg !22154
  %23 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22155
  store %struct.k_thread.132* %23, %struct.k_thread.132** @pending_current, align 4, !dbg !22156
  call void @llvm.dbg.declare(metadata i32* %13, metadata !22157, metadata !DIExpression()), !dbg !22158
  %24 = load i32, i32* %11, align 4, !dbg !22159
  %25 = call i32 @z_swap_irqlock(i32 noundef %24) #10, !dbg !22160
  store i32 %25, i32* %13, align 4, !dbg !22158
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %14, metadata !22161, metadata !DIExpression()), !dbg !22163
  %26 = bitcast %struct.z_spinlock_key* %14 to i8*, !dbg !22163
  call void @llvm.memset.p0i8.i32(i8* align 4 %26, i8 0, i32 4, i1 false), !dbg !22163
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %15, metadata !22164, metadata !DIExpression()), !dbg !22163
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !20439, metadata !DIExpression()) #9, !dbg !22165
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !22167
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !20447, metadata !DIExpression()) #9, !dbg !22168
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20449, metadata !DIExpression()) #9, !dbg !22169
  %28 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22171, !srcloc !20454
  store i32 %28, i32* %4, align 4, !dbg !22171
  %29 = load i32, i32* %4, align 4, !dbg !22172
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !22173
  store i32 %29, i32* %30, align 4, !dbg !22174
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !22175
  %32 = load i32, i32* %31, align 4, !dbg !22175
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !22163
  store i32 %32, i32* %33, align 4, !dbg !22163
  br label %34, !dbg !22163

34:                                               ; preds = %58, %3
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !22176
  %36 = load i32, i32* %35, align 4, !dbg !22176
  %37 = icmp ne i32 %36, 0, !dbg !22176
  %38 = xor i1 %37, true, !dbg !22176
  br i1 %38, label %39, label %60, !dbg !22163

39:                                               ; preds = %34
  %40 = load %struct.k_thread.132*, %struct.k_thread.132** @pending_current, align 4, !dbg !22178
  %41 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22181
  %42 = icmp eq %struct.k_thread.132* %40, %41, !dbg !22182
  br i1 %42, label %43, label %44, !dbg !22183

43:                                               ; preds = %39
  store %struct.k_thread.132* null, %struct.k_thread.132** @pending_current, align 4, !dbg !22184
  br label %44, !dbg !22186

44:                                               ; preds = %43, %39
  br label %45, !dbg !22187

45:                                               ; preds = %44
  %46 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !22176
  %47 = bitcast i32* %46 to [1 x i32]*, !dbg !22176
  %48 = load [1 x i32], [1 x i32]* %47, align 4, !dbg !22176
  %49 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %50 = bitcast i32* %49 to [1 x i32]*
  store [1 x i32] %48, [1 x i32]* %50, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20479, metadata !DIExpression()) #9, !dbg !22188
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20485, metadata !DIExpression()) #9, !dbg !22190
  %51 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !22191
  %52 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22192
  %53 = load i32, i32* %52, align 4, !dbg !22192
  store i32 %53, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20489, metadata !DIExpression()) #9, !dbg !22193
  %54 = load i32, i32* %5, align 4, !dbg !22195
  %55 = icmp ne i32 %54, 0, !dbg !22196
  br i1 %55, label %56, label %57, !dbg !22197

56:                                               ; preds = %45
  br label %58, !dbg !22198

57:                                               ; preds = %45
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22199, !srcloc !20500
  br label %58, !dbg !22200

58:                                               ; preds = %56, %57
  %59 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !22176
  store i32 1, i32* %59, align 4, !dbg !22176
  br label %34, !dbg !22176, !llvm.loop !22201

60:                                               ; preds = %34
  %61 = load i32, i32* %13, align 4, !dbg !22203
  ret i32 %61, !dbg !22204
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.121* noundef %2, [1 x i64] %3) #1 !dbg !22205 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.121*, align 4
  %16 = alloca %struct.z_spinlock_key, align 4
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0
  %18 = bitcast i32* %17 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %18, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %20, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !22208, metadata !DIExpression()), !dbg !22209
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !22210, metadata !DIExpression()), !dbg !22211
  store %union.anon.121* %2, %union.anon.121** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %15, metadata !22212, metadata !DIExpression()), !dbg !22213
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !22214, metadata !DIExpression()), !dbg !22215
  %21 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22216
  store %struct.k_thread.132* %21, %struct.k_thread.132** @pending_current, align 4, !dbg !22217
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !20439, metadata !DIExpression()) #9, !dbg !22218
  %22 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !22220
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !20447, metadata !DIExpression()) #9, !dbg !22221
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20449, metadata !DIExpression()) #9, !dbg !22222
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22224, !srcloc !20454
  store i32 %23, i32* %5, align 4, !dbg !22224
  %24 = load i32, i32* %5, align 4, !dbg !22225
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22226
  store i32 %24, i32* %25, align 4, !dbg !22227
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22228
  %27 = load i32, i32* %26, align 4, !dbg !22228
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !22229
  store i32 %27, i32* %28, align 4, !dbg !22229
  %29 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22230
  %30 = load %union.anon.121*, %union.anon.121** %15, align 4, !dbg !22231
  %31 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !22232
  %32 = bitcast i64* %31 to [1 x i64]*, !dbg !22232
  %33 = load [1 x i64], [1 x i64]* %32, align 8, !dbg !22232
  call void @pend_locked(%struct.k_thread.132* noundef %29, %union.anon.121* noundef %30, [1 x i64] %33) #10, !dbg !22232
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !22233
  store %struct.k_spinlock.13* %34, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !21532, metadata !DIExpression()), !dbg !22234
  %35 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !22236
  %36 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !22237
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !22237
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !22237
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !21523, metadata !DIExpression()) #9, !dbg !22238
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !21529, metadata !DIExpression()) #9, !dbg !22240
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !22241
  store %struct.k_spinlock.13* %41, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !21532, metadata !DIExpression()) #9, !dbg !22242
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !22244
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !22245
  %44 = load i32, i32* %43, align 4, !dbg !22245
  %45 = call i32 @z_swap_irqlock(i32 noundef %44) #13, !dbg !22246
  ret i32 %45, !dbg !22247
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_unpend1_no_timeout(%union.anon.121* noundef %0) #1 !dbg !22248 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.121*, align 4
  %9 = alloca %struct.k_thread.132*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %union.anon.121* %0, %union.anon.121** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %8, metadata !22251, metadata !DIExpression()), !dbg !22252
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %9, metadata !22253, metadata !DIExpression()), !dbg !22254
  store %struct.k_thread.132* null, %struct.k_thread.132** %9, align 4, !dbg !22254
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !22255, metadata !DIExpression()), !dbg !22257
  %12 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !22257
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !22257
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !22258, metadata !DIExpression()), !dbg !22257
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !22259
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !22261
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !22262
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !22263
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22265, !srcloc !20454
  store i32 %14, i32* %2, align 4, !dbg !22265
  %15 = load i32, i32* %2, align 4, !dbg !22266
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22267
  store i32 %15, i32* %16, align 4, !dbg !22268
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22269
  %18 = load i32, i32* %17, align 4, !dbg !22269
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !22257
  store i32 %18, i32* %19, align 4, !dbg !22257
  br label %20, !dbg !22257

20:                                               ; preds = %47, %1
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22270
  %22 = load i32, i32* %21, align 4, !dbg !22270
  %23 = icmp ne i32 %22, 0, !dbg !22270
  %24 = xor i1 %23, true, !dbg !22270
  br i1 %24, label %25, label %49, !dbg !22257

25:                                               ; preds = %20
  %26 = load %union.anon.121*, %union.anon.121** %8, align 4, !dbg !22272
  %27 = getelementptr inbounds %union.anon.121, %union.anon.121* %26, i32 0, i32 0, !dbg !22274
  %28 = call %struct.k_thread.132* @z_priq_dumb_best(%struct._dnode.120* noundef %27) #10, !dbg !22275
  store %struct.k_thread.132* %28, %struct.k_thread.132** %9, align 4, !dbg !22276
  %29 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22277
  %30 = icmp ne %struct.k_thread.132* %29, null, !dbg !22279
  br i1 %30, label %31, label %33, !dbg !22280

31:                                               ; preds = %25
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22281
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %32) #10, !dbg !22283
  br label %33, !dbg !22284

33:                                               ; preds = %31, %25
  br label %34, !dbg !22285

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !22270
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !22270
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !22270
  %38 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !22286
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !22288
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !22289
  %41 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !22290
  %42 = load i32, i32* %41, align 4, !dbg !22290
  store i32 %42, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !22291
  %43 = load i32, i32* %3, align 4, !dbg !22293
  %44 = icmp ne i32 %43, 0, !dbg !22294
  br i1 %44, label %45, label %46, !dbg !22295

45:                                               ; preds = %34
  br label %47, !dbg !22296

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22297, !srcloc !20500
  br label %47, !dbg !22298

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22270
  store i32 1, i32* %48, align 4, !dbg !22270
  br label %20, !dbg !22270, !llvm.loop !22299

49:                                               ; preds = %20
  %50 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22301
  ret %struct.k_thread.132* %50, !dbg !22302
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_unpend_first_thread(%union.anon.121* noundef %0) #1 !dbg !22303 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.121*, align 4
  %9 = alloca %struct.k_thread.132*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %union.anon.121* %0, %union.anon.121** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %8, metadata !22304, metadata !DIExpression()), !dbg !22305
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %9, metadata !22306, metadata !DIExpression()), !dbg !22307
  store %struct.k_thread.132* null, %struct.k_thread.132** %9, align 4, !dbg !22307
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !22308, metadata !DIExpression()), !dbg !22310
  %12 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !22310
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !22310
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !22311, metadata !DIExpression()), !dbg !22310
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !22312
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !22314
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !22315
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !22316
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22318, !srcloc !20454
  store i32 %14, i32* %2, align 4, !dbg !22318
  %15 = load i32, i32* %2, align 4, !dbg !22319
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22320
  store i32 %15, i32* %16, align 4, !dbg !22321
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22322
  %18 = load i32, i32* %17, align 4, !dbg !22322
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !22310
  store i32 %18, i32* %19, align 4, !dbg !22310
  br label %20, !dbg !22310

20:                                               ; preds = %49, %1
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22323
  %22 = load i32, i32* %21, align 4, !dbg !22323
  %23 = icmp ne i32 %22, 0, !dbg !22323
  %24 = xor i1 %23, true, !dbg !22323
  br i1 %24, label %25, label %51, !dbg !22310

25:                                               ; preds = %20
  %26 = load %union.anon.121*, %union.anon.121** %8, align 4, !dbg !22325
  %27 = getelementptr inbounds %union.anon.121, %union.anon.121* %26, i32 0, i32 0, !dbg !22327
  %28 = call %struct.k_thread.132* @z_priq_dumb_best(%struct._dnode.120* noundef %27) #10, !dbg !22328
  store %struct.k_thread.132* %28, %struct.k_thread.132** %9, align 4, !dbg !22329
  %29 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22330
  %30 = icmp ne %struct.k_thread.132* %29, null, !dbg !22332
  br i1 %30, label %31, label %35, !dbg !22333

31:                                               ; preds = %25
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22334
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %32) #10, !dbg !22336
  %33 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22337
  %34 = call i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %33) #10, !dbg !22338
  br label %35, !dbg !22339

35:                                               ; preds = %31, %25
  br label %36, !dbg !22340

36:                                               ; preds = %35
  %37 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !22323
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !22323
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !22323
  %40 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !22341
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !22343
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !22344
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !22345
  %44 = load i32, i32* %43, align 4, !dbg !22345
  store i32 %44, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !22346
  %45 = load i32, i32* %3, align 4, !dbg !22348
  %46 = icmp ne i32 %45, 0, !dbg !22349
  br i1 %46, label %47, label %48, !dbg !22350

47:                                               ; preds = %36
  br label %49, !dbg !22351

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22352, !srcloc !20500
  br label %49, !dbg !22353

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22323
  store i32 1, i32* %50, align 4, !dbg !22323
  br label %20, !dbg !22323, !llvm.loop !22354

51:                                               ; preds = %20
  %52 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22356
  ret %struct.k_thread.132* %52, !dbg !22357
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_unpend_thread(%struct.k_thread.132* noundef %0) #1 !dbg !22358 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %11, metadata !22359, metadata !DIExpression()), !dbg !22360
  %12 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !22361
  store %struct.k_thread.132* %12, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !22104, metadata !DIExpression()) #9, !dbg !22362
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !22106, metadata !DIExpression()) #9, !dbg !22364
  %13 = bitcast %struct.z_spinlock_key* %9 to i8*, !dbg !22364
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false) #9, !dbg !22364
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !22109, metadata !DIExpression()) #9, !dbg !22364
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !22365
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !22367
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !22368
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !22369
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22371, !srcloc !20454
  store i32 %15, i32* %2, align 4, !dbg !22371
  %16 = load i32, i32* %2, align 4, !dbg !22372
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22373
  store i32 %16, i32* %17, align 4, !dbg !22374
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !22375
  %19 = load i32, i32* %18, align 4, !dbg !22375
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22364
  store i32 %19, i32* %20, align 4, !dbg !22364
  br label %21, !dbg !22364

21:                                               ; preds = %40, %1
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !22376
  %23 = load i32, i32* %22, align 4, !dbg !22376
  %24 = icmp ne i32 %23, 0, !dbg !22376
  %25 = xor i1 %24, true, !dbg !22376
  br i1 %25, label %26, label %42, !dbg !22364

26:                                               ; preds = %21
  %27 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !22377
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %27) #13, !dbg !22378
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !22376
  %29 = bitcast i32* %28 to [1 x i32]*, !dbg !22376
  %30 = load [1 x i32], [1 x i32]* %29, align 4, !dbg !22376
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %32 = bitcast i32* %31 to [1 x i32]*
  store [1 x i32] %30, [1 x i32]* %32, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !20479, metadata !DIExpression()) #9, !dbg !22379
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !20485, metadata !DIExpression()) #9, !dbg !22381
  %33 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !22382
  %34 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !22383
  %35 = load i32, i32* %34, align 4, !dbg !22383
  store i32 %35, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20489, metadata !DIExpression()) #9, !dbg !22384
  %36 = load i32, i32* %3, align 4, !dbg !22386
  %37 = icmp ne i32 %36, 0, !dbg !22387
  br i1 %37, label %38, label %39, !dbg !22388

38:                                               ; preds = %26
  br label %40, !dbg !22389

39:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22390, !srcloc !20500
  br label %40, !dbg !22391

40:                                               ; preds = %38, %39
  %41 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !22376
  store i32 1, i32* %41, align 4, !dbg !22376
  br label %21, !dbg !22376, !llvm.loop !22392

42:                                               ; preds = %21
  %43 = load %struct.k_thread.132*, %struct.k_thread.132** %11, align 4, !dbg !22394
  %44 = call i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %43) #10, !dbg !22395
  ret void, !dbg !22396
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_set_prio(%struct.k_thread.132* noundef %0, i32 noundef %1) #1 !dbg !22397 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca %struct.k_thread.132*, align 4
  %7 = alloca %struct.k_thread.132*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  %9 = alloca %struct.k_thread.132*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.k_thread.132*, align 4
  %13 = alloca %struct.k_thread.132*, align 4
  %14 = alloca %struct.z_spinlock_key, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %struct.z_spinlock_key, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.132*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca %struct.z_spinlock_key, align 4
  %22 = alloca %struct.z_spinlock_key, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %18, metadata !22398, metadata !DIExpression()), !dbg !22399
  store i32 %1, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !22400, metadata !DIExpression()), !dbg !22401
  call void @llvm.dbg.declare(metadata i8* %20, metadata !22402, metadata !DIExpression()), !dbg !22403
  store i8 0, i8* %20, align 1, !dbg !22403
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %21, metadata !22404, metadata !DIExpression()), !dbg !22406
  %23 = bitcast %struct.z_spinlock_key* %21 to i8*, !dbg !22406
  call void @llvm.memset.p0i8.i32(i8* align 4 %23, i8 0, i32 4, i1 false), !dbg !22406
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %22, metadata !22407, metadata !DIExpression()), !dbg !22406
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !20439, metadata !DIExpression()) #9, !dbg !22408
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !22410
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %16, metadata !20447, metadata !DIExpression()) #9, !dbg !22411
  call void @llvm.dbg.declare(metadata i32* %10, metadata !20449, metadata !DIExpression()) #9, !dbg !22412
  %25 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22414, !srcloc !20454
  store i32 %25, i32* %10, align 4, !dbg !22414
  %26 = load i32, i32* %10, align 4, !dbg !22415
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !22416
  store i32 %26, i32* %27, align 4, !dbg !22417
  %28 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !22418
  %29 = load i32, i32* %28, align 4, !dbg !22418
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %22, i32 0, i32 0, !dbg !22406
  store i32 %29, i32* %30, align 4, !dbg !22406
  br label %31, !dbg !22406

31:                                               ; preds = %164, %2
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %21, i32 0, i32 0, !dbg !22419
  %33 = load i32, i32* %32, align 4, !dbg !22419
  %34 = icmp ne i32 %33, 0, !dbg !22419
  %35 = xor i1 %34, true, !dbg !22419
  br i1 %35, label %36, label %166, !dbg !22406

36:                                               ; preds = %31
  %37 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !22421
  %38 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.132* noundef %37) #10, !dbg !22423
  %39 = zext i1 %38 to i8, !dbg !22424
  store i8 %39, i8* %20, align 1, !dbg !22424
  %40 = load i8, i8* %20, align 1, !dbg !22425
  %41 = trunc i8 %40 to i1, !dbg !22425
  br i1 %41, label %42, label %142, !dbg !22427

42:                                               ; preds = %36
  %43 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !22428
  store %struct.k_thread.132* %43, %struct.k_thread.132** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %13, metadata !20837, metadata !DIExpression()) #9, !dbg !22432
  %44 = load %struct.k_thread.132*, %struct.k_thread.132** %13, align 4, !dbg !22434
  %45 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %44, i32 0, i32 0, !dbg !22435
  %46 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %45, i32 0, i32 3, !dbg !22436
  %47 = load i8, i8* %46, align 1, !dbg !22437
  %48 = zext i8 %47 to i32, !dbg !22437
  %49 = and i32 %48, -129, !dbg !22437
  %50 = trunc i32 %49 to i8, !dbg !22437
  store i8 %50, i8* %46, align 1, !dbg !22437
  %51 = load %struct.k_thread.132*, %struct.k_thread.132** %13, align 4, !dbg !22438
  %52 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %51) #13, !dbg !22439
  br i1 %52, label %53, label %58, !dbg !22440

53:                                               ; preds = %42
  %54 = load %struct.k_thread.132*, %struct.k_thread.132** %13, align 4, !dbg !22441
  store %struct.k_thread.132* %54, %struct.k_thread.132** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %9, metadata !20851, metadata !DIExpression()) #9, !dbg !22442
  %55 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22444
  store %struct.k_thread.132* %55, %struct.k_thread.132** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %8, metadata !20856, metadata !DIExpression()), !dbg !22445
  %56 = bitcast i8* bitcast (%struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1) to i8*) to %struct._dnode.120*, !dbg !22447
  %57 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !22448
  call void @z_priq_dumb_remove(%struct._dnode.120* noundef %56, %struct.k_thread.132* noundef %57) #13, !dbg !22449
  br label %58, !dbg !22450

58:                                               ; preds = %42, %53
  %59 = load i32, i32* %19, align 4, !dbg !22451
  %60 = trunc i32 %59 to i8, !dbg !22451
  %61 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !22452
  %62 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %61, i32 0, i32 0, !dbg !22453
  %63 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %62, i32 0, i32 4, !dbg !22454
  %64 = bitcast %union.anon.2.7* %63 to %struct.device_state.444*, !dbg !22454
  %65 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %64, i32 0, i32 0, !dbg !22454
  store i8 %60, i8* %65, align 2, !dbg !22455
  %66 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !22456
  store %struct.k_thread.132* %66, %struct.k_thread.132** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %12, metadata !20868, metadata !DIExpression()) #9, !dbg !22457
  %67 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !22459
  %68 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %67, i32 0, i32 0, !dbg !22460
  %69 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %68, i32 0, i32 3, !dbg !22461
  %70 = load i8, i8* %69, align 1, !dbg !22462
  %71 = zext i8 %70 to i32, !dbg !22462
  %72 = or i32 %71, 128, !dbg !22462
  %73 = trunc i32 %72 to i8, !dbg !22462
  store i8 %73, i8* %69, align 1, !dbg !22462
  %74 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !22463
  %75 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %74) #13, !dbg !22464
  br i1 %75, label %76, label %141, !dbg !22465

76:                                               ; preds = %58
  %77 = load %struct.k_thread.132*, %struct.k_thread.132** %12, align 4, !dbg !22466
  store %struct.k_thread.132* %77, %struct.k_thread.132** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %7, metadata !20882, metadata !DIExpression()) #9, !dbg !22467
  %78 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !22469
  store %struct.k_thread.132* %78, %struct.k_thread.132** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %6, metadata !20856, metadata !DIExpression()) #9, !dbg !22470
  %79 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !22472
  store %struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1), %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !20890, metadata !DIExpression()) #9, !dbg !22473
  store %struct.k_thread.132* %79, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20897, metadata !DIExpression()) #9, !dbg !22475
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !20899, metadata !DIExpression()) #9, !dbg !22476
  %80 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !22477
  %81 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %80) #13, !dbg !22477
  %82 = icmp ne %struct._dnode.120* %81, null, !dbg !22477
  br i1 %82, label %83, label %88, !dbg !22477

83:                                               ; preds = %76
  %84 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !22477
  %85 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %84) #13, !dbg !22477
  %86 = bitcast %struct._dnode.120* %85 to i8*, !dbg !22477
  %87 = bitcast i8* %86 to %struct.k_thread.132*, !dbg !22477
  br label %89, !dbg !22477

88:                                               ; preds = %76
  br label %89, !dbg !22477

89:                                               ; preds = %88, %83
  %90 = phi %struct.k_thread.132* [ %87, %83 ], [ null, %88 ], !dbg !22477
  store %struct.k_thread.132* %90, %struct.k_thread.132** %5, align 4, !dbg !22477
  br label %91, !dbg !22477

91:                                               ; preds = %132, %89
  %92 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22478
  %93 = icmp ne %struct.k_thread.132* %92, null, !dbg !22478
  br i1 %93, label %94, label %134, !dbg !22477

94:                                               ; preds = %91
  %95 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22479
  %96 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22480
  %97 = call i32 @z_sched_prio_cmp(%struct.k_thread.132* noundef %95, %struct.k_thread.132* noundef %96) #13, !dbg !22481
  %98 = icmp sgt i32 %97, 0, !dbg !22482
  br i1 %98, label %99, label %108, !dbg !22483

99:                                               ; preds = %94
  %100 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22484
  %101 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %100, i32 0, i32 0, !dbg !22485
  %102 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %101, i32 0, i32 0, !dbg !22486
  %103 = bitcast %union.anon.121* %102 to %struct._dnode.120*, !dbg !22486
  %104 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22487
  %105 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %104, i32 0, i32 0, !dbg !22488
  %106 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %105, i32 0, i32 0, !dbg !22489
  %107 = bitcast %union.anon.121* %106 to %struct._dnode.120*, !dbg !22489
  call void @sys_dlist_insert(%struct._dnode.120* noundef %103, %struct._dnode.120* noundef %107) #13, !dbg !22490
  br label %140, !dbg !22491

108:                                              ; preds = %94
  %109 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22478
  %110 = icmp ne %struct.k_thread.132* %109, null, !dbg !22478
  br i1 %110, label %111, label %131, !dbg !22478

111:                                              ; preds = %108
  %112 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !22478
  %113 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22478
  %114 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %113, i32 0, i32 0, !dbg !22478
  %115 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %114, i32 0, i32 0, !dbg !22478
  %116 = bitcast %union.anon.121* %115 to %struct._dnode.120*, !dbg !22478
  %117 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %112, %struct._dnode.120* noundef %116) #13, !dbg !22478
  %118 = icmp ne %struct._dnode.120* %117, null, !dbg !22478
  br i1 %118, label %119, label %128, !dbg !22478

119:                                              ; preds = %111
  %120 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !22478
  %121 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22478
  %122 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %121, i32 0, i32 0, !dbg !22478
  %123 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %122, i32 0, i32 0, !dbg !22478
  %124 = bitcast %union.anon.121* %123 to %struct._dnode.120*, !dbg !22478
  %125 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %120, %struct._dnode.120* noundef %124) #13, !dbg !22478
  %126 = bitcast %struct._dnode.120* %125 to i8*, !dbg !22478
  %127 = bitcast i8* %126 to %struct.k_thread.132*, !dbg !22478
  br label %129, !dbg !22478

128:                                              ; preds = %111
  br label %129, !dbg !22478

129:                                              ; preds = %128, %119
  %130 = phi %struct.k_thread.132* [ %127, %119 ], [ null, %128 ], !dbg !22478
  br label %132, !dbg !22478

131:                                              ; preds = %108
  br label %132, !dbg !22478

132:                                              ; preds = %131, %129
  %133 = phi %struct.k_thread.132* [ %130, %129 ], [ null, %131 ], !dbg !22478
  store %struct.k_thread.132* %133, %struct.k_thread.132** %5, align 4, !dbg !22478
  br label %91, !dbg !22478, !llvm.loop !22492

134:                                              ; preds = %91
  %135 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !22494
  %136 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22495
  %137 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %136, i32 0, i32 0, !dbg !22496
  %138 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %137, i32 0, i32 0, !dbg !22497
  %139 = bitcast %union.anon.121* %138 to %struct._dnode.120*, !dbg !22497
  call void @sys_dlist_append(%struct._dnode.120* noundef %135, %struct._dnode.120* noundef %139) #13, !dbg !22498
  br label %140, !dbg !22499

140:                                              ; preds = %99, %134
  br label %141, !dbg !22500

141:                                              ; preds = %58, %140
  call void @update_cache(i32 noundef 1) #10, !dbg !22501
  br label %150, !dbg !22502

142:                                              ; preds = %36
  %143 = load i32, i32* %19, align 4, !dbg !22503
  %144 = trunc i32 %143 to i8, !dbg !22503
  %145 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !22505
  %146 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %145, i32 0, i32 0, !dbg !22506
  %147 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %146, i32 0, i32 4, !dbg !22507
  %148 = bitcast %union.anon.2.7* %147 to %struct.device_state.444*, !dbg !22507
  %149 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %148, i32 0, i32 0, !dbg !22507
  store i8 %144, i8* %149, align 2, !dbg !22508
  br label %150

150:                                              ; preds = %142, %141
  br label %151, !dbg !22509

151:                                              ; preds = %150
  %152 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %22, i32 0, i32 0, !dbg !22419
  %153 = bitcast i32* %152 to [1 x i32]*, !dbg !22419
  %154 = load [1 x i32], [1 x i32]* %153, align 4, !dbg !22419
  %155 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0
  %156 = bitcast i32* %155 to [1 x i32]*
  store [1 x i32] %154, [1 x i32]* %156, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !20479, metadata !DIExpression()) #9, !dbg !22510
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %14, metadata !20485, metadata !DIExpression()) #9, !dbg !22512
  %157 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !22513
  %158 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !22514
  %159 = load i32, i32* %158, align 4, !dbg !22514
  store i32 %159, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !20489, metadata !DIExpression()) #9, !dbg !22515
  %160 = load i32, i32* %11, align 4, !dbg !22517
  %161 = icmp ne i32 %160, 0, !dbg !22518
  br i1 %161, label %162, label %163, !dbg !22519

162:                                              ; preds = %151
  br label %164, !dbg !22520

163:                                              ; preds = %151
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22521, !srcloc !20500
  br label %164, !dbg !22522

164:                                              ; preds = %162, %163
  %165 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %21, i32 0, i32 0, !dbg !22419
  store i32 1, i32* %165, align 4, !dbg !22419
  br label %31, !dbg !22419, !llvm.loop !22523

166:                                              ; preds = %31
  br label %167, !dbg !22525

167:                                              ; preds = %166
  br label %168, !dbg !22526

168:                                              ; preds = %167
  %169 = load i8, i8* %20, align 1, !dbg !22528
  %170 = trunc i8 %169 to i1, !dbg !22528
  ret i1 %170, !dbg !22529
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_priority_set(%struct.k_thread.132* noundef %0, i32 noundef %1) #1 !dbg !22530 {
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.k_thread.132* %0, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !22533, metadata !DIExpression()), !dbg !22534
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22535, metadata !DIExpression()), !dbg !22536
  call void @llvm.dbg.declare(metadata i8* %5, metadata !22537, metadata !DIExpression()), !dbg !22538
  %6 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !22539
  %7 = load i32, i32* %4, align 4, !dbg !22540
  %8 = call zeroext i1 @z_set_prio(%struct.k_thread.132* noundef %6, i32 noundef %7) #10, !dbg !22541
  %9 = zext i1 %8 to i8, !dbg !22538
  store i8 %9, i8* %5, align 1, !dbg !22538
  call void @flag_ipi() #10, !dbg !22542
  %10 = load i8, i8* %5, align 1, !dbg !22543
  %11 = trunc i8 %10 to i1, !dbg !22543
  br i1 %11, label %12, label %22, !dbg !22545

12:                                               ; preds = %2
  %13 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22546
  %14 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %13, i32 0, i32 0, !dbg !22547
  %15 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %14, i32 0, i32 4, !dbg !22548
  %16 = bitcast %union.anon.2.7* %15 to %struct.device_state.444*, !dbg !22548
  %17 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %16, i32 0, i32 1, !dbg !22548
  %18 = load i8, i8* %17, align 1, !dbg !22548
  %19 = zext i8 %18 to i32, !dbg !22546
  %20 = icmp eq i32 %19, 0, !dbg !22549
  br i1 %20, label %21, label %22, !dbg !22550

21:                                               ; preds = %12
  call void @z_reschedule_unlocked() #10, !dbg !22551
  br label %22, !dbg !22553

22:                                               ; preds = %21, %12, %2
  ret void, !dbg !22554
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_lock() #1 !dbg !22555 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.z_spinlock_key, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !22556, metadata !DIExpression()), !dbg !22558
  %9 = bitcast %struct.z_spinlock_key* %7 to i8*, !dbg !22558
  call void @llvm.memset.p0i8.i32(i8* align 4 %9, i8 0, i32 4, i1 false), !dbg !22558
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !22559, metadata !DIExpression()), !dbg !22558
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !20439, metadata !DIExpression()) #9, !dbg !22560
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !22562
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !20447, metadata !DIExpression()) #9, !dbg !22563
  call void @llvm.dbg.declare(metadata i32* %1, metadata !20449, metadata !DIExpression()) #9, !dbg !22564
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22566, !srcloc !20454
  store i32 %11, i32* %1, align 4, !dbg !22566
  %12 = load i32, i32* %1, align 4, !dbg !22567
  %13 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !22568
  store i32 %12, i32* %13, align 4, !dbg !22569
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !22570
  %15 = load i32, i32* %14, align 4, !dbg !22570
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !22558
  store i32 %15, i32* %16, align 4, !dbg !22558
  br label %17, !dbg !22558

17:                                               ; preds = %38, %0
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !22571
  %19 = load i32, i32* %18, align 4, !dbg !22571
  %20 = icmp ne i32 %19, 0, !dbg !22571
  %21 = xor i1 %20, true, !dbg !22571
  br i1 %21, label %22, label %40, !dbg !22558

22:                                               ; preds = %17
  br label %23, !dbg !22573

23:                                               ; preds = %22
  br label %24, !dbg !22575

24:                                               ; preds = %23
  call void @z_sched_lock() #10, !dbg !22577
  br label %25, !dbg !22578

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !22571
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !22571
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !22571
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !20479, metadata !DIExpression()) #9, !dbg !22579
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %3, metadata !20485, metadata !DIExpression()) #9, !dbg !22581
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !22582
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0, !dbg !22583
  %33 = load i32, i32* %32, align 4, !dbg !22583
  store i32 %33, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20489, metadata !DIExpression()) #9, !dbg !22584
  %34 = load i32, i32* %2, align 4, !dbg !22586
  %35 = icmp ne i32 %34, 0, !dbg !22587
  br i1 %35, label %36, label %37, !dbg !22588

36:                                               ; preds = %25
  br label %38, !dbg !22589

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22590, !srcloc !20500
  br label %38, !dbg !22591

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !22571
  store i32 1, i32* %39, align 4, !dbg !22571
  br label %17, !dbg !22571, !llvm.loop !22592

40:                                               ; preds = %17
  ret void, !dbg !22594
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sched_lock() #1 !dbg !22595 {
  %1 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22596
  %2 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %1, i32 0, i32 0, !dbg !22597
  %3 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %2, i32 0, i32 4, !dbg !22598
  %4 = bitcast %union.anon.2.7* %3 to %struct.device_state.444*, !dbg !22598
  %5 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %4, i32 0, i32 1, !dbg !22598
  %6 = load i8, i8* %5, align 1, !dbg !22599
  %7 = add i8 %6, -1, !dbg !22599
  store i8 %7, i8* %5, align 1, !dbg !22599
  br label %8, !dbg !22600

8:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !22601, !srcloc !22603
  br label %9, !dbg !22601

9:                                                ; preds = %8
  ret void, !dbg !22604
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_unlock() #1 !dbg !22605 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.z_spinlock_key, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !22606, metadata !DIExpression()), !dbg !22608
  %13 = bitcast %struct.z_spinlock_key* %7 to i8*, !dbg !22608
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !22608
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !22609, metadata !DIExpression()), !dbg !22608
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !20439, metadata !DIExpression()) #9, !dbg !22610
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !22612
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !20447, metadata !DIExpression()) #9, !dbg !22613
  call void @llvm.dbg.declare(metadata i32* %1, metadata !20449, metadata !DIExpression()) #9, !dbg !22614
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22616, !srcloc !20454
  store i32 %15, i32* %1, align 4, !dbg !22616
  %16 = load i32, i32* %1, align 4, !dbg !22617
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !22618
  store i32 %16, i32* %17, align 4, !dbg !22619
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !22620
  %19 = load i32, i32* %18, align 4, !dbg !22620
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !22608
  store i32 %19, i32* %20, align 4, !dbg !22608
  br label %21, !dbg !22608

21:                                               ; preds = %47, %0
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !22621
  %23 = load i32, i32* %22, align 4, !dbg !22621
  %24 = icmp ne i32 %23, 0, !dbg !22621
  %25 = xor i1 %24, true, !dbg !22621
  br i1 %25, label %26, label %49, !dbg !22608

26:                                               ; preds = %21
  %27 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22623
  %28 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %27, i32 0, i32 0, !dbg !22625
  %29 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %28, i32 0, i32 4, !dbg !22626
  %30 = bitcast %union.anon.2.7* %29 to %struct.device_state.444*, !dbg !22626
  %31 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %30, i32 0, i32 1, !dbg !22626
  %32 = load i8, i8* %31, align 1, !dbg !22627
  %33 = add i8 %32, 1, !dbg !22627
  store i8 %33, i8* %31, align 1, !dbg !22627
  call void @update_cache(i32 noundef 0) #10, !dbg !22628
  br label %34, !dbg !22629

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !22621
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !22621
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !22621
  %38 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !20479, metadata !DIExpression()) #9, !dbg !22630
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %3, metadata !20485, metadata !DIExpression()) #9, !dbg !22632
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !22633
  %41 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0, !dbg !22634
  %42 = load i32, i32* %41, align 4, !dbg !22634
  store i32 %42, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20489, metadata !DIExpression()) #9, !dbg !22635
  %43 = load i32, i32* %2, align 4, !dbg !22637
  %44 = icmp ne i32 %43, 0, !dbg !22638
  br i1 %44, label %45, label %46, !dbg !22639

45:                                               ; preds = %34
  br label %47, !dbg !22640

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !22641, !srcloc !20500
  br label %47, !dbg !22642

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !22621
  store i32 1, i32* %48, align 4, !dbg !22621
  br label %21, !dbg !22621, !llvm.loop !22643

49:                                               ; preds = %21
  br label %50, !dbg !22645

50:                                               ; preds = %49
  br label %51, !dbg !22646

51:                                               ; preds = %50
  br label %52, !dbg !22650

52:                                               ; preds = %51
  br label %53, !dbg !22651

53:                                               ; preds = %52
  call void @z_reschedule_unlocked() #10, !dbg !22653
  ret void, !dbg !22654
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_swap_next_thread() #1 !dbg !22655 {
  %1 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 0), align 4, !dbg !22656
  ret %struct.k_thread.132* %1, !dbg !22657
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* noundef %0, %struct.rbnode* noundef %1) #1 !dbg !22658 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.rbnode*, align 4
  %5 = alloca %struct.rbnode*, align 4
  %6 = alloca %struct.k_thread.132*, align 4
  %7 = alloca %struct.k_thread.132*, align 4
  %8 = alloca i32, align 4
  store %struct.rbnode* %0, %struct.rbnode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !22661, metadata !DIExpression()), !dbg !22662
  store %struct.rbnode* %1, %struct.rbnode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %5, metadata !22663, metadata !DIExpression()), !dbg !22664
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %6, metadata !22665, metadata !DIExpression()), !dbg !22666
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %7, metadata !22667, metadata !DIExpression()), !dbg !22668
  call void @llvm.dbg.declare(metadata i32* %8, metadata !22669, metadata !DIExpression()), !dbg !22670
  %9 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !22671
  %10 = bitcast %struct.rbnode* %9 to i8*, !dbg !22671
  %11 = getelementptr inbounds i8, i8* %10, i32 0, !dbg !22671
  %12 = bitcast i8* %11 to %struct.k_thread.132*, !dbg !22671
  store %struct.k_thread.132* %12, %struct.k_thread.132** %6, align 4, !dbg !22672
  %13 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !22673
  %14 = bitcast %struct.rbnode* %13 to i8*, !dbg !22673
  %15 = getelementptr inbounds i8, i8* %14, i32 0, !dbg !22673
  %16 = bitcast i8* %15 to %struct.k_thread.132*, !dbg !22673
  store %struct.k_thread.132* %16, %struct.k_thread.132** %7, align 4, !dbg !22674
  %17 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !22675
  %18 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !22676
  %19 = call i32 @z_sched_prio_cmp(%struct.k_thread.132* noundef %17, %struct.k_thread.132* noundef %18) #10, !dbg !22677
  store i32 %19, i32* %8, align 4, !dbg !22678
  %20 = load i32, i32* %8, align 4, !dbg !22679
  %21 = icmp sgt i32 %20, 0, !dbg !22681
  br i1 %21, label %22, label %23, !dbg !22682

22:                                               ; preds = %2
  store i1 true, i1* %3, align 1, !dbg !22683
  br label %40, !dbg !22683

23:                                               ; preds = %2
  %24 = load i32, i32* %8, align 4, !dbg !22685
  %25 = icmp slt i32 %24, 0, !dbg !22687
  br i1 %25, label %26, label %27, !dbg !22688

26:                                               ; preds = %23
  store i1 false, i1* %3, align 1, !dbg !22689
  br label %40, !dbg !22689

27:                                               ; preds = %23
  %28 = load %struct.k_thread.132*, %struct.k_thread.132** %6, align 4, !dbg !22691
  %29 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %28, i32 0, i32 0, !dbg !22693
  %30 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %29, i32 0, i32 5, !dbg !22694
  %31 = load i32, i32* %30, align 8, !dbg !22694
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !22695
  %33 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %32, i32 0, i32 0, !dbg !22696
  %34 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %33, i32 0, i32 5, !dbg !22697
  %35 = load i32, i32* %34, align 8, !dbg !22697
  %36 = icmp ult i32 %31, %35, !dbg !22698
  %37 = zext i1 %36 to i64, !dbg !22691
  %38 = select i1 %36, i32 1, i32 0, !dbg !22691
  %39 = icmp ne i32 %38, 0, !dbg !22691
  store i1 %39, i1* %3, align 1, !dbg !22699
  br label %40, !dbg !22699

40:                                               ; preds = %27, %26, %22
  %41 = load i1, i1* %3, align 1, !dbg !22700
  ret i1 %41, !dbg !22700
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread.132* noundef %1) #1 !dbg !22701 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca %struct._rb_foreach, align 4
  %7 = alloca %struct.rbnode*, align 4
  %8 = alloca %struct.k_thread.132*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !22717, metadata !DIExpression()), !dbg !22718
  store %struct.k_thread.132* %1, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !22719, metadata !DIExpression()), !dbg !22720
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !22721, metadata !DIExpression()), !dbg !22722
  %9 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22723
  %10 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %9, i32 0, i32 1, !dbg !22724
  %11 = load i32, i32* %10, align 4, !dbg !22725
  %12 = add nsw i32 %11, 1, !dbg !22725
  store i32 %12, i32* %10, align 4, !dbg !22725
  %13 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22726
  %14 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %13, i32 0, i32 0, !dbg !22727
  %15 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %14, i32 0, i32 5, !dbg !22728
  store i32 %11, i32* %15, align 8, !dbg !22729
  %16 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22730
  %17 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %16, i32 0, i32 1, !dbg !22732
  %18 = load i32, i32* %17, align 4, !dbg !22732
  %19 = icmp ne i32 %18, 0, !dbg !22730
  br i1 %19, label %62, label %20, !dbg !22733

20:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %6, metadata !22734, metadata !DIExpression()), !dbg !22742
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 0, !dbg !22742
  %22 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22742
  %23 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %22, i32 0, i32 0, !dbg !22742
  %24 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %23, i32 0, i32 2, !dbg !22742
  %25 = load i32, i32* %24, align 4, !dbg !22742
  %26 = mul i32 %25, 4, !dbg !22742
  %27 = alloca i8, i32 %26, align 8, !dbg !22742
  %28 = bitcast i8* %27 to %struct.rbnode**, !dbg !22742
  store %struct.rbnode** %28, %struct.rbnode*** %21, align 4, !dbg !22742
  %29 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 1, !dbg !22742
  %30 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22742
  %31 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %30, i32 0, i32 0, !dbg !22742
  %32 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %31, i32 0, i32 2, !dbg !22742
  %33 = load i32, i32* %32, align 4, !dbg !22742
  %34 = mul i32 %33, 1, !dbg !22742
  %35 = alloca i8, i32 %34, align 8, !dbg !22742
  store i8* %35, i8** %29, align 4, !dbg !22742
  %36 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 2, !dbg !22742
  store i32 -1, i32* %36, align 4, !dbg !22742
  br label %37, !dbg !22742

37:                                               ; preds = %53, %20
  call void @llvm.dbg.declare(metadata %struct.rbnode** %7, metadata !22743, metadata !DIExpression()), !dbg !22746
  %38 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22746
  %39 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %38, i32 0, i32 0, !dbg !22746
  %40 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef %39, %struct._rb_foreach* noundef %6) #10, !dbg !22746
  store %struct.rbnode* %40, %struct.rbnode** %7, align 4, !dbg !22746
  %41 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !22746
  %42 = icmp ne %struct.rbnode* %41, null, !dbg !22746
  br i1 %42, label %43, label %48, !dbg !22746

43:                                               ; preds = %37
  %44 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !22746
  %45 = bitcast %struct.rbnode* %44 to i8*, !dbg !22746
  %46 = getelementptr inbounds i8, i8* %45, i32 0, !dbg !22746
  %47 = bitcast i8* %46 to %struct.k_thread.132*, !dbg !22746
  br label %49, !dbg !22746

48:                                               ; preds = %37
  br label %49, !dbg !22746

49:                                               ; preds = %48, %43
  %50 = phi %struct.k_thread.132* [ %47, %43 ], [ null, %48 ], !dbg !22746
  store %struct.k_thread.132* %50, %struct.k_thread.132** %5, align 4, !dbg !22746
  store %struct.k_thread.132* %50, %struct.k_thread.132** %8, align 4, !dbg !22746
  %51 = load %struct.k_thread.132*, %struct.k_thread.132** %8, align 4, !dbg !22746
  %52 = icmp ne %struct.k_thread.132* %51, null, !dbg !22747
  br i1 %52, label %53, label %61, !dbg !22742

53:                                               ; preds = %49
  %54 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22748
  %55 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %54, i32 0, i32 1, !dbg !22750
  %56 = load i32, i32* %55, align 4, !dbg !22751
  %57 = add nsw i32 %56, 1, !dbg !22751
  store i32 %57, i32* %55, align 4, !dbg !22751
  %58 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22752
  %59 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %58, i32 0, i32 0, !dbg !22753
  %60 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %59, i32 0, i32 5, !dbg !22754
  store i32 %56, i32* %60, align 8, !dbg !22755
  br label %37, !dbg !22747, !llvm.loop !22756

61:                                               ; preds = %49
  br label %62, !dbg !22758

62:                                               ; preds = %61, %2
  %63 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22759
  %64 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %63, i32 0, i32 0, !dbg !22760
  %65 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22761
  %66 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %65, i32 0, i32 0, !dbg !22762
  %67 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %66, i32 0, i32 0, !dbg !22763
  %68 = bitcast %union.anon.121* %67 to %struct.rbnode*, !dbg !22763
  call void @rb_insert(%struct.rbtree* noundef %64, %struct.rbnode* noundef %68) #10, !dbg !22764
  ret void, !dbg !22765
}

declare dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) #0

declare dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread.132* noundef %1) #1 !dbg !22766 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !22767, metadata !DIExpression()), !dbg !22768
  store %struct.k_thread.132* %1, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !22769, metadata !DIExpression()), !dbg !22770
  %5 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22771
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !22772
  %7 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22773
  %8 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %7, i32 0, i32 0, !dbg !22774
  %9 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %8, i32 0, i32 0, !dbg !22775
  %10 = bitcast %union.anon.121* %9 to %struct.rbnode*, !dbg !22775
  call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %10) #10, !dbg !22776
  %11 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22777
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %11, i32 0, i32 0, !dbg !22779
  %13 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %12, i32 0, i32 0, !dbg !22780
  %14 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !22780
  %15 = icmp ne %struct.rbnode* %14, null, !dbg !22777
  br i1 %15, label %19, label %16, !dbg !22781

16:                                               ; preds = %2
  %17 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !22782
  %18 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %17, i32 0, i32 1, !dbg !22784
  store i32 0, i32* %18, align 4, !dbg !22785
  br label %19, !dbg !22786

19:                                               ; preds = %16, %2
  ret void, !dbg !22787
}

declare dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_priq_rb_best(%struct._priq_rb* noundef %0) #1 !dbg !22788 {
  %2 = alloca %struct._priq_rb*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct.rbnode*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %2, metadata !22791, metadata !DIExpression()), !dbg !22792
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !22793, metadata !DIExpression()), !dbg !22794
  store %struct.k_thread.132* null, %struct.k_thread.132** %3, align 4, !dbg !22794
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !22795, metadata !DIExpression()), !dbg !22796
  %5 = load %struct._priq_rb*, %struct._priq_rb** %2, align 4, !dbg !22797
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !22798
  %7 = call %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %6) #10, !dbg !22799
  store %struct.rbnode* %7, %struct.rbnode** %4, align 4, !dbg !22796
  %8 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !22800
  %9 = icmp ne %struct.rbnode* %8, null, !dbg !22802
  br i1 %9, label %10, label %15, !dbg !22803

10:                                               ; preds = %1
  %11 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !22804
  %12 = bitcast %struct.rbnode* %11 to i8*, !dbg !22804
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !22804
  %14 = bitcast i8* %13 to %struct.k_thread.132*, !dbg !22804
  store %struct.k_thread.132* %14, %struct.k_thread.132** %3, align 4, !dbg !22806
  br label %15, !dbg !22807

15:                                               ; preds = %10, %1
  %16 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !22808
  ret %struct.k_thread.132* %16, !dbg !22809
}

; Function Attrs: noinline nounwind optnone
define internal %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) #1 !dbg !22810 {
  %2 = alloca %struct.rbtree*, align 4
  store %struct.rbtree* %0, %struct.rbtree** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.rbtree** %2, metadata !22814, metadata !DIExpression()), !dbg !22815
  %3 = load %struct.rbtree*, %struct.rbtree** %2, align 4, !dbg !22816
  %4 = call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %3, i8 noundef zeroext 0) #10, !dbg !22817
  ret %struct.rbnode* %4, !dbg !22818
}

declare dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_priq_mq_best(%struct._priq_mq* noundef %0) #1 !dbg !22819 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca %struct._priq_mq*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct._dnode.120*, align 4
  %6 = alloca %struct._dnode.120*, align 4
  store %struct._priq_mq* %0, %struct._priq_mq** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_mq** %3, metadata !22828, metadata !DIExpression()), !dbg !22829
  %7 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !22830
  %8 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %7, i32 0, i32 1, !dbg !22832
  %9 = load i32, i32* %8, align 4, !dbg !22832
  %10 = icmp ne i32 %9, 0, !dbg !22830
  br i1 %10, label %12, label %11, !dbg !22833

11:                                               ; preds = %1
  store %struct.k_thread.132* null, %struct.k_thread.132** %2, align 4, !dbg !22834
  br label %31, !dbg !22834

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !22836, metadata !DIExpression()), !dbg !22837
  store %struct.k_thread.132* null, %struct.k_thread.132** %4, align 4, !dbg !22837
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %5, metadata !22838, metadata !DIExpression()), !dbg !22839
  %13 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !22840
  %14 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %13, i32 0, i32 0, !dbg !22841
  %15 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !22842
  %16 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %15, i32 0, i32 1, !dbg !22843
  %17 = load i32, i32* %16, align 4, !dbg !22843
  %18 = call i32 @llvm.cttz.i32(i32 %17, i1 false), !dbg !22844
  %19 = getelementptr inbounds [32 x %struct._dnode.120], [32 x %struct._dnode.120]* %14, i32 0, i32 %18, !dbg !22840
  store %struct._dnode.120* %19, %struct._dnode.120** %5, align 4, !dbg !22839
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %6, metadata !22845, metadata !DIExpression()), !dbg !22846
  %20 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !22847
  %21 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %20) #10, !dbg !22848
  store %struct._dnode.120* %21, %struct._dnode.120** %6, align 4, !dbg !22846
  %22 = load %struct._dnode.120*, %struct._dnode.120** %6, align 4, !dbg !22849
  %23 = icmp ne %struct._dnode.120* %22, null, !dbg !22851
  br i1 %23, label %24, label %29, !dbg !22852

24:                                               ; preds = %12
  %25 = load %struct._dnode.120*, %struct._dnode.120** %6, align 4, !dbg !22853
  %26 = bitcast %struct._dnode.120* %25 to i8*, !dbg !22853
  %27 = getelementptr inbounds i8, i8* %26, i32 0, !dbg !22853
  %28 = bitcast i8* %27 to %struct.k_thread.132*, !dbg !22853
  store %struct.k_thread.132* %28, %struct.k_thread.132** %4, align 4, !dbg !22855
  br label %29, !dbg !22856

29:                                               ; preds = %24, %12
  %30 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22857
  store %struct.k_thread.132* %30, %struct.k_thread.132** %2, align 4, !dbg !22858
  br label %31, !dbg !22858

31:                                               ; preds = %29, %11
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22859
  ret %struct.k_thread.132* %32, !dbg !22859
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_unpend_all(%union.anon.121* noundef %0) #1 !dbg !22860 {
  %2 = alloca %union.anon.121*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  store %union.anon.121* %0, %union.anon.121** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %2, metadata !22863, metadata !DIExpression()), !dbg !22864
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22865, metadata !DIExpression()), !dbg !22866
  store i32 0, i32* %3, align 4, !dbg !22866
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !22867, metadata !DIExpression()), !dbg !22868
  br label %5, !dbg !22869

5:                                                ; preds = %9, %1
  %6 = load %union.anon.121*, %union.anon.121** %2, align 4, !dbg !22870
  %7 = call %struct.k_thread.132* @z_waitq_head(%union.anon.121* noundef %6) #10, !dbg !22871
  store %struct.k_thread.132* %7, %struct.k_thread.132** %4, align 4, !dbg !22872
  %8 = icmp ne %struct.k_thread.132* %7, null, !dbg !22873
  br i1 %8, label %9, label %12, !dbg !22869

9:                                                ; preds = %5
  %10 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22874
  call void @z_unpend_thread(%struct.k_thread.132* noundef %10) #10, !dbg !22876
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !22877
  call void @z_ready_thread(%struct.k_thread.132* noundef %11) #10, !dbg !22878
  store i32 1, i32* %3, align 4, !dbg !22879
  br label %5, !dbg !22869, !llvm.loop !22880

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4, !dbg !22882
  ret i32 %13, !dbg !22883
}

; Function Attrs: noinline nounwind optnone
define internal %struct.k_thread.132* @z_waitq_head(%union.anon.121* noundef %0) #1 !dbg !22884 {
  %2 = alloca %union.anon.121*, align 4
  store %union.anon.121* %0, %union.anon.121** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %2, metadata !22885, metadata !DIExpression()), !dbg !22886
  %3 = load %union.anon.121*, %union.anon.121** %2, align 4, !dbg !22887
  %4 = getelementptr inbounds %union.anon.121, %union.anon.121* %3, i32 0, i32 0, !dbg !22888
  %5 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %4) #10, !dbg !22889
  %6 = bitcast %struct._dnode.120* %5 to %struct.k_thread.132*, !dbg !22890
  ret %struct.k_thread.132* %6, !dbg !22891
}

; Function Attrs: noinline nounwind optnone
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) #1 !dbg !22892 {
  %2 = alloca %struct._ready_q*, align 4
  store %struct._ready_q* %0, %struct._ready_q** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._ready_q** %2, metadata !22900, metadata !DIExpression()), !dbg !22901
  %3 = load %struct._ready_q*, %struct._ready_q** %2, align 4, !dbg !22902
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %3, i32 0, i32 1, !dbg !22903
  call void @sys_dlist_init.227(%struct._dnode.120* noundef %4) #10, !dbg !22904
  ret void, !dbg !22905
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init.227(%struct._dnode.120* noundef %0) #1 !dbg !22906 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !22909, metadata !DIExpression()), !dbg !22910
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !22911
  %4 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !22912
  %5 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %4, i32 0, i32 0, !dbg !22913
  %6 = bitcast %union.anon.0.118* %5 to %struct._dnode.120**, !dbg !22913
  store %struct._dnode.120* %3, %struct._dnode.120** %6, align 4, !dbg !22914
  %7 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !22915
  %8 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !22916
  %9 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %8, i32 0, i32 1, !dbg !22917
  %10 = bitcast %union.anon.0.118* %9 to %struct._dnode.120**, !dbg !22917
  store %struct._dnode.120* %7, %struct._dnode.120** %10, align 4, !dbg !22918
  ret void, !dbg !22919
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_init() #1 !dbg !22920 {
  call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2)) #10, !dbg !22921
  call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #10, !dbg !22922
  ret void, !dbg !22923
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread.132* noundef %0) #1 !dbg !22924 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !22928, metadata !DIExpression()), !dbg !22929
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !22930
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !22931
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 4, !dbg !22932
  %6 = bitcast %union.anon.2.7* %5 to %struct.device_state.444*, !dbg !22932
  %7 = getelementptr inbounds %struct.device_state.444, %struct.device_state.444* %6, i32 0, i32 0, !dbg !22932
  %8 = load i8, i8* %7, align 2, !dbg !22932
  %9 = sext i8 %8 to i32, !dbg !22930
  ret i32 %9, !dbg !22933
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread.132* noundef %0, i32 noundef %1) #1 !dbg !22934 {
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !22937, metadata !DIExpression()), !dbg !22938
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22939, metadata !DIExpression()), !dbg !22940
  br label %6, !dbg !22941

6:                                                ; preds = %2
  br label %7, !dbg !22942

7:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !22944, metadata !DIExpression()), !dbg !22945
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !22946
  store %struct.k_thread.132* %8, %struct.k_thread.132** %5, align 4, !dbg !22945
  %9 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !22947
  %10 = load i32, i32* %4, align 4, !dbg !22948
  call void @z_thread_priority_set(%struct.k_thread.132* noundef %9, i32 noundef %10) #10, !dbg !22949
  ret void, !dbg !22950
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_can_yield() #1 !dbg !22951 {
  %1 = call zeroext i1 @k_is_pre_kernel.230() #10, !dbg !22952
  br i1 %1, label %7, label %2, !dbg !22953

2:                                                ; preds = %0
  %3 = call zeroext i1 @k_is_in_isr() #10, !dbg !22954
  br i1 %3, label %7, label %4, !dbg !22955

4:                                                ; preds = %2
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22956
  %6 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.132* noundef %5) #10, !dbg !22957
  br label %7, !dbg !22955

7:                                                ; preds = %4, %2, %0
  %8 = phi i1 [ true, %2 ], [ true, %0 ], [ %6, %4 ]
  %9 = xor i1 %8, true, !dbg !22958
  ret i1 %9, !dbg !22959
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_pre_kernel.230() #1 !dbg !22960 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !22961
  %2 = trunc i8 %1 to i1, !dbg !22961
  %3 = xor i1 %2, true, !dbg !22962
  ret i1 %3, !dbg !22963
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_yield() #1 !dbg !22964 {
  %1 = alloca %struct._dnode.120*, align 4
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  %6 = alloca %struct.k_thread.132*, align 4
  %7 = alloca %struct.k_thread.132*, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.k_thread.132*, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %struct.k_thread.132*, align 4
  %14 = alloca %struct.z_spinlock_key, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %struct.z_spinlock_key, align 4
  br label %17, !dbg !22965

17:                                               ; preds = %0
  br label %18, !dbg !22966

18:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %16, metadata !22968, metadata !DIExpression()), !dbg !22969
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !20439, metadata !DIExpression()) #9, !dbg !22970
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !22972
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %14, metadata !20447, metadata !DIExpression()) #9, !dbg !22973
  call void @llvm.dbg.declare(metadata i32* %8, metadata !20449, metadata !DIExpression()) #9, !dbg !22974
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !22976, !srcloc !20454
  store i32 %20, i32* %8, align 4, !dbg !22976
  %21 = load i32, i32* %8, align 4, !dbg !22977
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !22978
  store i32 %21, i32* %22, align 4, !dbg !22979
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !22980
  %24 = load i32, i32* %23, align 4, !dbg !22980
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !22981
  store i32 %24, i32* %25, align 4, !dbg !22981
  %26 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !22982
  store %struct.k_thread.132* %26, %struct.k_thread.132** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %13, metadata !20837, metadata !DIExpression()) #9, !dbg !22985
  %27 = load %struct.k_thread.132*, %struct.k_thread.132** %13, align 4, !dbg !22987
  %28 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %27, i32 0, i32 0, !dbg !22988
  %29 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %28, i32 0, i32 3, !dbg !22989
  %30 = load i8, i8* %29, align 1, !dbg !22990
  %31 = zext i8 %30 to i32, !dbg !22990
  %32 = and i32 %31, -129, !dbg !22990
  %33 = trunc i32 %32 to i8, !dbg !22990
  store i8 %33, i8* %29, align 1, !dbg !22990
  %34 = load %struct.k_thread.132*, %struct.k_thread.132** %13, align 4, !dbg !22991
  %35 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %34) #13, !dbg !22992
  br i1 %35, label %36, label %41, !dbg !22993

36:                                               ; preds = %18
  %37 = load %struct.k_thread.132*, %struct.k_thread.132** %13, align 4, !dbg !22994
  store %struct.k_thread.132* %37, %struct.k_thread.132** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %7, metadata !20851, metadata !DIExpression()) #9, !dbg !22995
  %38 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !22997
  store %struct.k_thread.132* %38, %struct.k_thread.132** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %6, metadata !20856, metadata !DIExpression()), !dbg !22998
  %39 = bitcast i8* bitcast (%struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1) to i8*) to %struct._dnode.120*, !dbg !23000
  %40 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !23001
  call void @z_priq_dumb_remove(%struct._dnode.120* noundef %39, %struct.k_thread.132* noundef %40) #13, !dbg !23002
  br label %41, !dbg !23003

41:                                               ; preds = %18, %36
  %42 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23004
  store %struct.k_thread.132* %42, %struct.k_thread.132** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %9, metadata !20868, metadata !DIExpression()) #9, !dbg !23005
  %43 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !23007
  %44 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %43, i32 0, i32 0, !dbg !23008
  %45 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %44, i32 0, i32 3, !dbg !23009
  %46 = load i8, i8* %45, align 1, !dbg !23010
  %47 = zext i8 %46 to i32, !dbg !23010
  %48 = or i32 %47, 128, !dbg !23010
  %49 = trunc i32 %48 to i8, !dbg !23010
  store i8 %49, i8* %45, align 1, !dbg !23010
  %50 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !23011
  %51 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %50) #13, !dbg !23012
  br i1 %51, label %52, label %117, !dbg !23013

52:                                               ; preds = %41
  %53 = load %struct.k_thread.132*, %struct.k_thread.132** %9, align 4, !dbg !23014
  store %struct.k_thread.132* %53, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !20882, metadata !DIExpression()) #9, !dbg !23015
  %54 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23017
  store %struct.k_thread.132* %54, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20856, metadata !DIExpression()) #9, !dbg !23018
  %55 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23020
  store %struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1), %struct._dnode.120** %1, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %1, metadata !20890, metadata !DIExpression()) #9, !dbg !23021
  store %struct.k_thread.132* %55, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20897, metadata !DIExpression()) #9, !dbg !23023
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !20899, metadata !DIExpression()) #9, !dbg !23024
  %56 = load %struct._dnode.120*, %struct._dnode.120** %1, align 4, !dbg !23025
  %57 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %56) #13, !dbg !23025
  %58 = icmp ne %struct._dnode.120* %57, null, !dbg !23025
  br i1 %58, label %59, label %64, !dbg !23025

59:                                               ; preds = %52
  %60 = load %struct._dnode.120*, %struct._dnode.120** %1, align 4, !dbg !23025
  %61 = call %struct._dnode.120* @sys_dlist_peek_head(%struct._dnode.120* noundef %60) #13, !dbg !23025
  %62 = bitcast %struct._dnode.120* %61 to i8*, !dbg !23025
  %63 = bitcast i8* %62 to %struct.k_thread.132*, !dbg !23025
  br label %65, !dbg !23025

64:                                               ; preds = %52
  br label %65, !dbg !23025

65:                                               ; preds = %64, %59
  %66 = phi %struct.k_thread.132* [ %63, %59 ], [ null, %64 ], !dbg !23025
  store %struct.k_thread.132* %66, %struct.k_thread.132** %3, align 4, !dbg !23025
  br label %67, !dbg !23025

67:                                               ; preds = %108, %65
  %68 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23026
  %69 = icmp ne %struct.k_thread.132* %68, null, !dbg !23026
  br i1 %69, label %70, label %110, !dbg !23025

70:                                               ; preds = %67
  %71 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !23027
  %72 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23028
  %73 = call i32 @z_sched_prio_cmp(%struct.k_thread.132* noundef %71, %struct.k_thread.132* noundef %72) #13, !dbg !23029
  %74 = icmp sgt i32 %73, 0, !dbg !23030
  br i1 %74, label %75, label %84, !dbg !23031

75:                                               ; preds = %70
  %76 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23032
  %77 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %76, i32 0, i32 0, !dbg !23033
  %78 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %77, i32 0, i32 0, !dbg !23034
  %79 = bitcast %union.anon.121* %78 to %struct._dnode.120*, !dbg !23034
  %80 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !23035
  %81 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %80, i32 0, i32 0, !dbg !23036
  %82 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %81, i32 0, i32 0, !dbg !23037
  %83 = bitcast %union.anon.121* %82 to %struct._dnode.120*, !dbg !23037
  call void @sys_dlist_insert(%struct._dnode.120* noundef %79, %struct._dnode.120* noundef %83) #13, !dbg !23038
  br label %116, !dbg !23039

84:                                               ; preds = %70
  %85 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23026
  %86 = icmp ne %struct.k_thread.132* %85, null, !dbg !23026
  br i1 %86, label %87, label %107, !dbg !23026

87:                                               ; preds = %84
  %88 = load %struct._dnode.120*, %struct._dnode.120** %1, align 4, !dbg !23026
  %89 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23026
  %90 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %89, i32 0, i32 0, !dbg !23026
  %91 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %90, i32 0, i32 0, !dbg !23026
  %92 = bitcast %union.anon.121* %91 to %struct._dnode.120*, !dbg !23026
  %93 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %88, %struct._dnode.120* noundef %92) #13, !dbg !23026
  %94 = icmp ne %struct._dnode.120* %93, null, !dbg !23026
  br i1 %94, label %95, label %104, !dbg !23026

95:                                               ; preds = %87
  %96 = load %struct._dnode.120*, %struct._dnode.120** %1, align 4, !dbg !23026
  %97 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23026
  %98 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %97, i32 0, i32 0, !dbg !23026
  %99 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %98, i32 0, i32 0, !dbg !23026
  %100 = bitcast %union.anon.121* %99 to %struct._dnode.120*, !dbg !23026
  %101 = call %struct._dnode.120* @sys_dlist_peek_next(%struct._dnode.120* noundef %96, %struct._dnode.120* noundef %100) #13, !dbg !23026
  %102 = bitcast %struct._dnode.120* %101 to i8*, !dbg !23026
  %103 = bitcast i8* %102 to %struct.k_thread.132*, !dbg !23026
  br label %105, !dbg !23026

104:                                              ; preds = %87
  br label %105, !dbg !23026

105:                                              ; preds = %104, %95
  %106 = phi %struct.k_thread.132* [ %103, %95 ], [ null, %104 ], !dbg !23026
  br label %108, !dbg !23026

107:                                              ; preds = %84
  br label %108, !dbg !23026

108:                                              ; preds = %107, %105
  %109 = phi %struct.k_thread.132* [ %106, %105 ], [ null, %107 ], !dbg !23026
  store %struct.k_thread.132* %109, %struct.k_thread.132** %3, align 4, !dbg !23026
  br label %67, !dbg !23026, !llvm.loop !23040

110:                                              ; preds = %67
  %111 = load %struct._dnode.120*, %struct._dnode.120** %1, align 4, !dbg !23042
  %112 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !23043
  %113 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %112, i32 0, i32 0, !dbg !23044
  %114 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %113, i32 0, i32 0, !dbg !23045
  %115 = bitcast %union.anon.121* %114 to %struct._dnode.120*, !dbg !23045
  call void @sys_dlist_append(%struct._dnode.120* noundef %111, %struct._dnode.120* noundef %115) #13, !dbg !23046
  br label %116, !dbg !23047

116:                                              ; preds = %75, %110
  br label %117, !dbg !23048

117:                                              ; preds = %41, %116
  call void @update_cache(i32 noundef 1) #10, !dbg !23049
  %118 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !23050
  %119 = bitcast i32* %118 to [1 x i32]*, !dbg !23050
  %120 = load [1 x i32], [1 x i32]* %119, align 4, !dbg !23050
  %121 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0
  %122 = bitcast i32* %121 to [1 x i32]*
  store [1 x i32] %120, [1 x i32]* %122, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !21523, metadata !DIExpression()) #9, !dbg !23051
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !21529, metadata !DIExpression()) #9, !dbg !23053
  %123 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !23054
  store %struct.k_spinlock.13* %123, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !21532, metadata !DIExpression()) #9, !dbg !23055
  %124 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !23057
  %125 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !23058
  %126 = load i32, i32* %125, align 4, !dbg !23058
  %127 = call i32 @z_swap_irqlock(i32 noundef %126) #13, !dbg !23059
  ret void, !dbg !23060
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) #1 !dbg !23061 {
  %2 = alloca i32, align 4
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !23064, metadata !DIExpression()), !dbg !23065
  call void @llvm.dbg.declare(metadata i64* %4, metadata !23066, metadata !DIExpression()), !dbg !23067
  br label %9, !dbg !23068

9:                                                ; preds = %1
  br label %10, !dbg !23069

10:                                               ; preds = %9
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !23071
  %12 = load i64, i64* %11, align 8, !dbg !23071
  %13 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !23071
  store i64 -1, i64* %13, align 8, !dbg !23071
  %14 = icmp eq i64 %12, -1, !dbg !23071
  br i1 %14, label %15, label %19, !dbg !23073

15:                                               ; preds = %10
  %16 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23074
  call void @k_thread_suspend(%struct.k_thread.132* noundef %16) #10, !dbg !23076
  br label %17, !dbg !23077

17:                                               ; preds = %15
  br label %18, !dbg !23078

18:                                               ; preds = %17
  store i32 -1, i32* %2, align 4, !dbg !23080
  br label %31, !dbg !23080

19:                                               ; preds = %10
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !23081
  %21 = load i64, i64* %20, align 8, !dbg !23081
  store i64 %21, i64* %4, align 8, !dbg !23082
  %22 = load i64, i64* %4, align 8, !dbg !23083
  %23 = call i32 @z_tick_sleep(i64 noundef %22) #10, !dbg !23084
  %24 = sext i32 %23 to i64, !dbg !23084
  store i64 %24, i64* %4, align 8, !dbg !23085
  call void @llvm.dbg.declare(metadata i32* %6, metadata !23086, metadata !DIExpression()), !dbg !23087
  %25 = load i64, i64* %4, align 8, !dbg !23088
  %26 = call i64 @k_ticks_to_ms_floor64(i64 noundef %25) #10, !dbg !23089
  %27 = trunc i64 %26 to i32, !dbg !23089
  store i32 %27, i32* %6, align 4, !dbg !23087
  br label %28, !dbg !23090

28:                                               ; preds = %19
  br label %29, !dbg !23091

29:                                               ; preds = %28
  %30 = load i32, i32* %6, align 4, !dbg !23093
  store i32 %30, i32* %2, align 4, !dbg !23094
  br label %31, !dbg !23094

31:                                               ; preds = %29, %18
  %32 = load i32, i32* %2, align 4, !dbg !23095
  ret i32 %32, !dbg !23095
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_suspend(%struct.k_thread.132* noundef %0) #1 !dbg !23096 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !23099, metadata !DIExpression()), !dbg !23100
  br label %3, !dbg !23101

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !23102, !srcloc !23104
  br label %4, !dbg !23102

4:                                                ; preds = %3
  %5 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !23105
  call void @z_impl_k_thread_suspend(%struct.k_thread.132* noundef %5) #10, !dbg !23106
  ret void, !dbg !23107
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_tick_sleep(i64 noundef %0) #1 !dbg !23108 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %union.argument_value, align 8
  %16 = alloca %struct.z_spinlock_key, align 4
  store i64 %0, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !23111, metadata !DIExpression()), !dbg !23112
  call void @llvm.dbg.declare(metadata i32* %10, metadata !23113, metadata !DIExpression()), !dbg !23114
  br label %17, !dbg !23115

17:                                               ; preds = %1
  br label %18, !dbg !23116

18:                                               ; preds = %17
  %19 = load i64, i64* %9, align 8, !dbg !23120
  %20 = icmp eq i64 %19, 0, !dbg !23122
  br i1 %20, label %21, label %22, !dbg !23123

21:                                               ; preds = %18
  call void @k_yield() #10, !dbg !23124
  store i32 0, i32* %8, align 4, !dbg !23126
  br label %74, !dbg !23126

22:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata %union.argument_value* %15, metadata !23127, metadata !DIExpression()), !dbg !23128
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !23129
  %24 = load i64, i64* %9, align 8, !dbg !23129
  store i64 %24, i64* %23, align 8, !dbg !23129
  %25 = load i64, i64* %9, align 8, !dbg !23130
  %26 = sub nsw i64 -2, %25, !dbg !23130
  %27 = icmp sle i64 %26, 0, !dbg !23132
  br i1 %27, label %28, label %34, !dbg !23133

28:                                               ; preds = %22
  %29 = load i64, i64* %9, align 8, !dbg !23134
  %30 = call i32 @sys_clock_tick_get_32() #10, !dbg !23136
  %31 = zext i32 %30 to i64, !dbg !23136
  %32 = add nsw i64 %29, %31, !dbg !23137
  %33 = trunc i64 %32 to i32, !dbg !23134
  store i32 %33, i32* %10, align 4, !dbg !23138
  br label %38, !dbg !23139

34:                                               ; preds = %22
  %35 = load i64, i64* %9, align 8, !dbg !23140
  %36 = sub nsw i64 -2, %35, !dbg !23140
  %37 = trunc i64 %36 to i32, !dbg !23140
  store i32 %37, i32* %10, align 4, !dbg !23142
  br label %38

38:                                               ; preds = %34, %28
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %16, metadata !23143, metadata !DIExpression()), !dbg !23144
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !20439, metadata !DIExpression()) #9, !dbg !23145
  %39 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !23147
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !20447, metadata !DIExpression()) #9, !dbg !23148
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20449, metadata !DIExpression()) #9, !dbg !23149
  %40 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !23151, !srcloc !20454
  store i32 %40, i32* %2, align 4, !dbg !23151
  %41 = load i32, i32* %2, align 4, !dbg !23152
  %42 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !23153
  store i32 %41, i32* %42, align 4, !dbg !23154
  %43 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !23155
  %44 = load i32, i32* %43, align 4, !dbg !23155
  %45 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !23156
  store i32 %44, i32* %45, align 4, !dbg !23156
  %46 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23157
  store %struct.k_thread.132* %46, %struct.k_thread.132** @pending_current, align 4, !dbg !23158
  %47 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23159
  call void @unready_thread(%struct.k_thread.132* noundef %47) #10, !dbg !23160
  %48 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23161
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !23162
  %50 = bitcast i64* %49 to [1 x i64]*, !dbg !23162
  %51 = load [1 x i64], [1 x i64]* %50, align 8, !dbg !23162
  call void @z_add_thread_timeout.216(%struct.k_thread.132* noundef %48, [1 x i64] %51) #10, !dbg !23162
  %52 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23163
  call void @z_mark_thread_as_suspended(%struct.k_thread.132* noundef %52) #10, !dbg !23164
  %53 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !23165
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !23165
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !23165
  %56 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !21523, metadata !DIExpression()) #9, !dbg !23166
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !21529, metadata !DIExpression()) #9, !dbg !23168
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !23169
  store %struct.k_spinlock.13* %58, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !21532, metadata !DIExpression()) #9, !dbg !23170
  %59 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !23172
  %60 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !23173
  %61 = load i32, i32* %60, align 4, !dbg !23173
  %62 = call i32 @z_swap_irqlock(i32 noundef %61) #13, !dbg !23174
  %63 = load i32, i32* %10, align 4, !dbg !23175
  %64 = zext i32 %63 to i64, !dbg !23176
  %65 = call i32 @sys_clock_tick_get_32() #10, !dbg !23177
  %66 = zext i32 %65 to i64, !dbg !23177
  %67 = sub nsw i64 %64, %66, !dbg !23178
  store i64 %67, i64* %9, align 8, !dbg !23179
  %68 = load i64, i64* %9, align 8, !dbg !23180
  %69 = icmp sgt i64 %68, 0, !dbg !23182
  br i1 %69, label %70, label %73, !dbg !23183

70:                                               ; preds = %38
  %71 = load i64, i64* %9, align 8, !dbg !23184
  %72 = trunc i64 %71 to i32, !dbg !23184
  store i32 %72, i32* %8, align 4, !dbg !23186
  br label %74, !dbg !23186

73:                                               ; preds = %38
  store i32 0, i32* %8, align 4, !dbg !23187
  br label %74, !dbg !23187

74:                                               ; preds = %73, %70, %21
  %75 = load i32, i32* %8, align 4, !dbg !23188
  ret i32 %75, !dbg !23188
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64(i64 noundef %0) #1 !dbg !23189 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !23190, metadata !DIExpression()), !dbg !23191
  %15 = load i64, i64* %14, align 8, !dbg !23192
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !20509, metadata !DIExpression()), !dbg !23193
  store i32 32768, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20513, metadata !DIExpression()), !dbg !23195
  store i32 1000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20515, metadata !DIExpression()), !dbg !23196
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !20517, metadata !DIExpression()), !dbg !23197
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !20519, metadata !DIExpression()), !dbg !23198
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !20521, metadata !DIExpression()), !dbg !23199
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !20523, metadata !DIExpression()), !dbg !23200
  call void @llvm.dbg.declare(metadata i8* %10, metadata !20525, metadata !DIExpression()), !dbg !23201
  %16 = load i8, i8* %6, align 1, !dbg !23202
  %17 = trunc i8 %16 to i1, !dbg !23202
  br i1 %17, label %18, label %27, !dbg !23203

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !23204
  %20 = load i32, i32* %4, align 4, !dbg !23205
  %21 = icmp ugt i32 %19, %20, !dbg !23206
  br i1 %21, label %22, label %27, !dbg !23207

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !23208
  %24 = load i32, i32* %4, align 4, !dbg !23209
  %25 = urem i32 %23, %24, !dbg !23210
  %26 = icmp eq i32 %25, 0, !dbg !23211
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !23212
  %29 = zext i1 %28 to i8, !dbg !23201
  store i8 %29, i8* %10, align 1, !dbg !23201
  call void @llvm.dbg.declare(metadata i8* %11, metadata !20538, metadata !DIExpression()), !dbg !23213
  %30 = load i8, i8* %6, align 1, !dbg !23214
  %31 = trunc i8 %30 to i1, !dbg !23214
  br i1 %31, label %32, label %41, !dbg !23215

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !23216
  %34 = load i32, i32* %5, align 4, !dbg !23217
  %35 = icmp ugt i32 %33, %34, !dbg !23218
  br i1 %35, label %36, label %41, !dbg !23219

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !23220
  %38 = load i32, i32* %5, align 4, !dbg !23221
  %39 = urem i32 %37, %38, !dbg !23222
  %40 = icmp eq i32 %39, 0, !dbg !23223
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !23212
  %43 = zext i1 %42 to i8, !dbg !23213
  store i8 %43, i8* %11, align 1, !dbg !23213
  %44 = load i32, i32* %4, align 4, !dbg !23224
  %45 = load i32, i32* %5, align 4, !dbg !23225
  %46 = icmp eq i32 %44, %45, !dbg !23226
  br i1 %46, label %47, label %58, !dbg !23227

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !23228
  %49 = trunc i8 %48 to i1, !dbg !23228
  br i1 %49, label %50, label %54, !dbg !23228

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !23229
  %52 = trunc i64 %51 to i32, !dbg !23230
  %53 = zext i32 %52 to i64, !dbg !23231
  br label %56, !dbg !23228

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !23232
  br label %56, !dbg !23228

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !23228
  store i64 %57, i64* %2, align 8, !dbg !23233
  br label %195, !dbg !23233

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !20562, metadata !DIExpression()), !dbg !23234
  store i64 0, i64* %12, align 8, !dbg !23234
  %59 = load i8, i8* %10, align 1, !dbg !23235
  %60 = trunc i8 %59 to i1, !dbg !23235
  br i1 %60, label %86, label %61, !dbg !23236

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !20567, metadata !DIExpression()), !dbg !23237
  %62 = load i8, i8* %11, align 1, !dbg !23238
  %63 = trunc i8 %62 to i1, !dbg !23238
  br i1 %63, label %64, label %68, !dbg !23238

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !23239
  %66 = load i32, i32* %5, align 4, !dbg !23240
  %67 = udiv i32 %65, %66, !dbg !23241
  br label %70, !dbg !23238

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !23242
  br label %70, !dbg !23238

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !23238
  store i32 %71, i32* %13, align 4, !dbg !23237
  %72 = load i8, i8* %8, align 1, !dbg !23243
  %73 = trunc i8 %72 to i1, !dbg !23243
  br i1 %73, label %74, label %78, !dbg !23244

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !23245
  %76 = sub i32 %75, 1, !dbg !23246
  %77 = zext i32 %76 to i64, !dbg !23245
  store i64 %77, i64* %12, align 8, !dbg !23247
  br label %78, !dbg !23248

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !23249
  %80 = trunc i8 %79 to i1, !dbg !23249
  br i1 %80, label %81, label %85, !dbg !23250

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !23251
  %83 = udiv i32 %82, 2, !dbg !23252
  %84 = zext i32 %83 to i64, !dbg !23251
  store i64 %84, i64* %12, align 8, !dbg !23253
  br label %85, !dbg !23254

85:                                               ; preds = %81, %78
  br label %86, !dbg !23255

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !23256
  %88 = trunc i8 %87 to i1, !dbg !23256
  br i1 %88, label %89, label %114, !dbg !23257

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !23258
  %91 = load i64, i64* %3, align 8, !dbg !23259
  %92 = add i64 %91, %90, !dbg !23259
  store i64 %92, i64* %3, align 8, !dbg !23259
  %93 = load i8, i8* %7, align 1, !dbg !23260
  %94 = trunc i8 %93 to i1, !dbg !23260
  br i1 %94, label %95, label %106, !dbg !23261

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !23262
  %97 = icmp ult i64 %96, 4294967296, !dbg !23263
  br i1 %97, label %98, label %106, !dbg !23264

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !23265
  %100 = trunc i64 %99 to i32, !dbg !23266
  %101 = load i32, i32* %4, align 4, !dbg !23267
  %102 = load i32, i32* %5, align 4, !dbg !23268
  %103 = udiv i32 %101, %102, !dbg !23269
  %104 = udiv i32 %100, %103, !dbg !23270
  %105 = zext i32 %104 to i64, !dbg !23271
  store i64 %105, i64* %2, align 8, !dbg !23272
  br label %195, !dbg !23272

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !23273
  %108 = load i32, i32* %4, align 4, !dbg !23274
  %109 = zext i32 %108 to i64, !dbg !23275
  %110 = load i32, i32* %5, align 4, !dbg !23276
  %111 = zext i32 %110 to i64, !dbg !23276
  %112 = udiv i64 %109, %111, !dbg !23277
  %113 = udiv i64 %107, %112, !dbg !23278
  store i64 %113, i64* %2, align 8, !dbg !23279
  br label %195, !dbg !23279

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !23280
  %116 = trunc i8 %115 to i1, !dbg !23280
  br i1 %116, label %117, label %136, !dbg !23281

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !23282
  %119 = trunc i8 %118 to i1, !dbg !23282
  br i1 %119, label %120, label %128, !dbg !23283

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !23284
  %122 = trunc i64 %121 to i32, !dbg !23285
  %123 = load i32, i32* %5, align 4, !dbg !23286
  %124 = load i32, i32* %4, align 4, !dbg !23287
  %125 = udiv i32 %123, %124, !dbg !23288
  %126 = mul i32 %122, %125, !dbg !23289
  %127 = zext i32 %126 to i64, !dbg !23290
  store i64 %127, i64* %2, align 8, !dbg !23291
  br label %195, !dbg !23291

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !23292
  %130 = load i32, i32* %5, align 4, !dbg !23293
  %131 = zext i32 %130 to i64, !dbg !23294
  %132 = load i32, i32* %4, align 4, !dbg !23295
  %133 = zext i32 %132 to i64, !dbg !23295
  %134 = udiv i64 %131, %133, !dbg !23296
  %135 = mul i64 %129, %134, !dbg !23297
  store i64 %135, i64* %2, align 8, !dbg !23298
  br label %195, !dbg !23298

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !23299
  %138 = trunc i8 %137 to i1, !dbg !23299
  br i1 %138, label %139, label %151, !dbg !23300

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !23301
  %141 = load i32, i32* %5, align 4, !dbg !23302
  %142 = zext i32 %141 to i64, !dbg !23302
  %143 = mul i64 %140, %142, !dbg !23303
  %144 = load i64, i64* %12, align 8, !dbg !23304
  %145 = add i64 %143, %144, !dbg !23305
  %146 = load i32, i32* %4, align 4, !dbg !23306
  %147 = zext i32 %146 to i64, !dbg !23306
  %148 = udiv i64 %145, %147, !dbg !23307
  %149 = trunc i64 %148 to i32, !dbg !23308
  %150 = zext i32 %149 to i64, !dbg !23308
  store i64 %150, i64* %2, align 8, !dbg !23309
  br label %195, !dbg !23309

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !23310
  %153 = trunc i8 %152 to i1, !dbg !23310
  br i1 %153, label %154, label %174, !dbg !23311

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !23312
  %156 = zext i32 %155 to i64, !dbg !23312
  %157 = mul i64 31536000, %156, !dbg !23312
  %158 = add i64 %157, 4294967294, !dbg !23312
  %159 = udiv i64 %158, 4294967295, !dbg !23312
  %160 = load i32, i32* %5, align 4, !dbg !23312
  %161 = zext i32 %160 to i64, !dbg !23312
  %162 = mul i64 %159, %161, !dbg !23312
  %163 = icmp ule i64 %162, 4294967295, !dbg !23312
  br i1 %163, label %164, label %174, !dbg !23313

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !23314
  %166 = load i32, i32* %5, align 4, !dbg !23315
  %167 = zext i32 %166 to i64, !dbg !23315
  %168 = mul i64 %165, %167, !dbg !23316
  %169 = load i64, i64* %12, align 8, !dbg !23317
  %170 = add i64 %168, %169, !dbg !23318
  %171 = load i32, i32* %4, align 4, !dbg !23319
  %172 = zext i32 %171 to i64, !dbg !23319
  %173 = udiv i64 %170, %172, !dbg !23320
  store i64 %173, i64* %2, align 8, !dbg !23321
  br label %195, !dbg !23321

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !23322
  %176 = load i32, i32* %4, align 4, !dbg !23323
  %177 = zext i32 %176 to i64, !dbg !23323
  %178 = udiv i64 %175, %177, !dbg !23324
  %179 = load i32, i32* %5, align 4, !dbg !23325
  %180 = zext i32 %179 to i64, !dbg !23325
  %181 = mul i64 %178, %180, !dbg !23326
  %182 = load i64, i64* %3, align 8, !dbg !23327
  %183 = load i32, i32* %4, align 4, !dbg !23328
  %184 = zext i32 %183 to i64, !dbg !23328
  %185 = urem i64 %182, %184, !dbg !23329
  %186 = load i32, i32* %5, align 4, !dbg !23330
  %187 = zext i32 %186 to i64, !dbg !23330
  %188 = mul i64 %185, %187, !dbg !23331
  %189 = load i64, i64* %12, align 8, !dbg !23332
  %190 = add i64 %188, %189, !dbg !23333
  %191 = load i32, i32* %4, align 4, !dbg !23334
  %192 = zext i32 %191 to i64, !dbg !23334
  %193 = udiv i64 %190, %192, !dbg !23335
  %194 = add i64 %181, %193, !dbg !23336
  store i64 %194, i64* %2, align 8, !dbg !23337
  br label %195, !dbg !23337

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !23338
  ret i64 %196, !dbg !23339
}

; Function Attrs: noinline nounwind optnone
define internal void @k_yield() #1 !dbg !23340 {
  br label %1, !dbg !23341

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !23342, !srcloc !23344
  br label %2, !dbg !23342

2:                                                ; preds = %1
  call void @z_impl_k_yield() #10, !dbg !23345
  ret void, !dbg !23346
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) #1 !dbg !23347 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !23350, metadata !DIExpression()), !dbg !23351
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23352, metadata !DIExpression()), !dbg !23353
  br label %4, !dbg !23354

4:                                                ; preds = %1
  br label %5, !dbg !23355

5:                                                ; preds = %4
  %6 = load i32, i32* %2, align 4, !dbg !23357
  %7 = sext i32 %6 to i64, !dbg !23357
  %8 = call i64 @k_us_to_ticks_ceil64(i64 noundef %7) #10, !dbg !23358
  %9 = trunc i64 %8 to i32, !dbg !23358
  store i32 %9, i32* %3, align 4, !dbg !23359
  %10 = load i32, i32* %3, align 4, !dbg !23360
  %11 = sext i32 %10 to i64, !dbg !23360
  %12 = call i32 @z_tick_sleep(i64 noundef %11) #10, !dbg !23361
  store i32 %12, i32* %3, align 4, !dbg !23362
  br label %13, !dbg !23363

13:                                               ; preds = %5
  br label %14, !dbg !23364

14:                                               ; preds = %13
  %15 = load i32, i32* %3, align 4, !dbg !23366
  %16 = sext i32 %15 to i64, !dbg !23366
  %17 = call i64 @k_ticks_to_us_floor64(i64 noundef %16) #10, !dbg !23367
  %18 = trunc i64 %17 to i32, !dbg !23367
  ret i32 %18, !dbg !23368
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_us_to_ticks_ceil64(i64 noundef %0) #1 !dbg !23369 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !23370, metadata !DIExpression()), !dbg !23371
  %15 = load i64, i64* %14, align 8, !dbg !23372
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !20509, metadata !DIExpression()), !dbg !23373
  store i32 1000000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20513, metadata !DIExpression()), !dbg !23375
  store i32 32768, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20515, metadata !DIExpression()), !dbg !23376
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !20517, metadata !DIExpression()), !dbg !23377
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !20519, metadata !DIExpression()), !dbg !23378
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !20521, metadata !DIExpression()), !dbg !23379
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !20523, metadata !DIExpression()), !dbg !23380
  call void @llvm.dbg.declare(metadata i8* %10, metadata !20525, metadata !DIExpression()), !dbg !23381
  %16 = load i8, i8* %6, align 1, !dbg !23382
  %17 = trunc i8 %16 to i1, !dbg !23382
  br i1 %17, label %18, label %27, !dbg !23383

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !23384
  %20 = load i32, i32* %4, align 4, !dbg !23385
  %21 = icmp ugt i32 %19, %20, !dbg !23386
  br i1 %21, label %22, label %27, !dbg !23387

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !23388
  %24 = load i32, i32* %4, align 4, !dbg !23389
  %25 = urem i32 %23, %24, !dbg !23390
  %26 = icmp eq i32 %25, 0, !dbg !23391
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !23392
  %29 = zext i1 %28 to i8, !dbg !23381
  store i8 %29, i8* %10, align 1, !dbg !23381
  call void @llvm.dbg.declare(metadata i8* %11, metadata !20538, metadata !DIExpression()), !dbg !23393
  %30 = load i8, i8* %6, align 1, !dbg !23394
  %31 = trunc i8 %30 to i1, !dbg !23394
  br i1 %31, label %32, label %41, !dbg !23395

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !23396
  %34 = load i32, i32* %5, align 4, !dbg !23397
  %35 = icmp ugt i32 %33, %34, !dbg !23398
  br i1 %35, label %36, label %41, !dbg !23399

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !23400
  %38 = load i32, i32* %5, align 4, !dbg !23401
  %39 = urem i32 %37, %38, !dbg !23402
  %40 = icmp eq i32 %39, 0, !dbg !23403
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !23392
  %43 = zext i1 %42 to i8, !dbg !23393
  store i8 %43, i8* %11, align 1, !dbg !23393
  %44 = load i32, i32* %4, align 4, !dbg !23404
  %45 = load i32, i32* %5, align 4, !dbg !23405
  %46 = icmp eq i32 %44, %45, !dbg !23406
  br i1 %46, label %47, label %58, !dbg !23407

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !23408
  %49 = trunc i8 %48 to i1, !dbg !23408
  br i1 %49, label %50, label %54, !dbg !23408

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !23409
  %52 = trunc i64 %51 to i32, !dbg !23410
  %53 = zext i32 %52 to i64, !dbg !23411
  br label %56, !dbg !23408

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !23412
  br label %56, !dbg !23408

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !23408
  store i64 %57, i64* %2, align 8, !dbg !23413
  br label %195, !dbg !23413

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !20562, metadata !DIExpression()), !dbg !23414
  store i64 0, i64* %12, align 8, !dbg !23414
  %59 = load i8, i8* %10, align 1, !dbg !23415
  %60 = trunc i8 %59 to i1, !dbg !23415
  br i1 %60, label %86, label %61, !dbg !23416

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !20567, metadata !DIExpression()), !dbg !23417
  %62 = load i8, i8* %11, align 1, !dbg !23418
  %63 = trunc i8 %62 to i1, !dbg !23418
  br i1 %63, label %64, label %68, !dbg !23418

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !23419
  %66 = load i32, i32* %5, align 4, !dbg !23420
  %67 = udiv i32 %65, %66, !dbg !23421
  br label %70, !dbg !23418

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !23422
  br label %70, !dbg !23418

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !23418
  store i32 %71, i32* %13, align 4, !dbg !23417
  %72 = load i8, i8* %8, align 1, !dbg !23423
  %73 = trunc i8 %72 to i1, !dbg !23423
  br i1 %73, label %74, label %78, !dbg !23424

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !23425
  %76 = sub i32 %75, 1, !dbg !23426
  %77 = zext i32 %76 to i64, !dbg !23425
  store i64 %77, i64* %12, align 8, !dbg !23427
  br label %78, !dbg !23428

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !23429
  %80 = trunc i8 %79 to i1, !dbg !23429
  br i1 %80, label %81, label %85, !dbg !23430

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !23431
  %83 = udiv i32 %82, 2, !dbg !23432
  %84 = zext i32 %83 to i64, !dbg !23431
  store i64 %84, i64* %12, align 8, !dbg !23433
  br label %85, !dbg !23434

85:                                               ; preds = %81, %78
  br label %86, !dbg !23435

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !23436
  %88 = trunc i8 %87 to i1, !dbg !23436
  br i1 %88, label %89, label %114, !dbg !23437

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !23438
  %91 = load i64, i64* %3, align 8, !dbg !23439
  %92 = add i64 %91, %90, !dbg !23439
  store i64 %92, i64* %3, align 8, !dbg !23439
  %93 = load i8, i8* %7, align 1, !dbg !23440
  %94 = trunc i8 %93 to i1, !dbg !23440
  br i1 %94, label %95, label %106, !dbg !23441

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !23442
  %97 = icmp ult i64 %96, 4294967296, !dbg !23443
  br i1 %97, label %98, label %106, !dbg !23444

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !23445
  %100 = trunc i64 %99 to i32, !dbg !23446
  %101 = load i32, i32* %4, align 4, !dbg !23447
  %102 = load i32, i32* %5, align 4, !dbg !23448
  %103 = udiv i32 %101, %102, !dbg !23449
  %104 = udiv i32 %100, %103, !dbg !23450
  %105 = zext i32 %104 to i64, !dbg !23451
  store i64 %105, i64* %2, align 8, !dbg !23452
  br label %195, !dbg !23452

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !23453
  %108 = load i32, i32* %4, align 4, !dbg !23454
  %109 = zext i32 %108 to i64, !dbg !23455
  %110 = load i32, i32* %5, align 4, !dbg !23456
  %111 = zext i32 %110 to i64, !dbg !23456
  %112 = udiv i64 %109, %111, !dbg !23457
  %113 = udiv i64 %107, %112, !dbg !23458
  store i64 %113, i64* %2, align 8, !dbg !23459
  br label %195, !dbg !23459

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !23460
  %116 = trunc i8 %115 to i1, !dbg !23460
  br i1 %116, label %117, label %136, !dbg !23461

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !23462
  %119 = trunc i8 %118 to i1, !dbg !23462
  br i1 %119, label %120, label %128, !dbg !23463

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !23464
  %122 = trunc i64 %121 to i32, !dbg !23465
  %123 = load i32, i32* %5, align 4, !dbg !23466
  %124 = load i32, i32* %4, align 4, !dbg !23467
  %125 = udiv i32 %123, %124, !dbg !23468
  %126 = mul i32 %122, %125, !dbg !23469
  %127 = zext i32 %126 to i64, !dbg !23470
  store i64 %127, i64* %2, align 8, !dbg !23471
  br label %195, !dbg !23471

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !23472
  %130 = load i32, i32* %5, align 4, !dbg !23473
  %131 = zext i32 %130 to i64, !dbg !23474
  %132 = load i32, i32* %4, align 4, !dbg !23475
  %133 = zext i32 %132 to i64, !dbg !23475
  %134 = udiv i64 %131, %133, !dbg !23476
  %135 = mul i64 %129, %134, !dbg !23477
  store i64 %135, i64* %2, align 8, !dbg !23478
  br label %195, !dbg !23478

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !23479
  %138 = trunc i8 %137 to i1, !dbg !23479
  br i1 %138, label %139, label %151, !dbg !23480

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !23481
  %141 = load i32, i32* %5, align 4, !dbg !23482
  %142 = zext i32 %141 to i64, !dbg !23482
  %143 = mul i64 %140, %142, !dbg !23483
  %144 = load i64, i64* %12, align 8, !dbg !23484
  %145 = add i64 %143, %144, !dbg !23485
  %146 = load i32, i32* %4, align 4, !dbg !23486
  %147 = zext i32 %146 to i64, !dbg !23486
  %148 = udiv i64 %145, %147, !dbg !23487
  %149 = trunc i64 %148 to i32, !dbg !23488
  %150 = zext i32 %149 to i64, !dbg !23488
  store i64 %150, i64* %2, align 8, !dbg !23489
  br label %195, !dbg !23489

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !23490
  %153 = trunc i8 %152 to i1, !dbg !23490
  br i1 %153, label %154, label %174, !dbg !23491

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !23492
  %156 = zext i32 %155 to i64, !dbg !23492
  %157 = mul i64 31536000, %156, !dbg !23492
  %158 = add i64 %157, 4294967294, !dbg !23492
  %159 = udiv i64 %158, 4294967295, !dbg !23492
  %160 = load i32, i32* %5, align 4, !dbg !23492
  %161 = zext i32 %160 to i64, !dbg !23492
  %162 = mul i64 %159, %161, !dbg !23492
  %163 = icmp ule i64 %162, 4294967295, !dbg !23492
  br i1 %163, label %164, label %174, !dbg !23493

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !23494
  %166 = load i32, i32* %5, align 4, !dbg !23495
  %167 = zext i32 %166 to i64, !dbg !23495
  %168 = mul i64 %165, %167, !dbg !23496
  %169 = load i64, i64* %12, align 8, !dbg !23497
  %170 = add i64 %168, %169, !dbg !23498
  %171 = load i32, i32* %4, align 4, !dbg !23499
  %172 = zext i32 %171 to i64, !dbg !23499
  %173 = udiv i64 %170, %172, !dbg !23500
  store i64 %173, i64* %2, align 8, !dbg !23501
  br label %195, !dbg !23501

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !23502
  %176 = load i32, i32* %4, align 4, !dbg !23503
  %177 = zext i32 %176 to i64, !dbg !23503
  %178 = udiv i64 %175, %177, !dbg !23504
  %179 = load i32, i32* %5, align 4, !dbg !23505
  %180 = zext i32 %179 to i64, !dbg !23505
  %181 = mul i64 %178, %180, !dbg !23506
  %182 = load i64, i64* %3, align 8, !dbg !23507
  %183 = load i32, i32* %4, align 4, !dbg !23508
  %184 = zext i32 %183 to i64, !dbg !23508
  %185 = urem i64 %182, %184, !dbg !23509
  %186 = load i32, i32* %5, align 4, !dbg !23510
  %187 = zext i32 %186 to i64, !dbg !23510
  %188 = mul i64 %185, %187, !dbg !23511
  %189 = load i64, i64* %12, align 8, !dbg !23512
  %190 = add i64 %188, %189, !dbg !23513
  %191 = load i32, i32* %4, align 4, !dbg !23514
  %192 = zext i32 %191 to i64, !dbg !23514
  %193 = udiv i64 %190, %192, !dbg !23515
  %194 = add i64 %181, %193, !dbg !23516
  store i64 %194, i64* %2, align 8, !dbg !23517
  br label %195, !dbg !23517

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !23518
  ret i64 %196, !dbg !23519
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_us_floor64(i64 noundef %0) #1 !dbg !23520 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !23521, metadata !DIExpression()), !dbg !23522
  %15 = load i64, i64* %14, align 8, !dbg !23523
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !20509, metadata !DIExpression()), !dbg !23524
  store i32 32768, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20513, metadata !DIExpression()), !dbg !23526
  store i32 1000000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20515, metadata !DIExpression()), !dbg !23527
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !20517, metadata !DIExpression()), !dbg !23528
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !20519, metadata !DIExpression()), !dbg !23529
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !20521, metadata !DIExpression()), !dbg !23530
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !20523, metadata !DIExpression()), !dbg !23531
  call void @llvm.dbg.declare(metadata i8* %10, metadata !20525, metadata !DIExpression()), !dbg !23532
  %16 = load i8, i8* %6, align 1, !dbg !23533
  %17 = trunc i8 %16 to i1, !dbg !23533
  br i1 %17, label %18, label %27, !dbg !23534

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !23535
  %20 = load i32, i32* %4, align 4, !dbg !23536
  %21 = icmp ugt i32 %19, %20, !dbg !23537
  br i1 %21, label %22, label %27, !dbg !23538

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !23539
  %24 = load i32, i32* %4, align 4, !dbg !23540
  %25 = urem i32 %23, %24, !dbg !23541
  %26 = icmp eq i32 %25, 0, !dbg !23542
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !23543
  %29 = zext i1 %28 to i8, !dbg !23532
  store i8 %29, i8* %10, align 1, !dbg !23532
  call void @llvm.dbg.declare(metadata i8* %11, metadata !20538, metadata !DIExpression()), !dbg !23544
  %30 = load i8, i8* %6, align 1, !dbg !23545
  %31 = trunc i8 %30 to i1, !dbg !23545
  br i1 %31, label %32, label %41, !dbg !23546

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !23547
  %34 = load i32, i32* %5, align 4, !dbg !23548
  %35 = icmp ugt i32 %33, %34, !dbg !23549
  br i1 %35, label %36, label %41, !dbg !23550

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !23551
  %38 = load i32, i32* %5, align 4, !dbg !23552
  %39 = urem i32 %37, %38, !dbg !23553
  %40 = icmp eq i32 %39, 0, !dbg !23554
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !23543
  %43 = zext i1 %42 to i8, !dbg !23544
  store i8 %43, i8* %11, align 1, !dbg !23544
  %44 = load i32, i32* %4, align 4, !dbg !23555
  %45 = load i32, i32* %5, align 4, !dbg !23556
  %46 = icmp eq i32 %44, %45, !dbg !23557
  br i1 %46, label %47, label %58, !dbg !23558

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !23559
  %49 = trunc i8 %48 to i1, !dbg !23559
  br i1 %49, label %50, label %54, !dbg !23559

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !23560
  %52 = trunc i64 %51 to i32, !dbg !23561
  %53 = zext i32 %52 to i64, !dbg !23562
  br label %56, !dbg !23559

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !23563
  br label %56, !dbg !23559

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !23559
  store i64 %57, i64* %2, align 8, !dbg !23564
  br label %195, !dbg !23564

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !20562, metadata !DIExpression()), !dbg !23565
  store i64 0, i64* %12, align 8, !dbg !23565
  %59 = load i8, i8* %10, align 1, !dbg !23566
  %60 = trunc i8 %59 to i1, !dbg !23566
  br i1 %60, label %86, label %61, !dbg !23567

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !20567, metadata !DIExpression()), !dbg !23568
  %62 = load i8, i8* %11, align 1, !dbg !23569
  %63 = trunc i8 %62 to i1, !dbg !23569
  br i1 %63, label %64, label %68, !dbg !23569

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !23570
  %66 = load i32, i32* %5, align 4, !dbg !23571
  %67 = udiv i32 %65, %66, !dbg !23572
  br label %70, !dbg !23569

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !23573
  br label %70, !dbg !23569

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !23569
  store i32 %71, i32* %13, align 4, !dbg !23568
  %72 = load i8, i8* %8, align 1, !dbg !23574
  %73 = trunc i8 %72 to i1, !dbg !23574
  br i1 %73, label %74, label %78, !dbg !23575

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !23576
  %76 = sub i32 %75, 1, !dbg !23577
  %77 = zext i32 %76 to i64, !dbg !23576
  store i64 %77, i64* %12, align 8, !dbg !23578
  br label %78, !dbg !23579

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !23580
  %80 = trunc i8 %79 to i1, !dbg !23580
  br i1 %80, label %81, label %85, !dbg !23581

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !23582
  %83 = udiv i32 %82, 2, !dbg !23583
  %84 = zext i32 %83 to i64, !dbg !23582
  store i64 %84, i64* %12, align 8, !dbg !23584
  br label %85, !dbg !23585

85:                                               ; preds = %81, %78
  br label %86, !dbg !23586

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !23587
  %88 = trunc i8 %87 to i1, !dbg !23587
  br i1 %88, label %89, label %114, !dbg !23588

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !23589
  %91 = load i64, i64* %3, align 8, !dbg !23590
  %92 = add i64 %91, %90, !dbg !23590
  store i64 %92, i64* %3, align 8, !dbg !23590
  %93 = load i8, i8* %7, align 1, !dbg !23591
  %94 = trunc i8 %93 to i1, !dbg !23591
  br i1 %94, label %95, label %106, !dbg !23592

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !23593
  %97 = icmp ult i64 %96, 4294967296, !dbg !23594
  br i1 %97, label %98, label %106, !dbg !23595

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !23596
  %100 = trunc i64 %99 to i32, !dbg !23597
  %101 = load i32, i32* %4, align 4, !dbg !23598
  %102 = load i32, i32* %5, align 4, !dbg !23599
  %103 = udiv i32 %101, %102, !dbg !23600
  %104 = udiv i32 %100, %103, !dbg !23601
  %105 = zext i32 %104 to i64, !dbg !23602
  store i64 %105, i64* %2, align 8, !dbg !23603
  br label %195, !dbg !23603

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !23604
  %108 = load i32, i32* %4, align 4, !dbg !23605
  %109 = zext i32 %108 to i64, !dbg !23606
  %110 = load i32, i32* %5, align 4, !dbg !23607
  %111 = zext i32 %110 to i64, !dbg !23607
  %112 = udiv i64 %109, %111, !dbg !23608
  %113 = udiv i64 %107, %112, !dbg !23609
  store i64 %113, i64* %2, align 8, !dbg !23610
  br label %195, !dbg !23610

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !23611
  %116 = trunc i8 %115 to i1, !dbg !23611
  br i1 %116, label %117, label %136, !dbg !23612

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !23613
  %119 = trunc i8 %118 to i1, !dbg !23613
  br i1 %119, label %120, label %128, !dbg !23614

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !23615
  %122 = trunc i64 %121 to i32, !dbg !23616
  %123 = load i32, i32* %5, align 4, !dbg !23617
  %124 = load i32, i32* %4, align 4, !dbg !23618
  %125 = udiv i32 %123, %124, !dbg !23619
  %126 = mul i32 %122, %125, !dbg !23620
  %127 = zext i32 %126 to i64, !dbg !23621
  store i64 %127, i64* %2, align 8, !dbg !23622
  br label %195, !dbg !23622

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !23623
  %130 = load i32, i32* %5, align 4, !dbg !23624
  %131 = zext i32 %130 to i64, !dbg !23625
  %132 = load i32, i32* %4, align 4, !dbg !23626
  %133 = zext i32 %132 to i64, !dbg !23626
  %134 = udiv i64 %131, %133, !dbg !23627
  %135 = mul i64 %129, %134, !dbg !23628
  store i64 %135, i64* %2, align 8, !dbg !23629
  br label %195, !dbg !23629

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !23630
  %138 = trunc i8 %137 to i1, !dbg !23630
  br i1 %138, label %139, label %151, !dbg !23631

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !23632
  %141 = load i32, i32* %5, align 4, !dbg !23633
  %142 = zext i32 %141 to i64, !dbg !23633
  %143 = mul i64 %140, %142, !dbg !23634
  %144 = load i64, i64* %12, align 8, !dbg !23635
  %145 = add i64 %143, %144, !dbg !23636
  %146 = load i32, i32* %4, align 4, !dbg !23637
  %147 = zext i32 %146 to i64, !dbg !23637
  %148 = udiv i64 %145, %147, !dbg !23638
  %149 = trunc i64 %148 to i32, !dbg !23639
  %150 = zext i32 %149 to i64, !dbg !23639
  store i64 %150, i64* %2, align 8, !dbg !23640
  br label %195, !dbg !23640

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !23641
  %153 = trunc i8 %152 to i1, !dbg !23641
  br i1 %153, label %154, label %174, !dbg !23642

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !23643
  %156 = zext i32 %155 to i64, !dbg !23643
  %157 = mul i64 31536000, %156, !dbg !23643
  %158 = add i64 %157, 4294967294, !dbg !23643
  %159 = udiv i64 %158, 4294967295, !dbg !23643
  %160 = load i32, i32* %5, align 4, !dbg !23643
  %161 = zext i32 %160 to i64, !dbg !23643
  %162 = mul i64 %159, %161, !dbg !23643
  %163 = icmp ule i64 %162, 4294967295, !dbg !23643
  br i1 %163, label %164, label %174, !dbg !23644

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !23645
  %166 = load i32, i32* %5, align 4, !dbg !23646
  %167 = zext i32 %166 to i64, !dbg !23646
  %168 = mul i64 %165, %167, !dbg !23647
  %169 = load i64, i64* %12, align 8, !dbg !23648
  %170 = add i64 %168, %169, !dbg !23649
  %171 = load i32, i32* %4, align 4, !dbg !23650
  %172 = zext i32 %171 to i64, !dbg !23650
  %173 = udiv i64 %170, %172, !dbg !23651
  store i64 %173, i64* %2, align 8, !dbg !23652
  br label %195, !dbg !23652

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !23653
  %176 = load i32, i32* %4, align 4, !dbg !23654
  %177 = zext i32 %176 to i64, !dbg !23654
  %178 = udiv i64 %175, %177, !dbg !23655
  %179 = load i32, i32* %5, align 4, !dbg !23656
  %180 = zext i32 %179 to i64, !dbg !23656
  %181 = mul i64 %178, %180, !dbg !23657
  %182 = load i64, i64* %3, align 8, !dbg !23658
  %183 = load i32, i32* %4, align 4, !dbg !23659
  %184 = zext i32 %183 to i64, !dbg !23659
  %185 = urem i64 %182, %184, !dbg !23660
  %186 = load i32, i32* %5, align 4, !dbg !23661
  %187 = zext i32 %186 to i64, !dbg !23661
  %188 = mul i64 %185, %187, !dbg !23662
  %189 = load i64, i64* %12, align 8, !dbg !23663
  %190 = add i64 %188, %189, !dbg !23664
  %191 = load i32, i32* %4, align 4, !dbg !23665
  %192 = zext i32 %191 to i64, !dbg !23665
  %193 = udiv i64 %190, %192, !dbg !23666
  %194 = add i64 %181, %193, !dbg !23667
  store i64 %194, i64* %2, align 8, !dbg !23668
  br label %195, !dbg !23668

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !23669
  ret i64 %196, !dbg !23670
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_wakeup(%struct.k_thread.132* noundef %0) #1 !dbg !23671 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !23672, metadata !DIExpression()), !dbg !23673
  br label %4, !dbg !23674

4:                                                ; preds = %1
  br label %5, !dbg !23675

5:                                                ; preds = %4
  %6 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23677
  %7 = call zeroext i1 @z_is_thread_pending(%struct.k_thread.132* noundef %6) #10, !dbg !23679
  br i1 %7, label %8, label %9, !dbg !23680

8:                                                ; preds = %5
  br label %31, !dbg !23681

9:                                                ; preds = %5
  %10 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23683
  %11 = call i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %10) #10, !dbg !23685
  %12 = icmp slt i32 %11, 0, !dbg !23686
  br i1 %12, label %13, label %22, !dbg !23687

13:                                               ; preds = %9
  %14 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23688
  %15 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %14, i32 0, i32 0, !dbg !23691
  %16 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %15, i32 0, i32 3, !dbg !23692
  %17 = load i8, i8* %16, align 1, !dbg !23692
  %18 = zext i8 %17 to i32, !dbg !23688
  %19 = icmp ne i32 %18, 16, !dbg !23693
  br i1 %19, label %20, label %21, !dbg !23694

20:                                               ; preds = %13
  br label %31, !dbg !23695

21:                                               ; preds = %13
  br label %22, !dbg !23697

22:                                               ; preds = %21, %9
  %23 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23698
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.132* noundef %23) #10, !dbg !23699
  %24 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23700
  call void @z_ready_thread(%struct.k_thread.132* noundef %24) #10, !dbg !23701
  call void @flag_ipi() #10, !dbg !23702
  call void @llvm.dbg.declare(metadata i32* %2, metadata !21573, metadata !DIExpression()) #9, !dbg !23703
  %25 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !23707, !srcloc !21580
  store i32 %25, i32* %2, align 4, !dbg !23707
  %26 = load i32, i32* %2, align 4, !dbg !23708
  %27 = icmp ne i32 %26, 0, !dbg !23709
  %28 = zext i1 %27 to i64, !dbg !23709
  %29 = select i1 %27, i32 1, i32 0, !dbg !23709
  br i1 %27, label %31, label %30, !dbg !23710

30:                                               ; preds = %22
  call void @z_reschedule_unlocked() #10, !dbg !23711
  br label %31, !dbg !23713

31:                                               ; preds = %8, %20, %30, %22
  ret void, !dbg !23714
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_pending(%struct.k_thread.132* noundef %0) #1 !dbg !23715 {
  %2 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !23716, metadata !DIExpression()), !dbg !23717
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !23718
  %4 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %3, i32 0, i32 0, !dbg !23719
  %5 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %4, i32 0, i32 3, !dbg !23720
  %6 = load i8, i8* %5, align 1, !dbg !23720
  %7 = zext i8 %6 to i32, !dbg !23718
  %8 = and i32 %7, 2, !dbg !23721
  %9 = icmp ne i32 %8, 0, !dbg !23722
  ret i1 %9, !dbg !23723
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.132* @z_impl_z_current_get() #1 !dbg !23724 {
  %1 = alloca %struct.k_thread.132*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %1, metadata !23727, metadata !DIExpression()), !dbg !23728
  %2 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23729
  store %struct.k_thread.132* %2, %struct.k_thread.132** %1, align 4, !dbg !23728
  %3 = load %struct.k_thread.132*, %struct.k_thread.132** %1, align 4, !dbg !23730
  ret %struct.k_thread.132* %3, !dbg !23731
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_is_preempt_thread() #1 !dbg !23732 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !21573, metadata !DIExpression()) #9, !dbg !23733
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !23736, !srcloc !21580
  store i32 %2, i32* %1, align 4, !dbg !23736
  %3 = load i32, i32* %1, align 4, !dbg !23737
  %4 = icmp ne i32 %3, 0, !dbg !23738
  %5 = zext i1 %4 to i64, !dbg !23738
  %6 = select i1 %4, i32 1, i32 0, !dbg !23738
  br i1 %4, label %11, label %7, !dbg !23739

7:                                                ; preds = %0
  %8 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23740
  %9 = call i32 @is_preempt(%struct.k_thread.132* noundef %8) #10, !dbg !23741
  %10 = icmp ne i32 %9, 0, !dbg !23739
  br label %11

11:                                               ; preds = %7, %0
  %12 = phi i1 [ false, %0 ], [ %10, %7 ], !dbg !23742
  %13 = zext i1 %12 to i32, !dbg !23739
  ret i32 %13, !dbg !23743
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_abort(%struct.k_thread.132* noundef %0) #1 !dbg !23744 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca %struct.z_spinlock_key, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %struct.z_spinlock_key, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.132*, align 4
  %19 = alloca %struct.z_spinlock_key, align 4
  %20 = alloca i32, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %18, metadata !23745, metadata !DIExpression()), !dbg !23746
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %19, metadata !23747, metadata !DIExpression()), !dbg !23748
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !20439, metadata !DIExpression()) #9, !dbg !23749
  %21 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !23751
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %16, metadata !20447, metadata !DIExpression()) #9, !dbg !23752
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20449, metadata !DIExpression()) #9, !dbg !23753
  %22 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !23755, !srcloc !20454
  store i32 %22, i32* %3, align 4, !dbg !23755
  %23 = load i32, i32* %3, align 4, !dbg !23756
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !23757
  store i32 %23, i32* %24, align 4, !dbg !23758
  %25 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %16, i32 0, i32 0, !dbg !23759
  %26 = load i32, i32* %25, align 4, !dbg !23759
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %19, i32 0, i32 0, !dbg !23760
  store i32 %26, i32* %27, align 4, !dbg !23760
  %28 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !23761
  %29 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %28, i32 0, i32 0, !dbg !23763
  %30 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %29, i32 0, i32 2, !dbg !23764
  %31 = load i8, i8* %30, align 4, !dbg !23764
  %32 = zext i8 %31 to i32, !dbg !23761
  %33 = and i32 %32, 1, !dbg !23765
  %34 = icmp ne i32 %33, 0, !dbg !23766
  br i1 %34, label %35, label %52, !dbg !23767

35:                                               ; preds = %1
  %36 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %19, i32 0, i32 0, !dbg !23768
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !23768
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !23768
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !20479, metadata !DIExpression()) #9, !dbg !23770
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !20485, metadata !DIExpression()) #9, !dbg !23772
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !23773
  %42 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !23774
  %43 = load i32, i32* %42, align 4, !dbg !23774
  store i32 %43, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20489, metadata !DIExpression()) #9, !dbg !23775
  %44 = load i32, i32* %6, align 4, !dbg !23777
  %45 = icmp ne i32 %44, 0, !dbg !23778
  br i1 %45, label %46, label %47, !dbg !23779

46:                                               ; preds = %35
  br label %48, !dbg !23780

47:                                               ; preds = %35
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !23781, !srcloc !20500
  br label %48, !dbg !23782

48:                                               ; preds = %46, %47
  call void @llvm.dbg.declare(metadata i32* %20, metadata !23783, metadata !DIExpression()), !dbg !23784
  store i32 4, i32* %20, align 4, !dbg !23784
  br label %49, !dbg !23784

49:                                               ; preds = %48
  %50 = load i32, i32* %20, align 4, !dbg !23785
  call void asm sideeffect "cpsie i\0A\09svc $1\0A\09", "{r0},i,~{memory}"(i32 %50, i32 2) #9, !dbg !23785, !srcloc !23787
  br label %51, !dbg !23785

51:                                               ; preds = %49
  br label %110, !dbg !23788

52:                                               ; preds = %1
  %53 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !23789
  %54 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %53, i32 0, i32 0, !dbg !23791
  %55 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %54, i32 0, i32 3, !dbg !23792
  %56 = load i8, i8* %55, align 1, !dbg !23792
  %57 = zext i8 %56 to i32, !dbg !23789
  %58 = and i32 %57, 8, !dbg !23793
  %59 = icmp ne i32 %58, 0, !dbg !23794
  br i1 %59, label %60, label %74, !dbg !23795

60:                                               ; preds = %52
  %61 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %19, i32 0, i32 0, !dbg !23796
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !23796
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !23796
  %64 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !20479, metadata !DIExpression()) #9, !dbg !23798
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !20485, metadata !DIExpression()) #9, !dbg !23800
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !23801
  %67 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !23802
  %68 = load i32, i32* %67, align 4, !dbg !23802
  store i32 %68, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20489, metadata !DIExpression()) #9, !dbg !23803
  %69 = load i32, i32* %5, align 4, !dbg !23805
  %70 = icmp ne i32 %69, 0, !dbg !23806
  br i1 %70, label %71, label %72, !dbg !23807

71:                                               ; preds = %60
  br label %73, !dbg !23808

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !23809, !srcloc !20500
  br label %73, !dbg !23810

73:                                               ; preds = %71, %72
  br label %110, !dbg !23811

74:                                               ; preds = %52
  %75 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !23812
  call void @end_thread(%struct.k_thread.132* noundef %75) #10, !dbg !23813
  %76 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !23814
  %77 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !23816
  %78 = icmp eq %struct.k_thread.132* %76, %77, !dbg !23817
  br i1 %78, label %79, label %96, !dbg !23818

79:                                               ; preds = %74
  call void @llvm.dbg.declare(metadata i32* %2, metadata !21573, metadata !DIExpression()) #9, !dbg !23819
  %80 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !23822, !srcloc !21580
  store i32 %80, i32* %2, align 4, !dbg !23822
  %81 = load i32, i32* %2, align 4, !dbg !23823
  %82 = icmp ne i32 %81, 0, !dbg !23824
  %83 = zext i1 %82 to i64, !dbg !23824
  %84 = select i1 %82, i32 1, i32 0, !dbg !23824
  br i1 %82, label %96, label %85, !dbg !23825

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %19, i32 0, i32 0, !dbg !23826
  %87 = bitcast i32* %86 to [1 x i32]*, !dbg !23826
  %88 = load [1 x i32], [1 x i32]* %87, align 4, !dbg !23826
  %89 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0
  %90 = bitcast i32* %89 to [1 x i32]*
  store [1 x i32] %88, [1 x i32]* %90, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !21523, metadata !DIExpression()) #9, !dbg !23828
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !21529, metadata !DIExpression()) #9, !dbg !23830
  %91 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !23831
  store %struct.k_spinlock.13* %91, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !21532, metadata !DIExpression()) #9, !dbg !23832
  %92 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !23834
  %93 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !23835
  %94 = load i32, i32* %93, align 4, !dbg !23835
  %95 = call i32 @z_swap_irqlock(i32 noundef %94) #13, !dbg !23836
  br label %96, !dbg !23837

96:                                               ; preds = %85, %79, %74
  %97 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %19, i32 0, i32 0, !dbg !23838
  %98 = bitcast i32* %97 to [1 x i32]*, !dbg !23838
  %99 = load [1 x i32], [1 x i32]* %98, align 4, !dbg !23838
  %100 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0
  %101 = bitcast i32* %100 to [1 x i32]*
  store [1 x i32] %99, [1 x i32]* %101, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !20479, metadata !DIExpression()) #9, !dbg !23839
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %14, metadata !20485, metadata !DIExpression()) #9, !dbg !23841
  %102 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !23842
  %103 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !23843
  %104 = load i32, i32* %103, align 4, !dbg !23843
  store i32 %104, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20489, metadata !DIExpression()) #9, !dbg !23844
  %105 = load i32, i32* %4, align 4, !dbg !23846
  %106 = icmp ne i32 %105, 0, !dbg !23847
  br i1 %106, label %107, label %108, !dbg !23848

107:                                              ; preds = %96
  br label %109, !dbg !23849

108:                                              ; preds = %96
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !23850, !srcloc !20500
  br label %109, !dbg !23851

109:                                              ; preds = %107, %108
  br label %110, !dbg !23852

110:                                              ; preds = %109, %73, %51
  ret void, !dbg !23852
}

; Function Attrs: noinline nounwind optnone
define internal void @end_thread(%struct.k_thread.132* noundef %0) #1 !dbg !23853 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca %struct.k_thread.132*, align 4
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  store %struct.k_thread.132* %0, %struct.k_thread.132** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !23854, metadata !DIExpression()), !dbg !23855
  %6 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23856
  %7 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %6, i32 0, i32 0, !dbg !23858
  %8 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %7, i32 0, i32 3, !dbg !23859
  %9 = load i8, i8* %8, align 1, !dbg !23859
  %10 = zext i8 %9 to i32, !dbg !23856
  %11 = and i32 %10, 8, !dbg !23860
  %12 = icmp eq i32 %11, 0, !dbg !23861
  br i1 %12, label %13, label %64, !dbg !23862

13:                                               ; preds = %1
  %14 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23863
  %15 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %14, i32 0, i32 0, !dbg !23865
  %16 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %15, i32 0, i32 3, !dbg !23866
  %17 = load i8, i8* %16, align 1, !dbg !23867
  %18 = zext i8 %17 to i32, !dbg !23867
  %19 = or i32 %18, 8, !dbg !23867
  %20 = trunc i32 %19 to i8, !dbg !23867
  store i8 %20, i8* %16, align 1, !dbg !23867
  %21 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23868
  %22 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %21, i32 0, i32 0, !dbg !23869
  %23 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %22, i32 0, i32 3, !dbg !23870
  %24 = load i8, i8* %23, align 1, !dbg !23871
  %25 = zext i8 %24 to i32, !dbg !23871
  %26 = and i32 %25, -33, !dbg !23871
  %27 = trunc i32 %26 to i8, !dbg !23871
  store i8 %27, i8* %23, align 1, !dbg !23871
  %28 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23872
  %29 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.132* noundef %28) #10, !dbg !23874
  br i1 %29, label %30, label %47, !dbg !23875

30:                                               ; preds = %13
  %31 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23876
  store %struct.k_thread.132* %31, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !20837, metadata !DIExpression()) #9, !dbg !23878
  %32 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !23880
  %33 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %32, i32 0, i32 0, !dbg !23881
  %34 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %33, i32 0, i32 3, !dbg !23882
  %35 = load i8, i8* %34, align 1, !dbg !23883
  %36 = zext i8 %35 to i32, !dbg !23883
  %37 = and i32 %36, -129, !dbg !23883
  %38 = trunc i32 %37 to i8, !dbg !23883
  store i8 %38, i8* %34, align 1, !dbg !23883
  %39 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !23884
  %40 = call zeroext i1 @should_queue_thread(%struct.k_thread.132* noundef %39) #13, !dbg !23885
  br i1 %40, label %41, label %46, !dbg !23886

41:                                               ; preds = %30
  %42 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !23887
  store %struct.k_thread.132* %42, %struct.k_thread.132** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %3, metadata !20851, metadata !DIExpression()) #9, !dbg !23888
  %43 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23890
  store %struct.k_thread.132* %43, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !20856, metadata !DIExpression()), !dbg !23891
  %44 = bitcast i8* bitcast (%struct._dnode.120* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2, i32 1) to i8*) to %struct._dnode.120*, !dbg !23893
  %45 = load %struct.k_thread.132*, %struct.k_thread.132** %3, align 4, !dbg !23894
  call void @z_priq_dumb_remove(%struct._dnode.120* noundef %44, %struct.k_thread.132* noundef %45) #13, !dbg !23895
  br label %46, !dbg !23896

46:                                               ; preds = %30, %41
  br label %47, !dbg !23897

47:                                               ; preds = %46, %13
  %48 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23898
  %49 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %48, i32 0, i32 0, !dbg !23900
  %50 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %49, i32 0, i32 1, !dbg !23901
  %51 = load %union.anon.121*, %union.anon.121** %50, align 8, !dbg !23901
  %52 = icmp ne %union.anon.121* %51, null, !dbg !23902
  br i1 %52, label %53, label %55, !dbg !23903

53:                                               ; preds = %47
  %54 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23904
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %54) #10, !dbg !23906
  br label %55, !dbg !23907

55:                                               ; preds = %53, %47
  %56 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23908
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %56) #10, !dbg !23909
  %58 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23910
  %59 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %58, i32 0, i32 3, !dbg !23911
  call void @unpend_all(%union.anon.121* noundef %59) #10, !dbg !23912
  call void @update_cache(i32 noundef 1) #10, !dbg !23913
  br label %60, !dbg !23914

60:                                               ; preds = %55
  br label %61, !dbg !23915

61:                                               ; preds = %60
  br label %62, !dbg !23917

62:                                               ; preds = %61
  br label %63, !dbg !23918

63:                                               ; preds = %62
  br label %64, !dbg !23920

64:                                               ; preds = %63, %1
  ret void, !dbg !23921
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_all(%union.anon.121* noundef %0) #1 !dbg !23922 {
  %2 = alloca %struct.k_thread.132*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.121*, align 4
  %5 = alloca %struct.k_thread.132*, align 4
  store %union.anon.121* %0, %union.anon.121** %4, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %4, metadata !23925, metadata !DIExpression()), !dbg !23926
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %5, metadata !23927, metadata !DIExpression()), !dbg !23928
  br label %6, !dbg !23929

6:                                                ; preds = %10, %1
  %7 = load %union.anon.121*, %union.anon.121** %4, align 4, !dbg !23930
  %8 = call %struct.k_thread.132* @z_waitq_head(%union.anon.121* noundef %7) #10, !dbg !23931
  store %struct.k_thread.132* %8, %struct.k_thread.132** %5, align 4, !dbg !23932
  %9 = icmp ne %struct.k_thread.132* %8, null, !dbg !23933
  br i1 %9, label %10, label %20, !dbg !23929

10:                                               ; preds = %6
  %11 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23934
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %11) #10, !dbg !23936
  %12 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23937
  %13 = call i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %12) #10, !dbg !23938
  %14 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23939
  store %struct.k_thread.132* %14, %struct.k_thread.132** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %2, metadata !23940, metadata !DIExpression()), !dbg !23944
  store i32 0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23946, metadata !DIExpression()), !dbg !23947
  %15 = load i32, i32* %3, align 4, !dbg !23948
  %16 = load %struct.k_thread.132*, %struct.k_thread.132** %2, align 4, !dbg !23949
  %17 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %16, i32 0, i32 6, !dbg !23950
  %18 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %17, i32 0, i32 1, !dbg !23951
  store i32 %15, i32* %18, align 4, !dbg !23952
  %19 = load %struct.k_thread.132*, %struct.k_thread.132** %5, align 4, !dbg !23953
  call void @ready_thread(%struct.k_thread.132* noundef %19) #10, !dbg !23954
  br label %6, !dbg !23929, !llvm.loop !23955

20:                                               ; preds = %6
  ret void, !dbg !23957
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread.132* noundef %0, [1 x i64] %1) #1 !dbg !23958 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_thread.132*, align 4
  %15 = alloca %struct.z_spinlock_key, align 4
  %16 = alloca i32, align 4
  %17 = alloca %union.argument_value, align 8
  %18 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %19 = bitcast i64* %18 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %19, align 8
  store %struct.k_thread.132* %0, %struct.k_thread.132** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %14, metadata !23961, metadata !DIExpression()), !dbg !23962
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !23963, metadata !DIExpression()), !dbg !23964
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %15, metadata !23965, metadata !DIExpression()), !dbg !23966
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !20439, metadata !DIExpression()) #9, !dbg !23967
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !23969
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !20447, metadata !DIExpression()) #9, !dbg !23970
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20449, metadata !DIExpression()) #9, !dbg !23971
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !23973, !srcloc !20454
  store i32 %21, i32* %3, align 4, !dbg !23973
  %22 = load i32, i32* %3, align 4, !dbg !23974
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !23975
  store i32 %22, i32* %23, align 4, !dbg !23976
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !23977
  %25 = load i32, i32* %24, align 4, !dbg !23977
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !23978
  store i32 %25, i32* %26, align 4, !dbg !23978
  call void @llvm.dbg.declare(metadata i32* %16, metadata !23979, metadata !DIExpression()), !dbg !23980
  store i32 0, i32* %16, align 4, !dbg !23980
  br label %27, !dbg !23981

27:                                               ; preds = %2
  br label %28, !dbg !23982

28:                                               ; preds = %27
  %29 = load %struct.k_thread.132*, %struct.k_thread.132** %14, align 4, !dbg !23984
  %30 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %29, i32 0, i32 0, !dbg !23986
  %31 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %30, i32 0, i32 3, !dbg !23987
  %32 = load i8, i8* %31, align 1, !dbg !23987
  %33 = zext i8 %32 to i32, !dbg !23984
  %34 = and i32 %33, 8, !dbg !23988
  %35 = icmp ne i32 %34, 0, !dbg !23989
  br i1 %35, label %36, label %37, !dbg !23990

36:                                               ; preds = %28
  store i32 0, i32* %16, align 4, !dbg !23991
  br label %81, !dbg !23993

37:                                               ; preds = %28
  %38 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !23994
  %39 = load i64, i64* %38, align 8, !dbg !23994
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %17, i32 0, i32 0, !dbg !23994
  store i64 0, i64* %40, align 8, !dbg !23994
  %41 = icmp eq i64 %39, 0, !dbg !23994
  br i1 %41, label %42, label %43, !dbg !23996

42:                                               ; preds = %37
  store i32 -16, i32* %16, align 4, !dbg !23997
  br label %80, !dbg !23999

43:                                               ; preds = %37
  %44 = load %struct.k_thread.132*, %struct.k_thread.132** %14, align 4, !dbg !24000
  %45 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !24002
  %46 = icmp eq %struct.k_thread.132* %44, %45, !dbg !24003
  br i1 %46, label %55, label %47, !dbg !24004

47:                                               ; preds = %43
  %48 = load %struct.k_thread.132*, %struct.k_thread.132** %14, align 4, !dbg !24005
  %49 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %48, i32 0, i32 0, !dbg !24006
  %50 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %49, i32 0, i32 1, !dbg !24007
  %51 = load %union.anon.121*, %union.anon.121** %50, align 8, !dbg !24007
  %52 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !24008
  %53 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %52, i32 0, i32 3, !dbg !24009
  %54 = icmp eq %union.anon.121* %51, %53, !dbg !24010
  br i1 %54, label %55, label %56, !dbg !24011

55:                                               ; preds = %47, %43
  store i32 -45, i32* %16, align 4, !dbg !24012
  br label %79, !dbg !24014

56:                                               ; preds = %47
  %57 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !24015
  %58 = load %struct.k_thread.132*, %struct.k_thread.132** %14, align 4, !dbg !24017
  %59 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %58, i32 0, i32 3, !dbg !24018
  call void @add_to_waitq_locked(%struct.k_thread.132* noundef %57, %union.anon.121* noundef %59) #10, !dbg !24019
  %60 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !24020
  %61 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !24021
  %62 = bitcast i64* %61 to [1 x i64]*, !dbg !24021
  %63 = load [1 x i64], [1 x i64]* %62, align 8, !dbg !24021
  call void @add_thread_timeout(%struct.k_thread.132* noundef %60, [1 x i64] %63) #10, !dbg !24021
  br label %64, !dbg !24022

64:                                               ; preds = %56
  br label %65, !dbg !24023

65:                                               ; preds = %64
  %66 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !24025
  %67 = bitcast i32* %66 to [1 x i32]*, !dbg !24025
  %68 = load [1 x i32], [1 x i32]* %67, align 4, !dbg !24025
  %69 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %70 = bitcast i32* %69 to [1 x i32]*
  store [1 x i32] %68, [1 x i32]* %70, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !21523, metadata !DIExpression()) #9, !dbg !24026
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !21529, metadata !DIExpression()) #9, !dbg !24028
  %71 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !24029
  store %struct.k_spinlock.13* %71, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !21532, metadata !DIExpression()) #9, !dbg !24030
  %72 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !24032
  %73 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24033
  %74 = load i32, i32* %73, align 4, !dbg !24033
  %75 = call i32 @z_swap_irqlock(i32 noundef %74) #13, !dbg !24034
  store i32 %75, i32* %16, align 4, !dbg !24035
  br label %76, !dbg !24036

76:                                               ; preds = %65
  br label %77, !dbg !24037

77:                                               ; preds = %76
  %78 = load i32, i32* %16, align 4, !dbg !24039
  store i32 %78, i32* %12, align 4, !dbg !24040
  br label %98, !dbg !24040

79:                                               ; preds = %55
  br label %80

80:                                               ; preds = %79, %42
  br label %81

81:                                               ; preds = %80, %36
  br label %82, !dbg !24041

82:                                               ; preds = %81
  br label %83, !dbg !24042

83:                                               ; preds = %82
  %84 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !24044
  %85 = bitcast i32* %84 to [1 x i32]*, !dbg !24044
  %86 = load [1 x i32], [1 x i32]* %85, align 4, !dbg !24044
  %87 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0
  %88 = bitcast i32* %87 to [1 x i32]*
  store [1 x i32] %86, [1 x i32]* %88, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !20479, metadata !DIExpression()) #9, !dbg !24045
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !20485, metadata !DIExpression()) #9, !dbg !24047
  %89 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !24048
  %90 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !24049
  %91 = load i32, i32* %90, align 4, !dbg !24049
  store i32 %91, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20489, metadata !DIExpression()) #9, !dbg !24050
  %92 = load i32, i32* %4, align 4, !dbg !24052
  %93 = icmp ne i32 %92, 0, !dbg !24053
  br i1 %93, label %94, label %95, !dbg !24054

94:                                               ; preds = %83
  br label %96, !dbg !24055

95:                                               ; preds = %83
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24056, !srcloc !20500
  br label %96, !dbg !24057

96:                                               ; preds = %94, %95
  %97 = load i32, i32* %16, align 4, !dbg !24058
  store i32 %97, i32* %12, align 4, !dbg !24059
  br label %98, !dbg !24059

98:                                               ; preds = %96, %77
  %99 = load i32, i32* %12, align 4, !dbg !24060
  ret i32 %99, !dbg !24060
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_sched_wake(%union.anon.121* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !24061 {
  %4 = alloca %struct.k_thread.132*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.132*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.121*, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 4
  %18 = alloca %struct.k_thread.132*, align 4
  %19 = alloca i8, align 1
  %20 = alloca %struct.z_spinlock_key, align 4
  %21 = alloca %struct.z_spinlock_key, align 4
  store %union.anon.121* %0, %union.anon.121** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %15, metadata !24064, metadata !DIExpression()), !dbg !24065
  store i32 %1, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !24066, metadata !DIExpression()), !dbg !24067
  store i8* %2, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !24068, metadata !DIExpression()), !dbg !24069
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %18, metadata !24070, metadata !DIExpression()), !dbg !24071
  call void @llvm.dbg.declare(metadata i8* %19, metadata !24072, metadata !DIExpression()), !dbg !24073
  store i8 0, i8* %19, align 1, !dbg !24073
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %20, metadata !24074, metadata !DIExpression()), !dbg !24076
  %22 = bitcast %struct.z_spinlock_key* %20 to i8*, !dbg !24076
  call void @llvm.memset.p0i8.i32(i8* align 4 %22, i8 0, i32 4, i1 false), !dbg !24076
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %21, metadata !24077, metadata !DIExpression()), !dbg !24076
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !20439, metadata !DIExpression()) #9, !dbg !24078
  %23 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !24080
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !20447, metadata !DIExpression()) #9, !dbg !24081
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20449, metadata !DIExpression()) #9, !dbg !24082
  %24 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24084, !srcloc !20454
  store i32 %24, i32* %6, align 4, !dbg !24084
  %25 = load i32, i32* %6, align 4, !dbg !24085
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !24086
  store i32 %25, i32* %26, align 4, !dbg !24087
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !24088
  %28 = load i32, i32* %27, align 4, !dbg !24088
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %21, i32 0, i32 0, !dbg !24076
  store i32 %28, i32* %29, align 4, !dbg !24076
  br label %30, !dbg !24076

30:                                               ; preds = %73, %3
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %20, i32 0, i32 0, !dbg !24089
  %32 = load i32, i32* %31, align 4, !dbg !24089
  %33 = icmp ne i32 %32, 0, !dbg !24089
  %34 = xor i1 %33, true, !dbg !24089
  br i1 %34, label %35, label %75, !dbg !24076

35:                                               ; preds = %30
  %36 = load %union.anon.121*, %union.anon.121** %15, align 4, !dbg !24091
  %37 = getelementptr inbounds %union.anon.121, %union.anon.121* %36, i32 0, i32 0, !dbg !24093
  %38 = call %struct.k_thread.132* @z_priq_dumb_best(%struct._dnode.120* noundef %37) #10, !dbg !24094
  store %struct.k_thread.132* %38, %struct.k_thread.132** %18, align 4, !dbg !24095
  %39 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !24096
  %40 = icmp ne %struct.k_thread.132* %39, null, !dbg !24098
  br i1 %40, label %41, label %59, !dbg !24099

41:                                               ; preds = %35
  %42 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !24100
  %43 = load i32, i32* %16, align 4, !dbg !24102
  %44 = load i8*, i8** %17, align 4, !dbg !24103
  store %struct.k_thread.132* %42, %struct.k_thread.132** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %7, metadata !24104, metadata !DIExpression()) #9, !dbg !24109
  store i32 %43, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !24111, metadata !DIExpression()) #9, !dbg !24112
  store i8* %44, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !24113, metadata !DIExpression()) #9, !dbg !24114
  %45 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !24115
  %46 = load i32, i32* %8, align 4, !dbg !24116
  store %struct.k_thread.132* %45, %struct.k_thread.132** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.132** %4, metadata !23940, metadata !DIExpression()), !dbg !24117
  store i32 %46, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !23946, metadata !DIExpression()), !dbg !24119
  %47 = load i32, i32* %5, align 4, !dbg !24120
  %48 = load %struct.k_thread.132*, %struct.k_thread.132** %4, align 4, !dbg !24121
  %49 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %48, i32 0, i32 6, !dbg !24122
  %50 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %49, i32 0, i32 1, !dbg !24123
  store i32 %47, i32* %50, align 4, !dbg !24124
  %51 = load i8*, i8** %9, align 4, !dbg !24125
  %52 = load %struct.k_thread.132*, %struct.k_thread.132** %7, align 4, !dbg !24126
  %53 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %52, i32 0, i32 0, !dbg !24127
  %54 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %53, i32 0, i32 6, !dbg !24128
  store i8* %51, i8** %54, align 4, !dbg !24129
  %55 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !24130
  call void @unpend_thread_no_timeout(%struct.k_thread.132* noundef %55) #10, !dbg !24131
  %56 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !24132
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.132* noundef %56) #10, !dbg !24133
  %58 = load %struct.k_thread.132*, %struct.k_thread.132** %18, align 4, !dbg !24134
  call void @ready_thread(%struct.k_thread.132* noundef %58) #10, !dbg !24135
  store i8 1, i8* %19, align 1, !dbg !24136
  br label %59, !dbg !24137

59:                                               ; preds = %41, %35
  br label %60, !dbg !24138

60:                                               ; preds = %59
  %61 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %21, i32 0, i32 0, !dbg !24089
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !24089
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !24089
  %64 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !20479, metadata !DIExpression()) #9, !dbg !24139
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !20485, metadata !DIExpression()) #9, !dbg !24141
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !24142
  %67 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24143
  %68 = load i32, i32* %67, align 4, !dbg !24143
  store i32 %68, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !20489, metadata !DIExpression()) #9, !dbg !24144
  %69 = load i32, i32* %10, align 4, !dbg !24146
  %70 = icmp ne i32 %69, 0, !dbg !24147
  br i1 %70, label %71, label %72, !dbg !24148

71:                                               ; preds = %60
  br label %73, !dbg !24149

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24150, !srcloc !20500
  br label %73, !dbg !24151

73:                                               ; preds = %71, %72
  %74 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %20, i32 0, i32 0, !dbg !24089
  store i32 1, i32* %74, align 4, !dbg !24089
  br label %30, !dbg !24089, !llvm.loop !24152

75:                                               ; preds = %30
  %76 = load i8, i8* %19, align 1, !dbg !24154
  %77 = trunc i8 %76 to i1, !dbg !24154
  ret i1 %77, !dbg !24155
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_wait(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.121* noundef %2, [1 x i64] %3, i8** noundef %4) #1 !dbg !24156 {
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %union.argument_value, align 8
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.121*, align 4
  %10 = alloca i8**, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %13 = bitcast i32* %12 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %13, align 4
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0
  %15 = bitcast i64* %14 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %15, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !24160, metadata !DIExpression()), !dbg !24161
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !24162, metadata !DIExpression()), !dbg !24163
  store %union.anon.121* %2, %union.anon.121** %9, align 4
  call void @llvm.dbg.declare(metadata %union.anon.121** %9, metadata !24164, metadata !DIExpression()), !dbg !24165
  call void @llvm.dbg.declare(metadata %union.argument_value* %7, metadata !24166, metadata !DIExpression()), !dbg !24167
  store i8** %4, i8*** %10, align 4
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !24168, metadata !DIExpression()), !dbg !24169
  call void @llvm.dbg.declare(metadata i32* %11, metadata !24170, metadata !DIExpression()), !dbg !24171
  %16 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !24172
  %17 = load %union.anon.121*, %union.anon.121** %9, align 4, !dbg !24173
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24174
  %19 = bitcast i32* %18 to [1 x i32]*, !dbg !24174
  %20 = load [1 x i32], [1 x i32]* %19, align 4, !dbg !24174
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0, !dbg !24174
  %22 = bitcast i64* %21 to [1 x i64]*, !dbg !24174
  %23 = load [1 x i64], [1 x i64]* %22, align 8, !dbg !24174
  %24 = call i32 @z_pend_curr(%struct.k_spinlock.13* noundef %16, [1 x i32] %20, %union.anon.121* noundef %17, [1 x i64] %23) #10, !dbg !24174
  store i32 %24, i32* %11, align 4, !dbg !24171
  %25 = load i8**, i8*** %10, align 4, !dbg !24175
  %26 = icmp ne i8** %25, null, !dbg !24177
  br i1 %26, label %27, label %33, !dbg !24178

27:                                               ; preds = %5
  %28 = load %struct.k_thread.132*, %struct.k_thread.132** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !24179
  %29 = getelementptr inbounds %struct.k_thread.132, %struct.k_thread.132* %28, i32 0, i32 0, !dbg !24181
  %30 = getelementptr inbounds %struct._thread_base.125, %struct._thread_base.125* %29, i32 0, i32 6, !dbg !24182
  %31 = load i8*, i8** %30, align 4, !dbg !24182
  %32 = load i8**, i8*** %10, align 4, !dbg !24183
  store i8* %31, i8** %32, align 4, !dbg !24184
  br label %33, !dbg !24185

33:                                               ; preds = %27, %5
  %34 = load i32, i32* %11, align 4, !dbg !24186
  ret i32 %34, !dbg !24187
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_data_copy() #1 !dbg !24188 {
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #10, !dbg !24190
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #10, !dbg !24191
  ret void, !dbg !24192
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_add_timeout(%struct._timeout.124* noundef %0, void (%struct._timeout.124*)* noundef %1, [1 x i64] %2) #1 !dbg !24193 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct._timeout.124*, align 4
  %12 = alloca void (%struct._timeout.124*)*, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.z_spinlock_key, align 4
  %15 = alloca %struct.z_spinlock_key, align 4
  %16 = alloca %struct._timeout.124*, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %20, align 8
  store %struct._timeout.124* %0, %struct._timeout.124** %11, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %11, metadata !24200, metadata !DIExpression()), !dbg !24201
  store void (%struct._timeout.124*)* %1, void (%struct._timeout.124*)** %12, align 4
  call void @llvm.dbg.declare(metadata void (%struct._timeout.124*)** %12, metadata !24202, metadata !DIExpression()), !dbg !24203
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !24204, metadata !DIExpression()), !dbg !24205
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !24206
  %22 = load i64, i64* %21, align 8, !dbg !24206
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !24206
  store i64 -1, i64* %23, align 8, !dbg !24206
  %24 = icmp eq i64 %22, -1, !dbg !24206
  br i1 %24, label %25, label %26, !dbg !24208

25:                                               ; preds = %3
  br label %145, !dbg !24209

26:                                               ; preds = %3
  %27 = load void (%struct._timeout.124*)*, void (%struct._timeout.124*)** %12, align 4, !dbg !24211
  %28 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24212
  %29 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %28, i32 0, i32 1, !dbg !24213
  store void (%struct._timeout.124*)* %27, void (%struct._timeout.124*)** %29, align 8, !dbg !24214
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %14, metadata !24215, metadata !DIExpression()), !dbg !24221
  %30 = bitcast %struct.z_spinlock_key* %14 to i8*, !dbg !24221
  call void @llvm.memset.p0i8.i32(i8* align 4 %30, i8 0, i32 4, i1 false), !dbg !24221
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %15, metadata !24222, metadata !DIExpression()), !dbg !24221
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !24223, metadata !DIExpression()) #9, !dbg !24228
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !24230
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !24231, metadata !DIExpression()) #9, !dbg !24232
  call void @llvm.dbg.declare(metadata i32* %5, metadata !24233, metadata !DIExpression()) #9, !dbg !24235
  %32 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24237, !srcloc !24238
  store i32 %32, i32* %5, align 4, !dbg !24237
  %33 = load i32, i32* %5, align 4, !dbg !24239
  %34 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !24240
  store i32 %33, i32* %34, align 4, !dbg !24241
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !24242
  %36 = load i32, i32* %35, align 4, !dbg !24242
  %37 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !24221
  store i32 %36, i32* %37, align 4, !dbg !24221
  br label %38, !dbg !24221

38:                                               ; preds = %143, %26
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !24243
  %40 = load i32, i32* %39, align 4, !dbg !24243
  %41 = icmp ne i32 %40, 0, !dbg !24243
  %42 = xor i1 %41, true, !dbg !24243
  br i1 %42, label %43, label %145, !dbg !24221

43:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %16, metadata !24245, metadata !DIExpression()), !dbg !24247
  %44 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !24248
  %45 = load i64, i64* %44, align 8, !dbg !24248
  %46 = sub nsw i64 -2, %45, !dbg !24248
  %47 = icmp sge i64 %46, 0, !dbg !24250
  br i1 %47, label %48, label %63, !dbg !24251

48:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata i64* %17, metadata !24252, metadata !DIExpression()), !dbg !24254
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !24255
  %50 = load i64, i64* %49, align 8, !dbg !24255
  %51 = sub nsw i64 -2, %50, !dbg !24255
  %52 = load i64, i64* @curr_tick, align 8, !dbg !24256
  %53 = sub i64 %51, %52, !dbg !24257
  store i64 %53, i64* %17, align 8, !dbg !24254
  %54 = load i64, i64* %17, align 8, !dbg !24258
  %55 = icmp sgt i64 1, %54, !dbg !24258
  br i1 %55, label %56, label %57, !dbg !24258

56:                                               ; preds = %48
  br label %59, !dbg !24258

57:                                               ; preds = %48
  %58 = load i64, i64* %17, align 8, !dbg !24258
  br label %59, !dbg !24258

59:                                               ; preds = %57, %56
  %60 = phi i64 [ 1, %56 ], [ %58, %57 ], !dbg !24258
  %61 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24259
  %62 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %61, i32 0, i32 2, !dbg !24260
  store i64 %60, i64* %62, align 8, !dbg !24261
  br label %72, !dbg !24262

63:                                               ; preds = %43
  %64 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !24263
  %65 = load i64, i64* %64, align 8, !dbg !24263
  %66 = add nsw i64 %65, 1, !dbg !24265
  %67 = call i32 @elapsed() #10, !dbg !24266
  %68 = sext i32 %67 to i64, !dbg !24266
  %69 = add nsw i64 %66, %68, !dbg !24267
  %70 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24268
  %71 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %70, i32 0, i32 2, !dbg !24269
  store i64 %69, i64* %71, align 8, !dbg !24270
  br label %72

72:                                               ; preds = %63, %59
  %73 = call %struct._timeout.124* @first() #10, !dbg !24271
  store %struct._timeout.124* %73, %struct._timeout.124** %16, align 4, !dbg !24273
  br label %74, !dbg !24274

74:                                               ; preds = %105, %72
  %75 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24275
  %76 = icmp ne %struct._timeout.124* %75, null, !dbg !24277
  br i1 %76, label %77, label %108, !dbg !24278

77:                                               ; preds = %74
  %78 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24279
  %79 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %78, i32 0, i32 2, !dbg !24282
  %80 = load i64, i64* %79, align 8, !dbg !24282
  %81 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24283
  %82 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %81, i32 0, i32 2, !dbg !24284
  %83 = load i64, i64* %82, align 8, !dbg !24284
  %84 = icmp sgt i64 %80, %83, !dbg !24285
  br i1 %84, label %85, label %97, !dbg !24286

85:                                               ; preds = %77
  %86 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24287
  %87 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %86, i32 0, i32 2, !dbg !24289
  %88 = load i64, i64* %87, align 8, !dbg !24289
  %89 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24290
  %90 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %89, i32 0, i32 2, !dbg !24291
  %91 = load i64, i64* %90, align 8, !dbg !24292
  %92 = sub nsw i64 %91, %88, !dbg !24292
  store i64 %92, i64* %90, align 8, !dbg !24292
  %93 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24293
  %94 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %93, i32 0, i32 0, !dbg !24294
  %95 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24295
  %96 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %95, i32 0, i32 0, !dbg !24296
  call void @sys_dlist_insert.241(%struct._dnode.120* noundef %94, %struct._dnode.120* noundef %96) #10, !dbg !24297
  br label %108, !dbg !24298

97:                                               ; preds = %77
  %98 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24299
  %99 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %98, i32 0, i32 2, !dbg !24300
  %100 = load i64, i64* %99, align 8, !dbg !24300
  %101 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24301
  %102 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %101, i32 0, i32 2, !dbg !24302
  %103 = load i64, i64* %102, align 8, !dbg !24303
  %104 = sub nsw i64 %103, %100, !dbg !24303
  store i64 %104, i64* %102, align 8, !dbg !24303
  br label %105, !dbg !24304

105:                                              ; preds = %97
  %106 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24305
  %107 = call %struct._timeout.124* @next(%struct._timeout.124* noundef %106) #10, !dbg !24306
  store %struct._timeout.124* %107, %struct._timeout.124** %16, align 4, !dbg !24307
  br label %74, !dbg !24308, !llvm.loop !24309

108:                                              ; preds = %85, %74
  %109 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24311
  %110 = icmp eq %struct._timeout.124* %109, null, !dbg !24313
  br i1 %110, label %111, label %114, !dbg !24314

111:                                              ; preds = %108
  %112 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24315
  %113 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %112, i32 0, i32 0, !dbg !24317
  call void @sys_dlist_append.242(%struct._dnode.120* noundef @timeout_list, %struct._dnode.120* noundef %113) #10, !dbg !24318
  br label %114, !dbg !24319

114:                                              ; preds = %111, %108
  %115 = load %struct._timeout.124*, %struct._timeout.124** %11, align 4, !dbg !24320
  %116 = call %struct._timeout.124* @first() #10, !dbg !24322
  %117 = icmp eq %struct._timeout.124* %115, %116, !dbg !24323
  br i1 %117, label %118, label %129, !dbg !24324

118:                                              ; preds = %114
  call void @llvm.dbg.declare(metadata i32* %18, metadata !24325, metadata !DIExpression()), !dbg !24327
  %119 = call i32 @next_timeout() #10, !dbg !24328
  store i32 %119, i32* %18, align 4, !dbg !24327
  %120 = load i32, i32* %18, align 4, !dbg !24329
  %121 = icmp eq i32 %120, 0, !dbg !24331
  br i1 %121, label %126, label %122, !dbg !24332

122:                                              ; preds = %118
  %123 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !24333
  %124 = load i32, i32* %18, align 4, !dbg !24334
  %125 = icmp ne i32 %123, %124, !dbg !24335
  br i1 %125, label %126, label %128, !dbg !24336

126:                                              ; preds = %122, %118
  %127 = load i32, i32* %18, align 4, !dbg !24337
  call void @sys_clock_set_timeout(i32 noundef %127, i1 noundef zeroext false) #10, !dbg !24339
  br label %128, !dbg !24340

128:                                              ; preds = %126, %122
  br label %129, !dbg !24341

129:                                              ; preds = %128, %114
  br label %130, !dbg !24342

130:                                              ; preds = %129
  %131 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !24243
  %132 = bitcast i32* %131 to [1 x i32]*, !dbg !24243
  %133 = load [1 x i32], [1 x i32]* %132, align 4, !dbg !24243
  %134 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %135 = bitcast i32* %134 to [1 x i32]*
  store [1 x i32] %133, [1 x i32]* %135, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !24343, metadata !DIExpression()) #9, !dbg !24347
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !24349, metadata !DIExpression()) #9, !dbg !24350
  %136 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !24351
  %137 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24352
  %138 = load i32, i32* %137, align 4, !dbg !24352
  store i32 %138, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24353, metadata !DIExpression()) #9, !dbg !24355
  %139 = load i32, i32* %4, align 4, !dbg !24357
  %140 = icmp ne i32 %139, 0, !dbg !24359
  br i1 %140, label %141, label %142, !dbg !24360

141:                                              ; preds = %130
  br label %143, !dbg !24361

142:                                              ; preds = %130
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24363, !srcloc !24364
  br label %143, !dbg !24365

143:                                              ; preds = %141, %142
  %144 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %14, i32 0, i32 0, !dbg !24243
  store i32 1, i32* %144, align 4, !dbg !24243
  br label %38, !dbg !24243, !llvm.loop !24366

145:                                              ; preds = %25, %38
  ret void, !dbg !24368
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed() #1 !dbg !24369 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !24370
  %2 = icmp eq i32 %1, 0, !dbg !24371
  br i1 %2, label %3, label %5, !dbg !24370

3:                                                ; preds = %0
  %4 = call i32 @sys_clock_elapsed() #10, !dbg !24372
  br label %6, !dbg !24370

5:                                                ; preds = %0
  br label %6, !dbg !24370

6:                                                ; preds = %5, %3
  %7 = phi i32 [ %4, %3 ], [ 0, %5 ], !dbg !24370
  ret i32 %7, !dbg !24373
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.124* @first() #1 !dbg !24374 {
  %1 = alloca %struct._dnode.120*, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %1, metadata !24377, metadata !DIExpression()), !dbg !24379
  %2 = call %struct._dnode.120* @sys_dlist_peek_head.245(%struct._dnode.120* noundef @timeout_list) #10, !dbg !24380
  store %struct._dnode.120* %2, %struct._dnode.120** %1, align 4, !dbg !24379
  %3 = load %struct._dnode.120*, %struct._dnode.120** %1, align 4, !dbg !24381
  %4 = icmp eq %struct._dnode.120* %3, null, !dbg !24382
  br i1 %4, label %5, label %6, !dbg !24381

5:                                                ; preds = %0
  br label %11, !dbg !24381

6:                                                ; preds = %0
  %7 = load %struct._dnode.120*, %struct._dnode.120** %1, align 4, !dbg !24383
  %8 = bitcast %struct._dnode.120* %7 to i8*, !dbg !24383
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !24383
  %10 = bitcast i8* %9 to %struct._timeout.124*, !dbg !24383
  br label %11, !dbg !24381

11:                                               ; preds = %6, %5
  %12 = phi %struct._timeout.124* [ null, %5 ], [ %10, %6 ], !dbg !24381
  ret %struct._timeout.124* %12, !dbg !24384
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert.241(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !24385 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  %5 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !24388, metadata !DIExpression()), !dbg !24389
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !24390, metadata !DIExpression()), !dbg !24391
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %5, metadata !24392, metadata !DIExpression()), !dbg !24394
  %6 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24395
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !24396
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !24396
  %9 = load %struct._dnode.120*, %struct._dnode.120** %8, align 4, !dbg !24396
  store %struct._dnode.120* %9, %struct._dnode.120** %5, align 4, !dbg !24394
  %10 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !24397
  %11 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24398
  %12 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %11, i32 0, i32 1, !dbg !24399
  %13 = bitcast %union.anon.0.118* %12 to %struct._dnode.120**, !dbg !24399
  store %struct._dnode.120* %10, %struct._dnode.120** %13, align 4, !dbg !24400
  %14 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24401
  %15 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24402
  %16 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %15, i32 0, i32 0, !dbg !24403
  %17 = bitcast %union.anon.0.118* %16 to %struct._dnode.120**, !dbg !24403
  store %struct._dnode.120* %14, %struct._dnode.120** %17, align 4, !dbg !24404
  %18 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24405
  %19 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !24406
  %20 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %19, i32 0, i32 0, !dbg !24407
  %21 = bitcast %union.anon.0.118* %20 to %struct._dnode.120**, !dbg !24407
  store %struct._dnode.120* %18, %struct._dnode.120** %21, align 4, !dbg !24408
  %22 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24409
  %23 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24410
  %24 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %23, i32 0, i32 1, !dbg !24411
  %25 = bitcast %union.anon.0.118* %24 to %struct._dnode.120**, !dbg !24411
  store %struct._dnode.120* %22, %struct._dnode.120** %25, align 4, !dbg !24412
  ret void, !dbg !24413
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.124* @next(%struct._timeout.124* noundef %0) #1 !dbg !24414 {
  %2 = alloca %struct._timeout.124*, align 4
  %3 = alloca %struct._dnode.120*, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %2, metadata !24417, metadata !DIExpression()), !dbg !24418
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !24419, metadata !DIExpression()), !dbg !24420
  %4 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !24421
  %5 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %4, i32 0, i32 0, !dbg !24422
  %6 = call %struct._dnode.120* @sys_dlist_peek_next.243(%struct._dnode.120* noundef @timeout_list, %struct._dnode.120* noundef %5) #10, !dbg !24423
  store %struct._dnode.120* %6, %struct._dnode.120** %3, align 4, !dbg !24420
  %7 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24424
  %8 = icmp eq %struct._dnode.120* %7, null, !dbg !24425
  br i1 %8, label %9, label %10, !dbg !24424

9:                                                ; preds = %1
  br label %15, !dbg !24424

10:                                               ; preds = %1
  %11 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24426
  %12 = bitcast %struct._dnode.120* %11 to i8*, !dbg !24426
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !24426
  %14 = bitcast i8* %13 to %struct._timeout.124*, !dbg !24426
  br label %15, !dbg !24424

15:                                               ; preds = %10, %9
  %16 = phi %struct._timeout.124* [ null, %9 ], [ %14, %10 ], !dbg !24424
  ret %struct._timeout.124* %16, !dbg !24427
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append.242(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !24428 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  %5 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !24432, metadata !DIExpression()), !dbg !24433
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !24434, metadata !DIExpression()), !dbg !24435
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %5, metadata !24436, metadata !DIExpression()), !dbg !24437
  %6 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24438
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !24439
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !24439
  %9 = load %struct._dnode.120*, %struct._dnode.120** %8, align 4, !dbg !24439
  store %struct._dnode.120* %9, %struct._dnode.120** %5, align 4, !dbg !24437
  %10 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24440
  %11 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24441
  %12 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %11, i32 0, i32 0, !dbg !24442
  %13 = bitcast %union.anon.0.118* %12 to %struct._dnode.120**, !dbg !24442
  store %struct._dnode.120* %10, %struct._dnode.120** %13, align 4, !dbg !24443
  %14 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !24444
  %15 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24445
  %16 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %15, i32 0, i32 1, !dbg !24446
  %17 = bitcast %union.anon.0.118* %16 to %struct._dnode.120**, !dbg !24446
  store %struct._dnode.120* %14, %struct._dnode.120** %17, align 4, !dbg !24447
  %18 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24448
  %19 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !24449
  %20 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %19, i32 0, i32 0, !dbg !24450
  %21 = bitcast %union.anon.0.118* %20 to %struct._dnode.120**, !dbg !24450
  store %struct._dnode.120* %18, %struct._dnode.120** %21, align 4, !dbg !24451
  %22 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24452
  %23 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24453
  %24 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %23, i32 0, i32 1, !dbg !24454
  %25 = bitcast %union.anon.0.118* %24 to %struct._dnode.120**, !dbg !24454
  store %struct._dnode.120* %22, %struct._dnode.120** %25, align 4, !dbg !24455
  ret void, !dbg !24456
}

; Function Attrs: noinline nounwind optnone
define internal i32 @next_timeout() #1 !dbg !24457 {
  %1 = alloca %struct._timeout.124*, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %1, metadata !24458, metadata !DIExpression()), !dbg !24459
  %4 = call %struct._timeout.124* @first() #10, !dbg !24460
  store %struct._timeout.124* %4, %struct._timeout.124** %1, align 4, !dbg !24459
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24461, metadata !DIExpression()), !dbg !24462
  %5 = call i32 @elapsed() #10, !dbg !24463
  store i32 %5, i32* %2, align 4, !dbg !24462
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24464, metadata !DIExpression()), !dbg !24465
  %6 = load %struct._timeout.124*, %struct._timeout.124** %1, align 4, !dbg !24466
  %7 = icmp eq %struct._timeout.124* %6, null, !dbg !24468
  br i1 %7, label %16, label %8, !dbg !24469

8:                                                ; preds = %0
  %9 = load %struct._timeout.124*, %struct._timeout.124** %1, align 4, !dbg !24470
  %10 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %9, i32 0, i32 2, !dbg !24471
  %11 = load i64, i64* %10, align 8, !dbg !24471
  %12 = load i32, i32* %2, align 4, !dbg !24472
  %13 = sext i32 %12 to i64, !dbg !24472
  %14 = sub nsw i64 %11, %13, !dbg !24473
  %15 = icmp sgt i64 %14, 2147483647, !dbg !24474
  br i1 %15, label %16, label %17, !dbg !24475

16:                                               ; preds = %8, %0
  store i32 2147483647, i32* %3, align 4, !dbg !24476
  br label %36, !dbg !24478

17:                                               ; preds = %8
  %18 = load %struct._timeout.124*, %struct._timeout.124** %1, align 4, !dbg !24479
  %19 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %18, i32 0, i32 2, !dbg !24479
  %20 = load i64, i64* %19, align 8, !dbg !24479
  %21 = load i32, i32* %2, align 4, !dbg !24479
  %22 = sext i32 %21 to i64, !dbg !24479
  %23 = sub nsw i64 %20, %22, !dbg !24479
  %24 = icmp sgt i64 0, %23, !dbg !24479
  br i1 %24, label %25, label %26, !dbg !24479

25:                                               ; preds = %17
  br label %33, !dbg !24479

26:                                               ; preds = %17
  %27 = load %struct._timeout.124*, %struct._timeout.124** %1, align 4, !dbg !24479
  %28 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %27, i32 0, i32 2, !dbg !24479
  %29 = load i64, i64* %28, align 8, !dbg !24479
  %30 = load i32, i32* %2, align 4, !dbg !24479
  %31 = sext i32 %30 to i64, !dbg !24479
  %32 = sub nsw i64 %29, %31, !dbg !24479
  br label %33, !dbg !24479

33:                                               ; preds = %26, %25
  %34 = phi i64 [ 0, %25 ], [ %32, %26 ], !dbg !24479
  %35 = trunc i64 %34 to i32, !dbg !24479
  store i32 %35, i32* %3, align 4, !dbg !24481
  br label %36

36:                                               ; preds = %33, %16
  %37 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !24482
  %38 = icmp ne i32 %37, 0, !dbg !24484
  br i1 %38, label %39, label %45, !dbg !24485

39:                                               ; preds = %36
  %40 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !24486
  %41 = load i32, i32* %3, align 4, !dbg !24487
  %42 = icmp slt i32 %40, %41, !dbg !24488
  br i1 %42, label %43, label %45, !dbg !24489

43:                                               ; preds = %39
  %44 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !24490
  store i32 %44, i32* %3, align 4, !dbg !24492
  br label %45, !dbg !24493

45:                                               ; preds = %43, %39, %36
  %46 = load i32, i32* %3, align 4, !dbg !24494
  ret i32 %46, !dbg !24495
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.120* @sys_dlist_peek_next.243(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !24496 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !24499, metadata !DIExpression()), !dbg !24500
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !24501, metadata !DIExpression()), !dbg !24502
  %5 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24503
  %6 = icmp ne %struct._dnode.120* %5, null, !dbg !24504
  br i1 %6, label %7, label %11, !dbg !24505

7:                                                ; preds = %2
  %8 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24506
  %9 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24507
  %10 = call %struct._dnode.120* @sys_dlist_peek_next_no_check.244(%struct._dnode.120* noundef %8, %struct._dnode.120* noundef %9) #10, !dbg !24508
  br label %12, !dbg !24505

11:                                               ; preds = %2
  br label %12, !dbg !24505

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.120* [ %10, %7 ], [ null, %11 ], !dbg !24505
  ret %struct._dnode.120* %13, !dbg !24509
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.120* @sys_dlist_peek_next_no_check.244(%struct._dnode.120* noundef %0, %struct._dnode.120* noundef %1) #1 !dbg !24510 {
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !24511, metadata !DIExpression()), !dbg !24512
  store %struct._dnode.120* %1, %struct._dnode.120** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !24513, metadata !DIExpression()), !dbg !24514
  %5 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24515
  %6 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24516
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !24517
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !24517
  %9 = load %struct._dnode.120*, %struct._dnode.120** %8, align 4, !dbg !24517
  %10 = icmp eq %struct._dnode.120* %5, %9, !dbg !24518
  br i1 %10, label %11, label %12, !dbg !24519

11:                                               ; preds = %2
  br label %17, !dbg !24519

12:                                               ; preds = %2
  %13 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24520
  %14 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %13, i32 0, i32 0, !dbg !24521
  %15 = bitcast %union.anon.0.118* %14 to %struct._dnode.120**, !dbg !24521
  %16 = load %struct._dnode.120*, %struct._dnode.120** %15, align 4, !dbg !24521
  br label %17, !dbg !24519

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.120* [ null, %11 ], [ %16, %12 ], !dbg !24519
  ret %struct._dnode.120* %18, !dbg !24522
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.120* @sys_dlist_peek_head.245(%struct._dnode.120* noundef %0) #1 !dbg !24523 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !24526, metadata !DIExpression()), !dbg !24527
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24528
  %4 = call zeroext i1 @sys_dlist_is_empty.246(%struct._dnode.120* noundef %3) #10, !dbg !24529
  br i1 %4, label %5, label %6, !dbg !24529

5:                                                ; preds = %1
  br label %11, !dbg !24529

6:                                                ; preds = %1
  %7 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24530
  %8 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %7, i32 0, i32 0, !dbg !24531
  %9 = bitcast %union.anon.0.118* %8 to %struct._dnode.120**, !dbg !24531
  %10 = load %struct._dnode.120*, %struct._dnode.120** %9, align 4, !dbg !24531
  br label %11, !dbg !24529

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.120* [ null, %5 ], [ %10, %6 ], !dbg !24529
  ret %struct._dnode.120* %12, !dbg !24532
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty.246(%struct._dnode.120* noundef %0) #1 !dbg !24533 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !24536, metadata !DIExpression()), !dbg !24537
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24538
  %4 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %3, i32 0, i32 0, !dbg !24539
  %5 = bitcast %union.anon.0.118* %4 to %struct._dnode.120**, !dbg !24539
  %6 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !24539
  %7 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24540
  %8 = icmp eq %struct._dnode.120* %6, %7, !dbg !24541
  ret i1 %8, !dbg !24542
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_abort_timeout(%struct._timeout.124* noundef %0) #1 !dbg !24543 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.124*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %8, metadata !24546, metadata !DIExpression()), !dbg !24547
  call void @llvm.dbg.declare(metadata i32* %9, metadata !24548, metadata !DIExpression()), !dbg !24549
  store i32 -22, i32* %9, align 4, !dbg !24549
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !24550, metadata !DIExpression()), !dbg !24552
  %12 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !24552
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !24552
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !24553, metadata !DIExpression()), !dbg !24552
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !24223, metadata !DIExpression()) #9, !dbg !24554
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !24556
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !24231, metadata !DIExpression()) #9, !dbg !24557
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24233, metadata !DIExpression()) #9, !dbg !24558
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24560, !srcloc !24238
  store i32 %14, i32* %3, align 4, !dbg !24560
  %15 = load i32, i32* %3, align 4, !dbg !24561
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24562
  store i32 %15, i32* %16, align 4, !dbg !24563
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24564
  %18 = load i32, i32* %17, align 4, !dbg !24564
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24552
  store i32 %18, i32* %19, align 4, !dbg !24552
  br label %20, !dbg !24552

20:                                               ; preds = %45, %1
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24565
  %22 = load i32, i32* %21, align 4, !dbg !24565
  %23 = icmp ne i32 %22, 0, !dbg !24565
  %24 = xor i1 %23, true, !dbg !24565
  br i1 %24, label %25, label %47, !dbg !24552

25:                                               ; preds = %20
  %26 = load %struct._timeout.124*, %struct._timeout.124** %8, align 4, !dbg !24567
  %27 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %26, i32 0, i32 0, !dbg !24570
  %28 = call zeroext i1 @sys_dnode_is_linked.249(%struct._dnode.120* noundef %27) #10, !dbg !24571
  br i1 %28, label %29, label %31, !dbg !24572

29:                                               ; preds = %25
  %30 = load %struct._timeout.124*, %struct._timeout.124** %8, align 4, !dbg !24573
  call void @remove_timeout(%struct._timeout.124* noundef %30) #10, !dbg !24575
  store i32 0, i32* %9, align 4, !dbg !24576
  br label %31, !dbg !24577

31:                                               ; preds = %29, %25
  br label %32, !dbg !24578

32:                                               ; preds = %31
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24565
  %34 = bitcast i32* %33 to [1 x i32]*, !dbg !24565
  %35 = load [1 x i32], [1 x i32]* %34, align 4, !dbg !24565
  %36 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %37 = bitcast i32* %36 to [1 x i32]*
  store [1 x i32] %35, [1 x i32]* %37, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !24343, metadata !DIExpression()) #9, !dbg !24579
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !24349, metadata !DIExpression()) #9, !dbg !24581
  %38 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !24582
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !24583
  %40 = load i32, i32* %39, align 4, !dbg !24583
  store i32 %40, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24353, metadata !DIExpression()) #9, !dbg !24584
  %41 = load i32, i32* %2, align 4, !dbg !24586
  %42 = icmp ne i32 %41, 0, !dbg !24587
  br i1 %42, label %43, label %44, !dbg !24588

43:                                               ; preds = %32
  br label %45, !dbg !24589

44:                                               ; preds = %32
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24590, !srcloc !24364
  br label %45, !dbg !24591

45:                                               ; preds = %43, %44
  %46 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24565
  store i32 1, i32* %46, align 4, !dbg !24565
  br label %20, !dbg !24565, !llvm.loop !24592

47:                                               ; preds = %20
  %48 = load i32, i32* %9, align 4, !dbg !24594
  ret i32 %48, !dbg !24595
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked.249(%struct._dnode.120* noundef %0) #1 !dbg !24596 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !24601, metadata !DIExpression()), !dbg !24602
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24603
  %4 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %3, i32 0, i32 0, !dbg !24604
  %5 = bitcast %union.anon.0.118* %4 to %struct._dnode.120**, !dbg !24604
  %6 = load %struct._dnode.120*, %struct._dnode.120** %5, align 4, !dbg !24604
  %7 = icmp ne %struct._dnode.120* %6, null, !dbg !24605
  ret i1 %7, !dbg !24606
}

; Function Attrs: noinline nounwind optnone
define internal void @remove_timeout(%struct._timeout.124* noundef %0) #1 !dbg !24607 {
  %2 = alloca %struct._timeout.124*, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %2, metadata !24608, metadata !DIExpression()), !dbg !24609
  %3 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !24610
  %4 = call %struct._timeout.124* @next(%struct._timeout.124* noundef %3) #10, !dbg !24612
  %5 = icmp ne %struct._timeout.124* %4, null, !dbg !24613
  br i1 %5, label %6, label %15, !dbg !24614

6:                                                ; preds = %1
  %7 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !24615
  %8 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %7, i32 0, i32 2, !dbg !24617
  %9 = load i64, i64* %8, align 8, !dbg !24617
  %10 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !24618
  %11 = call %struct._timeout.124* @next(%struct._timeout.124* noundef %10) #10, !dbg !24619
  %12 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %11, i32 0, i32 2, !dbg !24620
  %13 = load i64, i64* %12, align 8, !dbg !24621
  %14 = add nsw i64 %13, %9, !dbg !24621
  store i64 %14, i64* %12, align 8, !dbg !24621
  br label %15, !dbg !24622

15:                                               ; preds = %6, %1
  %16 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !24623
  %17 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %16, i32 0, i32 0, !dbg !24624
  call void @sys_dlist_remove.250(%struct._dnode.120* noundef %17) #10, !dbg !24625
  ret void, !dbg !24626
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove.250(%struct._dnode.120* noundef %0) #1 !dbg !24627 {
  %2 = alloca %struct._dnode.120*, align 4
  %3 = alloca %struct._dnode.120*, align 4
  %4 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !24630, metadata !DIExpression()), !dbg !24631
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %3, metadata !24632, metadata !DIExpression()), !dbg !24633
  %5 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24634
  %6 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %5, i32 0, i32 1, !dbg !24635
  %7 = bitcast %union.anon.0.118* %6 to %struct._dnode.120**, !dbg !24635
  %8 = load %struct._dnode.120*, %struct._dnode.120** %7, align 4, !dbg !24635
  store %struct._dnode.120* %8, %struct._dnode.120** %3, align 4, !dbg !24633
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %4, metadata !24636, metadata !DIExpression()), !dbg !24637
  %9 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24638
  %10 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %9, i32 0, i32 0, !dbg !24639
  %11 = bitcast %union.anon.0.118* %10 to %struct._dnode.120**, !dbg !24639
  %12 = load %struct._dnode.120*, %struct._dnode.120** %11, align 4, !dbg !24639
  store %struct._dnode.120* %12, %struct._dnode.120** %4, align 4, !dbg !24637
  %13 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24640
  %14 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24641
  %15 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %14, i32 0, i32 0, !dbg !24642
  %16 = bitcast %union.anon.0.118* %15 to %struct._dnode.120**, !dbg !24642
  store %struct._dnode.120* %13, %struct._dnode.120** %16, align 4, !dbg !24643
  %17 = load %struct._dnode.120*, %struct._dnode.120** %3, align 4, !dbg !24644
  %18 = load %struct._dnode.120*, %struct._dnode.120** %4, align 4, !dbg !24645
  %19 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %18, i32 0, i32 1, !dbg !24646
  %20 = bitcast %union.anon.0.118* %19 to %struct._dnode.120**, !dbg !24646
  store %struct._dnode.120* %17, %struct._dnode.120** %20, align 4, !dbg !24647
  %21 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24648
  call void @sys_dnode_init.251(%struct._dnode.120* noundef %21) #10, !dbg !24649
  ret void, !dbg !24650
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.251(%struct._dnode.120* noundef %0) #1 !dbg !24651 {
  %2 = alloca %struct._dnode.120*, align 4
  store %struct._dnode.120* %0, %struct._dnode.120** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.120** %2, metadata !24652, metadata !DIExpression()), !dbg !24653
  %3 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24654
  %4 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %3, i32 0, i32 0, !dbg !24655
  %5 = bitcast %union.anon.0.118* %4 to %struct._dnode.120**, !dbg !24655
  store %struct._dnode.120* null, %struct._dnode.120** %5, align 4, !dbg !24656
  %6 = load %struct._dnode.120*, %struct._dnode.120** %2, align 4, !dbg !24657
  %7 = getelementptr inbounds %struct._dnode.120, %struct._dnode.120* %6, i32 0, i32 1, !dbg !24658
  %8 = bitcast %union.anon.0.118* %7 to %struct._dnode.120**, !dbg !24658
  store %struct._dnode.120* null, %struct._dnode.120** %8, align 4, !dbg !24659
  ret void, !dbg !24660
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_remaining(%struct._timeout.124* noundef %0) #1 !dbg !24661 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.124*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %8, metadata !24666, metadata !DIExpression()), !dbg !24667
  call void @llvm.dbg.declare(metadata i64* %9, metadata !24668, metadata !DIExpression()), !dbg !24669
  store i64 0, i64* %9, align 8, !dbg !24669
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !24670, metadata !DIExpression()), !dbg !24672
  %12 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !24672
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !24672
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !24673, metadata !DIExpression()), !dbg !24672
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !24223, metadata !DIExpression()) #9, !dbg !24674
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !24676
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !24231, metadata !DIExpression()) #9, !dbg !24677
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24233, metadata !DIExpression()) #9, !dbg !24678
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24680, !srcloc !24238
  store i32 %14, i32* %3, align 4, !dbg !24680
  %15 = load i32, i32* %3, align 4, !dbg !24681
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24682
  store i32 %15, i32* %16, align 4, !dbg !24683
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24684
  %18 = load i32, i32* %17, align 4, !dbg !24684
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24672
  store i32 %18, i32* %19, align 4, !dbg !24672
  br label %20, !dbg !24672

20:                                               ; preds = %41, %1
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24685
  %22 = load i32, i32* %21, align 4, !dbg !24685
  %23 = icmp ne i32 %22, 0, !dbg !24685
  %24 = xor i1 %23, true, !dbg !24685
  br i1 %24, label %25, label %43, !dbg !24672

25:                                               ; preds = %20
  %26 = load %struct._timeout.124*, %struct._timeout.124** %8, align 4, !dbg !24687
  %27 = call i64 @timeout_rem(%struct._timeout.124* noundef %26) #10, !dbg !24689
  store i64 %27, i64* %9, align 8, !dbg !24690
  br label %28, !dbg !24691

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24685
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !24685
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !24685
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !24343, metadata !DIExpression()) #9, !dbg !24692
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !24349, metadata !DIExpression()) #9, !dbg !24694
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !24695
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !24696
  %36 = load i32, i32* %35, align 4, !dbg !24696
  store i32 %36, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24353, metadata !DIExpression()) #9, !dbg !24697
  %37 = load i32, i32* %2, align 4, !dbg !24699
  %38 = icmp ne i32 %37, 0, !dbg !24700
  br i1 %38, label %39, label %40, !dbg !24701

39:                                               ; preds = %28
  br label %41, !dbg !24702

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24703, !srcloc !24364
  br label %41, !dbg !24704

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24685
  store i32 1, i32* %42, align 4, !dbg !24685
  br label %20, !dbg !24685, !llvm.loop !24705

43:                                               ; preds = %20
  %44 = load i64, i64* %9, align 8, !dbg !24707
  ret i64 %44, !dbg !24708
}

; Function Attrs: noinline nounwind optnone
define internal i64 @timeout_rem(%struct._timeout.124* noundef %0) #1 !dbg !24709 {
  %2 = alloca i64, align 8
  %3 = alloca %struct._timeout.124*, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct._timeout.124*, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %3, metadata !24710, metadata !DIExpression()), !dbg !24711
  call void @llvm.dbg.declare(metadata i64* %4, metadata !24712, metadata !DIExpression()), !dbg !24713
  store i64 0, i64* %4, align 8, !dbg !24713
  %6 = load %struct._timeout.124*, %struct._timeout.124** %3, align 4, !dbg !24714
  %7 = call zeroext i1 @z_is_inactive_timeout.252(%struct._timeout.124* noundef %6) #10, !dbg !24716
  br i1 %7, label %8, label %9, !dbg !24717

8:                                                ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !24718
  br label %33, !dbg !24718

9:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %5, metadata !24720, metadata !DIExpression()), !dbg !24722
  %10 = call %struct._timeout.124* @first() #10, !dbg !24723
  store %struct._timeout.124* %10, %struct._timeout.124** %5, align 4, !dbg !24722
  br label %11, !dbg !24724

11:                                               ; preds = %25, %9
  %12 = load %struct._timeout.124*, %struct._timeout.124** %5, align 4, !dbg !24725
  %13 = icmp ne %struct._timeout.124* %12, null, !dbg !24727
  br i1 %13, label %14, label %28, !dbg !24728

14:                                               ; preds = %11
  %15 = load %struct._timeout.124*, %struct._timeout.124** %5, align 4, !dbg !24729
  %16 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %15, i32 0, i32 2, !dbg !24731
  %17 = load i64, i64* %16, align 8, !dbg !24731
  %18 = load i64, i64* %4, align 8, !dbg !24732
  %19 = add nsw i64 %18, %17, !dbg !24732
  store i64 %19, i64* %4, align 8, !dbg !24732
  %20 = load %struct._timeout.124*, %struct._timeout.124** %3, align 4, !dbg !24733
  %21 = load %struct._timeout.124*, %struct._timeout.124** %5, align 4, !dbg !24735
  %22 = icmp eq %struct._timeout.124* %20, %21, !dbg !24736
  br i1 %22, label %23, label %24, !dbg !24737

23:                                               ; preds = %14
  br label %28, !dbg !24738

24:                                               ; preds = %14
  br label %25, !dbg !24740

25:                                               ; preds = %24
  %26 = load %struct._timeout.124*, %struct._timeout.124** %5, align 4, !dbg !24741
  %27 = call %struct._timeout.124* @next(%struct._timeout.124* noundef %26) #10, !dbg !24742
  store %struct._timeout.124* %27, %struct._timeout.124** %5, align 4, !dbg !24743
  br label %11, !dbg !24744, !llvm.loop !24745

28:                                               ; preds = %23, %11
  %29 = load i64, i64* %4, align 8, !dbg !24747
  %30 = call i32 @elapsed() #10, !dbg !24748
  %31 = sext i32 %30 to i64, !dbg !24748
  %32 = sub nsw i64 %29, %31, !dbg !24749
  store i64 %32, i64* %2, align 8, !dbg !24750
  br label %33, !dbg !24750

33:                                               ; preds = %28, %8
  %34 = load i64, i64* %2, align 8, !dbg !24751
  ret i64 %34, !dbg !24751
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout.252(%struct._timeout.124* noundef %0) #1 !dbg !24752 {
  %2 = alloca %struct._timeout.124*, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %2, metadata !24755, metadata !DIExpression()), !dbg !24756
  %3 = load %struct._timeout.124*, %struct._timeout.124** %2, align 4, !dbg !24757
  %4 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %3, i32 0, i32 0, !dbg !24758
  %5 = call zeroext i1 @sys_dnode_is_linked.249(%struct._dnode.120* noundef %4) #10, !dbg !24759
  %6 = xor i1 %5, true, !dbg !24760
  ret i1 %6, !dbg !24761
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_expires(%struct._timeout.124* noundef %0) #1 !dbg !24762 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.z_spinlock_key, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.124*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  store %struct._timeout.124* %0, %struct._timeout.124** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %8, metadata !24763, metadata !DIExpression()), !dbg !24764
  call void @llvm.dbg.declare(metadata i64* %9, metadata !24765, metadata !DIExpression()), !dbg !24766
  store i64 0, i64* %9, align 8, !dbg !24766
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !24767, metadata !DIExpression()), !dbg !24769
  %12 = bitcast %struct.z_spinlock_key* %10 to i8*, !dbg !24769
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !24769
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !24770, metadata !DIExpression()), !dbg !24769
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !24223, metadata !DIExpression()) #9, !dbg !24771
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !24773
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !24231, metadata !DIExpression()) #9, !dbg !24774
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24233, metadata !DIExpression()) #9, !dbg !24775
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24777, !srcloc !24238
  store i32 %14, i32* %3, align 4, !dbg !24777
  %15 = load i32, i32* %3, align 4, !dbg !24778
  %16 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24779
  store i32 %15, i32* %16, align 4, !dbg !24780
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24781
  %18 = load i32, i32* %17, align 4, !dbg !24781
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24769
  store i32 %18, i32* %19, align 4, !dbg !24769
  br label %20, !dbg !24769

20:                                               ; preds = %43, %1
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24782
  %22 = load i32, i32* %21, align 4, !dbg !24782
  %23 = icmp ne i32 %22, 0, !dbg !24782
  %24 = xor i1 %23, true, !dbg !24782
  br i1 %24, label %25, label %45, !dbg !24769

25:                                               ; preds = %20
  %26 = load i64, i64* @curr_tick, align 8, !dbg !24784
  %27 = load %struct._timeout.124*, %struct._timeout.124** %8, align 4, !dbg !24786
  %28 = call i64 @timeout_rem(%struct._timeout.124* noundef %27) #10, !dbg !24787
  %29 = add i64 %26, %28, !dbg !24788
  store i64 %29, i64* %9, align 8, !dbg !24789
  br label %30, !dbg !24790

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24782
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !24782
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !24782
  %34 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !24343, metadata !DIExpression()) #9, !dbg !24791
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %4, metadata !24349, metadata !DIExpression()) #9, !dbg !24793
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !24794
  %37 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %4, i32 0, i32 0, !dbg !24795
  %38 = load i32, i32* %37, align 4, !dbg !24795
  store i32 %38, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24353, metadata !DIExpression()) #9, !dbg !24796
  %39 = load i32, i32* %2, align 4, !dbg !24798
  %40 = icmp ne i32 %39, 0, !dbg !24799
  br i1 %40, label %41, label %42, !dbg !24800

41:                                               ; preds = %30
  br label %43, !dbg !24801

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24802, !srcloc !24364
  br label %43, !dbg !24803

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24782
  store i32 1, i32* %44, align 4, !dbg !24782
  br label %20, !dbg !24782, !llvm.loop !24804

45:                                               ; preds = %20
  %46 = load i64, i64* %9, align 8, !dbg !24806
  ret i64 %46, !dbg !24807
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_get_next_timeout_expiry() #1 !dbg !24808 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.z_spinlock_key, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !24809, metadata !DIExpression()), !dbg !24810
  store i32 -1, i32* %7, align 4, !dbg !24810
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !24811, metadata !DIExpression()), !dbg !24813
  %10 = bitcast %struct.z_spinlock_key* %8 to i8*, !dbg !24813
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !24813
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !24814, metadata !DIExpression()), !dbg !24813
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !24223, metadata !DIExpression()) #9, !dbg !24815
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !24817
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !24231, metadata !DIExpression()) #9, !dbg !24818
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24233, metadata !DIExpression()) #9, !dbg !24819
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24821, !srcloc !24238
  store i32 %12, i32* %2, align 4, !dbg !24821
  %13 = load i32, i32* %2, align 4, !dbg !24822
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !24823
  store i32 %13, i32* %14, align 4, !dbg !24824
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !24825
  %16 = load i32, i32* %15, align 4, !dbg !24825
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !24813
  store i32 %16, i32* %17, align 4, !dbg !24813
  br label %18, !dbg !24813

18:                                               ; preds = %38, %0
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !24826
  %20 = load i32, i32* %19, align 4, !dbg !24826
  %21 = icmp ne i32 %20, 0, !dbg !24826
  %22 = xor i1 %21, true, !dbg !24826
  br i1 %22, label %23, label %40, !dbg !24813

23:                                               ; preds = %18
  %24 = call i32 @next_timeout() #10, !dbg !24828
  store i32 %24, i32* %7, align 4, !dbg !24830
  br label %25, !dbg !24831

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !24826
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !24826
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !24826
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !24343, metadata !DIExpression()) #9, !dbg !24832
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %3, metadata !24349, metadata !DIExpression()) #9, !dbg !24834
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !24835
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0, !dbg !24836
  %33 = load i32, i32* %32, align 4, !dbg !24836
  store i32 %33, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !24353, metadata !DIExpression()) #9, !dbg !24837
  %34 = load i32, i32* %1, align 4, !dbg !24839
  %35 = icmp ne i32 %34, 0, !dbg !24840
  br i1 %35, label %36, label %37, !dbg !24841

36:                                               ; preds = %25
  br label %38, !dbg !24842

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24843, !srcloc !24364
  br label %38, !dbg !24844

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !24826
  store i32 1, i32* %39, align 4, !dbg !24826
  br label %18, !dbg !24826, !llvm.loop !24845

40:                                               ; preds = %18
  %41 = load i32, i32* %7, align 4, !dbg !24847
  ret i32 %41, !dbg !24848
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !24849 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !24850, metadata !DIExpression()), !dbg !24851
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !24852, metadata !DIExpression()), !dbg !24853
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !24854, metadata !DIExpression()), !dbg !24856
  %17 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !24856
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !24856
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !24857, metadata !DIExpression()), !dbg !24856
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !24223, metadata !DIExpression()) #9, !dbg !24858
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !24860
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !24231, metadata !DIExpression()) #9, !dbg !24861
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24233, metadata !DIExpression()) #9, !dbg !24862
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24864, !srcloc !24238
  store i32 %19, i32* %4, align 4, !dbg !24864
  %20 = load i32, i32* %4, align 4, !dbg !24865
  %21 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !24866
  store i32 %20, i32* %21, align 4, !dbg !24867
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !24868
  %23 = load i32, i32* %22, align 4, !dbg !24868
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !24856
  store i32 %23, i32* %24, align 4, !dbg !24856
  br label %25, !dbg !24856

25:                                               ; preds = %76, %2
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24869
  %27 = load i32, i32* %26, align 4, !dbg !24869
  %28 = icmp ne i32 %27, 0, !dbg !24869
  %29 = xor i1 %28, true, !dbg !24869
  br i1 %29, label %30, label %78, !dbg !24856

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i32* %13, metadata !24871, metadata !DIExpression()), !dbg !24873
  %31 = call i32 @next_timeout() #10, !dbg !24874
  store i32 %31, i32* %13, align 4, !dbg !24873
  call void @llvm.dbg.declare(metadata i8* %14, metadata !24875, metadata !DIExpression()), !dbg !24876
  %32 = load i32, i32* %13, align 4, !dbg !24877
  %33 = sext i32 %32 to i64, !dbg !24877
  %34 = icmp eq i64 %33, -1, !dbg !24878
  br i1 %34, label %39, label %35, !dbg !24879

35:                                               ; preds = %30
  %36 = load i32, i32* %9, align 4, !dbg !24880
  %37 = load i32, i32* %13, align 4, !dbg !24881
  %38 = icmp sle i32 %36, %37, !dbg !24882
  br label %39, !dbg !24879

39:                                               ; preds = %35, %30
  %40 = phi i1 [ true, %30 ], [ %38, %35 ]
  %41 = zext i1 %40 to i8, !dbg !24876
  store i8 %41, i8* %14, align 1, !dbg !24876
  call void @llvm.dbg.declare(metadata i8* %15, metadata !24883, metadata !DIExpression()), !dbg !24884
  %42 = load i32, i32* %13, align 4, !dbg !24885
  %43 = icmp sle i32 %42, 1, !dbg !24886
  %44 = zext i1 %43 to i8, !dbg !24884
  store i8 %44, i8* %15, align 1, !dbg !24884
  %45 = load i8, i8* %15, align 1, !dbg !24887
  %46 = trunc i8 %45 to i1, !dbg !24887
  br i1 %46, label %62, label %47, !dbg !24889

47:                                               ; preds = %39
  %48 = load i8, i8* %14, align 1, !dbg !24890
  %49 = trunc i8 %48 to i1, !dbg !24890
  br i1 %49, label %50, label %62, !dbg !24891

50:                                               ; preds = %47
  %51 = load i32, i32* %9, align 4, !dbg !24892
  %52 = load i32, i32* %13, align 4, !dbg !24892
  %53 = icmp slt i32 %51, %52, !dbg !24892
  br i1 %53, label %54, label %56, !dbg !24892

54:                                               ; preds = %50
  %55 = load i32, i32* %9, align 4, !dbg !24892
  br label %58, !dbg !24892

56:                                               ; preds = %50
  %57 = load i32, i32* %13, align 4, !dbg !24892
  br label %58, !dbg !24892

58:                                               ; preds = %56, %54
  %59 = phi i32 [ %55, %54 ], [ %57, %56 ], !dbg !24892
  %60 = load i8, i8* %10, align 1, !dbg !24894
  %61 = trunc i8 %60 to i1, !dbg !24894
  call void @sys_clock_set_timeout(i32 noundef %59, i1 noundef zeroext %61) #10, !dbg !24895
  br label %62, !dbg !24896

62:                                               ; preds = %58, %47, %39
  br label %63, !dbg !24897

63:                                               ; preds = %62
  %64 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !24869
  %65 = bitcast i32* %64 to [1 x i32]*, !dbg !24869
  %66 = load [1 x i32], [1 x i32]* %65, align 4, !dbg !24869
  %67 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %68 = bitcast i32* %67 to [1 x i32]*
  store [1 x i32] %66, [1 x i32]* %68, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !24343, metadata !DIExpression()) #9, !dbg !24898
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !24349, metadata !DIExpression()) #9, !dbg !24900
  %69 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !24901
  %70 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !24902
  %71 = load i32, i32* %70, align 4, !dbg !24902
  store i32 %71, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24353, metadata !DIExpression()) #9, !dbg !24903
  %72 = load i32, i32* %3, align 4, !dbg !24905
  %73 = icmp ne i32 %72, 0, !dbg !24906
  br i1 %73, label %74, label %75, !dbg !24907

74:                                               ; preds = %63
  br label %76, !dbg !24908

75:                                               ; preds = %63
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24909, !srcloc !24364
  br label %76, !dbg !24910

76:                                               ; preds = %74, %75
  %77 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !24869
  store i32 1, i32* %77, align 4, !dbg !24869
  br label %25, !dbg !24869, !llvm.loop !24911

78:                                               ; preds = %25
  ret void, !dbg !24913
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_announce(i32 noundef %0) #1 !dbg !24914 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %struct.z_spinlock_key, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %struct.z_spinlock_key, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.z_spinlock_key, align 4
  %16 = alloca %struct._timeout.124*, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.z_spinlock_key, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !24915, metadata !DIExpression()), !dbg !24916
  %19 = load i32, i32* %14, align 4, !dbg !24917
  call void @z_time_slice(i32 noundef %19) #10, !dbg !24918
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %15, metadata !24919, metadata !DIExpression()), !dbg !24920
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !24223, metadata !DIExpression()) #9, !dbg !24921
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !24923
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %10, metadata !24231, metadata !DIExpression()) #9, !dbg !24924
  call void @llvm.dbg.declare(metadata i32* %5, metadata !24233, metadata !DIExpression()) #9, !dbg !24925
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24927, !srcloc !24238
  store i32 %21, i32* %5, align 4, !dbg !24927
  %22 = load i32, i32* %5, align 4, !dbg !24928
  %23 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24929
  store i32 %22, i32* %23, align 4, !dbg !24930
  %24 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %10, i32 0, i32 0, !dbg !24931
  %25 = load i32, i32* %24, align 4, !dbg !24931
  %26 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !24932
  store i32 %25, i32* %26, align 4, !dbg !24932
  %27 = load i32, i32* %14, align 4, !dbg !24933
  store i32 %27, i32* @announce_remaining, align 4, !dbg !24934
  br label %28, !dbg !24935

28:                                               ; preds = %65, %1
  %29 = call %struct._timeout.124* @first() #10, !dbg !24936
  %30 = icmp ne %struct._timeout.124* %29, null, !dbg !24937
  br i1 %30, label %31, label %38, !dbg !24938

31:                                               ; preds = %28
  %32 = call %struct._timeout.124* @first() #10, !dbg !24939
  %33 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %32, i32 0, i32 2, !dbg !24940
  %34 = load i64, i64* %33, align 8, !dbg !24940
  %35 = load i32, i32* @announce_remaining, align 4, !dbg !24941
  %36 = sext i32 %35 to i64, !dbg !24941
  %37 = icmp sle i64 %34, %36, !dbg !24942
  br label %38

38:                                               ; preds = %31, %28
  %39 = phi i1 [ false, %28 ], [ %37, %31 ], !dbg !24943
  br i1 %39, label %40, label %82, !dbg !24935

40:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.124** %16, metadata !24944, metadata !DIExpression()), !dbg !24946
  %41 = call %struct._timeout.124* @first() #10, !dbg !24947
  store %struct._timeout.124* %41, %struct._timeout.124** %16, align 4, !dbg !24946
  call void @llvm.dbg.declare(metadata i32* %17, metadata !24948, metadata !DIExpression()), !dbg !24949
  %42 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24950
  %43 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %42, i32 0, i32 2, !dbg !24951
  %44 = load i64, i64* %43, align 8, !dbg !24951
  %45 = trunc i64 %44 to i32, !dbg !24950
  store i32 %45, i32* %17, align 4, !dbg !24949
  %46 = load i32, i32* %17, align 4, !dbg !24952
  %47 = sext i32 %46 to i64, !dbg !24952
  %48 = load i64, i64* @curr_tick, align 8, !dbg !24953
  %49 = add i64 %48, %47, !dbg !24953
  store i64 %49, i64* @curr_tick, align 8, !dbg !24953
  %50 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24954
  %51 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %50, i32 0, i32 2, !dbg !24955
  store i64 0, i64* %51, align 8, !dbg !24956
  %52 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24957
  call void @remove_timeout(%struct._timeout.124* noundef %52) #10, !dbg !24958
  %53 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !24959
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !24959
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !24959
  %56 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !24343, metadata !DIExpression()) #9, !dbg !24960
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !24349, metadata !DIExpression()) #9, !dbg !24962
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !24963
  %59 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !24964
  %60 = load i32, i32* %59, align 4, !dbg !24964
  store i32 %60, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24353, metadata !DIExpression()) #9, !dbg !24965
  %61 = load i32, i32* %3, align 4, !dbg !24967
  %62 = icmp ne i32 %61, 0, !dbg !24968
  br i1 %62, label %63, label %64, !dbg !24969

63:                                               ; preds = %40
  br label %65, !dbg !24970

64:                                               ; preds = %40
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !24971, !srcloc !24364
  br label %65, !dbg !24972

65:                                               ; preds = %63, %64
  %66 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24973
  %67 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %66, i32 0, i32 1, !dbg !24974
  %68 = load void (%struct._timeout.124*)*, void (%struct._timeout.124*)** %67, align 8, !dbg !24974
  %69 = load %struct._timeout.124*, %struct._timeout.124** %16, align 4, !dbg !24975
  call void %68(%struct._timeout.124* noundef %69) #10, !dbg !24973
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !24223, metadata !DIExpression()) #9, !dbg !24976
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !24978
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %12, metadata !24231, metadata !DIExpression()) #9, !dbg !24979
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24233, metadata !DIExpression()) #9, !dbg !24980
  %71 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !24982, !srcloc !24238
  store i32 %71, i32* %4, align 4, !dbg !24982
  %72 = load i32, i32* %4, align 4, !dbg !24983
  %73 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !24984
  store i32 %72, i32* %73, align 4, !dbg !24985
  %74 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %12, i32 0, i32 0, !dbg !24986
  %75 = load i32, i32* %74, align 4, !dbg !24986
  %76 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %18, i32 0, i32 0, !dbg !24987
  store i32 %75, i32* %76, align 4, !dbg !24987
  %77 = bitcast %struct.z_spinlock_key* %15 to i8*, !dbg !24987
  %78 = bitcast %struct.z_spinlock_key* %18 to i8*, !dbg !24987
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %77, i8* align 4 %78, i32 4, i1 false), !dbg !24987
  %79 = load i32, i32* %17, align 4, !dbg !24988
  %80 = load i32, i32* @announce_remaining, align 4, !dbg !24989
  %81 = sub nsw i32 %80, %79, !dbg !24989
  store i32 %81, i32* @announce_remaining, align 4, !dbg !24989
  br label %28, !dbg !24935, !llvm.loop !24990

82:                                               ; preds = %38
  %83 = call %struct._timeout.124* @first() #10, !dbg !24992
  %84 = icmp ne %struct._timeout.124* %83, null, !dbg !24994
  br i1 %84, label %85, label %92, !dbg !24995

85:                                               ; preds = %82
  %86 = load i32, i32* @announce_remaining, align 4, !dbg !24996
  %87 = sext i32 %86 to i64, !dbg !24996
  %88 = call %struct._timeout.124* @first() #10, !dbg !24998
  %89 = getelementptr inbounds %struct._timeout.124, %struct._timeout.124* %88, i32 0, i32 2, !dbg !24999
  %90 = load i64, i64* %89, align 8, !dbg !25000
  %91 = sub nsw i64 %90, %87, !dbg !25000
  store i64 %91, i64* %89, align 8, !dbg !25000
  br label %92, !dbg !25001

92:                                               ; preds = %85, %82
  %93 = load i32, i32* @announce_remaining, align 4, !dbg !25002
  %94 = sext i32 %93 to i64, !dbg !25002
  %95 = load i64, i64* @curr_tick, align 8, !dbg !25003
  %96 = add i64 %95, %94, !dbg !25003
  store i64 %96, i64* @curr_tick, align 8, !dbg !25003
  store i32 0, i32* @announce_remaining, align 4, !dbg !25004
  %97 = call i32 @next_timeout() #10, !dbg !25005
  call void @sys_clock_set_timeout(i32 noundef %97, i1 noundef zeroext false) #10, !dbg !25006
  %98 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !25007
  %99 = bitcast i32* %98 to [1 x i32]*, !dbg !25007
  %100 = load [1 x i32], [1 x i32]* %99, align 4, !dbg !25007
  %101 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0
  %102 = bitcast i32* %101 to [1 x i32]*
  store [1 x i32] %100, [1 x i32]* %102, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !24343, metadata !DIExpression()) #9, !dbg !25008
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !24349, metadata !DIExpression()) #9, !dbg !25010
  %103 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !25011
  %104 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !25012
  %105 = load i32, i32* %104, align 4, !dbg !25012
  store i32 %105, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24353, metadata !DIExpression()) #9, !dbg !25013
  %106 = load i32, i32* %2, align 4, !dbg !25015
  %107 = icmp ne i32 %106, 0, !dbg !25016
  br i1 %107, label %108, label %109, !dbg !25017

108:                                              ; preds = %92
  br label %110, !dbg !25018

109:                                              ; preds = %92
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25019, !srcloc !24364
  br label %110, !dbg !25020

110:                                              ; preds = %108, %109
  ret void, !dbg !25021
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_tick_get() #1 !dbg !25022 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.z_spinlock_key, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i64, align 8
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.z_spinlock_key, align 4
  call void @llvm.dbg.declare(metadata i64* %7, metadata !25025, metadata !DIExpression()), !dbg !25026
  store i64 0, i64* %7, align 8, !dbg !25026
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !25027, metadata !DIExpression()), !dbg !25029
  %10 = bitcast %struct.z_spinlock_key* %8 to i8*, !dbg !25029
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !25029
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %9, metadata !25030, metadata !DIExpression()), !dbg !25029
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !24223, metadata !DIExpression()) #9, !dbg !25031
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25033
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !24231, metadata !DIExpression()) #9, !dbg !25034
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24233, metadata !DIExpression()) #9, !dbg !25035
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25037, !srcloc !24238
  store i32 %12, i32* %2, align 4, !dbg !25037
  %13 = load i32, i32* %2, align 4, !dbg !25038
  %14 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25039
  store i32 %13, i32* %14, align 4, !dbg !25040
  %15 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25041
  %16 = load i32, i32* %15, align 4, !dbg !25041
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !25029
  store i32 %16, i32* %17, align 4, !dbg !25029
  br label %18, !dbg !25029

18:                                               ; preds = %41, %0
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !25042
  %20 = load i32, i32* %19, align 4, !dbg !25042
  %21 = icmp ne i32 %20, 0, !dbg !25042
  %22 = xor i1 %21, true, !dbg !25042
  br i1 %22, label %23, label %43, !dbg !25029

23:                                               ; preds = %18
  %24 = load i64, i64* @curr_tick, align 8, !dbg !25044
  %25 = call i32 @elapsed() #10, !dbg !25046
  %26 = sext i32 %25 to i64, !dbg !25046
  %27 = add i64 %24, %26, !dbg !25047
  store i64 %27, i64* %7, align 8, !dbg !25048
  br label %28, !dbg !25049

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %9, i32 0, i32 0, !dbg !25042
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !25042
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !25042
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !24343, metadata !DIExpression()) #9, !dbg !25050
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %3, metadata !24349, metadata !DIExpression()) #9, !dbg !25052
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !25053
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %3, i32 0, i32 0, !dbg !25054
  %36 = load i32, i32* %35, align 4, !dbg !25054
  store i32 %36, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !24353, metadata !DIExpression()) #9, !dbg !25055
  %37 = load i32, i32* %1, align 4, !dbg !25057
  %38 = icmp ne i32 %37, 0, !dbg !25058
  br i1 %38, label %39, label %40, !dbg !25059

39:                                               ; preds = %28
  br label %41, !dbg !25060

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25061, !srcloc !24364
  br label %41, !dbg !25062

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !25042
  store i32 1, i32* %42, align 4, !dbg !25042
  br label %18, !dbg !25042, !llvm.loop !25063

43:                                               ; preds = %18
  %44 = load i64, i64* %7, align 8, !dbg !25065
  ret i64 %44, !dbg !25066
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_tick_get_32() #1 !dbg !25067 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !25068
  %2 = trunc i64 %1 to i32, !dbg !25069
  ret i32 %2, !dbg !25070
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_impl_k_uptime_ticks() #1 !dbg !25071 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !25072
  ret i64 %1, !dbg !25073
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) #1 !dbg !25074 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !25075, metadata !DIExpression()), !dbg !25076
  br label %3, !dbg !25077

3:                                                ; preds = %1
  br label %4, !dbg !25078

4:                                                ; preds = %3
  %5 = load i32, i32* %2, align 4, !dbg !25080
  %6 = icmp eq i32 %5, 0, !dbg !25082
  br i1 %6, label %7, label %10, !dbg !25083

7:                                                ; preds = %4
  br label %8, !dbg !25084

8:                                                ; preds = %7
  br label %9, !dbg !25086

9:                                                ; preds = %8
  br label %13, !dbg !25088

10:                                               ; preds = %4
  %11 = load i32, i32* %2, align 4, !dbg !25089
  call void @arch_busy_wait(i32 noundef %11) #10, !dbg !25090
  br label %12, !dbg !25091

12:                                               ; preds = %10
  br label %13, !dbg !25092

13:                                               ; preds = %9, %12
  ret void, !dbg !25094
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) #1 !dbg !25095 {
  %2 = alloca i64, align 8
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca %union.argument_value, align 8
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !25098, metadata !DIExpression()), !dbg !25099
  call void @llvm.dbg.declare(metadata i64* %4, metadata !25100, metadata !DIExpression()), !dbg !25101
  %9 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !25102
  %10 = load i64, i64* %9, align 8, !dbg !25102
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !25102
  store i64 -1, i64* %11, align 8, !dbg !25102
  %12 = icmp eq i64 %10, -1, !dbg !25102
  br i1 %12, label %13, label %14, !dbg !25104

13:                                               ; preds = %1
  store i64 -1, i64* %2, align 8, !dbg !25105
  br label %40, !dbg !25105

14:                                               ; preds = %1
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !25107
  %16 = load i64, i64* %15, align 8, !dbg !25107
  %17 = getelementptr inbounds %union.argument_value, %union.argument_value* %6, i32 0, i32 0, !dbg !25107
  store i64 0, i64* %17, align 8, !dbg !25107
  %18 = icmp eq i64 %16, 0, !dbg !25107
  br i1 %18, label %19, label %21, !dbg !25109

19:                                               ; preds = %14
  %20 = call i64 @sys_clock_tick_get() #10, !dbg !25110
  store i64 %20, i64* %2, align 8, !dbg !25112
  br label %40, !dbg !25112

21:                                               ; preds = %14
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !25113
  %23 = load i64, i64* %22, align 8, !dbg !25113
  store i64 %23, i64* %4, align 8, !dbg !25115
  %24 = load i64, i64* %4, align 8, !dbg !25116
  %25 = sub nsw i64 -2, %24, !dbg !25116
  %26 = icmp sge i64 %25, 0, !dbg !25118
  br i1 %26, label %27, label %30, !dbg !25119

27:                                               ; preds = %21
  %28 = load i64, i64* %4, align 8, !dbg !25120
  %29 = sub nsw i64 -2, %28, !dbg !25120
  store i64 %29, i64* %2, align 8, !dbg !25122
  br label %40, !dbg !25122

30:                                               ; preds = %21
  %31 = call i64 @sys_clock_tick_get() #10, !dbg !25123
  %32 = load i64, i64* %4, align 8, !dbg !25124
  %33 = icmp sgt i64 1, %32, !dbg !25124
  br i1 %33, label %34, label %35, !dbg !25124

34:                                               ; preds = %30
  br label %37, !dbg !25124

35:                                               ; preds = %30
  %36 = load i64, i64* %4, align 8, !dbg !25124
  br label %37, !dbg !25124

37:                                               ; preds = %35, %34
  %38 = phi i64 [ 1, %34 ], [ %36, %35 ], !dbg !25124
  %39 = add nsw i64 %31, %38, !dbg !25125
  store i64 %39, i64* %2, align 8, !dbg !25126
  br label %40, !dbg !25126

40:                                               ; preds = %37, %27, %19, %13
  %41 = load i64, i64* %2, align 8, !dbg !25127
  ret i64 %41, !dbg !25127
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_impl_atomic_cas(i32* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !25128 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca i32*, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %10, align 4
  call void @llvm.dbg.declare(metadata i32** %10, metadata !25129, metadata !DIExpression()), !dbg !25130
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !25131, metadata !DIExpression()), !dbg !25132
  store i32 %2, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25133, metadata !DIExpression()), !dbg !25134
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !25135, metadata !DIExpression()), !dbg !25140
  call void @llvm.dbg.declare(metadata i32* %14, metadata !25141, metadata !DIExpression()), !dbg !25142
  store i32 0, i32* %14, align 4, !dbg !25142
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !25143, metadata !DIExpression()) #9, !dbg !25148
  %16 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !25150
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !25151, metadata !DIExpression()) #9, !dbg !25152
  call void @llvm.dbg.declare(metadata i32* %5, metadata !25153, metadata !DIExpression()) #9, !dbg !25155
  %17 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25157, !srcloc !25158
  store i32 %17, i32* %5, align 4, !dbg !25157
  %18 = load i32, i32* %5, align 4, !dbg !25159
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !25160
  store i32 %18, i32* %19, align 4, !dbg !25161
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !25162
  %21 = load i32, i32* %20, align 4, !dbg !25162
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !25163
  store i32 %21, i32* %22, align 4, !dbg !25163
  %23 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25163
  %24 = bitcast %struct.z_spinlock_key* %15 to i8*, !dbg !25163
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %23, i8* align 4 %24, i32 4, i1 false), !dbg !25163
  %25 = load i32*, i32** %10, align 4, !dbg !25164
  %26 = load i32, i32* %25, align 4, !dbg !25166
  %27 = load i32, i32* %11, align 4, !dbg !25167
  %28 = icmp eq i32 %26, %27, !dbg !25168
  br i1 %28, label %29, label %32, !dbg !25169

29:                                               ; preds = %3
  %30 = load i32, i32* %12, align 4, !dbg !25170
  %31 = load i32*, i32** %10, align 4, !dbg !25172
  store i32 %30, i32* %31, align 4, !dbg !25173
  store i32 1, i32* %14, align 4, !dbg !25174
  br label %32, !dbg !25175

32:                                               ; preds = %29, %3
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25176
  %34 = bitcast i32* %33 to [1 x i32]*, !dbg !25176
  %35 = load [1 x i32], [1 x i32]* %34, align 4, !dbg !25176
  %36 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %37 = bitcast i32* %36 to [1 x i32]*
  store [1 x i32] %35, [1 x i32]* %37, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !25177, metadata !DIExpression()) #9, !dbg !25181
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !25183, metadata !DIExpression()) #9, !dbg !25184
  %38 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !25185
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !25186
  %40 = load i32, i32* %39, align 4, !dbg !25186
  store i32 %40, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25187, metadata !DIExpression()) #9, !dbg !25189
  %41 = load i32, i32* %4, align 4, !dbg !25191
  %42 = icmp ne i32 %41, 0, !dbg !25193
  br i1 %42, label %43, label %44, !dbg !25194

43:                                               ; preds = %32
  br label %45, !dbg !25195

44:                                               ; preds = %32
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25197, !srcloc !25198
  br label %45, !dbg !25199

45:                                               ; preds = %43, %44
  %46 = load i32, i32* %14, align 4, !dbg !25200
  %47 = icmp ne i32 %46, 0, !dbg !25200
  ret i1 %47, !dbg !25201
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_impl_atomic_ptr_cas(i8** noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !25202 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_spinlock_key, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.z_spinlock_key, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca i8**, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i8*, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.z_spinlock_key, align 4
  store i8** %0, i8*** %10, align 4
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !25208, metadata !DIExpression()), !dbg !25209
  store i8* %1, i8** %11, align 4
  call void @llvm.dbg.declare(metadata i8** %11, metadata !25210, metadata !DIExpression()), !dbg !25211
  store i8* %2, i8** %12, align 4
  call void @llvm.dbg.declare(metadata i8** %12, metadata !25212, metadata !DIExpression()), !dbg !25213
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %13, metadata !25214, metadata !DIExpression()), !dbg !25215
  call void @llvm.dbg.declare(metadata i32* %14, metadata !25216, metadata !DIExpression()), !dbg !25217
  store i32 0, i32* %14, align 4, !dbg !25217
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !25143, metadata !DIExpression()) #9, !dbg !25218
  %16 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !25220
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %8, metadata !25151, metadata !DIExpression()) #9, !dbg !25221
  call void @llvm.dbg.declare(metadata i32* %5, metadata !25153, metadata !DIExpression()) #9, !dbg !25222
  %17 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25224, !srcloc !25158
  store i32 %17, i32* %5, align 4, !dbg !25224
  %18 = load i32, i32* %5, align 4, !dbg !25225
  %19 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !25226
  store i32 %18, i32* %19, align 4, !dbg !25227
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %8, i32 0, i32 0, !dbg !25228
  %21 = load i32, i32* %20, align 4, !dbg !25228
  %22 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %15, i32 0, i32 0, !dbg !25229
  store i32 %21, i32* %22, align 4, !dbg !25229
  %23 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25229
  %24 = bitcast %struct.z_spinlock_key* %15 to i8*, !dbg !25229
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %23, i8* align 4 %24, i32 4, i1 false), !dbg !25229
  %25 = load i8**, i8*** %10, align 4, !dbg !25230
  %26 = load i8*, i8** %25, align 4, !dbg !25232
  %27 = load i8*, i8** %11, align 4, !dbg !25233
  %28 = icmp eq i8* %26, %27, !dbg !25234
  br i1 %28, label %29, label %32, !dbg !25235

29:                                               ; preds = %3
  %30 = load i8*, i8** %12, align 4, !dbg !25236
  %31 = load i8**, i8*** %10, align 4, !dbg !25238
  store i8* %30, i8** %31, align 4, !dbg !25239
  store i32 1, i32* %14, align 4, !dbg !25240
  br label %32, !dbg !25241

32:                                               ; preds = %29, %3
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25242
  %34 = bitcast i32* %33 to [1 x i32]*, !dbg !25242
  %35 = load [1 x i32], [1 x i32]* %34, align 4, !dbg !25242
  %36 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0
  %37 = bitcast i32* %36 to [1 x i32]*
  store [1 x i32] %35, [1 x i32]* %37, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !25177, metadata !DIExpression()) #9, !dbg !25243
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %6, metadata !25183, metadata !DIExpression()) #9, !dbg !25245
  %38 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !25246
  %39 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %6, i32 0, i32 0, !dbg !25247
  %40 = load i32, i32* %39, align 4, !dbg !25247
  store i32 %40, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25187, metadata !DIExpression()) #9, !dbg !25248
  %41 = load i32, i32* %4, align 4, !dbg !25250
  %42 = icmp ne i32 %41, 0, !dbg !25251
  br i1 %42, label %43, label %44, !dbg !25252

43:                                               ; preds = %32
  br label %45, !dbg !25253

44:                                               ; preds = %32
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25254, !srcloc !25198
  br label %45, !dbg !25255

45:                                               ; preds = %43, %44
  %46 = load i32, i32* %14, align 4, !dbg !25256
  %47 = icmp ne i32 %46, 0, !dbg !25256
  ret i1 %47, !dbg !25257
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_atomic_add(i32* noundef %0, i32 noundef %1) #1 !dbg !25258 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !25259, metadata !DIExpression()), !dbg !25260
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25261, metadata !DIExpression()), !dbg !25262
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25263, metadata !DIExpression()), !dbg !25264
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25265, metadata !DIExpression()), !dbg !25266
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25267
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25269
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25270
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25271
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25273, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25273
  %16 = load i32, i32* %4, align 4, !dbg !25274
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25275
  store i32 %16, i32* %17, align 4, !dbg !25276
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25277
  %19 = load i32, i32* %18, align 4, !dbg !25277
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25278
  store i32 %19, i32* %20, align 4, !dbg !25278
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25278
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25278
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25278
  %23 = load i32*, i32** %9, align 4, !dbg !25279
  %24 = load i32, i32* %23, align 4, !dbg !25280
  store i32 %24, i32* %12, align 4, !dbg !25281
  %25 = load i32, i32* %10, align 4, !dbg !25282
  %26 = load i32*, i32** %9, align 4, !dbg !25283
  %27 = load i32, i32* %26, align 4, !dbg !25284
  %28 = add nsw i32 %27, %25, !dbg !25284
  store i32 %28, i32* %26, align 4, !dbg !25284
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25285
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !25285
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !25285
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25286
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25288
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25289
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25290
  %36 = load i32, i32* %35, align 4, !dbg !25290
  store i32 %36, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25291
  %37 = load i32, i32* %3, align 4, !dbg !25293
  %38 = icmp ne i32 %37, 0, !dbg !25294
  br i1 %38, label %39, label %40, !dbg !25295

39:                                               ; preds = %2
  br label %41, !dbg !25296

40:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25297, !srcloc !25198
  br label %41, !dbg !25298

41:                                               ; preds = %39, %40
  %42 = load i32, i32* %12, align 4, !dbg !25299
  ret i32 %42, !dbg !25300
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_atomic_sub(i32* noundef %0, i32 noundef %1) #1 !dbg !25301 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !25302, metadata !DIExpression()), !dbg !25303
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25304, metadata !DIExpression()), !dbg !25305
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25306, metadata !DIExpression()), !dbg !25307
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25308, metadata !DIExpression()), !dbg !25309
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25310
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25312
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25313
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25314
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25316, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25316
  %16 = load i32, i32* %4, align 4, !dbg !25317
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25318
  store i32 %16, i32* %17, align 4, !dbg !25319
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25320
  %19 = load i32, i32* %18, align 4, !dbg !25320
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25321
  store i32 %19, i32* %20, align 4, !dbg !25321
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25321
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25321
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25321
  %23 = load i32*, i32** %9, align 4, !dbg !25322
  %24 = load i32, i32* %23, align 4, !dbg !25323
  store i32 %24, i32* %12, align 4, !dbg !25324
  %25 = load i32, i32* %10, align 4, !dbg !25325
  %26 = load i32*, i32** %9, align 4, !dbg !25326
  %27 = load i32, i32* %26, align 4, !dbg !25327
  %28 = sub nsw i32 %27, %25, !dbg !25327
  store i32 %28, i32* %26, align 4, !dbg !25327
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25328
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !25328
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !25328
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25329
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25331
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25332
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25333
  %36 = load i32, i32* %35, align 4, !dbg !25333
  store i32 %36, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25334
  %37 = load i32, i32* %3, align 4, !dbg !25336
  %38 = icmp ne i32 %37, 0, !dbg !25337
  br i1 %38, label %39, label %40, !dbg !25338

39:                                               ; preds = %2
  br label %41, !dbg !25339

40:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25340, !srcloc !25198
  br label %41, !dbg !25341

41:                                               ; preds = %39, %40
  %42 = load i32, i32* %12, align 4, !dbg !25342
  ret i32 %42, !dbg !25343
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @atomic_get(i32* noundef %0) #1 !dbg !25344 {
  %2 = alloca i32*, align 4
  store i32* %0, i32** %2, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !25349, metadata !DIExpression()), !dbg !25350
  %3 = load i32*, i32** %2, align 4, !dbg !25351
  %4 = load i32, i32* %3, align 4, !dbg !25352
  ret i32 %4, !dbg !25353
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @atomic_ptr_get(i8** noundef %0) #1 !dbg !25354 {
  %2 = alloca i8**, align 4
  store i8** %0, i8*** %2, align 4
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !25359, metadata !DIExpression()), !dbg !25360
  %3 = load i8**, i8*** %2, align 4, !dbg !25361
  %4 = load i8*, i8** %3, align 4, !dbg !25362
  ret i8* %4, !dbg !25363
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_atomic_set(i32* noundef %0, i32 noundef %1) #1 !dbg !25364 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !25365, metadata !DIExpression()), !dbg !25366
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25367, metadata !DIExpression()), !dbg !25368
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25369, metadata !DIExpression()), !dbg !25370
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25371, metadata !DIExpression()), !dbg !25372
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25373
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25375
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25376
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25377
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25379, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25379
  %16 = load i32, i32* %4, align 4, !dbg !25380
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25381
  store i32 %16, i32* %17, align 4, !dbg !25382
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25383
  %19 = load i32, i32* %18, align 4, !dbg !25383
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25384
  store i32 %19, i32* %20, align 4, !dbg !25384
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25384
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25384
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25384
  %23 = load i32*, i32** %9, align 4, !dbg !25385
  %24 = load i32, i32* %23, align 4, !dbg !25386
  store i32 %24, i32* %12, align 4, !dbg !25387
  %25 = load i32, i32* %10, align 4, !dbg !25388
  %26 = load i32*, i32** %9, align 4, !dbg !25389
  store i32 %25, i32* %26, align 4, !dbg !25390
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25391
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !25391
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !25391
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25392
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25394
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25395
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25396
  %34 = load i32, i32* %33, align 4, !dbg !25396
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25397
  %35 = load i32, i32* %3, align 4, !dbg !25399
  %36 = icmp ne i32 %35, 0, !dbg !25400
  br i1 %36, label %37, label %38, !dbg !25401

37:                                               ; preds = %2
  br label %39, !dbg !25402

38:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25403, !srcloc !25198
  br label %39, !dbg !25404

39:                                               ; preds = %37, %38
  %40 = load i32, i32* %12, align 4, !dbg !25405
  ret i32 %40, !dbg !25406
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @z_impl_atomic_ptr_set(i8** noundef %0, i8* noundef %1) #1 !dbg !25407 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i8**, align 4
  %10 = alloca i8*, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i8*, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i8** %0, i8*** %9, align 4
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !25410, metadata !DIExpression()), !dbg !25411
  store i8* %1, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !25412, metadata !DIExpression()), !dbg !25413
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25414, metadata !DIExpression()), !dbg !25415
  call void @llvm.dbg.declare(metadata i8** %12, metadata !25416, metadata !DIExpression()), !dbg !25417
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25418
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25420
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25421
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25422
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25424, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25424
  %16 = load i32, i32* %4, align 4, !dbg !25425
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25426
  store i32 %16, i32* %17, align 4, !dbg !25427
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25428
  %19 = load i32, i32* %18, align 4, !dbg !25428
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25429
  store i32 %19, i32* %20, align 4, !dbg !25429
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25429
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25429
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25429
  %23 = load i8**, i8*** %9, align 4, !dbg !25430
  %24 = load i8*, i8** %23, align 4, !dbg !25431
  store i8* %24, i8** %12, align 4, !dbg !25432
  %25 = load i8*, i8** %10, align 4, !dbg !25433
  %26 = load i8**, i8*** %9, align 4, !dbg !25434
  store i8* %25, i8** %26, align 4, !dbg !25435
  %27 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25436
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !25436
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !25436
  %30 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25437
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25439
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25440
  %33 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25441
  %34 = load i32, i32* %33, align 4, !dbg !25441
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25442
  %35 = load i32, i32* %3, align 4, !dbg !25444
  %36 = icmp ne i32 %35, 0, !dbg !25445
  br i1 %36, label %37, label %38, !dbg !25446

37:                                               ; preds = %2
  br label %39, !dbg !25447

38:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25448, !srcloc !25198
  br label %39, !dbg !25449

39:                                               ; preds = %37, %38
  %40 = load i8*, i8** %12, align 4, !dbg !25450
  ret i8* %40, !dbg !25451
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_atomic_or(i32* noundef %0, i32 noundef %1) #1 !dbg !25452 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !25453, metadata !DIExpression()), !dbg !25454
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25455, metadata !DIExpression()), !dbg !25456
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25457, metadata !DIExpression()), !dbg !25458
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25459, metadata !DIExpression()), !dbg !25460
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25461
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25463
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25464
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25465
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25467, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25467
  %16 = load i32, i32* %4, align 4, !dbg !25468
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25469
  store i32 %16, i32* %17, align 4, !dbg !25470
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25471
  %19 = load i32, i32* %18, align 4, !dbg !25471
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25472
  store i32 %19, i32* %20, align 4, !dbg !25472
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25472
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25472
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25472
  %23 = load i32*, i32** %9, align 4, !dbg !25473
  %24 = load i32, i32* %23, align 4, !dbg !25474
  store i32 %24, i32* %12, align 4, !dbg !25475
  %25 = load i32, i32* %10, align 4, !dbg !25476
  %26 = load i32*, i32** %9, align 4, !dbg !25477
  %27 = load i32, i32* %26, align 4, !dbg !25478
  %28 = or i32 %27, %25, !dbg !25478
  store i32 %28, i32* %26, align 4, !dbg !25478
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25479
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !25479
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !25479
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25480
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25482
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25483
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25484
  %36 = load i32, i32* %35, align 4, !dbg !25484
  store i32 %36, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25485
  %37 = load i32, i32* %3, align 4, !dbg !25487
  %38 = icmp ne i32 %37, 0, !dbg !25488
  br i1 %38, label %39, label %40, !dbg !25489

39:                                               ; preds = %2
  br label %41, !dbg !25490

40:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25491, !srcloc !25198
  br label %41, !dbg !25492

41:                                               ; preds = %39, %40
  %42 = load i32, i32* %12, align 4, !dbg !25493
  ret i32 %42, !dbg !25494
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_atomic_xor(i32* noundef %0, i32 noundef %1) #1 !dbg !25495 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !25496, metadata !DIExpression()), !dbg !25497
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25498, metadata !DIExpression()), !dbg !25499
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25500, metadata !DIExpression()), !dbg !25501
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25502, metadata !DIExpression()), !dbg !25503
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25504
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25506
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25507
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25508
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25510, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25510
  %16 = load i32, i32* %4, align 4, !dbg !25511
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25512
  store i32 %16, i32* %17, align 4, !dbg !25513
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25514
  %19 = load i32, i32* %18, align 4, !dbg !25514
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25515
  store i32 %19, i32* %20, align 4, !dbg !25515
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25515
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25515
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25515
  %23 = load i32*, i32** %9, align 4, !dbg !25516
  %24 = load i32, i32* %23, align 4, !dbg !25517
  store i32 %24, i32* %12, align 4, !dbg !25518
  %25 = load i32, i32* %10, align 4, !dbg !25519
  %26 = load i32*, i32** %9, align 4, !dbg !25520
  %27 = load i32, i32* %26, align 4, !dbg !25521
  %28 = xor i32 %27, %25, !dbg !25521
  store i32 %28, i32* %26, align 4, !dbg !25521
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25522
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !25522
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !25522
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25523
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25525
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25526
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25527
  %36 = load i32, i32* %35, align 4, !dbg !25527
  store i32 %36, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25528
  %37 = load i32, i32* %3, align 4, !dbg !25530
  %38 = icmp ne i32 %37, 0, !dbg !25531
  br i1 %38, label %39, label %40, !dbg !25532

39:                                               ; preds = %2
  br label %41, !dbg !25533

40:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25534, !srcloc !25198
  br label %41, !dbg !25535

41:                                               ; preds = %39, %40
  %42 = load i32, i32* %12, align 4, !dbg !25536
  ret i32 %42, !dbg !25537
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_atomic_and(i32* noundef %0, i32 noundef %1) #1 !dbg !25538 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !25539, metadata !DIExpression()), !dbg !25540
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25541, metadata !DIExpression()), !dbg !25542
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25543, metadata !DIExpression()), !dbg !25544
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25545, metadata !DIExpression()), !dbg !25546
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25547
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25549
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25550
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25551
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25553, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25553
  %16 = load i32, i32* %4, align 4, !dbg !25554
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25555
  store i32 %16, i32* %17, align 4, !dbg !25556
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25557
  %19 = load i32, i32* %18, align 4, !dbg !25557
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25558
  store i32 %19, i32* %20, align 4, !dbg !25558
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25558
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25558
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25558
  %23 = load i32*, i32** %9, align 4, !dbg !25559
  %24 = load i32, i32* %23, align 4, !dbg !25560
  store i32 %24, i32* %12, align 4, !dbg !25561
  %25 = load i32, i32* %10, align 4, !dbg !25562
  %26 = load i32*, i32** %9, align 4, !dbg !25563
  %27 = load i32, i32* %26, align 4, !dbg !25564
  %28 = and i32 %27, %25, !dbg !25564
  store i32 %28, i32* %26, align 4, !dbg !25564
  %29 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25565
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !25565
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !25565
  %32 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25566
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25568
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25569
  %35 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25570
  %36 = load i32, i32* %35, align 4, !dbg !25570
  store i32 %36, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25571
  %37 = load i32, i32* %3, align 4, !dbg !25573
  %38 = icmp ne i32 %37, 0, !dbg !25574
  br i1 %38, label %39, label %40, !dbg !25575

39:                                               ; preds = %2
  br label %41, !dbg !25576

40:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25577, !srcloc !25198
  br label %41, !dbg !25578

41:                                               ; preds = %39, %40
  %42 = load i32, i32* %12, align 4, !dbg !25579
  ret i32 %42, !dbg !25580
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_atomic_nand(i32* noundef %0, i32 noundef %1) #1 !dbg !25581 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.z_spinlock_key, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %struct.z_spinlock_key, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.z_spinlock_key, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.z_spinlock_key, align 4
  store i32* %0, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !25582, metadata !DIExpression()), !dbg !25583
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25584, metadata !DIExpression()), !dbg !25585
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %11, metadata !25586, metadata !DIExpression()), !dbg !25587
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25588, metadata !DIExpression()), !dbg !25589
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !25143, metadata !DIExpression()) #9, !dbg !25590
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !25592
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %7, metadata !25151, metadata !DIExpression()) #9, !dbg !25593
  call void @llvm.dbg.declare(metadata i32* %4, metadata !25153, metadata !DIExpression()) #9, !dbg !25594
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !25596, !srcloc !25158
  store i32 %15, i32* %4, align 4, !dbg !25596
  %16 = load i32, i32* %4, align 4, !dbg !25597
  %17 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25598
  store i32 %16, i32* %17, align 4, !dbg !25599
  %18 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %7, i32 0, i32 0, !dbg !25600
  %19 = load i32, i32* %18, align 4, !dbg !25600
  %20 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %13, i32 0, i32 0, !dbg !25601
  store i32 %19, i32* %20, align 4, !dbg !25601
  %21 = bitcast %struct.z_spinlock_key* %11 to i8*, !dbg !25601
  %22 = bitcast %struct.z_spinlock_key* %13 to i8*, !dbg !25601
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %21, i8* align 4 %22, i32 4, i1 false), !dbg !25601
  %23 = load i32*, i32** %9, align 4, !dbg !25602
  %24 = load i32, i32* %23, align 4, !dbg !25603
  store i32 %24, i32* %12, align 4, !dbg !25604
  %25 = load i32*, i32** %9, align 4, !dbg !25605
  %26 = load i32, i32* %25, align 4, !dbg !25606
  %27 = load i32, i32* %10, align 4, !dbg !25607
  %28 = and i32 %26, %27, !dbg !25608
  %29 = xor i32 %28, -1, !dbg !25609
  %30 = load i32*, i32** %9, align 4, !dbg !25610
  store i32 %29, i32* %30, align 4, !dbg !25611
  %31 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %11, i32 0, i32 0, !dbg !25612
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !25612
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !25612
  %34 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @lock.267, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !25177, metadata !DIExpression()) #9, !dbg !25613
  call void @llvm.dbg.declare(metadata %struct.z_spinlock_key* %5, metadata !25183, metadata !DIExpression()) #9, !dbg !25615
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !25616
  %37 = getelementptr inbounds %struct.z_spinlock_key, %struct.z_spinlock_key* %5, i32 0, i32 0, !dbg !25617
  %38 = load i32, i32* %37, align 4, !dbg !25617
  store i32 %38, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25187, metadata !DIExpression()) #9, !dbg !25618
  %39 = load i32, i32* %3, align 4, !dbg !25620
  %40 = icmp ne i32 %39, 0, !dbg !25621
  br i1 %40, label %41, label %42, !dbg !25622

41:                                               ; preds = %2
  br label %43, !dbg !25623

42:                                               ; preds = %2
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !25624, !srcloc !25198
  br label %43, !dbg !25625

43:                                               ; preds = %41, %42
  %44 = load i32, i32* %12, align 4, !dbg !25626
  ret i32 %44, !dbg !25627
}

; Function Attrs: noinline nounwind optnone
define dso_local void @boot_banner() #1 !dbg !25628 {
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.282, i32 0, i32 0)) #10, !dbg !25630
  ret void, !dbg !25631
}

attributes #0 = { "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn writeonly }
attributes #4 = { nofree nosync nounwind willreturn }
attributes #5 = { noinline noreturn nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { noinline nounwind optnone readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { alwaysinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin "no-builtins" }
attributes #11 = { nobuiltin nounwind readnone willreturn "no-builtins" }
attributes #12 = { nobuiltin noreturn "no-builtins" }
attributes #13 = { nobuiltin nounwind "no-builtins" }

!llvm.dbg.cu = !{!952, !2, !2358, !27, !269, !2360, !2362, !2459, !2461, !2498, !278, !348, !402, !2500, !2502, !2533, !2535, !2537, !2553, !2596, !2656, !2687, !2703, !426, !436, !2713, !547, !963, !1029, !1232, !2748, !1468, !2750, !2752, !1623, !2922, !2927, !1648, !1700, !2930, !1826, !2933, !1833, !2161, !2951, !2173, !2196, !2953, !2314, !2353, !2956}
!llvm.ident = !{!2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958, !2958}
!llvm.module.flags = !{!2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 38, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 1664, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 26)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 832, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread", scope: !27, file: !107, line: 36, type: !113, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !258, !262, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "_k_thread_data_thread", scope: !27, file: !107, line: 36, type: !108, isLocal: false, isDefinition: true, align: 32)
!107 = !DIFile(filename: "zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !{!111, !229, !238, !239, !244, !245, !246, !247, !248, !249, !251, !255}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !108, file: !109, line: 621, baseType: !112, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !188, !201, !202, !203, !204, !224}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !113, file: !114, line: 247, baseType: !117, size: 384)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !118)
!118 = !{!119, !147, !155, !158, !159, !172, !174, !175}
!119 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 60, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 60, size: 64, elements: !121)
!121 = !{!122, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !120, file: !114, line: 61, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !126)
!126 = !{!127, !133}
!127 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 38, baseType: !128, size: 32)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 38, size: 32, elements: !129)
!129 = !{!130, !132}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !128, file: !124, line: 39, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !128, file: !124, line: 40, baseType: !131, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 42, baseType: !134, size: 32, offset: 32)
!134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 42, size: 32, elements: !135)
!135 = !{!136, !137}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !134, file: !124, line: 43, baseType: !131, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !134, file: !124, line: 44, baseType: !131, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !120, file: !114, line: 62, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !141)
!140 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !{!142}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !139, file: !140, line: 50, baseType: !143, size: 64)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !145)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!145 = !{!146}
!146 = !DISubrange(count: 2)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !117, file: !114, line: 68, baseType: !148, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !151)
!150 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !152)
!152 = !{!153}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !151, file: !150, line: 232, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !125)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !117, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !157)
!157 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !117, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!159 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 90, baseType: !160, size: 16, offset: 112)
!160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 90, size: 16, elements: !161)
!161 = !{!162, !169}
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !160, file: !114, line: 91, baseType: !163, size: 16)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !160, file: !114, line: 91, size: 16, elements: !164)
!164 = !{!165, !168}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !163, file: !114, line: 96, baseType: !166, size: 8)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !167)
!167 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !163, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !160, file: !114, line: 100, baseType: !170, size: 16)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !171)
!171 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !117, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !117, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !117, file: !114, line: 131, baseType: !176, size: 192, offset: 192)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !177)
!177 = !{!178, !179, !185}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !176, file: !150, line: 245, baseType: !123, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !176, file: !150, line: 246, baseType: !180, size: 32, offset: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !176, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !187)
!187 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !113, file: !114, line: 250, baseType: !189, size: 288, offset: 384)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !191)
!190 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !189, file: !190, line: 26, baseType: !173, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !189, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !189, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !189, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !189, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !189, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !189, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !189, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !189, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !113, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !113, file: !114, line: 256, baseType: !149, size: 64, offset: 704)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !113, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !113, file: !114, line: 325, baseType: !205, size: 32, offset: 800)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !207)
!207 = !{!208, !219, !220}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !206, file: !109, line: 5074, baseType: !209, size: 96)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !211)
!210 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!211 = !{!212, !215, !216}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !209, file: !210, line: 57, baseType: !213, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !210, line: 57, flags: DIFlagFwdDecl)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !209, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !209, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !218, line: 214, baseType: !32)
!218 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !206, file: !109, line: 5075, baseType: !149, size: 64, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !206, file: !109, line: 5076, baseType: !221, offset: 160)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!222 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !113, file: !114, line: 343, baseType: !225, size: 64, offset: 832)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !226)
!226 = !{!227, !228}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !225, file: !190, line: 63, baseType: !173, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !225, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !108, file: !109, line: 622, baseType: !230, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !233)
!232 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = !{!236}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !233, file: !234, line: 48, baseType: !237, size: 8)
!237 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !108, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !108, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !232, line: 46, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !102, !102, !102}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !108, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !108, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !108, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !108, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !108, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !108, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !108, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{null}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !108, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "thread", scope: !27, file: !107, line: 36, type: !260, isLocal: false, isDefinition: true)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !112)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread", scope: !27, file: !107, line: 36, type: !264, isLocal: false, isDefinition: true, align: 64)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 4096, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 512)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(name: "_char_out", scope: !269, file: !272, line: 54, type: !273, isLocal: false, isDefinition: true)
!269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !270, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !271, splitDebugInlining: false, nameTableKind: None)
!270 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!271 = !{!267}
!272 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{!103, !103}
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "z_post_ops_required", scope: !278, file: !317, line: 27, type: !342, isLocal: true, isDefinition: true)
!278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !279, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !280, retainedTypes: !292, globals: !314, splitDebugInlining: false, nameTableKind: None)
!279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/pm/pm.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!280 = !{!281, !30}
!281 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pm_state", file: !282, line: 27, baseType: !32, size: 32, elements: !283)
!282 = !DIFile(filename: "zephyr/include/zephyr/pm/state.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!283 = !{!284, !285, !286, !287, !288, !289, !290, !291}
!284 = !DIEnumerator(name: "PM_STATE_ACTIVE", value: 0)
!285 = !DIEnumerator(name: "PM_STATE_RUNTIME_IDLE", value: 1)
!286 = !DIEnumerator(name: "PM_STATE_SUSPEND_TO_IDLE", value: 2)
!287 = !DIEnumerator(name: "PM_STATE_STANDBY", value: 3)
!288 = !DIEnumerator(name: "PM_STATE_SUSPEND_TO_RAM", value: 4)
!289 = !DIEnumerator(name: "PM_STATE_SUSPEND_TO_DISK", value: 5)
!290 = !DIEnumerator(name: "PM_STATE_SOFT_OFF", value: 6)
!291 = !DIEnumerator(name: "PM_STATE_COUNT", value: 7)
!292 = !{!102, !293, !103, !24, !295, !311, !173, !312}
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !294, line: 46, baseType: !186)
!294 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_notifier", file: !297, line: 54, size: 96, elements: !298)
!297 = !DIFile(filename: "zephyr/include/zephyr/pm/pm.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = !{!299, !306, !310}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "_node", scope: !296, file: !297, line: 55, baseType: !300, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !301, line: 33, baseType: !302)
!301 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !301, line: 29, size: 32, elements: !303)
!303 = !{!304}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !302, file: !301, line: 30, baseType: !305, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "state_entry", scope: !296, file: !297, line: 60, baseType: !307, size: 32, offset: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DISubroutineType(types: !309)
!309 = !{null, !281}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "state_exit", scope: !296, file: !297, line: 65, baseType: !307, size: 32, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !313)
!313 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!314 = !{!276, !315, !319, !321, !332, !334}
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "pm_forced_state_lock", scope: !278, file: !317, line: 44, type: !318, isLocal: true, isDefinition: true)
!317 = !DIFile(filename: "zephyr/subsys/pm/pm.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "pm_notifier_lock", scope: !278, file: !317, line: 49, type: !318, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "z_cpus_pm_state", scope: !278, file: !317, line: 36, type: !323, isLocal: true, isDefinition: true)
!323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 128, elements: !330)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_state_info", file: !282, line: 114, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !324, file: !282, line: 115, baseType: !281, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "substate_id", scope: !324, file: !282, line: 141, baseType: !156, size: 8, offset: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "min_residency_us", scope: !324, file: !282, line: 149, baseType: !173, size: 32, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "exit_latency_us", scope: !324, file: !282, line: 156, baseType: !173, size: 32, offset: 96)
!330 = !{!331}
!331 = !DISubrange(count: 1)
!332 = !DIGlobalVariableExpression(var: !333, expr: !DIExpression())
!333 = distinct !DIGlobalVariable(name: "z_cpus_pm_forced_state", scope: !278, file: !317, line: 40, type: !323, isLocal: true, isDefinition: true)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "pm_notifiers", scope: !278, file: !317, line: 28, type: !336, isLocal: true, isDefinition: true)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !301, line: 40, baseType: !337)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !301, line: 35, size: 64, elements: !338)
!338 = !{!339, !341}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !337, file: !301, line: 36, baseType: !340, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !337, file: !301, line: 37, baseType: !340, size: 32, offset: 32)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 32, elements: !330)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !344, line: 22, baseType: !345)
!344 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!345 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "max_latency_ticks", scope: !348, file: !376, line: 50, type: !250, isLocal: true, isDefinition: true)
!348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !349, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !280, retainedTypes: !350, globals: !373, splitDebugInlining: false, nameTableKind: None)
!349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/pm/policy.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!350 = !{!351, !293, !217, !103, !102, !173, !312, !353, !311, !250, !364}
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !352)
!352 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_policy_latency_request", file: !355, line: 45, size: 64, elements: !356)
!355 = !DIFile(filename: "zephyr/include/zephyr/pm/policy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!356 = !{!357, !363}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !354, file: !355, line: 46, baseType: !358, size: 32)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !301, line: 33, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !301, line: 29, size: 32, elements: !360)
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !359, file: !301, line: 30, baseType: !362, size: 32)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !354, file: !355, line: 48, baseType: !173, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_policy_latency_subscription", file: !355, line: 38, size: 64, elements: !366)
!366 = !{!367, !368}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !365, file: !355, line: 39, baseType: !358, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !365, file: !355, line: 41, baseType: !369, size: 32, offset: 32)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_policy_latency_changed_cb_t", file: !355, line: 35, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 32)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !250}
!373 = !{!374, !378, !386, !346, !388, !398}
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "latency_lock", scope: !348, file: !376, line: 44, type: !377, isLocal: true, isDefinition: true)
!376 = !DIFile(filename: "zephyr/subsys/pm/policy.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "latency_reqs", scope: !348, file: !376, line: 46, type: !380, isLocal: true, isDefinition: true)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !301, line: 40, baseType: !381)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !301, line: 35, size: 64, elements: !382)
!382 = !{!383, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !381, file: !301, line: 36, baseType: !384, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !381, file: !301, line: 37, baseType: !384, size: 32, offset: 32)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "latency_subs", scope: !348, file: !376, line: 52, type: !380, isLocal: true, isDefinition: true)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "substate_lock_t", scope: !348, file: !376, line: 39, type: !390, isLocal: true, isDefinition: true)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, elements: !396)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !376, line: 35, size: 96, elements: !392)
!392 = !{!393, !394, !395}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !391, file: !376, line: 36, baseType: !281, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "substate_id", scope: !391, file: !376, line: 37, baseType: !156, size: 8, offset: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !391, file: !376, line: 38, baseType: !343, size: 32, offset: 64)
!396 = !{!397}
!397 = !DISubrange(count: 0)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "max_latency_us", scope: !348, file: !376, line: 48, type: !250, isLocal: true, isDefinition: true)
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "cpus_states", scope: !402, file: !409, line: 50, type: !422, isLocal: true, isDefinition: true)
!402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !403, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !404, retainedTypes: !405, globals: !406, splitDebugInlining: false, nameTableKind: None)
!403 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/pm/state.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!404 = !{!281}
!405 = !{!217, !103}
!406 = !{!400, !407, !418}
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "pmstates_DT_N_S_cpus_S_cpu_0", scope: !402, file: !409, line: 47, type: !410, isLocal: true, isDefinition: true)
!409 = !DIFile(filename: "zephyr/subsys/pm/state.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, elements: !396)
!411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_state_info", file: !282, line: 114, size: 128, elements: !413)
!413 = !{!414, !415, !416, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !412, file: !282, line: 115, baseType: !281, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "substate_id", scope: !412, file: !282, line: 141, baseType: !156, size: 8, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "min_residency_us", scope: !412, file: !282, line: 149, baseType: !173, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "exit_latency_us", scope: !412, file: !282, line: 156, baseType: !173, size: 32, offset: 96)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "states_per_cpu", scope: !402, file: !409, line: 55, type: !420, isLocal: true, isDefinition: true)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 8, elements: !330)
!421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 32, elements: !330)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!424 = !DIGlobalVariableExpression(var: !425, expr: !DIExpression())
!425 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !426, file: !433, line: 21, type: !273, isLocal: true, isDefinition: true)
!426 = distinct !DICompileUnit(language: DW_LANG_C99, file: !427, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !428, globals: !432, splitDebugInlining: false, nameTableKind: None)
!427 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!428 = !{!429, !103, !102}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !431, line: 22, baseType: !103)
!431 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !{!424}
!433 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "__init_nordicsemi_nrf51_init", scope: !436, file: !532, line: 71, type: !533, isLocal: true, isDefinition: true, align: 32)
!436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !437, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, globals: !527, splitDebugInlining: false, nameTableKind: None)
!437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nordic_nrf/nrf51/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!438 = !{!439, !156, !102, !103, !505, !506, !521, !173}
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_POWER_Type", file: !441, line: 247, baseType: !442)
!441 = !DIFile(filename: "modules/hal/nordic/nrfx/mdk/nrf51.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 216, size: 20576, elements: !443)
!443 = !{!444, !450, !451, !452, !456, !457, !461, !462, !463, !467, !468, !472, !473, !477, !478, !482, !483, !485, !486, !487, !488, !492, !493, !494, !495, !499, !500, !504}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !442, file: !441, line: 217, baseType: !445, size: 960)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 960, elements: !448)
!446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !447)
!447 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!448 = !{!449}
!449 = !DISubrange(count: 30)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CONSTLAT", scope: !442, file: !441, line: 218, baseType: !447, size: 32, offset: 960)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_LOWPWR", scope: !442, file: !441, line: 219, baseType: !447, size: 32, offset: 992)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !442, file: !441, line: 220, baseType: !453, size: 1088, offset: 1024)
!453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1088, elements: !454)
!454 = !{!455}
!455 = !DISubrange(count: 34)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_POFWARN", scope: !442, file: !441, line: 221, baseType: !447, size: 32, offset: 2112)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !442, file: !441, line: 222, baseType: !458, size: 4032, offset: 2144)
!458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 4032, elements: !459)
!459 = !{!460}
!460 = !DISubrange(count: 126)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !442, file: !441, line: 223, baseType: !447, size: 32, offset: 6176)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !442, file: !441, line: 224, baseType: !447, size: 32, offset: 6208)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !442, file: !441, line: 225, baseType: !464, size: 1952, offset: 6240)
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1952, elements: !465)
!465 = !{!466}
!466 = !DISubrange(count: 61)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "RESETREAS", scope: !442, file: !441, line: 226, baseType: !447, size: 32, offset: 8192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !442, file: !441, line: 227, baseType: !469, size: 288, offset: 8224)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 288, elements: !470)
!470 = !{!471}
!471 = !DISubrange(count: 9)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RAMSTATUS", scope: !442, file: !441, line: 228, baseType: !446, size: 32, offset: 8512)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !442, file: !441, line: 229, baseType: !474, size: 1696, offset: 8544)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1696, elements: !475)
!475 = !{!476}
!476 = !DISubrange(count: 53)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "SYSTEMOFF", scope: !442, file: !441, line: 230, baseType: !447, size: 32, offset: 10240)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !442, file: !441, line: 231, baseType: !479, size: 96, offset: 10272)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 96, elements: !480)
!480 = !{!481}
!481 = !DISubrange(count: 3)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "POFCON", scope: !442, file: !441, line: 232, baseType: !447, size: 32, offset: 10368)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !442, file: !441, line: 233, baseType: !484, size: 64, offset: 10400)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 64, elements: !145)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "GPREGRET", scope: !442, file: !441, line: 234, baseType: !447, size: 32, offset: 10464)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !442, file: !441, line: 236, baseType: !446, size: 32, offset: 10496)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "RAMON", scope: !442, file: !441, line: 237, baseType: !447, size: 32, offset: 10528)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !442, file: !441, line: 238, baseType: !489, size: 224, offset: 10560)
!489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 224, elements: !490)
!490 = !{!491}
!491 = !DISubrange(count: 7)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "RESET", scope: !442, file: !441, line: 239, baseType: !447, size: 32, offset: 10784)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !442, file: !441, line: 241, baseType: !479, size: 96, offset: 10816)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "RAMONB", scope: !442, file: !441, line: 242, baseType: !447, size: 32, offset: 10912)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !442, file: !441, line: 243, baseType: !496, size: 256, offset: 10944)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 256, elements: !497)
!497 = !{!498}
!498 = !DISubrange(count: 8)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "DCDCEN", scope: !442, file: !441, line: 244, baseType: !447, size: 32, offset: 11200)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !442, file: !441, line: 245, baseType: !501, size: 9312, offset: 11232)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 9312, elements: !502)
!502 = !{!503}
!503 = !DISubrange(count: 291)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "DCDCFORCE", scope: !442, file: !441, line: 246, baseType: !447, size: 32, offset: 20544)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 352, baseType: !509)
!508 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm0.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 341, size: 320, elements: !510)
!510 = !{!511, !512, !513, !514, !515, !516, !517, !518, !520}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !509, file: !508, line: 343, baseType: !446, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !509, file: !508, line: 344, baseType: !447, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !509, file: !508, line: 345, baseType: !173, size: 32, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !509, file: !508, line: 346, baseType: !447, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !509, file: !508, line: 347, baseType: !447, size: 32, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !509, file: !508, line: 348, baseType: !447, size: 32, offset: 160)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !509, file: !508, line: 349, baseType: !173, size: 32, offset: 192)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !509, file: !508, line: 350, baseType: !519, size: 64, offset: 224)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 64, elements: !145)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !509, file: !508, line: 351, baseType: !447, size: 32, offset: 288)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "delay_func_t", scope: !523, file: !522, line: 167, baseType: !526)
!522 = !DIFile(filename: "modules/hal/nordic/nrfx/soc/nrfx_coredep.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!523 = distinct !DISubprogram(name: "nrfx_coredep_delay_us", scope: !522, file: !522, line: 134, type: !524, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !436, retainedNodes: !223)
!524 = !DISubroutineType(types: !525)
!525 = !{null, !173}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 32)
!527 = !{!434, !528}
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "delay_machine_code", scope: !523, file: !522, line: 161, type: !530, isLocal: true, isDefinition: true, align: 128)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 48, elements: !480)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!532 = !DIFile(filename: "zephyr/soc/arm/nordic_nrf/nrf51/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !535, line: 51, size: 64, elements: !536)
!535 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !{!537, !544}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !534, file: !535, line: 60, baseType: !538, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 32)
!539 = !DISubroutineType(types: !540)
!540 = !{!103, !541}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !535, line: 48, flags: DIFlagFwdDecl)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !534, file: !535, line: 65, baseType: !541, size: 32, offset: 32)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !547, file: !746, line: 733, type: !812, isLocal: false, isDefinition: true, align: 32)
!547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !548, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !549, retainedTypes: !664, globals: !742, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_control_nrf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!549 = !{!550, !556, !30, !561, !566, !571, !577, !583, !592, !596, !629, !636, !655}
!550 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_nrf_type", file: !551, line: 23, baseType: !32, size: 32, elements: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/nrf_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!553, !554, !555}
!553 = !DIEnumerator(name: "CLOCK_CONTROL_NRF_TYPE_HFCLK", value: 0)
!554 = !DIEnumerator(name: "CLOCK_CONTROL_NRF_TYPE_LFCLK", value: 1)
!555 = !DIEnumerator(name: "CLOCK_CONTROL_NRF_TYPE_COUNT", value: 2)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nrf_lfclk_start_mode", file: !551, line: 48, baseType: !32, size: 32, elements: !557)
!557 = !{!558, !559, !560}
!558 = !DIEnumerator(name: "CLOCK_CONTROL_NRF_LF_START_NOWAIT", value: 0)
!559 = !DIEnumerator(name: "CLOCK_CONTROL_NRF_LF_START_AVAILABLE", value: 1)
!560 = !DIEnumerator(name: "CLOCK_CONTROL_NRF_LF_START_STABLE", value: 2)
!561 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !562, line: 167, baseType: !32, size: 32, elements: !563)
!562 = !DIFile(filename: "modules/hal/nordic/nrfx/hal/nrf_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!563 = !{!564, !565}
!564 = !DIEnumerator(name: "NRF_CLOCK_DOMAIN_LFCLK", value: 0)
!565 = !DIEnumerator(name: "NRF_CLOCK_DOMAIN_HFCLK", value: 1)
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !562, line: 107, baseType: !32, size: 32, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIEnumerator(name: "NRF_CLOCK_LFCLK_RC", value: 0)
!569 = !DIEnumerator(name: "NRF_CLOCK_LFCLK_Xtal", value: 1)
!570 = !DIEnumerator(name: "NRF_CLOCK_LFCLK_Synth", value: 2)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !562, line: 208, baseType: !32, size: 32, elements: !572)
!572 = !{!573, !574, !575, !576}
!573 = !DIEnumerator(name: "NRF_CLOCK_INT_HF_STARTED_MASK", value: 1)
!574 = !DIEnumerator(name: "NRF_CLOCK_INT_LF_STARTED_MASK", value: 2)
!575 = !DIEnumerator(name: "NRF_CLOCK_INT_DONE_MASK", value: 8)
!576 = !DIEnumerator(name: "NRF_CLOCK_INT_CTTO_MASK", value: 16)
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !562, line: 261, baseType: !32, size: 32, elements: !578)
!578 = !{!579, !580, !581, !582}
!579 = !DIEnumerator(name: "NRF_CLOCK_EVENT_HFCLKSTARTED", value: 256)
!580 = !DIEnumerator(name: "NRF_CLOCK_EVENT_LFCLKSTARTED", value: 260)
!581 = !DIEnumerator(name: "NRF_CLOCK_EVENT_DONE", value: 268)
!582 = !DIEnumerator(name: "NRF_CLOCK_EVENT_CTTO", value: 272)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !562, line: 237, baseType: !32, size: 32, elements: !584)
!584 = !{!585, !586, !587, !588, !589, !590, !591}
!585 = !DIEnumerator(name: "NRF_CLOCK_TASK_HFCLKSTART", value: 0)
!586 = !DIEnumerator(name: "NRF_CLOCK_TASK_HFCLKSTOP", value: 4)
!587 = !DIEnumerator(name: "NRF_CLOCK_TASK_LFCLKSTART", value: 8)
!588 = !DIEnumerator(name: "NRF_CLOCK_TASK_LFCLKSTOP", value: 12)
!589 = !DIEnumerator(name: "NRF_CLOCK_TASK_CAL", value: 16)
!590 = !DIEnumerator(name: "NRF_CLOCK_TASK_CTSTART", value: 20)
!591 = !DIEnumerator(name: "NRF_CLOCK_TASK_CTSTOP", value: 24)
!592 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !562, line: 152, baseType: !32, size: 32, elements: !593)
!593 = !{!594, !595}
!594 = !DIEnumerator(name: "NRF_CLOCK_HFCLK_LOW_ACCURACY", value: 0)
!595 = !DIEnumerator(name: "NRF_CLOCK_HFCLK_HIGH_ACCURACY", value: 1)
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !441, line: 71, baseType: !103, size: 32, elements: !597)
!597 = !{!598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628}
!598 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!599 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!600 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!601 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!602 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!603 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!604 = !DIEnumerator(name: "POWER_CLOCK_IRQn", value: 0)
!605 = !DIEnumerator(name: "RADIO_IRQn", value: 1)
!606 = !DIEnumerator(name: "UART0_IRQn", value: 2)
!607 = !DIEnumerator(name: "SPI0_TWI0_IRQn", value: 3)
!608 = !DIEnumerator(name: "SPI1_TWI1_IRQn", value: 4)
!609 = !DIEnumerator(name: "GPIOTE_IRQn", value: 6)
!610 = !DIEnumerator(name: "ADC_IRQn", value: 7)
!611 = !DIEnumerator(name: "TIMER0_IRQn", value: 8)
!612 = !DIEnumerator(name: "TIMER1_IRQn", value: 9)
!613 = !DIEnumerator(name: "TIMER2_IRQn", value: 10)
!614 = !DIEnumerator(name: "RTC0_IRQn", value: 11)
!615 = !DIEnumerator(name: "TEMP_IRQn", value: 12)
!616 = !DIEnumerator(name: "RNG_IRQn", value: 13)
!617 = !DIEnumerator(name: "ECB_IRQn", value: 14)
!618 = !DIEnumerator(name: "CCM_AAR_IRQn", value: 15)
!619 = !DIEnumerator(name: "WDT_IRQn", value: 16)
!620 = !DIEnumerator(name: "RTC1_IRQn", value: 17)
!621 = !DIEnumerator(name: "QDEC_IRQn", value: 18)
!622 = !DIEnumerator(name: "LPCOMP_IRQn", value: 19)
!623 = !DIEnumerator(name: "SWI0_IRQn", value: 20)
!624 = !DIEnumerator(name: "SWI1_IRQn", value: 21)
!625 = !DIEnumerator(name: "SWI2_IRQn", value: 22)
!626 = !DIEnumerator(name: "SWI3_IRQn", value: 23)
!627 = !DIEnumerator(name: "SWI4_IRQn", value: 24)
!628 = !DIEnumerator(name: "SWI5_IRQn", value: 25)
!629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !630, line: 44, baseType: !32, size: 32, elements: !631)
!630 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!631 = !{!632, !633, !634, !635}
!632 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!633 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!634 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!635 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!636 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !637, line: 54, baseType: !32, size: 32, elements: !638)
!637 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/nrfx_errors.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!638 = !{!639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654}
!639 = !DIEnumerator(name: "NRFX_SUCCESS", value: 195887104)
!640 = !DIEnumerator(name: "NRFX_ERROR_INTERNAL", value: 195887105)
!641 = !DIEnumerator(name: "NRFX_ERROR_NO_MEM", value: 195887106)
!642 = !DIEnumerator(name: "NRFX_ERROR_NOT_SUPPORTED", value: 195887107)
!643 = !DIEnumerator(name: "NRFX_ERROR_INVALID_PARAM", value: 195887108)
!644 = !DIEnumerator(name: "NRFX_ERROR_INVALID_STATE", value: 195887109)
!645 = !DIEnumerator(name: "NRFX_ERROR_INVALID_LENGTH", value: 195887110)
!646 = !DIEnumerator(name: "NRFX_ERROR_TIMEOUT", value: 195887111)
!647 = !DIEnumerator(name: "NRFX_ERROR_FORBIDDEN", value: 195887112)
!648 = !DIEnumerator(name: "NRFX_ERROR_NULL", value: 195887113)
!649 = !DIEnumerator(name: "NRFX_ERROR_INVALID_ADDR", value: 195887114)
!650 = !DIEnumerator(name: "NRFX_ERROR_BUSY", value: 195887115)
!651 = !DIEnumerator(name: "NRFX_ERROR_ALREADY_INITIALIZED", value: 195887116)
!652 = !DIEnumerator(name: "NRFX_ERROR_DRV_TWI_ERR_OVERRUN", value: 195952640)
!653 = !DIEnumerator(name: "NRFX_ERROR_DRV_TWI_ERR_ANACK", value: 195952641)
!654 = !DIEnumerator(name: "NRFX_ERROR_DRV_TWI_ERR_DNACK", value: 195952642)
!655 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !656, line: 53, baseType: !32, size: 32, elements: !657)
!656 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/include/nrfx_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = !{!658, !659, !660, !661, !662, !663}
!658 = !DIEnumerator(name: "NRFX_CLOCK_EVT_HFCLK_STARTED", value: 0)
!659 = !DIEnumerator(name: "NRFX_CLOCK_EVT_LFCLK_STARTED", value: 1)
!660 = !DIEnumerator(name: "NRFX_CLOCK_EVT_CTTO", value: 2)
!661 = !DIEnumerator(name: "NRFX_CLOCK_EVT_CAL_DONE", value: 3)
!662 = !DIEnumerator(name: "NRFX_CLOCK_EVT_HFCLKAUDIO_STARTED", value: 4)
!663 = !DIEnumerator(name: "NRFX_CLOCK_EVT_HFCLK192M_STARTED", value: 5)
!664 = !{!550, !102, !103, !665, !713, !714, !715, !716, !293, !173, !312, !717, !505, !718, !250, !719, !741, !217}
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_CLOCK_Type", file: !441, line: 291, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 260, size: 10912, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !680, !681, !682, !683, !684, !685, !689, !690, !691, !695, !696, !697, !698, !699, !700, !701, !705, !706, !707, !708, !712}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_HFCLKSTART", scope: !667, file: !441, line: 261, baseType: !447, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_HFCLKSTOP", scope: !667, file: !441, line: 262, baseType: !447, size: 32, offset: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_LFCLKSTART", scope: !667, file: !441, line: 263, baseType: !447, size: 32, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_LFCLKSTOP", scope: !667, file: !441, line: 264, baseType: !447, size: 32, offset: 96)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CAL", scope: !667, file: !441, line: 265, baseType: !447, size: 32, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CTSTART", scope: !667, file: !441, line: 266, baseType: !447, size: 32, offset: 160)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CTSTOP", scope: !667, file: !441, line: 267, baseType: !447, size: 32, offset: 192)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !667, file: !441, line: 268, baseType: !677, size: 1824, offset: 224)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1824, elements: !678)
!678 = !{!679}
!679 = !DISubrange(count: 57)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_HFCLKSTARTED", scope: !667, file: !441, line: 269, baseType: !447, size: 32, offset: 2048)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_LFCLKSTARTED", scope: !667, file: !441, line: 270, baseType: !447, size: 32, offset: 2080)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !667, file: !441, line: 271, baseType: !446, size: 32, offset: 2112)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_DONE", scope: !667, file: !441, line: 272, baseType: !447, size: 32, offset: 2144)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_CTTO", scope: !667, file: !441, line: 273, baseType: !447, size: 32, offset: 2176)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !667, file: !441, line: 274, baseType: !686, size: 3968, offset: 2208)
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 3968, elements: !687)
!687 = !{!688}
!688 = !DISubrange(count: 124)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !667, file: !441, line: 275, baseType: !447, size: 32, offset: 6176)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !667, file: !441, line: 276, baseType: !447, size: 32, offset: 6208)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !667, file: !441, line: 277, baseType: !692, size: 2016, offset: 6240)
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 2016, elements: !693)
!693 = !{!694}
!694 = !DISubrange(count: 63)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "HFCLKRUN", scope: !667, file: !441, line: 278, baseType: !446, size: 32, offset: 8256)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "HFCLKSTAT", scope: !667, file: !441, line: 279, baseType: !446, size: 32, offset: 8288)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !667, file: !441, line: 280, baseType: !446, size: 32, offset: 8320)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKRUN", scope: !667, file: !441, line: 281, baseType: !446, size: 32, offset: 8352)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKSTAT", scope: !667, file: !441, line: 282, baseType: !446, size: 32, offset: 8384)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKSRCCOPY", scope: !667, file: !441, line: 283, baseType: !446, size: 32, offset: 8416)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !667, file: !441, line: 285, baseType: !702, size: 1984, offset: 8448)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1984, elements: !703)
!703 = !{!704}
!704 = !DISubrange(count: 62)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKSRC", scope: !667, file: !441, line: 286, baseType: !447, size: 32, offset: 10432)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !667, file: !441, line: 287, baseType: !489, size: 224, offset: 10464)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "CTIV", scope: !667, file: !441, line: 288, baseType: !447, size: 32, offset: 10688)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !667, file: !441, line: 289, baseType: !709, size: 160, offset: 10720)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 160, elements: !710)
!710 = !{!711}
!711 = !DISubrange(count: 5)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "XTALFREQ", scope: !667, file: !441, line: 290, baseType: !447, size: 32, offset: 10880)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_clock_lfclk_t", file: !562, line: 146, baseType: !566)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_clock_hfclk_t", file: !562, line: 164, baseType: !592)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!717 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 326, baseType: !721)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 314, size: 6400, elements: !722)
!722 = !{!723, !725, !729, !730, !731, !732, !733, !734, !735, !739}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !721, file: !508, line: 316, baseType: !724, size: 32)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 32, elements: !330)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !721, file: !508, line: 317, baseType: !726, size: 992, offset: 32)
!726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 992, elements: !727)
!727 = !{!728}
!728 = !DISubrange(count: 31)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !721, file: !508, line: 318, baseType: !724, size: 32, offset: 1024)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !721, file: !508, line: 319, baseType: !726, size: 992, offset: 1056)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !721, file: !508, line: 320, baseType: !724, size: 32, offset: 2048)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !721, file: !508, line: 321, baseType: !726, size: 992, offset: 2080)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !721, file: !508, line: 322, baseType: !724, size: 32, offset: 3072)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !721, file: !508, line: 323, baseType: !726, size: 992, offset: 3104)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !721, file: !508, line: 324, baseType: !736, size: 2048, offset: 4096)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 2048, elements: !737)
!737 = !{!738}
!738 = !DISubrange(count: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !721, file: !508, line: 325, baseType: !740, size: 256, offset: 6144)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 256, elements: !497)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !630, line: 56, baseType: !102)
!742 = !{!743, !749, !796, !545, !802, !828, !830, !879, !881, !886, !889, !901, !939, !942}
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "on", scope: !745, file: !746, line: 549, type: !343, isLocal: true, isDefinition: true)
!745 = distinct !DISubprogram(name: "z_nrf_clock_control_lf_on", scope: !746, file: !746, line: 547, type: !747, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !223)
!746 = !DIFile(filename: "zephyr/drivers/clock_control/clock_control_nrf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!747 = !DISubroutineType(types: !748)
!748 = !{null, !556}
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "cli", scope: !745, file: !746, line: 550, type: !751, isLocal: true, isDefinition: true)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_client", file: !752, line: 273, size: 128, elements: !753)
!752 = !DIFile(filename: "zephyr/include/zephyr/sys/onoff.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!753 = !{!754, !760}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !751, file: !752, line: 280, baseType: !755, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !301, line: 33, baseType: !756)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !301, line: 29, size: 32, elements: !757)
!757 = !{!758}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !756, file: !301, line: 30, baseType: !759, size: 32)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !751, file: !752, line: 283, baseType: !761, size: 96, offset: 32)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_notify", file: !762, line: 138, size: 96, elements: !763)
!762 = !DIFile(filename: "zephyr/include/zephyr/sys/notify.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!763 = !{!764, !793, !794}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !761, file: !762, line: 149, baseType: !765, size: 32)
!765 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "method", file: !762, line: 139, size: 32, elements: !766)
!766 = !{!767, !788}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !765, file: !762, line: 145, baseType: !768, size: 32)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_poll_signal", file: !109, line: 5397, size: 128, elements: !770)
!770 = !{!771, !786, !787}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "poll_events", scope: !769, file: !109, line: 5399, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !773)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !774)
!774 = !{!775, !781}
!775 = !DIDerivedType(tag: DW_TAG_member, scope: !773, file: !124, line: 38, baseType: !776, size: 32)
!776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !773, file: !124, line: 38, size: 32, elements: !777)
!777 = !{!778, !780}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !776, file: !124, line: 39, baseType: !779, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !776, file: !124, line: 40, baseType: !779, size: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, scope: !773, file: !124, line: 42, baseType: !782, size: 32, offset: 32)
!782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !773, file: !124, line: 42, size: 32, elements: !783)
!783 = !{!784, !785}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !782, file: !124, line: 43, baseType: !779, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !782, file: !124, line: 44, baseType: !779, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "signaled", scope: !769, file: !109, line: 5405, baseType: !32, size: 32, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !769, file: !109, line: 5408, baseType: !103, size: 32, offset: 96)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !765, file: !762, line: 148, baseType: !789, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_notify_generic_callback", file: !762, line: 98, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = !DISubroutineType(types: !792)
!792 = !{null, null}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !761, file: !762, line: 165, baseType: !447, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !761, file: !762, line: 174, baseType: !795, size: 32, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !103)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !547, file: !746, line: 733, type: !798, isLocal: false, isDefinition: true, align: 16)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, size: 80, elements: !710)
!799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !801, line: 43, baseType: !351)
!801 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !547, file: !746, line: 733, type: !804, isLocal: true, isDefinition: true, align: 32)
!804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !535, line: 51, size: 64, elements: !806)
!806 = !{!807, !827}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !805, file: !535, line: 60, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 32)
!809 = !DISubroutineType(types: !810)
!810 = !{!103, !811}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 378, size: 192, elements: !814)
!814 = !{!815, !816, !817, !818, !824, !825}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !813, file: !801, line: 380, baseType: !256, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !813, file: !801, line: 382, baseType: !13, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !813, file: !801, line: 384, baseType: !13, size: 32, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !813, file: !801, line: 386, baseType: !819, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !801, line: 351, size: 16, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !820, file: !801, line: 359, baseType: !156, size: 8)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !820, file: !801, line: 364, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !813, file: !801, line: 388, baseType: !102, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !813, file: !801, line: 396, baseType: !826, size: 32, offset: 160)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !805, file: !535, line: 65, baseType: !811, size: 32, offset: 32)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "hfclk_users", scope: !547, file: !746, line: 79, type: !343, isLocal: true, isDefinition: true)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "data", scope: !547, file: !746, line: 702, type: !832, isLocal: true, isDefinition: true)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nrf_clock_control_data", file: !746, line: 69, size: 640, elements: !833)
!833 = !{!834, !868}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "mgr", scope: !832, file: !746, line: 70, baseType: !835, size: 448)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !836, size: 448, elements: !145)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_manager", file: !752, line: 154, size: 224, elements: !837)
!837 = !{!838, !845, !846, !863, !865, !866, !867}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "clients", scope: !836, file: !752, line: 158, baseType: !839, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !301, line: 40, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !301, line: 35, size: 64, elements: !841)
!841 = !{!842, !844}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !840, file: !301, line: 36, baseType: !843, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !840, file: !301, line: 37, baseType: !843, size: 32, offset: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "monitors", scope: !836, file: !752, line: 163, baseType: !839, size: 64, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "transitions", scope: !836, file: !752, line: 166, baseType: !847, size: 32, offset: 128)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_transitions", file: !752, line: 133, size: 96, elements: !850)
!850 = !{!851, !861, !862}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !849, file: !752, line: 135, baseType: !852, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "onoff_transition_fn", file: !752, line: 129, baseType: !853)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!854 = !DISubroutineType(types: !855)
!855 = !{null, !856, !857}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "onoff_notify_fn", file: !752, line: 101, baseType: !858)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = !DISubroutineType(types: !860)
!860 = !{null, !856, !103}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !849, file: !752, line: 138, baseType: !852, size: 32, offset: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !849, file: !752, line: 143, baseType: !852, size: 32, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !836, file: !752, line: 169, baseType: !864, offset: 160)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "last_res", scope: !836, file: !752, line: 172, baseType: !103, size: 32, offset: 160)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !836, file: !752, line: 175, baseType: !170, size: 16, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !836, file: !752, line: 178, baseType: !170, size: 16, offset: 208)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "subsys", scope: !832, file: !746, line: 71, baseType: !869, size: 192, offset: 448)
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 192, elements: !145)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nrf_clock_control_sub_data", file: !746, line: 52, size: 96, elements: !871)
!871 = !{!872, !877, !878}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !870, file: !746, line: 53, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !630, line: 72, baseType: !874)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !811, !741, !102}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !870, file: !746, line: 54, baseType: !102, size: 32, offset: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !870, file: !746, line: 55, baseType: !173, size: 32, offset: 64)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !547, file: !746, line: 733, type: !820, isLocal: true, isDefinition: true, align: 8)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "d", scope: !883, file: !746, line: 476, type: !884, isLocal: true, isDefinition: true)
!883 = distinct !DISubprogram(name: "lfclk_spinwait", scope: !746, file: !746, line: 474, type: !747, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !885)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_clock_domain_t", file: !562, line: 177, baseType: !561)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "target_type", scope: !883, file: !746, line: 477, type: !888, isLocal: true, isDefinition: true)
!888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "config", scope: !547, file: !746, line: 704, type: !891, isLocal: true, isDefinition: true)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nrf_clock_control_config", file: !746, line: 74, size: 128, elements: !893)
!893 = !{!894}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "subsys", scope: !892, file: !746, line: 76, baseType: !895, size: 128)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !896, size: 128, elements: !145)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nrf_clock_control_sub_config", file: !746, line: 61, size: 64, elements: !897)
!897 = !{!898, !900}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !896, file: !746, line: 62, baseType: !899, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "clk_ctrl_func_t", file: !746, line: 58, baseType: !252)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !896, file: !746, line: 63, baseType: !899, size: 32, offset: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "clock_control_api", scope: !547, file: !746, line: 695, type: !903, isLocal: true, isDefinition: true)
!903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !630, line: 100, size: 224, elements: !905)
!905 = !{!906, !911, !912, !917, !923, !928, !934}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !904, file: !630, line: 101, baseType: !907, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !630, line: 76, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!103, !811, !741}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !904, file: !630, line: 102, baseType: !907, size: 32, offset: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !904, file: !630, line: 103, baseType: !913, size: 32, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !630, line: 83, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!103, !811, !741, !873, !102}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !904, file: !630, line: 104, baseType: !918, size: 32, offset: 96)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !630, line: 79, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!103, !811, !741, !922}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !904, file: !630, line: 105, baseType: !924, size: 32, offset: 128)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !630, line: 88, baseType: !925)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!629, !811, !741}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !904, file: !630, line: 106, baseType: !929, size: 32, offset: 160)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !630, line: 92, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!103, !811, !741, !933}
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !630, line: 64, baseType: !102)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !904, file: !630, line: 107, baseType: !935, size: 32, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !630, line: 96, baseType: !936)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DISubroutineType(types: !938)
!938 = !{!103, !811, !741, !102}
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "transitions", scope: !941, file: !746, line: 655, type: !848, isLocal: true, isDefinition: true)
!941 = distinct !DISubprogram(name: "clk_init", scope: !746, file: !746, line: 651, type: !809, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__isr_nrfx_isr_irq_0", scope: !941, file: !746, line: 660, type: !944, isLocal: true, isDefinition: true, align: 32)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !945)
!945 = !{!946, !947, !948, !949}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !944, file: !10, line: 55, baseType: !250, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !944, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !944, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !944, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !952, file: !957, line: 7, type: !958, isLocal: false, isDefinition: true, align: 16)
!952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !953, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !954, splitDebugInlining: false, nameTableKind: None)
!953 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!954 = !{!950, !955, !959}
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !952, file: !957, line: 12, type: !958, isLocal: false, isDefinition: true, align: 16)
!957 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, size: 48, elements: !480)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !952, file: !957, line: 17, type: !958, isLocal: false, isDefinition: true, align: 16)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !963, file: !1020, line: 603, type: !1022, isLocal: true, isDefinition: true, align: 32)
!963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !964, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !965, globals: !1017, splitDebugInlining: false, nameTableKind: None)
!964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!965 = !{!102, !103, !966}
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !969, line: 336, size: 160, elements: !970)
!969 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!970 = !{!971, !991, !995, !999, !1012}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !968, file: !969, line: 365, baseType: !972, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{!103, !975, !990}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 378, size: 192, elements: !978)
!978 = !{!979, !980, !981, !982, !988, !989}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !977, file: !801, line: 380, baseType: !256, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !977, file: !801, line: 382, baseType: !13, size: 32, offset: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !977, file: !801, line: 384, baseType: !13, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !977, file: !801, line: 386, baseType: !983, size: 32, offset: 96)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !801, line: 351, size: 16, elements: !985)
!985 = !{!986, !987}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !984, file: !801, line: 359, baseType: !156, size: 8)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !984, file: !801, line: 364, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !977, file: !801, line: 388, baseType: !102, size: 32, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !977, file: !801, line: 396, baseType: !826, size: 32, offset: 160)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !968, file: !969, line: 366, baseType: !992, size: 32, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DISubroutineType(types: !994)
!994 = !{null, !975, !157}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !968, file: !969, line: 374, baseType: !996, size: 32, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DISubroutineType(types: !998)
!998 = !{!103, !975}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !968, file: !969, line: 377, baseType: !1000, size: 32, offset: 96)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!103, !975, !1003}
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !969, line: 122, size: 64, elements: !1006)
!1006 = !{!1007, !1008, !1009, !1010, !1011}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1005, file: !969, line: 123, baseType: !173, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1005, file: !969, line: 124, baseType: !156, size: 8, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1005, file: !969, line: 125, baseType: !156, size: 8, offset: 40)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1005, file: !969, line: 126, baseType: !156, size: 8, offset: 48)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1005, file: !969, line: 127, baseType: !156, size: 8, offset: 56)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !968, file: !969, line: 379, baseType: !1013, size: 32, offset: 128)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!103, !975, !1016}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1017 = !{!961, !1018}
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !963, file: !1020, line: 38, type: !1021, isLocal: true, isDefinition: true)
!1020 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !975)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !535, line: 51, size: 64, elements: !1024)
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1023, file: !535, line: 60, baseType: !996, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1023, file: !535, line: 65, baseType: !975, size: 32, offset: 32)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "gpio_nrfx_p0_cfg", scope: !1029, file: !1185, line: 424, type: !1223, isLocal: true, isDefinition: true)
!1029 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1030, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1031, retainedTypes: !1077, globals: !1182, splitDebugInlining: false, nameTableKind: None)
!1030 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_nrfx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1031 = !{!1032, !1038, !636, !1043, !1053, !1064, !1068, !1073}
!1032 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1033, line: 506, baseType: !32, size: 32, elements: !1034)
!1033 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1034 = !{!1035, !1036, !1037}
!1035 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1036 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1037 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1038 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1033, line: 512, baseType: !32, size: 32, elements: !1039)
!1039 = !{!1040, !1041, !1042}
!1040 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1041 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1042 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1043 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1044, line: 56, baseType: !32, size: 32, elements: !1045)
!1044 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/include/nrfx_gpiote.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1045 = !{!1046, !1047, !1048, !1049, !1050, !1051, !1052}
!1046 = !DIEnumerator(name: "NRFX_GPIOTE_TRIGGER_NONE", value: 0)
!1047 = !DIEnumerator(name: "NRFX_GPIOTE_TRIGGER_LOTOHI", value: 1)
!1048 = !DIEnumerator(name: "NRFX_GPIOTE_TRIGGER_HITOLO", value: 2)
!1049 = !DIEnumerator(name: "NRFX_GPIOTE_TRIGGER_TOGGLE", value: 3)
!1050 = !DIEnumerator(name: "NRFX_GPIOTE_TRIGGER_LOW", value: 4)
!1051 = !DIEnumerator(name: "NRFX_GPIOTE_TRIGGER_HIGH", value: 5)
!1052 = !DIEnumerator(name: "NRFX_GPIOTE_TRIGGER_MAX", value: 6)
!1053 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 110, baseType: !32, size: 32, elements: !1055)
!1054 = !DIFile(filename: "modules/hal/nordic/nrfx/hal/nrf_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1055 = !{!1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063}
!1056 = !DIEnumerator(name: "NRF_GPIO_PIN_S0S1", value: 0)
!1057 = !DIEnumerator(name: "NRF_GPIO_PIN_H0S1", value: 1)
!1058 = !DIEnumerator(name: "NRF_GPIO_PIN_S0H1", value: 2)
!1059 = !DIEnumerator(name: "NRF_GPIO_PIN_H0H1", value: 3)
!1060 = !DIEnumerator(name: "NRF_GPIO_PIN_D0S1", value: 4)
!1061 = !DIEnumerator(name: "NRF_GPIO_PIN_D0H1", value: 5)
!1062 = !DIEnumerator(name: "NRF_GPIO_PIN_S0D1", value: 6)
!1063 = !DIEnumerator(name: "NRF_GPIO_PIN_H0D1", value: 7)
!1064 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 92, baseType: !32, size: 32, elements: !1065)
!1065 = !{!1066, !1067}
!1066 = !DIEnumerator(name: "NRF_GPIO_PIN_INPUT_CONNECT", value: 0)
!1067 = !DIEnumerator(name: "NRF_GPIO_PIN_INPUT_DISCONNECT", value: 1)
!1068 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 102, baseType: !32, size: 32, elements: !1069)
!1069 = !{!1070, !1071, !1072}
!1070 = !DIEnumerator(name: "NRF_GPIO_PIN_NOPULL", value: 0)
!1071 = !DIEnumerator(name: "NRF_GPIO_PIN_PULLDOWN", value: 1)
!1072 = !DIEnumerator(name: "NRF_GPIO_PIN_PULLUP", value: 3)
!1073 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 85, baseType: !32, size: 32, elements: !1074)
!1074 = !{!1075, !1076}
!1075 = !DIEnumerator(name: "NRF_GPIO_PIN_DIR_INPUT", value: 0)
!1076 = !DIEnumerator(name: "NRF_GPIO_PIN_DIR_OUTPUT", value: 1)
!1077 = !{!1078, !1147, !1152, !1113, !1038, !1032, !1157, !102, !1158, !1159, !1128, !311}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1033, line: 523, size: 288, elements: !1081)
!1081 = !{!1082, !1103, !1109, !1114, !1118, !1119, !1120, !1124, !1143}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1080, file: !1033, line: 524, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!103, !1086, !1101, !1102}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 378, size: 192, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1099, !1100}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1088, file: !801, line: 380, baseType: !256, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1088, file: !801, line: 382, baseType: !13, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1088, file: !801, line: 384, baseType: !13, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1088, file: !801, line: 386, baseType: !1094, size: 32, offset: 96)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !801, line: 351, size: 16, elements: !1096)
!1096 = !{!1097, !1098}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1095, file: !801, line: 359, baseType: !156, size: 8)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1095, file: !801, line: 364, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1088, file: !801, line: 388, baseType: !102, size: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1088, file: !801, line: 396, baseType: !826, size: 32, offset: 160)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1033, line: 237, baseType: !156)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1033, line: 257, baseType: !173)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1080, file: !1033, line: 530, baseType: !1104, size: 32, offset: 32)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!103, !1086, !1107}
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1033, line: 229, baseType: !173)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1080, file: !1033, line: 532, baseType: !1110, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!103, !1086, !1113, !1108}
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1033, line: 216, baseType: !173)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1080, file: !1033, line: 535, baseType: !1115, size: 32, offset: 96)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!103, !1086, !1113}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1080, file: !1033, line: 537, baseType: !1115, size: 32, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1080, file: !1033, line: 539, baseType: !1115, size: 32, offset: 160)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1080, file: !1033, line: 541, baseType: !1121, size: 32, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!103, !1086, !1101, !1032, !1038}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1080, file: !1033, line: 544, baseType: !1125, size: 32, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!103, !1086, !1128, !717}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1033, line: 478, size: 96, elements: !1130)
!1130 = !{!1131, !1137, !1142}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1129, file: !1033, line: 482, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !301, line: 33, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !301, line: 29, size: 32, elements: !1134)
!1134 = !{!1135}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1133, file: !301, line: 30, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1129, file: !1033, line: 485, baseType: !1138, size: 32, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1033, line: 464, baseType: !1139)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{null, !1086, !1128, !1113}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1129, file: !1033, line: 493, baseType: !1113, size: 32, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1080, file: !1033, line: 547, baseType: !1144, size: 32, offset: 256)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!173, !1086}
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1033, line: 428, size: 32, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1149, file: !1033, line: 434, baseType: !1113, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1033, line: 441, size: 32, elements: !1155)
!1155 = !{!1156}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1154, file: !1033, line: 447, baseType: !1113, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpio_pin_dir_t", file: !1054, line: 89, baseType: !1073)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_GPIO_Type", file: !441, line: 1186, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 1175, size: 15360, elements: !1162)
!1162 = !{!1163, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1178}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1161, file: !441, line: 1176, baseType: !1164, size: 10272)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 10272, elements: !1165)
!1165 = !{!1166}
!1166 = !DISubrange(count: 321)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !1161, file: !441, line: 1177, baseType: !447, size: 32, offset: 10272)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !1161, file: !441, line: 1178, baseType: !447, size: 32, offset: 10304)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !1161, file: !441, line: 1179, baseType: !447, size: 32, offset: 10336)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !1161, file: !441, line: 1180, baseType: !446, size: 32, offset: 10368)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !1161, file: !441, line: 1181, baseType: !447, size: 32, offset: 10400)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !1161, file: !441, line: 1182, baseType: !447, size: 32, offset: 10432)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !1161, file: !441, line: 1183, baseType: !447, size: 32, offset: 10464)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1161, file: !441, line: 1184, baseType: !1175, size: 3840, offset: 10496)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 3840, elements: !1176)
!1176 = !{!1177}
!1177 = !DISubrange(count: 120)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "PIN_CNF", scope: !1161, file: !441, line: 1185, baseType: !1179, size: 1024, offset: 14336)
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 1024, elements: !1180)
!1180 = !{!1181}
!1181 = !DISubrange(count: 32)
!1182 = !{!1183, !1186, !1188, !1198, !1210, !1027, !1212, !1214}
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1029, file: !1185, line: 424, type: !798, isLocal: false, isDefinition: true, align: 16)
!1185 = !DIFile(filename: "zephyr/drivers/gpio/gpio_nrfx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1029, file: !1185, line: 424, type: !1087, isLocal: false, isDefinition: true, align: 32)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1029, file: !1185, line: 424, type: !1190, isLocal: true, isDefinition: true, align: 32)
!1190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !535, line: 51, size: 64, elements: !1192)
!1192 = !{!1193, !1197}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1191, file: !535, line: 60, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!103, !1086}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1191, file: !535, line: 65, baseType: !1086, size: 32, offset: 32)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "gpio_nrfx_p0_data", scope: !1029, file: !1185, line: 424, type: !1200, isLocal: true, isDefinition: true)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_nrfx_data", file: !1185, line: 16, size: 96, elements: !1201)
!1201 = !{!1202, !1203}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1200, file: !1185, line: 18, baseType: !1154, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1200, file: !1185, line: 19, baseType: !1204, size: 64, offset: 32)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !301, line: 40, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !301, line: 35, size: 64, elements: !1206)
!1206 = !{!1207, !1209}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1205, file: !301, line: 36, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1205, file: !301, line: 37, baseType: !1208, size: 32, offset: 32)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1029, file: !1185, line: 424, type: !1095, isLocal: true, isDefinition: true, align: 8)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "gpio_nrfx_drv_api_funcs", scope: !1029, file: !1185, line: 384, type: !1079, isLocal: true, isDefinition: true)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__isr_nrfx_isr_irq_0", scope: !1216, file: !1185, line: 378, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1216 = distinct !DISubprogram(name: "gpio_nrfx_init", scope: !1185, file: !1185, line: 363, type: !1195, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1217, file: !10, line: 55, baseType: !250, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1217, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1217, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1217, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_nrfx_cfg", file: !1185, line: 22, size: 128, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1224, file: !1185, line: 24, baseType: !1149, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1224, file: !1185, line: 25, baseType: !1159, size: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "edge_sense", scope: !1224, file: !1185, line: 26, baseType: !173, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !1224, file: !1185, line: 27, baseType: !156, size: 8, offset: 96)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "uart_nrfx_uart0_config", scope: !1232, file: !1347, line: 1200, type: !1461, isLocal: true, isDefinition: true)
!1232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1233, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1292, globals: !1344, splitDebugInlining: false, nameTableKind: None)
!1233 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_nrfx_uart.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1234 = !{!30, !1235, !1244, !1251, !1255, !1259, !1265, !1272}
!1235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1236, line: 64, baseType: !32, size: 32, elements: !1237)
!1236 = !DIFile(filename: "modules/hal/nordic/nrfx/hal/nrf_uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243}
!1238 = !DIEnumerator(name: "NRF_UART_EVENT_CTS", value: 256)
!1239 = !DIEnumerator(name: "NRF_UART_EVENT_NCTS", value: 260)
!1240 = !DIEnumerator(name: "NRF_UART_EVENT_RXDRDY", value: 264)
!1241 = !DIEnumerator(name: "NRF_UART_EVENT_TXDRDY", value: 284)
!1242 = !DIEnumerator(name: "NRF_UART_EVENT_ERROR", value: 292)
!1243 = !DIEnumerator(name: "NRF_UART_EVENT_RXTO", value: 324)
!1244 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1236, line: 54, baseType: !32, size: 32, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250}
!1246 = !DIEnumerator(name: "NRF_UART_TASK_STARTRX", value: 0)
!1247 = !DIEnumerator(name: "NRF_UART_TASK_STOPRX", value: 4)
!1248 = !DIEnumerator(name: "NRF_UART_TASK_STARTTX", value: 8)
!1249 = !DIEnumerator(name: "NRF_UART_TASK_STOPTX", value: 12)
!1250 = !DIEnumerator(name: "NRF_UART_TASK_SUSPEND", value: 28)
!1251 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1236, line: 125, baseType: !32, size: 32, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIEnumerator(name: "NRF_UART_HWFC_DISABLED", value: 0)
!1254 = !DIEnumerator(name: "NRF_UART_HWFC_ENABLED", value: 1)
!1255 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1236, line: 118, baseType: !32, size: 32, elements: !1256)
!1256 = !{!1257, !1258}
!1257 = !DIEnumerator(name: "NRF_UART_PARITY_EXCLUDED", value: 0)
!1258 = !DIEnumerator(name: "NRF_UART_PARITY_INCLUDED", value: 14)
!1259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !969, line: 84, baseType: !32, size: 32, elements: !1260)
!1260 = !{!1261, !1262, !1263, !1264}
!1261 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1262 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1263 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1264 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !969, line: 92, baseType: !32, size: 32, elements: !1266)
!1266 = !{!1267, !1268, !1269, !1270, !1271}
!1267 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1268 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1269 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1270 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1271 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1272 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1236, line: 86, baseType: !32, size: 32, elements: !1273)
!1273 = !{!1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291}
!1274 = !DIEnumerator(name: "NRF_UART_BAUDRATE_1200", value: 323584)
!1275 = !DIEnumerator(name: "NRF_UART_BAUDRATE_2400", value: 643072)
!1276 = !DIEnumerator(name: "NRF_UART_BAUDRATE_4800", value: 1290240)
!1277 = !DIEnumerator(name: "NRF_UART_BAUDRATE_9600", value: 2576384)
!1278 = !DIEnumerator(name: "NRF_UART_BAUDRATE_14400", value: 3866624)
!1279 = !DIEnumerator(name: "NRF_UART_BAUDRATE_19200", value: 5152768)
!1280 = !DIEnumerator(name: "NRF_UART_BAUDRATE_28800", value: 7729152)
!1281 = !DIEnumerator(name: "NRF_UART_BAUDRATE_31250", value: 8388608)
!1282 = !DIEnumerator(name: "NRF_UART_BAUDRATE_38400", value: 10309632)
!1283 = !DIEnumerator(name: "NRF_UART_BAUDRATE_56000", value: 15007744)
!1284 = !DIEnumerator(name: "NRF_UART_BAUDRATE_57600", value: 15462400)
!1285 = !DIEnumerator(name: "NRF_UART_BAUDRATE_76800", value: 20615168)
!1286 = !DIEnumerator(name: "NRF_UART_BAUDRATE_115200", value: 30924800)
!1287 = !DIEnumerator(name: "NRF_UART_BAUDRATE_230400", value: 61845504)
!1288 = !DIEnumerator(name: "NRF_UART_BAUDRATE_250000", value: 67108864)
!1289 = !DIEnumerator(name: "NRF_UART_BAUDRATE_460800", value: 123695104)
!1290 = !DIEnumerator(name: "NRF_UART_BAUDRATE_921600", value: 247386112)
!1291 = !DIEnumerator(name: "NRF_UART_BAUDRATE_1000000", value: 268435456)
!1292 = !{!1293, !102, !103, !717, !505, !718, !173, !1342, !1343, !156, !293, !312}
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !969, line: 336, size: 160, elements: !1296)
!1296 = !{!1297, !1316, !1320, !1324, !1337}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1295, file: !969, line: 365, baseType: !1298, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!103, !1301, !990}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 378, size: 192, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1314, !1315}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1303, file: !801, line: 380, baseType: !256, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1303, file: !801, line: 382, baseType: !13, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1303, file: !801, line: 384, baseType: !13, size: 32, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1303, file: !801, line: 386, baseType: !1309, size: 32, offset: 96)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !801, line: 351, size: 16, elements: !1311)
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1310, file: !801, line: 359, baseType: !156, size: 8)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1310, file: !801, line: 364, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1303, file: !801, line: 388, baseType: !102, size: 32, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1303, file: !801, line: 396, baseType: !826, size: 32, offset: 160)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1295, file: !969, line: 366, baseType: !1317, size: 32, offset: 32)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{null, !1301, !157}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1295, file: !969, line: 374, baseType: !1321, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!103, !1301}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1295, file: !969, line: 377, baseType: !1325, size: 32, offset: 96)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!103, !1301, !1328}
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !969, line: 122, size: 64, elements: !1331)
!1331 = !{!1332, !1333, !1334, !1335, !1336}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1330, file: !969, line: 123, baseType: !173, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1330, file: !969, line: 124, baseType: !156, size: 8, offset: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1330, file: !969, line: 125, baseType: !156, size: 8, offset: 40)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1330, file: !969, line: 126, baseType: !156, size: 8, offset: 48)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1330, file: !969, line: 127, baseType: !156, size: 8, offset: 56)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1295, file: !969, line: 379, baseType: !1338, size: 32, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 32)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!103, !1301, !1341}
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !344, line: 23, baseType: !343)
!1344 = !{!1345, !1349, !1351, !1358, !1230, !1360, !1380, !1383, !1386, !1388, !1453, !1456}
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !1232, file: !1347, line: 1230, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIFile(filename: "zephyr/drivers/serial/uart_nrfx_uart.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, size: 112, elements: !490)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__device_dts_ord_49", scope: !1232, file: !1347, line: 1230, type: !1302, isLocal: false, isDefinition: true, align: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_49", scope: !1232, file: !1347, line: 1230, type: !1353, isLocal: true, isDefinition: true, align: 32)
!1353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !535, line: 51, size: 64, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1354, file: !535, line: 60, baseType: !1321, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1354, file: !535, line: 65, baseType: !1301, size: 32, offset: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_49", scope: !1232, file: !1347, line: 1230, type: !1310, isLocal: true, isDefinition: true, align: 8)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_49", scope: !1232, file: !1347, line: 1194, type: !1362, isLocal: true, isDefinition: true)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1364, line: 60, size: 96, elements: !1365)
!1364 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1365 = !{!1366, !1367, !1379}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1363, file: !1364, line: 66, baseType: !22, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1363, file: !1364, line: 69, baseType: !1368, size: 32, offset: 32)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1364, line: 50, size: 64, elements: !1371)
!1371 = !{!1372, !1377, !1378}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1370, file: !1364, line: 52, baseType: !1373, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 26, baseType: !173)
!1376 = !DIFile(filename: "zephyr/soc/arm/nordic_nrf/common/./pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1370, file: !1364, line: 54, baseType: !156, size: 8, offset: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1370, file: !1364, line: 56, baseType: !156, size: 8, offset: 40)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1363, file: !1364, line: 71, baseType: !156, size: 8, offset: 64)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_49", scope: !1232, file: !1347, line: 1194, type: !1382, isLocal: true, isDefinition: true)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, size: 64, elements: !330)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_49", scope: !1232, file: !1347, line: 1194, type: !1385, isLocal: true, isDefinition: true)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 64, elements: !145)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "uart_nrfx_uart_driver_api", scope: !1232, file: !1347, line: 1107, type: !1294, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "uart0_addr", scope: !1232, file: !1347, line: 46, type: !1390, isLocal: true, isDefinition: true)
!1390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1391)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_UART_Type", file: !441, line: 458, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 414, size: 32768, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398, !1399, !1400, !1401, !1405, !1406, !1407, !1408, !1412, !1413, !1414, !1415, !1416, !1417, !1421, !1422, !1424, !1425, !1426, !1430, !1431, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1447, !1448, !1452}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STARTRX", scope: !1393, file: !441, line: 415, baseType: !447, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STOPRX", scope: !1393, file: !441, line: 416, baseType: !447, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STARTTX", scope: !1393, file: !441, line: 417, baseType: !447, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STOPTX", scope: !1393, file: !441, line: 418, baseType: !447, size: 32, offset: 96)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1393, file: !441, line: 419, baseType: !479, size: 96, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_SUSPEND", scope: !1393, file: !441, line: 420, baseType: !447, size: 32, offset: 224)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1393, file: !441, line: 421, baseType: !1402, size: 1792, offset: 256)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1792, elements: !1403)
!1403 = !{!1404}
!1404 = !DISubrange(count: 56)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_CTS", scope: !1393, file: !441, line: 422, baseType: !447, size: 32, offset: 2048)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_NCTS", scope: !1393, file: !441, line: 423, baseType: !447, size: 32, offset: 2080)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_RXDRDY", scope: !1393, file: !441, line: 424, baseType: !447, size: 32, offset: 2112)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1393, file: !441, line: 425, baseType: !1409, size: 128, offset: 2144)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 128, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 4)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_TXDRDY", scope: !1393, file: !441, line: 426, baseType: !447, size: 32, offset: 2272)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1393, file: !441, line: 427, baseType: !446, size: 32, offset: 2304)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_ERROR", scope: !1393, file: !441, line: 428, baseType: !447, size: 32, offset: 2336)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1393, file: !441, line: 429, baseType: !489, size: 224, offset: 2368)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_RXTO", scope: !1393, file: !441, line: 430, baseType: !447, size: 32, offset: 2592)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1393, file: !441, line: 431, baseType: !1418, size: 1472, offset: 2624)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1472, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 46)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "SHORTS", scope: !1393, file: !441, line: 432, baseType: !447, size: 32, offset: 4096)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1393, file: !441, line: 433, baseType: !1423, size: 2048, offset: 4128)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 2048, elements: !737)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1393, file: !441, line: 434, baseType: !447, size: 32, offset: 6176)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1393, file: !441, line: 435, baseType: !447, size: 32, offset: 6208)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1393, file: !441, line: 436, baseType: !1427, size: 2976, offset: 6240)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 2976, elements: !1428)
!1428 = !{!1429}
!1429 = !DISubrange(count: 93)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ERRORSRC", scope: !1393, file: !441, line: 437, baseType: !447, size: 32, offset: 9216)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1393, file: !441, line: 439, baseType: !1432, size: 992, offset: 9248)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 992, elements: !727)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1393, file: !441, line: 440, baseType: !447, size: 32, offset: 10240)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1393, file: !441, line: 441, baseType: !446, size: 32, offset: 10272)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "PSELRTS", scope: !1393, file: !441, line: 442, baseType: !447, size: 32, offset: 10304)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "PSELTXD", scope: !1393, file: !441, line: 443, baseType: !447, size: 32, offset: 10336)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "PSELCTS", scope: !1393, file: !441, line: 444, baseType: !447, size: 32, offset: 10368)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "PSELRXD", scope: !1393, file: !441, line: 445, baseType: !447, size: 32, offset: 10400)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "RXD", scope: !1393, file: !441, line: 446, baseType: !446, size: 32, offset: 10432)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "TXD", scope: !1393, file: !441, line: 450, baseType: !447, size: 32, offset: 10464)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1393, file: !441, line: 451, baseType: !446, size: 32, offset: 10496)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "BAUDRATE", scope: !1393, file: !441, line: 452, baseType: !447, size: 32, offset: 10528)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1393, file: !441, line: 453, baseType: !1444, size: 544, offset: 10560)
!1444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 544, elements: !1445)
!1445 = !{!1446}
!1446 = !DISubrange(count: 17)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !1393, file: !441, line: 454, baseType: !447, size: 32, offset: 11104)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1393, file: !441, line: 456, baseType: !1449, size: 21600, offset: 11136)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 21600, elements: !1450)
!1450 = !{!1451}
!1451 = !DISubrange(count: 675)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "POWER", scope: !1393, file: !441, line: 457, baseType: !447, size: 32, offset: 32736)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "poll_out_lock", scope: !1455, file: !1347, line: 318, type: !1343, isLocal: true, isDefinition: true)
!1455 = distinct !DISubprogram(name: "uart_nrfx_poll_out", scope: !1347, file: !1347, line: 300, type: !1318, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "uart_nrfx_uart0_data", scope: !1232, file: !1347, line: 1213, type: !1458, isLocal: true, isDefinition: true)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_nrfx_data", file: !1347, line: 62, size: 64, elements: !1459)
!1459 = !{!1460}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "uart_config", scope: !1458, file: !1347, line: 63, baseType: !1330, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_nrfx_config", file: !1347, line: 48, size: 32, elements: !1463)
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1462, file: !1347, line: 50, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "cc_data", scope: !1468, file: !1559, line: 53, type: !1610, isLocal: true, isDefinition: true)
!1468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1469, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1470, retainedTypes: !1494, globals: !1556, splitDebugInlining: false, nameTableKind: None)
!1469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/nrf_rtc_timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1470 = !{!1471, !1480, !30, !596, !556, !1488}
!1471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1472, line: 108, baseType: !32, size: 32, elements: !1473)
!1472 = !DIFile(filename: "modules/hal/nordic/nrfx/hal/nrf_rtc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1473 = !{!1474, !1475, !1476, !1477, !1478, !1479}
!1474 = !DIEnumerator(name: "NRF_RTC_INT_TICK_MASK", value: 1)
!1475 = !DIEnumerator(name: "NRF_RTC_INT_OVERFLOW_MASK", value: 2)
!1476 = !DIEnumerator(name: "NRF_RTC_INT_COMPARE0_MASK", value: 65536)
!1477 = !DIEnumerator(name: "NRF_RTC_INT_COMPARE1_MASK", value: 131072)
!1478 = !DIEnumerator(name: "NRF_RTC_INT_COMPARE2_MASK", value: 262144)
!1479 = !DIEnumerator(name: "NRF_RTC_INT_COMPARE3_MASK", value: 524288)
!1480 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1472, line: 97, baseType: !32, size: 32, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485, !1486, !1487}
!1482 = !DIEnumerator(name: "NRF_RTC_EVENT_TICK", value: 256)
!1483 = !DIEnumerator(name: "NRF_RTC_EVENT_OVERFLOW", value: 260)
!1484 = !DIEnumerator(name: "NRF_RTC_EVENT_COMPARE_0", value: 320)
!1485 = !DIEnumerator(name: "NRF_RTC_EVENT_COMPARE_1", value: 324)
!1486 = !DIEnumerator(name: "NRF_RTC_EVENT_COMPARE_2", value: 328)
!1487 = !DIEnumerator(name: "NRF_RTC_EVENT_COMPARE_3", value: 332)
!1488 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1472, line: 82, baseType: !32, size: 32, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493}
!1490 = !DIEnumerator(name: "NRF_RTC_TASK_START", value: 0)
!1491 = !DIEnumerator(name: "NRF_RTC_TASK_STOP", value: 4)
!1492 = !DIEnumerator(name: "NRF_RTC_TASK_CLEAR", value: 8)
!1493 = !DIEnumerator(name: "NRF_RTC_TASK_TRIGGER_OVERFLOW", value: 12)
!1494 = !{!1495, !293, !312, !250, !102, !173, !103, !1541, !217, !156, !1542, !717, !505, !718}
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_RTC_Type", file: !441, line: 737, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 709, size: 32768, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1502, !1503, !1507, !1508, !1509, !1513, !1515, !1519, !1520, !1521, !1525, !1526, !1527, !1528, !1532, !1533, !1534, !1535, !1536, !1540}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_START", scope: !1497, file: !441, line: 710, baseType: !447, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STOP", scope: !1497, file: !441, line: 711, baseType: !447, size: 32, offset: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CLEAR", scope: !1497, file: !441, line: 712, baseType: !447, size: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_TRIGOVRFLW", scope: !1497, file: !441, line: 713, baseType: !447, size: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1497, file: !441, line: 714, baseType: !1504, size: 1920, offset: 128)
!1504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1920, elements: !1505)
!1505 = !{!1506}
!1506 = !DISubrange(count: 60)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_TICK", scope: !1497, file: !441, line: 715, baseType: !447, size: 32, offset: 2048)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_OVRFLW", scope: !1497, file: !441, line: 716, baseType: !447, size: 32, offset: 2080)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1497, file: !441, line: 717, baseType: !1510, size: 448, offset: 2112)
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 448, elements: !1511)
!1511 = !{!1512}
!1512 = !DISubrange(count: 14)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_COMPARE", scope: !1497, file: !441, line: 718, baseType: !1514, size: 128, offset: 2560)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 128, elements: !1410)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1497, file: !441, line: 719, baseType: !1516, size: 3488, offset: 2688)
!1516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 3488, elements: !1517)
!1517 = !{!1518}
!1518 = !DISubrange(count: 109)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1497, file: !441, line: 720, baseType: !447, size: 32, offset: 6176)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1497, file: !441, line: 721, baseType: !447, size: 32, offset: 6208)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1497, file: !441, line: 722, baseType: !1522, size: 416, offset: 6240)
!1522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 416, elements: !1523)
!1523 = !{!1524}
!1524 = !DISubrange(count: 13)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "EVTEN", scope: !1497, file: !441, line: 723, baseType: !447, size: 32, offset: 6656)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "EVTENSET", scope: !1497, file: !441, line: 725, baseType: !447, size: 32, offset: 6688)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "EVTENCLR", scope: !1497, file: !441, line: 727, baseType: !447, size: 32, offset: 6720)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1497, file: !441, line: 729, baseType: !1529, size: 3520, offset: 6752)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 3520, elements: !1530)
!1530 = !{!1531}
!1531 = !DISubrange(count: 110)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "COUNTER", scope: !1497, file: !441, line: 730, baseType: !446, size: 32, offset: 10272)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "PRESCALER", scope: !1497, file: !441, line: 731, baseType: !447, size: 32, offset: 10304)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1497, file: !441, line: 733, baseType: !1522, size: 416, offset: 10336)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "CC", scope: !1497, file: !441, line: 734, baseType: !1514, size: 128, offset: 10752)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1497, file: !441, line: 735, baseType: !1537, size: 21856, offset: 10880)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 21856, elements: !1538)
!1538 = !{!1539}
!1539 = !DISubrange(count: 683)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "POWER", scope: !1497, file: !441, line: 736, baseType: !447, size: 32, offset: 32736)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_rtc_event_t", file: !1472, line: 105, baseType: !1480)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 326, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 314, size: 6400, elements: !1545)
!1545 = !{!1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1544, file: !508, line: 316, baseType: !724, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1544, file: !508, line: 317, baseType: !726, size: 992, offset: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1544, file: !508, line: 318, baseType: !724, size: 32, offset: 1024)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1544, file: !508, line: 319, baseType: !726, size: 992, offset: 1056)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1544, file: !508, line: 320, baseType: !724, size: 32, offset: 2048)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1544, file: !508, line: 321, baseType: !726, size: 992, offset: 2080)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1544, file: !508, line: 322, baseType: !724, size: 32, offset: 3072)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1544, file: !508, line: 323, baseType: !726, size: 992, offset: 3104)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1544, file: !508, line: 324, baseType: !736, size: 2048, offset: 4096)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1544, file: !508, line: 325, baseType: !740, size: 256, offset: 6144)
!1556 = !{!1557, !1583, !1585, !1588, !1590, !1466, !1592, !1594, !1596, !1598, !1602}
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1468, file: !1559, line: 689, type: !1560, isLocal: true, isDefinition: true, align: 32)
!1559 = !DIFile(filename: "zephyr/drivers/timer/nrf_rtc_timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !535, line: 51, size: 64, elements: !1562)
!1562 = !{!1563, !1582}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1561, file: !535, line: 60, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!103, !1567}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 378, size: 192, elements: !1570)
!1570 = !{!1571, !1572, !1573, !1574, !1580, !1581}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1569, file: !801, line: 380, baseType: !256, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1569, file: !801, line: 382, baseType: !13, size: 32, offset: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1569, file: !801, line: 384, baseType: !13, size: 32, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1569, file: !801, line: 386, baseType: !1575, size: 32, offset: 96)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !801, line: 351, size: 16, elements: !1577)
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1576, file: !801, line: 359, baseType: !156, size: 8)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1576, file: !801, line: 364, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1569, file: !801, line: 388, baseType: !102, size: 32, offset: 128)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1569, file: !801, line: 396, baseType: !826, size: 32, offset: 160)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1561, file: !535, line: 65, baseType: !1567, size: 32, offset: 32)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "overflow_cnt", scope: !1468, file: !1559, line: 42, type: !447, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "anchor", scope: !1468, file: !1559, line: 43, type: !1587, isLocal: true, isDefinition: true)
!1587 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "last_count", scope: !1468, file: !1559, line: 44, type: !312, isLocal: true, isDefinition: true)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "sys_busy", scope: !1468, file: !1559, line: 45, type: !717, isLocal: true, isDefinition: true)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "alloc_mask", scope: !1468, file: !1559, line: 55, type: !343, isLocal: true, isDefinition: true)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "force_isr_mask", scope: !1468, file: !1559, line: 56, type: !343, isLocal: true, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "int_mask", scope: !1468, file: !1559, line: 54, type: !343, isLocal: true, isDefinition: true)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "mode", scope: !1600, file: !1559, line: 649, type: !1601, isLocal: true, isDefinition: true)
!1600 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1559, file: !1559, line: 646, type: !1565, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__isr_rtc_nrf_isr_irq_0", scope: !1600, file: !1559, line: 667, type: !1604, isLocal: true, isDefinition: true, align: 32)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1604, file: !10, line: 55, baseType: !250, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1604, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1604, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1604, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1611, size: 128, elements: !330)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_nrf_rtc_timer_chan_data", file: !1559, line: 47, size: 128, elements: !1612)
!1612 = !{!1613, !1619, !1620}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1611, file: !1559, line: 48, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_nrf_rtc_timer_compare_handler_t", file: !1615, line: 33, baseType: !1616)
!1615 = !DIFile(filename: "zephyr/include/zephyr/drivers/timer/nrf_rtc_timer.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !250, !312, !102}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !1611, file: !1559, line: 49, baseType: !102, size: 32, offset: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "target_time", scope: !1611, file: !1559, line: 50, baseType: !1587, size: 64, offset: 64)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1623, file: !1645, line: 42, type: !173, isLocal: false, isDefinition: true)
!1623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1624, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1625, globals: !1644, splitDebugInlining: false, nameTableKind: None)
!1624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nordic/nrfx/mdk/system_nrf51.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1625 = !{!505, !1626, !922}
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_MPU_Type", file: !441, line: 314, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 304, size: 12416, elements: !1629)
!1629 = !{!1630, !1634, !1635, !1636, !1640, !1641, !1642, !1643}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1628, file: !441, line: 305, baseType: !1631, size: 10560)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 10560, elements: !1632)
!1632 = !{!1633}
!1633 = !DISubrange(count: 330)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "PERR0", scope: !1628, file: !441, line: 306, baseType: !447, size: 32, offset: 10560)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "RLENR0", scope: !1628, file: !441, line: 307, baseType: !447, size: 32, offset: 10592)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1628, file: !441, line: 308, baseType: !1637, size: 1664, offset: 10624)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1664, elements: !1638)
!1638 = !{!1639}
!1639 = !DISubrange(count: 52)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "PROTENSET0", scope: !1628, file: !441, line: 309, baseType: !447, size: 32, offset: 12288)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "PROTENSET1", scope: !1628, file: !441, line: 310, baseType: !447, size: 32, offset: 12320)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "DISABLEINDEBUG", scope: !1628, file: !441, line: 311, baseType: !447, size: 32, offset: 12352)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "PROTBLOCKSIZE", scope: !1628, file: !441, line: 313, baseType: !447, size: 32, offset: 12384)
!1644 = !{!1621}
!1645 = !DIFile(filename: "modules/hal/nordic/nrfx/mdk/system_nrf51.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "m_clock_cb", scope: !1648, file: !1687, line: 144, type: !1688, isLocal: true, isDefinition: true)
!1648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1649, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1650, retainedTypes: !1651, globals: !1686, splitDebugInlining: false, nameTableKind: None)
!1649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_clock.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1650 = !{!636, !655, !561, !566, !571, !577, !583, !596, !592}
!1651 = !{!1652, !713, !173, !1685, !156, !102, !714, !715, !716, !505, !718, !717}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_CLOCK_Type", file: !441, line: 291, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 260, size: 10912, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_HFCLKSTART", scope: !1654, file: !441, line: 261, baseType: !447, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_HFCLKSTOP", scope: !1654, file: !441, line: 262, baseType: !447, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_LFCLKSTART", scope: !1654, file: !441, line: 263, baseType: !447, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_LFCLKSTOP", scope: !1654, file: !441, line: 264, baseType: !447, size: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CAL", scope: !1654, file: !441, line: 265, baseType: !447, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CTSTART", scope: !1654, file: !441, line: 266, baseType: !447, size: 32, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CTSTOP", scope: !1654, file: !441, line: 267, baseType: !447, size: 32, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1654, file: !441, line: 268, baseType: !677, size: 1824, offset: 224)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_HFCLKSTARTED", scope: !1654, file: !441, line: 269, baseType: !447, size: 32, offset: 2048)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_LFCLKSTARTED", scope: !1654, file: !441, line: 270, baseType: !447, size: 32, offset: 2080)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1654, file: !441, line: 271, baseType: !446, size: 32, offset: 2112)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_DONE", scope: !1654, file: !441, line: 272, baseType: !447, size: 32, offset: 2144)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_CTTO", scope: !1654, file: !441, line: 273, baseType: !447, size: 32, offset: 2176)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1654, file: !441, line: 274, baseType: !686, size: 3968, offset: 2208)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1654, file: !441, line: 275, baseType: !447, size: 32, offset: 6176)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1654, file: !441, line: 276, baseType: !447, size: 32, offset: 6208)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1654, file: !441, line: 277, baseType: !692, size: 2016, offset: 6240)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "HFCLKRUN", scope: !1654, file: !441, line: 278, baseType: !446, size: 32, offset: 8256)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "HFCLKSTAT", scope: !1654, file: !441, line: 279, baseType: !446, size: 32, offset: 8288)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1654, file: !441, line: 280, baseType: !446, size: 32, offset: 8320)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKRUN", scope: !1654, file: !441, line: 281, baseType: !446, size: 32, offset: 8352)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKSTAT", scope: !1654, file: !441, line: 282, baseType: !446, size: 32, offset: 8384)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKSRCCOPY", scope: !1654, file: !441, line: 283, baseType: !446, size: 32, offset: 8416)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1654, file: !441, line: 285, baseType: !702, size: 1984, offset: 8448)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "LFCLKSRC", scope: !1654, file: !441, line: 286, baseType: !447, size: 32, offset: 10432)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1654, file: !441, line: 287, baseType: !489, size: 224, offset: 10464)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "CTIV", scope: !1654, file: !441, line: 288, baseType: !447, size: 32, offset: 10688)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1654, file: !441, line: 289, baseType: !709, size: 160, offset: 10720)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "XTALFREQ", scope: !1654, file: !441, line: 290, baseType: !447, size: 32, offset: 10880)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !441, line: 105, baseType: !596)
!1686 = !{!1646}
!1687 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/src/nrfx_clock.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_clock_cb_t", file: !1687, line: 142, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1687, line: 131, size: 64, elements: !1690)
!1690 = !{!1691, !1697}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !1689, file: !1687, line: 133, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_clock_event_handler_t", file: !656, line: 68, baseType: !1693)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{null, !1696}
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_clock_evt_type_t", file: !656, line: 61, baseType: !655)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "module_initialized", scope: !1689, file: !1687, line: 134, baseType: !717, size: 8, offset: 32)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "m_cb", scope: !1700, file: !1800, line: 174, type: !1801, isLocal: true, isDefinition: true)
!1700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1701, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1702, retainedTypes: !1745, globals: !1799, splitDebugInlining: false, nameTableKind: None)
!1701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_gpiote.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1702 = !{!636, !1068, !1043, !1073, !1064, !1703, !1053, !1710, !1714, !1720, !1727, !1734, !1740, !596}
!1703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1704, line: 65, baseType: !32, size: 32, elements: !1705)
!1704 = !DIFile(filename: "modules/hal/nordic/nrfx/hal/nrf_gpiote.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1705 = !{!1706, !1707, !1708, !1709}
!1706 = !DIEnumerator(name: "NRF_GPIOTE_POLARITY_NONE", value: 0)
!1707 = !DIEnumerator(name: "NRF_GPIOTE_POLARITY_LOTOHI", value: 1)
!1708 = !DIEnumerator(name: "NRF_GPIOTE_POLARITY_HITOLO", value: 2)
!1709 = !DIEnumerator(name: "NRF_GPIOTE_POLARITY_TOGGLE", value: 3)
!1710 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1704, line: 74, baseType: !32, size: 32, elements: !1711)
!1711 = !{!1712, !1713}
!1712 = !DIEnumerator(name: "NRF_GPIOTE_INITIAL_VALUE_LOW", value: 0)
!1713 = !DIEnumerator(name: "NRF_GPIOTE_INITIAL_VALUE_HIGH", value: 1)
!1714 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1715, line: 285, baseType: !32, size: 32, elements: !1716)
!1715 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/nrfx_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1716 = !{!1717, !1718, !1719}
!1717 = !DIEnumerator(name: "NRFX_DRV_STATE_UNINITIALIZED", value: 0)
!1718 = !DIEnumerator(name: "NRFX_DRV_STATE_INITIALIZED", value: 1)
!1719 = !DIEnumerator(name: "NRFX_DRV_STATE_POWERED_ON", value: 2)
!1720 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1704, line: 125, baseType: !32, size: 32, elements: !1721)
!1721 = !{!1722, !1723, !1724, !1725, !1726}
!1722 = !DIEnumerator(name: "NRF_GPIOTE_EVENT_IN_0", value: 256)
!1723 = !DIEnumerator(name: "NRF_GPIOTE_EVENT_IN_1", value: 260)
!1724 = !DIEnumerator(name: "NRF_GPIOTE_EVENT_IN_2", value: 264)
!1725 = !DIEnumerator(name: "NRF_GPIOTE_EVENT_IN_3", value: 268)
!1726 = !DIEnumerator(name: "NRF_GPIOTE_EVENT_PORT", value: 380)
!1727 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1704, line: 141, baseType: !103, size: 32, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732, !1733}
!1729 = !DIEnumerator(name: "NRF_GPIOTE_INT_IN0_MASK", value: 1)
!1730 = !DIEnumerator(name: "NRF_GPIOTE_INT_IN1_MASK", value: 2)
!1731 = !DIEnumerator(name: "NRF_GPIOTE_INT_IN2_MASK", value: 4)
!1732 = !DIEnumerator(name: "NRF_GPIOTE_INT_IN3_MASK", value: 8)
!1733 = !DIEnumerator(name: "NRF_GPIOTE_INT_PORT_MASK", value: -2147483648)
!1734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1704, line: 90, baseType: !32, size: 32, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739}
!1736 = !DIEnumerator(name: "NRF_GPIOTE_TASK_OUT_0", value: 0)
!1737 = !DIEnumerator(name: "NRF_GPIOTE_TASK_OUT_1", value: 4)
!1738 = !DIEnumerator(name: "NRF_GPIOTE_TASK_OUT_2", value: 8)
!1739 = !DIEnumerator(name: "NRF_GPIOTE_TASK_OUT_3", value: 12)
!1740 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 144, baseType: !32, size: 32, elements: !1741)
!1741 = !{!1742, !1743, !1744}
!1742 = !DIEnumerator(name: "NRF_GPIO_PIN_NOSENSE", value: 0)
!1743 = !DIEnumerator(name: "NRF_GPIO_PIN_SENSE_LOW", value: 3)
!1744 = !DIEnumerator(name: "NRF_GPIO_PIN_SENSE_HIGH", value: 2)
!1745 = !{!1746, !718, !173, !156, !102, !1774, !250, !1775, !1789, !1790, !1685, !505, !1791, !217, !1792, !717, !1797, !1798}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_GPIOTE_Type", file: !441, line: 628, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 615, size: 32768, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1757, !1758, !1762, !1763, !1764, !1768, !1769, !1773}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_OUT", scope: !1748, file: !441, line: 616, baseType: !1514, size: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1748, file: !441, line: 617, baseType: !1504, size: 1920, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_IN", scope: !1748, file: !441, line: 618, baseType: !1514, size: 128, offset: 2048)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1748, file: !441, line: 619, baseType: !1754, size: 864, offset: 2176)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 864, elements: !1755)
!1755 = !{!1756}
!1756 = !DISubrange(count: 27)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_PORT", scope: !1748, file: !441, line: 620, baseType: !447, size: 32, offset: 3040)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1748, file: !441, line: 621, baseType: !1759, size: 3104, offset: 3072)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 3104, elements: !1760)
!1760 = !{!1761}
!1761 = !DISubrange(count: 97)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1748, file: !441, line: 622, baseType: !447, size: 32, offset: 6176)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1748, file: !441, line: 623, baseType: !447, size: 32, offset: 6208)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1748, file: !441, line: 624, baseType: !1765, size: 4128, offset: 6240)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 4128, elements: !1766)
!1766 = !{!1767}
!1767 = !DISubrange(count: 129)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !1748, file: !441, line: 625, baseType: !1514, size: 128, offset: 10368)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1748, file: !441, line: 626, baseType: !1770, size: 22240, offset: 10496)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 22240, elements: !1771)
!1771 = !{!1772}
!1772 = !DISubrange(count: 695)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "POWER", scope: !1748, file: !441, line: 627, baseType: !447, size: 32, offset: 32736)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpiote_event_t", file: !1704, line: 138, baseType: !1720)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_GPIO_Type", file: !441, line: 1186, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 1175, size: 15360, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1777, file: !441, line: 1176, baseType: !1164, size: 10272)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !1777, file: !441, line: 1177, baseType: !447, size: 32, offset: 10272)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !1777, file: !441, line: 1178, baseType: !447, size: 32, offset: 10304)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !1777, file: !441, line: 1179, baseType: !447, size: 32, offset: 10336)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !1777, file: !441, line: 1180, baseType: !446, size: 32, offset: 10368)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !1777, file: !441, line: 1181, baseType: !447, size: 32, offset: 10400)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !1777, file: !441, line: 1182, baseType: !447, size: 32, offset: 10432)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !1777, file: !441, line: 1183, baseType: !447, size: 32, offset: 10464)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1777, file: !441, line: 1184, baseType: !1175, size: 3840, offset: 10496)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "PIN_CNF", scope: !1777, file: !441, line: 1185, baseType: !1179, size: 1024, offset: 14336)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpiote_polarity_t", file: !1704, line: 71, baseType: !1703)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_trigger_t", file: !1044, line: 65, baseType: !1043)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpiote_task_t", file: !1704, line: 122, baseType: !1734)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_evt_handler_t", file: !1044, line: 293, baseType: !1793)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{null, !1796, !1789}
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_pin_t", file: !1044, line: 53, baseType: !173)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpio_pin_sense_t", file: !1054, line: 149, baseType: !1740)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!1799 = !{!1698}
!1800 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/src/nrfx_gpiote.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpiote_control_block_t", file: !1800, line: 172, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 151, size: 768, elements: !1803)
!1803 = !{!1804, !1815, !1816, !1818, !1819, !1820, !1822}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1802, file: !1800, line: 154, baseType: !1805, size: 64)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 64, elements: !330)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_handler_config_t", file: !1044, line: 122, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 118, size: 64, elements: !1808)
!1808 = !{!1809, !1814}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1807, file: !1044, line: 120, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_interrupt_handler_t", file: !1044, line: 74, baseType: !1811)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{null, !1796, !1790, !102}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "p_context", scope: !1807, file: !1044, line: 121, baseType: !102, size: 32, offset: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "global_handler", scope: !1802, file: !1800, line: 157, baseType: !1806, size: 64, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pin_flags", scope: !1802, file: !1800, line: 160, baseType: !1817, size: 512, offset: 128)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 512, elements: !1180)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "available_channels_mask", scope: !1802, file: !1800, line: 163, baseType: !343, size: 32, offset: 640)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "available_evt_handlers", scope: !1802, file: !1800, line: 166, baseType: !343, size: 32, offset: 672)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_pins", scope: !1802, file: !1800, line: 169, baseType: !1821, size: 32, offset: 704)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 32, elements: !330)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1802, file: !1800, line: 171, baseType: !1823, size: 32, offset: 736)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_drv_state_t", file: !1715, line: 290, baseType: !1714)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1826, file: !1829, line: 23, type: !1830, isLocal: false, isDefinition: true)
!1826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1827, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1828, splitDebugInlining: false, nameTableKind: None)
!1827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1828 = !{!1824}
!1829 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1833, file: !1837, line: 86, type: !2057, isLocal: false, isDefinition: true, align: 64)
!1833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1834, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1835, retainedTypes: !1844, globals: !1902, splitDebugInlining: false, nameTableKind: None)
!1834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!1835 = !{!1836, !30, !596}
!1836 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1837, line: 63, baseType: !32, size: 32, elements: !1838)
!1837 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1838 = !{!1839, !1840, !1841, !1842, !1843}
!1839 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1840 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1841 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1842 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1843 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1844 = !{!217, !102, !103, !1845, !311, !173, !250, !1875, !1889}
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1847)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1848, line: 51, size: 64, elements: !1849)
!1848 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1849 = !{!1850, !1870}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1847, file: !1848, line: 52, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1848, line: 38, baseType: !1852)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!103, !1855, !718, !170}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 378, size: 192, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1862, !1868, !1869}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1857, file: !801, line: 380, baseType: !256, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1857, file: !801, line: 382, baseType: !13, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1857, file: !801, line: 384, baseType: !13, size: 32, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1857, file: !801, line: 386, baseType: !1863, size: 32, offset: 96)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !801, line: 351, size: 16, elements: !1865)
!1865 = !{!1866, !1867}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1864, file: !801, line: 359, baseType: !156, size: 8)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1864, file: !801, line: 364, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1857, file: !801, line: 388, baseType: !102, size: 32, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1857, file: !801, line: 396, baseType: !826, size: 32, offset: 160)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1847, file: !1848, line: 53, baseType: !1871, size: 32, offset: 32)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1848, line: 47, baseType: !1872)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!103, !1855, !718, !170, !173}
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 326, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 314, size: 6400, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1877, file: !508, line: 316, baseType: !724, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1877, file: !508, line: 317, baseType: !726, size: 992, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1877, file: !508, line: 318, baseType: !724, size: 32, offset: 1024)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1877, file: !508, line: 319, baseType: !726, size: 992, offset: 1056)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1877, file: !508, line: 320, baseType: !724, size: 32, offset: 2048)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1877, file: !508, line: 321, baseType: !726, size: 992, offset: 2080)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1877, file: !508, line: 322, baseType: !724, size: 32, offset: 3072)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1877, file: !508, line: 323, baseType: !726, size: 992, offset: 3104)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1877, file: !508, line: 324, baseType: !736, size: 2048, offset: 4096)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1877, file: !508, line: 325, baseType: !740, size: 256, offset: 6144)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 352, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 341, size: 320, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1891, file: !508, line: 343, baseType: !446, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1891, file: !508, line: 344, baseType: !447, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1891, file: !508, line: 345, baseType: !173, size: 32, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1891, file: !508, line: 346, baseType: !447, size: 32, offset: 96)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1891, file: !508, line: 347, baseType: !447, size: 32, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1891, file: !508, line: 348, baseType: !447, size: 32, offset: 160)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1891, file: !508, line: 349, baseType: !173, size: 32, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1891, file: !508, line: 350, baseType: !519, size: 64, offset: 224)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1891, file: !508, line: 351, baseType: !447, size: 32, offset: 288)
!1902 = !{!1903, !2020, !2028, !2030, !1831, !2033, !2035, !2040}
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "_kernel", scope: !1833, file: !1837, line: 40, type: !1905, isLocal: false, isDefinition: true)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !150, line: 158, size: 320, elements: !1906)
!1906 = !{!1907, !2014, !2015}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1905, file: !150, line: 159, baseType: !1908, size: 192)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1909, size: 192, elements: !330)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !150, line: 100, size: 192, elements: !1910)
!1910 = !{!1911, !1912, !1913, !2008, !2009, !2010, !2011}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1909, file: !150, line: 102, baseType: !173, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1909, file: !150, line: 105, baseType: !311, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1909, file: !150, line: 108, baseType: !1914, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !1916)
!1916 = !{!1917, !1975, !1987, !1988, !1989, !1990, !2003}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1915, file: !114, line: 247, baseType: !1918, size: 384)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !1919)
!1919 = !{!1920, !1944, !1951, !1952, !1953, !1962, !1963, !1964}
!1920 = !DIDerivedType(tag: DW_TAG_member, scope: !1918, file: !114, line: 60, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1918, file: !114, line: 60, size: 64, elements: !1922)
!1922 = !{!1923, !1938}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1921, file: !114, line: 61, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !1926)
!1926 = !{!1927, !1933}
!1927 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !124, line: 38, baseType: !1928, size: 32)
!1928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !124, line: 38, size: 32, elements: !1929)
!1929 = !{!1930, !1932}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1928, file: !124, line: 39, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1928, file: !124, line: 40, baseType: !1931, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !124, line: 42, baseType: !1934, size: 32, offset: 32)
!1934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !124, line: 42, size: 32, elements: !1935)
!1935 = !{!1936, !1937}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1934, file: !124, line: 43, baseType: !1931, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1934, file: !124, line: 44, baseType: !1931, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1921, file: !114, line: 62, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !1940)
!1940 = !{!1941}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1939, file: !140, line: 50, baseType: !1942, size: 64)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1943, size: 64, elements: !145)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1918, file: !114, line: 68, baseType: !1945, size: 32, offset: 64)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !1948)
!1948 = !{!1949}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1947, file: !150, line: 232, baseType: !1950, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !1925)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1918, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1918, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!1953 = !DIDerivedType(tag: DW_TAG_member, scope: !1918, file: !114, line: 90, baseType: !1954, size: 16, offset: 112)
!1954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1918, file: !114, line: 90, size: 16, elements: !1955)
!1955 = !{!1956, !1961}
!1956 = !DIDerivedType(tag: DW_TAG_member, scope: !1954, file: !114, line: 91, baseType: !1957, size: 16)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1954, file: !114, line: 91, size: 16, elements: !1958)
!1958 = !{!1959, !1960}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1957, file: !114, line: 96, baseType: !166, size: 8)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1957, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1954, file: !114, line: 100, baseType: !170, size: 16)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1918, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1918, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1918, file: !114, line: 131, baseType: !1965, size: 192, offset: 192)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !1966)
!1966 = !{!1967, !1968, !1974}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1965, file: !150, line: 245, baseType: !1924, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1965, file: !150, line: 246, baseType: !1969, size: 32, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !1970)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !1973}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1965, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1915, file: !114, line: 250, baseType: !1976, size: 288, offset: 384)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !1977)
!1977 = !{!1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1976, file: !190, line: 26, baseType: !173, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1976, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1976, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1976, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1976, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1976, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1976, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1976, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1976, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1915, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1915, file: !114, line: 256, baseType: !1946, size: 64, offset: 704)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1915, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1915, file: !114, line: 325, baseType: !1991, size: 32, offset: 800)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !1993)
!1993 = !{!1994, !2000, !2001}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1992, file: !109, line: 5074, baseType: !1995, size: 96)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !1996)
!1996 = !{!1997, !1998, !1999}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1995, file: !210, line: 57, baseType: !213, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1995, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1995, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1992, file: !109, line: 5075, baseType: !1946, size: 64, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1992, file: !109, line: 5076, baseType: !2002, offset: 160)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1915, file: !114, line: 343, baseType: !2004, size: 64, offset: 832)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !2005)
!2005 = !{!2006, !2007}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2004, file: !190, line: 63, baseType: !173, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2004, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1909, file: !150, line: 111, baseType: !1914, size: 32, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1909, file: !150, line: 124, baseType: !103, size: 32, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1909, file: !150, line: 127, baseType: !156, size: 8, offset: 160)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1909, file: !150, line: 153, baseType: !2012, offset: 168)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2013, line: 33, elements: !223)
!2013 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "idle", scope: !1905, file: !150, line: 162, baseType: !250, size: 32, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1905, file: !150, line: 170, baseType: !2016, size: 96, offset: 224)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !2017)
!2017 = !{!2018, !2019}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2016, file: !150, line: 86, baseType: !1914, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2016, file: !150, line: 90, baseType: !1950, size: 64, offset: 32)
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1833, file: !1837, line: 43, type: !2022, isLocal: false, isDefinition: true, align: 64)
!2022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2023, size: 8192, elements: !2026)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !2024)
!2024 = !{!2025}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2023, file: !234, line: 48, baseType: !237, size: 8)
!2026 = !{!2027}
!2027 = !DISubrange(count: 1024)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1833, file: !1837, line: 44, type: !1915, isLocal: false, isDefinition: true)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1833, file: !1837, line: 48, type: !2032, isLocal: false, isDefinition: true)
!2032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1915, size: 896, elements: !330)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1833, file: !1837, line: 217, type: !717, isLocal: false, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1833, file: !1837, line: 50, type: !2037, isLocal: true, isDefinition: true, align: 64)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2023, size: 2048, elements: !2038)
!2038 = !{!331, !2039}
!2039 = !DISubrange(count: 256)
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "levels", scope: !2042, file: !1837, line: 232, type: !2045, isLocal: true, isDefinition: true)
!2042 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1837, file: !1837, line: 230, type: !2043, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !1836}
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2046, size: 192, elements: !2055)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !535, line: 51, size: 64, elements: !2049)
!2049 = !{!2050, !2054}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2048, file: !535, line: 60, baseType: !2051, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!103, !1855}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2048, file: !535, line: 65, baseType: !1855, size: 32, offset: 32)
!2055 = !{!2056}
!2056 = !DISubrange(count: 6)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2023, size: 16384, elements: !2058)
!2058 = !{!331, !2059}
!2059 = !DISubrange(count: 2048)
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "states_str", scope: !2062, file: !2063, line: 276, type: !2170, isLocal: true, isDefinition: true)
!2062 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2063, file: !2063, line: 271, type: !2064, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!2063 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!256, !2066, !311, !217}
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !2067)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !2069)
!2069 = !{!2070, !2128, !2140, !2141, !2142, !2143, !2156}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2068, file: !114, line: 247, baseType: !2071, size: 384)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !2072)
!2072 = !{!2073, !2097, !2104, !2105, !2106, !2115, !2116, !2117}
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !2071, file: !114, line: 60, baseType: !2074, size: 64)
!2074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2071, file: !114, line: 60, size: 64, elements: !2075)
!2075 = !{!2076, !2091}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2074, file: !114, line: 61, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !2078)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2079)
!2079 = !{!2080, !2086}
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2078, file: !124, line: 38, baseType: !2081, size: 32)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2078, file: !124, line: 38, size: 32, elements: !2082)
!2082 = !{!2083, !2085}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2081, file: !124, line: 39, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2081, file: !124, line: 40, baseType: !2084, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2078, file: !124, line: 42, baseType: !2087, size: 32, offset: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2078, file: !124, line: 42, size: 32, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2087, file: !124, line: 43, baseType: !2084, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2087, file: !124, line: 44, baseType: !2084, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2074, file: !114, line: 62, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !2093)
!2093 = !{!2094}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2092, file: !140, line: 50, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2096, size: 64, elements: !145)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2071, file: !114, line: 68, baseType: !2098, size: 32, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !2101)
!2101 = !{!2102}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2100, file: !150, line: 232, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2078)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2071, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2071, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!2106 = !DIDerivedType(tag: DW_TAG_member, scope: !2071, file: !114, line: 90, baseType: !2107, size: 16, offset: 112)
!2107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2071, file: !114, line: 90, size: 16, elements: !2108)
!2108 = !{!2109, !2114}
!2109 = !DIDerivedType(tag: DW_TAG_member, scope: !2107, file: !114, line: 91, baseType: !2110, size: 16)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2107, file: !114, line: 91, size: 16, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2110, file: !114, line: 96, baseType: !166, size: 8)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2110, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2107, file: !114, line: 100, baseType: !170, size: 16)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2071, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2071, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2071, file: !114, line: 131, baseType: !2118, size: 192, offset: 192)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !2119)
!2119 = !{!2120, !2121, !2127}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2118, file: !150, line: 245, baseType: !2077, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2118, file: !150, line: 246, baseType: !2122, size: 32, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !2123)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{null, !2126}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2118, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2068, file: !114, line: 250, baseType: !2129, size: 288, offset: 384)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !2130)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2129, file: !190, line: 26, baseType: !173, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2129, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2129, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2129, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2129, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2129, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2129, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2129, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2129, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2068, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2068, file: !114, line: 256, baseType: !2099, size: 64, offset: 704)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2068, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2068, file: !114, line: 325, baseType: !2144, size: 32, offset: 800)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !2146)
!2146 = !{!2147, !2153, !2154}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2145, file: !109, line: 5074, baseType: !2148, size: 96)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !2149)
!2149 = !{!2150, !2151, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2148, file: !210, line: 57, baseType: !213, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2148, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2148, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2145, file: !109, line: 5075, baseType: !2099, size: 64, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2145, file: !109, line: 5076, baseType: !2155, offset: 160)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2068, file: !114, line: 343, baseType: !2157, size: 64, offset: 832)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !2158)
!2158 = !{!2159, !2160}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2157, file: !190, line: 63, baseType: !173, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2157, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!2161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2162, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2163, globals: !2165, splitDebugInlining: false, nameTableKind: None)
!2162 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2163 = !{!102, !256, !293, !156, !103, !2164, !24, !217, !311, !173, !312}
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2165 = !{!2060, !2166}
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "states_sz", scope: !2062, file: !2063, line: 279, type: !2168, isLocal: true, isDefinition: true)
!2168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2169, size: 256, elements: !497)
!2169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 256, elements: !497)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "lock", scope: !2173, file: !2192, line: 39, type: !2193, isLocal: true, isDefinition: true)
!2173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2174, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2175, globals: !2191, splitDebugInlining: false, nameTableKind: None)
!2174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2175 = !{!102, !717, !103, !2176}
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2179)
!2179 = !{!2180, !2186}
!2180 = !DIDerivedType(tag: DW_TAG_member, scope: !2178, file: !124, line: 38, baseType: !2181, size: 32)
!2181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2178, file: !124, line: 38, size: 32, elements: !2182)
!2182 = !{!2183, !2185}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2181, file: !124, line: 39, baseType: !2184, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2181, file: !124, line: 40, baseType: !2184, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, scope: !2178, file: !124, line: 42, baseType: !2187, size: 32, offset: 32)
!2187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2178, file: !124, line: 42, size: 32, elements: !2188)
!2188 = !{!2189, !2190}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2187, file: !124, line: 43, baseType: !2184, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2187, file: !124, line: 44, baseType: !2184, size: 32)
!2191 = !{!2171}
!2192 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2196, file: !2307, line: 56, type: !2296, isLocal: false, isDefinition: true)
!2196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2197, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2198, retainedTypes: !2207, globals: !2304, splitDebugInlining: false, nameTableKind: None)
!2197 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2198 = !{!2199, !30}
!2199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2200, line: 27, baseType: !32, size: 32, elements: !2201)
!2200 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2201 = !{!2202, !2203, !2204, !2205, !2206}
!2202 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2203 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2204 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2205 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2206 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2207 = !{!2208, !311, !102, !2302, !718, !293, !250, !103, !173, !312, !2303}
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !2210)
!2210 = !{!2211, !2269, !2281, !2282, !2283, !2284, !2297}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2209, file: !114, line: 247, baseType: !2212, size: 384)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !2213)
!2213 = !{!2214, !2238, !2245, !2246, !2247, !2256, !2257, !2258}
!2214 = !DIDerivedType(tag: DW_TAG_member, scope: !2212, file: !114, line: 60, baseType: !2215, size: 64)
!2215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2212, file: !114, line: 60, size: 64, elements: !2216)
!2216 = !{!2217, !2232}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2215, file: !114, line: 61, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2220)
!2220 = !{!2221, !2227}
!2221 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !124, line: 38, baseType: !2222, size: 32)
!2222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !124, line: 38, size: 32, elements: !2223)
!2223 = !{!2224, !2226}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2222, file: !124, line: 39, baseType: !2225, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2222, file: !124, line: 40, baseType: !2225, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !124, line: 42, baseType: !2228, size: 32, offset: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !124, line: 42, size: 32, elements: !2229)
!2229 = !{!2230, !2231}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2228, file: !124, line: 43, baseType: !2225, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2228, file: !124, line: 44, baseType: !2225, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2215, file: !114, line: 62, baseType: !2233, size: 64)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2233, file: !140, line: 50, baseType: !2236, size: 64)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2237, size: 64, elements: !145)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2212, file: !114, line: 68, baseType: !2239, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !2242)
!2242 = !{!2243}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2241, file: !150, line: 232, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2219)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2212, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2212, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!2247 = !DIDerivedType(tag: DW_TAG_member, scope: !2212, file: !114, line: 90, baseType: !2248, size: 16, offset: 112)
!2248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2212, file: !114, line: 90, size: 16, elements: !2249)
!2249 = !{!2250, !2255}
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !114, line: 91, baseType: !2251, size: 16)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2248, file: !114, line: 91, size: 16, elements: !2252)
!2252 = !{!2253, !2254}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2251, file: !114, line: 96, baseType: !166, size: 8)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2251, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2248, file: !114, line: 100, baseType: !170, size: 16)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2212, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2212, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2212, file: !114, line: 131, baseType: !2259, size: 192, offset: 192)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !2260)
!2260 = !{!2261, !2262, !2268}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2259, file: !150, line: 245, baseType: !2218, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2259, file: !150, line: 246, baseType: !2263, size: 32, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !2264)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{null, !2267}
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2259, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2209, file: !114, line: 250, baseType: !2270, size: 288, offset: 384)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2270, file: !190, line: 26, baseType: !173, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2270, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2270, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2270, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2270, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2270, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2270, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2270, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2270, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2209, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2209, file: !114, line: 256, baseType: !2240, size: 64, offset: 704)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2209, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2209, file: !114, line: 325, baseType: !2285, size: 32, offset: 800)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !2287)
!2287 = !{!2288, !2294, !2295}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2286, file: !109, line: 5074, baseType: !2289, size: 96)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !2290)
!2290 = !{!2291, !2292, !2293}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2289, file: !210, line: 57, baseType: !213, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2289, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2289, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2286, file: !109, line: 5075, baseType: !2240, size: 64, offset: 96)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2286, file: !109, line: 5076, baseType: !2296, offset: 160)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2209, file: !114, line: 343, baseType: !2298, size: 64, offset: 832)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2298, file: !190, line: 63, baseType: !173, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2298, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2304 = !{!2194, !2305, !2308, !2310}
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2196, file: !2307, line: 404, type: !103, isLocal: true, isDefinition: true)
!2307 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2196, file: !2307, line: 405, type: !103, isLocal: true, isDefinition: true)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "pending_current", scope: !2196, file: !2307, line: 425, type: !2208, isLocal: true, isDefinition: true)
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2314, file: !2344, line: 19, type: !2350, isLocal: true, isDefinition: true)
!2314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2315, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2316, globals: !2341, splitDebugInlining: false, nameTableKind: None)
!2315 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2316 = !{!293, !102, !250, !173, !103, !2317, !311, !186}
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !2319)
!2319 = !{!2320, !2335, !2340}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2318, file: !150, line: 245, baseType: !2321, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !2322)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2323)
!2323 = !{!2324, !2330}
!2324 = !DIDerivedType(tag: DW_TAG_member, scope: !2322, file: !124, line: 38, baseType: !2325, size: 32)
!2325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2322, file: !124, line: 38, size: 32, elements: !2326)
!2326 = !{!2327, !2329}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2325, file: !124, line: 39, baseType: !2328, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2325, file: !124, line: 40, baseType: !2328, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2322, file: !124, line: 42, baseType: !2331, size: 32, offset: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2322, file: !124, line: 42, size: 32, elements: !2332)
!2332 = !{!2333, !2334}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2331, file: !124, line: 43, baseType: !2328, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2331, file: !124, line: 44, baseType: !2328, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2318, file: !150, line: 246, baseType: !2336, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !2337)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{null, !2317}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2318, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!2341 = !{!2342, !2312, !2345, !2347}
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2314, file: !2344, line: 15, type: !312, isLocal: true, isDefinition: true)
!2344 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2314, file: !2344, line: 25, type: !103, isLocal: true, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2314, file: !2344, line: 17, type: !2349, isLocal: true, isDefinition: true)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2322)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "lock", scope: !2353, file: !2356, line: 32, type: !2357, isLocal: true, isDefinition: true)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2354, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !2355, splitDebugInlining: false, nameTableKind: None)
!2354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/atomic_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2355 = !{!2351}
!2356 = !DIFile(filename: "zephyr/kernel/atomic_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2359, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2361, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2361 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2364, retainedTypes: !2374, splitDebugInlining: false, nameTableKind: None)
!2363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/onoff.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2364 = !{!2365, !30}
!2365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "event_type", file: !2366, line: 60, baseType: !32, size: 32, elements: !2367)
!2366 = !DIFile(filename: "zephyr/lib/os/onoff.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373}
!2368 = !DIEnumerator(name: "EVT_NOP", value: 0)
!2369 = !DIEnumerator(name: "EVT_COMPLETE", value: 1)
!2370 = !DIEnumerator(name: "EVT_RECHECK", value: 2)
!2371 = !DIEnumerator(name: "EVT_START", value: 3)
!2372 = !DIEnumerator(name: "EVT_STOP", value: 4)
!2373 = !DIEnumerator(name: "EVT_RESET", value: 5)
!2374 = !{!102, !103, !2375, !311, !2414, !2455}
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_client", file: !752, line: 273, size: 128, elements: !2377)
!2377 = !{!2378, !2384}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2376, file: !752, line: 280, baseType: !2379, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !301, line: 33, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !301, line: 29, size: 32, elements: !2381)
!2381 = !{!2382}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2380, file: !301, line: 30, baseType: !2383, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !2376, file: !752, line: 283, baseType: !2385, size: 96, offset: 32)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_notify", file: !762, line: 138, size: 96, elements: !2386)
!2386 = !{!2387, !2412, !2413}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !2385, file: !762, line: 149, baseType: !2388, size: 32)
!2388 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "method", file: !762, line: 139, size: 32, elements: !2389)
!2389 = !{!2390, !2411}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2388, file: !762, line: 145, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_poll_signal", file: !109, line: 5397, size: 128, elements: !2393)
!2393 = !{!2394, !2409, !2410}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "poll_events", scope: !2392, file: !109, line: 5399, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2397)
!2397 = !{!2398, !2404}
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2396, file: !124, line: 38, baseType: !2399, size: 32)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2396, file: !124, line: 38, size: 32, elements: !2400)
!2400 = !{!2401, !2403}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2399, file: !124, line: 39, baseType: !2402, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2399, file: !124, line: 40, baseType: !2402, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, scope: !2396, file: !124, line: 42, baseType: !2405, size: 32, offset: 32)
!2405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2396, file: !124, line: 42, size: 32, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2405, file: !124, line: 43, baseType: !2402, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2405, file: !124, line: 44, baseType: !2402, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "signaled", scope: !2392, file: !109, line: 5405, baseType: !32, size: 32, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2392, file: !109, line: 5408, baseType: !103, size: 32, offset: 96)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2388, file: !762, line: 148, baseType: !789, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2385, file: !762, line: 165, baseType: !447, size: 32, offset: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2385, file: !762, line: 174, baseType: !795, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_monitor", file: !752, line: 522, size: 64, elements: !2416)
!2416 = !{!2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2415, file: !752, line: 527, baseType: !2379, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2415, file: !752, line: 533, baseType: !2419, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "onoff_monitor_callback", file: !752, line: 510, baseType: !2420)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{null, !2423, !2414, !173, !103}
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_manager", file: !752, line: 154, size: 224, elements: !2425)
!2425 = !{!2426, !2433, !2434, !2450, !2452, !2453, !2454}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "clients", scope: !2424, file: !752, line: 158, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !301, line: 40, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !301, line: 35, size: 64, elements: !2429)
!2429 = !{!2430, !2432}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2428, file: !301, line: 36, baseType: !2431, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2428, file: !301, line: 37, baseType: !2431, size: 32, offset: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "monitors", scope: !2424, file: !752, line: 163, baseType: !2427, size: 64, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "transitions", scope: !2424, file: !752, line: 166, baseType: !2435, size: 32, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2437)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_transitions", file: !752, line: 133, size: 96, elements: !2438)
!2438 = !{!2439, !2448, !2449}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2437, file: !752, line: 135, baseType: !2440, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "onoff_transition_fn", file: !752, line: 129, baseType: !2441)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2423, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "onoff_notify_fn", file: !752, line: 101, baseType: !2445)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{null, !2423, !103}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2437, file: !752, line: 138, baseType: !2440, size: 32, offset: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2437, file: !752, line: 143, baseType: !2440, size: 32, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2424, file: !752, line: 169, baseType: !2451, offset: 160)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "last_res", scope: !2424, file: !752, line: 172, baseType: !103, size: 32, offset: 160)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2424, file: !752, line: 175, baseType: !170, size: 16, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2424, file: !752, line: 178, baseType: !170, size: 16, offset: 208)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "onoff_client_callback", file: !752, line: 251, baseType: !2456)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{null, !2423, !2375, !173, !103}
!2459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2460, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2460 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/notify.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2461 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2462, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2463, retainedTypes: !2483, splitDebugInlining: false, nameTableKind: None)
!2462 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2463 = !{!2464, !2472}
!2464 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2465, line: 69, baseType: !32, size: 32, elements: !2466)
!2465 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2466 = !{!2467, !2468, !2469, !2470, !2471}
!2467 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2468 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2469 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2470 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2471 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2472 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2465, line: 56, baseType: !32, size: 32, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482}
!2474 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2475 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2476 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2477 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2478 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2479 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2480 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2481 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2482 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2483 = !{!103, !2464, !2472, !2484, !167, !352, !2486, !2487, !157, !171, !256, !217, !102, !22, !32, !2489, !2490, !2491, !345, !2492, !187, !2493, !2485, !2494, !2495, !2496, !2497}
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2465, line: 31, baseType: !2485)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !187)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !218, line: 329, baseType: !32)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2465, line: 32, baseType: !2488)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !313)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !218, line: 145, baseType: !103)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2499, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2499 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2501, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2198, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2501 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2503, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2504, retainedTypes: !2505, splitDebugInlining: false, nameTableKind: None)
!2503 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2504 = !{!596, !2199, !30}
!2505 = !{!1685, !2506, !102, !103, !250, !173, !2520}
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 326, baseType: !2508)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 314, size: 6400, elements: !2509)
!2509 = !{!2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2508, file: !508, line: 316, baseType: !724, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2508, file: !508, line: 317, baseType: !726, size: 992, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2508, file: !508, line: 318, baseType: !724, size: 32, offset: 1024)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2508, file: !508, line: 319, baseType: !726, size: 992, offset: 1056)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2508, file: !508, line: 320, baseType: !724, size: 32, offset: 2048)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2508, file: !508, line: 321, baseType: !726, size: 992, offset: 2080)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2508, file: !508, line: 322, baseType: !724, size: 32, offset: 3072)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2508, file: !508, line: 323, baseType: !726, size: 992, offset: 3104)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2508, file: !508, line: 324, baseType: !736, size: 2048, offset: 4096)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2508, file: !508, line: 325, baseType: !740, size: 256, offset: 6144)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 352, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 341, size: 320, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2522, file: !508, line: 343, baseType: !446, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2522, file: !508, line: 344, baseType: !447, size: 32, offset: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2522, file: !508, line: 345, baseType: !173, size: 32, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2522, file: !508, line: 346, baseType: !447, size: 32, offset: 96)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2522, file: !508, line: 347, baseType: !447, size: 32, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2522, file: !508, line: 348, baseType: !447, size: 32, offset: 160)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2522, file: !508, line: 349, baseType: !173, size: 32, offset: 192)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2522, file: !508, line: 350, baseType: !519, size: 64, offset: 224)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2522, file: !508, line: 351, baseType: !447, size: 32, offset: 288)
!2533 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2534, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2534 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2536, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2538, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2539, splitDebugInlining: false, nameTableKind: None)
!2538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2539 = !{!2540, !102, !103}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 352, baseType: !2542)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 341, size: 320, elements: !2543)
!2543 = !{!2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2542, file: !508, line: 343, baseType: !446, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2542, file: !508, line: 344, baseType: !447, size: 32, offset: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2542, file: !508, line: 345, baseType: !173, size: 32, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2542, file: !508, line: 346, baseType: !447, size: 32, offset: 96)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2542, file: !508, line: 347, baseType: !447, size: 32, offset: 128)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2542, file: !508, line: 348, baseType: !447, size: 32, offset: 160)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2542, file: !508, line: 349, baseType: !173, size: 32, offset: 192)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2542, file: !508, line: 350, baseType: !519, size: 64, offset: 224)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2542, file: !508, line: 351, baseType: !447, size: 32, offset: 288)
!2553 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2554, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2555, splitDebugInlining: false, nameTableKind: None)
!2554 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2555 = !{!2556, !173, !102, !103}
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2558, line: 98, size: 256, elements: !2559)
!2558 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2559 = !{!2560, !2565, !2570, !2575, !2580, !2585, !2590, !2595}
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !2558, line: 99, baseType: !2561, size: 32)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !2558, line: 99, size: 32, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2561, file: !2558, line: 99, baseType: !173, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2561, file: !2558, line: 99, baseType: !173, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !2558, line: 100, baseType: !2566, size: 32, offset: 32)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !2558, line: 100, size: 32, elements: !2567)
!2567 = !{!2568, !2569}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2566, file: !2558, line: 100, baseType: !173, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2566, file: !2558, line: 100, baseType: !173, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !2558, line: 101, baseType: !2571, size: 32, offset: 64)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !2558, line: 101, size: 32, elements: !2572)
!2572 = !{!2573, !2574}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2571, file: !2558, line: 101, baseType: !173, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2571, file: !2558, line: 101, baseType: !173, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !2558, line: 102, baseType: !2576, size: 32, offset: 96)
!2576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !2558, line: 102, size: 32, elements: !2577)
!2577 = !{!2578, !2579}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2576, file: !2558, line: 102, baseType: !173, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2576, file: !2558, line: 102, baseType: !173, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !2558, line: 103, baseType: !2581, size: 32, offset: 128)
!2581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !2558, line: 103, size: 32, elements: !2582)
!2582 = !{!2583, !2584}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2581, file: !2558, line: 103, baseType: !173, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2581, file: !2558, line: 103, baseType: !173, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !2558, line: 104, baseType: !2586, size: 32, offset: 160)
!2586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !2558, line: 104, size: 32, elements: !2587)
!2587 = !{!2588, !2589}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2586, file: !2558, line: 104, baseType: !173, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2586, file: !2558, line: 104, baseType: !173, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !2558, line: 105, baseType: !2591, size: 32, offset: 192)
!2591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !2558, line: 105, size: 32, elements: !2592)
!2592 = !{!2593, !2594}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2591, file: !2558, line: 105, baseType: !173, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2591, file: !2558, line: 105, baseType: !173, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2557, file: !2558, line: 106, baseType: !173, size: 32, offset: 224)
!2596 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2597, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2198, retainedTypes: !2598, splitDebugInlining: false, nameTableKind: None)
!2597 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2598 = !{!2599, !102, !103, !2612, !2655}
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 352, baseType: !2601)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 341, size: 320, elements: !2602)
!2602 = !{!2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2601, file: !508, line: 343, baseType: !446, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2601, file: !508, line: 344, baseType: !447, size: 32, offset: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2601, file: !508, line: 345, baseType: !173, size: 32, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2601, file: !508, line: 346, baseType: !447, size: 32, offset: 96)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2601, file: !508, line: 347, baseType: !447, size: 32, offset: 128)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2601, file: !508, line: 348, baseType: !447, size: 32, offset: 160)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2601, file: !508, line: 349, baseType: !173, size: 32, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2601, file: !508, line: 350, baseType: !519, size: 64, offset: 224)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2601, file: !508, line: 351, baseType: !447, size: 32, offset: 288)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2558, line: 141, baseType: !2614)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2558, line: 97, size: 256, elements: !2615)
!2615 = !{!2616}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2614, file: !2558, line: 107, baseType: !2617, size: 256)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2558, line: 98, size: 256, elements: !2618)
!2618 = !{!2619, !2624, !2629, !2634, !2639, !2644, !2649, !2654}
!2619 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2558, line: 99, baseType: !2620, size: 32)
!2620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2558, line: 99, size: 32, elements: !2621)
!2621 = !{!2622, !2623}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2620, file: !2558, line: 99, baseType: !173, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2620, file: !2558, line: 99, baseType: !173, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2558, line: 100, baseType: !2625, size: 32, offset: 32)
!2625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2558, line: 100, size: 32, elements: !2626)
!2626 = !{!2627, !2628}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2625, file: !2558, line: 100, baseType: !173, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2625, file: !2558, line: 100, baseType: !173, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2558, line: 101, baseType: !2630, size: 32, offset: 64)
!2630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2558, line: 101, size: 32, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2630, file: !2558, line: 101, baseType: !173, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2630, file: !2558, line: 101, baseType: !173, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2558, line: 102, baseType: !2635, size: 32, offset: 96)
!2635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2558, line: 102, size: 32, elements: !2636)
!2636 = !{!2637, !2638}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2635, file: !2558, line: 102, baseType: !173, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2635, file: !2558, line: 102, baseType: !173, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2558, line: 103, baseType: !2640, size: 32, offset: 128)
!2640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2558, line: 103, size: 32, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2640, file: !2558, line: 103, baseType: !173, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2640, file: !2558, line: 103, baseType: !173, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2558, line: 104, baseType: !2645, size: 32, offset: 160)
!2645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2558, line: 104, size: 32, elements: !2646)
!2646 = !{!2647, !2648}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2645, file: !2558, line: 104, baseType: !173, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2645, file: !2558, line: 104, baseType: !173, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2558, line: 105, baseType: !2650, size: 32, offset: 192)
!2650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2558, line: 105, size: 32, elements: !2651)
!2651 = !{!2652, !2653}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2650, file: !2558, line: 105, baseType: !173, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2650, file: !2558, line: 105, baseType: !173, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2617, file: !2558, line: 106, baseType: !173, size: 32, offset: 224)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!2656 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2657, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2658, retainedTypes: !2659, splitDebugInlining: false, nameTableKind: None)
!2657 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2658 = !{!596}
!2659 = !{!1685, !250, !173, !2660, !2674}
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 326, baseType: !2662)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 314, size: 6400, elements: !2663)
!2663 = !{!2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2662, file: !508, line: 316, baseType: !724, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2662, file: !508, line: 317, baseType: !726, size: 992, offset: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2662, file: !508, line: 318, baseType: !724, size: 32, offset: 1024)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2662, file: !508, line: 319, baseType: !726, size: 992, offset: 1056)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2662, file: !508, line: 320, baseType: !724, size: 32, offset: 2048)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2662, file: !508, line: 321, baseType: !726, size: 992, offset: 2080)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2662, file: !508, line: 322, baseType: !724, size: 32, offset: 3072)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2662, file: !508, line: 323, baseType: !726, size: 992, offset: 3104)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2662, file: !508, line: 324, baseType: !736, size: 2048, offset: 4096)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2662, file: !508, line: 325, baseType: !740, size: 256, offset: 6144)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 352, baseType: !2676)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 341, size: 320, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2676, file: !508, line: 343, baseType: !446, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2676, file: !508, line: 344, baseType: !447, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2676, file: !508, line: 345, baseType: !173, size: 32, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2676, file: !508, line: 346, baseType: !447, size: 32, offset: 96)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2676, file: !508, line: 347, baseType: !447, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2676, file: !508, line: 348, baseType: !447, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2676, file: !508, line: 349, baseType: !173, size: 32, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2676, file: !508, line: 350, baseType: !519, size: 64, offset: 224)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2676, file: !508, line: 351, baseType: !447, size: 32, offset: 288)
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2689, splitDebugInlining: false, nameTableKind: None)
!2688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2689 = !{!2690, !102, !103}
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 352, baseType: !2692)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 341, size: 320, elements: !2693)
!2693 = !{!2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2692, file: !508, line: 343, baseType: !446, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2692, file: !508, line: 344, baseType: !447, size: 32, offset: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2692, file: !508, line: 345, baseType: !173, size: 32, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2692, file: !508, line: 346, baseType: !447, size: 32, offset: 96)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2692, file: !508, line: 347, baseType: !447, size: 32, offset: 128)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2692, file: !508, line: 348, baseType: !447, size: 32, offset: 160)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2692, file: !508, line: 349, baseType: !173, size: 32, offset: 192)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2692, file: !508, line: 350, baseType: !519, size: 64, offset: 224)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2692, file: !508, line: 351, baseType: !447, size: 32, offset: 288)
!2703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2704, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2705, splitDebugInlining: false, nameTableKind: None)
!2704 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2705 = !{!237, !311, !217, !990, !2706, !22, !2708, !2711, !157, !2709, !102}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_word_t", file: !2710, line: 57, baseType: !22)
!2710 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2709)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !280, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nordic_nrf/nrf51/power.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2715 = !{!2716, !102, !103}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_POWER_Type", file: !441, line: 247, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 216, size: 20576, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !2718, file: !441, line: 217, baseType: !445, size: 960)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_CONSTLAT", scope: !2718, file: !441, line: 218, baseType: !447, size: 32, offset: 960)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_LOWPWR", scope: !2718, file: !441, line: 219, baseType: !447, size: 32, offset: 992)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2718, file: !441, line: 220, baseType: !453, size: 1088, offset: 1024)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_POFWARN", scope: !2718, file: !441, line: 221, baseType: !447, size: 32, offset: 2112)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2718, file: !441, line: 222, baseType: !458, size: 4032, offset: 2144)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2718, file: !441, line: 223, baseType: !447, size: 32, offset: 6176)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2718, file: !441, line: 224, baseType: !447, size: 32, offset: 6208)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2718, file: !441, line: 225, baseType: !464, size: 1952, offset: 6240)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESETREAS", scope: !2718, file: !441, line: 226, baseType: !447, size: 32, offset: 8192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2718, file: !441, line: 227, baseType: !469, size: 288, offset: 8224)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "RAMSTATUS", scope: !2718, file: !441, line: 228, baseType: !446, size: 32, offset: 8512)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2718, file: !441, line: 229, baseType: !474, size: 1696, offset: 8544)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SYSTEMOFF", scope: !2718, file: !441, line: 230, baseType: !447, size: 32, offset: 10240)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2718, file: !441, line: 231, baseType: !479, size: 96, offset: 10272)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "POFCON", scope: !2718, file: !441, line: 232, baseType: !447, size: 32, offset: 10368)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2718, file: !441, line: 233, baseType: !484, size: 64, offset: 10400)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "GPREGRET", scope: !2718, file: !441, line: 234, baseType: !447, size: 32, offset: 10464)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2718, file: !441, line: 236, baseType: !446, size: 32, offset: 10496)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RAMON", scope: !2718, file: !441, line: 237, baseType: !447, size: 32, offset: 10528)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2718, file: !441, line: 238, baseType: !489, size: 224, offset: 10560)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "RESET", scope: !2718, file: !441, line: 239, baseType: !447, size: 32, offset: 10784)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2718, file: !441, line: 241, baseType: !479, size: 96, offset: 10816)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RAMONB", scope: !2718, file: !441, line: 242, baseType: !447, size: 32, offset: 10912)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2718, file: !441, line: 243, baseType: !496, size: 256, offset: 10944)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "DCDCEN", scope: !2718, file: !441, line: 244, baseType: !447, size: 32, offset: 11200)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2718, file: !441, line: 245, baseType: !501, size: 9312, offset: 11232)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "DCDCFORCE", scope: !2718, file: !441, line: 246, baseType: !447, size: 32, offset: 20544)
!2748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2749, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/sys_clock_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2753, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2754, retainedTypes: !2755, splitDebugInlining: false, nameTableKind: None)
!2753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_nrf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2754 = !{!1053, !1073, !1064, !1740, !1068}
!2755 = !{!2756, !2798, !2858, !2908, !173}
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_UART_Type", file: !441, line: 458, baseType: !2758)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 414, size: 32768, elements: !2759)
!2759 = !{!2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STARTRX", scope: !2758, file: !441, line: 415, baseType: !447, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STOPRX", scope: !2758, file: !441, line: 416, baseType: !447, size: 32, offset: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STARTTX", scope: !2758, file: !441, line: 417, baseType: !447, size: 32, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STOPTX", scope: !2758, file: !441, line: 418, baseType: !447, size: 32, offset: 96)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !2758, file: !441, line: 419, baseType: !479, size: 96, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_SUSPEND", scope: !2758, file: !441, line: 420, baseType: !447, size: 32, offset: 224)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2758, file: !441, line: 421, baseType: !1402, size: 1792, offset: 256)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_CTS", scope: !2758, file: !441, line: 422, baseType: !447, size: 32, offset: 2048)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_NCTS", scope: !2758, file: !441, line: 423, baseType: !447, size: 32, offset: 2080)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_RXDRDY", scope: !2758, file: !441, line: 424, baseType: !447, size: 32, offset: 2112)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2758, file: !441, line: 425, baseType: !1409, size: 128, offset: 2144)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_TXDRDY", scope: !2758, file: !441, line: 426, baseType: !447, size: 32, offset: 2272)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2758, file: !441, line: 427, baseType: !446, size: 32, offset: 2304)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_ERROR", scope: !2758, file: !441, line: 428, baseType: !447, size: 32, offset: 2336)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2758, file: !441, line: 429, baseType: !489, size: 224, offset: 2368)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_RXTO", scope: !2758, file: !441, line: 430, baseType: !447, size: 32, offset: 2592)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2758, file: !441, line: 431, baseType: !1418, size: 1472, offset: 2624)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "SHORTS", scope: !2758, file: !441, line: 432, baseType: !447, size: 32, offset: 4096)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2758, file: !441, line: 433, baseType: !1423, size: 2048, offset: 4128)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2758, file: !441, line: 434, baseType: !447, size: 32, offset: 6176)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2758, file: !441, line: 435, baseType: !447, size: 32, offset: 6208)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2758, file: !441, line: 436, baseType: !1427, size: 2976, offset: 6240)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ERRORSRC", scope: !2758, file: !441, line: 437, baseType: !447, size: 32, offset: 9216)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2758, file: !441, line: 439, baseType: !1432, size: 992, offset: 9248)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2758, file: !441, line: 440, baseType: !447, size: 32, offset: 10240)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2758, file: !441, line: 441, baseType: !446, size: 32, offset: 10272)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "PSELRTS", scope: !2758, file: !441, line: 442, baseType: !447, size: 32, offset: 10304)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "PSELTXD", scope: !2758, file: !441, line: 443, baseType: !447, size: 32, offset: 10336)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "PSELCTS", scope: !2758, file: !441, line: 444, baseType: !447, size: 32, offset: 10368)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "PSELRXD", scope: !2758, file: !441, line: 445, baseType: !447, size: 32, offset: 10400)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RXD", scope: !2758, file: !441, line: 446, baseType: !446, size: 32, offset: 10432)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "TXD", scope: !2758, file: !441, line: 450, baseType: !447, size: 32, offset: 10464)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2758, file: !441, line: 451, baseType: !446, size: 32, offset: 10496)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "BAUDRATE", scope: !2758, file: !441, line: 452, baseType: !447, size: 32, offset: 10528)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2758, file: !441, line: 453, baseType: !1444, size: 544, offset: 10560)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !2758, file: !441, line: 454, baseType: !447, size: 32, offset: 11104)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2758, file: !441, line: 456, baseType: !1449, size: 21600, offset: 11136)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "POWER", scope: !2758, file: !441, line: 457, baseType: !447, size: 32, offset: 32736)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_SPIS_Type", file: !441, line: 602, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 560, size: 32768, elements: !2801)
!2801 = !{!2802, !2803, !2804, !2805, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2825, !2826, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2852, !2853, !2857}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !2800, file: !441, line: 561, baseType: !469, size: 288)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_ACQUIRE", scope: !2800, file: !441, line: 562, baseType: !447, size: 32, offset: 288)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_RELEASE", scope: !2800, file: !441, line: 563, baseType: !447, size: 32, offset: 320)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2800, file: !441, line: 564, baseType: !2806, size: 1728, offset: 352)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1728, elements: !2807)
!2807 = !{!2808}
!2808 = !DISubrange(count: 54)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_END", scope: !2800, file: !441, line: 565, baseType: !447, size: 32, offset: 2080)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2800, file: !441, line: 566, baseType: !484, size: 64, offset: 2112)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_ENDRX", scope: !2800, file: !441, line: 567, baseType: !447, size: 32, offset: 2176)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2800, file: !441, line: 568, baseType: !709, size: 160, offset: 2208)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_ACQUIRED", scope: !2800, file: !441, line: 569, baseType: !447, size: 32, offset: 2368)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2800, file: !441, line: 570, baseType: !474, size: 1696, offset: 2400)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "SHORTS", scope: !2800, file: !441, line: 571, baseType: !447, size: 32, offset: 4096)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2800, file: !441, line: 572, baseType: !1423, size: 2048, offset: 4128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2800, file: !441, line: 573, baseType: !447, size: 32, offset: 6176)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2800, file: !441, line: 574, baseType: !447, size: 32, offset: 6208)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2800, file: !441, line: 575, baseType: !464, size: 1952, offset: 6240)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "SEMSTAT", scope: !2800, file: !441, line: 576, baseType: !446, size: 32, offset: 8192)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2800, file: !441, line: 577, baseType: !2822, size: 480, offset: 8224)
!2822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 480, elements: !2823)
!2823 = !{!2824}
!2824 = !DISubrange(count: 15)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !2800, file: !441, line: 578, baseType: !447, size: 32, offset: 8704)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2800, file: !441, line: 579, baseType: !2827, size: 1504, offset: 8736)
!2827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1504, elements: !2828)
!2828 = !{!2829}
!2829 = !DISubrange(count: 47)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2800, file: !441, line: 580, baseType: !447, size: 32, offset: 10240)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2800, file: !441, line: 581, baseType: !446, size: 32, offset: 10272)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PSELSCK", scope: !2800, file: !441, line: 582, baseType: !447, size: 32, offset: 10304)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PSELMISO", scope: !2800, file: !441, line: 583, baseType: !447, size: 32, offset: 10336)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "PSELMOSI", scope: !2800, file: !441, line: 584, baseType: !447, size: 32, offset: 10368)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "PSELCSN", scope: !2800, file: !441, line: 585, baseType: !447, size: 32, offset: 10400)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2800, file: !441, line: 586, baseType: !489, size: 224, offset: 10432)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "RXDPTR", scope: !2800, file: !441, line: 587, baseType: !447, size: 32, offset: 10656)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "MAXRX", scope: !2800, file: !441, line: 588, baseType: !447, size: 32, offset: 10688)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "AMOUNTRX", scope: !2800, file: !441, line: 589, baseType: !446, size: 32, offset: 10720)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2800, file: !441, line: 590, baseType: !446, size: 32, offset: 10752)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "TXDPTR", scope: !2800, file: !441, line: 591, baseType: !447, size: 32, offset: 10784)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "MAXTX", scope: !2800, file: !441, line: 592, baseType: !447, size: 32, offset: 10816)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "AMOUNTTX", scope: !2800, file: !441, line: 593, baseType: !446, size: 32, offset: 10848)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2800, file: !441, line: 594, baseType: !446, size: 32, offset: 10880)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !2800, file: !441, line: 595, baseType: !447, size: 32, offset: 10912)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2800, file: !441, line: 596, baseType: !446, size: 32, offset: 10944)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DEF", scope: !2800, file: !441, line: 597, baseType: !447, size: 32, offset: 10976)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2800, file: !441, line: 598, baseType: !2849, size: 768, offset: 11008)
!2849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 768, elements: !2850)
!2850 = !{!2851}
!2851 = !DISubrange(count: 24)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ORC", scope: !2800, file: !441, line: 599, baseType: !447, size: 32, offset: 11776)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2800, file: !441, line: 600, baseType: !2854, size: 20928, offset: 11808)
!2854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 20928, elements: !2855)
!2855 = !{!2856}
!2856 = !DISubrange(count: 654)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "POWER", scope: !2800, file: !441, line: 601, baseType: !447, size: 32, offset: 32736)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_TWI_Type", file: !441, line: 547, baseType: !2860)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 505, size: 32768, elements: !2861)
!2861 = !{!2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2907}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STARTRX", scope: !2860, file: !441, line: 506, baseType: !447, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !2860, file: !441, line: 507, baseType: !446, size: 32, offset: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STARTTX", scope: !2860, file: !441, line: 508, baseType: !447, size: 32, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2860, file: !441, line: 509, baseType: !484, size: 64, offset: 96)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_STOP", scope: !2860, file: !441, line: 510, baseType: !447, size: 32, offset: 160)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2860, file: !441, line: 511, baseType: !446, size: 32, offset: 192)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_SUSPEND", scope: !2860, file: !441, line: 512, baseType: !447, size: 32, offset: 224)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "TASKS_RESUME", scope: !2860, file: !441, line: 513, baseType: !447, size: 32, offset: 256)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2860, file: !441, line: 514, baseType: !1402, size: 1792, offset: 288)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_STOPPED", scope: !2860, file: !441, line: 515, baseType: !447, size: 32, offset: 2080)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_RXDREADY", scope: !2860, file: !441, line: 516, baseType: !447, size: 32, offset: 2112)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2860, file: !441, line: 517, baseType: !1409, size: 128, offset: 2144)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_TXDSENT", scope: !2860, file: !441, line: 518, baseType: !447, size: 32, offset: 2272)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2860, file: !441, line: 519, baseType: !446, size: 32, offset: 2304)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_ERROR", scope: !2860, file: !441, line: 520, baseType: !447, size: 32, offset: 2336)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2860, file: !441, line: 521, baseType: !1409, size: 128, offset: 2368)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_BB", scope: !2860, file: !441, line: 522, baseType: !447, size: 32, offset: 2496)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2860, file: !441, line: 523, baseType: !479, size: 96, offset: 2528)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "EVENTS_SUSPENDED", scope: !2860, file: !441, line: 524, baseType: !447, size: 32, offset: 2624)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2860, file: !441, line: 525, baseType: !2882, size: 1440, offset: 2656)
!2882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1440, elements: !2883)
!2883 = !{!2884}
!2884 = !DISubrange(count: 45)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SHORTS", scope: !2860, file: !441, line: 526, baseType: !447, size: 32, offset: 4096)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2860, file: !441, line: 527, baseType: !1423, size: 2048, offset: 4128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2860, file: !441, line: 528, baseType: !447, size: 32, offset: 6176)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2860, file: !441, line: 529, baseType: !447, size: 32, offset: 6208)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2860, file: !441, line: 530, baseType: !1529, size: 3520, offset: 6240)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ERRORSRC", scope: !2860, file: !441, line: 531, baseType: !447, size: 32, offset: 9760)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2860, file: !441, line: 533, baseType: !1510, size: 448, offset: 9792)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2860, file: !441, line: 534, baseType: !447, size: 32, offset: 10240)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2860, file: !441, line: 535, baseType: !446, size: 32, offset: 10272)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "PSELSCL", scope: !2860, file: !441, line: 536, baseType: !447, size: 32, offset: 10304)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "PSELSDA", scope: !2860, file: !441, line: 537, baseType: !447, size: 32, offset: 10336)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2860, file: !441, line: 538, baseType: !484, size: 64, offset: 10368)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RXD", scope: !2860, file: !441, line: 539, baseType: !446, size: 32, offset: 10432)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "TXD", scope: !2860, file: !441, line: 540, baseType: !447, size: 32, offset: 10464)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2860, file: !441, line: 541, baseType: !446, size: 32, offset: 10496)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "FREQUENCY", scope: !2860, file: !441, line: 542, baseType: !447, size: 32, offset: 10528)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2860, file: !441, line: 543, baseType: !2849, size: 768, offset: 10560)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ADDRESS", scope: !2860, file: !441, line: 544, baseType: !447, size: 32, offset: 11328)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2860, file: !441, line: 545, baseType: !2904, size: 21376, offset: 11360)
!2904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 21376, elements: !2905)
!2905 = !{!2906}
!2906 = !DISubrange(count: 668)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "POWER", scope: !2860, file: !441, line: 546, baseType: !447, size: 32, offset: 32736)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRF_GPIO_Type", file: !441, line: 1186, baseType: !2910)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 1175, size: 15360, elements: !2911)
!2911 = !{!2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !2910, file: !441, line: 1176, baseType: !1164, size: 10272)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2910, file: !441, line: 1177, baseType: !447, size: 32, offset: 10272)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2910, file: !441, line: 1178, baseType: !447, size: 32, offset: 10304)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2910, file: !441, line: 1179, baseType: !447, size: 32, offset: 10336)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2910, file: !441, line: 1180, baseType: !446, size: 32, offset: 10368)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2910, file: !441, line: 1181, baseType: !447, size: 32, offset: 10400)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2910, file: !441, line: 1182, baseType: !447, size: 32, offset: 10432)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2910, file: !441, line: 1183, baseType: !447, size: 32, offset: 10464)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2910, file: !441, line: 1184, baseType: !1175, size: 3840, offset: 10496)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "PIN_CNF", scope: !2910, file: !441, line: 1185, baseType: !1179, size: 1024, offset: 14336)
!2922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2923, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2924, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/modules/hal_nordic/nrfx/./nrfx_glue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2924 = !{!636, !30}
!2925 = !{!2926, !102, !103}
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_irq_handler_t", file: !1715, line: 282, baseType: !252)
!2927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2928, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2929, splitDebugInlining: false, nameTableKind: None)
!2928 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nordic/nrfx/helpers/nrfx_flag32_allocator.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2929 = !{!636}
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2932 = !{!102, !217}
!2933 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2934, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2935, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2934 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2935 = !{!2936, !2943, !30}
!2936 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2937, line: 14, baseType: !32, size: 32, elements: !2938)
!2937 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2938 = !{!2939, !2940, !2941, !2942}
!2939 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2940 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2941 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2942 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2937, line: 42, baseType: !32, size: 32, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2948, !2949, !2950}
!2945 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2946 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2947 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2948 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2949 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2950 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2952, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2954, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2955, splitDebugInlining: false, nameTableKind: None)
!2954 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2955 = !{!22, !102, !103}
!2956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2957, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!2958 = !{!"Ubuntu clang version 14.0.6"}
!2959 = !{i32 7, !"Dwarf Version", i32 4}
!2960 = !{i32 2, !"Debug Info Version", i32 3}
!2961 = !{i32 1, !"wchar_size", i32 4}
!2962 = !{i32 1, !"min_enum_size", i32 4}
!2963 = !{i32 1, !"branch-target-enforcement", i32 0}
!2964 = !{i32 1, !"sign-return-address", i32 0}
!2965 = !{i32 1, !"sign-return-address-all", i32 0}
!2966 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2967 = !{i32 7, !"frame-pointer", i32 2}
!2968 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2969, file: !2969, line: 26, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2358, retainedNodes: !223)
!2969 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2970 = !DILocation(line: 28, column: 1, scope: !2968)
!2971 = !{i64 2150655413, i64 2150655433, i64 2150655496}
!2972 = !DILocation(line: 29, column: 1, scope: !2968)
!2973 = !{i64 2150655828, i64 2150655848, i64 2150655911}
!2974 = !DILocation(line: 30, column: 1, scope: !2968)
!2975 = !{i64 2150660308, i64 2150660328, i64 2150660391}
!2976 = !DILocation(line: 31, column: 1, scope: !2968)
!2977 = !{i64 2150660727, i64 2150660747, i64 2150660810}
!2978 = !DILocation(line: 33, column: 1, scope: !2968)
!2979 = !{i64 2150661019, i64 2150661039, i64 2150661102}
!2980 = !DILocation(line: 35, column: 1, scope: !2968)
!2981 = !{i64 2150661344, i64 2150661364, i64 2150661427}
!2982 = !DILocation(line: 46, column: 1, scope: !2968)
!2983 = !{i64 2150661762, i64 2150661782, i64 2150661845}
!2984 = !DILocation(line: 50, column: 1, scope: !2968)
!2985 = !{i64 2150662189, i64 2150662209, i64 2150662272}
!2986 = !DILocation(line: 54, column: 1, scope: !2968)
!2987 = !{i64 2150662628, i64 2150662648, i64 2150662711}
!2988 = !DILocation(line: 61, column: 1, scope: !2968)
!2989 = !{i64 2150662945, i64 2150662965, i64 2150663028}
!2990 = !DILocation(line: 63, column: 1, scope: !2968)
!2991 = !{i64 2150663325, i64 2150663345, i64 2150663408}
!2992 = !DILocation(line: 64, column: 1, scope: !2968)
!2993 = !{i64 2150663847, i64 2150663867, i64 2150663930}
!2994 = !DILocation(line: 65, column: 1, scope: !2968)
!2995 = !{i64 2150664345, i64 2150664365, i64 2150664428}
!2996 = !DILocation(line: 66, column: 1, scope: !2968)
!2997 = !{i64 2150664827, i64 2150664847, i64 2150664910}
!2998 = !DILocation(line: 67, column: 1, scope: !2968)
!2999 = !{i64 2150665334, i64 2150665354, i64 2150665417}
!3000 = !DILocation(line: 68, column: 1, scope: !2968)
!3001 = !{i64 2150665822, i64 2150665842, i64 2150665905}
!3002 = !DILocation(line: 70, column: 1, scope: !2968)
!3003 = !{i64 2150666290, i64 2150666310, i64 2150666373}
!3004 = !DILocation(line: 71, column: 1, scope: !2968)
!3005 = !{i64 2150666732, i64 2150666752, i64 2150666815}
!3006 = !DILocation(line: 72, column: 1, scope: !2968)
!3007 = !{i64 2150667190, i64 2150667210, i64 2150667273}
!3008 = !DILocation(line: 97, column: 1, scope: !2968)
!3009 = !{i64 2150667497, i64 2150667517, i64 2150667580}
!3010 = !DILocation(line: 99, column: 1, scope: !2968)
!3011 = !{i64 2150667715, i64 2150667735, i64 2150667798}
!3012 = !DILocation(line: 102, column: 1, scope: !2968)
!3013 = !{i64 2150667972, i64 2150667992, i64 2150668055}
!3014 = !DILocation(line: 105, column: 1, scope: !2968)
!3015 = !{i64 2150668212, i64 2150668232, i64 2150668295}
!3016 = !DILocation(line: 115, column: 1, scope: !2968)
!3017 = !{i64 2150668551, i64 2150668571, i64 2150668634}
!3018 = !DILocation(line: 118, column: 1, scope: !2968)
!3019 = !{i64 2150668895, i64 2150668915, i64 2150668978}
!3020 = !DILocation(line: 32, column: 1, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !2968, file: !3022, discriminator: 0)
!3022 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3023 = !{i64 2150669251, i64 2150669271, i64 2150669334}
!3024 = !DILocation(line: 33, column: 1, scope: !3021)
!3025 = !{i64 2150669763, i64 2150669783, i64 2150669846}
!3026 = !DILocation(line: 53, column: 1, scope: !3021)
!3027 = !{i64 2150674332, i64 2150674352, i64 2150674415}
!3028 = !DILocation(line: 54, column: 1, scope: !3021)
!3029 = !{i64 2150674750, i64 2150674770, i64 2150674833}
!3030 = !DILocation(line: 55, column: 1, scope: !3021)
!3031 = !{i64 2150675168, i64 2150675188, i64 2150675251}
!3032 = !DILocation(line: 56, column: 1, scope: !3021)
!3033 = !{i64 2150675586, i64 2150675606, i64 2150675669}
!3034 = !DILocation(line: 57, column: 1, scope: !3021)
!3035 = !{i64 2150676004, i64 2150676024, i64 2150676087}
!3036 = !DILocation(line: 58, column: 1, scope: !3021)
!3037 = !{i64 2150676422, i64 2150676442, i64 2150676505}
!3038 = !DILocation(line: 59, column: 1, scope: !3021)
!3039 = !{i64 2150676840, i64 2150676860, i64 2150676923}
!3040 = !DILocation(line: 60, column: 1, scope: !3021)
!3041 = !{i64 2150677264, i64 2150677284, i64 2150677347}
!3042 = !DILocation(line: 61, column: 1, scope: !3021)
!3043 = !{i64 2150677581, i64 2150677601, i64 2150677664}
!3044 = !DILocation(line: 70, column: 1, scope: !3021)
!3045 = !{i64 2150677810, i64 2150677830, i64 2150677893}
!3046 = !DILocation(line: 72, column: 1, scope: !3021)
!3047 = !{i64 2150678142, i64 2150678162, i64 2150678225}
!3048 = !DILocation(line: 73, column: 1, scope: !3021)
!3049 = !{i64 2150678592, i64 2150678612, i64 2150678675}
!3050 = !DILocation(line: 74, column: 1, scope: !3021)
!3051 = !{i64 2150679042, i64 2150679062, i64 2150679125}
!3052 = !DILocation(line: 75, column: 1, scope: !3021)
!3053 = !{i64 2150679492, i64 2150679512, i64 2150679575}
!3054 = !DILocation(line: 76, column: 1, scope: !3021)
!3055 = !{i64 2150679942, i64 2150679962, i64 2150680025}
!3056 = !DILocation(line: 77, column: 1, scope: !3021)
!3057 = !{i64 2150680392, i64 2150680412, i64 2150680475}
!3058 = !DILocation(line: 78, column: 1, scope: !3021)
!3059 = !{i64 2150680842, i64 2150680862, i64 2150680925}
!3060 = !DILocation(line: 79, column: 1, scope: !3021)
!3061 = !{i64 2150681292, i64 2150681312, i64 2150681375}
!3062 = !DILocation(line: 80, column: 1, scope: !3021)
!3063 = !{i64 2150681745, i64 2150681765, i64 2150681828}
!3064 = !DILocation(line: 84, column: 1, scope: !3021)
!3065 = !{i64 2150682077, i64 2150682097, i64 2150682160}
!3066 = !DILocation(line: 106, column: 1, scope: !3021)
!3067 = !{i64 2150682327, i64 2150682347, i64 2150682410}
!3068 = !DILocation(line: 11, column: 1, scope: !3069)
!3069 = !DILexicalBlockFile(scope: !2968, file: !3070, discriminator: 0)
!3070 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3071 = distinct !DISubprogram(name: "thread_entry", scope: !107, file: !107, line: 23, type: !242, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3072 = !DILocalVariable(name: "p1", arg: 1, scope: !3071, file: !107, line: 23, type: !102)
!3073 = !DILocation(line: 23, column: 32, scope: !3071)
!3074 = !DILocalVariable(name: "p2", arg: 2, scope: !3071, file: !107, line: 23, type: !102)
!3075 = !DILocation(line: 23, column: 42, scope: !3071)
!3076 = !DILocalVariable(name: "p3", arg: 3, scope: !3071, file: !107, line: 23, type: !102)
!3077 = !DILocation(line: 23, column: 52, scope: !3071)
!3078 = !DILocation(line: 25, column: 2, scope: !3071)
!3079 = !DILocation(line: 26, column: 1, scope: !3071)
!3080 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 28, type: !253, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3081 = !DILocalVariable(name: "ret", scope: !3080, file: !107, line: 30, type: !103)
!3082 = !DILocation(line: 30, column: 6, scope: !3080)
!3083 = !DILocation(line: 32, column: 8, scope: !3080)
!3084 = !DILocation(line: 32, column: 6, scope: !3080)
!3085 = !DILocation(line: 33, column: 17, scope: !3080)
!3086 = !DILocation(line: 33, column: 2, scope: !3080)
!3087 = !DILocation(line: 34, column: 1, scope: !3080)
!3088 = distinct !DISubprogram(name: "test", scope: !107, file: !107, line: 12, type: !3089, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!103}
!3091 = !DILocalVariable(name: "a", scope: !3088, file: !107, line: 14, type: !103)
!3092 = !DILocation(line: 14, column: 6, scope: !3088)
!3093 = !DILocalVariable(name: "b", scope: !3088, file: !107, line: 15, type: !103)
!3094 = !DILocation(line: 15, column: 6, scope: !3088)
!3095 = !DILocation(line: 17, column: 4, scope: !3088)
!3096 = !DILocation(line: 18, column: 6, scope: !3088)
!3097 = !DILocation(line: 18, column: 8, scope: !3088)
!3098 = !DILocation(line: 18, column: 4, scope: !3088)
!3099 = !DILocation(line: 20, column: 9, scope: !3088)
!3100 = !DILocation(line: 20, column: 13, scope: !3088)
!3101 = !DILocation(line: 20, column: 11, scope: !3088)
!3102 = !DILocation(line: 20, column: 2, scope: !3088)
!3103 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !272, file: !272, line: 45, type: !274, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3104 = !DILocalVariable(name: "c", arg: 1, scope: !3103, file: !272, line: 45, type: !103)
!3105 = !DILocation(line: 45, column: 52, scope: !3103)
!3106 = !DILocation(line: 47, column: 2, scope: !3103)
!3107 = !DILocation(line: 50, column: 2, scope: !3103)
!3108 = distinct !DISubprogram(name: "__printk_hook_install", scope: !272, file: !272, line: 63, type: !3109, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{null, !273}
!3111 = !DILocalVariable(name: "fn", arg: 1, scope: !3108, file: !272, line: 63, type: !273)
!3112 = !DILocation(line: 63, column: 34, scope: !3108)
!3113 = !DILocation(line: 65, column: 14, scope: !3108)
!3114 = !DILocation(line: 65, column: 12, scope: !3108)
!3115 = !DILocation(line: 66, column: 1, scope: !3108)
!3116 = distinct !DISubprogram(name: "__printk_get_hook", scope: !272, file: !272, line: 76, type: !3117, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!102}
!3119 = !DILocation(line: 78, column: 9, scope: !3116)
!3120 = !DILocation(line: 78, column: 2, scope: !3116)
!3121 = distinct !DISubprogram(name: "vprintk", scope: !272, file: !272, line: 113, type: !3122, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{null, !256, !3124}
!3124 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3125, line: 99, baseType: !3126)
!3125 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3125, line: 40, baseType: !3127)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !272, baseType: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3129)
!3129 = !{!3130}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3128, file: !272, line: 79, baseType: !102, size: 32)
!3131 = !DILocalVariable(name: "fmt", arg: 1, scope: !3121, file: !272, line: 113, type: !256)
!3132 = !DILocation(line: 113, column: 26, scope: !3121)
!3133 = !DILocalVariable(name: "ap", arg: 2, scope: !3121, file: !272, line: 113, type: !3124)
!3134 = !DILocation(line: 113, column: 39, scope: !3121)
!3135 = !DILocation(line: 120, column: 6, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3121, file: !272, line: 120, column: 6)
!3137 = !DILocation(line: 120, column: 6, scope: !3121)
!3138 = !DILocalVariable(name: "ctx", scope: !3139, file: !272, line: 121, type: !3140)
!3139 = distinct !DILexicalBlock(scope: !3136, file: !272, line: 120, column: 27)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !272, line: 81, size: 32, elements: !3141)
!3141 = !{!3142, !3143}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3140, file: !272, line: 85, baseType: !32, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3140, file: !272, line: 86, baseType: !3144, offset: 32)
!3144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, elements: !396)
!3145 = !DILocation(line: 121, column: 26, scope: !3139)
!3146 = !DILocation(line: 133, column: 27, scope: !3139)
!3147 = !DILocation(line: 133, column: 33, scope: !3139)
!3148 = !DILocation(line: 133, column: 3, scope: !3139)
!3149 = !DILocation(line: 135, column: 11, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3139, file: !272, line: 135, column: 7)
!3151 = !DILocation(line: 135, column: 7, scope: !3150)
!3152 = !DILocation(line: 135, column: 7, scope: !3139)
!3153 = !DILocation(line: 136, column: 4, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3150, file: !272, line: 135, column: 22)
!3155 = !DILocation(line: 137, column: 3, scope: !3154)
!3156 = !DILocation(line: 138, column: 2, scope: !3139)
!3157 = !DILocation(line: 148, column: 29, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3136, file: !272, line: 138, column: 9)
!3159 = !DILocation(line: 148, column: 3, scope: !3158)
!3160 = !DILocation(line: 155, column: 1, scope: !3121)
!3161 = distinct !DISubprogram(name: "k_is_user_context", scope: !3162, file: !3162, line: 115, type: !3163, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3162 = !DIFile(filename: "zephyr/include/zephyr/syscall.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!717}
!3165 = !DILocation(line: 120, column: 2, scope: !3161)
!3166 = distinct !DISubprogram(name: "buf_char_out", scope: !272, file: !272, line: 95, type: !3167, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!103, !103, !102}
!3169 = !DILocalVariable(name: "c", arg: 1, scope: !3166, file: !272, line: 95, type: !103)
!3170 = !DILocation(line: 95, column: 29, scope: !3166)
!3171 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3166, file: !272, line: 95, type: !102)
!3172 = !DILocation(line: 95, column: 38, scope: !3166)
!3173 = !DILocalVariable(name: "ctx", scope: !3166, file: !272, line: 97, type: !3174)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 32)
!3175 = !DILocation(line: 97, column: 26, scope: !3166)
!3176 = !DILocation(line: 97, column: 32, scope: !3166)
!3177 = !DILocation(line: 99, column: 31, scope: !3166)
!3178 = !DILocation(line: 99, column: 2, scope: !3166)
!3179 = !DILocation(line: 99, column: 7, scope: !3166)
!3180 = !DILocation(line: 99, column: 11, scope: !3166)
!3181 = !DILocation(line: 99, column: 16, scope: !3166)
!3182 = !DILocation(line: 99, column: 25, scope: !3166)
!3183 = !DILocation(line: 99, column: 29, scope: !3166)
!3184 = !DILocation(line: 100, column: 6, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3166, file: !272, line: 100, column: 6)
!3186 = !DILocation(line: 100, column: 11, scope: !3185)
!3187 = !DILocation(line: 100, column: 21, scope: !3185)
!3188 = !DILocation(line: 100, column: 6, scope: !3166)
!3189 = !DILocation(line: 101, column: 13, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3185, file: !272, line: 100, column: 51)
!3191 = !DILocation(line: 101, column: 3, scope: !3190)
!3192 = !DILocation(line: 102, column: 2, scope: !3190)
!3193 = !DILocation(line: 104, column: 9, scope: !3166)
!3194 = !DILocation(line: 104, column: 2, scope: !3166)
!3195 = distinct !DISubprogram(name: "cbvprintf", scope: !3196, file: !3196, line: 739, type: !3197, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3196 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3197 = !DISubroutineType(types: !3198)
!3198 = !{!103, !3199, !102, !256, !3124}
!3199 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3196, line: 297, baseType: !3200)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 32)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{!103, null}
!3203 = !DILocalVariable(name: "out", arg: 1, scope: !3195, file: !3196, line: 739, type: !3199)
!3204 = !DILocation(line: 739, column: 27, scope: !3195)
!3205 = !DILocalVariable(name: "ctx", arg: 2, scope: !3195, file: !3196, line: 739, type: !102)
!3206 = !DILocation(line: 739, column: 38, scope: !3195)
!3207 = !DILocalVariable(name: "format", arg: 3, scope: !3195, file: !3196, line: 739, type: !256)
!3208 = !DILocation(line: 739, column: 55, scope: !3195)
!3209 = !DILocalVariable(name: "ap", arg: 4, scope: !3195, file: !3196, line: 739, type: !3124)
!3210 = !DILocation(line: 739, column: 71, scope: !3195)
!3211 = !DILocation(line: 741, column: 26, scope: !3195)
!3212 = !DILocation(line: 741, column: 31, scope: !3195)
!3213 = !DILocation(line: 741, column: 36, scope: !3195)
!3214 = !DILocation(line: 741, column: 9, scope: !3195)
!3215 = !DILocation(line: 741, column: 2, scope: !3195)
!3216 = distinct !DISubprogram(name: "buf_flush", scope: !272, file: !272, line: 89, type: !3217, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{null, !3174}
!3219 = !DILocalVariable(name: "ctx", arg: 1, scope: !3216, file: !272, line: 89, type: !3174)
!3220 = !DILocation(line: 89, column: 47, scope: !3216)
!3221 = !DILocation(line: 91, column: 12, scope: !3216)
!3222 = !DILocation(line: 91, column: 17, scope: !3216)
!3223 = !DILocation(line: 91, column: 22, scope: !3216)
!3224 = !DILocation(line: 91, column: 27, scope: !3216)
!3225 = !DILocation(line: 91, column: 2, scope: !3216)
!3226 = !DILocation(line: 92, column: 2, scope: !3216)
!3227 = !DILocation(line: 92, column: 7, scope: !3216)
!3228 = !DILocation(line: 92, column: 17, scope: !3216)
!3229 = !DILocation(line: 93, column: 1, scope: !3216)
!3230 = distinct !DISubprogram(name: "char_out", scope: !272, file: !272, line: 107, type: !3167, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3231 = !DILocalVariable(name: "c", arg: 1, scope: !3230, file: !272, line: 107, type: !103)
!3232 = !DILocation(line: 107, column: 25, scope: !3230)
!3233 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3230, file: !272, line: 107, type: !102)
!3234 = !DILocation(line: 107, column: 34, scope: !3230)
!3235 = !DILocation(line: 109, column: 9, scope: !3230)
!3236 = !DILocation(line: 110, column: 9, scope: !3230)
!3237 = !DILocation(line: 110, column: 19, scope: !3230)
!3238 = !DILocation(line: 110, column: 2, scope: !3230)
!3239 = distinct !DISubprogram(name: "k_str_out", scope: !3240, file: !3240, line: 1470, type: !3241, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3240 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!3241 = !DISubroutineType(types: !3242)
!3242 = !{null, !311, !217}
!3243 = !DILocalVariable(name: "c", arg: 1, scope: !3239, file: !3240, line: 1470, type: !311)
!3244 = !DILocation(line: 1470, column: 37, scope: !3239)
!3245 = !DILocalVariable(name: "n", arg: 2, scope: !3239, file: !3240, line: 1470, type: !217)
!3246 = !DILocation(line: 1470, column: 47, scope: !3239)
!3247 = !DILocation(line: 1480, column: 2, scope: !3239)
!3248 = !DILocation(line: 1480, column: 2, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3239, file: !3240, line: 1480, column: 2)
!3250 = !{i64 2149636580}
!3251 = !DILocation(line: 1481, column: 19, scope: !3239)
!3252 = !DILocation(line: 1481, column: 22, scope: !3239)
!3253 = !DILocation(line: 1481, column: 2, scope: !3239)
!3254 = !DILocation(line: 1482, column: 1, scope: !3239)
!3255 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !272, file: !272, line: 157, type: !3241, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3256 = !DILocalVariable(name: "c", arg: 1, scope: !3255, file: !272, line: 157, type: !311)
!3257 = !DILocation(line: 157, column: 29, scope: !3255)
!3258 = !DILocalVariable(name: "n", arg: 2, scope: !3255, file: !272, line: 157, type: !217)
!3259 = !DILocation(line: 157, column: 39, scope: !3255)
!3260 = !DILocalVariable(name: "i", scope: !3255, file: !272, line: 159, type: !217)
!3261 = !DILocation(line: 159, column: 9, scope: !3255)
!3262 = !DILocation(line: 164, column: 9, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3255, file: !272, line: 164, column: 2)
!3264 = !DILocation(line: 164, column: 7, scope: !3263)
!3265 = !DILocation(line: 164, column: 14, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3263, file: !272, line: 164, column: 2)
!3267 = !DILocation(line: 164, column: 18, scope: !3266)
!3268 = !DILocation(line: 164, column: 16, scope: !3266)
!3269 = !DILocation(line: 164, column: 2, scope: !3263)
!3270 = !DILocation(line: 165, column: 3, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3266, file: !272, line: 164, column: 26)
!3272 = !DILocation(line: 165, column: 13, scope: !3271)
!3273 = !DILocation(line: 165, column: 15, scope: !3271)
!3274 = !DILocation(line: 166, column: 2, scope: !3271)
!3275 = !DILocation(line: 164, column: 22, scope: !3266)
!3276 = !DILocation(line: 164, column: 2, scope: !3266)
!3277 = distinct !{!3277, !3269, !3278}
!3278 = !DILocation(line: 166, column: 2, scope: !3263)
!3279 = !DILocation(line: 171, column: 1, scope: !3255)
!3280 = distinct !DISubprogram(name: "printk", scope: !272, file: !272, line: 203, type: !3281, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{null, !256, null}
!3283 = !DILocalVariable(name: "fmt", arg: 1, scope: !3280, file: !272, line: 203, type: !256)
!3284 = !DILocation(line: 203, column: 25, scope: !3280)
!3285 = !DILocalVariable(name: "ap", scope: !3280, file: !272, line: 205, type: !3124)
!3286 = !DILocation(line: 205, column: 10, scope: !3280)
!3287 = !DILocation(line: 207, column: 2, scope: !3280)
!3288 = !DILocation(line: 209, column: 10, scope: !3280)
!3289 = !DILocation(line: 209, column: 2, scope: !3280)
!3290 = !DILocation(line: 211, column: 2, scope: !3280)
!3291 = !DILocation(line: 212, column: 1, scope: !3280)
!3292 = distinct !DISubprogram(name: "snprintk", scope: !272, file: !272, line: 239, type: !3293, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!103, !311, !217, !256, null}
!3295 = !DILocalVariable(name: "str", arg: 1, scope: !3292, file: !272, line: 239, type: !311)
!3296 = !DILocation(line: 239, column: 20, scope: !3292)
!3297 = !DILocalVariable(name: "size", arg: 2, scope: !3292, file: !272, line: 239, type: !217)
!3298 = !DILocation(line: 239, column: 32, scope: !3292)
!3299 = !DILocalVariable(name: "fmt", arg: 3, scope: !3292, file: !272, line: 239, type: !256)
!3300 = !DILocation(line: 239, column: 50, scope: !3292)
!3301 = !DILocalVariable(name: "ap", scope: !3292, file: !272, line: 241, type: !3124)
!3302 = !DILocation(line: 241, column: 10, scope: !3292)
!3303 = !DILocalVariable(name: "ret", scope: !3292, file: !272, line: 242, type: !103)
!3304 = !DILocation(line: 242, column: 6, scope: !3292)
!3305 = !DILocation(line: 244, column: 2, scope: !3292)
!3306 = !DILocation(line: 245, column: 18, scope: !3292)
!3307 = !DILocation(line: 245, column: 23, scope: !3292)
!3308 = !DILocation(line: 245, column: 29, scope: !3292)
!3309 = !DILocation(line: 245, column: 8, scope: !3292)
!3310 = !DILocation(line: 245, column: 6, scope: !3292)
!3311 = !DILocation(line: 246, column: 2, scope: !3292)
!3312 = !DILocation(line: 248, column: 9, scope: !3292)
!3313 = !DILocation(line: 248, column: 2, scope: !3292)
!3314 = distinct !DISubprogram(name: "vsnprintk", scope: !272, file: !272, line: 251, type: !3315, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!103, !311, !217, !256, !3124}
!3317 = !DILocalVariable(name: "str", arg: 1, scope: !3314, file: !272, line: 251, type: !311)
!3318 = !DILocation(line: 251, column: 21, scope: !3314)
!3319 = !DILocalVariable(name: "size", arg: 2, scope: !3314, file: !272, line: 251, type: !217)
!3320 = !DILocation(line: 251, column: 33, scope: !3314)
!3321 = !DILocalVariable(name: "fmt", arg: 3, scope: !3314, file: !272, line: 251, type: !256)
!3322 = !DILocation(line: 251, column: 51, scope: !3314)
!3323 = !DILocalVariable(name: "ap", arg: 4, scope: !3314, file: !272, line: 251, type: !3124)
!3324 = !DILocation(line: 251, column: 64, scope: !3314)
!3325 = !DILocalVariable(name: "ctx", scope: !3314, file: !272, line: 253, type: !3326)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !272, line: 217, size: 96, elements: !3327)
!3327 = !{!3328, !3329, !3330}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3326, file: !272, line: 218, baseType: !311, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3326, file: !272, line: 219, baseType: !103, size: 32, offset: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3326, file: !272, line: 220, baseType: !103, size: 32, offset: 64)
!3331 = !DILocation(line: 253, column: 21, scope: !3314)
!3332 = !DILocation(line: 253, column: 27, scope: !3314)
!3333 = !DILocation(line: 253, column: 29, scope: !3314)
!3334 = !DILocation(line: 253, column: 34, scope: !3314)
!3335 = !DILocation(line: 255, column: 21, scope: !3314)
!3336 = !DILocation(line: 255, column: 27, scope: !3314)
!3337 = !DILocation(line: 255, column: 2, scope: !3314)
!3338 = !DILocation(line: 257, column: 10, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3314, file: !272, line: 257, column: 6)
!3340 = !DILocation(line: 257, column: 22, scope: !3339)
!3341 = !DILocation(line: 257, column: 16, scope: !3339)
!3342 = !DILocation(line: 257, column: 6, scope: !3314)
!3343 = !DILocation(line: 258, column: 3, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3339, file: !272, line: 257, column: 27)
!3345 = !DILocation(line: 258, column: 11, scope: !3344)
!3346 = !DILocation(line: 258, column: 18, scope: !3344)
!3347 = !DILocation(line: 259, column: 2, scope: !3344)
!3348 = !DILocation(line: 261, column: 13, scope: !3314)
!3349 = !DILocation(line: 261, column: 2, scope: !3314)
!3350 = distinct !DISubprogram(name: "str_out", scope: !272, file: !272, line: 223, type: !3351, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!103, !103, !3353}
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 32)
!3354 = !DILocalVariable(name: "c", arg: 1, scope: !3350, file: !272, line: 223, type: !103)
!3355 = !DILocation(line: 223, column: 24, scope: !3350)
!3356 = !DILocalVariable(name: "ctx", arg: 2, scope: !3350, file: !272, line: 223, type: !3353)
!3357 = !DILocation(line: 223, column: 47, scope: !3350)
!3358 = !DILocation(line: 225, column: 6, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3350, file: !272, line: 225, column: 6)
!3360 = !DILocation(line: 225, column: 11, scope: !3359)
!3361 = !DILocation(line: 225, column: 15, scope: !3359)
!3362 = !DILocation(line: 225, column: 23, scope: !3359)
!3363 = !DILocation(line: 225, column: 26, scope: !3359)
!3364 = !DILocation(line: 225, column: 31, scope: !3359)
!3365 = !DILocation(line: 225, column: 40, scope: !3359)
!3366 = !DILocation(line: 225, column: 45, scope: !3359)
!3367 = !DILocation(line: 225, column: 37, scope: !3359)
!3368 = !DILocation(line: 225, column: 6, scope: !3350)
!3369 = !DILocation(line: 226, column: 3, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3359, file: !272, line: 225, column: 50)
!3371 = !DILocation(line: 226, column: 8, scope: !3370)
!3372 = !DILocation(line: 226, column: 13, scope: !3370)
!3373 = !DILocation(line: 227, column: 10, scope: !3370)
!3374 = !DILocation(line: 227, column: 3, scope: !3370)
!3375 = !DILocation(line: 230, column: 6, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3350, file: !272, line: 230, column: 6)
!3377 = !DILocation(line: 230, column: 11, scope: !3376)
!3378 = !DILocation(line: 230, column: 20, scope: !3376)
!3379 = !DILocation(line: 230, column: 25, scope: !3376)
!3380 = !DILocation(line: 230, column: 29, scope: !3376)
!3381 = !DILocation(line: 230, column: 17, scope: !3376)
!3382 = !DILocation(line: 230, column: 6, scope: !3350)
!3383 = !DILocation(line: 231, column: 3, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3376, file: !272, line: 230, column: 34)
!3385 = !DILocation(line: 231, column: 8, scope: !3384)
!3386 = !DILocation(line: 231, column: 12, scope: !3384)
!3387 = !DILocation(line: 231, column: 17, scope: !3384)
!3388 = !DILocation(line: 231, column: 22, scope: !3384)
!3389 = !DILocation(line: 231, column: 26, scope: !3384)
!3390 = !DILocation(line: 232, column: 2, scope: !3384)
!3391 = !DILocation(line: 233, column: 28, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3376, file: !272, line: 232, column: 9)
!3393 = !DILocation(line: 233, column: 3, scope: !3392)
!3394 = !DILocation(line: 233, column: 8, scope: !3392)
!3395 = !DILocation(line: 233, column: 12, scope: !3392)
!3396 = !DILocation(line: 233, column: 17, scope: !3392)
!3397 = !DILocation(line: 233, column: 22, scope: !3392)
!3398 = !DILocation(line: 233, column: 26, scope: !3392)
!3399 = !DILocation(line: 236, column: 9, scope: !3350)
!3400 = !DILocation(line: 236, column: 2, scope: !3350)
!3401 = !DILocation(line: 237, column: 1, scope: !3350)
!3402 = distinct !DISubprogram(name: "z_thread_entry", scope: !3403, file: !3403, line: 30, type: !3404, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2360, retainedNodes: !223)
!3403 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3404 = !DISubroutineType(types: !3405)
!3405 = !{null, !240, !102, !102, !102}
!3406 = !DILocalVariable(name: "entry", arg: 1, scope: !3402, file: !3403, line: 30, type: !240)
!3407 = !DILocation(line: 30, column: 52, scope: !3402)
!3408 = !DILocalVariable(name: "p1", arg: 2, scope: !3402, file: !3403, line: 31, type: !102)
!3409 = !DILocation(line: 31, column: 12, scope: !3402)
!3410 = !DILocalVariable(name: "p2", arg: 3, scope: !3402, file: !3403, line: 31, type: !102)
!3411 = !DILocation(line: 31, column: 22, scope: !3402)
!3412 = !DILocalVariable(name: "p3", arg: 4, scope: !3402, file: !3403, line: 31, type: !102)
!3413 = !DILocation(line: 31, column: 32, scope: !3402)
!3414 = !DILocation(line: 36, column: 2, scope: !3402)
!3415 = !DILocation(line: 36, column: 8, scope: !3402)
!3416 = !DILocation(line: 36, column: 12, scope: !3402)
!3417 = !DILocation(line: 36, column: 16, scope: !3402)
!3418 = !DILocation(line: 38, column: 17, scope: !3402)
!3419 = !DILocation(line: 38, column: 2, scope: !3402)
!3420 = !DILocation(line: 45, column: 2, scope: !3402)
!3421 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !3422, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2360, retainedNodes: !223)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!3424}
!3424 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !3425)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 32)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3427)
!3427 = !{!3428, !3486, !3498, !3499, !3500, !3501, !3514}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3426, file: !114, line: 247, baseType: !3429, size: 384)
!3429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3430)
!3430 = !{!3431, !3455, !3462, !3463, !3464, !3473, !3474, !3475}
!3431 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !114, line: 60, baseType: !3432, size: 64)
!3432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !114, line: 60, size: 64, elements: !3433)
!3433 = !{!3434, !3449}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3432, file: !114, line: 61, baseType: !3435, size: 64)
!3435 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3436)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3437)
!3437 = !{!3438, !3444}
!3438 = !DIDerivedType(tag: DW_TAG_member, scope: !3436, file: !124, line: 38, baseType: !3439, size: 32)
!3439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3436, file: !124, line: 38, size: 32, elements: !3440)
!3440 = !{!3441, !3443}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3439, file: !124, line: 39, baseType: !3442, size: 32)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 32)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3439, file: !124, line: 40, baseType: !3442, size: 32)
!3444 = !DIDerivedType(tag: DW_TAG_member, scope: !3436, file: !124, line: 42, baseType: !3445, size: 32, offset: 32)
!3445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3436, file: !124, line: 42, size: 32, elements: !3446)
!3446 = !{!3447, !3448}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3445, file: !124, line: 43, baseType: !3442, size: 32)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3445, file: !124, line: 44, baseType: !3442, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3432, file: !114, line: 62, baseType: !3450, size: 64)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3451)
!3451 = !{!3452}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3450, file: !140, line: 50, baseType: !3453, size: 64)
!3453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3454, size: 64, elements: !145)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3429, file: !114, line: 68, baseType: !3456, size: 32, offset: 64)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3458)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3459)
!3459 = !{!3460}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3458, file: !150, line: 232, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3436)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3429, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3429, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3464 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !114, line: 90, baseType: !3465, size: 16, offset: 112)
!3465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !114, line: 90, size: 16, elements: !3466)
!3466 = !{!3467, !3472}
!3467 = !DIDerivedType(tag: DW_TAG_member, scope: !3465, file: !114, line: 91, baseType: !3468, size: 16)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3465, file: !114, line: 91, size: 16, elements: !3469)
!3469 = !{!3470, !3471}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3468, file: !114, line: 96, baseType: !166, size: 8)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3468, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3465, file: !114, line: 100, baseType: !170, size: 16)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3429, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3429, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3429, file: !114, line: 131, baseType: !3476, size: 192, offset: 192)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3477)
!3477 = !{!3478, !3479, !3485}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3476, file: !150, line: 245, baseType: !3435, size: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3476, file: !150, line: 246, baseType: !3480, size: 32, offset: 64)
!3480 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3481)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 32)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{null, !3484}
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3476, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3426, file: !114, line: 250, baseType: !3487, size: 288, offset: 384)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3488)
!3488 = !{!3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3487, file: !190, line: 26, baseType: !173, size: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3487, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3487, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3487, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3487, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3487, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3487, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3487, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3487, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3426, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3426, file: !114, line: 256, baseType: !3457, size: 64, offset: 704)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3426, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3426, file: !114, line: 325, baseType: !3502, size: 32, offset: 800)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 32)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3504)
!3504 = !{!3505, !3511, !3512}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3503, file: !109, line: 5074, baseType: !3506, size: 96)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3507)
!3507 = !{!3508, !3509, !3510}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3506, file: !210, line: 57, baseType: !213, size: 32)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3506, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3506, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3503, file: !109, line: 5075, baseType: !3457, size: 64, offset: 96)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3503, file: !109, line: 5076, baseType: !3513, offset: 160)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3426, file: !114, line: 343, baseType: !3515, size: 64, offset: 832)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3516)
!3516 = !{!3517, !3518}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3515, file: !190, line: 63, baseType: !173, size: 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3515, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3519 = !DILocation(line: 535, column: 9, scope: !3421)
!3520 = !DILocation(line: 535, column: 2, scope: !3421)
!3521 = distinct !DISubprogram(name: "k_thread_abort", scope: !3240, file: !3240, line: 188, type: !3522, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2360, retainedNodes: !223)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !3424}
!3524 = !DILocalVariable(name: "thread", arg: 1, scope: !3521, file: !3240, line: 188, type: !3424)
!3525 = !DILocation(line: 188, column: 43, scope: !3521)
!3526 = !DILocation(line: 197, column: 2, scope: !3521)
!3527 = !DILocation(line: 197, column: 2, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3521, file: !3240, line: 197, column: 2)
!3529 = !{i64 2149627241}
!3530 = !DILocation(line: 198, column: 24, scope: !3521)
!3531 = !DILocation(line: 198, column: 2, scope: !3521)
!3532 = !DILocation(line: 199, column: 1, scope: !3521)
!3533 = distinct !DISubprogram(name: "z_current_get", scope: !3240, file: !3240, line: 173, type: !3422, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2360, retainedNodes: !223)
!3534 = !DILocation(line: 180, column: 2, scope: !3533)
!3535 = !DILocation(line: 180, column: 2, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3533, file: !3240, line: 180, column: 2)
!3537 = !{i64 2149627173}
!3538 = !DILocation(line: 181, column: 9, scope: !3533)
!3539 = !DILocation(line: 181, column: 2, scope: !3533)
!3540 = distinct !DISubprogram(name: "onoff_manager_init", scope: !2366, file: !2366, line: 140, type: !3541, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{!103, !2423, !2435}
!3543 = !DILocalVariable(name: "mgr", arg: 1, scope: !3540, file: !2366, line: 140, type: !2423)
!3544 = !DILocation(line: 140, column: 46, scope: !3540)
!3545 = !DILocalVariable(name: "transitions", arg: 2, scope: !3540, file: !2366, line: 141, type: !2435)
!3546 = !DILocation(line: 141, column: 42, scope: !3540)
!3547 = !DILocation(line: 143, column: 7, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3540, file: !2366, line: 143, column: 6)
!3549 = !DILocation(line: 143, column: 11, scope: !3548)
!3550 = !DILocation(line: 144, column: 6, scope: !3548)
!3551 = !DILocation(line: 144, column: 10, scope: !3548)
!3552 = !DILocation(line: 144, column: 22, scope: !3548)
!3553 = !DILocation(line: 145, column: 6, scope: !3548)
!3554 = !DILocation(line: 145, column: 10, scope: !3548)
!3555 = !DILocation(line: 145, column: 23, scope: !3548)
!3556 = !DILocation(line: 145, column: 29, scope: !3548)
!3557 = !DILocation(line: 146, column: 6, scope: !3548)
!3558 = !DILocation(line: 146, column: 10, scope: !3548)
!3559 = !DILocation(line: 146, column: 23, scope: !3548)
!3560 = !DILocation(line: 146, column: 28, scope: !3548)
!3561 = !DILocation(line: 143, column: 6, scope: !3540)
!3562 = !DILocation(line: 147, column: 3, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3548, file: !2366, line: 146, column: 38)
!3564 = !DILocation(line: 150, column: 3, scope: !3540)
!3565 = !DILocation(line: 150, column: 9, scope: !3540)
!3566 = !DILocation(line: 150, column: 31, scope: !3540)
!3567 = !DILocation(line: 152, column: 2, scope: !3540)
!3568 = !DILocation(line: 153, column: 1, scope: !3540)
!3569 = distinct !DISubprogram(name: "onoff_request", scope: !2366, file: !2366, line: 421, type: !3570, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!103, !2423, !2375}
!3572 = !DILocalVariable(name: "mgr", arg: 1, scope: !3569, file: !2366, line: 421, type: !2423)
!3573 = !DILocation(line: 421, column: 41, scope: !3569)
!3574 = !DILocalVariable(name: "cli", arg: 2, scope: !3569, file: !2366, line: 422, type: !2375)
!3575 = !DILocation(line: 422, column: 26, scope: !3569)
!3576 = !DILocalVariable(name: "add_client", scope: !3569, file: !2366, line: 424, type: !717)
!3577 = !DILocation(line: 424, column: 7, scope: !3569)
!3578 = !DILocalVariable(name: "start", scope: !3569, file: !2366, line: 425, type: !717)
!3579 = !DILocation(line: 425, column: 7, scope: !3569)
!3580 = !DILocalVariable(name: "notify", scope: !3569, file: !2366, line: 426, type: !717)
!3581 = !DILocation(line: 426, column: 7, scope: !3569)
!3582 = !DILocalVariable(name: "rv", scope: !3569, file: !2366, line: 427, type: !103)
!3583 = !DILocation(line: 427, column: 6, scope: !3569)
!3584 = !DILocation(line: 427, column: 25, scope: !3569)
!3585 = !DILocation(line: 427, column: 30, scope: !3569)
!3586 = !DILocation(line: 427, column: 11, scope: !3569)
!3587 = !DILocation(line: 429, column: 6, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3569, file: !2366, line: 429, column: 6)
!3589 = !DILocation(line: 429, column: 9, scope: !3588)
!3590 = !DILocation(line: 429, column: 6, scope: !3569)
!3591 = !DILocation(line: 430, column: 10, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !2366, line: 429, column: 14)
!3593 = !DILocation(line: 430, column: 3, scope: !3592)
!3594 = !DILocalVariable(name: "key", scope: !3569, file: !2366, line: 433, type: !3595)
!3595 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !3596)
!3596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !3597)
!3597 = !{!3598}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3596, file: !222, line: 33, baseType: !103, size: 32)
!3599 = !DILocation(line: 433, column: 19, scope: !3569)
!3600 = !DILocation(line: 433, column: 38, scope: !3569)
!3601 = !DILocation(line: 433, column: 43, scope: !3569)
!3602 = !DILocalVariable(name: "l", arg: 1, scope: !3603, file: !222, line: 136, type: !3606)
!3603 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !3604, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!3595, !3606}
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!3607 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !3608)
!3608 = distinct !DILocation(line: 433, column: 25, scope: !3569)
!3609 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !3608)
!3610 = !DILocalVariable(name: "k", scope: !3603, file: !222, line: 139, type: !3595)
!3611 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !3608)
!3612 = !DILocalVariable(name: "key", scope: !3613, file: !3614, line: 44, type: !32)
!3613 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3614 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!32}
!3617 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !3618)
!3618 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !3608)
!3619 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !3618)
!3620 = !{i64 1455192}
!3621 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !3618)
!3622 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !3608)
!3623 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !3608)
!3624 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !3608)
!3625 = !DILocation(line: 433, column: 25, scope: !3569)
!3626 = !DILocalVariable(name: "state", scope: !3569, file: !2366, line: 434, type: !173)
!3627 = !DILocation(line: 434, column: 11, scope: !3569)
!3628 = !DILocation(line: 434, column: 19, scope: !3569)
!3629 = !DILocation(line: 434, column: 24, scope: !3569)
!3630 = !DILocation(line: 434, column: 30, scope: !3569)
!3631 = !DILocation(line: 437, column: 6, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3569, file: !2366, line: 437, column: 6)
!3633 = !DILocation(line: 437, column: 11, scope: !3632)
!3634 = !DILocation(line: 437, column: 16, scope: !3632)
!3635 = !DILocation(line: 437, column: 6, scope: !3569)
!3636 = !DILocation(line: 438, column: 6, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3632, file: !2366, line: 437, column: 37)
!3638 = !DILocation(line: 439, column: 3, scope: !3637)
!3639 = !DILocation(line: 442, column: 7, scope: !3569)
!3640 = !DILocation(line: 442, column: 5, scope: !3569)
!3641 = !DILocation(line: 443, column: 6, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3569, file: !2366, line: 443, column: 6)
!3643 = !DILocation(line: 443, column: 12, scope: !3642)
!3644 = !DILocation(line: 443, column: 6, scope: !3569)
!3645 = !DILocation(line: 445, column: 10, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3642, file: !2366, line: 443, column: 31)
!3647 = !DILocation(line: 446, column: 3, scope: !3646)
!3648 = !DILocation(line: 446, column: 8, scope: !3646)
!3649 = !DILocation(line: 446, column: 13, scope: !3646)
!3650 = !DILocation(line: 447, column: 2, scope: !3646)
!3651 = !DILocation(line: 447, column: 14, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3642, file: !2366, line: 447, column: 13)
!3653 = !DILocation(line: 447, column: 20, scope: !3652)
!3654 = !DILocation(line: 448, column: 6, scope: !3652)
!3655 = !DILocation(line: 448, column: 10, scope: !3652)
!3656 = !DILocation(line: 448, column: 16, scope: !3652)
!3657 = !DILocation(line: 449, column: 6, scope: !3652)
!3658 = !DILocation(line: 449, column: 10, scope: !3652)
!3659 = !DILocation(line: 449, column: 16, scope: !3652)
!3660 = !DILocation(line: 447, column: 13, scope: !3642)
!3661 = !DILocation(line: 451, column: 12, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3652, file: !2366, line: 449, column: 39)
!3663 = !DILocation(line: 451, column: 18, scope: !3662)
!3664 = !DILocation(line: 451, column: 9, scope: !3662)
!3665 = !DILocation(line: 452, column: 14, scope: !3662)
!3666 = !DILocation(line: 453, column: 2, scope: !3662)
!3667 = !DILocation(line: 453, column: 13, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3652, file: !2366, line: 453, column: 13)
!3669 = !DILocation(line: 453, column: 19, scope: !3668)
!3670 = !DILocation(line: 453, column: 13, scope: !3652)
!3671 = !DILocation(line: 454, column: 6, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3668, file: !2366, line: 453, column: 45)
!3673 = !DILocation(line: 455, column: 2, scope: !3672)
!3674 = !DILocation(line: 457, column: 6, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3668, file: !2366, line: 455, column: 9)
!3676 = !DILocation(line: 443, column: 15, scope: !3642)
!3677 = !DILabel(scope: !3569, name: "out", file: !2366, line: 460)
!3678 = !DILocation(line: 460, column: 1, scope: !3569)
!3679 = !DILocation(line: 461, column: 6, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3569, file: !2366, line: 461, column: 6)
!3681 = !DILocation(line: 461, column: 6, scope: !3569)
!3682 = !DILocation(line: 462, column: 21, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3680, file: !2366, line: 461, column: 18)
!3684 = !DILocation(line: 462, column: 26, scope: !3683)
!3685 = !DILocation(line: 462, column: 36, scope: !3683)
!3686 = !DILocation(line: 462, column: 41, scope: !3683)
!3687 = !DILocation(line: 462, column: 3, scope: !3683)
!3688 = !DILocation(line: 463, column: 2, scope: !3683)
!3689 = !DILocation(line: 465, column: 6, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3569, file: !2366, line: 465, column: 6)
!3691 = !DILocation(line: 465, column: 6, scope: !3569)
!3692 = !DILocation(line: 466, column: 17, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3690, file: !2366, line: 465, column: 13)
!3694 = !DILocation(line: 466, column: 3, scope: !3693)
!3695 = !DILocation(line: 467, column: 2, scope: !3693)
!3696 = !DILocation(line: 468, column: 18, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3690, file: !2366, line: 467, column: 9)
!3698 = !DILocation(line: 468, column: 23, scope: !3697)
!3699 = !DILocation(line: 468, column: 3, scope: !3697)
!3700 = !DILocalVariable(name: "l", arg: 1, scope: !3701, file: !222, line: 189, type: !3606)
!3701 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !3702, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{null, !3606, !3595}
!3704 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !3705)
!3705 = distinct !DILocation(line: 468, column: 3, scope: !3697)
!3706 = !DILocalVariable(name: "key", arg: 2, scope: !3701, file: !222, line: 190, type: !3595)
!3707 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !3705)
!3708 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !3705)
!3709 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !3705)
!3710 = !DILocalVariable(name: "key", arg: 1, scope: !3711, file: !3614, line: 84, type: !32)
!3711 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{null, !32}
!3714 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !3715)
!3715 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !3705)
!3716 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !3715)
!3717 = distinct !DILexicalBlock(scope: !3711, file: !3614, line: 87, column: 6)
!3718 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !3715)
!3719 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !3715)
!3720 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !3715)
!3721 = distinct !DILexicalBlock(scope: !3717, file: !3614, line: 87, column: 17)
!3722 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !3715)
!3723 = !{i64 1456056}
!3724 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !3715)
!3725 = !DILocation(line: 470, column: 7, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3697, file: !2366, line: 470, column: 7)
!3727 = !DILocation(line: 470, column: 7, scope: !3697)
!3728 = !DILocation(line: 471, column: 15, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !2366, line: 470, column: 15)
!3730 = !DILocation(line: 471, column: 20, scope: !3729)
!3731 = !DILocation(line: 471, column: 25, scope: !3729)
!3732 = !DILocation(line: 471, column: 4, scope: !3729)
!3733 = !DILocation(line: 472, column: 3, scope: !3729)
!3734 = !DILocation(line: 475, column: 9, scope: !3569)
!3735 = !DILocation(line: 475, column: 2, scope: !3569)
!3736 = !DILocation(line: 476, column: 1, scope: !3569)
!3737 = distinct !DISubprogram(name: "validate_args", scope: !2366, file: !2366, line: 122, type: !3738, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!103, !3740, !2375}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 32)
!3741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2424)
!3742 = !DILocalVariable(name: "mgr", arg: 1, scope: !3737, file: !2366, line: 122, type: !3740)
!3743 = !DILocation(line: 122, column: 54, scope: !3737)
!3744 = !DILocalVariable(name: "cli", arg: 2, scope: !3737, file: !2366, line: 123, type: !2375)
!3745 = !DILocation(line: 123, column: 26, scope: !3737)
!3746 = !DILocation(line: 125, column: 7, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3737, file: !2366, line: 125, column: 6)
!3748 = !DILocation(line: 125, column: 11, scope: !3747)
!3749 = !DILocation(line: 125, column: 20, scope: !3747)
!3750 = !DILocation(line: 125, column: 24, scope: !3747)
!3751 = !DILocation(line: 125, column: 28, scope: !3747)
!3752 = !DILocation(line: 125, column: 6, scope: !3737)
!3753 = !DILocation(line: 126, column: 3, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3747, file: !2366, line: 125, column: 38)
!3755 = !DILocalVariable(name: "rv", scope: !3737, file: !2366, line: 129, type: !103)
!3756 = !DILocation(line: 129, column: 6, scope: !3737)
!3757 = !DILocation(line: 129, column: 32, scope: !3737)
!3758 = !DILocation(line: 129, column: 37, scope: !3737)
!3759 = !DILocation(line: 129, column: 11, scope: !3737)
!3760 = !DILocation(line: 131, column: 7, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3737, file: !2366, line: 131, column: 6)
!3762 = !DILocation(line: 131, column: 10, scope: !3761)
!3763 = !DILocation(line: 132, column: 6, scope: !3761)
!3764 = !DILocation(line: 132, column: 11, scope: !3761)
!3765 = !DILocation(line: 132, column: 16, scope: !3761)
!3766 = !DILocation(line: 132, column: 23, scope: !3761)
!3767 = !DILocation(line: 133, column: 4, scope: !3761)
!3768 = !DILocation(line: 133, column: 45, scope: !3761)
!3769 = !DILocation(line: 131, column: 6, scope: !3737)
!3770 = !DILocation(line: 134, column: 6, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3761, file: !2366, line: 133, column: 52)
!3772 = !DILocation(line: 135, column: 2, scope: !3771)
!3773 = !DILocation(line: 137, column: 9, scope: !3737)
!3774 = !DILocation(line: 137, column: 2, scope: !3737)
!3775 = !DILocation(line: 138, column: 1, scope: !3737)
!3776 = distinct !DISubprogram(name: "sys_slist_append", scope: !301, file: !301, line: 311, type: !3777, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{null, !3779, !2431}
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!3780 = !DILocalVariable(name: "list", arg: 1, scope: !3776, file: !301, line: 311, type: !3779)
!3781 = !DILocation(line: 311, column: 1, scope: !3776)
!3782 = !DILocalVariable(name: "node", arg: 2, scope: !3776, file: !301, line: 311, type: !2431)
!3783 = !DILocation(line: 311, column: 1, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3776, file: !301, line: 311, column: 1)
!3785 = !DILocation(line: 311, column: 1, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3784, file: !301, line: 311, column: 1)
!3787 = !DILocation(line: 311, column: 1, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3784, file: !301, line: 311, column: 1)
!3789 = distinct !DISubprogram(name: "process_event", scope: !2366, file: !2366, line: 298, type: !3790, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{null, !2423, !103, !3595}
!3792 = !DILocalVariable(name: "mgr", arg: 1, scope: !3789, file: !2366, line: 298, type: !2423)
!3793 = !DILocation(line: 298, column: 49, scope: !3789)
!3794 = !DILocalVariable(name: "evt", arg: 2, scope: !3789, file: !2366, line: 299, type: !103)
!3795 = !DILocation(line: 299, column: 10, scope: !3789)
!3796 = !DILocalVariable(name: "key", arg: 3, scope: !3789, file: !2366, line: 300, type: !3595)
!3797 = !DILocation(line: 300, column: 23, scope: !3789)
!3798 = !DILocalVariable(name: "clients", scope: !3789, file: !2366, line: 302, type: !2427)
!3799 = !DILocation(line: 302, column: 14, scope: !3789)
!3800 = !DILocalVariable(name: "state", scope: !3789, file: !2366, line: 303, type: !173)
!3801 = !DILocation(line: 303, column: 11, scope: !3789)
!3802 = !DILocation(line: 303, column: 19, scope: !3789)
!3803 = !DILocation(line: 303, column: 24, scope: !3789)
!3804 = !DILocation(line: 303, column: 30, scope: !3789)
!3805 = !DILocalVariable(name: "res", scope: !3789, file: !2366, line: 304, type: !103)
!3806 = !DILocation(line: 304, column: 6, scope: !3789)
!3807 = !DILocalVariable(name: "processing", scope: !3789, file: !2366, line: 305, type: !717)
!3808 = !DILocation(line: 305, column: 7, scope: !3789)
!3809 = !DILocation(line: 305, column: 22, scope: !3789)
!3810 = !DILocation(line: 305, column: 27, scope: !3789)
!3811 = !DILocation(line: 305, column: 33, scope: !3789)
!3812 = !DILocation(line: 305, column: 58, scope: !3789)
!3813 = !DILocation(line: 312, column: 6, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3789, file: !2366, line: 312, column: 6)
!3815 = !DILocation(line: 312, column: 6, scope: !3789)
!3816 = !DILocation(line: 313, column: 7, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !2366, line: 313, column: 7)
!3818 = distinct !DILexicalBlock(scope: !3814, file: !2366, line: 312, column: 18)
!3819 = !DILocation(line: 313, column: 11, scope: !3817)
!3820 = !DILocation(line: 313, column: 7, scope: !3818)
!3821 = !DILocation(line: 314, column: 4, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3817, file: !2366, line: 313, column: 28)
!3823 = !DILocation(line: 314, column: 9, scope: !3822)
!3824 = !DILocation(line: 314, column: 15, scope: !3822)
!3825 = !DILocation(line: 315, column: 3, scope: !3822)
!3826 = !DILocation(line: 318, column: 4, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3817, file: !2366, line: 315, column: 10)
!3828 = !DILocation(line: 318, column: 9, scope: !3827)
!3829 = !DILocation(line: 318, column: 15, scope: !3827)
!3830 = !DILocation(line: 321, column: 3, scope: !3818)
!3831 = !DILocation(line: 324, column: 2, scope: !3789)
!3832 = !DILocation(line: 325, column: 2, scope: !3789)
!3833 = !DILocalVariable(name: "transit", scope: !3834, file: !2366, line: 326, type: !2440)
!3834 = distinct !DILexicalBlock(scope: !3789, file: !2366, line: 325, column: 5)
!3835 = !DILocation(line: 326, column: 23, scope: !3834)
!3836 = !DILocation(line: 328, column: 7, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3834, file: !2366, line: 328, column: 7)
!3838 = !DILocation(line: 328, column: 11, scope: !3837)
!3839 = !DILocation(line: 328, column: 7, scope: !3834)
!3840 = !DILocation(line: 329, column: 26, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3837, file: !2366, line: 328, column: 27)
!3842 = !DILocation(line: 329, column: 10, scope: !3841)
!3843 = !DILocation(line: 329, column: 8, scope: !3841)
!3844 = !DILocation(line: 330, column: 3, scope: !3841)
!3845 = !DILocation(line: 332, column: 7, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3834, file: !2366, line: 332, column: 7)
!3847 = !DILocation(line: 332, column: 11, scope: !3846)
!3848 = !DILocation(line: 332, column: 7, scope: !3834)
!3849 = !DILocation(line: 333, column: 4, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3846, file: !2366, line: 332, column: 23)
!3851 = !DILocation(line: 336, column: 7, scope: !3834)
!3852 = !DILocation(line: 337, column: 7, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3834, file: !2366, line: 337, column: 7)
!3854 = !DILocation(line: 337, column: 11, scope: !3853)
!3855 = !DILocation(line: 337, column: 7, scope: !3834)
!3856 = !DILocation(line: 338, column: 10, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3853, file: !2366, line: 337, column: 28)
!3858 = !DILocation(line: 338, column: 15, scope: !3857)
!3859 = !DILocation(line: 338, column: 8, scope: !3857)
!3860 = !DILocation(line: 339, column: 21, scope: !3857)
!3861 = !DILocation(line: 339, column: 36, scope: !3857)
!3862 = !DILocation(line: 339, column: 4, scope: !3857)
!3863 = !DILocation(line: 341, column: 3, scope: !3857)
!3864 = !DILocation(line: 341, column: 14, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3853, file: !2366, line: 341, column: 14)
!3866 = !DILocation(line: 341, column: 18, scope: !3865)
!3867 = !DILocation(line: 341, column: 14, scope: !3853)
!3868 = !DILocation(line: 345, column: 14, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3865, file: !2366, line: 341, column: 32)
!3870 = !DILocation(line: 345, column: 19, scope: !3869)
!3871 = !DILocation(line: 345, column: 32, scope: !3869)
!3872 = !DILocation(line: 345, column: 12, scope: !3869)
!3873 = !DILocation(line: 347, column: 14, scope: !3869)
!3874 = !DILocation(line: 347, column: 4, scope: !3869)
!3875 = !DILocation(line: 348, column: 3, scope: !3869)
!3876 = !DILocation(line: 348, column: 14, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3865, file: !2366, line: 348, column: 14)
!3878 = !DILocation(line: 348, column: 18, scope: !3877)
!3879 = !DILocation(line: 348, column: 14, scope: !3865)
!3880 = !DILocation(line: 352, column: 14, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3877, file: !2366, line: 348, column: 31)
!3882 = !DILocation(line: 352, column: 19, scope: !3881)
!3883 = !DILocation(line: 352, column: 32, scope: !3881)
!3884 = !DILocation(line: 352, column: 12, scope: !3881)
!3885 = !DILocation(line: 354, column: 14, scope: !3881)
!3886 = !DILocation(line: 354, column: 4, scope: !3881)
!3887 = !DILocation(line: 355, column: 3, scope: !3881)
!3888 = !DILocation(line: 355, column: 14, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3877, file: !2366, line: 355, column: 14)
!3890 = !DILocation(line: 355, column: 18, scope: !3889)
!3891 = !DILocation(line: 355, column: 14, scope: !3877)
!3892 = !DILocation(line: 359, column: 14, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3889, file: !2366, line: 355, column: 32)
!3894 = !DILocation(line: 359, column: 19, scope: !3893)
!3895 = !DILocation(line: 359, column: 32, scope: !3893)
!3896 = !DILocation(line: 359, column: 12, scope: !3893)
!3897 = !DILocation(line: 361, column: 14, scope: !3893)
!3898 = !DILocation(line: 361, column: 4, scope: !3893)
!3899 = !DILocation(line: 362, column: 3, scope: !3893)
!3900 = !DILocalVariable(name: "do_monitors", scope: !3834, file: !2366, line: 371, type: !717)
!3901 = !DILocation(line: 371, column: 8, scope: !3834)
!3902 = !DILocation(line: 371, column: 23, scope: !3834)
!3903 = !DILocation(line: 371, column: 33, scope: !3834)
!3904 = !DILocation(line: 371, column: 38, scope: !3834)
!3905 = !DILocation(line: 371, column: 44, scope: !3834)
!3906 = !DILocation(line: 371, column: 29, scope: !3834)
!3907 = !DILocation(line: 372, column: 8, scope: !3834)
!3908 = !DILocation(line: 372, column: 32, scope: !3834)
!3909 = !DILocation(line: 372, column: 37, scope: !3834)
!3910 = !DILocation(line: 372, column: 12, scope: !3834)
!3911 = !DILocation(line: 372, column: 11, scope: !3834)
!3912 = !DILocation(line: 0, scope: !3834)
!3913 = !DILocation(line: 374, column: 7, scope: !3834)
!3914 = !DILocation(line: 375, column: 7, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3834, file: !2366, line: 375, column: 7)
!3916 = !DILocation(line: 376, column: 7, scope: !3915)
!3917 = !DILocation(line: 376, column: 11, scope: !3915)
!3918 = !DILocation(line: 377, column: 7, scope: !3915)
!3919 = !DILocation(line: 377, column: 11, scope: !3915)
!3920 = !DILocation(line: 377, column: 19, scope: !3915)
!3921 = !DILocation(line: 375, column: 7, scope: !3834)
!3922 = !DILocalVariable(name: "flags", scope: !3923, file: !2366, line: 378, type: !173)
!3923 = distinct !DILexicalBlock(scope: !3915, file: !2366, line: 377, column: 29)
!3924 = !DILocation(line: 378, column: 13, scope: !3923)
!3925 = !DILocation(line: 378, column: 21, scope: !3923)
!3926 = !DILocation(line: 378, column: 26, scope: !3923)
!3927 = !DILocation(line: 378, column: 32, scope: !3923)
!3928 = !DILocation(line: 380, column: 17, scope: !3923)
!3929 = !DILocation(line: 380, column: 4, scope: !3923)
!3930 = !DILocation(line: 380, column: 9, scope: !3923)
!3931 = !DILocation(line: 380, column: 15, scope: !3923)
!3932 = !DILocation(line: 381, column: 12, scope: !3923)
!3933 = !DILocation(line: 381, column: 18, scope: !3923)
!3934 = !DILocation(line: 381, column: 10, scope: !3923)
!3935 = !DILocation(line: 383, column: 19, scope: !3923)
!3936 = !DILocation(line: 383, column: 24, scope: !3923)
!3937 = !DILocation(line: 383, column: 4, scope: !3923)
!3938 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !3939)
!3939 = distinct !DILocation(line: 383, column: 4, scope: !3923)
!3940 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !3939)
!3941 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !3939)
!3942 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !3939)
!3943 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !3944)
!3944 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !3939)
!3945 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !3944)
!3946 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !3944)
!3947 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !3944)
!3948 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !3944)
!3949 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !3944)
!3950 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !3944)
!3951 = !DILocation(line: 385, column: 8, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3923, file: !2366, line: 385, column: 8)
!3953 = !DILocation(line: 385, column: 8, scope: !3923)
!3954 = !DILocation(line: 386, column: 21, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3952, file: !2366, line: 385, column: 21)
!3956 = !DILocation(line: 386, column: 26, scope: !3955)
!3957 = !DILocation(line: 386, column: 33, scope: !3955)
!3958 = !DILocation(line: 386, column: 5, scope: !3955)
!3959 = !DILocation(line: 387, column: 4, scope: !3955)
!3960 = !DILocation(line: 389, column: 9, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3923, file: !2366, line: 389, column: 8)
!3962 = !DILocation(line: 389, column: 8, scope: !3923)
!3963 = !DILocation(line: 390, column: 16, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3961, file: !2366, line: 389, column: 39)
!3965 = !DILocation(line: 390, column: 31, scope: !3964)
!3966 = !DILocation(line: 390, column: 38, scope: !3964)
!3967 = !DILocation(line: 390, column: 5, scope: !3964)
!3968 = !DILocation(line: 391, column: 4, scope: !3964)
!3969 = !DILocation(line: 393, column: 8, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3923, file: !2366, line: 393, column: 8)
!3971 = !DILocation(line: 393, column: 16, scope: !3970)
!3972 = !DILocation(line: 393, column: 8, scope: !3923)
!3973 = !DILocation(line: 394, column: 5, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3970, file: !2366, line: 393, column: 25)
!3975 = !DILocation(line: 394, column: 13, scope: !3974)
!3976 = !DILocation(line: 395, column: 4, scope: !3974)
!3977 = !DILocation(line: 397, column: 23, scope: !3923)
!3978 = !DILocation(line: 397, column: 28, scope: !3923)
!3979 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !3980)
!3980 = distinct !DILocation(line: 397, column: 10, scope: !3923)
!3981 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !3980)
!3982 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !3980)
!3983 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !3984)
!3984 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !3980)
!3985 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !3984)
!3986 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !3984)
!3987 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !3980)
!3988 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !3980)
!3989 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !3980)
!3990 = !DILocation(line: 397, column: 10, scope: !3923)
!3991 = !DILocation(line: 398, column: 4, scope: !3923)
!3992 = !DILocation(line: 398, column: 9, scope: !3923)
!3993 = !DILocation(line: 398, column: 15, scope: !3923)
!3994 = !DILocation(line: 399, column: 3, scope: !3923)
!3995 = !DILocation(line: 404, column: 8, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3834, file: !2366, line: 404, column: 7)
!3997 = !DILocation(line: 404, column: 13, scope: !3996)
!3998 = !DILocation(line: 404, column: 19, scope: !3996)
!3999 = !DILocation(line: 404, column: 42, scope: !3996)
!4000 = !DILocation(line: 404, column: 7, scope: !3834)
!4001 = !DILocation(line: 405, column: 4, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3996, file: !2366, line: 404, column: 48)
!4003 = !DILocation(line: 405, column: 9, scope: !4002)
!4004 = !DILocation(line: 405, column: 15, scope: !4002)
!4005 = !DILocation(line: 406, column: 8, scope: !4002)
!4006 = !DILocation(line: 407, column: 3, scope: !4002)
!4007 = !DILocation(line: 407, column: 15, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3996, file: !2366, line: 407, column: 14)
!4009 = !DILocation(line: 407, column: 20, scope: !4008)
!4010 = !DILocation(line: 407, column: 26, scope: !4008)
!4011 = !DILocation(line: 407, column: 48, scope: !4008)
!4012 = !DILocation(line: 407, column: 14, scope: !3996)
!4013 = !DILocation(line: 408, column: 4, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4008, file: !2366, line: 407, column: 54)
!4015 = !DILocation(line: 408, column: 9, scope: !4014)
!4016 = !DILocation(line: 408, column: 15, scope: !4014)
!4017 = !DILocation(line: 409, column: 8, scope: !4014)
!4018 = !DILocation(line: 410, column: 3, scope: !4014)
!4019 = !DILocation(line: 414, column: 11, scope: !3834)
!4020 = !DILocation(line: 414, column: 16, scope: !3834)
!4021 = !DILocation(line: 414, column: 22, scope: !3834)
!4022 = !DILocation(line: 414, column: 9, scope: !3834)
!4023 = !DILocation(line: 415, column: 2, scope: !3834)
!4024 = !DILocation(line: 415, column: 11, scope: !3789)
!4025 = !DILocation(line: 415, column: 15, scope: !3789)
!4026 = distinct !{!4026, !3832, !4027}
!4027 = !DILocation(line: 415, column: 25, scope: !3789)
!4028 = !DILabel(scope: !3789, name: "out", file: !2366, line: 417)
!4029 = !DILocation(line: 417, column: 1, scope: !3789)
!4030 = !DILocation(line: 418, column: 17, scope: !3789)
!4031 = !DILocation(line: 418, column: 22, scope: !3789)
!4032 = !DILocation(line: 418, column: 2, scope: !3789)
!4033 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !4034)
!4034 = distinct !DILocation(line: 418, column: 2, scope: !3789)
!4035 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !4034)
!4036 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !4034)
!4037 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !4034)
!4038 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !4039)
!4039 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !4034)
!4040 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !4039)
!4041 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !4039)
!4042 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !4039)
!4043 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !4039)
!4044 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !4039)
!4045 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !4039)
!4046 = !DILocation(line: 419, column: 1, scope: !3789)
!4047 = distinct !DISubprogram(name: "notify_one", scope: !2366, file: !2366, line: 168, type: !2457, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4048 = !DILocalVariable(name: "mgr", arg: 1, scope: !4047, file: !2366, line: 168, type: !2423)
!4049 = !DILocation(line: 168, column: 46, scope: !4047)
!4050 = !DILocalVariable(name: "cli", arg: 2, scope: !4047, file: !2366, line: 169, type: !2375)
!4051 = !DILocation(line: 169, column: 31, scope: !4047)
!4052 = !DILocalVariable(name: "state", arg: 3, scope: !4047, file: !2366, line: 170, type: !173)
!4053 = !DILocation(line: 170, column: 19, scope: !4047)
!4054 = !DILocalVariable(name: "res", arg: 4, scope: !4047, file: !2366, line: 171, type: !103)
!4055 = !DILocation(line: 171, column: 14, scope: !4047)
!4056 = !DILocalVariable(name: "cb", scope: !4047, file: !2366, line: 173, type: !2455)
!4057 = !DILocation(line: 173, column: 24, scope: !4047)
!4058 = !DILocation(line: 174, column: 47, scope: !4047)
!4059 = !DILocation(line: 174, column: 52, scope: !4047)
!4060 = !DILocation(line: 174, column: 60, scope: !4047)
!4061 = !DILocation(line: 174, column: 26, scope: !4047)
!4062 = !DILocation(line: 174, column: 3, scope: !4047)
!4063 = !DILocation(line: 176, column: 6, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4047, file: !2366, line: 176, column: 6)
!4065 = !DILocation(line: 176, column: 6, scope: !4047)
!4066 = !DILocation(line: 177, column: 3, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4064, file: !2366, line: 176, column: 10)
!4068 = !DILocation(line: 177, column: 6, scope: !4067)
!4069 = !DILocation(line: 177, column: 11, scope: !4067)
!4070 = !DILocation(line: 177, column: 16, scope: !4067)
!4071 = !DILocation(line: 177, column: 23, scope: !4067)
!4072 = !DILocation(line: 178, column: 2, scope: !4067)
!4073 = !DILocation(line: 179, column: 1, scope: !4047)
!4074 = distinct !DISubprogram(name: "sys_slist_init", scope: !301, file: !301, line: 196, type: !4075, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{null, !3779}
!4077 = !DILocalVariable(name: "list", arg: 1, scope: !4074, file: !301, line: 196, type: !3779)
!4078 = !DILocation(line: 196, column: 48, scope: !4074)
!4079 = !DILocation(line: 198, column: 2, scope: !4074)
!4080 = !DILocation(line: 198, column: 8, scope: !4074)
!4081 = !DILocation(line: 198, column: 13, scope: !4074)
!4082 = !DILocation(line: 199, column: 2, scope: !4074)
!4083 = !DILocation(line: 199, column: 8, scope: !4074)
!4084 = !DILocation(line: 199, column: 13, scope: !4074)
!4085 = !DILocation(line: 200, column: 1, scope: !4074)
!4086 = distinct !DISubprogram(name: "process_recheck", scope: !2366, file: !2366, line: 211, type: !4087, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!103, !2423}
!4089 = !DILocalVariable(name: "mgr", arg: 1, scope: !4086, file: !2366, line: 211, type: !2423)
!4090 = !DILocation(line: 211, column: 50, scope: !4086)
!4091 = !DILocalVariable(name: "evt", scope: !4086, file: !2366, line: 213, type: !103)
!4092 = !DILocation(line: 213, column: 6, scope: !4086)
!4093 = !DILocalVariable(name: "state", scope: !4086, file: !2366, line: 214, type: !173)
!4094 = !DILocation(line: 214, column: 11, scope: !4086)
!4095 = !DILocation(line: 214, column: 19, scope: !4086)
!4096 = !DILocation(line: 214, column: 24, scope: !4086)
!4097 = !DILocation(line: 214, column: 30, scope: !4086)
!4098 = !DILocation(line: 216, column: 7, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4086, file: !2366, line: 216, column: 6)
!4100 = !DILocation(line: 216, column: 13, scope: !4099)
!4101 = !DILocation(line: 217, column: 6, scope: !4099)
!4102 = !DILocation(line: 217, column: 30, scope: !4099)
!4103 = !DILocation(line: 217, column: 35, scope: !4099)
!4104 = !DILocation(line: 217, column: 10, scope: !4099)
!4105 = !DILocation(line: 216, column: 6, scope: !4086)
!4106 = !DILocation(line: 218, column: 7, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4099, file: !2366, line: 217, column: 45)
!4108 = !DILocation(line: 219, column: 2, scope: !4107)
!4109 = !DILocation(line: 219, column: 14, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4099, file: !2366, line: 219, column: 13)
!4111 = !DILocation(line: 219, column: 20, scope: !4110)
!4112 = !DILocation(line: 220, column: 6, scope: !4110)
!4113 = !DILocation(line: 220, column: 10, scope: !4110)
!4114 = !DILocation(line: 220, column: 15, scope: !4110)
!4115 = !DILocation(line: 220, column: 20, scope: !4110)
!4116 = !DILocation(line: 219, column: 13, scope: !4099)
!4117 = !DILocation(line: 221, column: 7, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4110, file: !2366, line: 220, column: 28)
!4119 = !DILocation(line: 222, column: 2, scope: !4118)
!4120 = !DILocation(line: 222, column: 14, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4110, file: !2366, line: 222, column: 13)
!4122 = !DILocation(line: 222, column: 20, scope: !4121)
!4123 = !DILocation(line: 223, column: 6, scope: !4121)
!4124 = !DILocation(line: 223, column: 30, scope: !4121)
!4125 = !DILocation(line: 223, column: 35, scope: !4121)
!4126 = !DILocation(line: 223, column: 10, scope: !4121)
!4127 = !DILocation(line: 222, column: 13, scope: !4110)
!4128 = !DILocation(line: 224, column: 7, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4121, file: !2366, line: 223, column: 45)
!4130 = !DILocation(line: 225, column: 2, scope: !4129)
!4131 = !DILocation(line: 229, column: 9, scope: !4086)
!4132 = !DILocation(line: 229, column: 2, scope: !4086)
!4133 = distinct !DISubprogram(name: "process_complete", scope: !2366, file: !2366, line: 237, type: !4134, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{null, !2423, !3779, !103}
!4136 = !DILocalVariable(name: "mgr", arg: 1, scope: !4133, file: !2366, line: 237, type: !2423)
!4137 = !DILocation(line: 237, column: 52, scope: !4133)
!4138 = !DILocalVariable(name: "clients", arg: 2, scope: !4133, file: !2366, line: 238, type: !3779)
!4139 = !DILocation(line: 238, column: 22, scope: !4133)
!4140 = !DILocalVariable(name: "res", arg: 3, scope: !4133, file: !2366, line: 239, type: !103)
!4141 = !DILocation(line: 239, column: 13, scope: !4133)
!4142 = !DILocalVariable(name: "state", scope: !4133, file: !2366, line: 241, type: !173)
!4143 = !DILocation(line: 241, column: 11, scope: !4133)
!4144 = !DILocation(line: 241, column: 19, scope: !4133)
!4145 = !DILocation(line: 241, column: 24, scope: !4133)
!4146 = !DILocation(line: 241, column: 30, scope: !4133)
!4147 = !DILocation(line: 243, column: 6, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4133, file: !2366, line: 243, column: 6)
!4149 = !DILocation(line: 243, column: 10, scope: !4148)
!4150 = !DILocation(line: 243, column: 6, scope: !4133)
!4151 = !DILocation(line: 245, column: 4, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4148, file: !2366, line: 243, column: 15)
!4153 = !DILocation(line: 245, column: 14, scope: !4152)
!4154 = !DILocation(line: 245, column: 19, scope: !4152)
!4155 = !DILocation(line: 246, column: 19, scope: !4152)
!4156 = !DILocation(line: 246, column: 24, scope: !4152)
!4157 = !DILocation(line: 246, column: 3, scope: !4152)
!4158 = !DILocation(line: 247, column: 13, scope: !4152)
!4159 = !DILocation(line: 247, column: 3, scope: !4152)
!4160 = !DILocation(line: 248, column: 2, scope: !4152)
!4161 = !DILocation(line: 248, column: 14, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4148, file: !2366, line: 248, column: 13)
!4163 = !DILocation(line: 248, column: 20, scope: !4162)
!4164 = !DILocation(line: 249, column: 6, scope: !4162)
!4165 = !DILocation(line: 249, column: 10, scope: !4162)
!4166 = !DILocation(line: 249, column: 16, scope: !4162)
!4167 = !DILocation(line: 248, column: 13, scope: !4148)
!4168 = !DILocation(line: 250, column: 4, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4162, file: !2366, line: 249, column: 43)
!4170 = !DILocation(line: 250, column: 14, scope: !4169)
!4171 = !DILocation(line: 250, column: 19, scope: !4169)
!4172 = !DILocation(line: 251, column: 19, scope: !4169)
!4173 = !DILocation(line: 251, column: 24, scope: !4169)
!4174 = !DILocation(line: 251, column: 3, scope: !4169)
!4175 = !DILocation(line: 253, column: 7, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4169, file: !2366, line: 253, column: 7)
!4177 = !DILocation(line: 253, column: 13, scope: !4176)
!4178 = !DILocation(line: 253, column: 7, scope: !4169)
!4179 = !DILocalVariable(name: "cp", scope: !4180, file: !2366, line: 254, type: !2375)
!4180 = distinct !DILexicalBlock(scope: !4176, file: !2366, line: 253, column: 35)
!4181 = !DILocation(line: 254, column: 25, scope: !4180)
!4182 = !DILocation(line: 259, column: 4, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4180, file: !2366, line: 259, column: 4)
!4184 = !DILocation(line: 259, column: 4, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4183, file: !2366, line: 259, column: 4)
!4186 = !DILocation(line: 260, column: 5, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4185, file: !2366, line: 259, column: 52)
!4188 = !DILocation(line: 260, column: 10, scope: !4187)
!4189 = !DILocation(line: 260, column: 15, scope: !4187)
!4190 = !DILocation(line: 261, column: 4, scope: !4187)
!4191 = distinct !{!4191, !4182, !4192}
!4192 = !DILocation(line: 261, column: 4, scope: !4183)
!4193 = !DILocation(line: 263, column: 14, scope: !4180)
!4194 = !DILocation(line: 263, column: 4, scope: !4180)
!4195 = !DILocation(line: 264, column: 3, scope: !4180)
!4196 = !DILocation(line: 267, column: 14, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4176, file: !2366, line: 264, column: 10)
!4198 = !DILocation(line: 267, column: 4, scope: !4197)
!4199 = !DILocation(line: 269, column: 23, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4169, file: !2366, line: 269, column: 7)
!4201 = !DILocation(line: 269, column: 7, scope: !4200)
!4202 = !DILocation(line: 269, column: 28, scope: !4200)
!4203 = !DILocation(line: 269, column: 7, scope: !4169)
!4204 = !DILocation(line: 270, column: 4, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !2366, line: 269, column: 40)
!4206 = !DILocation(line: 270, column: 9, scope: !4205)
!4207 = !DILocation(line: 270, column: 15, scope: !4205)
!4208 = !DILocation(line: 271, column: 3, scope: !4205)
!4209 = !DILocation(line: 272, column: 2, scope: !4169)
!4210 = !DILocation(line: 272, column: 13, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4162, file: !2366, line: 272, column: 13)
!4212 = !DILocation(line: 272, column: 19, scope: !4211)
!4213 = !DILocation(line: 272, column: 13, scope: !4162)
!4214 = !DILocation(line: 278, column: 13, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4211, file: !2366, line: 272, column: 42)
!4216 = !DILocation(line: 278, column: 3, scope: !4215)
!4217 = !DILocation(line: 279, column: 23, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4215, file: !2366, line: 279, column: 7)
!4219 = !DILocation(line: 279, column: 7, scope: !4218)
!4220 = !DILocation(line: 279, column: 28, scope: !4218)
!4221 = !DILocation(line: 279, column: 7, scope: !4215)
!4222 = !DILocation(line: 280, column: 4, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4218, file: !2366, line: 279, column: 40)
!4224 = !DILocation(line: 280, column: 9, scope: !4223)
!4225 = !DILocation(line: 280, column: 15, scope: !4223)
!4226 = !DILocation(line: 281, column: 3, scope: !4223)
!4227 = !DILocation(line: 282, column: 2, scope: !4215)
!4228 = !DILocation(line: 285, column: 1, scope: !4133)
!4229 = distinct !DISubprogram(name: "set_state", scope: !2366, file: !2366, line: 115, type: !4230, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{null, !2423, !173}
!4232 = !DILocalVariable(name: "mgr", arg: 1, scope: !4229, file: !2366, line: 115, type: !2423)
!4233 = !DILocation(line: 115, column: 45, scope: !4229)
!4234 = !DILocalVariable(name: "state", arg: 2, scope: !4229, file: !2366, line: 116, type: !173)
!4235 = !DILocation(line: 116, column: 18, scope: !4229)
!4236 = !DILocation(line: 118, column: 16, scope: !4229)
!4237 = !DILocation(line: 118, column: 22, scope: !4229)
!4238 = !DILocation(line: 119, column: 11, scope: !4229)
!4239 = !DILocation(line: 119, column: 16, scope: !4229)
!4240 = !DILocation(line: 119, column: 22, scope: !4229)
!4241 = !DILocation(line: 119, column: 8, scope: !4229)
!4242 = !DILocation(line: 118, column: 15, scope: !4229)
!4243 = !DILocation(line: 118, column: 2, scope: !4229)
!4244 = !DILocation(line: 118, column: 7, scope: !4229)
!4245 = !DILocation(line: 118, column: 13, scope: !4229)
!4246 = !DILocation(line: 120, column: 1, scope: !4229)
!4247 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !301, file: !301, line: 261, type: !4248, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!717, !3779}
!4250 = !DILocalVariable(name: "list", arg: 1, scope: !4247, file: !301, line: 261, type: !3779)
!4251 = !DILocation(line: 261, column: 1, scope: !4247)
!4252 = distinct !DISubprogram(name: "notify_monitors", scope: !2366, file: !2366, line: 155, type: !4253, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{null, !2423, !173, !103}
!4255 = !DILocalVariable(name: "mgr", arg: 1, scope: !4252, file: !2366, line: 155, type: !2423)
!4256 = !DILocation(line: 155, column: 51, scope: !4252)
!4257 = !DILocalVariable(name: "state", arg: 2, scope: !4252, file: !2366, line: 156, type: !173)
!4258 = !DILocation(line: 156, column: 17, scope: !4252)
!4259 = !DILocalVariable(name: "res", arg: 3, scope: !4252, file: !2366, line: 157, type: !103)
!4260 = !DILocation(line: 157, column: 12, scope: !4252)
!4261 = !DILocalVariable(name: "mlist", scope: !4252, file: !2366, line: 159, type: !3779)
!4262 = !DILocation(line: 159, column: 15, scope: !4252)
!4263 = !DILocation(line: 159, column: 24, scope: !4252)
!4264 = !DILocation(line: 159, column: 29, scope: !4252)
!4265 = !DILocalVariable(name: "mon", scope: !4252, file: !2366, line: 160, type: !2414)
!4266 = !DILocation(line: 160, column: 24, scope: !4252)
!4267 = !DILocalVariable(name: "tmp", scope: !4252, file: !2366, line: 161, type: !2414)
!4268 = !DILocation(line: 161, column: 24, scope: !4252)
!4269 = !DILocation(line: 163, column: 2, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4252, file: !2366, line: 163, column: 2)
!4271 = !DILocation(line: 163, column: 2, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4270, file: !2366, line: 163, column: 2)
!4273 = !DILocation(line: 164, column: 3, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4272, file: !2366, line: 163, column: 59)
!4275 = !DILocation(line: 164, column: 8, scope: !4274)
!4276 = !DILocation(line: 164, column: 17, scope: !4274)
!4277 = !DILocation(line: 164, column: 22, scope: !4274)
!4278 = !DILocation(line: 164, column: 27, scope: !4274)
!4279 = !DILocation(line: 164, column: 34, scope: !4274)
!4280 = !DILocation(line: 165, column: 2, scope: !4274)
!4281 = distinct !{!4281, !4269, !4282}
!4282 = !DILocation(line: 165, column: 2, scope: !4270)
!4283 = !DILocation(line: 166, column: 1, scope: !4252)
!4284 = distinct !DISubprogram(name: "notify_all", scope: !2366, file: !2366, line: 181, type: !4285, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{null, !2423, !3779, !173, !103}
!4287 = !DILocalVariable(name: "mgr", arg: 1, scope: !4284, file: !2366, line: 181, type: !2423)
!4288 = !DILocation(line: 181, column: 46, scope: !4284)
!4289 = !DILocalVariable(name: "list", arg: 2, scope: !4284, file: !2366, line: 182, type: !3779)
!4290 = !DILocation(line: 182, column: 23, scope: !4284)
!4291 = !DILocalVariable(name: "state", arg: 3, scope: !4284, file: !2366, line: 183, type: !173)
!4292 = !DILocation(line: 183, column: 19, scope: !4284)
!4293 = !DILocalVariable(name: "res", arg: 4, scope: !4284, file: !2366, line: 184, type: !103)
!4294 = !DILocation(line: 184, column: 14, scope: !4284)
!4295 = !DILocation(line: 186, column: 2, scope: !4284)
!4296 = !DILocation(line: 186, column: 29, scope: !4284)
!4297 = !DILocation(line: 186, column: 10, scope: !4284)
!4298 = !DILocation(line: 186, column: 9, scope: !4284)
!4299 = !DILocalVariable(name: "node", scope: !4300, file: !2366, line: 187, type: !2431)
!4300 = distinct !DILexicalBlock(scope: !4284, file: !2366, line: 186, column: 36)
!4301 = !DILocation(line: 187, column: 16, scope: !4300)
!4302 = !DILocation(line: 187, column: 47, scope: !4300)
!4303 = !DILocation(line: 187, column: 23, scope: !4300)
!4304 = !DILocalVariable(name: "cli", scope: !4300, file: !2366, line: 188, type: !2375)
!4305 = !DILocation(line: 188, column: 24, scope: !4300)
!4306 = !DILocation(line: 189, column: 4, scope: !4300)
!4307 = !DILocation(line: 193, column: 14, scope: !4300)
!4308 = !DILocation(line: 193, column: 19, scope: !4300)
!4309 = !DILocation(line: 193, column: 24, scope: !4300)
!4310 = !DILocation(line: 193, column: 31, scope: !4300)
!4311 = !DILocation(line: 193, column: 3, scope: !4300)
!4312 = distinct !{!4312, !4295, !4313}
!4313 = !DILocation(line: 194, column: 2, scope: !4284)
!4314 = !DILocation(line: 195, column: 1, scope: !4284)
!4315 = distinct !DISubprogram(name: "transition_complete", scope: !2366, file: !2366, line: 201, type: !2446, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4316 = !DILocalVariable(name: "mgr", arg: 1, scope: !4315, file: !2366, line: 201, type: !2423)
!4317 = !DILocation(line: 201, column: 55, scope: !4315)
!4318 = !DILocalVariable(name: "res", arg: 2, scope: !4315, file: !2366, line: 202, type: !103)
!4319 = !DILocation(line: 202, column: 9, scope: !4315)
!4320 = !DILocalVariable(name: "key", scope: !4315, file: !2366, line: 204, type: !3595)
!4321 = !DILocation(line: 204, column: 19, scope: !4315)
!4322 = !DILocation(line: 204, column: 38, scope: !4315)
!4323 = !DILocation(line: 204, column: 43, scope: !4315)
!4324 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !4325)
!4325 = distinct !DILocation(line: 204, column: 25, scope: !4315)
!4326 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !4325)
!4327 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !4325)
!4328 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !4329)
!4329 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !4325)
!4330 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !4329)
!4331 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !4329)
!4332 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !4325)
!4333 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !4325)
!4334 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !4325)
!4335 = !DILocation(line: 204, column: 25, scope: !4315)
!4336 = !DILocation(line: 206, column: 18, scope: !4315)
!4337 = !DILocation(line: 206, column: 2, scope: !4315)
!4338 = !DILocation(line: 206, column: 7, scope: !4315)
!4339 = !DILocation(line: 206, column: 16, scope: !4315)
!4340 = !DILocation(line: 207, column: 16, scope: !4315)
!4341 = !DILocation(line: 207, column: 2, scope: !4315)
!4342 = !DILocation(line: 208, column: 1, scope: !4315)
!4343 = distinct !DISubprogram(name: "sys_slist_get_not_empty", scope: !301, file: !301, line: 372, type: !4344, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!2431, !3779}
!4346 = !DILocalVariable(name: "list", arg: 1, scope: !4343, file: !301, line: 372, type: !3779)
!4347 = !DILocation(line: 372, column: 1, scope: !4343)
!4348 = !DILocalVariable(name: "node", scope: !4343, file: !301, line: 372, type: !2431)
!4349 = !DILocation(line: 372, column: 1, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4343, file: !301, line: 372, column: 1)
!4351 = !DILocation(line: 372, column: 1, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4350, file: !301, line: 372, column: 1)
!4353 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !301, file: !301, line: 231, type: !4344, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4354 = !DILocalVariable(name: "list", arg: 1, scope: !4353, file: !301, line: 231, type: !3779)
!4355 = !DILocation(line: 231, column: 61, scope: !4353)
!4356 = !DILocation(line: 233, column: 9, scope: !4353)
!4357 = !DILocation(line: 233, column: 15, scope: !4353)
!4358 = !DILocation(line: 233, column: 2, scope: !4353)
!4359 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !301, file: !301, line: 204, type: !4360, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!2431, !2431}
!4362 = !DILocalVariable(name: "node", arg: 1, scope: !4359, file: !301, line: 204, type: !2431)
!4363 = !DILocation(line: 204, column: 59, scope: !4359)
!4364 = !DILocation(line: 206, column: 9, scope: !4359)
!4365 = !DILocation(line: 206, column: 15, scope: !4359)
!4366 = !DILocation(line: 206, column: 2, scope: !4359)
!4367 = distinct !DISubprogram(name: "z_slist_head_set", scope: !301, file: !301, line: 214, type: !3777, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4368 = !DILocalVariable(name: "list", arg: 1, scope: !4367, file: !301, line: 214, type: !3779)
!4369 = !DILocation(line: 214, column: 50, scope: !4367)
!4370 = !DILocalVariable(name: "node", arg: 2, scope: !4367, file: !301, line: 214, type: !2431)
!4371 = !DILocation(line: 214, column: 69, scope: !4367)
!4372 = !DILocation(line: 216, column: 15, scope: !4367)
!4373 = !DILocation(line: 216, column: 2, scope: !4367)
!4374 = !DILocation(line: 216, column: 8, scope: !4367)
!4375 = !DILocation(line: 216, column: 13, scope: !4367)
!4376 = !DILocation(line: 217, column: 1, scope: !4367)
!4377 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !301, file: !301, line: 243, type: !4344, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4378 = !DILocalVariable(name: "list", arg: 1, scope: !4377, file: !301, line: 243, type: !3779)
!4379 = !DILocation(line: 243, column: 61, scope: !4377)
!4380 = !DILocation(line: 245, column: 9, scope: !4377)
!4381 = !DILocation(line: 245, column: 15, scope: !4377)
!4382 = !DILocation(line: 245, column: 2, scope: !4377)
!4383 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !301, file: !301, line: 219, type: !3777, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4384 = !DILocalVariable(name: "list", arg: 1, scope: !4383, file: !301, line: 219, type: !3779)
!4385 = !DILocation(line: 219, column: 50, scope: !4383)
!4386 = !DILocalVariable(name: "node", arg: 2, scope: !4383, file: !301, line: 219, type: !2431)
!4387 = !DILocation(line: 219, column: 69, scope: !4383)
!4388 = !DILocation(line: 221, column: 15, scope: !4383)
!4389 = !DILocation(line: 221, column: 2, scope: !4383)
!4390 = !DILocation(line: 221, column: 8, scope: !4383)
!4391 = !DILocation(line: 221, column: 13, scope: !4383)
!4392 = !DILocation(line: 222, column: 1, scope: !4383)
!4393 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !301, file: !301, line: 285, type: !4360, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4394 = !DILocalVariable(name: "node", arg: 1, scope: !4393, file: !301, line: 285, type: !2431)
!4395 = !DILocation(line: 285, column: 1, scope: !4393)
!4396 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !301, file: !301, line: 274, type: !4360, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4397 = !DILocalVariable(name: "node", arg: 1, scope: !4396, file: !301, line: 274, type: !2431)
!4398 = !DILocation(line: 274, column: 1, scope: !4396)
!4399 = distinct !DISubprogram(name: "z_snode_next_set", scope: !301, file: !301, line: 209, type: !4400, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{null, !2431, !2431}
!4402 = !DILocalVariable(name: "parent", arg: 1, scope: !4399, file: !301, line: 209, type: !2431)
!4403 = !DILocation(line: 209, column: 50, scope: !4399)
!4404 = !DILocalVariable(name: "child", arg: 2, scope: !4399, file: !301, line: 209, type: !2431)
!4405 = !DILocation(line: 209, column: 71, scope: !4399)
!4406 = !DILocation(line: 211, column: 17, scope: !4399)
!4407 = !DILocation(line: 211, column: 2, scope: !4399)
!4408 = !DILocation(line: 211, column: 10, scope: !4399)
!4409 = !DILocation(line: 211, column: 15, scope: !4399)
!4410 = !DILocation(line: 212, column: 1, scope: !4399)
!4411 = distinct !DISubprogram(name: "onoff_release", scope: !2366, file: !2366, line: 478, type: !4087, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4412 = !DILocalVariable(name: "mgr", arg: 1, scope: !4411, file: !2366, line: 478, type: !2423)
!4413 = !DILocation(line: 478, column: 41, scope: !4411)
!4414 = !DILocalVariable(name: "stop", scope: !4411, file: !2366, line: 480, type: !717)
!4415 = !DILocation(line: 480, column: 7, scope: !4411)
!4416 = !DILocalVariable(name: "key", scope: !4411, file: !2366, line: 482, type: !3595)
!4417 = !DILocation(line: 482, column: 19, scope: !4411)
!4418 = !DILocation(line: 482, column: 38, scope: !4411)
!4419 = !DILocation(line: 482, column: 43, scope: !4411)
!4420 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !4421)
!4421 = distinct !DILocation(line: 482, column: 25, scope: !4411)
!4422 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !4421)
!4423 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !4421)
!4424 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !4425)
!4425 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !4421)
!4426 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !4425)
!4427 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !4425)
!4428 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !4421)
!4429 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !4421)
!4430 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !4421)
!4431 = !DILocation(line: 482, column: 25, scope: !4411)
!4432 = !DILocalVariable(name: "state", scope: !4411, file: !2366, line: 483, type: !173)
!4433 = !DILocation(line: 483, column: 11, scope: !4411)
!4434 = !DILocation(line: 483, column: 19, scope: !4411)
!4435 = !DILocation(line: 483, column: 24, scope: !4411)
!4436 = !DILocation(line: 483, column: 30, scope: !4411)
!4437 = !DILocalVariable(name: "rv", scope: !4411, file: !2366, line: 484, type: !103)
!4438 = !DILocation(line: 484, column: 6, scope: !4411)
!4439 = !DILocation(line: 484, column: 11, scope: !4411)
!4440 = !DILocation(line: 486, column: 6, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4411, file: !2366, line: 486, column: 6)
!4442 = !DILocation(line: 486, column: 12, scope: !4441)
!4443 = !DILocation(line: 486, column: 6, scope: !4411)
!4444 = !DILocation(line: 487, column: 7, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !2366, line: 487, column: 7)
!4446 = distinct !DILexicalBlock(scope: !4441, file: !2366, line: 486, column: 31)
!4447 = !DILocation(line: 487, column: 13, scope: !4445)
!4448 = !DILocation(line: 487, column: 7, scope: !4446)
!4449 = !DILocation(line: 488, column: 7, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !2366, line: 487, column: 35)
!4451 = !DILocation(line: 489, column: 3, scope: !4450)
!4452 = !DILocation(line: 490, column: 7, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4445, file: !2366, line: 489, column: 10)
!4454 = !DILocation(line: 492, column: 3, scope: !4446)
!4455 = !DILocation(line: 496, column: 2, scope: !4411)
!4456 = !DILocation(line: 496, column: 7, scope: !4411)
!4457 = !DILocation(line: 496, column: 12, scope: !4411)
!4458 = !DILocation(line: 497, column: 10, scope: !4411)
!4459 = !DILocation(line: 497, column: 15, scope: !4411)
!4460 = !DILocation(line: 497, column: 20, scope: !4411)
!4461 = !DILocation(line: 497, column: 7, scope: !4411)
!4462 = !DILocation(line: 497, column: 2, scope: !4411)
!4463 = !DILabel(scope: !4411, name: "out", file: !2366, line: 499)
!4464 = !DILocation(line: 499, column: 1, scope: !4411)
!4465 = !DILocation(line: 500, column: 6, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4411, file: !2366, line: 500, column: 6)
!4467 = !DILocation(line: 500, column: 6, scope: !4411)
!4468 = !DILocation(line: 501, column: 17, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4466, file: !2366, line: 500, column: 12)
!4470 = !DILocation(line: 501, column: 3, scope: !4469)
!4471 = !DILocation(line: 502, column: 2, scope: !4469)
!4472 = !DILocation(line: 503, column: 18, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4466, file: !2366, line: 502, column: 9)
!4474 = !DILocation(line: 503, column: 23, scope: !4473)
!4475 = !DILocation(line: 503, column: 3, scope: !4473)
!4476 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !4477)
!4477 = distinct !DILocation(line: 503, column: 3, scope: !4473)
!4478 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !4477)
!4479 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !4477)
!4480 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !4477)
!4481 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !4482)
!4482 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !4477)
!4483 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !4482)
!4484 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !4482)
!4485 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !4482)
!4486 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !4482)
!4487 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !4482)
!4488 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !4482)
!4489 = !DILocation(line: 506, column: 9, scope: !4411)
!4490 = !DILocation(line: 506, column: 2, scope: !4411)
!4491 = distinct !DISubprogram(name: "onoff_reset", scope: !2366, file: !2366, line: 509, type: !3570, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4492 = !DILocalVariable(name: "mgr", arg: 1, scope: !4491, file: !2366, line: 509, type: !2423)
!4493 = !DILocation(line: 509, column: 39, scope: !4491)
!4494 = !DILocalVariable(name: "cli", arg: 2, scope: !4491, file: !2366, line: 510, type: !2375)
!4495 = !DILocation(line: 510, column: 24, scope: !4491)
!4496 = !DILocalVariable(name: "reset", scope: !4491, file: !2366, line: 512, type: !717)
!4497 = !DILocation(line: 512, column: 7, scope: !4491)
!4498 = !DILocalVariable(name: "rv", scope: !4491, file: !2366, line: 513, type: !103)
!4499 = !DILocation(line: 513, column: 6, scope: !4491)
!4500 = !DILocation(line: 513, column: 25, scope: !4491)
!4501 = !DILocation(line: 513, column: 30, scope: !4491)
!4502 = !DILocation(line: 513, column: 11, scope: !4491)
!4503 = !DILocation(line: 515, column: 7, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4491, file: !2366, line: 515, column: 6)
!4505 = !DILocation(line: 515, column: 10, scope: !4504)
!4506 = !DILocation(line: 516, column: 6, scope: !4504)
!4507 = !DILocation(line: 516, column: 10, scope: !4504)
!4508 = !DILocation(line: 516, column: 15, scope: !4504)
!4509 = !DILocation(line: 516, column: 28, scope: !4504)
!4510 = !DILocation(line: 516, column: 34, scope: !4504)
!4511 = !DILocation(line: 515, column: 6, scope: !4491)
!4512 = !DILocation(line: 517, column: 6, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4504, file: !2366, line: 516, column: 44)
!4514 = !DILocation(line: 518, column: 2, scope: !4513)
!4515 = !DILocation(line: 520, column: 6, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4491, file: !2366, line: 520, column: 6)
!4517 = !DILocation(line: 520, column: 9, scope: !4516)
!4518 = !DILocation(line: 520, column: 6, scope: !4491)
!4519 = !DILocation(line: 521, column: 10, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4516, file: !2366, line: 520, column: 14)
!4521 = !DILocation(line: 521, column: 3, scope: !4520)
!4522 = !DILocalVariable(name: "key", scope: !4491, file: !2366, line: 524, type: !3595)
!4523 = !DILocation(line: 524, column: 19, scope: !4491)
!4524 = !DILocation(line: 524, column: 38, scope: !4491)
!4525 = !DILocation(line: 524, column: 43, scope: !4491)
!4526 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !4527)
!4527 = distinct !DILocation(line: 524, column: 25, scope: !4491)
!4528 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !4527)
!4529 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !4527)
!4530 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !4531)
!4531 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !4527)
!4532 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !4531)
!4533 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !4531)
!4534 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !4527)
!4535 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !4527)
!4536 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !4527)
!4537 = !DILocation(line: 524, column: 25, scope: !4491)
!4538 = !DILocalVariable(name: "state", scope: !4491, file: !2366, line: 525, type: !173)
!4539 = !DILocation(line: 525, column: 11, scope: !4491)
!4540 = !DILocation(line: 525, column: 19, scope: !4491)
!4541 = !DILocation(line: 525, column: 24, scope: !4491)
!4542 = !DILocation(line: 525, column: 30, scope: !4491)
!4543 = !DILocation(line: 527, column: 7, scope: !4491)
!4544 = !DILocation(line: 527, column: 5, scope: !4491)
!4545 = !DILocation(line: 529, column: 7, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4491, file: !2366, line: 529, column: 6)
!4547 = !DILocation(line: 529, column: 13, scope: !4546)
!4548 = !DILocation(line: 529, column: 33, scope: !4546)
!4549 = !DILocation(line: 529, column: 6, scope: !4491)
!4550 = !DILocation(line: 530, column: 6, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4546, file: !2366, line: 529, column: 39)
!4552 = !DILocation(line: 531, column: 2, scope: !4551)
!4553 = !DILocation(line: 532, column: 12, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4546, file: !2366, line: 531, column: 9)
!4555 = !DILocation(line: 532, column: 18, scope: !4554)
!4556 = !DILocation(line: 532, column: 9, scope: !4554)
!4557 = !DILocation(line: 533, column: 21, scope: !4554)
!4558 = !DILocation(line: 533, column: 26, scope: !4554)
!4559 = !DILocation(line: 533, column: 36, scope: !4554)
!4560 = !DILocation(line: 533, column: 41, scope: !4554)
!4561 = !DILocation(line: 533, column: 3, scope: !4554)
!4562 = !DILocation(line: 536, column: 6, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4491, file: !2366, line: 536, column: 6)
!4564 = !DILocation(line: 536, column: 6, scope: !4491)
!4565 = !DILocation(line: 537, column: 17, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !2366, line: 536, column: 13)
!4567 = !DILocation(line: 537, column: 3, scope: !4566)
!4568 = !DILocation(line: 538, column: 2, scope: !4566)
!4569 = !DILocation(line: 539, column: 18, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4563, file: !2366, line: 538, column: 9)
!4571 = !DILocation(line: 539, column: 23, scope: !4570)
!4572 = !DILocation(line: 539, column: 3, scope: !4570)
!4573 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !4574)
!4574 = distinct !DILocation(line: 539, column: 3, scope: !4570)
!4575 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !4574)
!4576 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !4574)
!4577 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !4574)
!4578 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !4579)
!4579 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !4574)
!4580 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !4579)
!4581 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !4579)
!4582 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !4579)
!4583 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !4579)
!4584 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !4579)
!4585 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !4579)
!4586 = !DILocation(line: 542, column: 9, scope: !4491)
!4587 = !DILocation(line: 542, column: 2, scope: !4491)
!4588 = !DILocation(line: 543, column: 1, scope: !4491)
!4589 = distinct !DISubprogram(name: "onoff_cancel", scope: !2366, file: !2366, line: 545, type: !3570, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4590 = !DILocalVariable(name: "mgr", arg: 1, scope: !4589, file: !2366, line: 545, type: !2423)
!4591 = !DILocation(line: 545, column: 40, scope: !4589)
!4592 = !DILocalVariable(name: "cli", arg: 2, scope: !4589, file: !2366, line: 546, type: !2375)
!4593 = !DILocation(line: 546, column: 25, scope: !4589)
!4594 = !DILocation(line: 548, column: 7, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4589, file: !2366, line: 548, column: 6)
!4596 = !DILocation(line: 548, column: 11, scope: !4595)
!4597 = !DILocation(line: 548, column: 20, scope: !4595)
!4598 = !DILocation(line: 548, column: 24, scope: !4595)
!4599 = !DILocation(line: 548, column: 28, scope: !4595)
!4600 = !DILocation(line: 548, column: 6, scope: !4589)
!4601 = !DILocation(line: 549, column: 3, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4595, file: !2366, line: 548, column: 38)
!4603 = !DILocalVariable(name: "rv", scope: !4589, file: !2366, line: 552, type: !103)
!4604 = !DILocation(line: 552, column: 6, scope: !4589)
!4605 = !DILocalVariable(name: "key", scope: !4589, file: !2366, line: 553, type: !3595)
!4606 = !DILocation(line: 553, column: 19, scope: !4589)
!4607 = !DILocation(line: 553, column: 38, scope: !4589)
!4608 = !DILocation(line: 553, column: 43, scope: !4589)
!4609 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !4610)
!4610 = distinct !DILocation(line: 553, column: 25, scope: !4589)
!4611 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !4610)
!4612 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !4610)
!4613 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !4614)
!4614 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !4610)
!4615 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !4614)
!4616 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !4614)
!4617 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !4610)
!4618 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !4610)
!4619 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !4610)
!4620 = !DILocation(line: 553, column: 25, scope: !4589)
!4621 = !DILocalVariable(name: "state", scope: !4589, file: !2366, line: 554, type: !173)
!4622 = !DILocation(line: 554, column: 11, scope: !4589)
!4623 = !DILocation(line: 554, column: 19, scope: !4589)
!4624 = !DILocation(line: 554, column: 24, scope: !4589)
!4625 = !DILocation(line: 554, column: 30, scope: !4589)
!4626 = !DILocation(line: 556, column: 33, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4589, file: !2366, line: 556, column: 6)
!4628 = !DILocation(line: 556, column: 38, scope: !4627)
!4629 = !DILocation(line: 556, column: 48, scope: !4627)
!4630 = !DILocation(line: 556, column: 53, scope: !4627)
!4631 = !DILocation(line: 556, column: 6, scope: !4627)
!4632 = !DILocation(line: 556, column: 6, scope: !4589)
!4633 = !DILocation(line: 560, column: 8, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4627, file: !2366, line: 556, column: 60)
!4635 = !DILocation(line: 560, column: 6, scope: !4634)
!4636 = !DILocation(line: 561, column: 2, scope: !4634)
!4637 = !DILocation(line: 563, column: 17, scope: !4589)
!4638 = !DILocation(line: 563, column: 22, scope: !4589)
!4639 = !DILocation(line: 563, column: 2, scope: !4589)
!4640 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !4641)
!4641 = distinct !DILocation(line: 563, column: 2, scope: !4589)
!4642 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !4641)
!4643 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !4641)
!4644 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !4641)
!4645 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !4646)
!4646 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !4641)
!4647 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !4646)
!4648 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !4646)
!4649 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !4646)
!4650 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !4646)
!4651 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !4646)
!4652 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !4646)
!4653 = !DILocation(line: 565, column: 9, scope: !4589)
!4654 = !DILocation(line: 565, column: 2, scope: !4589)
!4655 = !DILocation(line: 566, column: 1, scope: !4589)
!4656 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !301, file: !301, line: 417, type: !4657, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4657 = !DISubroutineType(types: !4658)
!4658 = !{!717, !3779, !2431}
!4659 = !DILocalVariable(name: "list", arg: 1, scope: !4656, file: !301, line: 417, type: !3779)
!4660 = !DILocation(line: 417, column: 1, scope: !4656)
!4661 = !DILocalVariable(name: "node", arg: 2, scope: !4656, file: !301, line: 417, type: !2431)
!4662 = !DILocalVariable(name: "prev", scope: !4656, file: !301, line: 417, type: !2431)
!4663 = !DILocalVariable(name: "test", scope: !4656, file: !301, line: 417, type: !2431)
!4664 = !DILocation(line: 417, column: 1, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4656, file: !301, line: 417, column: 1)
!4666 = !DILocation(line: 417, column: 1, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4665, file: !301, line: 417, column: 1)
!4668 = !DILocation(line: 417, column: 1, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !301, line: 417, column: 1)
!4670 = distinct !DILexicalBlock(scope: !4667, file: !301, line: 417, column: 1)
!4671 = !DILocation(line: 417, column: 1, scope: !4670)
!4672 = !DILocation(line: 417, column: 1, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4669, file: !301, line: 417, column: 1)
!4674 = distinct !{!4674, !4664, !4664}
!4675 = distinct !DISubprogram(name: "sys_slist_remove", scope: !301, file: !301, line: 401, type: !4676, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4676 = !DISubroutineType(types: !4677)
!4677 = !{null, !3779, !2431, !2431}
!4678 = !DILocalVariable(name: "list", arg: 1, scope: !4675, file: !301, line: 401, type: !3779)
!4679 = !DILocation(line: 401, column: 1, scope: !4675)
!4680 = !DILocalVariable(name: "prev_node", arg: 2, scope: !4675, file: !301, line: 401, type: !2431)
!4681 = !DILocalVariable(name: "node", arg: 3, scope: !4675, file: !301, line: 401, type: !2431)
!4682 = !DILocation(line: 401, column: 1, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4675, file: !301, line: 401, column: 1)
!4684 = !DILocation(line: 401, column: 1, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4683, file: !301, line: 401, column: 1)
!4686 = !DILocation(line: 401, column: 1, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4685, file: !301, line: 401, column: 1)
!4688 = !DILocation(line: 401, column: 1, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4687, file: !301, line: 401, column: 1)
!4690 = !DILocation(line: 401, column: 1, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4683, file: !301, line: 401, column: 1)
!4692 = !DILocation(line: 401, column: 1, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4691, file: !301, line: 401, column: 1)
!4694 = !DILocation(line: 401, column: 1, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4693, file: !301, line: 401, column: 1)
!4696 = distinct !DISubprogram(name: "onoff_monitor_register", scope: !2366, file: !2366, line: 568, type: !4697, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!103, !2423, !2414}
!4699 = !DILocalVariable(name: "mgr", arg: 1, scope: !4696, file: !2366, line: 568, type: !2423)
!4700 = !DILocation(line: 568, column: 50, scope: !4696)
!4701 = !DILocalVariable(name: "mon", arg: 2, scope: !4696, file: !2366, line: 569, type: !2414)
!4702 = !DILocation(line: 569, column: 29, scope: !4696)
!4703 = !DILocation(line: 571, column: 7, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4696, file: !2366, line: 571, column: 6)
!4705 = !DILocation(line: 571, column: 11, scope: !4704)
!4706 = !DILocation(line: 572, column: 6, scope: !4704)
!4707 = !DILocation(line: 572, column: 10, scope: !4704)
!4708 = !DILocation(line: 572, column: 14, scope: !4704)
!4709 = !DILocation(line: 573, column: 6, scope: !4704)
!4710 = !DILocation(line: 573, column: 10, scope: !4704)
!4711 = !DILocation(line: 573, column: 15, scope: !4704)
!4712 = !DILocation(line: 573, column: 24, scope: !4704)
!4713 = !DILocation(line: 571, column: 6, scope: !4696)
!4714 = !DILocation(line: 574, column: 3, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4704, file: !2366, line: 573, column: 34)
!4716 = !DILocalVariable(name: "key", scope: !4696, file: !2366, line: 577, type: !3595)
!4717 = !DILocation(line: 577, column: 19, scope: !4696)
!4718 = !DILocation(line: 577, column: 38, scope: !4696)
!4719 = !DILocation(line: 577, column: 43, scope: !4696)
!4720 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !4721)
!4721 = distinct !DILocation(line: 577, column: 25, scope: !4696)
!4722 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !4721)
!4723 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !4721)
!4724 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !4725)
!4725 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !4721)
!4726 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !4725)
!4727 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !4725)
!4728 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !4721)
!4729 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !4721)
!4730 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !4721)
!4731 = !DILocation(line: 577, column: 25, scope: !4696)
!4732 = !DILocation(line: 579, column: 20, scope: !4696)
!4733 = !DILocation(line: 579, column: 25, scope: !4696)
!4734 = !DILocation(line: 579, column: 36, scope: !4696)
!4735 = !DILocation(line: 579, column: 41, scope: !4696)
!4736 = !DILocation(line: 579, column: 2, scope: !4696)
!4737 = !DILocation(line: 581, column: 17, scope: !4696)
!4738 = !DILocation(line: 581, column: 22, scope: !4696)
!4739 = !DILocation(line: 581, column: 2, scope: !4696)
!4740 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !4741)
!4741 = distinct !DILocation(line: 581, column: 2, scope: !4696)
!4742 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !4741)
!4743 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !4741)
!4744 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !4741)
!4745 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !4746)
!4746 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !4741)
!4747 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !4746)
!4748 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !4746)
!4749 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !4746)
!4750 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !4746)
!4751 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !4746)
!4752 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !4746)
!4753 = !DILocation(line: 583, column: 2, scope: !4696)
!4754 = !DILocation(line: 584, column: 1, scope: !4696)
!4755 = distinct !DISubprogram(name: "onoff_monitor_unregister", scope: !2366, file: !2366, line: 586, type: !4697, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4756 = !DILocalVariable(name: "mgr", arg: 1, scope: !4755, file: !2366, line: 586, type: !2423)
!4757 = !DILocation(line: 586, column: 52, scope: !4755)
!4758 = !DILocalVariable(name: "mon", arg: 2, scope: !4755, file: !2366, line: 587, type: !2414)
!4759 = !DILocation(line: 587, column: 31, scope: !4755)
!4760 = !DILocalVariable(name: "rv", scope: !4755, file: !2366, line: 589, type: !103)
!4761 = !DILocation(line: 589, column: 6, scope: !4755)
!4762 = !DILocation(line: 591, column: 7, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4755, file: !2366, line: 591, column: 6)
!4764 = !DILocation(line: 591, column: 11, scope: !4763)
!4765 = !DILocation(line: 592, column: 6, scope: !4763)
!4766 = !DILocation(line: 592, column: 10, scope: !4763)
!4767 = !DILocation(line: 592, column: 14, scope: !4763)
!4768 = !DILocation(line: 591, column: 6, scope: !4755)
!4769 = !DILocation(line: 593, column: 10, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4763, file: !2366, line: 592, column: 24)
!4771 = !DILocation(line: 593, column: 3, scope: !4770)
!4772 = !DILocalVariable(name: "key", scope: !4755, file: !2366, line: 596, type: !3595)
!4773 = !DILocation(line: 596, column: 19, scope: !4755)
!4774 = !DILocation(line: 596, column: 38, scope: !4755)
!4775 = !DILocation(line: 596, column: 43, scope: !4755)
!4776 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !4777)
!4777 = distinct !DILocation(line: 596, column: 25, scope: !4755)
!4778 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !4777)
!4779 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !4777)
!4780 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !4781)
!4781 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !4777)
!4782 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !4781)
!4783 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !4781)
!4784 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !4777)
!4785 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !4777)
!4786 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !4777)
!4787 = !DILocation(line: 596, column: 25, scope: !4755)
!4788 = !DILocation(line: 598, column: 33, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4755, file: !2366, line: 598, column: 6)
!4790 = !DILocation(line: 598, column: 38, scope: !4789)
!4791 = !DILocation(line: 598, column: 49, scope: !4789)
!4792 = !DILocation(line: 598, column: 54, scope: !4789)
!4793 = !DILocation(line: 598, column: 6, scope: !4789)
!4794 = !DILocation(line: 598, column: 6, scope: !4755)
!4795 = !DILocation(line: 599, column: 6, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4789, file: !2366, line: 598, column: 61)
!4797 = !DILocation(line: 600, column: 2, scope: !4796)
!4798 = !DILocation(line: 602, column: 17, scope: !4755)
!4799 = !DILocation(line: 602, column: 22, scope: !4755)
!4800 = !DILocation(line: 602, column: 2, scope: !4755)
!4801 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !4802)
!4802 = distinct !DILocation(line: 602, column: 2, scope: !4755)
!4803 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !4802)
!4804 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !4802)
!4805 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !4802)
!4806 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !4807)
!4807 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !4802)
!4808 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !4807)
!4809 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !4807)
!4810 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !4807)
!4811 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !4807)
!4812 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !4807)
!4813 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !4807)
!4814 = !DILocation(line: 604, column: 9, scope: !4755)
!4815 = !DILocation(line: 604, column: 2, scope: !4755)
!4816 = !DILocation(line: 605, column: 1, scope: !4755)
!4817 = distinct !DISubprogram(name: "onoff_sync_lock", scope: !2366, file: !2366, line: 607, type: !4818, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!103, !4820, !4825}
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 32)
!4821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "onoff_sync_service", file: !752, line: 574, size: 32, elements: !4822)
!4822 = !{!4823, !4824}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4821, file: !752, line: 576, baseType: !2451)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4821, file: !752, line: 579, baseType: !250, size: 32)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 32)
!4826 = !DILocalVariable(name: "srv", arg: 1, scope: !4817, file: !2366, line: 607, type: !4820)
!4827 = !DILocation(line: 607, column: 48, scope: !4817)
!4828 = !DILocalVariable(name: "keyp", arg: 2, scope: !4817, file: !2366, line: 608, type: !4825)
!4829 = !DILocation(line: 608, column: 25, scope: !4817)
!4830 = !DILocation(line: 610, column: 3, scope: !4817)
!4831 = !DILocation(line: 610, column: 23, scope: !4817)
!4832 = !DILocation(line: 610, column: 28, scope: !4817)
!4833 = !DILocation(line: 136, column: 70, scope: !3603, inlinedAt: !4834)
!4834 = distinct !DILocation(line: 610, column: 10, scope: !4817)
!4835 = !DILocation(line: 138, column: 2, scope: !3603, inlinedAt: !4834)
!4836 = !DILocation(line: 139, column: 19, scope: !3603, inlinedAt: !4834)
!4837 = !DILocation(line: 44, column: 15, scope: !3613, inlinedAt: !4838)
!4838 = distinct !DILocation(line: 145, column: 10, scope: !3603, inlinedAt: !4834)
!4839 = !DILocation(line: 47, column: 2, scope: !3613, inlinedAt: !4838)
!4840 = !DILocation(line: 76, column: 9, scope: !3613, inlinedAt: !4838)
!4841 = !DILocation(line: 145, column: 4, scope: !3603, inlinedAt: !4834)
!4842 = !DILocation(line: 145, column: 8, scope: !3603, inlinedAt: !4834)
!4843 = !DILocation(line: 165, column: 2, scope: !3603, inlinedAt: !4834)
!4844 = !DILocation(line: 610, column: 10, scope: !4817)
!4845 = !DILocation(line: 611, column: 9, scope: !4817)
!4846 = !DILocation(line: 611, column: 14, scope: !4817)
!4847 = !DILocation(line: 611, column: 2, scope: !4817)
!4848 = distinct !DISubprogram(name: "onoff_sync_finalize", scope: !2366, file: !2366, line: 614, type: !4849, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !223)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!103, !4820, !3595, !2375, !103, !717}
!4851 = !DILocalVariable(name: "srv", arg: 1, scope: !4848, file: !2366, line: 614, type: !4820)
!4852 = !DILocation(line: 614, column: 52, scope: !4848)
!4853 = !DILocalVariable(name: "key", arg: 2, scope: !4848, file: !2366, line: 615, type: !3595)
!4854 = !DILocation(line: 615, column: 21, scope: !4848)
!4855 = !DILocalVariable(name: "cli", arg: 3, scope: !4848, file: !2366, line: 616, type: !2375)
!4856 = !DILocation(line: 616, column: 25, scope: !4848)
!4857 = !DILocalVariable(name: "res", arg: 4, scope: !4848, file: !2366, line: 617, type: !103)
!4858 = !DILocation(line: 617, column: 8, scope: !4848)
!4859 = !DILocalVariable(name: "on", arg: 5, scope: !4848, file: !2366, line: 618, type: !717)
!4860 = !DILocation(line: 618, column: 9, scope: !4848)
!4861 = !DILocalVariable(name: "state", scope: !4848, file: !2366, line: 620, type: !173)
!4862 = !DILocation(line: 620, column: 11, scope: !4848)
!4863 = !DILocation(line: 626, column: 6, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4848, file: !2366, line: 626, column: 6)
!4865 = !DILocation(line: 626, column: 11, scope: !4864)
!4866 = !DILocation(line: 626, column: 17, scope: !4864)
!4867 = !DILocation(line: 626, column: 6, scope: !4848)
!4868 = !DILocation(line: 627, column: 3, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4864, file: !2366, line: 626, column: 22)
!4870 = !DILocation(line: 627, column: 8, scope: !4869)
!4871 = !DILocation(line: 627, column: 14, scope: !4869)
!4872 = !DILocation(line: 628, column: 2, scope: !4869)
!4873 = !DILocation(line: 629, column: 6, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4848, file: !2366, line: 629, column: 6)
!4875 = !DILocation(line: 629, column: 10, scope: !4874)
!4876 = !DILocation(line: 629, column: 6, scope: !4848)
!4877 = !DILocation(line: 630, column: 16, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4874, file: !2366, line: 629, column: 15)
!4879 = !DILocation(line: 630, column: 3, scope: !4878)
!4880 = !DILocation(line: 630, column: 8, scope: !4878)
!4881 = !DILocation(line: 630, column: 14, scope: !4878)
!4882 = !DILocation(line: 631, column: 9, scope: !4878)
!4883 = !DILocation(line: 632, column: 2, scope: !4878)
!4884 = !DILocation(line: 632, column: 13, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4874, file: !2366, line: 632, column: 13)
!4886 = !DILocation(line: 632, column: 13, scope: !4874)
!4887 = !DILocation(line: 633, column: 3, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4885, file: !2366, line: 632, column: 17)
!4889 = !DILocation(line: 633, column: 8, scope: !4888)
!4890 = !DILocation(line: 633, column: 14, scope: !4888)
!4891 = !DILocation(line: 634, column: 2, scope: !4888)
!4892 = !DILocation(line: 635, column: 3, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4885, file: !2366, line: 634, column: 9)
!4894 = !DILocation(line: 635, column: 8, scope: !4893)
!4895 = !DILocation(line: 635, column: 14, scope: !4893)
!4896 = !DILocalVariable(name: "rv", scope: !4848, file: !2366, line: 642, type: !103)
!4897 = !DILocation(line: 642, column: 6, scope: !4848)
!4898 = !DILocation(line: 642, column: 11, scope: !4848)
!4899 = !DILocation(line: 642, column: 16, scope: !4848)
!4900 = !DILocation(line: 644, column: 17, scope: !4848)
!4901 = !DILocation(line: 644, column: 22, scope: !4848)
!4902 = !DILocation(line: 644, column: 2, scope: !4848)
!4903 = !DILocation(line: 189, column: 60, scope: !3701, inlinedAt: !4904)
!4904 = distinct !DILocation(line: 644, column: 2, scope: !4848)
!4905 = !DILocation(line: 190, column: 23, scope: !3701, inlinedAt: !4904)
!4906 = !DILocation(line: 192, column: 2, scope: !3701, inlinedAt: !4904)
!4907 = !DILocation(line: 215, column: 22, scope: !3701, inlinedAt: !4904)
!4908 = !DILocation(line: 84, column: 56, scope: !3711, inlinedAt: !4909)
!4909 = distinct !DILocation(line: 215, column: 2, scope: !3701, inlinedAt: !4904)
!4910 = !DILocation(line: 87, column: 6, scope: !3717, inlinedAt: !4909)
!4911 = !DILocation(line: 87, column: 10, scope: !3717, inlinedAt: !4909)
!4912 = !DILocation(line: 87, column: 6, scope: !3711, inlinedAt: !4909)
!4913 = !DILocation(line: 88, column: 3, scope: !3721, inlinedAt: !4909)
!4914 = !DILocation(line: 90, column: 2, scope: !3711, inlinedAt: !4909)
!4915 = !DILocation(line: 110, column: 1, scope: !3711, inlinedAt: !4909)
!4916 = !DILocation(line: 646, column: 6, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4848, file: !2366, line: 646, column: 6)
!4918 = !DILocation(line: 646, column: 6, scope: !4848)
!4919 = !DILocation(line: 651, column: 20, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4917, file: !2366, line: 646, column: 11)
!4921 = !DILocation(line: 651, column: 25, scope: !4920)
!4922 = !DILocation(line: 651, column: 32, scope: !4920)
!4923 = !DILocation(line: 651, column: 3, scope: !4920)
!4924 = !DILocation(line: 652, column: 2, scope: !4920)
!4925 = !DILocation(line: 654, column: 9, scope: !4848)
!4926 = !DILocation(line: 654, column: 2, scope: !4848)
!4927 = distinct !DISubprogram(name: "sys_notify_validate", scope: !4928, file: !4928, line: 11, type: !4929, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!4928 = !DIFile(filename: "zephyr/lib/os/notify.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!103, !4931}
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 32)
!4932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_notify", file: !762, line: 138, size: 96, elements: !4933)
!4933 = !{!4934, !4959, !4960}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !4932, file: !762, line: 149, baseType: !4935, size: 32)
!4935 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "method", file: !762, line: 139, size: 32, elements: !4936)
!4936 = !{!4937, !4958}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4935, file: !762, line: 145, baseType: !4938, size: 32)
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4939, size: 32)
!4939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_poll_signal", file: !109, line: 5397, size: 128, elements: !4940)
!4940 = !{!4941, !4956, !4957}
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "poll_events", scope: !4939, file: !109, line: 5399, baseType: !4942, size: 64)
!4942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !4943)
!4943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !4944)
!4944 = !{!4945, !4951}
!4945 = !DIDerivedType(tag: DW_TAG_member, scope: !4943, file: !124, line: 38, baseType: !4946, size: 32)
!4946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4943, file: !124, line: 38, size: 32, elements: !4947)
!4947 = !{!4948, !4950}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4946, file: !124, line: 39, baseType: !4949, size: 32)
!4949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 32)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4946, file: !124, line: 40, baseType: !4949, size: 32)
!4951 = !DIDerivedType(tag: DW_TAG_member, scope: !4943, file: !124, line: 42, baseType: !4952, size: 32, offset: 32)
!4952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4943, file: !124, line: 42, size: 32, elements: !4953)
!4953 = !{!4954, !4955}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4952, file: !124, line: 43, baseType: !4949, size: 32)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4952, file: !124, line: 44, baseType: !4949, size: 32)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "signaled", scope: !4939, file: !109, line: 5405, baseType: !32, size: 32, offset: 64)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4939, file: !109, line: 5408, baseType: !103, size: 32, offset: 96)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4935, file: !762, line: 148, baseType: !789, size: 32)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4932, file: !762, line: 165, baseType: !447, size: 32, offset: 32)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4932, file: !762, line: 174, baseType: !795, size: 32, offset: 64)
!4961 = !DILocalVariable(name: "notify", arg: 1, scope: !4927, file: !4928, line: 11, type: !4931)
!4962 = !DILocation(line: 11, column: 44, scope: !4927)
!4963 = !DILocalVariable(name: "rv", scope: !4927, file: !4928, line: 13, type: !103)
!4964 = !DILocation(line: 13, column: 6, scope: !4927)
!4965 = !DILocation(line: 15, column: 6, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4927, file: !4928, line: 15, column: 6)
!4967 = !DILocation(line: 15, column: 13, scope: !4966)
!4968 = !DILocation(line: 15, column: 6, scope: !4927)
!4969 = !DILocation(line: 16, column: 3, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4966, file: !4928, line: 15, column: 22)
!4971 = !DILocation(line: 20, column: 32, scope: !4927)
!4972 = !DILocation(line: 20, column: 10, scope: !4927)
!4973 = !DILocation(line: 20, column: 2, scope: !4927)
!4974 = !DILocation(line: 22, column: 3, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4927, file: !4928, line: 20, column: 41)
!4976 = !DILocation(line: 24, column: 7, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4975, file: !4928, line: 24, column: 7)
!4978 = !DILocation(line: 24, column: 15, scope: !4977)
!4979 = !DILocation(line: 24, column: 22, scope: !4977)
!4980 = !DILocation(line: 24, column: 31, scope: !4977)
!4981 = !DILocation(line: 24, column: 7, scope: !4975)
!4982 = !DILocation(line: 25, column: 7, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4977, file: !4928, line: 24, column: 40)
!4984 = !DILocation(line: 26, column: 3, scope: !4983)
!4985 = !DILocation(line: 27, column: 3, scope: !4975)
!4986 = !DILocation(line: 36, column: 6, scope: !4975)
!4987 = !DILocation(line: 37, column: 3, scope: !4975)
!4988 = !DILocation(line: 41, column: 6, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4927, file: !4928, line: 41, column: 6)
!4990 = !DILocation(line: 41, column: 9, scope: !4989)
!4991 = !DILocation(line: 41, column: 6, scope: !4927)
!4992 = !DILocation(line: 42, column: 3, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4989, file: !4928, line: 41, column: 15)
!4994 = !DILocation(line: 42, column: 11, scope: !4993)
!4995 = !DILocation(line: 42, column: 18, scope: !4993)
!4996 = !DILocation(line: 43, column: 2, scope: !4993)
!4997 = !DILocation(line: 45, column: 9, scope: !4927)
!4998 = !DILocation(line: 45, column: 2, scope: !4927)
!4999 = !DILocation(line: 46, column: 1, scope: !4927)
!5000 = distinct !DISubprogram(name: "sys_notify_get_method", scope: !762, file: !762, line: 178, type: !5001, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!173, !5003}
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 32)
!5004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4932)
!5005 = !DILocalVariable(name: "notify", arg: 1, scope: !5000, file: !762, line: 178, type: !5003)
!5006 = !DILocation(line: 178, column: 71, scope: !5000)
!5007 = !DILocalVariable(name: "method", scope: !5000, file: !762, line: 180, type: !173)
!5008 = !DILocation(line: 180, column: 11, scope: !5000)
!5009 = !DILocation(line: 180, column: 20, scope: !5000)
!5010 = !DILocation(line: 180, column: 28, scope: !5000)
!5011 = !DILocation(line: 180, column: 34, scope: !5000)
!5012 = !DILocation(line: 182, column: 9, scope: !5000)
!5013 = !DILocation(line: 182, column: 16, scope: !5000)
!5014 = !DILocation(line: 182, column: 2, scope: !5000)
!5015 = distinct !DISubprogram(name: "sys_notify_finalize", scope: !4928, file: !4928, line: 48, type: !5016, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!789, !4931, !103}
!5018 = !DILocalVariable(name: "notify", arg: 1, scope: !5015, file: !4928, line: 48, type: !4931)
!5019 = !DILocation(line: 48, column: 68, scope: !5015)
!5020 = !DILocalVariable(name: "res", arg: 2, scope: !5015, file: !4928, line: 49, type: !103)
!5021 = !DILocation(line: 49, column: 15, scope: !5015)
!5022 = !DILocalVariable(name: "sig", scope: !5015, file: !4928, line: 51, type: !4938)
!5023 = !DILocation(line: 51, column: 24, scope: !5015)
!5024 = !DILocalVariable(name: "rv", scope: !5015, file: !4928, line: 52, type: !789)
!5025 = !DILocation(line: 52, column: 30, scope: !5015)
!5026 = !DILocalVariable(name: "method", scope: !5015, file: !4928, line: 53, type: !173)
!5027 = !DILocation(line: 53, column: 11, scope: !5015)
!5028 = !DILocation(line: 53, column: 42, scope: !5015)
!5029 = !DILocation(line: 53, column: 20, scope: !5015)
!5030 = !DILocation(line: 58, column: 19, scope: !5015)
!5031 = !DILocation(line: 58, column: 2, scope: !5015)
!5032 = !DILocation(line: 58, column: 10, scope: !5015)
!5033 = !DILocation(line: 58, column: 17, scope: !5015)
!5034 = !DILocation(line: 59, column: 10, scope: !5015)
!5035 = !DILocation(line: 59, column: 2, scope: !5015)
!5036 = !DILocation(line: 61, column: 3, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5015, file: !4928, line: 59, column: 18)
!5038 = !DILocation(line: 63, column: 8, scope: !5037)
!5039 = !DILocation(line: 63, column: 16, scope: !5037)
!5040 = !DILocation(line: 63, column: 23, scope: !5037)
!5041 = !DILocation(line: 63, column: 6, scope: !5037)
!5042 = !DILocation(line: 64, column: 3, scope: !5037)
!5043 = !DILocation(line: 66, column: 9, scope: !5037)
!5044 = !DILocation(line: 66, column: 17, scope: !5037)
!5045 = !DILocation(line: 66, column: 24, scope: !5037)
!5046 = !DILocation(line: 66, column: 7, scope: !5037)
!5047 = !DILocation(line: 67, column: 3, scope: !5037)
!5048 = !DILocation(line: 70, column: 2, scope: !5037)
!5049 = !DILocation(line: 76, column: 2, scope: !5015)
!5050 = !DILocation(line: 76, column: 2, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5015, file: !4928, line: 76, column: 2)
!5052 = !{i64 2149644743}
!5053 = !DILocation(line: 77, column: 2, scope: !5015)
!5054 = !DILocation(line: 77, column: 10, scope: !5015)
!5055 = !DILocation(line: 77, column: 16, scope: !5015)
!5056 = !DILocation(line: 83, column: 9, scope: !5015)
!5057 = !DILocation(line: 83, column: 2, scope: !5015)
!5058 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2465, file: !2465, line: 1338, type: !5059, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{!103, !3199, !102, !256, !5061, !173}
!5061 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3125, line: 99, baseType: !5062)
!5062 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3125, line: 40, baseType: !5063)
!5063 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2465, baseType: !5064)
!5064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5065)
!5065 = !{!5066}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5064, file: !2465, baseType: !102, size: 32)
!5067 = !DILocalVariable(name: "out", arg: 1, scope: !5058, file: !2465, line: 1338, type: !3199)
!5068 = !DILocation(line: 1338, column: 34, scope: !5058)
!5069 = !DILocalVariable(name: "ctx", arg: 2, scope: !5058, file: !2465, line: 1338, type: !102)
!5070 = !DILocation(line: 1338, column: 45, scope: !5058)
!5071 = !DILocalVariable(name: "fp", arg: 3, scope: !5058, file: !2465, line: 1338, type: !256)
!5072 = !DILocation(line: 1338, column: 62, scope: !5058)
!5073 = !DILocalVariable(name: "ap", arg: 4, scope: !5058, file: !2465, line: 1339, type: !5061)
!5074 = !DILocation(line: 1339, column: 16, scope: !5058)
!5075 = !DILocalVariable(name: "flags", arg: 5, scope: !5058, file: !2465, line: 1339, type: !173)
!5076 = !DILocation(line: 1339, column: 29, scope: !5058)
!5077 = !DILocalVariable(name: "buf", scope: !5058, file: !2465, line: 1341, type: !5078)
!5078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 176, elements: !5079)
!5079 = !{!5080}
!5080 = !DISubrange(count: 22)
!5081 = !DILocation(line: 1341, column: 7, scope: !5058)
!5082 = !DILocalVariable(name: "count", scope: !5058, file: !2465, line: 1342, type: !217)
!5083 = !DILocation(line: 1342, column: 9, scope: !5058)
!5084 = !DILocalVariable(name: "sint", scope: !5058, file: !2465, line: 1343, type: !2484)
!5085 = !DILocation(line: 1343, column: 18, scope: !5058)
!5086 = !DILocalVariable(name: "tagged_ap", scope: !5058, file: !2465, line: 1345, type: !5087)
!5087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!5088 = !DILocation(line: 1345, column: 13, scope: !5058)
!5089 = !DILocation(line: 1345, column: 26, scope: !5058)
!5090 = !DILocation(line: 1345, column: 32, scope: !5058)
!5091 = !DILocation(line: 1346, column: 11, scope: !5058)
!5092 = !DILocation(line: 1375, column: 2, scope: !5058)
!5093 = !DILocation(line: 1375, column: 10, scope: !5058)
!5094 = !DILocation(line: 1375, column: 9, scope: !5058)
!5095 = !DILocation(line: 1375, column: 13, scope: !5058)
!5096 = !DILocation(line: 1376, column: 8, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1376, column: 7)
!5098 = distinct !DILexicalBlock(scope: !5058, file: !2465, line: 1375, column: 19)
!5099 = !DILocation(line: 1376, column: 7, scope: !5097)
!5100 = !DILocation(line: 1376, column: 11, scope: !5097)
!5101 = !DILocation(line: 1376, column: 7, scope: !5098)
!5102 = !DILocation(line: 1377, column: 4, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5097, file: !2465, line: 1376, column: 19)
!5104 = !DILocalVariable(name: "rc", scope: !5105, file: !2465, line: 1377, type: !103)
!5105 = distinct !DILexicalBlock(scope: !5103, file: !2465, line: 1377, column: 4)
!5106 = !DILocation(line: 1377, column: 4, scope: !5105)
!5107 = !DILocation(line: 1377, column: 4, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5105, file: !2465, line: 1377, column: 4)
!5109 = !DILocation(line: 1377, column: 4, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5108, file: !2465, line: 1377, column: 4)
!5111 = !DILocation(line: 1378, column: 4, scope: !5103)
!5112 = distinct !{!5112, !5092, !5113}
!5113 = !DILocation(line: 1839, column: 2, scope: !5058)
!5114 = !DILocalVariable(name: "state", scope: !5098, file: !2465, line: 1395, type: !5115)
!5115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5058, file: !2465, line: 1392, size: 192, elements: !5116)
!5116 = !{!5117, !5127}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5115, file: !2465, line: 1393, baseType: !5118, size: 64)
!5118 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2465, line: 166, size: 64, elements: !5119)
!5119 = !{!5120, !5121, !5122, !5124, !5126}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5118, file: !2465, line: 168, baseType: !2484, size: 64)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5118, file: !2465, line: 171, baseType: !2487, size: 64)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5118, file: !2465, line: 174, baseType: !5123, size: 64)
!5123 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5118, file: !2465, line: 177, baseType: !5125, size: 64)
!5125 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5118, file: !2465, line: 180, baseType: !102, size: 32)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5115, file: !2465, line: 1394, baseType: !5128, size: 96, offset: 64)
!5128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2465, line: 189, size: 96, elements: !5129)
!5129 = !{!5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5154}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5128, file: !2465, line: 191, baseType: !717, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5128, file: !2465, line: 194, baseType: !717, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5128, file: !2465, line: 197, baseType: !717, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5128, file: !2465, line: 200, baseType: !717, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5128, file: !2465, line: 203, baseType: !717, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5128, file: !2465, line: 206, baseType: !717, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5128, file: !2465, line: 209, baseType: !717, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5128, file: !2465, line: 212, baseType: !717, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5128, file: !2465, line: 219, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5128, file: !2465, line: 222, baseType: !717, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5128, file: !2465, line: 229, baseType: !717, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5128, file: !2465, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5128, file: !2465, line: 238, baseType: !717, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5128, file: !2465, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5128, file: !2465, line: 244, baseType: !717, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5128, file: !2465, line: 247, baseType: !717, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5128, file: !2465, line: 252, baseType: !717, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5128, file: !2465, line: 257, baseType: !717, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5128, file: !2465, line: 260, baseType: !157, size: 8, offset: 24)
!5149 = !DIDerivedType(tag: DW_TAG_member, scope: !5128, file: !2465, line: 262, baseType: !5150, size: 32, offset: 32)
!5150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5128, file: !2465, line: 262, size: 32, elements: !5151)
!5151 = !{!5152, !5153}
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5150, file: !2465, line: 267, baseType: !103, size: 32)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5150, file: !2465, line: 289, baseType: !103, size: 32)
!5154 = !DIDerivedType(tag: DW_TAG_member, scope: !5128, file: !2465, line: 292, baseType: !5155, size: 32, offset: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5128, file: !2465, line: 292, size: 32, elements: !5156)
!5156 = !{!5157, !5158}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5155, file: !2465, line: 297, baseType: !103, size: 32)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5155, file: !2465, line: 306, baseType: !103, size: 32)
!5159 = !DILocation(line: 1395, column: 5, scope: !5098)
!5160 = !DILocalVariable(name: "conv", scope: !5098, file: !2465, line: 1400, type: !5161)
!5161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5162)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 32)
!5163 = !DILocation(line: 1400, column: 28, scope: !5098)
!5164 = !DILocation(line: 1400, column: 42, scope: !5098)
!5165 = !DILocalVariable(name: "value", scope: !5098, file: !2465, line: 1401, type: !5166)
!5166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5167)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 32)
!5168 = !DILocation(line: 1401, column: 31, scope: !5098)
!5169 = !DILocation(line: 1401, column: 46, scope: !5098)
!5170 = !DILocalVariable(name: "sp", scope: !5098, file: !2465, line: 1402, type: !256)
!5171 = !DILocation(line: 1402, column: 15, scope: !5098)
!5172 = !DILocation(line: 1402, column: 20, scope: !5098)
!5173 = !DILocalVariable(name: "width", scope: !5098, file: !2465, line: 1403, type: !103)
!5174 = !DILocation(line: 1403, column: 7, scope: !5098)
!5175 = !DILocalVariable(name: "precision", scope: !5098, file: !2465, line: 1404, type: !103)
!5176 = !DILocation(line: 1404, column: 7, scope: !5098)
!5177 = !DILocalVariable(name: "bps", scope: !5098, file: !2465, line: 1405, type: !256)
!5178 = !DILocation(line: 1405, column: 15, scope: !5098)
!5179 = !DILocalVariable(name: "bpe", scope: !5098, file: !2465, line: 1406, type: !256)
!5180 = !DILocation(line: 1406, column: 15, scope: !5098)
!5181 = !DILocation(line: 1406, column: 21, scope: !5098)
!5182 = !DILocation(line: 1406, column: 25, scope: !5098)
!5183 = !DILocalVariable(name: "sign", scope: !5098, file: !2465, line: 1407, type: !237)
!5184 = !DILocation(line: 1407, column: 8, scope: !5098)
!5185 = !DILocation(line: 1409, column: 27, scope: !5098)
!5186 = !DILocation(line: 1409, column: 33, scope: !5098)
!5187 = !DILocation(line: 1409, column: 8, scope: !5098)
!5188 = !DILocation(line: 1409, column: 6, scope: !5098)
!5189 = !DILocation(line: 1414, column: 7, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1414, column: 7)
!5191 = !DILocation(line: 1414, column: 13, scope: !5190)
!5192 = !DILocation(line: 1414, column: 7, scope: !5098)
!5193 = !DILocation(line: 1415, column: 12, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5190, file: !2465, line: 1414, column: 25)
!5195 = !DILocation(line: 1415, column: 10, scope: !5194)
!5196 = !DILocation(line: 1417, column: 8, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5194, file: !2465, line: 1417, column: 8)
!5198 = !DILocation(line: 1417, column: 14, scope: !5197)
!5199 = !DILocation(line: 1417, column: 8, scope: !5194)
!5200 = !DILocation(line: 1418, column: 5, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !2465, line: 1417, column: 19)
!5202 = !DILocation(line: 1418, column: 11, scope: !5201)
!5203 = !DILocation(line: 1418, column: 21, scope: !5201)
!5204 = !DILocation(line: 1419, column: 14, scope: !5201)
!5205 = !DILocation(line: 1419, column: 13, scope: !5201)
!5206 = !DILocation(line: 1419, column: 11, scope: !5201)
!5207 = !DILocation(line: 1420, column: 4, scope: !5201)
!5208 = !DILocation(line: 1421, column: 3, scope: !5194)
!5209 = !DILocation(line: 1421, column: 14, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5190, file: !2465, line: 1421, column: 14)
!5211 = !DILocation(line: 1421, column: 20, scope: !5210)
!5212 = !DILocation(line: 1421, column: 14, scope: !5190)
!5213 = !DILocation(line: 1422, column: 12, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !2465, line: 1421, column: 35)
!5215 = !DILocation(line: 1422, column: 18, scope: !5214)
!5216 = !DILocation(line: 1422, column: 10, scope: !5214)
!5217 = !DILocation(line: 1423, column: 3, scope: !5214)
!5218 = !DILocation(line: 1431, column: 7, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1431, column: 7)
!5220 = !DILocation(line: 1431, column: 13, scope: !5219)
!5221 = !DILocation(line: 1431, column: 7, scope: !5098)
!5222 = !DILocalVariable(name: "arg", scope: !5223, file: !2465, line: 1432, type: !103)
!5223 = distinct !DILexicalBlock(scope: !5219, file: !2465, line: 1431, column: 24)
!5224 = !DILocation(line: 1432, column: 8, scope: !5223)
!5225 = !DILocation(line: 1432, column: 14, scope: !5223)
!5226 = !DILocation(line: 1434, column: 8, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5223, file: !2465, line: 1434, column: 8)
!5228 = !DILocation(line: 1434, column: 12, scope: !5227)
!5229 = !DILocation(line: 1434, column: 8, scope: !5223)
!5230 = !DILocation(line: 1435, column: 5, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5227, file: !2465, line: 1434, column: 17)
!5232 = !DILocation(line: 1435, column: 11, scope: !5231)
!5233 = !DILocation(line: 1435, column: 24, scope: !5231)
!5234 = !DILocation(line: 1436, column: 4, scope: !5231)
!5235 = !DILocation(line: 1437, column: 17, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5227, file: !2465, line: 1436, column: 11)
!5237 = !DILocation(line: 1437, column: 15, scope: !5236)
!5238 = !DILocation(line: 1439, column: 3, scope: !5223)
!5239 = !DILocation(line: 1439, column: 14, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5219, file: !2465, line: 1439, column: 14)
!5241 = !DILocation(line: 1439, column: 20, scope: !5240)
!5242 = !DILocation(line: 1439, column: 14, scope: !5219)
!5243 = !DILocation(line: 1440, column: 16, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !2465, line: 1439, column: 34)
!5245 = !DILocation(line: 1440, column: 22, scope: !5244)
!5246 = !DILocation(line: 1440, column: 14, scope: !5244)
!5247 = !DILocation(line: 1441, column: 3, scope: !5244)
!5248 = !DILocation(line: 1448, column: 3, scope: !5098)
!5249 = !DILocation(line: 1448, column: 9, scope: !5098)
!5250 = !DILocation(line: 1448, column: 20, scope: !5098)
!5251 = !DILocation(line: 1449, column: 3, scope: !5098)
!5252 = !DILocation(line: 1449, column: 9, scope: !5098)
!5253 = !DILocation(line: 1449, column: 22, scope: !5098)
!5254 = !DILocalVariable(name: "specifier_cat", scope: !5098, file: !2465, line: 1468, type: !2464)
!5255 = !DILocation(line: 1468, column: 27, scope: !5098)
!5256 = !DILocation(line: 1469, column: 31, scope: !5098)
!5257 = !DILocation(line: 1469, column: 37, scope: !5098)
!5258 = !DILocalVariable(name: "length_mod", scope: !5098, file: !2465, line: 1470, type: !2472)
!5259 = !DILocation(line: 1470, column: 24, scope: !5098)
!5260 = !DILocation(line: 1471, column: 28, scope: !5098)
!5261 = !DILocation(line: 1471, column: 34, scope: !5098)
!5262 = !DILocation(line: 1478, column: 7, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1478, column: 7)
!5264 = !DILocation(line: 1478, column: 21, scope: !5263)
!5265 = !DILocation(line: 1478, column: 7, scope: !5098)
!5266 = !DILocation(line: 1479, column: 12, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5263, file: !2465, line: 1478, column: 40)
!5268 = !DILocation(line: 1479, column: 4, scope: !5267)
!5269 = !DILocation(line: 1479, column: 24, scope: !5267)
!5270 = !DILocation(line: 1484, column: 19, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5267, file: !2465, line: 1479, column: 24)
!5272 = !DILocation(line: 1484, column: 5, scope: !5271)
!5273 = !DILocation(line: 1484, column: 12, scope: !5271)
!5274 = !DILocation(line: 1484, column: 17, scope: !5271)
!5275 = !DILocation(line: 1485, column: 5, scope: !5271)
!5276 = !DILocation(line: 1492, column: 20, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !2465, line: 1491, column: 12)
!5278 = distinct !DILexicalBlock(scope: !5271, file: !2465, line: 1487, column: 9)
!5279 = !DILocation(line: 1492, column: 6, scope: !5277)
!5280 = !DILocation(line: 1492, column: 13, scope: !5277)
!5281 = !DILocation(line: 1492, column: 18, scope: !5277)
!5282 = !DILocation(line: 1494, column: 5, scope: !5271)
!5283 = !DILocation(line: 1497, column: 23, scope: !5271)
!5284 = !DILocation(line: 1496, column: 5, scope: !5271)
!5285 = !DILocation(line: 1496, column: 12, scope: !5271)
!5286 = !DILocation(line: 1496, column: 17, scope: !5271)
!5287 = !DILocation(line: 1498, column: 5, scope: !5271)
!5288 = !DILocation(line: 1501, column: 23, scope: !5271)
!5289 = !DILocation(line: 1500, column: 5, scope: !5271)
!5290 = !DILocation(line: 1500, column: 12, scope: !5271)
!5291 = !DILocation(line: 1500, column: 17, scope: !5271)
!5292 = !DILocation(line: 1502, column: 5, scope: !5271)
!5293 = !DILocation(line: 1513, column: 23, scope: !5271)
!5294 = !DILocation(line: 1513, column: 6, scope: !5271)
!5295 = !DILocation(line: 1512, column: 5, scope: !5271)
!5296 = !DILocation(line: 1512, column: 12, scope: !5271)
!5297 = !DILocation(line: 1512, column: 17, scope: !5271)
!5298 = !DILocation(line: 1514, column: 5, scope: !5271)
!5299 = !DILocation(line: 1516, column: 8, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5267, file: !2465, line: 1516, column: 8)
!5301 = !DILocation(line: 1516, column: 19, scope: !5300)
!5302 = !DILocation(line: 1516, column: 8, scope: !5267)
!5303 = !DILocation(line: 1517, column: 32, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5300, file: !2465, line: 1516, column: 33)
!5305 = !DILocation(line: 1517, column: 39, scope: !5304)
!5306 = !DILocation(line: 1517, column: 19, scope: !5304)
!5307 = !DILocation(line: 1517, column: 5, scope: !5304)
!5308 = !DILocation(line: 1517, column: 12, scope: !5304)
!5309 = !DILocation(line: 1517, column: 17, scope: !5304)
!5310 = !DILocation(line: 1518, column: 4, scope: !5304)
!5311 = !DILocation(line: 1518, column: 15, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5300, file: !2465, line: 1518, column: 15)
!5313 = !DILocation(line: 1518, column: 26, scope: !5312)
!5314 = !DILocation(line: 1518, column: 15, scope: !5300)
!5315 = !DILocation(line: 1519, column: 26, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5312, file: !2465, line: 1518, column: 39)
!5317 = !DILocation(line: 1519, column: 33, scope: !5316)
!5318 = !DILocation(line: 1519, column: 19, scope: !5316)
!5319 = !DILocation(line: 1519, column: 5, scope: !5316)
!5320 = !DILocation(line: 1519, column: 12, scope: !5316)
!5321 = !DILocation(line: 1519, column: 17, scope: !5316)
!5322 = !DILocation(line: 1520, column: 4, scope: !5316)
!5323 = !DILocation(line: 1521, column: 3, scope: !5267)
!5324 = !DILocation(line: 1521, column: 14, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5263, file: !2465, line: 1521, column: 14)
!5326 = !DILocation(line: 1521, column: 28, scope: !5325)
!5327 = !DILocation(line: 1521, column: 14, scope: !5263)
!5328 = !DILocation(line: 1522, column: 12, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5325, file: !2465, line: 1521, column: 47)
!5330 = !DILocation(line: 1522, column: 4, scope: !5329)
!5331 = !DILocation(line: 1522, column: 24, scope: !5329)
!5332 = !DILocation(line: 1527, column: 19, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5329, file: !2465, line: 1522, column: 24)
!5334 = !DILocation(line: 1527, column: 5, scope: !5333)
!5335 = !DILocation(line: 1527, column: 12, scope: !5333)
!5336 = !DILocation(line: 1527, column: 17, scope: !5333)
!5337 = !DILocation(line: 1528, column: 5, scope: !5333)
!5338 = !DILocation(line: 1531, column: 13, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5333, file: !2465, line: 1530, column: 9)
!5340 = !DILocation(line: 1531, column: 19, scope: !5339)
!5341 = !DILocation(line: 1531, column: 29, scope: !5339)
!5342 = !DILocation(line: 1530, column: 9, scope: !5333)
!5343 = !DILocation(line: 1532, column: 29, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5339, file: !2465, line: 1531, column: 38)
!5345 = !DILocation(line: 1532, column: 20, scope: !5344)
!5346 = !DILocation(line: 1532, column: 6, scope: !5344)
!5347 = !DILocation(line: 1532, column: 13, scope: !5344)
!5348 = !DILocation(line: 1532, column: 18, scope: !5344)
!5349 = !DILocation(line: 1534, column: 5, scope: !5344)
!5350 = !DILocation(line: 1535, column: 20, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5339, file: !2465, line: 1534, column: 12)
!5352 = !DILocation(line: 1535, column: 6, scope: !5351)
!5353 = !DILocation(line: 1535, column: 13, scope: !5351)
!5354 = !DILocation(line: 1535, column: 18, scope: !5351)
!5355 = !DILocation(line: 1537, column: 5, scope: !5333)
!5356 = !DILocation(line: 1540, column: 23, scope: !5333)
!5357 = !DILocation(line: 1539, column: 5, scope: !5333)
!5358 = !DILocation(line: 1539, column: 12, scope: !5333)
!5359 = !DILocation(line: 1539, column: 17, scope: !5333)
!5360 = !DILocation(line: 1542, column: 5, scope: !5333)
!5361 = !DILocation(line: 1545, column: 23, scope: !5333)
!5362 = !DILocation(line: 1544, column: 5, scope: !5333)
!5363 = !DILocation(line: 1544, column: 12, scope: !5333)
!5364 = !DILocation(line: 1544, column: 17, scope: !5333)
!5365 = !DILocation(line: 1547, column: 5, scope: !5333)
!5366 = !DILocation(line: 1551, column: 23, scope: !5333)
!5367 = !DILocation(line: 1551, column: 6, scope: !5333)
!5368 = !DILocation(line: 1550, column: 5, scope: !5333)
!5369 = !DILocation(line: 1550, column: 12, scope: !5333)
!5370 = !DILocation(line: 1550, column: 17, scope: !5333)
!5371 = !DILocation(line: 1552, column: 5, scope: !5333)
!5372 = !DILocation(line: 1554, column: 8, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5329, file: !2465, line: 1554, column: 8)
!5374 = !DILocation(line: 1554, column: 19, scope: !5373)
!5375 = !DILocation(line: 1554, column: 8, scope: !5329)
!5376 = !DILocation(line: 1555, column: 34, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5373, file: !2465, line: 1554, column: 33)
!5378 = !DILocation(line: 1555, column: 41, scope: !5377)
!5379 = !DILocation(line: 1555, column: 19, scope: !5377)
!5380 = !DILocation(line: 1555, column: 5, scope: !5377)
!5381 = !DILocation(line: 1555, column: 12, scope: !5377)
!5382 = !DILocation(line: 1555, column: 17, scope: !5377)
!5383 = !DILocation(line: 1556, column: 4, scope: !5377)
!5384 = !DILocation(line: 1556, column: 15, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5373, file: !2465, line: 1556, column: 15)
!5386 = !DILocation(line: 1556, column: 26, scope: !5385)
!5387 = !DILocation(line: 1556, column: 15, scope: !5373)
!5388 = !DILocation(line: 1557, column: 35, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5385, file: !2465, line: 1556, column: 39)
!5390 = !DILocation(line: 1557, column: 42, scope: !5389)
!5391 = !DILocation(line: 1557, column: 19, scope: !5389)
!5392 = !DILocation(line: 1557, column: 5, scope: !5389)
!5393 = !DILocation(line: 1557, column: 12, scope: !5389)
!5394 = !DILocation(line: 1557, column: 17, scope: !5389)
!5395 = !DILocation(line: 1558, column: 4, scope: !5389)
!5396 = !DILocation(line: 1559, column: 3, scope: !5329)
!5397 = !DILocation(line: 1559, column: 14, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5325, file: !2465, line: 1559, column: 14)
!5399 = !DILocation(line: 1559, column: 28, scope: !5398)
!5400 = !DILocation(line: 1559, column: 14, scope: !5325)
!5401 = !DILocation(line: 1560, column: 8, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5403, file: !2465, line: 1560, column: 8)
!5403 = distinct !DILexicalBlock(scope: !5398, file: !2465, line: 1559, column: 45)
!5404 = !DILocation(line: 1560, column: 19, scope: !5402)
!5405 = !DILocation(line: 1560, column: 8, scope: !5403)
!5406 = !DILocation(line: 1561, column: 19, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5402, file: !2465, line: 1560, column: 38)
!5408 = !DILocation(line: 1561, column: 5, scope: !5407)
!5409 = !DILocation(line: 1561, column: 12, scope: !5407)
!5410 = !DILocation(line: 1561, column: 17, scope: !5407)
!5411 = !DILocation(line: 1562, column: 4, scope: !5407)
!5412 = !DILocation(line: 1563, column: 18, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5402, file: !2465, line: 1562, column: 11)
!5414 = !DILocation(line: 1563, column: 5, scope: !5413)
!5415 = !DILocation(line: 1563, column: 12, scope: !5413)
!5416 = !DILocation(line: 1563, column: 16, scope: !5413)
!5417 = !DILocation(line: 1565, column: 3, scope: !5403)
!5418 = !DILocation(line: 1565, column: 14, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5398, file: !2465, line: 1565, column: 14)
!5420 = !DILocation(line: 1565, column: 28, scope: !5419)
!5421 = !DILocation(line: 1565, column: 14, scope: !5398)
!5422 = !DILocation(line: 1566, column: 17, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5419, file: !2465, line: 1565, column: 46)
!5424 = !DILocation(line: 1566, column: 4, scope: !5423)
!5425 = !DILocation(line: 1566, column: 11, scope: !5423)
!5426 = !DILocation(line: 1566, column: 15, scope: !5423)
!5427 = !DILocation(line: 1567, column: 3, scope: !5423)
!5428 = !DILocation(line: 1574, column: 7, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1574, column: 7)
!5430 = !DILocation(line: 1574, column: 13, scope: !5429)
!5431 = !DILocation(line: 1574, column: 21, scope: !5429)
!5432 = !DILocation(line: 1574, column: 24, scope: !5429)
!5433 = !DILocation(line: 1574, column: 30, scope: !5429)
!5434 = !DILocation(line: 1574, column: 7, scope: !5098)
!5435 = !DILocation(line: 1575, column: 4, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5429, file: !2465, line: 1574, column: 43)
!5437 = !DILocalVariable(name: "rc", scope: !5438, file: !2465, line: 1575, type: !103)
!5438 = distinct !DILexicalBlock(scope: !5436, file: !2465, line: 1575, column: 4)
!5439 = !DILocation(line: 1575, column: 4, scope: !5438)
!5440 = !DILocation(line: 1575, column: 4, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5438, file: !2465, line: 1575, column: 4)
!5442 = !DILocation(line: 1575, column: 4, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5441, file: !2465, line: 1575, column: 4)
!5444 = !DILocation(line: 1576, column: 4, scope: !5436)
!5445 = !DILocation(line: 1582, column: 11, scope: !5098)
!5446 = !DILocation(line: 1582, column: 17, scope: !5098)
!5447 = !DILocation(line: 1582, column: 3, scope: !5098)
!5448 = !DILocation(line: 1584, column: 4, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1582, column: 28)
!5450 = !DILocalVariable(name: "rc", scope: !5451, file: !2465, line: 1584, type: !103)
!5451 = distinct !DILexicalBlock(scope: !5449, file: !2465, line: 1584, column: 4)
!5452 = !DILocation(line: 1584, column: 4, scope: !5451)
!5453 = !DILocation(line: 1584, column: 4, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5451, file: !2465, line: 1584, column: 4)
!5455 = !DILocation(line: 1584, column: 4, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5454, file: !2465, line: 1584, column: 4)
!5457 = !DILocation(line: 1585, column: 4, scope: !5449)
!5458 = !DILocation(line: 1587, column: 24, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5449, file: !2465, line: 1586, column: 13)
!5460 = !DILocation(line: 1587, column: 31, scope: !5459)
!5461 = !DILocation(line: 1587, column: 8, scope: !5459)
!5462 = !DILocalVariable(name: "len", scope: !5459, file: !2465, line: 1589, type: !217)
!5463 = !DILocation(line: 1589, column: 11, scope: !5459)
!5464 = !DILocation(line: 1591, column: 8, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5459, file: !2465, line: 1591, column: 8)
!5466 = !DILocation(line: 1591, column: 18, scope: !5465)
!5467 = !DILocation(line: 1591, column: 8, scope: !5459)
!5468 = !DILocation(line: 1592, column: 19, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5465, file: !2465, line: 1591, column: 24)
!5470 = !DILocation(line: 1592, column: 24, scope: !5469)
!5471 = !DILocation(line: 1592, column: 11, scope: !5469)
!5472 = !DILocation(line: 1592, column: 9, scope: !5469)
!5473 = !DILocation(line: 1593, column: 4, scope: !5469)
!5474 = !DILocation(line: 1594, column: 18, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5465, file: !2465, line: 1593, column: 11)
!5476 = !DILocation(line: 1594, column: 11, scope: !5475)
!5477 = !DILocation(line: 1594, column: 9, scope: !5475)
!5478 = !DILocation(line: 1597, column: 10, scope: !5459)
!5479 = !DILocation(line: 1597, column: 16, scope: !5459)
!5480 = !DILocation(line: 1597, column: 14, scope: !5459)
!5481 = !DILocation(line: 1597, column: 8, scope: !5459)
!5482 = !DILocation(line: 1598, column: 14, scope: !5459)
!5483 = !DILocation(line: 1600, column: 4, scope: !5459)
!5484 = !DILocation(line: 1603, column: 10, scope: !5449)
!5485 = !DILocation(line: 1603, column: 8, scope: !5449)
!5486 = !DILocation(line: 1604, column: 44, scope: !5449)
!5487 = !DILocation(line: 1604, column: 51, scope: !5449)
!5488 = !DILocation(line: 1604, column: 13, scope: !5449)
!5489 = !DILocation(line: 1604, column: 4, scope: !5449)
!5490 = !DILocation(line: 1604, column: 11, scope: !5449)
!5491 = !DILocation(line: 1605, column: 10, scope: !5449)
!5492 = !DILocation(line: 1605, column: 14, scope: !5449)
!5493 = !DILocation(line: 1605, column: 8, scope: !5449)
!5494 = !DILocation(line: 1606, column: 4, scope: !5449)
!5495 = !DILocation(line: 1609, column: 8, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5449, file: !2465, line: 1609, column: 8)
!5497 = !DILocation(line: 1609, column: 14, scope: !5496)
!5498 = !DILocation(line: 1609, column: 8, scope: !5449)
!5499 = !DILocation(line: 1610, column: 10, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5496, file: !2465, line: 1609, column: 25)
!5501 = !DILocation(line: 1611, column: 4, scope: !5500)
!5502 = !DILocation(line: 1611, column: 15, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5496, file: !2465, line: 1611, column: 15)
!5504 = !DILocation(line: 1611, column: 21, scope: !5503)
!5505 = !DILocation(line: 1611, column: 15, scope: !5496)
!5506 = !DILocation(line: 1612, column: 10, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5503, file: !2465, line: 1611, column: 33)
!5508 = !DILocation(line: 1613, column: 4, scope: !5507)
!5509 = !DILocation(line: 1619, column: 11, scope: !5449)
!5510 = !DILocation(line: 1619, column: 18, scope: !5449)
!5511 = !DILocation(line: 1619, column: 9, scope: !5449)
!5512 = !DILocation(line: 1620, column: 8, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5449, file: !2465, line: 1620, column: 8)
!5514 = !DILocation(line: 1620, column: 13, scope: !5513)
!5515 = !DILocation(line: 1620, column: 8, scope: !5449)
!5516 = !DILocation(line: 1621, column: 10, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5513, file: !2465, line: 1620, column: 18)
!5518 = !DILocation(line: 1622, column: 37, scope: !5517)
!5519 = !DILocation(line: 1622, column: 36, scope: !5517)
!5520 = !DILocation(line: 1622, column: 5, scope: !5517)
!5521 = !DILocation(line: 1622, column: 12, scope: !5517)
!5522 = !DILocation(line: 1622, column: 17, scope: !5517)
!5523 = !DILocation(line: 1623, column: 4, scope: !5517)
!5524 = !DILocation(line: 1624, column: 36, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5513, file: !2465, line: 1623, column: 11)
!5526 = !DILocation(line: 1624, column: 5, scope: !5525)
!5527 = !DILocation(line: 1624, column: 12, scope: !5525)
!5528 = !DILocation(line: 1624, column: 17, scope: !5525)
!5529 = !DILocation(line: 1620, column: 15, scope: !5513)
!5530 = !DILocation(line: 1632, column: 22, scope: !5449)
!5531 = !DILocation(line: 1632, column: 29, scope: !5449)
!5532 = !DILocation(line: 1632, column: 35, scope: !5449)
!5533 = !DILocation(line: 1632, column: 41, scope: !5449)
!5534 = !DILocation(line: 1632, column: 46, scope: !5449)
!5535 = !DILocation(line: 1632, column: 10, scope: !5449)
!5536 = !DILocation(line: 1632, column: 8, scope: !5449)
!5537 = !DILocation(line: 1632, column: 4, scope: !5449)
!5538 = !DILabel(scope: !5449, name: "prec_int_pad0", file: !2465, line: 1634)
!5539 = !DILocation(line: 1634, column: 3, scope: !5449)
!5540 = !DILocation(line: 1640, column: 8, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5449, file: !2465, line: 1640, column: 8)
!5542 = !DILocation(line: 1640, column: 18, scope: !5541)
!5543 = !DILocation(line: 1640, column: 8, scope: !5449)
!5544 = !DILocalVariable(name: "len", scope: !5545, file: !2465, line: 1641, type: !217)
!5545 = distinct !DILexicalBlock(scope: !5541, file: !2465, line: 1640, column: 24)
!5546 = !DILocation(line: 1641, column: 12, scope: !5545)
!5547 = !DILocation(line: 1641, column: 18, scope: !5545)
!5548 = !DILocation(line: 1641, column: 24, scope: !5545)
!5549 = !DILocation(line: 1641, column: 22, scope: !5545)
!5550 = !DILocation(line: 1646, column: 5, scope: !5545)
!5551 = !DILocation(line: 1646, column: 11, scope: !5545)
!5552 = !DILocation(line: 1646, column: 21, scope: !5545)
!5553 = !DILocation(line: 1649, column: 9, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5545, file: !2465, line: 1649, column: 9)
!5555 = !DILocation(line: 1649, column: 23, scope: !5554)
!5556 = !DILocation(line: 1649, column: 13, scope: !5554)
!5557 = !DILocation(line: 1649, column: 9, scope: !5545)
!5558 = !DILocation(line: 1650, column: 25, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5554, file: !2465, line: 1649, column: 34)
!5560 = !DILocation(line: 1650, column: 42, scope: !5559)
!5561 = !DILocation(line: 1650, column: 35, scope: !5559)
!5562 = !DILocation(line: 1650, column: 6, scope: !5559)
!5563 = !DILocation(line: 1650, column: 12, scope: !5559)
!5564 = !DILocation(line: 1650, column: 23, scope: !5559)
!5565 = !DILocation(line: 1651, column: 5, scope: !5559)
!5566 = !DILocation(line: 1652, column: 4, scope: !5545)
!5567 = !DILocation(line: 1654, column: 4, scope: !5449)
!5568 = !DILocation(line: 1660, column: 8, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5449, file: !2465, line: 1660, column: 8)
!5570 = !DILocation(line: 1660, column: 15, scope: !5569)
!5571 = !DILocation(line: 1660, column: 19, scope: !5569)
!5572 = !DILocation(line: 1660, column: 8, scope: !5449)
!5573 = !DILocation(line: 1661, column: 34, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5569, file: !2465, line: 1660, column: 28)
!5575 = !DILocation(line: 1661, column: 41, scope: !5574)
!5576 = !DILocation(line: 1661, column: 23, scope: !5574)
!5577 = !DILocation(line: 1661, column: 46, scope: !5574)
!5578 = !DILocation(line: 1662, column: 9, scope: !5574)
!5579 = !DILocation(line: 1662, column: 14, scope: !5574)
!5580 = !DILocation(line: 1661, column: 11, scope: !5574)
!5581 = !DILocation(line: 1661, column: 9, scope: !5574)
!5582 = !DILocation(line: 1665, column: 5, scope: !5574)
!5583 = !DILocation(line: 1665, column: 11, scope: !5574)
!5584 = !DILocation(line: 1665, column: 22, scope: !5574)
!5585 = !DILocation(line: 1666, column: 5, scope: !5574)
!5586 = !DILocation(line: 1666, column: 11, scope: !5574)
!5587 = !DILocation(line: 1666, column: 21, scope: !5574)
!5588 = !DILocation(line: 1668, column: 5, scope: !5574)
!5589 = !DILocation(line: 1671, column: 8, scope: !5449)
!5590 = !DILocation(line: 1672, column: 10, scope: !5449)
!5591 = !DILocation(line: 1672, column: 14, scope: !5449)
!5592 = !DILocation(line: 1672, column: 8, scope: !5449)
!5593 = !DILocation(line: 1674, column: 4, scope: !5449)
!5594 = !DILocation(line: 1677, column: 17, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !2465, line: 1676, column: 49)
!5596 = distinct !DILexicalBlock(scope: !5449, file: !2465, line: 1676, column: 8)
!5597 = !DILocation(line: 1677, column: 23, scope: !5595)
!5598 = !DILocation(line: 1677, column: 30, scope: !5595)
!5599 = !DILocation(line: 1677, column: 35, scope: !5595)
!5600 = !DILocation(line: 1677, column: 5, scope: !5595)
!5601 = !DILocation(line: 1680, column: 4, scope: !5449)
!5602 = !DILocation(line: 1687, column: 4, scope: !5449)
!5603 = !DILocation(line: 1693, column: 4, scope: !5449)
!5604 = !DILocation(line: 1699, column: 7, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1699, column: 7)
!5606 = !DILocation(line: 1699, column: 11, scope: !5605)
!5607 = !DILocation(line: 1699, column: 7, scope: !5098)
!5608 = !DILocation(line: 1700, column: 4, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5605, file: !2465, line: 1699, column: 20)
!5610 = !DILocalVariable(name: "nj_len", scope: !5098, file: !2465, line: 1722, type: !217)
!5611 = !DILocation(line: 1722, column: 10, scope: !5098)
!5612 = !DILocation(line: 1722, column: 20, scope: !5098)
!5613 = !DILocation(line: 1722, column: 26, scope: !5098)
!5614 = !DILocation(line: 1722, column: 24, scope: !5098)
!5615 = !DILocalVariable(name: "pad_len", scope: !5098, file: !2465, line: 1723, type: !103)
!5616 = !DILocation(line: 1723, column: 7, scope: !5098)
!5617 = !DILocation(line: 1725, column: 7, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1725, column: 7)
!5619 = !DILocation(line: 1725, column: 12, scope: !5618)
!5620 = !DILocation(line: 1725, column: 7, scope: !5098)
!5621 = !DILocation(line: 1726, column: 11, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5618, file: !2465, line: 1725, column: 18)
!5623 = !DILocation(line: 1727, column: 3, scope: !5622)
!5624 = !DILocation(line: 1729, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1729, column: 7)
!5626 = !DILocation(line: 1729, column: 13, scope: !5625)
!5627 = !DILocation(line: 1729, column: 7, scope: !5098)
!5628 = !DILocation(line: 1730, column: 11, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5625, file: !2465, line: 1729, column: 25)
!5630 = !DILocation(line: 1731, column: 3, scope: !5629)
!5631 = !DILocation(line: 1731, column: 14, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5625, file: !2465, line: 1731, column: 14)
!5633 = !DILocation(line: 1731, column: 20, scope: !5632)
!5634 = !DILocation(line: 1731, column: 14, scope: !5625)
!5635 = !DILocation(line: 1732, column: 11, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5632, file: !2465, line: 1731, column: 31)
!5637 = !DILocation(line: 1733, column: 3, scope: !5636)
!5638 = !DILocation(line: 1735, column: 13, scope: !5098)
!5639 = !DILocation(line: 1735, column: 19, scope: !5098)
!5640 = !DILocation(line: 1735, column: 10, scope: !5098)
!5641 = !DILocation(line: 1736, column: 7, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1736, column: 7)
!5643 = !DILocation(line: 1736, column: 13, scope: !5642)
!5644 = !DILocation(line: 1736, column: 7, scope: !5098)
!5645 = !DILocation(line: 1737, column: 14, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !2465, line: 1736, column: 21)
!5647 = !DILocation(line: 1737, column: 20, scope: !5646)
!5648 = !DILocation(line: 1737, column: 11, scope: !5646)
!5649 = !DILocation(line: 1738, column: 3, scope: !5646)
!5650 = !DILocation(line: 1747, column: 7, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1747, column: 7)
!5652 = !DILocation(line: 1747, column: 13, scope: !5651)
!5653 = !DILocation(line: 1747, column: 7, scope: !5098)
!5654 = !DILocation(line: 1748, column: 18, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !2465, line: 1747, column: 18)
!5656 = !DILocation(line: 1748, column: 10, scope: !5655)
!5657 = !DILocation(line: 1750, column: 9, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5655, file: !2465, line: 1750, column: 8)
!5659 = !DILocation(line: 1750, column: 15, scope: !5658)
!5660 = !DILocation(line: 1750, column: 8, scope: !5655)
!5661 = !DILocalVariable(name: "pad", scope: !5662, file: !2465, line: 1751, type: !237)
!5662 = distinct !DILexicalBlock(scope: !5658, file: !2465, line: 1750, column: 26)
!5663 = !DILocation(line: 1751, column: 10, scope: !5662)
!5664 = !DILocation(line: 1756, column: 9, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5662, file: !2465, line: 1756, column: 9)
!5666 = !DILocation(line: 1756, column: 15, scope: !5665)
!5667 = !DILocation(line: 1756, column: 9, scope: !5662)
!5668 = !DILocation(line: 1757, column: 10, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !2465, line: 1757, column: 10)
!5670 = distinct !DILexicalBlock(scope: !5665, file: !2465, line: 1756, column: 26)
!5671 = !DILocation(line: 1757, column: 15, scope: !5669)
!5672 = !DILocation(line: 1757, column: 10, scope: !5670)
!5673 = !DILocation(line: 1758, column: 7, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5669, file: !2465, line: 1757, column: 21)
!5675 = !DILocalVariable(name: "rc", scope: !5676, file: !2465, line: 1758, type: !103)
!5676 = distinct !DILexicalBlock(scope: !5674, file: !2465, line: 1758, column: 7)
!5677 = !DILocation(line: 1758, column: 7, scope: !5676)
!5678 = !DILocation(line: 1758, column: 7, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5676, file: !2465, line: 1758, column: 7)
!5680 = !DILocation(line: 1758, column: 7, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5679, file: !2465, line: 1758, column: 7)
!5682 = !DILocation(line: 1759, column: 12, scope: !5674)
!5683 = !DILocation(line: 1760, column: 6, scope: !5674)
!5684 = !DILocation(line: 1761, column: 10, scope: !5670)
!5685 = !DILocation(line: 1762, column: 5, scope: !5670)
!5686 = !DILocation(line: 1764, column: 5, scope: !5662)
!5687 = !DILocation(line: 1764, column: 17, scope: !5662)
!5688 = !DILocation(line: 1764, column: 20, scope: !5662)
!5689 = !DILocation(line: 1765, column: 6, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5662, file: !2465, line: 1764, column: 25)
!5691 = !DILocalVariable(name: "rc", scope: !5692, file: !2465, line: 1765, type: !103)
!5692 = distinct !DILexicalBlock(scope: !5690, file: !2465, line: 1765, column: 6)
!5693 = !DILocation(line: 1765, column: 6, scope: !5692)
!5694 = !DILocation(line: 1765, column: 6, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5692, file: !2465, line: 1765, column: 6)
!5696 = !DILocation(line: 1765, column: 6, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5695, file: !2465, line: 1765, column: 6)
!5698 = distinct !{!5698, !5686, !5699}
!5699 = !DILocation(line: 1766, column: 5, scope: !5662)
!5700 = !DILocation(line: 1767, column: 4, scope: !5662)
!5701 = !DILocation(line: 1768, column: 3, scope: !5655)
!5702 = !DILocation(line: 1773, column: 7, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1773, column: 7)
!5704 = !DILocation(line: 1773, column: 12, scope: !5703)
!5705 = !DILocation(line: 1773, column: 7, scope: !5098)
!5706 = !DILocation(line: 1774, column: 4, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5703, file: !2465, line: 1773, column: 18)
!5708 = !DILocalVariable(name: "rc", scope: !5709, file: !2465, line: 1774, type: !103)
!5709 = distinct !DILexicalBlock(scope: !5707, file: !2465, line: 1774, column: 4)
!5710 = !DILocation(line: 1774, column: 4, scope: !5709)
!5711 = !DILocation(line: 1774, column: 4, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5709, file: !2465, line: 1774, column: 4)
!5713 = !DILocation(line: 1774, column: 4, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5712, file: !2465, line: 1774, column: 4)
!5715 = !DILocation(line: 1775, column: 3, scope: !5707)
!5716 = !DILocation(line: 1818, column: 8, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5718, file: !2465, line: 1818, column: 8)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !2465, line: 1817, column: 10)
!5719 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1777, column: 7)
!5720 = !DILocation(line: 1818, column: 14, scope: !5717)
!5721 = !DILocation(line: 1818, column: 27, scope: !5717)
!5722 = !DILocation(line: 1818, column: 33, scope: !5717)
!5723 = !DILocation(line: 1818, column: 25, scope: !5717)
!5724 = !DILocation(line: 1818, column: 8, scope: !5718)
!5725 = !DILocation(line: 1819, column: 5, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5717, file: !2465, line: 1818, column: 44)
!5727 = !DILocalVariable(name: "rc", scope: !5728, file: !2465, line: 1819, type: !103)
!5728 = distinct !DILexicalBlock(scope: !5726, file: !2465, line: 1819, column: 5)
!5729 = !DILocation(line: 1819, column: 5, scope: !5728)
!5730 = !DILocation(line: 1819, column: 5, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5728, file: !2465, line: 1819, column: 5)
!5732 = !DILocation(line: 1819, column: 5, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5731, file: !2465, line: 1819, column: 5)
!5734 = !DILocation(line: 1820, column: 4, scope: !5726)
!5735 = !DILocation(line: 1822, column: 8, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5718, file: !2465, line: 1822, column: 8)
!5737 = !DILocation(line: 1822, column: 14, scope: !5736)
!5738 = !DILocation(line: 1822, column: 8, scope: !5718)
!5739 = !DILocation(line: 1823, column: 5, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5736, file: !2465, line: 1822, column: 26)
!5741 = !DILocalVariable(name: "rc", scope: !5742, file: !2465, line: 1823, type: !103)
!5742 = distinct !DILexicalBlock(scope: !5740, file: !2465, line: 1823, column: 5)
!5743 = !DILocation(line: 1823, column: 5, scope: !5742)
!5744 = !DILocation(line: 1823, column: 5, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5742, file: !2465, line: 1823, column: 5)
!5746 = !DILocation(line: 1823, column: 5, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5745, file: !2465, line: 1823, column: 5)
!5748 = !DILocation(line: 1824, column: 4, scope: !5740)
!5749 = !DILocation(line: 1826, column: 14, scope: !5718)
!5750 = !DILocation(line: 1826, column: 20, scope: !5718)
!5751 = !DILocation(line: 1826, column: 12, scope: !5718)
!5752 = !DILocation(line: 1827, column: 4, scope: !5718)
!5753 = !DILocation(line: 1827, column: 18, scope: !5718)
!5754 = !DILocation(line: 1827, column: 21, scope: !5718)
!5755 = !DILocation(line: 1828, column: 5, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5718, file: !2465, line: 1827, column: 26)
!5757 = !DILocalVariable(name: "rc", scope: !5758, file: !2465, line: 1828, type: !103)
!5758 = distinct !DILexicalBlock(scope: !5756, file: !2465, line: 1828, column: 5)
!5759 = !DILocation(line: 1828, column: 5, scope: !5758)
!5760 = !DILocation(line: 1828, column: 5, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5758, file: !2465, line: 1828, column: 5)
!5762 = !DILocation(line: 1828, column: 5, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5761, file: !2465, line: 1828, column: 5)
!5764 = distinct !{!5764, !5752, !5765}
!5765 = !DILocation(line: 1829, column: 4, scope: !5718)
!5766 = !DILocation(line: 1831, column: 4, scope: !5718)
!5767 = !DILocalVariable(name: "rc", scope: !5768, file: !2465, line: 1831, type: !103)
!5768 = distinct !DILexicalBlock(scope: !5718, file: !2465, line: 1831, column: 4)
!5769 = !DILocation(line: 1831, column: 4, scope: !5768)
!5770 = !DILocation(line: 1831, column: 4, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5768, file: !2465, line: 1831, column: 4)
!5772 = !DILocation(line: 1831, column: 4, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5771, file: !2465, line: 1831, column: 4)
!5774 = !DILocation(line: 1835, column: 3, scope: !5098)
!5775 = !DILocation(line: 1835, column: 10, scope: !5098)
!5776 = !DILocation(line: 1835, column: 16, scope: !5098)
!5777 = !DILocation(line: 1836, column: 4, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5098, file: !2465, line: 1835, column: 21)
!5779 = !DILocalVariable(name: "rc", scope: !5780, file: !2465, line: 1836, type: !103)
!5780 = distinct !DILexicalBlock(scope: !5778, file: !2465, line: 1836, column: 4)
!5781 = !DILocation(line: 1836, column: 4, scope: !5780)
!5782 = !DILocation(line: 1836, column: 4, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5780, file: !2465, line: 1836, column: 4)
!5784 = !DILocation(line: 1836, column: 4, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5783, file: !2465, line: 1836, column: 4)
!5786 = !DILocation(line: 1837, column: 4, scope: !5778)
!5787 = distinct !{!5787, !5774, !5788}
!5788 = !DILocation(line: 1838, column: 3, scope: !5098)
!5789 = !DILocation(line: 1841, column: 9, scope: !5058)
!5790 = !DILocation(line: 1841, column: 2, scope: !5058)
!5791 = !DILocation(line: 1844, column: 1, scope: !5058)
!5792 = distinct !DISubprogram(name: "extract_conversion", scope: !2465, file: !2465, line: 642, type: !5793, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!5793 = !DISubroutineType(types: !5794)
!5794 = !{!256, !5162, !256}
!5795 = !DILocalVariable(name: "conv", arg: 1, scope: !5792, file: !2465, line: 642, type: !5162)
!5796 = !DILocation(line: 642, column: 65, scope: !5792)
!5797 = !DILocalVariable(name: "sp", arg: 2, scope: !5792, file: !2465, line: 643, type: !256)
!5798 = !DILocation(line: 643, column: 23, scope: !5792)
!5799 = !DILocation(line: 645, column: 3, scope: !5792)
!5800 = !DILocation(line: 645, column: 30, scope: !5792)
!5801 = !DILocation(line: 645, column: 10, scope: !5792)
!5802 = !DILocation(line: 653, column: 2, scope: !5792)
!5803 = !DILocation(line: 654, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5792, file: !2465, line: 654, column: 6)
!5805 = !DILocation(line: 654, column: 6, scope: !5804)
!5806 = !DILocation(line: 654, column: 10, scope: !5804)
!5807 = !DILocation(line: 654, column: 6, scope: !5792)
!5808 = !DILocation(line: 655, column: 24, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5804, file: !2465, line: 654, column: 18)
!5810 = !DILocation(line: 655, column: 21, scope: !5809)
!5811 = !DILocation(line: 655, column: 3, scope: !5809)
!5812 = !DILocation(line: 655, column: 9, scope: !5809)
!5813 = !DILocation(line: 655, column: 19, scope: !5809)
!5814 = !DILocation(line: 656, column: 10, scope: !5809)
!5815 = !DILocation(line: 656, column: 3, scope: !5809)
!5816 = !DILocation(line: 659, column: 21, scope: !5792)
!5817 = !DILocation(line: 659, column: 27, scope: !5792)
!5818 = !DILocation(line: 659, column: 7, scope: !5792)
!5819 = !DILocation(line: 659, column: 5, scope: !5792)
!5820 = !DILocation(line: 660, column: 21, scope: !5792)
!5821 = !DILocation(line: 660, column: 27, scope: !5792)
!5822 = !DILocation(line: 660, column: 7, scope: !5792)
!5823 = !DILocation(line: 660, column: 5, scope: !5792)
!5824 = !DILocation(line: 661, column: 20, scope: !5792)
!5825 = !DILocation(line: 661, column: 26, scope: !5792)
!5826 = !DILocation(line: 661, column: 7, scope: !5792)
!5827 = !DILocation(line: 661, column: 5, scope: !5792)
!5828 = !DILocation(line: 662, column: 22, scope: !5792)
!5829 = !DILocation(line: 662, column: 28, scope: !5792)
!5830 = !DILocation(line: 662, column: 7, scope: !5792)
!5831 = !DILocation(line: 662, column: 5, scope: !5792)
!5832 = !DILocation(line: 663, column: 25, scope: !5792)
!5833 = !DILocation(line: 663, column: 31, scope: !5792)
!5834 = !DILocation(line: 663, column: 7, scope: !5792)
!5835 = !DILocation(line: 663, column: 5, scope: !5792)
!5836 = !DILocation(line: 665, column: 9, scope: !5792)
!5837 = !DILocation(line: 665, column: 2, scope: !5792)
!5838 = !DILocation(line: 666, column: 1, scope: !5792)
!5839 = distinct !DISubprogram(name: "outs", scope: !2465, file: !2465, line: 1319, type: !5840, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{!103, !3199, !102, !256, !256}
!5842 = !DILocalVariable(name: "out", arg: 1, scope: !5839, file: !2465, line: 1319, type: !3199)
!5843 = !DILocation(line: 1319, column: 29, scope: !5839)
!5844 = !DILocalVariable(name: "ctx", arg: 2, scope: !5839, file: !2465, line: 1320, type: !102)
!5845 = !DILocation(line: 1320, column: 9, scope: !5839)
!5846 = !DILocalVariable(name: "sp", arg: 3, scope: !5839, file: !2465, line: 1321, type: !256)
!5847 = !DILocation(line: 1321, column: 15, scope: !5839)
!5848 = !DILocalVariable(name: "ep", arg: 4, scope: !5839, file: !2465, line: 1322, type: !256)
!5849 = !DILocation(line: 1322, column: 15, scope: !5839)
!5850 = !DILocalVariable(name: "count", scope: !5839, file: !2465, line: 1324, type: !217)
!5851 = !DILocation(line: 1324, column: 9, scope: !5839)
!5852 = !DILocation(line: 1326, column: 2, scope: !5839)
!5853 = !DILocation(line: 1326, column: 10, scope: !5839)
!5854 = !DILocation(line: 1326, column: 15, scope: !5839)
!5855 = !DILocation(line: 1326, column: 13, scope: !5839)
!5856 = !DILocation(line: 1326, column: 19, scope: !5839)
!5857 = !DILocation(line: 1326, column: 24, scope: !5839)
!5858 = !DILocation(line: 1326, column: 27, scope: !5839)
!5859 = !DILocation(line: 1326, column: 36, scope: !5839)
!5860 = !DILocation(line: 1326, column: 40, scope: !5839)
!5861 = !DILocation(line: 1326, column: 39, scope: !5839)
!5862 = !DILocation(line: 0, scope: !5839)
!5863 = !DILocalVariable(name: "rc", scope: !5864, file: !2465, line: 1327, type: !103)
!5864 = distinct !DILexicalBlock(scope: !5839, file: !2465, line: 1326, column: 45)
!5865 = !DILocation(line: 1327, column: 7, scope: !5864)
!5866 = !DILocation(line: 1327, column: 12, scope: !5864)
!5867 = !DILocation(line: 1327, column: 24, scope: !5864)
!5868 = !DILocation(line: 1327, column: 21, scope: !5864)
!5869 = !DILocation(line: 1327, column: 16, scope: !5864)
!5870 = !DILocation(line: 1327, column: 28, scope: !5864)
!5871 = !DILocation(line: 1329, column: 7, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5864, file: !2465, line: 1329, column: 7)
!5873 = !DILocation(line: 1329, column: 10, scope: !5872)
!5874 = !DILocation(line: 1329, column: 7, scope: !5864)
!5875 = !DILocation(line: 1330, column: 11, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5872, file: !2465, line: 1329, column: 15)
!5877 = !DILocation(line: 1330, column: 4, scope: !5876)
!5878 = !DILocation(line: 1332, column: 3, scope: !5864)
!5879 = distinct !{!5879, !5852, !5880}
!5880 = !DILocation(line: 1333, column: 2, scope: !5839)
!5881 = !DILocation(line: 1335, column: 14, scope: !5839)
!5882 = !DILocation(line: 1335, column: 2, scope: !5839)
!5883 = !DILocation(line: 1336, column: 1, scope: !5839)
!5884 = distinct !DISubprogram(name: "encode_uint", scope: !2465, file: !2465, line: 788, type: !5885, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!311, !2487, !5162, !311, !256}
!5887 = !DILocalVariable(name: "value", arg: 1, scope: !5884, file: !2465, line: 788, type: !2487)
!5888 = !DILocation(line: 788, column: 42, scope: !5884)
!5889 = !DILocalVariable(name: "conv", arg: 2, scope: !5884, file: !2465, line: 789, type: !5162)
!5890 = !DILocation(line: 789, column: 24, scope: !5884)
!5891 = !DILocalVariable(name: "bps", arg: 3, scope: !5884, file: !2465, line: 790, type: !311)
!5892 = !DILocation(line: 790, column: 11, scope: !5884)
!5893 = !DILocalVariable(name: "bpe", arg: 4, scope: !5884, file: !2465, line: 791, type: !256)
!5894 = !DILocation(line: 791, column: 17, scope: !5884)
!5895 = !DILocalVariable(name: "upcase", scope: !5884, file: !2465, line: 793, type: !717)
!5896 = !DILocation(line: 793, column: 7, scope: !5884)
!5897 = !DILocation(line: 793, column: 29, scope: !5884)
!5898 = !DILocation(line: 793, column: 35, scope: !5884)
!5899 = !DILocation(line: 793, column: 24, scope: !5884)
!5900 = !DILocation(line: 793, column: 16, scope: !5884)
!5901 = !DILocalVariable(name: "radix", scope: !5884, file: !2465, line: 794, type: !5902)
!5902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5903 = !DILocation(line: 794, column: 21, scope: !5884)
!5904 = !DILocation(line: 794, column: 46, scope: !5884)
!5905 = !DILocation(line: 794, column: 52, scope: !5884)
!5906 = !DILocation(line: 794, column: 29, scope: !5884)
!5907 = !DILocalVariable(name: "bp", scope: !5884, file: !2465, line: 795, type: !311)
!5908 = !DILocation(line: 795, column: 8, scope: !5884)
!5909 = !DILocation(line: 795, column: 13, scope: !5884)
!5910 = !DILocation(line: 795, column: 20, scope: !5884)
!5911 = !DILocation(line: 795, column: 26, scope: !5884)
!5912 = !DILocation(line: 795, column: 24, scope: !5884)
!5913 = !DILocation(line: 795, column: 17, scope: !5884)
!5914 = !DILocation(line: 797, column: 2, scope: !5884)
!5915 = !DILocalVariable(name: "lsv", scope: !5916, file: !2465, line: 798, type: !32)
!5916 = distinct !DILexicalBlock(scope: !5884, file: !2465, line: 797, column: 5)
!5917 = !DILocation(line: 798, column: 16, scope: !5916)
!5918 = !DILocation(line: 798, column: 37, scope: !5916)
!5919 = !DILocation(line: 798, column: 45, scope: !5916)
!5920 = !DILocation(line: 798, column: 43, scope: !5916)
!5921 = !DILocation(line: 798, column: 22, scope: !5916)
!5922 = !DILocation(line: 800, column: 12, scope: !5916)
!5923 = !DILocation(line: 800, column: 16, scope: !5916)
!5924 = !DILocation(line: 800, column: 11, scope: !5916)
!5925 = !DILocation(line: 800, column: 31, scope: !5916)
!5926 = !DILocation(line: 800, column: 29, scope: !5916)
!5927 = !DILocation(line: 801, column: 6, scope: !5916)
!5928 = !DILocation(line: 801, column: 22, scope: !5916)
!5929 = !DILocation(line: 801, column: 20, scope: !5916)
!5930 = !DILocation(line: 801, column: 26, scope: !5916)
!5931 = !DILocation(line: 801, column: 41, scope: !5916)
!5932 = !DILocation(line: 801, column: 39, scope: !5916)
!5933 = !DILocation(line: 801, column: 45, scope: !5916)
!5934 = !DILocation(line: 800, column: 4, scope: !5916)
!5935 = !DILocation(line: 800, column: 9, scope: !5916)
!5936 = !DILocation(line: 802, column: 12, scope: !5916)
!5937 = !DILocation(line: 802, column: 9, scope: !5916)
!5938 = !DILocation(line: 803, column: 2, scope: !5916)
!5939 = !DILocation(line: 803, column: 12, scope: !5884)
!5940 = !DILocation(line: 803, column: 18, scope: !5884)
!5941 = !DILocation(line: 803, column: 24, scope: !5884)
!5942 = !DILocation(line: 803, column: 28, scope: !5884)
!5943 = !DILocation(line: 803, column: 34, scope: !5884)
!5944 = !DILocation(line: 803, column: 32, scope: !5884)
!5945 = !DILocation(line: 0, scope: !5884)
!5946 = distinct !{!5946, !5914, !5947}
!5947 = !DILocation(line: 803, column: 37, scope: !5884)
!5948 = !DILocation(line: 808, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5884, file: !2465, line: 808, column: 6)
!5950 = !DILocation(line: 808, column: 12, scope: !5949)
!5951 = !DILocation(line: 808, column: 6, scope: !5884)
!5952 = !DILocation(line: 809, column: 7, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5954, file: !2465, line: 809, column: 7)
!5954 = distinct !DILexicalBlock(scope: !5949, file: !2465, line: 808, column: 23)
!5955 = !DILocation(line: 809, column: 13, scope: !5953)
!5956 = !DILocation(line: 809, column: 7, scope: !5954)
!5957 = !DILocation(line: 810, column: 4, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5953, file: !2465, line: 809, column: 19)
!5959 = !DILocation(line: 810, column: 10, scope: !5958)
!5960 = !DILocation(line: 810, column: 20, scope: !5958)
!5961 = !DILocation(line: 811, column: 3, scope: !5958)
!5962 = !DILocation(line: 811, column: 14, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5953, file: !2465, line: 811, column: 14)
!5964 = !DILocation(line: 811, column: 20, scope: !5963)
!5965 = !DILocation(line: 811, column: 14, scope: !5953)
!5966 = !DILocation(line: 812, column: 4, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !2465, line: 811, column: 27)
!5968 = !DILocation(line: 812, column: 10, scope: !5967)
!5969 = !DILocation(line: 812, column: 21, scope: !5967)
!5970 = !DILocation(line: 813, column: 3, scope: !5967)
!5971 = !DILocation(line: 816, column: 2, scope: !5954)
!5972 = !DILocation(line: 818, column: 9, scope: !5884)
!5973 = !DILocation(line: 818, column: 2, scope: !5884)
!5974 = distinct !DISubprogram(name: "store_count", scope: !2465, file: !2465, line: 1280, type: !5975, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!5975 = !DISubroutineType(types: !5976)
!5976 = !{null, !5977, !102, !103}
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 32)
!5978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5128)
!5979 = !DILocalVariable(name: "conv", arg: 1, scope: !5974, file: !2465, line: 1280, type: !5977)
!5980 = !DILocation(line: 1280, column: 57, scope: !5974)
!5981 = !DILocalVariable(name: "dp", arg: 2, scope: !5974, file: !2465, line: 1281, type: !102)
!5982 = !DILocation(line: 1281, column: 17, scope: !5974)
!5983 = !DILocalVariable(name: "count", arg: 3, scope: !5974, file: !2465, line: 1282, type: !103)
!5984 = !DILocation(line: 1282, column: 15, scope: !5974)
!5985 = !DILocation(line: 1284, column: 32, scope: !5974)
!5986 = !DILocation(line: 1284, column: 38, scope: !5974)
!5987 = !DILocation(line: 1284, column: 2, scope: !5974)
!5988 = !DILocation(line: 1286, column: 16, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5974, file: !2465, line: 1284, column: 50)
!5990 = !DILocation(line: 1286, column: 11, scope: !5989)
!5991 = !DILocation(line: 1286, column: 4, scope: !5989)
!5992 = !DILocation(line: 1286, column: 14, scope: !5989)
!5993 = !DILocation(line: 1287, column: 3, scope: !5989)
!5994 = !DILocation(line: 1289, column: 37, scope: !5989)
!5995 = !DILocation(line: 1289, column: 24, scope: !5989)
!5996 = !DILocation(line: 1289, column: 19, scope: !5989)
!5997 = !DILocation(line: 1289, column: 22, scope: !5989)
!5998 = !DILocation(line: 1290, column: 3, scope: !5989)
!5999 = !DILocation(line: 1292, column: 25, scope: !5989)
!6000 = !DILocation(line: 1292, column: 18, scope: !5989)
!6001 = !DILocation(line: 1292, column: 13, scope: !5989)
!6002 = !DILocation(line: 1292, column: 4, scope: !5989)
!6003 = !DILocation(line: 1292, column: 16, scope: !5989)
!6004 = !DILocation(line: 1293, column: 3, scope: !5989)
!6005 = !DILocation(line: 1295, column: 23, scope: !5989)
!6006 = !DILocation(line: 1295, column: 12, scope: !5989)
!6007 = !DILocation(line: 1295, column: 4, scope: !5989)
!6008 = !DILocation(line: 1295, column: 15, scope: !5989)
!6009 = !DILocation(line: 1296, column: 3, scope: !5989)
!6010 = !DILocation(line: 1298, column: 33, scope: !5989)
!6011 = !DILocation(line: 1298, column: 22, scope: !5989)
!6012 = !DILocation(line: 1298, column: 17, scope: !5989)
!6013 = !DILocation(line: 1298, column: 4, scope: !5989)
!6014 = !DILocation(line: 1298, column: 20, scope: !5989)
!6015 = !DILocation(line: 1299, column: 3, scope: !5989)
!6016 = !DILocation(line: 1301, column: 31, scope: !5989)
!6017 = !DILocation(line: 1301, column: 21, scope: !5989)
!6018 = !DILocation(line: 1301, column: 16, scope: !5989)
!6019 = !DILocation(line: 1301, column: 4, scope: !5989)
!6020 = !DILocation(line: 1301, column: 19, scope: !5989)
!6021 = !DILocation(line: 1302, column: 3, scope: !5989)
!6022 = !DILocation(line: 1304, column: 27, scope: !5989)
!6023 = !DILocation(line: 1304, column: 14, scope: !5989)
!6024 = !DILocation(line: 1304, column: 4, scope: !5989)
!6025 = !DILocation(line: 1304, column: 17, scope: !5989)
!6026 = !DILocation(line: 1305, column: 3, scope: !5989)
!6027 = !DILocation(line: 1307, column: 33, scope: !5989)
!6028 = !DILocation(line: 1307, column: 17, scope: !5989)
!6029 = !DILocation(line: 1307, column: 4, scope: !5989)
!6030 = !DILocation(line: 1307, column: 20, scope: !5989)
!6031 = !DILocation(line: 1308, column: 3, scope: !5989)
!6032 = !DILocation(line: 1314, column: 3, scope: !5989)
!6033 = !DILocation(line: 1316, column: 1, scope: !5974)
!6034 = distinct !DISubprogram(name: "isupper", scope: !6035, file: !6035, line: 16, type: !274, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6035 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6036 = !DILocalVariable(name: "a", arg: 1, scope: !6034, file: !6035, line: 16, type: !103)
!6037 = !DILocation(line: 16, column: 31, scope: !6034)
!6038 = !DILocation(line: 18, column: 27, scope: !6034)
!6039 = !DILocation(line: 18, column: 29, scope: !6034)
!6040 = !DILocation(line: 18, column: 45, scope: !6034)
!6041 = !DILocation(line: 18, column: 2, scope: !6034)
!6042 = distinct !DISubprogram(name: "conversion_radix", scope: !2465, file: !2465, line: 761, type: !6043, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{!217, !237}
!6045 = !DILocalVariable(name: "specifier", arg: 1, scope: !6042, file: !2465, line: 761, type: !237)
!6046 = !DILocation(line: 761, column: 44, scope: !6042)
!6047 = !DILocation(line: 763, column: 10, scope: !6042)
!6048 = !DILocation(line: 763, column: 2, scope: !6042)
!6049 = !DILocation(line: 763, column: 21, scope: !6042)
!6050 = !DILocation(line: 768, column: 3, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6042, file: !2465, line: 763, column: 21)
!6052 = !DILocation(line: 770, column: 3, scope: !6051)
!6053 = !DILocation(line: 774, column: 3, scope: !6051)
!6054 = !DILocation(line: 776, column: 1, scope: !6042)
!6055 = distinct !DISubprogram(name: "extract_flags", scope: !2465, file: !2465, line: 339, type: !5793, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6056 = !DILocalVariable(name: "conv", arg: 1, scope: !6055, file: !2465, line: 339, type: !5162)
!6057 = !DILocation(line: 339, column: 60, scope: !6055)
!6058 = !DILocalVariable(name: "sp", arg: 2, scope: !6055, file: !2465, line: 340, type: !256)
!6059 = !DILocation(line: 340, column: 18, scope: !6055)
!6060 = !DILocalVariable(name: "loop", scope: !6055, file: !2465, line: 342, type: !717)
!6061 = !DILocation(line: 342, column: 7, scope: !6055)
!6062 = !DILocation(line: 344, column: 2, scope: !6055)
!6063 = !DILocation(line: 345, column: 12, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6055, file: !2465, line: 344, column: 5)
!6065 = !DILocation(line: 345, column: 11, scope: !6064)
!6066 = !DILocation(line: 345, column: 3, scope: !6064)
!6067 = !DILocation(line: 347, column: 4, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6064, file: !2465, line: 345, column: 16)
!6069 = !DILocation(line: 347, column: 10, scope: !6068)
!6070 = !DILocation(line: 347, column: 20, scope: !6068)
!6071 = !DILocation(line: 348, column: 4, scope: !6068)
!6072 = !DILocation(line: 350, column: 4, scope: !6068)
!6073 = !DILocation(line: 350, column: 10, scope: !6068)
!6074 = !DILocation(line: 350, column: 20, scope: !6068)
!6075 = !DILocation(line: 351, column: 4, scope: !6068)
!6076 = !DILocation(line: 353, column: 4, scope: !6068)
!6077 = !DILocation(line: 353, column: 10, scope: !6068)
!6078 = !DILocation(line: 353, column: 21, scope: !6068)
!6079 = !DILocation(line: 354, column: 4, scope: !6068)
!6080 = !DILocation(line: 356, column: 4, scope: !6068)
!6081 = !DILocation(line: 356, column: 10, scope: !6068)
!6082 = !DILocation(line: 356, column: 20, scope: !6068)
!6083 = !DILocation(line: 357, column: 4, scope: !6068)
!6084 = !DILocation(line: 359, column: 4, scope: !6068)
!6085 = !DILocation(line: 359, column: 10, scope: !6068)
!6086 = !DILocation(line: 359, column: 20, scope: !6068)
!6087 = !DILocation(line: 360, column: 4, scope: !6068)
!6088 = !DILocation(line: 362, column: 9, scope: !6068)
!6089 = !DILocation(line: 363, column: 3, scope: !6068)
!6090 = !DILocation(line: 364, column: 7, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6064, file: !2465, line: 364, column: 7)
!6092 = !DILocation(line: 364, column: 7, scope: !6064)
!6093 = !DILocation(line: 365, column: 4, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6091, file: !2465, line: 364, column: 13)
!6095 = !DILocation(line: 366, column: 3, scope: !6094)
!6096 = !DILocation(line: 367, column: 2, scope: !6064)
!6097 = !DILocation(line: 367, column: 11, scope: !6055)
!6098 = distinct !{!6098, !6062, !6099}
!6099 = !DILocation(line: 367, column: 15, scope: !6055)
!6100 = !DILocation(line: 370, column: 6, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6055, file: !2465, line: 370, column: 6)
!6102 = !DILocation(line: 370, column: 12, scope: !6101)
!6103 = !DILocation(line: 370, column: 22, scope: !6101)
!6104 = !DILocation(line: 370, column: 25, scope: !6101)
!6105 = !DILocation(line: 370, column: 31, scope: !6101)
!6106 = !DILocation(line: 370, column: 6, scope: !6055)
!6107 = !DILocation(line: 371, column: 3, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6101, file: !2465, line: 370, column: 42)
!6109 = !DILocation(line: 371, column: 9, scope: !6108)
!6110 = !DILocation(line: 371, column: 19, scope: !6108)
!6111 = !DILocation(line: 372, column: 2, scope: !6108)
!6112 = !DILocation(line: 376, column: 9, scope: !6055)
!6113 = !DILocation(line: 376, column: 2, scope: !6055)
!6114 = distinct !DISubprogram(name: "extract_width", scope: !2465, file: !2465, line: 388, type: !5793, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6115 = !DILocalVariable(name: "conv", arg: 1, scope: !6114, file: !2465, line: 388, type: !5162)
!6116 = !DILocation(line: 388, column: 60, scope: !6114)
!6117 = !DILocalVariable(name: "sp", arg: 2, scope: !6114, file: !2465, line: 389, type: !256)
!6118 = !DILocation(line: 389, column: 18, scope: !6114)
!6119 = !DILocation(line: 391, column: 2, scope: !6114)
!6120 = !DILocation(line: 391, column: 8, scope: !6114)
!6121 = !DILocation(line: 391, column: 22, scope: !6114)
!6122 = !DILocation(line: 393, column: 7, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6114, file: !2465, line: 393, column: 6)
!6124 = !DILocation(line: 393, column: 6, scope: !6123)
!6125 = !DILocation(line: 393, column: 10, scope: !6123)
!6126 = !DILocation(line: 393, column: 6, scope: !6114)
!6127 = !DILocation(line: 394, column: 3, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6123, file: !2465, line: 393, column: 18)
!6129 = !DILocation(line: 394, column: 9, scope: !6128)
!6130 = !DILocation(line: 394, column: 20, scope: !6128)
!6131 = !DILocation(line: 395, column: 10, scope: !6128)
!6132 = !DILocation(line: 395, column: 3, scope: !6128)
!6133 = !DILocalVariable(name: "wp", scope: !6114, file: !2465, line: 398, type: !256)
!6134 = !DILocation(line: 398, column: 14, scope: !6114)
!6135 = !DILocation(line: 398, column: 19, scope: !6114)
!6136 = !DILocalVariable(name: "width", scope: !6114, file: !2465, line: 399, type: !217)
!6137 = !DILocation(line: 399, column: 9, scope: !6114)
!6138 = !DILocation(line: 399, column: 17, scope: !6114)
!6139 = !DILocation(line: 401, column: 6, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6114, file: !2465, line: 401, column: 6)
!6141 = !DILocation(line: 401, column: 12, scope: !6140)
!6142 = !DILocation(line: 401, column: 9, scope: !6140)
!6143 = !DILocation(line: 401, column: 6, scope: !6114)
!6144 = !DILocation(line: 402, column: 3, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6140, file: !2465, line: 401, column: 16)
!6146 = !DILocation(line: 402, column: 9, scope: !6145)
!6147 = !DILocation(line: 402, column: 23, scope: !6145)
!6148 = !DILocation(line: 403, column: 23, scope: !6145)
!6149 = !DILocation(line: 403, column: 3, scope: !6145)
!6150 = !DILocation(line: 403, column: 9, scope: !6145)
!6151 = !DILocation(line: 403, column: 21, scope: !6145)
!6152 = !DILocation(line: 404, column: 26, scope: !6145)
!6153 = !DILocation(line: 404, column: 32, scope: !6145)
!6154 = !DILocation(line: 404, column: 44, scope: !6145)
!6155 = !DILocation(line: 405, column: 11, scope: !6145)
!6156 = !DILocation(line: 405, column: 15, scope: !6145)
!6157 = !DILocation(line: 405, column: 32, scope: !6145)
!6158 = !DILocation(line: 405, column: 38, scope: !6145)
!6159 = !DILocation(line: 405, column: 21, scope: !6145)
!6160 = !DILocation(line: 404, column: 3, scope: !6145)
!6161 = !DILocation(line: 404, column: 9, scope: !6145)
!6162 = !DILocation(line: 404, column: 21, scope: !6145)
!6163 = !DILocation(line: 406, column: 2, scope: !6145)
!6164 = !DILocation(line: 408, column: 9, scope: !6114)
!6165 = !DILocation(line: 408, column: 2, scope: !6114)
!6166 = !DILocation(line: 409, column: 1, scope: !6114)
!6167 = distinct !DISubprogram(name: "extract_prec", scope: !2465, file: !2465, line: 420, type: !5793, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6168 = !DILocalVariable(name: "conv", arg: 1, scope: !6167, file: !2465, line: 420, type: !5162)
!6169 = !DILocation(line: 420, column: 59, scope: !6167)
!6170 = !DILocalVariable(name: "sp", arg: 2, scope: !6167, file: !2465, line: 421, type: !256)
!6171 = !DILocation(line: 421, column: 24, scope: !6167)
!6172 = !DILocation(line: 423, column: 25, scope: !6167)
!6173 = !DILocation(line: 423, column: 24, scope: !6167)
!6174 = !DILocation(line: 423, column: 28, scope: !6167)
!6175 = !DILocation(line: 423, column: 2, scope: !6167)
!6176 = !DILocation(line: 423, column: 8, scope: !6167)
!6177 = !DILocation(line: 423, column: 21, scope: !6167)
!6178 = !DILocation(line: 425, column: 7, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6167, file: !2465, line: 425, column: 6)
!6180 = !DILocation(line: 425, column: 13, scope: !6179)
!6181 = !DILocation(line: 425, column: 6, scope: !6167)
!6182 = !DILocation(line: 426, column: 10, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6179, file: !2465, line: 425, column: 27)
!6184 = !DILocation(line: 426, column: 3, scope: !6183)
!6185 = !DILocation(line: 428, column: 2, scope: !6167)
!6186 = !DILocation(line: 430, column: 7, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6167, file: !2465, line: 430, column: 6)
!6188 = !DILocation(line: 430, column: 6, scope: !6187)
!6189 = !DILocation(line: 430, column: 10, scope: !6187)
!6190 = !DILocation(line: 430, column: 6, scope: !6167)
!6191 = !DILocation(line: 431, column: 3, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6187, file: !2465, line: 430, column: 18)
!6193 = !DILocation(line: 431, column: 9, scope: !6192)
!6194 = !DILocation(line: 431, column: 19, scope: !6192)
!6195 = !DILocation(line: 432, column: 10, scope: !6192)
!6196 = !DILocation(line: 432, column: 3, scope: !6192)
!6197 = !DILocalVariable(name: "prec", scope: !6167, file: !2465, line: 435, type: !217)
!6198 = !DILocation(line: 435, column: 9, scope: !6167)
!6199 = !DILocation(line: 435, column: 16, scope: !6167)
!6200 = !DILocation(line: 437, column: 21, scope: !6167)
!6201 = !DILocation(line: 437, column: 2, scope: !6167)
!6202 = !DILocation(line: 437, column: 8, scope: !6167)
!6203 = !DILocation(line: 437, column: 19, scope: !6167)
!6204 = !DILocation(line: 438, column: 25, scope: !6167)
!6205 = !DILocation(line: 438, column: 31, scope: !6167)
!6206 = !DILocation(line: 438, column: 42, scope: !6167)
!6207 = !DILocation(line: 439, column: 10, scope: !6167)
!6208 = !DILocation(line: 439, column: 14, scope: !6167)
!6209 = !DILocation(line: 439, column: 30, scope: !6167)
!6210 = !DILocation(line: 439, column: 36, scope: !6167)
!6211 = !DILocation(line: 439, column: 19, scope: !6167)
!6212 = !DILocation(line: 438, column: 2, scope: !6167)
!6213 = !DILocation(line: 438, column: 8, scope: !6167)
!6214 = !DILocation(line: 438, column: 20, scope: !6167)
!6215 = !DILocation(line: 441, column: 9, scope: !6167)
!6216 = !DILocation(line: 441, column: 2, scope: !6167)
!6217 = !DILocation(line: 442, column: 1, scope: !6167)
!6218 = distinct !DISubprogram(name: "extract_length", scope: !2465, file: !2465, line: 453, type: !5793, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6219 = !DILocalVariable(name: "conv", arg: 1, scope: !6218, file: !2465, line: 453, type: !5162)
!6220 = !DILocation(line: 453, column: 61, scope: !6218)
!6221 = !DILocalVariable(name: "sp", arg: 2, scope: !6218, file: !2465, line: 454, type: !256)
!6222 = !DILocation(line: 454, column: 19, scope: !6218)
!6223 = !DILocation(line: 456, column: 11, scope: !6218)
!6224 = !DILocation(line: 456, column: 10, scope: !6218)
!6225 = !DILocation(line: 456, column: 2, scope: !6218)
!6226 = !DILocation(line: 458, column: 8, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !2465, line: 458, column: 7)
!6228 = distinct !DILexicalBlock(scope: !6218, file: !2465, line: 456, column: 15)
!6229 = !DILocation(line: 458, column: 7, scope: !6227)
!6230 = !DILocation(line: 458, column: 13, scope: !6227)
!6231 = !DILocation(line: 458, column: 7, scope: !6228)
!6232 = !DILocation(line: 459, column: 4, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6227, file: !2465, line: 458, column: 21)
!6234 = !DILocation(line: 459, column: 10, scope: !6233)
!6235 = !DILocation(line: 459, column: 21, scope: !6233)
!6236 = !DILocation(line: 460, column: 4, scope: !6233)
!6237 = !DILocation(line: 461, column: 3, scope: !6233)
!6238 = !DILocation(line: 462, column: 4, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6227, file: !2465, line: 461, column: 10)
!6240 = !DILocation(line: 462, column: 10, scope: !6239)
!6241 = !DILocation(line: 462, column: 21, scope: !6239)
!6242 = !DILocation(line: 464, column: 3, scope: !6228)
!6243 = !DILocation(line: 466, column: 8, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6228, file: !2465, line: 466, column: 7)
!6245 = !DILocation(line: 466, column: 7, scope: !6244)
!6246 = !DILocation(line: 466, column: 13, scope: !6244)
!6247 = !DILocation(line: 466, column: 7, scope: !6228)
!6248 = !DILocation(line: 467, column: 4, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6244, file: !2465, line: 466, column: 21)
!6250 = !DILocation(line: 467, column: 10, scope: !6249)
!6251 = !DILocation(line: 467, column: 21, scope: !6249)
!6252 = !DILocation(line: 468, column: 4, scope: !6249)
!6253 = !DILocation(line: 469, column: 3, scope: !6249)
!6254 = !DILocation(line: 470, column: 4, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6244, file: !2465, line: 469, column: 10)
!6256 = !DILocation(line: 470, column: 10, scope: !6255)
!6257 = !DILocation(line: 470, column: 21, scope: !6255)
!6258 = !DILocation(line: 472, column: 3, scope: !6228)
!6259 = !DILocation(line: 474, column: 3, scope: !6228)
!6260 = !DILocation(line: 474, column: 9, scope: !6228)
!6261 = !DILocation(line: 474, column: 20, scope: !6228)
!6262 = !DILocation(line: 475, column: 3, scope: !6228)
!6263 = !DILocation(line: 476, column: 3, scope: !6228)
!6264 = !DILocation(line: 478, column: 3, scope: !6228)
!6265 = !DILocation(line: 478, column: 9, scope: !6228)
!6266 = !DILocation(line: 478, column: 20, scope: !6228)
!6267 = !DILocation(line: 479, column: 3, scope: !6228)
!6268 = !DILocation(line: 480, column: 3, scope: !6228)
!6269 = !DILocation(line: 482, column: 3, scope: !6228)
!6270 = !DILocation(line: 482, column: 9, scope: !6228)
!6271 = !DILocation(line: 482, column: 20, scope: !6228)
!6272 = !DILocation(line: 483, column: 3, scope: !6228)
!6273 = !DILocation(line: 484, column: 3, scope: !6228)
!6274 = !DILocation(line: 486, column: 3, scope: !6228)
!6275 = !DILocation(line: 486, column: 9, scope: !6228)
!6276 = !DILocation(line: 486, column: 20, scope: !6228)
!6277 = !DILocation(line: 487, column: 3, scope: !6228)
!6278 = !DILocation(line: 492, column: 3, scope: !6228)
!6279 = !DILocation(line: 492, column: 9, scope: !6228)
!6280 = !DILocation(line: 492, column: 21, scope: !6228)
!6281 = !DILocation(line: 493, column: 3, scope: !6228)
!6282 = !DILocation(line: 495, column: 3, scope: !6228)
!6283 = !DILocation(line: 495, column: 9, scope: !6228)
!6284 = !DILocation(line: 495, column: 20, scope: !6228)
!6285 = !DILocation(line: 496, column: 3, scope: !6228)
!6286 = !DILocation(line: 498, column: 9, scope: !6218)
!6287 = !DILocation(line: 498, column: 2, scope: !6218)
!6288 = distinct !DISubprogram(name: "extract_specifier", scope: !2465, file: !2465, line: 513, type: !5793, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6289 = !DILocalVariable(name: "conv", arg: 1, scope: !6288, file: !2465, line: 513, type: !5162)
!6290 = !DILocation(line: 513, column: 64, scope: !6288)
!6291 = !DILocalVariable(name: "sp", arg: 2, scope: !6288, file: !2465, line: 514, type: !256)
!6292 = !DILocation(line: 514, column: 22, scope: !6288)
!6293 = !DILocalVariable(name: "unsupported", scope: !6288, file: !2465, line: 516, type: !717)
!6294 = !DILocation(line: 516, column: 7, scope: !6288)
!6295 = !DILocation(line: 518, column: 23, scope: !6288)
!6296 = !DILocation(line: 518, column: 20, scope: !6288)
!6297 = !DILocation(line: 518, column: 2, scope: !6288)
!6298 = !DILocation(line: 518, column: 8, scope: !6288)
!6299 = !DILocation(line: 518, column: 18, scope: !6288)
!6300 = !DILocation(line: 520, column: 10, scope: !6288)
!6301 = !DILocation(line: 520, column: 16, scope: !6288)
!6302 = !DILocation(line: 520, column: 2, scope: !6288)
!6303 = !DILocation(line: 522, column: 3, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6288, file: !2465, line: 520, column: 27)
!6305 = !DILocation(line: 522, column: 9, scope: !6304)
!6306 = !DILocation(line: 522, column: 23, scope: !6304)
!6307 = !DILocation(line: 523, column: 3, scope: !6304)
!6308 = !DILocation(line: 525, column: 3, scope: !6304)
!6309 = !DILocation(line: 525, column: 9, scope: !6304)
!6310 = !DILocation(line: 525, column: 23, scope: !6304)
!6311 = !DILabel(scope: !6304, name: "int_conv", file: !2465, line: 526)
!6312 = !DILocation(line: 526, column: 1, scope: !6304)
!6313 = !DILocation(line: 528, column: 7, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6304, file: !2465, line: 528, column: 7)
!6315 = !DILocation(line: 528, column: 13, scope: !6314)
!6316 = !DILocation(line: 528, column: 24, scope: !6314)
!6317 = !DILocation(line: 528, column: 7, scope: !6304)
!6318 = !DILocation(line: 529, column: 4, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6314, file: !2465, line: 528, column: 43)
!6320 = !DILocation(line: 529, column: 10, scope: !6319)
!6321 = !DILocation(line: 529, column: 18, scope: !6319)
!6322 = !DILocation(line: 530, column: 3, scope: !6319)
!6323 = !DILocation(line: 535, column: 7, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6304, file: !2465, line: 535, column: 7)
!6325 = !DILocation(line: 535, column: 13, scope: !6324)
!6326 = !DILocation(line: 535, column: 23, scope: !6324)
!6327 = !DILocation(line: 535, column: 7, scope: !6304)
!6328 = !DILocation(line: 536, column: 19, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6324, file: !2465, line: 535, column: 31)
!6330 = !DILocation(line: 536, column: 25, scope: !6329)
!6331 = !DILocation(line: 536, column: 36, scope: !6329)
!6332 = !DILocation(line: 536, column: 16, scope: !6329)
!6333 = !DILocation(line: 537, column: 3, scope: !6329)
!6334 = !DILocation(line: 567, column: 3, scope: !6304)
!6335 = !DILocation(line: 570, column: 3, scope: !6304)
!6336 = !DILocation(line: 570, column: 9, scope: !6304)
!6337 = !DILocation(line: 570, column: 23, scope: !6304)
!6338 = !DILocation(line: 574, column: 16, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !2465, line: 573, column: 48)
!6340 = distinct !DILexicalBlock(scope: !6304, file: !2465, line: 573, column: 7)
!6341 = !DILocation(line: 575, column: 4, scope: !6339)
!6342 = !DILocation(line: 603, column: 3, scope: !6304)
!6343 = !DILocation(line: 603, column: 9, scope: !6304)
!6344 = !DILocation(line: 603, column: 23, scope: !6304)
!6345 = !DILocation(line: 605, column: 7, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6304, file: !2465, line: 605, column: 7)
!6347 = !DILocation(line: 605, column: 13, scope: !6346)
!6348 = !DILocation(line: 605, column: 24, scope: !6346)
!6349 = !DILocation(line: 605, column: 7, scope: !6304)
!6350 = !DILocation(line: 606, column: 16, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6346, file: !2465, line: 605, column: 43)
!6352 = !DILocation(line: 607, column: 3, scope: !6351)
!6353 = !DILocation(line: 608, column: 3, scope: !6304)
!6354 = !DILocation(line: 612, column: 3, scope: !6304)
!6355 = !DILocation(line: 612, column: 9, scope: !6304)
!6356 = !DILocation(line: 612, column: 23, scope: !6304)
!6357 = !DILocation(line: 619, column: 7, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6304, file: !2465, line: 619, column: 7)
!6359 = !DILocation(line: 619, column: 13, scope: !6358)
!6360 = !DILocation(line: 619, column: 24, scope: !6358)
!6361 = !DILocation(line: 619, column: 7, scope: !6304)
!6362 = !DILocation(line: 620, column: 16, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6358, file: !2465, line: 619, column: 40)
!6364 = !DILocation(line: 621, column: 3, scope: !6363)
!6365 = !DILocation(line: 622, column: 3, scope: !6304)
!6366 = !DILocation(line: 625, column: 3, scope: !6304)
!6367 = !DILocation(line: 625, column: 9, scope: !6304)
!6368 = !DILocation(line: 625, column: 17, scope: !6304)
!6369 = !DILocation(line: 626, column: 3, scope: !6304)
!6370 = !DILocation(line: 629, column: 23, scope: !6288)
!6371 = !DILocation(line: 629, column: 2, scope: !6288)
!6372 = !DILocation(line: 629, column: 8, scope: !6288)
!6373 = !DILocation(line: 629, column: 20, scope: !6288)
!6374 = !DILocation(line: 631, column: 9, scope: !6288)
!6375 = !DILocation(line: 631, column: 2, scope: !6288)
!6376 = distinct !DISubprogram(name: "extract_decimal", scope: !2465, file: !2465, line: 318, type: !6377, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!217, !6379}
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!6380 = !DILocalVariable(name: "str", arg: 1, scope: !6376, file: !2465, line: 318, type: !6379)
!6381 = !DILocation(line: 318, column: 44, scope: !6376)
!6382 = !DILocalVariable(name: "sp", scope: !6376, file: !2465, line: 320, type: !256)
!6383 = !DILocation(line: 320, column: 14, scope: !6376)
!6384 = !DILocation(line: 320, column: 20, scope: !6376)
!6385 = !DILocation(line: 320, column: 19, scope: !6376)
!6386 = !DILocalVariable(name: "val", scope: !6376, file: !2465, line: 321, type: !217)
!6387 = !DILocation(line: 321, column: 9, scope: !6376)
!6388 = !DILocation(line: 323, column: 2, scope: !6376)
!6389 = !DILocation(line: 323, column: 38, scope: !6376)
!6390 = !DILocation(line: 323, column: 37, scope: !6376)
!6391 = !DILocation(line: 323, column: 17, scope: !6376)
!6392 = !DILocation(line: 323, column: 9, scope: !6376)
!6393 = !DILocation(line: 324, column: 15, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6376, file: !2465, line: 323, column: 43)
!6395 = !DILocation(line: 324, column: 13, scope: !6394)
!6396 = !DILocation(line: 324, column: 24, scope: !6394)
!6397 = !DILocation(line: 324, column: 21, scope: !6394)
!6398 = !DILocation(line: 324, column: 19, scope: !6394)
!6399 = !DILocation(line: 324, column: 27, scope: !6394)
!6400 = !DILocation(line: 324, column: 7, scope: !6394)
!6401 = distinct !{!6401, !6388, !6402}
!6402 = !DILocation(line: 325, column: 2, scope: !6376)
!6403 = !DILocation(line: 326, column: 9, scope: !6376)
!6404 = !DILocation(line: 326, column: 3, scope: !6376)
!6405 = !DILocation(line: 326, column: 7, scope: !6376)
!6406 = !DILocation(line: 327, column: 9, scope: !6376)
!6407 = !DILocation(line: 327, column: 2, scope: !6376)
!6408 = distinct !DISubprogram(name: "isdigit", scope: !6035, file: !6035, line: 43, type: !274, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2461, retainedNodes: !223)
!6409 = !DILocalVariable(name: "a", arg: 1, scope: !6408, file: !6035, line: 43, type: !103)
!6410 = !DILocation(line: 43, column: 31, scope: !6408)
!6411 = !DILocation(line: 45, column: 27, scope: !6408)
!6412 = !DILocation(line: 45, column: 29, scope: !6408)
!6413 = !DILocation(line: 45, column: 45, scope: !6408)
!6414 = !DILocation(line: 45, column: 2, scope: !6408)
!6415 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6416, file: !6416, line: 9, type: !253, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2498, retainedNodes: !223)
!6416 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!6417 = !DILocation(line: 11, column: 1, scope: !6415)
!6418 = !{i64 2147560438, i64 2147560481, i64 2147560521}
!6419 = !DILocation(line: 12, column: 1, scope: !6415)
!6420 = !{i64 2147564665, i64 2147564708, i64 2147564748}
!6421 = !DILocation(line: 13, column: 1, scope: !6415)
!6422 = !{i64 2147564874, i64 2147564917, i64 2147564957}
!6423 = !DILocation(line: 14, column: 1, scope: !6415)
!6424 = !{i64 2147565043, i64 2147565086, i64 2147565126}
!6425 = !DILocation(line: 15, column: 1, scope: !6415)
!6426 = !{i64 2147565206, i64 2147565249, i64 2147565289}
!6427 = !DILocation(line: 16, column: 1, scope: !6415)
!6428 = !{i64 2147565390, i64 2147565433, i64 2147565473}
!6429 = !DILocation(line: 17, column: 1, scope: !6415)
!6430 = !{i64 2147565569, i64 2147565612, i64 2147565652}
!6431 = !DILocation(line: 18, column: 1, scope: !6415)
!6432 = !{i64 2147565808, i64 2147565851, i64 2147565891}
!6433 = !DILocation(line: 19, column: 1, scope: !6415)
!6434 = !{i64 2147566044, i64 2147566087, i64 2147566127}
!6435 = !DILocation(line: 20, column: 1, scope: !6415)
!6436 = !{i64 2147566230, i64 2147566273, i64 2147566313}
!6437 = !DILocation(line: 21, column: 1, scope: !6415)
!6438 = !{i64 2147566440, i64 2147566483, i64 2147566523}
!6439 = !DILocation(line: 22, column: 1, scope: !6415)
!6440 = !{i64 2147566643, i64 2147566686, i64 2147566726}
!6441 = !DILocation(line: 23, column: 1, scope: !6415)
!6442 = !{i64 2147566846, i64 2147566889, i64 2147566929}
!6443 = !DILocation(line: 24, column: 1, scope: !6415)
!6444 = !{i64 2147567021, i64 2147567064, i64 2147567104}
!6445 = !DILocation(line: 25, column: 1, scope: !6415)
!6446 = !{i64 2147567229, i64 2147567272, i64 2147567312}
!6447 = !DILocation(line: 26, column: 1, scope: !6415)
!6448 = !{i64 2147567433, i64 2147567476, i64 2147567516}
!6449 = !DILocation(line: 27, column: 1, scope: !6415)
!6450 = !{i64 2147567626, i64 2147567669, i64 2147567709}
!6451 = !DILocation(line: 28, column: 1, scope: !6415)
!6452 = !{i64 2147567852, i64 2147567895, i64 2147567935}
!6453 = !DILocation(line: 29, column: 1, scope: !6415)
!6454 = !{i64 2147568081, i64 2147568124, i64 2147568164}
!6455 = !DILocation(line: 30, column: 1, scope: !6415)
!6456 = !{i64 2147568241, i64 2147568284, i64 2147568324}
!6457 = !DILocation(line: 31, column: 1, scope: !6415)
!6458 = !{i64 2147568434, i64 2147568477, i64 2147568517}
!6459 = !DILocation(line: 32, column: 1, scope: !6415)
!6460 = !{i64 2147568661, i64 2147568704, i64 2147568744}
!6461 = !DILocation(line: 33, column: 1, scope: !6415)
!6462 = !{i64 2147568863, i64 2147568906, i64 2147568946}
!6463 = !DILocation(line: 34, column: 1, scope: !6415)
!6464 = !{i64 2147569078, i64 2147569121, i64 2147569161}
!6465 = !DILocation(line: 35, column: 1, scope: !6415)
!6466 = !{i64 2147569250, i64 2147569293, i64 2147569333}
!6467 = !DILocation(line: 36, column: 1, scope: !6415)
!6468 = !{i64 2147569452, i64 2147569495, i64 2147569535}
!6469 = !DILocation(line: 37, column: 1, scope: !6415)
!6470 = !{i64 2147569651, i64 2147569694, i64 2147569734}
!6471 = !DILocation(line: 38, column: 1, scope: !6415)
!6472 = !{i64 2147569871, i64 2147569914, i64 2147569954}
!6473 = !DILocation(line: 39, column: 1, scope: !6415)
!6474 = !{i64 2147570046, i64 2147570089, i64 2147570129}
!6475 = !DILocation(line: 40, column: 1, scope: !6415)
!6476 = !{i64 2147570284, i64 2147570327, i64 2147570367}
!6477 = !DILocation(line: 41, column: 1, scope: !6415)
!6478 = !{i64 2147570519, i64 2147570562, i64 2147570602}
!6479 = !DILocation(line: 42, column: 1, scope: !6415)
!6480 = !{i64 2147570745, i64 2147570788, i64 2147570828}
!6481 = !DILocation(line: 43, column: 1, scope: !6415)
!6482 = !{i64 2147570986, i64 2147571029, i64 2147571069}
!6483 = !DILocation(line: 44, column: 1, scope: !6415)
!6484 = !{i64 2147571233, i64 2147571276, i64 2147571316}
!6485 = !DILocation(line: 45, column: 1, scope: !6415)
!6486 = !{i64 2147571474, i64 2147571517, i64 2147571557}
!6487 = !DILocation(line: 46, column: 1, scope: !6415)
!6488 = !{i64 2147571718, i64 2147571761, i64 2147571801}
!6489 = !DILocation(line: 47, column: 1, scope: !6415)
!6490 = !{i64 2147571962, i64 2147572005, i64 2147572045}
!6491 = !DILocation(line: 48, column: 1, scope: !6415)
!6492 = !{i64 2147572212, i64 2147572255, i64 2147572295}
!6493 = !DILocation(line: 49, column: 1, scope: !6415)
!6494 = !{i64 2147572453, i64 2147572496, i64 2147572536}
!6495 = !DILocation(line: 50, column: 1, scope: !6415)
!6496 = !{i64 2147572706, i64 2147572749, i64 2147572789}
!6497 = !DILocation(line: 51, column: 1, scope: !6415)
!6498 = !{i64 2147572953, i64 2147572996, i64 2147573036}
!6499 = !DILocation(line: 52, column: 1, scope: !6415)
!6500 = !{i64 2147573194, i64 2147573237, i64 2147573277}
!6501 = !DILocation(line: 53, column: 1, scope: !6415)
!6502 = !{i64 2147577502, i64 2147577545, i64 2147577585}
!6503 = !DILocation(line: 54, column: 1, scope: !6415)
!6504 = !{i64 2147577743, i64 2147577786, i64 2147577826}
!6505 = !DILocation(line: 55, column: 1, scope: !6415)
!6506 = !{i64 2147577984, i64 2147578027, i64 2147578067}
!6507 = !DILocation(line: 56, column: 1, scope: !6415)
!6508 = !{i64 2147578228, i64 2147578271, i64 2147578311}
!6509 = !DILocation(line: 57, column: 1, scope: !6415)
!6510 = !{i64 2147578469, i64 2147578512, i64 2147578552}
!6511 = !DILocation(line: 58, column: 1, scope: !6415)
!6512 = !{i64 2147578713, i64 2147578756, i64 2147578796}
!6513 = !DILocation(line: 59, column: 1, scope: !6415)
!6514 = !{i64 2147578960, i64 2147579003, i64 2147579043}
!6515 = !DILocation(line: 60, column: 1, scope: !6415)
!6516 = !{i64 2147579201, i64 2147579244, i64 2147579284}
!6517 = !DILocation(line: 61, column: 1, scope: !6415)
!6518 = !{i64 2147579445, i64 2147579488, i64 2147579528}
!6519 = !DILocation(line: 62, column: 1, scope: !6415)
!6520 = !{i64 2147579689, i64 2147579732, i64 2147579772}
!6521 = !DILocation(line: 63, column: 1, scope: !6415)
!6522 = !{i64 2147579930, i64 2147579973, i64 2147580013}
!6523 = !DILocation(line: 64, column: 1, scope: !6415)
!6524 = !{i64 2147580216, i64 2147580259, i64 2147580299}
!6525 = !DILocation(line: 65, column: 1, scope: !6415)
!6526 = !{i64 2147580451, i64 2147580494, i64 2147580534}
!6527 = !DILocation(line: 66, column: 1, scope: !6415)
!6528 = !{i64 2147580713, i64 2147580756, i64 2147580796}
!6529 = !DILocation(line: 67, column: 1, scope: !6415)
!6530 = !{i64 2147580981, i64 2147581024, i64 2147581064}
!6531 = !DILocation(line: 68, column: 1, scope: !6415)
!6532 = !{i64 2147581210, i64 2147581253, i64 2147581293}
!6533 = !DILocation(line: 69, column: 1, scope: !6415)
!6534 = !{i64 2147581418, i64 2147581461, i64 2147581501}
!6535 = !DILocation(line: 70, column: 1, scope: !6415)
!6536 = !{i64 2147581629, i64 2147581672, i64 2147581712}
!6537 = !DILocation(line: 71, column: 1, scope: !6415)
!6538 = !{i64 2147581864, i64 2147581907, i64 2147581947}
!6539 = !DILocation(line: 72, column: 1, scope: !6415)
!6540 = !{i64 2147582093, i64 2147582136, i64 2147582176}
!6541 = !DILocation(line: 73, column: 1, scope: !6415)
!6542 = !{i64 2147582331, i64 2147582374, i64 2147582414}
!6543 = !DILocation(line: 74, column: 1, scope: !6415)
!6544 = !{i64 2147582563, i64 2147582606, i64 2147582646}
!6545 = !DILocation(line: 75, column: 1, scope: !6415)
!6546 = !{i64 2147582789, i64 2147582832, i64 2147582872}
!6547 = !DILocation(line: 76, column: 1, scope: !6415)
!6548 = !{i64 2147582967, i64 2147583010, i64 2147583050}
!6549 = !DILocation(line: 77, column: 1, scope: !6415)
!6550 = !{i64 2147583151, i64 2147583194, i64 2147583234}
!6551 = !DILocation(line: 78, column: 1, scope: !6415)
!6552 = !{i64 2147583404, i64 2147583447, i64 2147583487}
!6553 = !DILocation(line: 79, column: 1, scope: !6415)
!6554 = !{i64 2147583591, i64 2147583634, i64 2147583674}
!6555 = !DILocation(line: 80, column: 1, scope: !6415)
!6556 = !{i64 2147583838, i64 2147583881, i64 2147583921}
!6557 = !DILocation(line: 81, column: 1, scope: !6415)
!6558 = !{i64 2147584055, i64 2147584098, i64 2147584138}
!6559 = !DILocation(line: 82, column: 1, scope: !6415)
!6560 = !{i64 2147584287, i64 2147584330, i64 2147584370}
!6561 = !DILocation(line: 83, column: 1, scope: !6415)
!6562 = !{i64 2147584513, i64 2147584556, i64 2147584596}
!6563 = !DILocation(line: 84, column: 1, scope: !6415)
!6564 = !{i64 2147584727, i64 2147584770, i64 2147584810}
!6565 = !DILocation(line: 85, column: 1, scope: !6415)
!6566 = !{i64 2147584947, i64 2147584990, i64 2147585030}
!6567 = !DILocation(line: 86, column: 1, scope: !6415)
!6568 = !{i64 2147585179, i64 2147585222, i64 2147585262}
!6569 = !DILocation(line: 87, column: 1, scope: !6415)
!6570 = !{i64 2147585387, i64 2147585430, i64 2147585470}
!6571 = !DILocation(line: 88, column: 1, scope: !6415)
!6572 = !{i64 2147589653, i64 2147589696, i64 2147589736}
!6573 = !DILocation(line: 89, column: 1, scope: !6415)
!6574 = !{i64 2147589870, i64 2147589913, i64 2147589953}
!6575 = !DILocation(line: 90, column: 1, scope: !6415)
!6576 = !{i64 2147590084, i64 2147590127, i64 2147590167}
!6577 = !DILocation(line: 91, column: 1, scope: !6415)
!6578 = !{i64 2147590310, i64 2147590353, i64 2147590393}
!6579 = !DILocation(line: 92, column: 1, scope: !6415)
!6580 = !{i64 2147590530, i64 2147590573, i64 2147590613}
!6581 = !DILocation(line: 93, column: 1, scope: !6415)
!6582 = !{i64 2147590735, i64 2147590778, i64 2147590818}
!6583 = !DILocation(line: 94, column: 1, scope: !6415)
!6584 = !{i64 2147590967, i64 2147591010, i64 2147591050}
!6585 = !DILocation(line: 95, column: 1, scope: !6415)
!6586 = !{i64 2147591202, i64 2147591245, i64 2147591285}
!6587 = !DILocation(line: 96, column: 1, scope: !6415)
!6588 = !{i64 2147591452, i64 2147591495, i64 2147591535}
!6589 = !DILocation(line: 97, column: 1, scope: !6415)
!6590 = !{i64 2147591702, i64 2147591745, i64 2147591785}
!6591 = !DILocation(line: 98, column: 1, scope: !6415)
!6592 = !{i64 2147591940, i64 2147591983, i64 2147592023}
!6593 = !DILocation(line: 99, column: 1, scope: !6415)
!6594 = !{i64 2147592151, i64 2147592194, i64 2147592234}
!6595 = !DILocation(line: 100, column: 1, scope: !6415)
!6596 = !{i64 2147592368, i64 2147592411, i64 2147592451}
!6597 = !DILocation(line: 101, column: 1, scope: !6415)
!6598 = !{i64 2147592564, i64 2147592607, i64 2147592647}
!6599 = !DILocation(line: 102, column: 1, scope: !6415)
!6600 = !{i64 2147592766, i64 2147592809, i64 2147592849}
!6601 = !DILocation(line: 103, column: 1, scope: !6415)
!6602 = !{i64 2147592962, i64 2147593005, i64 2147593045}
!6603 = !DILocation(line: 104, column: 1, scope: !6415)
!6604 = !{i64 2147593182, i64 2147593225, i64 2147593265}
!6605 = !DILocation(line: 105, column: 1, scope: !6415)
!6606 = !{i64 2147593387, i64 2147593430, i64 2147593470}
!6607 = !DILocation(line: 106, column: 1, scope: !6415)
!6608 = !{i64 2147593571, i64 2147593614, i64 2147593654}
!6609 = !DILocation(line: 107, column: 1, scope: !6415)
!6610 = !{i64 2147593767, i64 2147593810, i64 2147593850}
!6611 = !DILocation(line: 108, column: 1, scope: !6415)
!6612 = !{i64 2147593963, i64 2147594006, i64 2147594046}
!6613 = !DILocation(line: 109, column: 1, scope: !6415)
!6614 = !{i64 2147594165, i64 2147594208, i64 2147594248}
!6615 = !DILocation(line: 110, column: 1, scope: !6415)
!6616 = !{i64 2147594361, i64 2147594404, i64 2147594444}
!6617 = !DILocation(line: 111, column: 1, scope: !6415)
!6618 = !{i64 2147594563, i64 2147594606, i64 2147594646}
!6619 = !DILocation(line: 112, column: 1, scope: !6415)
!6620 = !{i64 2147594768, i64 2147594811, i64 2147594851}
!6621 = !DILocation(line: 113, column: 1, scope: !6415)
!6622 = !{i64 2147594964, i64 2147595007, i64 2147595047}
!6623 = !DILocation(line: 114, column: 1, scope: !6415)
!6624 = !{i64 2147595166, i64 2147595209, i64 2147595249}
!6625 = !DILocation(line: 115, column: 1, scope: !6415)
!6626 = !{i64 2147595362, i64 2147595405, i64 2147595445}
!6627 = !DILocation(line: 116, column: 1, scope: !6415)
!6628 = !{i64 2147595558, i64 2147595601, i64 2147595641}
!6629 = !DILocation(line: 117, column: 1, scope: !6415)
!6630 = !{i64 2147595757, i64 2147595800, i64 2147595840}
!6631 = !DILocation(line: 118, column: 1, scope: !6415)
!6632 = !{i64 2147595956, i64 2147595999, i64 2147596039}
!6633 = !DILocation(line: 119, column: 1, scope: !6415)
!6634 = !{i64 2147596158, i64 2147596201, i64 2147596241}
!6635 = !DILocation(line: 120, column: 1, scope: !6415)
!6636 = !{i64 2147596357, i64 2147596400, i64 2147596440}
!6637 = !DILocation(line: 121, column: 1, scope: !6415)
!6638 = !{i64 2147596556, i64 2147596599, i64 2147596639}
!6639 = !DILocation(line: 122, column: 1, scope: !6415)
!6640 = !{i64 2147596755, i64 2147596798, i64 2147596838}
!6641 = !DILocation(line: 123, column: 1, scope: !6415)
!6642 = !{i64 2147596954, i64 2147596997, i64 2147597037}
!6643 = !DILocation(line: 124, column: 1, scope: !6415)
!6644 = !{i64 2147597153, i64 2147597196, i64 2147597236}
!6645 = !DILocation(line: 125, column: 1, scope: !6415)
!6646 = !{i64 2147597352, i64 2147597395, i64 2147597435}
!6647 = !DILocation(line: 126, column: 1, scope: !6415)
!6648 = !{i64 2147597551, i64 2147597594, i64 2147597634}
!6649 = !DILocation(line: 127, column: 1, scope: !6415)
!6650 = !{i64 2147597756, i64 2147597799, i64 2147597839}
!6651 = !DILocation(line: 128, column: 1, scope: !6415)
!6652 = !{i64 2147597961, i64 2147598004, i64 2147598044}
!6653 = !DILocation(line: 129, column: 1, scope: !6415)
!6654 = !{i64 2147598166, i64 2147598209, i64 2147598249}
!6655 = !DILocation(line: 130, column: 1, scope: !6415)
!6656 = !{i64 2147598365, i64 2147598408, i64 2147598448}
!6657 = !DILocation(line: 131, column: 1, scope: !6415)
!6658 = !{i64 2147598567, i64 2147598610, i64 2147598650}
!6659 = !DILocation(line: 132, column: 1, scope: !6415)
!6660 = !{i64 2147598766, i64 2147598809, i64 2147598849}
!6661 = !DILocation(line: 133, column: 1, scope: !6415)
!6662 = !{i64 2147603041, i64 2147603084, i64 2147603124}
!6663 = !DILocation(line: 134, column: 1, scope: !6415)
!6664 = !{i64 2147603246, i64 2147603289, i64 2147603329}
!6665 = !DILocation(line: 135, column: 1, scope: !6415)
!6666 = !{i64 2147603487, i64 2147603530, i64 2147603570}
!6667 = !DILocation(line: 136, column: 1, scope: !6415)
!6668 = !{i64 2147603713, i64 2147603756, i64 2147603796}
!6669 = !DILocation(line: 137, column: 1, scope: !6415)
!6670 = !{i64 2147603947, i64 2147603990, i64 2147604030}
!6671 = !DILocation(line: 138, column: 1, scope: !6415)
!6672 = !{i64 2147604155, i64 2147604198, i64 2147604238}
!6673 = !DILocation(line: 139, column: 1, scope: !6415)
!6674 = !{i64 2147604321, i64 2147604364, i64 2147604404}
!6675 = !DILocation(line: 140, column: 1, scope: !6415)
!6676 = !{i64 2147604505, i64 2147604548, i64 2147604588}
!6677 = !DILocation(line: 141, column: 1, scope: !6415)
!6678 = !{i64 2147604695, i64 2147604738, i64 2147604778}
!6679 = !DILocation(line: 142, column: 1, scope: !6415)
!6680 = !{i64 2147604879, i64 2147604922, i64 2147604962}
!6681 = !DILocation(line: 143, column: 1, scope: !6415)
!6682 = !{i64 2147605093, i64 2147605136, i64 2147605176}
!6683 = !DILocation(line: 144, column: 1, scope: !6415)
!6684 = !{i64 2147605304, i64 2147605347, i64 2147605387}
!6685 = !DILocation(line: 145, column: 1, scope: !6415)
!6686 = !{i64 2147605527, i64 2147605570, i64 2147605610}
!6687 = !DILocation(line: 146, column: 1, scope: !6415)
!6688 = !{i64 2147605711, i64 2147605754, i64 2147605794}
!6689 = !DILocation(line: 147, column: 1, scope: !6415)
!6690 = !{i64 2147605877, i64 2147605920, i64 2147605960}
!6691 = !DILocation(line: 148, column: 1, scope: !6415)
!6692 = !{i64 2147606058, i64 2147606101, i64 2147606141}
!6693 = !DILocation(line: 149, column: 1, scope: !6415)
!6694 = !{i64 2147606251, i64 2147606294, i64 2147606334}
!6695 = !DILocation(line: 150, column: 1, scope: !6415)
!6696 = !{i64 2147606477, i64 2147606520, i64 2147606560}
!6697 = !DILocation(line: 151, column: 1, scope: !6415)
!6698 = !{i64 2147606673, i64 2147606716, i64 2147606756}
!6699 = !DILocation(line: 152, column: 1, scope: !6415)
!6700 = !{i64 2147606938, i64 2147606981, i64 2147607021}
!6701 = !DILocation(line: 153, column: 1, scope: !6415)
!6702 = !{i64 2147607152, i64 2147607195, i64 2147607235}
!6703 = !DILocation(line: 154, column: 1, scope: !6415)
!6704 = !{i64 2147607315, i64 2147607358, i64 2147607398}
!6705 = !DILocation(line: 155, column: 1, scope: !6415)
!6706 = !{i64 2147607502, i64 2147607545, i64 2147607585}
!6707 = !DILocation(line: 156, column: 1, scope: !6415)
!6708 = !{i64 2147607695, i64 2147607738, i64 2147607778}
!6709 = !DILocation(line: 157, column: 1, scope: !6415)
!6710 = !{i64 2147607877, i64 2147607920, i64 2147607960}
!6711 = !DILocation(line: 158, column: 1, scope: !6415)
!6712 = !{i64 2147608091, i64 2147608134, i64 2147608174}
!6713 = !DILocation(line: 159, column: 1, scope: !6415)
!6714 = !{i64 2147608290, i64 2147608333, i64 2147608373}
!6715 = !DILocation(line: 160, column: 1, scope: !6415)
!6716 = !{i64 2147608525, i64 2147608568, i64 2147608608}
!6717 = !DILocation(line: 161, column: 1, scope: !6415)
!6718 = !{i64 2147608775, i64 2147608818, i64 2147608858}
!6719 = !DILocation(line: 162, column: 1, scope: !6415)
!6720 = !{i64 2147608977, i64 2147609020, i64 2147609060}
!6721 = !DILocation(line: 163, column: 1, scope: !6415)
!6722 = !{i64 2147609200, i64 2147609243, i64 2147609283}
!6723 = !DILocation(line: 164, column: 1, scope: !6415)
!6724 = !{i64 2147609414, i64 2147609457, i64 2147609497}
!6725 = !DILocation(line: 165, column: 1, scope: !6415)
!6726 = !{i64 2147609658, i64 2147609701, i64 2147609741}
!6727 = !DILocation(line: 166, column: 1, scope: !6415)
!6728 = !{i64 2147609884, i64 2147609927, i64 2147609967}
!6729 = !DILocation(line: 167, column: 1, scope: !6415)
!6730 = !{i64 2147610143, i64 2147610186, i64 2147610226}
!6731 = !DILocation(line: 168, column: 1, scope: !6415)
!6732 = !{i64 2147610363, i64 2147610406, i64 2147610446}
!6733 = !DILocation(line: 169, column: 1, scope: !6415)
!6734 = !{i64 2147610595, i64 2147610638, i64 2147610678}
!6735 = !DILocation(line: 170, column: 1, scope: !6415)
!6736 = !{i64 2147610836, i64 2147610879, i64 2147610919}
!6737 = !DILocation(line: 171, column: 1, scope: !6415)
!6738 = !{i64 2147611077, i64 2147611120, i64 2147611160}
!6739 = !DILocation(line: 172, column: 1, scope: !6415)
!6740 = !{i64 2147611300, i64 2147611343, i64 2147611383}
!6741 = !DILocation(line: 173, column: 1, scope: !6415)
!6742 = !{i64 2147611517, i64 2147611560, i64 2147611600}
!6743 = !DILocation(line: 174, column: 1, scope: !6415)
!6744 = !{i64 2147611758, i64 2147611801, i64 2147611841}
!6745 = !DILocation(line: 175, column: 1, scope: !6415)
!6746 = !{i64 2147616048, i64 2147616091, i64 2147616131}
!6747 = !DILocation(line: 176, column: 1, scope: !6415)
!6748 = !{i64 2147616244, i64 2147616287, i64 2147616327}
!6749 = !DILocation(line: 177, column: 1, scope: !6415)
!6750 = !{i64 2147616456, i64 2147616499, i64 2147616539}
!6751 = !DILocation(line: 178, column: 1, scope: !6415)
!6752 = !{i64 2147616677, i64 2147616720, i64 2147616760}
!6753 = !DILocation(line: 179, column: 1, scope: !6415)
!6754 = !{i64 2147616891, i64 2147616934, i64 2147616974}
!6755 = !DILocation(line: 180, column: 1, scope: !6415)
!6756 = !{i64 2147617081, i64 2147617124, i64 2147617164}
!6757 = !DILocation(line: 181, column: 1, scope: !6415)
!6758 = !{i64 2147617280, i64 2147617323, i64 2147617363}
!6759 = !DILocation(line: 182, column: 1, scope: !6415)
!6760 = !{i64 2147617485, i64 2147617528, i64 2147617568}
!6761 = !DILocation(line: 183, column: 1, scope: !6415)
!6762 = !{i64 2147617705, i64 2147617748, i64 2147617788}
!6763 = !DILocation(line: 184, column: 1, scope: !6415)
!6764 = !{i64 2147617906, i64 2147617949, i64 2147617989}
!6765 = !DILocation(line: 185, column: 1, scope: !6415)
!6766 = !{i64 2147618105, i64 2147618148, i64 2147618188}
!6767 = !DILocation(line: 186, column: 1, scope: !6415)
!6768 = !{i64 2147618274, i64 2147618317, i64 2147618357}
!6769 = !DILocation(line: 187, column: 1, scope: !6415)
!6770 = !{i64 2147618458, i64 2147618501, i64 2147618541}
!6771 = !DILocation(line: 188, column: 1, scope: !6415)
!6772 = !{i64 2147618642, i64 2147618685, i64 2147618725}
!6773 = !DILocation(line: 189, column: 1, scope: !6415)
!6774 = !{i64 2147618829, i64 2147618872, i64 2147618912}
!6775 = !DILocation(line: 190, column: 1, scope: !6415)
!6776 = !{i64 2147619013, i64 2147619056, i64 2147619096}
!6777 = !DILocation(line: 191, column: 1, scope: !6415)
!6778 = !{i64 2147619251, i64 2147619294, i64 2147619334}
!6779 = !DILocation(line: 192, column: 1, scope: !6415)
!6780 = !{i64 2147619481, i64 2147619524, i64 2147619564}
!6781 = !DILocation(line: 193, column: 1, scope: !6415)
!6782 = !{i64 2147619692, i64 2147619735, i64 2147619775}
!6783 = !DILocation(line: 194, column: 1, scope: !6415)
!6784 = !{i64 2147619879, i64 2147619922, i64 2147619962}
!6785 = !DILocation(line: 195, column: 1, scope: !6415)
!6786 = !{i64 2147620075, i64 2147620118, i64 2147620158}
!6787 = !DILocation(line: 196, column: 1, scope: !6415)
!6788 = !{i64 2147620283, i64 2147620326, i64 2147620366}
!6789 = !DILocation(line: 197, column: 1, scope: !6415)
!6790 = !{i64 2147620495, i64 2147620538, i64 2147620578}
!6791 = !DILocation(line: 198, column: 1, scope: !6415)
!6792 = !{i64 2147620694, i64 2147620737, i64 2147620777}
!6793 = !DILocation(line: 199, column: 1, scope: !6415)
!6794 = !{i64 2147620932, i64 2147620975, i64 2147621015}
!6795 = !DILocation(line: 200, column: 1, scope: !6415)
!6796 = !{i64 2147621128, i64 2147621171, i64 2147621211}
!6797 = !DILocation(line: 201, column: 1, scope: !6415)
!6798 = !{i64 2147621330, i64 2147621373, i64 2147621413}
!6799 = !DILocation(line: 202, column: 1, scope: !6415)
!6800 = !{i64 2147621523, i64 2147621566, i64 2147621606}
!6801 = !DILocation(line: 203, column: 1, scope: !6415)
!6802 = !{i64 2147621757, i64 2147621800, i64 2147621840}
!6803 = !DILocation(line: 204, column: 1, scope: !6415)
!6804 = !{i64 2147621920, i64 2147621963, i64 2147622003}
!6805 = !DILocation(line: 205, column: 1, scope: !6415)
!6806 = !{i64 2147622159, i64 2147622202, i64 2147622242}
!6807 = !DILocation(line: 206, column: 1, scope: !6415)
!6808 = !{i64 2147622398, i64 2147622441, i64 2147622481}
!6809 = !DILocation(line: 207, column: 1, scope: !6415)
!6810 = !{i64 2147622634, i64 2147622677, i64 2147622717}
!6811 = !DILocation(line: 208, column: 1, scope: !6415)
!6812 = !{i64 2147622864, i64 2147622907, i64 2147622947}
!6813 = !DILocation(line: 209, column: 1, scope: !6415)
!6814 = !{i64 2147623051, i64 2147623094, i64 2147623134}
!6815 = !DILocation(line: 210, column: 1, scope: !6415)
!6816 = !{i64 2147623250, i64 2147623293, i64 2147623333}
!6817 = !DILocation(line: 211, column: 1, scope: !6415)
!6818 = !{i64 2147623521, i64 2147623564, i64 2147623604}
!6819 = !DILocation(line: 212, column: 1, scope: !6415)
!6820 = !{i64 2147623696, i64 2147623739, i64 2147623779}
!6821 = !DILocation(line: 213, column: 1, scope: !6415)
!6822 = !{i64 2147623930, i64 2147623973, i64 2147624013}
!6823 = !DILocation(line: 214, column: 1, scope: !6415)
!6824 = !{i64 2147624138, i64 2147624181, i64 2147624221}
!6825 = !DILocation(line: 215, column: 1, scope: !6415)
!6826 = !{i64 2147624356, i64 2147624399, i64 2147624439}
!6827 = !DILocation(line: 216, column: 1, scope: !6415)
!6828 = !{i64 2147624546, i64 2147624589, i64 2147624629}
!6829 = !DILocation(line: 217, column: 1, scope: !6415)
!6830 = !{i64 2147624778, i64 2147624821, i64 2147624861}
!6831 = !DILocation(line: 218, column: 1, scope: !6415)
!6832 = !{i64 2147629099, i64 2147629142, i64 2147629182}
!6833 = !DILocation(line: 219, column: 1, scope: !6415)
!6834 = !{i64 2147629295, i64 2147629338, i64 2147629378}
!6835 = !DILocation(line: 220, column: 1, scope: !6415)
!6836 = !{i64 2147629501, i64 2147629544, i64 2147629584}
!6837 = !DILocation(line: 221, column: 1, scope: !6415)
!6838 = !{i64 2147629706, i64 2147629749, i64 2147629789}
!6839 = !DILocation(line: 222, column: 1, scope: !6415)
!6840 = !{i64 2147629920, i64 2147629963, i64 2147630003}
!6841 = !DILocation(line: 223, column: 1, scope: !6415)
!6842 = !{i64 2147630146, i64 2147630189, i64 2147630229}
!6843 = !DILocation(line: 224, column: 1, scope: !6415)
!6844 = !{i64 2147630378, i64 2147630421, i64 2147630461}
!6845 = !DILocation(line: 225, column: 1, scope: !6415)
!6846 = !{i64 2147630559, i64 2147630602, i64 2147630642}
!6847 = !DILocation(line: 226, column: 1, scope: !6415)
!6848 = !{i64 2147630758, i64 2147630801, i64 2147630841}
!6849 = !DILocation(line: 227, column: 1, scope: !6415)
!6850 = !{i64 2147630969, i64 2147631012, i64 2147631052}
!6851 = !DILocation(line: 228, column: 1, scope: !6415)
!6852 = !{i64 2147631178, i64 2147631221, i64 2147631261}
!6853 = !DILocation(line: 229, column: 1, scope: !6415)
!6854 = !{i64 2147631410, i64 2147631453, i64 2147631493}
!6855 = !DILocation(line: 230, column: 1, scope: !6415)
!6856 = !{i64 2147631612, i64 2147631655, i64 2147631695}
!6857 = !DILocation(line: 231, column: 1, scope: !6415)
!6858 = !{i64 2147631859, i64 2147631902, i64 2147631942}
!6859 = !DILocation(line: 232, column: 1, scope: !6415)
!6860 = !{i64 2147632040, i64 2147632083, i64 2147632123}
!6861 = !DILocation(line: 233, column: 1, scope: !6415)
!6862 = !{i64 2147632245, i64 2147632288, i64 2147632328}
!6863 = !DILocation(line: 234, column: 1, scope: !6415)
!6864 = !{i64 2147632486, i64 2147632529, i64 2147632569}
!6865 = !DILocation(line: 235, column: 1, scope: !6415)
!6866 = !{i64 2147632730, i64 2147632773, i64 2147632813}
!6867 = !DILocation(line: 236, column: 1, scope: !6415)
!6868 = !{i64 2147632963, i64 2147633006, i64 2147633046}
!6869 = !DILocation(line: 237, column: 1, scope: !6415)
!6870 = !{i64 2147633168, i64 2147633211, i64 2147633251}
!6871 = !DILocation(line: 238, column: 1, scope: !6415)
!6872 = !{i64 2147633355, i64 2147633398, i64 2147633438}
!6873 = !DILocation(line: 239, column: 1, scope: !6415)
!6874 = !{i64 2147633569, i64 2147633612, i64 2147633652}
!6875 = !DILocation(line: 240, column: 1, scope: !6415)
!6876 = !{i64 2147633777, i64 2147633820, i64 2147633860}
!6877 = !DILocation(line: 241, column: 1, scope: !6415)
!6878 = !{i64 2147633967, i64 2147634010, i64 2147634050}
!6879 = !DILocation(line: 242, column: 1, scope: !6415)
!6880 = !{i64 2147634181, i64 2147634224, i64 2147634264}
!6881 = !DILocation(line: 243, column: 1, scope: !6415)
!6882 = !{i64 2147634443, i64 2147634486, i64 2147634526}
!6883 = !DILocation(line: 244, column: 1, scope: !6415)
!6884 = !{i64 2147634654, i64 2147634697, i64 2147634737}
!6885 = !DILocation(line: 245, column: 1, scope: !6415)
!6886 = !{i64 2147634898, i64 2147634941, i64 2147634981}
!6887 = !DILocation(line: 246, column: 1, scope: !6415)
!6888 = !{i64 2147635109, i64 2147635152, i64 2147635192}
!6889 = !DILocation(line: 247, column: 1, scope: !6415)
!6890 = !{i64 2147635338, i64 2147635381, i64 2147635421}
!6891 = !DILocation(line: 248, column: 1, scope: !6415)
!6892 = !{i64 2147635543, i64 2147635586, i64 2147635626}
!6893 = !DILocation(line: 249, column: 1, scope: !6415)
!6894 = !{i64 2147635739, i64 2147635782, i64 2147635822}
!6895 = !DILocation(line: 250, column: 1, scope: !6415)
!6896 = !{i64 2147635962, i64 2147636005, i64 2147636045}
!6897 = !DILocation(line: 251, column: 1, scope: !6415)
!6898 = !{i64 2147636134, i64 2147636177, i64 2147636217}
!6899 = !DILocation(line: 252, column: 1, scope: !6415)
!6900 = !{i64 2147636297, i64 2147636340, i64 2147636380}
!6901 = !DILocation(line: 253, column: 1, scope: !6415)
!6902 = !{i64 2147636466, i64 2147636509, i64 2147636549}
!6903 = !DILocation(line: 254, column: 1, scope: !6415)
!6904 = !{i64 2147636671, i64 2147636714, i64 2147636754}
!6905 = !DILocation(line: 255, column: 1, scope: !6415)
!6906 = !{i64 2147636891, i64 2147636934, i64 2147636974}
!6907 = !DILocation(line: 256, column: 1, scope: !6415)
!6908 = !{i64 2147637105, i64 2147637148, i64 2147637188}
!6909 = !DILocation(line: 257, column: 1, scope: !6415)
!6910 = !{i64 2147637319, i64 2147637362, i64 2147637402}
!6911 = !DILocation(line: 258, column: 1, scope: !6415)
!6912 = !{i64 2147637530, i64 2147637573, i64 2147637613}
!6913 = !DILocation(line: 259, column: 1, scope: !6415)
!6914 = !{i64 2147637723, i64 2147637766, i64 2147637806}
!6915 = !DILocation(line: 260, column: 1, scope: !6415)
!6916 = !{i64 2147637922, i64 2147637965, i64 2147638005}
!6917 = !DILocation(line: 261, column: 1, scope: !6415)
!6918 = !{i64 2147642155, i64 2147642198, i64 2147642238}
!6919 = !DILocation(line: 262, column: 1, scope: !6415)
!6920 = !{i64 2147642348, i64 2147642391, i64 2147642431}
!6921 = !DILocation(line: 263, column: 1, scope: !6415)
!6922 = !{i64 2147642544, i64 2147642587, i64 2147642627}
!6923 = !DILocation(line: 264, column: 1, scope: !6415)
!6924 = !{i64 2147642749, i64 2147642792, i64 2147642832}
!6925 = !DILocation(line: 265, column: 1, scope: !6415)
!6926 = !{i64 2147642976, i64 2147643019, i64 2147643059}
!6927 = !DILocation(line: 266, column: 1, scope: !6415)
!6928 = !{i64 2147643193, i64 2147643236, i64 2147643276}
!6929 = !DILocation(line: 267, column: 1, scope: !6415)
!6930 = !{i64 2147643485, i64 2147643528, i64 2147643568}
!6931 = !DILocation(line: 268, column: 1, scope: !6415)
!6932 = !{i64 2147643717, i64 2147643760, i64 2147643800}
!6933 = !DILocation(line: 269, column: 1, scope: !6415)
!6934 = !{i64 2147643934, i64 2147643977, i64 2147644017}
!6935 = !DILocation(line: 270, column: 1, scope: !6415)
!6936 = !{i64 2147644141, i64 2147644184, i64 2147644224}
!6937 = !DILocation(line: 271, column: 1, scope: !6415)
!6938 = !{i64 2147644342, i64 2147644385, i64 2147644425}
!6939 = !DILocation(line: 272, column: 1, scope: !6415)
!6940 = !{i64 2147644574, i64 2147644617, i64 2147644657}
!6941 = !DILocation(line: 273, column: 1, scope: !6415)
!6942 = !{i64 2147644782, i64 2147644825, i64 2147644865}
!6943 = !DILocation(line: 274, column: 1, scope: !6415)
!6944 = !{i64 2147644972, i64 2147645015, i64 2147645055}
!6945 = !DILocation(line: 275, column: 1, scope: !6415)
!6946 = !{i64 2147645198, i64 2147645241, i64 2147645281}
!6947 = !DILocation(line: 276, column: 1, scope: !6415)
!6948 = !{i64 2147645387, i64 2147645430, i64 2147645470}
!6949 = !DILocation(line: 277, column: 1, scope: !6415)
!6950 = !{i64 2147645658, i64 2147645701, i64 2147645741}
!6951 = !DILocation(line: 278, column: 1, scope: !6415)
!6952 = !{i64 2147645878, i64 2147645921, i64 2147645961}
!6953 = !DILocation(line: 279, column: 1, scope: !6415)
!6954 = !{i64 2147646131, i64 2147646174, i64 2147646214}
!6955 = !DILocation(line: 280, column: 1, scope: !6415)
!6956 = !{i64 2147646333, i64 2147646376, i64 2147646416}
!6957 = !DILocation(line: 281, column: 1, scope: !6415)
!6958 = !{i64 2147646565, i64 2147646608, i64 2147646648}
!6959 = !DILocation(line: 282, column: 1, scope: !6415)
!6960 = !{i64 2147646776, i64 2147646819, i64 2147646859}
!6961 = !DILocation(line: 283, column: 1, scope: !6415)
!6962 = !{i64 2147646966, i64 2147647009, i64 2147647049}
!6963 = !DILocation(line: 284, column: 1, scope: !6415)
!6964 = !{i64 2147647180, i64 2147647223, i64 2147647263}
!6965 = !DILocation(line: 285, column: 1, scope: !6415)
!6966 = !{i64 2147647379, i64 2147647422, i64 2147647462}
!6967 = !DILocation(line: 286, column: 1, scope: !6415)
!6968 = !{i64 2147647566, i64 2147647609, i64 2147647649}
!6969 = !DILocation(line: 287, column: 1, scope: !6415)
!6970 = !{i64 2147647774, i64 2147647817, i64 2147647857}
!6971 = !DILocation(line: 288, column: 1, scope: !6415)
!6972 = !{i64 2147648003, i64 2147648046, i64 2147648086}
!6973 = !DILocation(line: 289, column: 1, scope: !6415)
!6974 = !{i64 2147648205, i64 2147648248, i64 2147648288}
!6975 = !DILocation(line: 290, column: 1, scope: !6415)
!6976 = !{i64 2147648404, i64 2147648447, i64 2147648487}
!6977 = !DILocation(line: 291, column: 1, scope: !6415)
!6978 = !{i64 2147648621, i64 2147648664, i64 2147648704}
!6979 = !DILocation(line: 293, column: 1, scope: !6415)
!6980 = distinct !DISubprogram(name: "pm_system_resume", scope: !317, file: !317, line: 166, type: !253, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6981 = !DILocalVariable(name: "id", scope: !6980, file: !317, line: 168, type: !156)
!6982 = !DILocation(line: 168, column: 10, scope: !6980)
!6983 = !DILocation(line: 168, column: 15, scope: !6980)
!6984 = !DILocation(line: 182, column: 53, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6980, file: !317, line: 182, column: 6)
!6986 = !DILocation(line: 182, column: 6, scope: !6985)
!6987 = !DILocation(line: 182, column: 6, scope: !6980)
!6988 = !DILocation(line: 183, column: 36, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6985, file: !317, line: 182, column: 58)
!6990 = !DILocation(line: 183, column: 20, scope: !6989)
!6991 = !DILocation(line: 183, column: 3, scope: !6989)
!6992 = !DILocation(line: 184, column: 3, scope: !6989)
!6993 = !DILocation(line: 185, column: 19, scope: !6989)
!6994 = !DILocation(line: 185, column: 3, scope: !6989)
!6995 = !DILocation(line: 185, column: 47, scope: !6989)
!6996 = !DILocation(line: 185, column: 25, scope: !6989)
!6997 = !DILocation(line: 187, column: 2, scope: !6989)
!6998 = !DILocation(line: 188, column: 1, scope: !6980)
!6999 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !344, file: !344, line: 152, type: !7000, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!717, !1342, !103}
!7002 = !DILocalVariable(name: "target", arg: 1, scope: !6999, file: !344, line: 152, type: !1342)
!7003 = !DILocation(line: 152, column: 56, scope: !6999)
!7004 = !DILocalVariable(name: "bit", arg: 2, scope: !6999, file: !344, line: 152, type: !103)
!7005 = !DILocation(line: 152, column: 68, scope: !6999)
!7006 = !DILocalVariable(name: "mask", scope: !6999, file: !344, line: 154, type: !1343)
!7007 = !DILocation(line: 154, column: 15, scope: !6999)
!7008 = !DILocation(line: 154, column: 22, scope: !6999)
!7009 = !DILocalVariable(name: "old", scope: !6999, file: !344, line: 155, type: !1343)
!7010 = !DILocation(line: 155, column: 15, scope: !6999)
!7011 = !DILocation(line: 157, column: 19, scope: !6999)
!7012 = !DILocation(line: 157, column: 46, scope: !6999)
!7013 = !DILocation(line: 157, column: 45, scope: !6999)
!7014 = !DILocation(line: 157, column: 8, scope: !6999)
!7015 = !DILocation(line: 157, column: 6, scope: !6999)
!7016 = !DILocation(line: 159, column: 10, scope: !6999)
!7017 = !DILocation(line: 159, column: 16, scope: !6999)
!7018 = !DILocation(line: 159, column: 14, scope: !6999)
!7019 = !DILocation(line: 159, column: 22, scope: !6999)
!7020 = !DILocation(line: 159, column: 2, scope: !6999)
!7021 = distinct !DISubprogram(name: "pm_exit_pos_ops", scope: !317, file: !317, line: 112, type: !7022, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{null, !7024}
!7024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 32)
!7025 = !DILocalVariable(name: "info", arg: 1, scope: !7021, file: !317, line: 112, type: !7024)
!7026 = !DILocation(line: 112, column: 58, scope: !7021)
!7027 = !DILocation(line: 117, column: 6, scope: !7021)
!7028 = !DILocation(line: 118, column: 26, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !317, line: 117, column: 38)
!7030 = distinct !DILexicalBlock(scope: !7021, file: !317, line: 117, column: 6)
!7031 = !DILocation(line: 118, column: 32, scope: !7029)
!7032 = !DILocation(line: 118, column: 39, scope: !7029)
!7033 = !DILocation(line: 118, column: 45, scope: !7029)
!7034 = !DILocation(line: 118, column: 3, scope: !7029)
!7035 = !DILocation(line: 119, column: 2, scope: !7029)
!7036 = !DILocalVariable(name: "key", arg: 1, scope: !7037, file: !3614, line: 84, type: !32)
!7037 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7038 = !DILocation(line: 84, column: 56, scope: !7037, inlinedAt: !7039)
!7039 = distinct !DILocation(line: 127, column: 3, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7030, file: !317, line: 119, column: 9)
!7041 = !DILocation(line: 87, column: 6, scope: !7042, inlinedAt: !7039)
!7042 = distinct !DILexicalBlock(scope: !7037, file: !3614, line: 87, column: 6)
!7043 = !DILocation(line: 87, column: 10, scope: !7042, inlinedAt: !7039)
!7044 = !DILocation(line: 87, column: 6, scope: !7037, inlinedAt: !7039)
!7045 = !DILocation(line: 88, column: 3, scope: !7046, inlinedAt: !7039)
!7046 = distinct !DILexicalBlock(scope: !7042, file: !3614, line: 87, column: 17)
!7047 = !DILocation(line: 90, column: 2, scope: !7037, inlinedAt: !7039)
!7048 = !{i64 1640559}
!7049 = !DILocation(line: 110, column: 1, scope: !7037, inlinedAt: !7039)
!7050 = !DILocation(line: 129, column: 1, scope: !7021)
!7051 = distinct !DISubprogram(name: "pm_state_notify", scope: !317, file: !317, line: 145, type: !7052, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{null, !717}
!7054 = !DILocalVariable(name: "entering_state", arg: 1, scope: !7051, file: !317, line: 145, type: !717)
!7055 = !DILocation(line: 145, column: 41, scope: !7051)
!7056 = !DILocalVariable(name: "notifier", scope: !7051, file: !317, line: 147, type: !295)
!7057 = !DILocation(line: 147, column: 22, scope: !7051)
!7058 = !DILocalVariable(name: "pm_notifier_key", scope: !7051, file: !317, line: 148, type: !7059)
!7059 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !7060)
!7060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !7061)
!7061 = !{!7062}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7060, file: !222, line: 33, baseType: !103, size: 32)
!7063 = !DILocation(line: 148, column: 19, scope: !7051)
!7064 = !DILocalVariable(name: "callback", scope: !7051, file: !317, line: 149, type: !307)
!7065 = !DILocation(line: 149, column: 9, scope: !7051)
!7066 = !DILocalVariable(name: "l", arg: 1, scope: !7067, file: !222, line: 136, type: !7070)
!7067 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !7068, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!7059, !7070}
!7070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 32)
!7071 = !DILocation(line: 136, column: 70, scope: !7067, inlinedAt: !7072)
!7072 = distinct !DILocation(line: 151, column: 20, scope: !7051)
!7073 = !DILocation(line: 138, column: 2, scope: !7067, inlinedAt: !7072)
!7074 = !DILocalVariable(name: "k", scope: !7067, file: !222, line: 139, type: !7059)
!7075 = !DILocation(line: 139, column: 19, scope: !7067, inlinedAt: !7072)
!7076 = !DILocalVariable(name: "key", scope: !7077, file: !3614, line: 44, type: !32)
!7077 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7078 = !DILocation(line: 44, column: 15, scope: !7077, inlinedAt: !7079)
!7079 = distinct !DILocation(line: 145, column: 10, scope: !7067, inlinedAt: !7072)
!7080 = !DILocation(line: 47, column: 2, scope: !7077, inlinedAt: !7079)
!7081 = !{i64 1639695}
!7082 = !DILocation(line: 76, column: 9, scope: !7077, inlinedAt: !7079)
!7083 = !DILocation(line: 145, column: 4, scope: !7067, inlinedAt: !7072)
!7084 = !DILocation(line: 145, column: 8, scope: !7067, inlinedAt: !7072)
!7085 = !DILocation(line: 165, column: 2, scope: !7067, inlinedAt: !7072)
!7086 = !DILocation(line: 151, column: 20, scope: !7051)
!7087 = !DILocation(line: 152, column: 2, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7051, file: !317, line: 152, column: 2)
!7089 = !DILocation(line: 152, column: 2, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7088, file: !317, line: 152, column: 2)
!7091 = !DILocation(line: 153, column: 7, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !317, line: 153, column: 7)
!7093 = distinct !DILexicalBlock(scope: !7090, file: !317, line: 152, column: 63)
!7094 = !DILocation(line: 153, column: 7, scope: !7093)
!7095 = !DILocation(line: 154, column: 15, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7092, file: !317, line: 153, column: 23)
!7097 = !DILocation(line: 154, column: 25, scope: !7096)
!7098 = !DILocation(line: 154, column: 13, scope: !7096)
!7099 = !DILocation(line: 155, column: 3, scope: !7096)
!7100 = !DILocation(line: 156, column: 15, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7092, file: !317, line: 155, column: 10)
!7102 = !DILocation(line: 156, column: 25, scope: !7101)
!7103 = !DILocation(line: 156, column: 13, scope: !7101)
!7104 = !DILocation(line: 159, column: 7, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7093, file: !317, line: 159, column: 7)
!7106 = !DILocation(line: 159, column: 7, scope: !7093)
!7107 = !DILocation(line: 160, column: 4, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7105, file: !317, line: 159, column: 17)
!7109 = !DILocation(line: 160, column: 43, scope: !7108)
!7110 = !DILocation(line: 160, column: 13, scope: !7108)
!7111 = !DILocation(line: 160, column: 47, scope: !7108)
!7112 = !DILocation(line: 161, column: 3, scope: !7108)
!7113 = !DILocation(line: 162, column: 2, scope: !7093)
!7114 = distinct !{!7114, !7087, !7115}
!7115 = !DILocation(line: 162, column: 2, scope: !7088)
!7116 = !DILocation(line: 163, column: 2, scope: !7051)
!7117 = !DILocalVariable(name: "l", arg: 1, scope: !7118, file: !222, line: 189, type: !7070)
!7118 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !7119, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{null, !7070, !7059}
!7121 = !DILocation(line: 189, column: 60, scope: !7118, inlinedAt: !7122)
!7122 = distinct !DILocation(line: 163, column: 2, scope: !7051)
!7123 = !DILocalVariable(name: "key", arg: 2, scope: !7118, file: !222, line: 190, type: !7059)
!7124 = !DILocation(line: 190, column: 23, scope: !7118, inlinedAt: !7122)
!7125 = !DILocation(line: 192, column: 2, scope: !7118, inlinedAt: !7122)
!7126 = !DILocation(line: 215, column: 22, scope: !7118, inlinedAt: !7122)
!7127 = !DILocation(line: 84, column: 56, scope: !7037, inlinedAt: !7128)
!7128 = distinct !DILocation(line: 215, column: 2, scope: !7118, inlinedAt: !7122)
!7129 = !DILocation(line: 87, column: 6, scope: !7042, inlinedAt: !7128)
!7130 = !DILocation(line: 87, column: 10, scope: !7042, inlinedAt: !7128)
!7131 = !DILocation(line: 87, column: 6, scope: !7037, inlinedAt: !7128)
!7132 = !DILocation(line: 88, column: 3, scope: !7046, inlinedAt: !7128)
!7133 = !DILocation(line: 90, column: 2, scope: !7037, inlinedAt: !7128)
!7134 = !DILocation(line: 110, column: 1, scope: !7037, inlinedAt: !7128)
!7135 = !DILocation(line: 164, column: 1, scope: !7051)
!7136 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !301, file: !301, line: 231, type: !7137, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!340, !7139}
!7139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!7140 = !DILocalVariable(name: "list", arg: 1, scope: !7136, file: !301, line: 231, type: !7139)
!7141 = !DILocation(line: 231, column: 61, scope: !7136)
!7142 = !DILocation(line: 233, column: 9, scope: !7136)
!7143 = !DILocation(line: 233, column: 15, scope: !7136)
!7144 = !DILocation(line: 233, column: 2, scope: !7136)
!7145 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !301, file: !301, line: 285, type: !7146, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!340, !340}
!7148 = !DILocalVariable(name: "node", arg: 1, scope: !7145, file: !301, line: 285, type: !340)
!7149 = !DILocation(line: 285, column: 1, scope: !7145)
!7150 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !301, file: !301, line: 274, type: !7146, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7151 = !DILocalVariable(name: "node", arg: 1, scope: !7150, file: !301, line: 274, type: !340)
!7152 = !DILocation(line: 274, column: 1, scope: !7150)
!7153 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !301, file: !301, line: 204, type: !7146, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7154 = !DILocalVariable(name: "node", arg: 1, scope: !7153, file: !301, line: 204, type: !340)
!7155 = !DILocation(line: 204, column: 59, scope: !7153)
!7156 = !DILocation(line: 206, column: 9, scope: !7153)
!7157 = !DILocation(line: 206, column: 15, scope: !7153)
!7158 = !DILocation(line: 206, column: 2, scope: !7153)
!7159 = distinct !DISubprogram(name: "atomic_and", scope: !7160, file: !7160, line: 218, type: !7161, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7160 = !DIFile(filename: "zephyr/include/generated/syscalls/atomic_c.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!7161 = !DISubroutineType(types: !7162)
!7162 = !{!1343, !1342, !1343}
!7163 = !DILocalVariable(name: "target", arg: 1, scope: !7159, file: !7160, line: 218, type: !1342)
!7164 = !DILocation(line: 218, column: 50, scope: !7159)
!7165 = !DILocalVariable(name: "value", arg: 2, scope: !7159, file: !7160, line: 218, type: !1343)
!7166 = !DILocation(line: 218, column: 71, scope: !7159)
!7167 = !DILocation(line: 227, column: 2, scope: !7159)
!7168 = !DILocation(line: 227, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7159, file: !7160, line: 227, column: 2)
!7170 = !{i64 2148826740}
!7171 = !DILocation(line: 228, column: 27, scope: !7159)
!7172 = !DILocation(line: 228, column: 35, scope: !7159)
!7173 = !DILocation(line: 228, column: 9, scope: !7159)
!7174 = !DILocation(line: 228, column: 2, scope: !7159)
!7175 = distinct !DISubprogram(name: "pm_state_force", scope: !317, file: !317, line: 190, type: !7176, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7176 = !DISubroutineType(types: !7177)
!7177 = !{!717, !156, !7178}
!7178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7179, size: 32)
!7179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!7180 = !DILocalVariable(name: "cpu", arg: 1, scope: !7175, file: !317, line: 190, type: !156)
!7181 = !DILocation(line: 190, column: 29, scope: !7175)
!7182 = !DILocalVariable(name: "info", arg: 2, scope: !7175, file: !317, line: 190, type: !7178)
!7183 = !DILocation(line: 190, column: 62, scope: !7175)
!7184 = !DILocalVariable(name: "key", scope: !7175, file: !317, line: 192, type: !7059)
!7185 = !DILocation(line: 192, column: 19, scope: !7175)
!7186 = !DILocation(line: 136, column: 70, scope: !7067, inlinedAt: !7187)
!7187 = distinct !DILocation(line: 197, column: 8, scope: !7175)
!7188 = !DILocation(line: 138, column: 2, scope: !7067, inlinedAt: !7187)
!7189 = !DILocation(line: 139, column: 19, scope: !7067, inlinedAt: !7187)
!7190 = !DILocation(line: 44, column: 15, scope: !7077, inlinedAt: !7191)
!7191 = distinct !DILocation(line: 145, column: 10, scope: !7067, inlinedAt: !7187)
!7192 = !DILocation(line: 47, column: 2, scope: !7077, inlinedAt: !7191)
!7193 = !DILocation(line: 76, column: 9, scope: !7077, inlinedAt: !7191)
!7194 = !DILocation(line: 145, column: 4, scope: !7067, inlinedAt: !7187)
!7195 = !DILocation(line: 145, column: 8, scope: !7067, inlinedAt: !7187)
!7196 = !DILocation(line: 165, column: 2, scope: !7067, inlinedAt: !7187)
!7197 = !DILocation(line: 197, column: 8, scope: !7175)
!7198 = !DILocation(line: 198, column: 25, scope: !7175)
!7199 = !DILocation(line: 198, column: 2, scope: !7175)
!7200 = !DILocation(line: 198, column: 33, scope: !7175)
!7201 = !DILocation(line: 198, column: 32, scope: !7175)
!7202 = !DILocation(line: 199, column: 2, scope: !7175)
!7203 = !DILocation(line: 189, column: 60, scope: !7118, inlinedAt: !7204)
!7204 = distinct !DILocation(line: 199, column: 2, scope: !7175)
!7205 = !DILocation(line: 190, column: 23, scope: !7118, inlinedAt: !7204)
!7206 = !DILocation(line: 192, column: 2, scope: !7118, inlinedAt: !7204)
!7207 = !DILocation(line: 215, column: 22, scope: !7118, inlinedAt: !7204)
!7208 = !DILocation(line: 84, column: 56, scope: !7037, inlinedAt: !7209)
!7209 = distinct !DILocation(line: 215, column: 2, scope: !7118, inlinedAt: !7204)
!7210 = !DILocation(line: 87, column: 6, scope: !7042, inlinedAt: !7209)
!7211 = !DILocation(line: 87, column: 10, scope: !7042, inlinedAt: !7209)
!7212 = !DILocation(line: 87, column: 6, scope: !7037, inlinedAt: !7209)
!7213 = !DILocation(line: 88, column: 3, scope: !7046, inlinedAt: !7209)
!7214 = !DILocation(line: 90, column: 2, scope: !7037, inlinedAt: !7209)
!7215 = !DILocation(line: 110, column: 1, scope: !7037, inlinedAt: !7209)
!7216 = !DILocation(line: 201, column: 2, scope: !7175)
!7217 = distinct !DISubprogram(name: "pm_system_suspend", scope: !317, file: !317, line: 204, type: !7218, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{!717, !250}
!7220 = !DILocalVariable(name: "ticks", arg: 1, scope: !7217, file: !317, line: 204, type: !250)
!7221 = !DILocation(line: 204, column: 32, scope: !7217)
!7222 = !DILocalVariable(name: "id", scope: !7217, file: !317, line: 206, type: !156)
!7223 = !DILocation(line: 206, column: 10, scope: !7217)
!7224 = !DILocation(line: 206, column: 15, scope: !7217)
!7225 = !DILocalVariable(name: "key", scope: !7217, file: !317, line: 207, type: !7059)
!7226 = !DILocation(line: 207, column: 19, scope: !7217)
!7227 = !DILocation(line: 209, column: 2, scope: !7217)
!7228 = !DILocation(line: 209, column: 2, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7217, file: !317, line: 209, column: 2)
!7230 = !DILocation(line: 136, column: 70, scope: !7067, inlinedAt: !7231)
!7231 = distinct !DILocation(line: 211, column: 8, scope: !7217)
!7232 = !DILocation(line: 138, column: 2, scope: !7067, inlinedAt: !7231)
!7233 = !DILocation(line: 139, column: 19, scope: !7067, inlinedAt: !7231)
!7234 = !DILocation(line: 44, column: 15, scope: !7077, inlinedAt: !7235)
!7235 = distinct !DILocation(line: 145, column: 10, scope: !7067, inlinedAt: !7231)
!7236 = !DILocation(line: 47, column: 2, scope: !7077, inlinedAt: !7235)
!7237 = !DILocation(line: 76, column: 9, scope: !7077, inlinedAt: !7235)
!7238 = !DILocation(line: 145, column: 4, scope: !7067, inlinedAt: !7231)
!7239 = !DILocation(line: 145, column: 8, scope: !7067, inlinedAt: !7231)
!7240 = !DILocation(line: 165, column: 2, scope: !7067, inlinedAt: !7231)
!7241 = !DILocation(line: 211, column: 8, scope: !7217)
!7242 = !DILocation(line: 212, column: 29, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7217, file: !317, line: 212, column: 6)
!7244 = !DILocation(line: 212, column: 6, scope: !7243)
!7245 = !DILocation(line: 212, column: 33, scope: !7243)
!7246 = !DILocation(line: 212, column: 39, scope: !7243)
!7247 = !DILocation(line: 212, column: 6, scope: !7217)
!7248 = !DILocation(line: 213, column: 19, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7243, file: !317, line: 212, column: 59)
!7250 = !DILocation(line: 213, column: 3, scope: !7249)
!7251 = !DILocation(line: 213, column: 48, scope: !7249)
!7252 = !DILocation(line: 213, column: 25, scope: !7249)
!7253 = !DILocation(line: 214, column: 26, scope: !7249)
!7254 = !DILocation(line: 214, column: 3, scope: !7249)
!7255 = !DILocation(line: 214, column: 30, scope: !7249)
!7256 = !DILocation(line: 214, column: 36, scope: !7249)
!7257 = !DILocation(line: 215, column: 2, scope: !7249)
!7258 = !DILocalVariable(name: "info", scope: !7259, file: !317, line: 216, type: !7178)
!7259 = distinct !DILexicalBlock(scope: !7243, file: !317, line: 215, column: 9)
!7260 = !DILocation(line: 216, column: 31, scope: !7259)
!7261 = !DILocation(line: 218, column: 31, scope: !7259)
!7262 = !DILocation(line: 218, column: 35, scope: !7259)
!7263 = !DILocation(line: 218, column: 10, scope: !7259)
!7264 = !DILocation(line: 218, column: 8, scope: !7259)
!7265 = !DILocation(line: 219, column: 7, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7259, file: !317, line: 219, column: 7)
!7267 = !DILocation(line: 219, column: 12, scope: !7266)
!7268 = !DILocation(line: 219, column: 7, scope: !7259)
!7269 = !DILocation(line: 220, column: 20, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7266, file: !317, line: 219, column: 21)
!7271 = !DILocation(line: 220, column: 4, scope: !7270)
!7272 = !DILocation(line: 220, column: 27, scope: !7270)
!7273 = !DILocation(line: 220, column: 26, scope: !7270)
!7274 = !DILocation(line: 221, column: 3, scope: !7270)
!7275 = !DILocation(line: 223, column: 2, scope: !7217)
!7276 = !DILocation(line: 189, column: 60, scope: !7118, inlinedAt: !7277)
!7277 = distinct !DILocation(line: 223, column: 2, scope: !7217)
!7278 = !DILocation(line: 190, column: 23, scope: !7118, inlinedAt: !7277)
!7279 = !DILocation(line: 192, column: 2, scope: !7118, inlinedAt: !7277)
!7280 = !DILocation(line: 215, column: 22, scope: !7118, inlinedAt: !7277)
!7281 = !DILocation(line: 84, column: 56, scope: !7037, inlinedAt: !7282)
!7282 = distinct !DILocation(line: 215, column: 2, scope: !7118, inlinedAt: !7277)
!7283 = !DILocation(line: 87, column: 6, scope: !7042, inlinedAt: !7282)
!7284 = !DILocation(line: 87, column: 10, scope: !7042, inlinedAt: !7282)
!7285 = !DILocation(line: 87, column: 6, scope: !7037, inlinedAt: !7282)
!7286 = !DILocation(line: 88, column: 3, scope: !7046, inlinedAt: !7282)
!7287 = !DILocation(line: 90, column: 2, scope: !7037, inlinedAt: !7282)
!7288 = !DILocation(line: 110, column: 1, scope: !7037, inlinedAt: !7282)
!7289 = !DILocation(line: 225, column: 22, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7217, file: !317, line: 225, column: 6)
!7291 = !DILocation(line: 225, column: 6, scope: !7290)
!7292 = !DILocation(line: 225, column: 26, scope: !7290)
!7293 = !DILocation(line: 225, column: 32, scope: !7290)
!7294 = !DILocation(line: 225, column: 6, scope: !7217)
!7295 = !DILocation(line: 226, column: 3, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7290, file: !317, line: 225, column: 52)
!7297 = !DILocation(line: 226, column: 3, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !317, line: 226, column: 3)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !317, line: 226, column: 3)
!7300 = distinct !DILexicalBlock(scope: !7296, file: !317, line: 226, column: 3)
!7301 = !DILocation(line: 227, column: 3, scope: !7296)
!7302 = !DILocation(line: 227, column: 3, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7296, file: !317, line: 227, column: 3)
!7304 = !DILocation(line: 229, column: 3, scope: !7296)
!7305 = !DILocation(line: 232, column: 6, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7217, file: !317, line: 232, column: 6)
!7307 = !DILocation(line: 232, column: 12, scope: !7306)
!7308 = !DILocation(line: 232, column: 6, scope: !7217)
!7309 = !DILocation(line: 237, column: 24, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7306, file: !317, line: 232, column: 32)
!7311 = !DILocation(line: 239, column: 25, scope: !7310)
!7312 = !DILocation(line: 239, column: 9, scope: !7310)
!7313 = !DILocation(line: 239, column: 29, scope: !7310)
!7314 = !DILocation(line: 238, column: 8, scope: !7310)
!7315 = !DILocation(line: 237, column: 30, scope: !7310)
!7316 = !DILocation(line: 237, column: 3, scope: !7310)
!7317 = !DILocation(line: 241, column: 2, scope: !7310)
!7318 = !DILocation(line: 265, column: 2, scope: !7217)
!7319 = !DILocation(line: 266, column: 2, scope: !7217)
!7320 = !DILocation(line: 268, column: 2, scope: !7217)
!7321 = !DILocation(line: 269, column: 38, scope: !7217)
!7322 = !DILocation(line: 269, column: 2, scope: !7217)
!7323 = !DILocation(line: 270, column: 29, scope: !7217)
!7324 = !DILocation(line: 270, column: 13, scope: !7217)
!7325 = !DILocation(line: 270, column: 2, scope: !7217)
!7326 = !DILocation(line: 271, column: 2, scope: !7217)
!7327 = !DILocation(line: 279, column: 34, scope: !7217)
!7328 = !DILocation(line: 279, column: 18, scope: !7217)
!7329 = !DILocation(line: 279, column: 38, scope: !7217)
!7330 = !DILocation(line: 279, column: 2, scope: !7217)
!7331 = !DILocation(line: 280, column: 2, scope: !7217)
!7332 = !DILocation(line: 281, column: 2, scope: !7217)
!7333 = !DILocation(line: 282, column: 2, scope: !7217)
!7334 = !DILocation(line: 282, column: 2, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7217, file: !317, line: 282, column: 2)
!7336 = !DILocation(line: 285, column: 2, scope: !7217)
!7337 = !DILocation(line: 286, column: 1, scope: !7217)
!7338 = distinct !DISubprogram(name: "k_us_to_ticks_ceil32", scope: !7339, file: !7339, line: 557, type: !7340, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7339 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!173, !173}
!7342 = !DILocalVariable(name: "t", arg: 1, scope: !7338, file: !7339, line: 557, type: !173)
!7343 = !DILocation(line: 557, column: 69, scope: !7338)
!7344 = !DILocation(line: 560, column: 17, scope: !7338)
!7345 = !DILocalVariable(name: "t", arg: 1, scope: !7346, file: !7339, line: 102, type: !312)
!7346 = distinct !DISubprogram(name: "z_tmcvt", scope: !7339, file: !7339, line: 102, type: !7347, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7347 = !DISubroutineType(types: !7348)
!7348 = !{!312, !312, !173, !173, !717, !717, !717, !717}
!7349 = !DILocation(line: 102, column: 63, scope: !7346, inlinedAt: !7350)
!7350 = distinct !DILocation(line: 560, column: 9, scope: !7338)
!7351 = !DILocalVariable(name: "from_hz", arg: 2, scope: !7346, file: !7339, line: 102, type: !173)
!7352 = !DILocation(line: 102, column: 75, scope: !7346, inlinedAt: !7350)
!7353 = !DILocalVariable(name: "to_hz", arg: 3, scope: !7346, file: !7339, line: 103, type: !173)
!7354 = !DILocation(line: 103, column: 18, scope: !7346, inlinedAt: !7350)
!7355 = !DILocalVariable(name: "const_hz", arg: 4, scope: !7346, file: !7339, line: 103, type: !717)
!7356 = !DILocation(line: 103, column: 30, scope: !7346, inlinedAt: !7350)
!7357 = !DILocalVariable(name: "result32", arg: 5, scope: !7346, file: !7339, line: 104, type: !717)
!7358 = !DILocation(line: 104, column: 14, scope: !7346, inlinedAt: !7350)
!7359 = !DILocalVariable(name: "round_up", arg: 6, scope: !7346, file: !7339, line: 104, type: !717)
!7360 = !DILocation(line: 104, column: 29, scope: !7346, inlinedAt: !7350)
!7361 = !DILocalVariable(name: "round_off", arg: 7, scope: !7346, file: !7339, line: 105, type: !717)
!7362 = !DILocation(line: 105, column: 14, scope: !7346, inlinedAt: !7350)
!7363 = !DILocalVariable(name: "mul_ratio", scope: !7346, file: !7339, line: 107, type: !717)
!7364 = !DILocation(line: 107, column: 7, scope: !7346, inlinedAt: !7350)
!7365 = !DILocation(line: 107, column: 19, scope: !7346, inlinedAt: !7350)
!7366 = !DILocation(line: 107, column: 28, scope: !7346, inlinedAt: !7350)
!7367 = !DILocation(line: 108, column: 4, scope: !7346, inlinedAt: !7350)
!7368 = !DILocation(line: 108, column: 12, scope: !7346, inlinedAt: !7350)
!7369 = !DILocation(line: 108, column: 10, scope: !7346, inlinedAt: !7350)
!7370 = !DILocation(line: 108, column: 21, scope: !7346, inlinedAt: !7350)
!7371 = !DILocation(line: 108, column: 26, scope: !7346, inlinedAt: !7350)
!7372 = !DILocation(line: 108, column: 34, scope: !7346, inlinedAt: !7350)
!7373 = !DILocation(line: 108, column: 32, scope: !7346, inlinedAt: !7350)
!7374 = !DILocation(line: 108, column: 43, scope: !7346, inlinedAt: !7350)
!7375 = !DILocation(line: 0, scope: !7346, inlinedAt: !7350)
!7376 = !DILocalVariable(name: "div_ratio", scope: !7346, file: !7339, line: 109, type: !717)
!7377 = !DILocation(line: 109, column: 7, scope: !7346, inlinedAt: !7350)
!7378 = !DILocation(line: 109, column: 19, scope: !7346, inlinedAt: !7350)
!7379 = !DILocation(line: 109, column: 28, scope: !7346, inlinedAt: !7350)
!7380 = !DILocation(line: 110, column: 4, scope: !7346, inlinedAt: !7350)
!7381 = !DILocation(line: 110, column: 14, scope: !7346, inlinedAt: !7350)
!7382 = !DILocation(line: 110, column: 12, scope: !7346, inlinedAt: !7350)
!7383 = !DILocation(line: 110, column: 21, scope: !7346, inlinedAt: !7350)
!7384 = !DILocation(line: 110, column: 26, scope: !7346, inlinedAt: !7350)
!7385 = !DILocation(line: 110, column: 36, scope: !7346, inlinedAt: !7350)
!7386 = !DILocation(line: 110, column: 34, scope: !7346, inlinedAt: !7350)
!7387 = !DILocation(line: 110, column: 43, scope: !7346, inlinedAt: !7350)
!7388 = !DILocation(line: 112, column: 6, scope: !7389, inlinedAt: !7350)
!7389 = distinct !DILexicalBlock(scope: !7346, file: !7339, line: 112, column: 6)
!7390 = !DILocation(line: 112, column: 17, scope: !7389, inlinedAt: !7350)
!7391 = !DILocation(line: 112, column: 14, scope: !7389, inlinedAt: !7350)
!7392 = !DILocation(line: 112, column: 6, scope: !7346, inlinedAt: !7350)
!7393 = !DILocation(line: 113, column: 10, scope: !7394, inlinedAt: !7350)
!7394 = distinct !DILexicalBlock(scope: !7389, file: !7339, line: 112, column: 24)
!7395 = !DILocation(line: 113, column: 32, scope: !7394, inlinedAt: !7350)
!7396 = !DILocation(line: 113, column: 22, scope: !7394, inlinedAt: !7350)
!7397 = !DILocation(line: 113, column: 21, scope: !7394, inlinedAt: !7350)
!7398 = !DILocation(line: 113, column: 37, scope: !7394, inlinedAt: !7350)
!7399 = !DILocation(line: 113, column: 3, scope: !7394, inlinedAt: !7350)
!7400 = !DILocalVariable(name: "off", scope: !7346, file: !7339, line: 116, type: !312)
!7401 = !DILocation(line: 116, column: 11, scope: !7346, inlinedAt: !7350)
!7402 = !DILocation(line: 118, column: 7, scope: !7403, inlinedAt: !7350)
!7403 = distinct !DILexicalBlock(scope: !7346, file: !7339, line: 118, column: 6)
!7404 = !DILocation(line: 118, column: 6, scope: !7346, inlinedAt: !7350)
!7405 = !DILocalVariable(name: "rdivisor", scope: !7406, file: !7339, line: 119, type: !173)
!7406 = distinct !DILexicalBlock(scope: !7403, file: !7339, line: 118, column: 18)
!7407 = !DILocation(line: 119, column: 12, scope: !7406, inlinedAt: !7350)
!7408 = !DILocation(line: 119, column: 23, scope: !7406, inlinedAt: !7350)
!7409 = !DILocation(line: 119, column: 36, scope: !7406, inlinedAt: !7350)
!7410 = !DILocation(line: 119, column: 46, scope: !7406, inlinedAt: !7350)
!7411 = !DILocation(line: 119, column: 44, scope: !7406, inlinedAt: !7350)
!7412 = !DILocation(line: 119, column: 55, scope: !7406, inlinedAt: !7350)
!7413 = !DILocation(line: 121, column: 7, scope: !7414, inlinedAt: !7350)
!7414 = distinct !DILexicalBlock(scope: !7406, file: !7339, line: 121, column: 7)
!7415 = !DILocation(line: 121, column: 7, scope: !7406, inlinedAt: !7350)
!7416 = !DILocation(line: 122, column: 10, scope: !7417, inlinedAt: !7350)
!7417 = distinct !DILexicalBlock(scope: !7414, file: !7339, line: 121, column: 17)
!7418 = !DILocation(line: 122, column: 19, scope: !7417, inlinedAt: !7350)
!7419 = !DILocation(line: 122, column: 8, scope: !7417, inlinedAt: !7350)
!7420 = !DILocation(line: 123, column: 3, scope: !7417, inlinedAt: !7350)
!7421 = !DILocation(line: 124, column: 7, scope: !7422, inlinedAt: !7350)
!7422 = distinct !DILexicalBlock(scope: !7406, file: !7339, line: 124, column: 7)
!7423 = !DILocation(line: 124, column: 7, scope: !7406, inlinedAt: !7350)
!7424 = !DILocation(line: 125, column: 10, scope: !7425, inlinedAt: !7350)
!7425 = distinct !DILexicalBlock(scope: !7422, file: !7339, line: 124, column: 18)
!7426 = !DILocation(line: 125, column: 19, scope: !7425, inlinedAt: !7350)
!7427 = !DILocation(line: 125, column: 8, scope: !7425, inlinedAt: !7350)
!7428 = !DILocation(line: 126, column: 3, scope: !7425, inlinedAt: !7350)
!7429 = !DILocation(line: 127, column: 2, scope: !7406, inlinedAt: !7350)
!7430 = !DILocation(line: 134, column: 6, scope: !7431, inlinedAt: !7350)
!7431 = distinct !DILexicalBlock(scope: !7346, file: !7339, line: 134, column: 6)
!7432 = !DILocation(line: 134, column: 6, scope: !7346, inlinedAt: !7350)
!7433 = !DILocation(line: 135, column: 8, scope: !7434, inlinedAt: !7350)
!7434 = distinct !DILexicalBlock(scope: !7431, file: !7339, line: 134, column: 17)
!7435 = !DILocation(line: 135, column: 5, scope: !7434, inlinedAt: !7350)
!7436 = !DILocation(line: 136, column: 7, scope: !7437, inlinedAt: !7350)
!7437 = distinct !DILexicalBlock(scope: !7434, file: !7339, line: 136, column: 7)
!7438 = !DILocation(line: 136, column: 16, scope: !7437, inlinedAt: !7350)
!7439 = !DILocation(line: 136, column: 20, scope: !7437, inlinedAt: !7350)
!7440 = !DILocation(line: 136, column: 22, scope: !7437, inlinedAt: !7350)
!7441 = !DILocation(line: 136, column: 7, scope: !7434, inlinedAt: !7350)
!7442 = !DILocation(line: 137, column: 22, scope: !7443, inlinedAt: !7350)
!7443 = distinct !DILexicalBlock(scope: !7437, file: !7339, line: 136, column: 36)
!7444 = !DILocation(line: 137, column: 12, scope: !7443, inlinedAt: !7350)
!7445 = !DILocation(line: 137, column: 28, scope: !7443, inlinedAt: !7350)
!7446 = !DILocation(line: 137, column: 38, scope: !7443, inlinedAt: !7350)
!7447 = !DILocation(line: 137, column: 36, scope: !7443, inlinedAt: !7350)
!7448 = !DILocation(line: 137, column: 25, scope: !7443, inlinedAt: !7350)
!7449 = !DILocation(line: 137, column: 11, scope: !7443, inlinedAt: !7350)
!7450 = !DILocation(line: 137, column: 4, scope: !7443, inlinedAt: !7350)
!7451 = !DILocation(line: 139, column: 11, scope: !7452, inlinedAt: !7350)
!7452 = distinct !DILexicalBlock(scope: !7437, file: !7339, line: 138, column: 10)
!7453 = !DILocation(line: 139, column: 26, scope: !7452, inlinedAt: !7350)
!7454 = !DILocation(line: 139, column: 16, scope: !7452, inlinedAt: !7350)
!7455 = !DILocation(line: 139, column: 36, scope: !7452, inlinedAt: !7350)
!7456 = !DILocation(line: 139, column: 34, scope: !7452, inlinedAt: !7350)
!7457 = !DILocation(line: 139, column: 13, scope: !7452, inlinedAt: !7350)
!7458 = !DILocation(line: 139, column: 4, scope: !7452, inlinedAt: !7350)
!7459 = !DILocation(line: 141, column: 13, scope: !7460, inlinedAt: !7350)
!7460 = distinct !DILexicalBlock(scope: !7431, file: !7339, line: 141, column: 13)
!7461 = !DILocation(line: 141, column: 13, scope: !7431, inlinedAt: !7350)
!7462 = !DILocation(line: 142, column: 7, scope: !7463, inlinedAt: !7350)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !7339, line: 142, column: 7)
!7464 = distinct !DILexicalBlock(scope: !7460, file: !7339, line: 141, column: 24)
!7465 = !DILocation(line: 142, column: 7, scope: !7464, inlinedAt: !7350)
!7466 = !DILocation(line: 143, column: 22, scope: !7467, inlinedAt: !7350)
!7467 = distinct !DILexicalBlock(scope: !7463, file: !7339, line: 142, column: 17)
!7468 = !DILocation(line: 143, column: 12, scope: !7467, inlinedAt: !7350)
!7469 = !DILocation(line: 143, column: 28, scope: !7467, inlinedAt: !7350)
!7470 = !DILocation(line: 143, column: 36, scope: !7467, inlinedAt: !7350)
!7471 = !DILocation(line: 143, column: 34, scope: !7467, inlinedAt: !7350)
!7472 = !DILocation(line: 143, column: 25, scope: !7467, inlinedAt: !7350)
!7473 = !DILocation(line: 143, column: 11, scope: !7467, inlinedAt: !7350)
!7474 = !DILocation(line: 143, column: 4, scope: !7467, inlinedAt: !7350)
!7475 = !DILocation(line: 145, column: 11, scope: !7476, inlinedAt: !7350)
!7476 = distinct !DILexicalBlock(scope: !7463, file: !7339, line: 144, column: 10)
!7477 = !DILocation(line: 145, column: 26, scope: !7476, inlinedAt: !7350)
!7478 = !DILocation(line: 145, column: 16, scope: !7476, inlinedAt: !7350)
!7479 = !DILocation(line: 145, column: 34, scope: !7476, inlinedAt: !7350)
!7480 = !DILocation(line: 145, column: 32, scope: !7476, inlinedAt: !7350)
!7481 = !DILocation(line: 145, column: 13, scope: !7476, inlinedAt: !7350)
!7482 = !DILocation(line: 145, column: 4, scope: !7476, inlinedAt: !7350)
!7483 = !DILocation(line: 148, column: 7, scope: !7484, inlinedAt: !7350)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !7339, line: 148, column: 7)
!7485 = distinct !DILexicalBlock(scope: !7460, file: !7339, line: 147, column: 9)
!7486 = !DILocation(line: 148, column: 7, scope: !7485, inlinedAt: !7350)
!7487 = !DILocation(line: 149, column: 23, scope: !7488, inlinedAt: !7350)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !7339, line: 148, column: 17)
!7489 = !DILocation(line: 149, column: 27, scope: !7488, inlinedAt: !7350)
!7490 = !DILocation(line: 149, column: 25, scope: !7488, inlinedAt: !7350)
!7491 = !DILocation(line: 149, column: 35, scope: !7488, inlinedAt: !7350)
!7492 = !DILocation(line: 149, column: 33, scope: !7488, inlinedAt: !7350)
!7493 = !DILocation(line: 149, column: 42, scope: !7488, inlinedAt: !7350)
!7494 = !DILocation(line: 149, column: 40, scope: !7488, inlinedAt: !7350)
!7495 = !DILocation(line: 149, column: 11, scope: !7488, inlinedAt: !7350)
!7496 = !DILocation(line: 149, column: 4, scope: !7488, inlinedAt: !7350)
!7497 = !DILocation(line: 150, column: 14, scope: !7498, inlinedAt: !7350)
!7498 = distinct !DILexicalBlock(scope: !7484, file: !7339, line: 150, column: 14)
!7499 = !DILocation(line: 150, column: 23, scope: !7498, inlinedAt: !7350)
!7500 = !DILocation(line: 150, column: 26, scope: !7498, inlinedAt: !7350)
!7501 = !DILocation(line: 150, column: 14, scope: !7484, inlinedAt: !7350)
!7502 = !DILocation(line: 156, column: 13, scope: !7503, inlinedAt: !7350)
!7503 = distinct !DILexicalBlock(scope: !7498, file: !7339, line: 150, column: 65)
!7504 = !DILocation(line: 156, column: 17, scope: !7503, inlinedAt: !7350)
!7505 = !DILocation(line: 156, column: 15, scope: !7503, inlinedAt: !7350)
!7506 = !DILocation(line: 156, column: 25, scope: !7503, inlinedAt: !7350)
!7507 = !DILocation(line: 156, column: 23, scope: !7503, inlinedAt: !7350)
!7508 = !DILocation(line: 156, column: 32, scope: !7503, inlinedAt: !7350)
!7509 = !DILocation(line: 156, column: 30, scope: !7503, inlinedAt: !7350)
!7510 = !DILocation(line: 156, column: 4, scope: !7503, inlinedAt: !7350)
!7511 = !DILocation(line: 161, column: 12, scope: !7512, inlinedAt: !7350)
!7512 = distinct !DILexicalBlock(scope: !7498, file: !7339, line: 157, column: 10)
!7513 = !DILocation(line: 161, column: 16, scope: !7512, inlinedAt: !7350)
!7514 = !DILocation(line: 161, column: 14, scope: !7512, inlinedAt: !7350)
!7515 = !DILocation(line: 161, column: 27, scope: !7512, inlinedAt: !7350)
!7516 = !DILocation(line: 161, column: 25, scope: !7512, inlinedAt: !7350)
!7517 = !DILocation(line: 161, column: 37, scope: !7512, inlinedAt: !7350)
!7518 = !DILocation(line: 161, column: 41, scope: !7512, inlinedAt: !7350)
!7519 = !DILocation(line: 161, column: 39, scope: !7512, inlinedAt: !7350)
!7520 = !DILocation(line: 161, column: 52, scope: !7512, inlinedAt: !7350)
!7521 = !DILocation(line: 161, column: 50, scope: !7512, inlinedAt: !7350)
!7522 = !DILocation(line: 161, column: 60, scope: !7512, inlinedAt: !7350)
!7523 = !DILocation(line: 161, column: 58, scope: !7512, inlinedAt: !7350)
!7524 = !DILocation(line: 161, column: 67, scope: !7512, inlinedAt: !7350)
!7525 = !DILocation(line: 161, column: 65, scope: !7512, inlinedAt: !7350)
!7526 = !DILocation(line: 161, column: 33, scope: !7512, inlinedAt: !7350)
!7527 = !DILocation(line: 161, column: 4, scope: !7512, inlinedAt: !7350)
!7528 = !DILocation(line: 164, column: 1, scope: !7346, inlinedAt: !7350)
!7529 = !DILocation(line: 560, column: 9, scope: !7338)
!7530 = !DILocation(line: 560, column: 2, scope: !7338)
!7531 = distinct !DISubprogram(name: "pm_stats_start", scope: !7532, file: !7532, line: 18, type: !253, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7532 = !DIFile(filename: "zephyr/subsys/pm/pm_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7533 = !DILocation(line: 18, column: 42, scope: !7531)
!7534 = distinct !DISubprogram(name: "atomic_set_bit", scope: !344, file: !344, line: 217, type: !7535, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{null, !1342, !103}
!7537 = !DILocalVariable(name: "target", arg: 1, scope: !7534, file: !344, line: 217, type: !1342)
!7538 = !DILocation(line: 217, column: 45, scope: !7534)
!7539 = !DILocalVariable(name: "bit", arg: 2, scope: !7534, file: !344, line: 217, type: !103)
!7540 = !DILocation(line: 217, column: 57, scope: !7534)
!7541 = !DILocalVariable(name: "mask", scope: !7534, file: !344, line: 219, type: !1343)
!7542 = !DILocation(line: 219, column: 15, scope: !7534)
!7543 = !DILocation(line: 219, column: 22, scope: !7534)
!7544 = !DILocation(line: 221, column: 18, scope: !7534)
!7545 = !DILocation(line: 221, column: 44, scope: !7534)
!7546 = !DILocation(line: 221, column: 8, scope: !7534)
!7547 = !DILocation(line: 222, column: 1, scope: !7534)
!7548 = distinct !DISubprogram(name: "state_set", scope: !317, file: !317, line: 131, type: !7022, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7549 = !DILocalVariable(name: "info", arg: 1, scope: !7548, file: !317, line: 131, type: !7024)
!7550 = !DILocation(line: 131, column: 52, scope: !7548)
!7551 = !DILocation(line: 136, column: 6, scope: !7548)
!7552 = !DILocation(line: 137, column: 16, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !317, line: 136, column: 28)
!7554 = distinct !DILexicalBlock(scope: !7548, file: !317, line: 136, column: 6)
!7555 = !DILocation(line: 137, column: 22, scope: !7553)
!7556 = !DILocation(line: 137, column: 29, scope: !7553)
!7557 = !DILocation(line: 137, column: 35, scope: !7553)
!7558 = !DILocation(line: 137, column: 3, scope: !7553)
!7559 = !DILocation(line: 138, column: 2, scope: !7553)
!7560 = !DILocation(line: 139, column: 1, scope: !7548)
!7561 = distinct !DISubprogram(name: "pm_stats_stop", scope: !7532, file: !7532, line: 19, type: !253, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7562 = !DILocation(line: 19, column: 41, scope: !7561)
!7563 = distinct !DISubprogram(name: "pm_stats_update", scope: !7532, file: !7532, line: 20, type: !308, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7564 = !DILocalVariable(name: "state", arg: 1, scope: !7563, file: !7532, line: 20, type: !281)
!7565 = !DILocation(line: 20, column: 50, scope: !7563)
!7566 = !DILocation(line: 20, column: 58, scope: !7563)
!7567 = distinct !DISubprogram(name: "atomic_or", scope: !7160, file: !7160, line: 170, type: !7161, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7568 = !DILocalVariable(name: "target", arg: 1, scope: !7567, file: !7160, line: 170, type: !1342)
!7569 = !DILocation(line: 170, column: 49, scope: !7567)
!7570 = !DILocalVariable(name: "value", arg: 2, scope: !7567, file: !7160, line: 170, type: !1343)
!7571 = !DILocation(line: 170, column: 70, scope: !7567)
!7572 = !DILocation(line: 179, column: 2, scope: !7567)
!7573 = !DILocation(line: 179, column: 2, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7567, file: !7160, line: 179, column: 2)
!7575 = !{i64 2148826604}
!7576 = !DILocation(line: 180, column: 26, scope: !7567)
!7577 = !DILocation(line: 180, column: 34, scope: !7567)
!7578 = !DILocation(line: 180, column: 9, scope: !7567)
!7579 = !DILocation(line: 180, column: 2, scope: !7567)
!7580 = distinct !DISubprogram(name: "pm_notifier_register", scope: !317, file: !317, line: 288, type: !7581, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{null, !295}
!7583 = !DILocalVariable(name: "notifier", arg: 1, scope: !7580, file: !317, line: 288, type: !295)
!7584 = !DILocation(line: 288, column: 47, scope: !7580)
!7585 = !DILocalVariable(name: "pm_notifier_key", scope: !7580, file: !317, line: 290, type: !7059)
!7586 = !DILocation(line: 290, column: 19, scope: !7580)
!7587 = !DILocation(line: 136, column: 70, scope: !7067, inlinedAt: !7588)
!7588 = distinct !DILocation(line: 290, column: 37, scope: !7580)
!7589 = !DILocation(line: 138, column: 2, scope: !7067, inlinedAt: !7588)
!7590 = !DILocation(line: 139, column: 19, scope: !7067, inlinedAt: !7588)
!7591 = !DILocation(line: 44, column: 15, scope: !7077, inlinedAt: !7592)
!7592 = distinct !DILocation(line: 145, column: 10, scope: !7067, inlinedAt: !7588)
!7593 = !DILocation(line: 47, column: 2, scope: !7077, inlinedAt: !7592)
!7594 = !DILocation(line: 76, column: 9, scope: !7077, inlinedAt: !7592)
!7595 = !DILocation(line: 145, column: 4, scope: !7067, inlinedAt: !7588)
!7596 = !DILocation(line: 145, column: 8, scope: !7067, inlinedAt: !7588)
!7597 = !DILocation(line: 165, column: 2, scope: !7067, inlinedAt: !7588)
!7598 = !DILocation(line: 290, column: 37, scope: !7580)
!7599 = !DILocation(line: 292, column: 35, scope: !7580)
!7600 = !DILocation(line: 292, column: 45, scope: !7580)
!7601 = !DILocation(line: 292, column: 2, scope: !7580)
!7602 = !DILocation(line: 293, column: 2, scope: !7580)
!7603 = !DILocation(line: 189, column: 60, scope: !7118, inlinedAt: !7604)
!7604 = distinct !DILocation(line: 293, column: 2, scope: !7580)
!7605 = !DILocation(line: 190, column: 23, scope: !7118, inlinedAt: !7604)
!7606 = !DILocation(line: 192, column: 2, scope: !7118, inlinedAt: !7604)
!7607 = !DILocation(line: 215, column: 22, scope: !7118, inlinedAt: !7604)
!7608 = !DILocation(line: 84, column: 56, scope: !7037, inlinedAt: !7609)
!7609 = distinct !DILocation(line: 215, column: 2, scope: !7118, inlinedAt: !7604)
!7610 = !DILocation(line: 87, column: 6, scope: !7042, inlinedAt: !7609)
!7611 = !DILocation(line: 87, column: 10, scope: !7042, inlinedAt: !7609)
!7612 = !DILocation(line: 87, column: 6, scope: !7037, inlinedAt: !7609)
!7613 = !DILocation(line: 88, column: 3, scope: !7046, inlinedAt: !7609)
!7614 = !DILocation(line: 90, column: 2, scope: !7037, inlinedAt: !7609)
!7615 = !DILocation(line: 110, column: 1, scope: !7037, inlinedAt: !7609)
!7616 = !DILocation(line: 294, column: 1, scope: !7580)
!7617 = distinct !DISubprogram(name: "sys_slist_append", scope: !301, file: !301, line: 311, type: !7618, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7618 = !DISubroutineType(types: !7619)
!7619 = !{null, !7139, !340}
!7620 = !DILocalVariable(name: "list", arg: 1, scope: !7617, file: !301, line: 311, type: !7139)
!7621 = !DILocation(line: 311, column: 1, scope: !7617)
!7622 = !DILocalVariable(name: "node", arg: 2, scope: !7617, file: !301, line: 311, type: !340)
!7623 = !DILocation(line: 311, column: 1, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7617, file: !301, line: 311, column: 1)
!7625 = !DILocation(line: 311, column: 1, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7624, file: !301, line: 311, column: 1)
!7627 = !DILocation(line: 311, column: 1, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7624, file: !301, line: 311, column: 1)
!7629 = distinct !DISubprogram(name: "z_snode_next_set", scope: !301, file: !301, line: 209, type: !7630, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{null, !340, !340}
!7632 = !DILocalVariable(name: "parent", arg: 1, scope: !7629, file: !301, line: 209, type: !340)
!7633 = !DILocation(line: 209, column: 50, scope: !7629)
!7634 = !DILocalVariable(name: "child", arg: 2, scope: !7629, file: !301, line: 209, type: !340)
!7635 = !DILocation(line: 209, column: 71, scope: !7629)
!7636 = !DILocation(line: 211, column: 17, scope: !7629)
!7637 = !DILocation(line: 211, column: 2, scope: !7629)
!7638 = !DILocation(line: 211, column: 10, scope: !7629)
!7639 = !DILocation(line: 211, column: 15, scope: !7629)
!7640 = !DILocation(line: 212, column: 1, scope: !7629)
!7641 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !301, file: !301, line: 243, type: !7137, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7642 = !DILocalVariable(name: "list", arg: 1, scope: !7641, file: !301, line: 243, type: !7139)
!7643 = !DILocation(line: 243, column: 61, scope: !7641)
!7644 = !DILocation(line: 245, column: 9, scope: !7641)
!7645 = !DILocation(line: 245, column: 15, scope: !7641)
!7646 = !DILocation(line: 245, column: 2, scope: !7641)
!7647 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !301, file: !301, line: 219, type: !7618, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7648 = !DILocalVariable(name: "list", arg: 1, scope: !7647, file: !301, line: 219, type: !7139)
!7649 = !DILocation(line: 219, column: 50, scope: !7647)
!7650 = !DILocalVariable(name: "node", arg: 2, scope: !7647, file: !301, line: 219, type: !340)
!7651 = !DILocation(line: 219, column: 69, scope: !7647)
!7652 = !DILocation(line: 221, column: 15, scope: !7647)
!7653 = !DILocation(line: 221, column: 2, scope: !7647)
!7654 = !DILocation(line: 221, column: 8, scope: !7647)
!7655 = !DILocation(line: 221, column: 13, scope: !7647)
!7656 = !DILocation(line: 222, column: 1, scope: !7647)
!7657 = distinct !DISubprogram(name: "z_slist_head_set", scope: !301, file: !301, line: 214, type: !7618, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7658 = !DILocalVariable(name: "list", arg: 1, scope: !7657, file: !301, line: 214, type: !7139)
!7659 = !DILocation(line: 214, column: 50, scope: !7657)
!7660 = !DILocalVariable(name: "node", arg: 2, scope: !7657, file: !301, line: 214, type: !340)
!7661 = !DILocation(line: 214, column: 69, scope: !7657)
!7662 = !DILocation(line: 216, column: 15, scope: !7657)
!7663 = !DILocation(line: 216, column: 2, scope: !7657)
!7664 = !DILocation(line: 216, column: 8, scope: !7657)
!7665 = !DILocation(line: 216, column: 13, scope: !7657)
!7666 = !DILocation(line: 217, column: 1, scope: !7657)
!7667 = distinct !DISubprogram(name: "pm_notifier_unregister", scope: !317, file: !317, line: 296, type: !7668, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!103, !295}
!7670 = !DILocalVariable(name: "notifier", arg: 1, scope: !7667, file: !317, line: 296, type: !295)
!7671 = !DILocation(line: 296, column: 48, scope: !7667)
!7672 = !DILocalVariable(name: "ret", scope: !7667, file: !317, line: 298, type: !103)
!7673 = !DILocation(line: 298, column: 6, scope: !7667)
!7674 = !DILocalVariable(name: "pm_notifier_key", scope: !7667, file: !317, line: 299, type: !7059)
!7675 = !DILocation(line: 299, column: 19, scope: !7667)
!7676 = !DILocation(line: 136, column: 70, scope: !7067, inlinedAt: !7677)
!7677 = distinct !DILocation(line: 301, column: 20, scope: !7667)
!7678 = !DILocation(line: 138, column: 2, scope: !7067, inlinedAt: !7677)
!7679 = !DILocation(line: 139, column: 19, scope: !7067, inlinedAt: !7677)
!7680 = !DILocation(line: 44, column: 15, scope: !7077, inlinedAt: !7681)
!7681 = distinct !DILocation(line: 145, column: 10, scope: !7067, inlinedAt: !7677)
!7682 = !DILocation(line: 47, column: 2, scope: !7077, inlinedAt: !7681)
!7683 = !DILocation(line: 76, column: 9, scope: !7077, inlinedAt: !7681)
!7684 = !DILocation(line: 145, column: 4, scope: !7067, inlinedAt: !7677)
!7685 = !DILocation(line: 145, column: 8, scope: !7067, inlinedAt: !7677)
!7686 = !DILocation(line: 165, column: 2, scope: !7067, inlinedAt: !7677)
!7687 = !DILocation(line: 301, column: 20, scope: !7667)
!7688 = !DILocation(line: 302, column: 49, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7667, file: !317, line: 302, column: 6)
!7690 = !DILocation(line: 302, column: 59, scope: !7689)
!7691 = !DILocation(line: 302, column: 6, scope: !7689)
!7692 = !DILocation(line: 302, column: 6, scope: !7667)
!7693 = !DILocation(line: 303, column: 7, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7689, file: !317, line: 302, column: 68)
!7695 = !DILocation(line: 304, column: 2, scope: !7694)
!7696 = !DILocation(line: 305, column: 2, scope: !7667)
!7697 = !DILocation(line: 189, column: 60, scope: !7118, inlinedAt: !7698)
!7698 = distinct !DILocation(line: 305, column: 2, scope: !7667)
!7699 = !DILocation(line: 190, column: 23, scope: !7118, inlinedAt: !7698)
!7700 = !DILocation(line: 192, column: 2, scope: !7118, inlinedAt: !7698)
!7701 = !DILocation(line: 215, column: 22, scope: !7118, inlinedAt: !7698)
!7702 = !DILocation(line: 84, column: 56, scope: !7037, inlinedAt: !7703)
!7703 = distinct !DILocation(line: 215, column: 2, scope: !7118, inlinedAt: !7698)
!7704 = !DILocation(line: 87, column: 6, scope: !7042, inlinedAt: !7703)
!7705 = !DILocation(line: 87, column: 10, scope: !7042, inlinedAt: !7703)
!7706 = !DILocation(line: 87, column: 6, scope: !7037, inlinedAt: !7703)
!7707 = !DILocation(line: 88, column: 3, scope: !7046, inlinedAt: !7703)
!7708 = !DILocation(line: 90, column: 2, scope: !7037, inlinedAt: !7703)
!7709 = !DILocation(line: 110, column: 1, scope: !7037, inlinedAt: !7703)
!7710 = !DILocation(line: 307, column: 9, scope: !7667)
!7711 = !DILocation(line: 307, column: 2, scope: !7667)
!7712 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !301, file: !301, line: 417, type: !7713, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{!717, !7139, !340}
!7715 = !DILocalVariable(name: "list", arg: 1, scope: !7712, file: !301, line: 417, type: !7139)
!7716 = !DILocation(line: 417, column: 1, scope: !7712)
!7717 = !DILocalVariable(name: "node", arg: 2, scope: !7712, file: !301, line: 417, type: !340)
!7718 = !DILocalVariable(name: "prev", scope: !7712, file: !301, line: 417, type: !340)
!7719 = !DILocalVariable(name: "test", scope: !7712, file: !301, line: 417, type: !340)
!7720 = !DILocation(line: 417, column: 1, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7712, file: !301, line: 417, column: 1)
!7722 = !DILocation(line: 417, column: 1, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7721, file: !301, line: 417, column: 1)
!7724 = !DILocation(line: 417, column: 1, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !301, line: 417, column: 1)
!7726 = distinct !DILexicalBlock(scope: !7723, file: !301, line: 417, column: 1)
!7727 = !DILocation(line: 417, column: 1, scope: !7726)
!7728 = !DILocation(line: 417, column: 1, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7725, file: !301, line: 417, column: 1)
!7730 = distinct !{!7730, !7720, !7720}
!7731 = distinct !DISubprogram(name: "sys_slist_remove", scope: !301, file: !301, line: 401, type: !7732, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{null, !7139, !340, !340}
!7734 = !DILocalVariable(name: "list", arg: 1, scope: !7731, file: !301, line: 401, type: !7139)
!7735 = !DILocation(line: 401, column: 1, scope: !7731)
!7736 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7731, file: !301, line: 401, type: !340)
!7737 = !DILocalVariable(name: "node", arg: 3, scope: !7731, file: !301, line: 401, type: !340)
!7738 = !DILocation(line: 401, column: 1, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7731, file: !301, line: 401, column: 1)
!7740 = !DILocation(line: 401, column: 1, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7739, file: !301, line: 401, column: 1)
!7742 = !DILocation(line: 401, column: 1, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7741, file: !301, line: 401, column: 1)
!7744 = !DILocation(line: 401, column: 1, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7743, file: !301, line: 401, column: 1)
!7746 = !DILocation(line: 401, column: 1, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7739, file: !301, line: 401, column: 1)
!7748 = !DILocation(line: 401, column: 1, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7747, file: !301, line: 401, column: 1)
!7750 = !DILocation(line: 401, column: 1, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7749, file: !301, line: 401, column: 1)
!7752 = distinct !DISubprogram(name: "pm_state_next_get", scope: !317, file: !317, line: 310, type: !7753, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!7753 = !DISubroutineType(types: !7754)
!7754 = !{!7178, !156}
!7755 = !DILocalVariable(name: "cpu", arg: 1, scope: !7752, file: !317, line: 310, type: !156)
!7756 = !DILocation(line: 310, column: 55, scope: !7752)
!7757 = !DILocation(line: 312, column: 26, scope: !7752)
!7758 = !DILocation(line: 312, column: 10, scope: !7752)
!7759 = !DILocation(line: 312, column: 2, scope: !7752)
!7760 = distinct !DISubprogram(name: "pm_policy_next_state", scope: !376, file: !376, line: 85, type: !7761, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!7763, !156, !250}
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7764, size: 32)
!7764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7765)
!7765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_state_info", file: !282, line: 114, size: 128, elements: !7766)
!7766 = !{!7767, !7768, !7769, !7770}
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7765, file: !282, line: 115, baseType: !281, size: 32)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "substate_id", scope: !7765, file: !282, line: 141, baseType: !156, size: 8, offset: 32)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "min_residency_us", scope: !7765, file: !282, line: 149, baseType: !173, size: 32, offset: 64)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "exit_latency_us", scope: !7765, file: !282, line: 156, baseType: !173, size: 32, offset: 96)
!7771 = !DILocalVariable(name: "cpu", arg: 1, scope: !7760, file: !376, line: 85, type: !156)
!7772 = !DILocation(line: 85, column: 58, scope: !7760)
!7773 = !DILocalVariable(name: "ticks", arg: 2, scope: !7760, file: !376, line: 85, type: !250)
!7774 = !DILocation(line: 85, column: 71, scope: !7760)
!7775 = !DILocalVariable(name: "num_cpu_states", scope: !7760, file: !376, line: 87, type: !156)
!7776 = !DILocation(line: 87, column: 10, scope: !7760)
!7777 = !DILocalVariable(name: "cpu_states", scope: !7760, file: !376, line: 88, type: !7763)
!7778 = !DILocation(line: 88, column: 30, scope: !7760)
!7779 = !DILocation(line: 90, column: 40, scope: !7760)
!7780 = !DILocation(line: 90, column: 19, scope: !7760)
!7781 = !DILocation(line: 90, column: 17, scope: !7760)
!7782 = !DILocalVariable(name: "i", scope: !7783, file: !376, line: 92, type: !351)
!7783 = distinct !DILexicalBlock(scope: !7760, file: !376, line: 92, column: 2)
!7784 = !DILocation(line: 92, column: 15, scope: !7783)
!7785 = !DILocation(line: 92, column: 28, scope: !7783)
!7786 = !DILocation(line: 92, column: 19, scope: !7783)
!7787 = !DILocation(line: 92, column: 43, scope: !7783)
!7788 = !DILocation(line: 92, column: 7, scope: !7783)
!7789 = !DILocation(line: 92, column: 48, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7783, file: !376, line: 92, column: 2)
!7791 = !DILocation(line: 92, column: 50, scope: !7790)
!7792 = !DILocation(line: 92, column: 2, scope: !7783)
!7793 = !DILocalVariable(name: "state", scope: !7794, file: !376, line: 93, type: !7763)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !376, line: 92, column: 61)
!7795 = !DILocation(line: 93, column: 31, scope: !7794)
!7796 = !DILocation(line: 93, column: 40, scope: !7794)
!7797 = !DILocation(line: 93, column: 51, scope: !7794)
!7798 = !DILocalVariable(name: "min_residency", scope: !7794, file: !376, line: 94, type: !173)
!7799 = !DILocation(line: 94, column: 12, scope: !7794)
!7800 = !DILocalVariable(name: "exit_latency", scope: !7794, file: !376, line: 94, type: !173)
!7801 = !DILocation(line: 94, column: 27, scope: !7794)
!7802 = !DILocation(line: 97, column: 38, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7794, file: !376, line: 97, column: 7)
!7804 = !DILocation(line: 97, column: 45, scope: !7803)
!7805 = !DILocation(line: 97, column: 52, scope: !7803)
!7806 = !DILocation(line: 97, column: 59, scope: !7803)
!7807 = !DILocation(line: 97, column: 7, scope: !7803)
!7808 = !DILocation(line: 97, column: 7, scope: !7794)
!7809 = !DILocation(line: 98, column: 4, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7803, file: !376, line: 97, column: 73)
!7811 = !DILocation(line: 101, column: 40, scope: !7794)
!7812 = !DILocation(line: 101, column: 47, scope: !7794)
!7813 = !DILocation(line: 101, column: 19, scope: !7794)
!7814 = !DILocation(line: 101, column: 17, scope: !7794)
!7815 = !DILocation(line: 102, column: 39, scope: !7794)
!7816 = !DILocation(line: 102, column: 46, scope: !7794)
!7817 = !DILocation(line: 102, column: 18, scope: !7794)
!7818 = !DILocation(line: 102, column: 16, scope: !7794)
!7819 = !DILocation(line: 105, column: 8, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7794, file: !376, line: 105, column: 7)
!7821 = !DILocation(line: 105, column: 26, scope: !7820)
!7822 = !DILocation(line: 105, column: 46, scope: !7820)
!7823 = !DILocation(line: 106, column: 8, scope: !7820)
!7824 = !DILocation(line: 106, column: 24, scope: !7820)
!7825 = !DILocation(line: 106, column: 21, scope: !7820)
!7826 = !DILocation(line: 105, column: 7, scope: !7794)
!7827 = !DILocation(line: 107, column: 4, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7820, file: !376, line: 106, column: 44)
!7829 = !DILocation(line: 110, column: 8, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7794, file: !376, line: 110, column: 7)
!7831 = !DILocation(line: 110, column: 14, scope: !7830)
!7832 = !DILocation(line: 110, column: 34, scope: !7830)
!7833 = !DILocation(line: 111, column: 8, scope: !7830)
!7834 = !DILocation(line: 111, column: 18, scope: !7830)
!7835 = !DILocation(line: 111, column: 34, scope: !7830)
!7836 = !DILocation(line: 111, column: 32, scope: !7830)
!7837 = !DILocation(line: 111, column: 14, scope: !7830)
!7838 = !DILocation(line: 110, column: 7, scope: !7794)
!7839 = !DILocation(line: 112, column: 11, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7830, file: !376, line: 111, column: 50)
!7841 = !DILocation(line: 112, column: 4, scope: !7840)
!7842 = !DILocation(line: 114, column: 2, scope: !7794)
!7843 = !DILocation(line: 92, column: 57, scope: !7790)
!7844 = !DILocation(line: 92, column: 2, scope: !7790)
!7845 = distinct !{!7845, !7792, !7846}
!7846 = !DILocation(line: 114, column: 2, scope: !7783)
!7847 = !DILocation(line: 116, column: 2, scope: !7760)
!7848 = !DILocation(line: 117, column: 1, scope: !7760)
!7849 = distinct !DISubprogram(name: "pm_policy_state_lock_is_active", scope: !376, file: !376, line: 146, type: !7850, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!717, !281, !156}
!7852 = !DILocalVariable(name: "state", arg: 1, scope: !7849, file: !376, line: 146, type: !281)
!7853 = !DILocation(line: 146, column: 51, scope: !7849)
!7854 = !DILocalVariable(name: "substate_id", arg: 2, scope: !7849, file: !376, line: 146, type: !156)
!7855 = !DILocation(line: 146, column: 66, scope: !7849)
!7856 = !DILocalVariable(name: "i", scope: !7857, file: !376, line: 148, type: !217)
!7857 = distinct !DILexicalBlock(scope: !7849, file: !376, line: 148, column: 2)
!7858 = !DILocation(line: 148, column: 14, scope: !7857)
!7859 = !DILocation(line: 148, column: 7, scope: !7857)
!7860 = !DILocation(line: 148, column: 21, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7857, file: !376, line: 148, column: 2)
!7862 = !DILocation(line: 148, column: 23, scope: !7861)
!7863 = !DILocation(line: 148, column: 2, scope: !7857)
!7864 = !DILocation(line: 149, column: 23, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !376, line: 149, column: 7)
!7866 = distinct !DILexicalBlock(scope: !7861, file: !376, line: 148, column: 59)
!7867 = !DILocation(line: 149, column: 7, scope: !7865)
!7868 = !DILocation(line: 149, column: 26, scope: !7865)
!7869 = !DILocation(line: 149, column: 35, scope: !7865)
!7870 = !DILocation(line: 149, column: 32, scope: !7865)
!7871 = !DILocation(line: 149, column: 41, scope: !7865)
!7872 = !DILocation(line: 150, column: 23, scope: !7865)
!7873 = !DILocation(line: 150, column: 7, scope: !7865)
!7874 = !DILocation(line: 150, column: 26, scope: !7865)
!7875 = !DILocation(line: 150, column: 41, scope: !7865)
!7876 = !DILocation(line: 150, column: 38, scope: !7865)
!7877 = !DILocation(line: 150, column: 53, scope: !7865)
!7878 = !DILocation(line: 151, column: 7, scope: !7865)
!7879 = !DILocation(line: 151, column: 19, scope: !7865)
!7880 = !DILocation(line: 149, column: 7, scope: !7866)
!7881 = !DILocation(line: 152, column: 40, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7865, file: !376, line: 151, column: 41)
!7883 = !DILocation(line: 152, column: 24, scope: !7882)
!7884 = !DILocation(line: 152, column: 43, scope: !7882)
!7885 = !DILocation(line: 152, column: 12, scope: !7882)
!7886 = !DILocation(line: 152, column: 49, scope: !7882)
!7887 = !DILocation(line: 152, column: 4, scope: !7882)
!7888 = !DILocation(line: 154, column: 2, scope: !7866)
!7889 = !DILocation(line: 148, column: 55, scope: !7861)
!7890 = !DILocation(line: 148, column: 2, scope: !7861)
!7891 = distinct !{!7891, !7863, !7892}
!7892 = !DILocation(line: 154, column: 2, scope: !7857)
!7893 = !DILocation(line: 156, column: 2, scope: !7849)
!7894 = !DILocation(line: 157, column: 1, scope: !7849)
!7895 = distinct !DISubprogram(name: "k_us_to_ticks_ceil32", scope: !7339, file: !7339, line: 557, type: !7340, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!7896 = !DILocalVariable(name: "t", arg: 1, scope: !7895, file: !7339, line: 557, type: !173)
!7897 = !DILocation(line: 557, column: 69, scope: !7895)
!7898 = !DILocation(line: 560, column: 17, scope: !7895)
!7899 = !DILocalVariable(name: "t", arg: 1, scope: !7900, file: !7339, line: 102, type: !312)
!7900 = distinct !DISubprogram(name: "z_tmcvt", scope: !7339, file: !7339, line: 102, type: !7347, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!7901 = !DILocation(line: 102, column: 63, scope: !7900, inlinedAt: !7902)
!7902 = distinct !DILocation(line: 560, column: 9, scope: !7895)
!7903 = !DILocalVariable(name: "from_hz", arg: 2, scope: !7900, file: !7339, line: 102, type: !173)
!7904 = !DILocation(line: 102, column: 75, scope: !7900, inlinedAt: !7902)
!7905 = !DILocalVariable(name: "to_hz", arg: 3, scope: !7900, file: !7339, line: 103, type: !173)
!7906 = !DILocation(line: 103, column: 18, scope: !7900, inlinedAt: !7902)
!7907 = !DILocalVariable(name: "const_hz", arg: 4, scope: !7900, file: !7339, line: 103, type: !717)
!7908 = !DILocation(line: 103, column: 30, scope: !7900, inlinedAt: !7902)
!7909 = !DILocalVariable(name: "result32", arg: 5, scope: !7900, file: !7339, line: 104, type: !717)
!7910 = !DILocation(line: 104, column: 14, scope: !7900, inlinedAt: !7902)
!7911 = !DILocalVariable(name: "round_up", arg: 6, scope: !7900, file: !7339, line: 104, type: !717)
!7912 = !DILocation(line: 104, column: 29, scope: !7900, inlinedAt: !7902)
!7913 = !DILocalVariable(name: "round_off", arg: 7, scope: !7900, file: !7339, line: 105, type: !717)
!7914 = !DILocation(line: 105, column: 14, scope: !7900, inlinedAt: !7902)
!7915 = !DILocalVariable(name: "mul_ratio", scope: !7900, file: !7339, line: 107, type: !717)
!7916 = !DILocation(line: 107, column: 7, scope: !7900, inlinedAt: !7902)
!7917 = !DILocation(line: 107, column: 19, scope: !7900, inlinedAt: !7902)
!7918 = !DILocation(line: 107, column: 28, scope: !7900, inlinedAt: !7902)
!7919 = !DILocation(line: 108, column: 4, scope: !7900, inlinedAt: !7902)
!7920 = !DILocation(line: 108, column: 12, scope: !7900, inlinedAt: !7902)
!7921 = !DILocation(line: 108, column: 10, scope: !7900, inlinedAt: !7902)
!7922 = !DILocation(line: 108, column: 21, scope: !7900, inlinedAt: !7902)
!7923 = !DILocation(line: 108, column: 26, scope: !7900, inlinedAt: !7902)
!7924 = !DILocation(line: 108, column: 34, scope: !7900, inlinedAt: !7902)
!7925 = !DILocation(line: 108, column: 32, scope: !7900, inlinedAt: !7902)
!7926 = !DILocation(line: 108, column: 43, scope: !7900, inlinedAt: !7902)
!7927 = !DILocation(line: 0, scope: !7900, inlinedAt: !7902)
!7928 = !DILocalVariable(name: "div_ratio", scope: !7900, file: !7339, line: 109, type: !717)
!7929 = !DILocation(line: 109, column: 7, scope: !7900, inlinedAt: !7902)
!7930 = !DILocation(line: 109, column: 19, scope: !7900, inlinedAt: !7902)
!7931 = !DILocation(line: 109, column: 28, scope: !7900, inlinedAt: !7902)
!7932 = !DILocation(line: 110, column: 4, scope: !7900, inlinedAt: !7902)
!7933 = !DILocation(line: 110, column: 14, scope: !7900, inlinedAt: !7902)
!7934 = !DILocation(line: 110, column: 12, scope: !7900, inlinedAt: !7902)
!7935 = !DILocation(line: 110, column: 21, scope: !7900, inlinedAt: !7902)
!7936 = !DILocation(line: 110, column: 26, scope: !7900, inlinedAt: !7902)
!7937 = !DILocation(line: 110, column: 36, scope: !7900, inlinedAt: !7902)
!7938 = !DILocation(line: 110, column: 34, scope: !7900, inlinedAt: !7902)
!7939 = !DILocation(line: 110, column: 43, scope: !7900, inlinedAt: !7902)
!7940 = !DILocation(line: 112, column: 6, scope: !7941, inlinedAt: !7902)
!7941 = distinct !DILexicalBlock(scope: !7900, file: !7339, line: 112, column: 6)
!7942 = !DILocation(line: 112, column: 17, scope: !7941, inlinedAt: !7902)
!7943 = !DILocation(line: 112, column: 14, scope: !7941, inlinedAt: !7902)
!7944 = !DILocation(line: 112, column: 6, scope: !7900, inlinedAt: !7902)
!7945 = !DILocation(line: 113, column: 10, scope: !7946, inlinedAt: !7902)
!7946 = distinct !DILexicalBlock(scope: !7941, file: !7339, line: 112, column: 24)
!7947 = !DILocation(line: 113, column: 32, scope: !7946, inlinedAt: !7902)
!7948 = !DILocation(line: 113, column: 22, scope: !7946, inlinedAt: !7902)
!7949 = !DILocation(line: 113, column: 21, scope: !7946, inlinedAt: !7902)
!7950 = !DILocation(line: 113, column: 37, scope: !7946, inlinedAt: !7902)
!7951 = !DILocation(line: 113, column: 3, scope: !7946, inlinedAt: !7902)
!7952 = !DILocalVariable(name: "off", scope: !7900, file: !7339, line: 116, type: !312)
!7953 = !DILocation(line: 116, column: 11, scope: !7900, inlinedAt: !7902)
!7954 = !DILocation(line: 118, column: 7, scope: !7955, inlinedAt: !7902)
!7955 = distinct !DILexicalBlock(scope: !7900, file: !7339, line: 118, column: 6)
!7956 = !DILocation(line: 118, column: 6, scope: !7900, inlinedAt: !7902)
!7957 = !DILocalVariable(name: "rdivisor", scope: !7958, file: !7339, line: 119, type: !173)
!7958 = distinct !DILexicalBlock(scope: !7955, file: !7339, line: 118, column: 18)
!7959 = !DILocation(line: 119, column: 12, scope: !7958, inlinedAt: !7902)
!7960 = !DILocation(line: 119, column: 23, scope: !7958, inlinedAt: !7902)
!7961 = !DILocation(line: 119, column: 36, scope: !7958, inlinedAt: !7902)
!7962 = !DILocation(line: 119, column: 46, scope: !7958, inlinedAt: !7902)
!7963 = !DILocation(line: 119, column: 44, scope: !7958, inlinedAt: !7902)
!7964 = !DILocation(line: 119, column: 55, scope: !7958, inlinedAt: !7902)
!7965 = !DILocation(line: 121, column: 7, scope: !7966, inlinedAt: !7902)
!7966 = distinct !DILexicalBlock(scope: !7958, file: !7339, line: 121, column: 7)
!7967 = !DILocation(line: 121, column: 7, scope: !7958, inlinedAt: !7902)
!7968 = !DILocation(line: 122, column: 10, scope: !7969, inlinedAt: !7902)
!7969 = distinct !DILexicalBlock(scope: !7966, file: !7339, line: 121, column: 17)
!7970 = !DILocation(line: 122, column: 19, scope: !7969, inlinedAt: !7902)
!7971 = !DILocation(line: 122, column: 8, scope: !7969, inlinedAt: !7902)
!7972 = !DILocation(line: 123, column: 3, scope: !7969, inlinedAt: !7902)
!7973 = !DILocation(line: 124, column: 7, scope: !7974, inlinedAt: !7902)
!7974 = distinct !DILexicalBlock(scope: !7958, file: !7339, line: 124, column: 7)
!7975 = !DILocation(line: 124, column: 7, scope: !7958, inlinedAt: !7902)
!7976 = !DILocation(line: 125, column: 10, scope: !7977, inlinedAt: !7902)
!7977 = distinct !DILexicalBlock(scope: !7974, file: !7339, line: 124, column: 18)
!7978 = !DILocation(line: 125, column: 19, scope: !7977, inlinedAt: !7902)
!7979 = !DILocation(line: 125, column: 8, scope: !7977, inlinedAt: !7902)
!7980 = !DILocation(line: 126, column: 3, scope: !7977, inlinedAt: !7902)
!7981 = !DILocation(line: 127, column: 2, scope: !7958, inlinedAt: !7902)
!7982 = !DILocation(line: 134, column: 6, scope: !7983, inlinedAt: !7902)
!7983 = distinct !DILexicalBlock(scope: !7900, file: !7339, line: 134, column: 6)
!7984 = !DILocation(line: 134, column: 6, scope: !7900, inlinedAt: !7902)
!7985 = !DILocation(line: 135, column: 8, scope: !7986, inlinedAt: !7902)
!7986 = distinct !DILexicalBlock(scope: !7983, file: !7339, line: 134, column: 17)
!7987 = !DILocation(line: 135, column: 5, scope: !7986, inlinedAt: !7902)
!7988 = !DILocation(line: 136, column: 7, scope: !7989, inlinedAt: !7902)
!7989 = distinct !DILexicalBlock(scope: !7986, file: !7339, line: 136, column: 7)
!7990 = !DILocation(line: 136, column: 16, scope: !7989, inlinedAt: !7902)
!7991 = !DILocation(line: 136, column: 20, scope: !7989, inlinedAt: !7902)
!7992 = !DILocation(line: 136, column: 22, scope: !7989, inlinedAt: !7902)
!7993 = !DILocation(line: 136, column: 7, scope: !7986, inlinedAt: !7902)
!7994 = !DILocation(line: 137, column: 22, scope: !7995, inlinedAt: !7902)
!7995 = distinct !DILexicalBlock(scope: !7989, file: !7339, line: 136, column: 36)
!7996 = !DILocation(line: 137, column: 12, scope: !7995, inlinedAt: !7902)
!7997 = !DILocation(line: 137, column: 28, scope: !7995, inlinedAt: !7902)
!7998 = !DILocation(line: 137, column: 38, scope: !7995, inlinedAt: !7902)
!7999 = !DILocation(line: 137, column: 36, scope: !7995, inlinedAt: !7902)
!8000 = !DILocation(line: 137, column: 25, scope: !7995, inlinedAt: !7902)
!8001 = !DILocation(line: 137, column: 11, scope: !7995, inlinedAt: !7902)
!8002 = !DILocation(line: 137, column: 4, scope: !7995, inlinedAt: !7902)
!8003 = !DILocation(line: 139, column: 11, scope: !8004, inlinedAt: !7902)
!8004 = distinct !DILexicalBlock(scope: !7989, file: !7339, line: 138, column: 10)
!8005 = !DILocation(line: 139, column: 26, scope: !8004, inlinedAt: !7902)
!8006 = !DILocation(line: 139, column: 16, scope: !8004, inlinedAt: !7902)
!8007 = !DILocation(line: 139, column: 36, scope: !8004, inlinedAt: !7902)
!8008 = !DILocation(line: 139, column: 34, scope: !8004, inlinedAt: !7902)
!8009 = !DILocation(line: 139, column: 13, scope: !8004, inlinedAt: !7902)
!8010 = !DILocation(line: 139, column: 4, scope: !8004, inlinedAt: !7902)
!8011 = !DILocation(line: 141, column: 13, scope: !8012, inlinedAt: !7902)
!8012 = distinct !DILexicalBlock(scope: !7983, file: !7339, line: 141, column: 13)
!8013 = !DILocation(line: 141, column: 13, scope: !7983, inlinedAt: !7902)
!8014 = !DILocation(line: 142, column: 7, scope: !8015, inlinedAt: !7902)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !7339, line: 142, column: 7)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !7339, line: 141, column: 24)
!8017 = !DILocation(line: 142, column: 7, scope: !8016, inlinedAt: !7902)
!8018 = !DILocation(line: 143, column: 22, scope: !8019, inlinedAt: !7902)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !7339, line: 142, column: 17)
!8020 = !DILocation(line: 143, column: 12, scope: !8019, inlinedAt: !7902)
!8021 = !DILocation(line: 143, column: 28, scope: !8019, inlinedAt: !7902)
!8022 = !DILocation(line: 143, column: 36, scope: !8019, inlinedAt: !7902)
!8023 = !DILocation(line: 143, column: 34, scope: !8019, inlinedAt: !7902)
!8024 = !DILocation(line: 143, column: 25, scope: !8019, inlinedAt: !7902)
!8025 = !DILocation(line: 143, column: 11, scope: !8019, inlinedAt: !7902)
!8026 = !DILocation(line: 143, column: 4, scope: !8019, inlinedAt: !7902)
!8027 = !DILocation(line: 145, column: 11, scope: !8028, inlinedAt: !7902)
!8028 = distinct !DILexicalBlock(scope: !8015, file: !7339, line: 144, column: 10)
!8029 = !DILocation(line: 145, column: 26, scope: !8028, inlinedAt: !7902)
!8030 = !DILocation(line: 145, column: 16, scope: !8028, inlinedAt: !7902)
!8031 = !DILocation(line: 145, column: 34, scope: !8028, inlinedAt: !7902)
!8032 = !DILocation(line: 145, column: 32, scope: !8028, inlinedAt: !7902)
!8033 = !DILocation(line: 145, column: 13, scope: !8028, inlinedAt: !7902)
!8034 = !DILocation(line: 145, column: 4, scope: !8028, inlinedAt: !7902)
!8035 = !DILocation(line: 148, column: 7, scope: !8036, inlinedAt: !7902)
!8036 = distinct !DILexicalBlock(scope: !8037, file: !7339, line: 148, column: 7)
!8037 = distinct !DILexicalBlock(scope: !8012, file: !7339, line: 147, column: 9)
!8038 = !DILocation(line: 148, column: 7, scope: !8037, inlinedAt: !7902)
!8039 = !DILocation(line: 149, column: 23, scope: !8040, inlinedAt: !7902)
!8040 = distinct !DILexicalBlock(scope: !8036, file: !7339, line: 148, column: 17)
!8041 = !DILocation(line: 149, column: 27, scope: !8040, inlinedAt: !7902)
!8042 = !DILocation(line: 149, column: 25, scope: !8040, inlinedAt: !7902)
!8043 = !DILocation(line: 149, column: 35, scope: !8040, inlinedAt: !7902)
!8044 = !DILocation(line: 149, column: 33, scope: !8040, inlinedAt: !7902)
!8045 = !DILocation(line: 149, column: 42, scope: !8040, inlinedAt: !7902)
!8046 = !DILocation(line: 149, column: 40, scope: !8040, inlinedAt: !7902)
!8047 = !DILocation(line: 149, column: 11, scope: !8040, inlinedAt: !7902)
!8048 = !DILocation(line: 149, column: 4, scope: !8040, inlinedAt: !7902)
!8049 = !DILocation(line: 150, column: 14, scope: !8050, inlinedAt: !7902)
!8050 = distinct !DILexicalBlock(scope: !8036, file: !7339, line: 150, column: 14)
!8051 = !DILocation(line: 150, column: 23, scope: !8050, inlinedAt: !7902)
!8052 = !DILocation(line: 150, column: 26, scope: !8050, inlinedAt: !7902)
!8053 = !DILocation(line: 150, column: 14, scope: !8036, inlinedAt: !7902)
!8054 = !DILocation(line: 156, column: 13, scope: !8055, inlinedAt: !7902)
!8055 = distinct !DILexicalBlock(scope: !8050, file: !7339, line: 150, column: 65)
!8056 = !DILocation(line: 156, column: 17, scope: !8055, inlinedAt: !7902)
!8057 = !DILocation(line: 156, column: 15, scope: !8055, inlinedAt: !7902)
!8058 = !DILocation(line: 156, column: 25, scope: !8055, inlinedAt: !7902)
!8059 = !DILocation(line: 156, column: 23, scope: !8055, inlinedAt: !7902)
!8060 = !DILocation(line: 156, column: 32, scope: !8055, inlinedAt: !7902)
!8061 = !DILocation(line: 156, column: 30, scope: !8055, inlinedAt: !7902)
!8062 = !DILocation(line: 156, column: 4, scope: !8055, inlinedAt: !7902)
!8063 = !DILocation(line: 161, column: 12, scope: !8064, inlinedAt: !7902)
!8064 = distinct !DILexicalBlock(scope: !8050, file: !7339, line: 157, column: 10)
!8065 = !DILocation(line: 161, column: 16, scope: !8064, inlinedAt: !7902)
!8066 = !DILocation(line: 161, column: 14, scope: !8064, inlinedAt: !7902)
!8067 = !DILocation(line: 161, column: 27, scope: !8064, inlinedAt: !7902)
!8068 = !DILocation(line: 161, column: 25, scope: !8064, inlinedAt: !7902)
!8069 = !DILocation(line: 161, column: 37, scope: !8064, inlinedAt: !7902)
!8070 = !DILocation(line: 161, column: 41, scope: !8064, inlinedAt: !7902)
!8071 = !DILocation(line: 161, column: 39, scope: !8064, inlinedAt: !7902)
!8072 = !DILocation(line: 161, column: 52, scope: !8064, inlinedAt: !7902)
!8073 = !DILocation(line: 161, column: 50, scope: !8064, inlinedAt: !7902)
!8074 = !DILocation(line: 161, column: 60, scope: !8064, inlinedAt: !7902)
!8075 = !DILocation(line: 161, column: 58, scope: !8064, inlinedAt: !7902)
!8076 = !DILocation(line: 161, column: 67, scope: !8064, inlinedAt: !7902)
!8077 = !DILocation(line: 161, column: 65, scope: !8064, inlinedAt: !7902)
!8078 = !DILocation(line: 161, column: 33, scope: !8064, inlinedAt: !7902)
!8079 = !DILocation(line: 161, column: 4, scope: !8064, inlinedAt: !7902)
!8080 = !DILocation(line: 164, column: 1, scope: !7900, inlinedAt: !7902)
!8081 = !DILocation(line: 560, column: 9, scope: !7895)
!8082 = !DILocation(line: 560, column: 2, scope: !7895)
!8083 = distinct !DISubprogram(name: "pm_policy_state_lock_get", scope: !376, file: !376, line: 120, type: !8084, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{null, !281, !156}
!8086 = !DILocalVariable(name: "state", arg: 1, scope: !8083, file: !376, line: 120, type: !281)
!8087 = !DILocation(line: 120, column: 45, scope: !8083)
!8088 = !DILocalVariable(name: "substate_id", arg: 2, scope: !8083, file: !376, line: 120, type: !156)
!8089 = !DILocation(line: 120, column: 60, scope: !8083)
!8090 = !DILocalVariable(name: "i", scope: !8091, file: !376, line: 122, type: !217)
!8091 = distinct !DILexicalBlock(scope: !8083, file: !376, line: 122, column: 2)
!8092 = !DILocation(line: 122, column: 14, scope: !8091)
!8093 = !DILocation(line: 122, column: 7, scope: !8091)
!8094 = !DILocation(line: 122, column: 21, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8091, file: !376, line: 122, column: 2)
!8096 = !DILocation(line: 122, column: 23, scope: !8095)
!8097 = !DILocation(line: 122, column: 2, scope: !8091)
!8098 = !DILocation(line: 123, column: 23, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !376, line: 123, column: 7)
!8100 = distinct !DILexicalBlock(scope: !8095, file: !376, line: 122, column: 59)
!8101 = !DILocation(line: 123, column: 7, scope: !8099)
!8102 = !DILocation(line: 123, column: 26, scope: !8099)
!8103 = !DILocation(line: 123, column: 35, scope: !8099)
!8104 = !DILocation(line: 123, column: 32, scope: !8099)
!8105 = !DILocation(line: 123, column: 41, scope: !8099)
!8106 = !DILocation(line: 124, column: 23, scope: !8099)
!8107 = !DILocation(line: 124, column: 7, scope: !8099)
!8108 = !DILocation(line: 124, column: 26, scope: !8099)
!8109 = !DILocation(line: 124, column: 41, scope: !8099)
!8110 = !DILocation(line: 124, column: 38, scope: !8099)
!8111 = !DILocation(line: 124, column: 53, scope: !8099)
!8112 = !DILocation(line: 125, column: 7, scope: !8099)
!8113 = !DILocation(line: 125, column: 19, scope: !8099)
!8114 = !DILocation(line: 123, column: 7, scope: !8100)
!8115 = !DILocation(line: 126, column: 32, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8099, file: !376, line: 125, column: 41)
!8117 = !DILocation(line: 126, column: 16, scope: !8116)
!8118 = !DILocation(line: 126, column: 35, scope: !8116)
!8119 = !DILocation(line: 126, column: 4, scope: !8116)
!8120 = !DILocation(line: 127, column: 3, scope: !8116)
!8121 = !DILocation(line: 128, column: 2, scope: !8100)
!8122 = !DILocation(line: 122, column: 55, scope: !8095)
!8123 = !DILocation(line: 122, column: 2, scope: !8095)
!8124 = distinct !{!8124, !8097, !8125}
!8125 = !DILocation(line: 128, column: 2, scope: !8091)
!8126 = !DILocation(line: 129, column: 1, scope: !8083)
!8127 = distinct !DISubprogram(name: "atomic_inc", scope: !8128, file: !8128, line: 30, type: !8129, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8128 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_c.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8129 = !DISubroutineType(types: !8130)
!8130 = !{!1343, !1342}
!8131 = !DILocalVariable(name: "target", arg: 1, scope: !8127, file: !8128, line: 30, type: !1342)
!8132 = !DILocation(line: 30, column: 49, scope: !8127)
!8133 = !DILocation(line: 32, column: 20, scope: !8127)
!8134 = !DILocation(line: 32, column: 9, scope: !8127)
!8135 = !DILocation(line: 32, column: 2, scope: !8127)
!8136 = distinct !DISubprogram(name: "atomic_add", scope: !7160, file: !7160, line: 74, type: !7161, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8137 = !DILocalVariable(name: "target", arg: 1, scope: !8136, file: !7160, line: 74, type: !1342)
!8138 = !DILocation(line: 74, column: 50, scope: !8136)
!8139 = !DILocalVariable(name: "value", arg: 2, scope: !8136, file: !7160, line: 74, type: !1343)
!8140 = !DILocation(line: 74, column: 71, scope: !8136)
!8141 = !DILocation(line: 83, column: 2, scope: !8136)
!8142 = !DILocation(line: 83, column: 2, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8136, file: !7160, line: 83, column: 2)
!8144 = !{i64 2147940429}
!8145 = !DILocation(line: 84, column: 27, scope: !8136)
!8146 = !DILocation(line: 84, column: 35, scope: !8136)
!8147 = !DILocation(line: 84, column: 9, scope: !8136)
!8148 = !DILocation(line: 84, column: 2, scope: !8136)
!8149 = distinct !DISubprogram(name: "pm_policy_state_lock_put", scope: !376, file: !376, line: 131, type: !8084, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8150 = !DILocalVariable(name: "state", arg: 1, scope: !8149, file: !376, line: 131, type: !281)
!8151 = !DILocation(line: 131, column: 45, scope: !8149)
!8152 = !DILocalVariable(name: "substate_id", arg: 2, scope: !8149, file: !376, line: 131, type: !156)
!8153 = !DILocation(line: 131, column: 60, scope: !8149)
!8154 = !DILocalVariable(name: "i", scope: !8155, file: !376, line: 133, type: !217)
!8155 = distinct !DILexicalBlock(scope: !8149, file: !376, line: 133, column: 2)
!8156 = !DILocation(line: 133, column: 14, scope: !8155)
!8157 = !DILocation(line: 133, column: 7, scope: !8155)
!8158 = !DILocation(line: 133, column: 21, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8155, file: !376, line: 133, column: 2)
!8160 = !DILocation(line: 133, column: 23, scope: !8159)
!8161 = !DILocation(line: 133, column: 2, scope: !8155)
!8162 = !DILocation(line: 134, column: 23, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !376, line: 134, column: 7)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !376, line: 133, column: 59)
!8165 = !DILocation(line: 134, column: 7, scope: !8163)
!8166 = !DILocation(line: 134, column: 26, scope: !8163)
!8167 = !DILocation(line: 134, column: 35, scope: !8163)
!8168 = !DILocation(line: 134, column: 32, scope: !8163)
!8169 = !DILocation(line: 134, column: 41, scope: !8163)
!8170 = !DILocation(line: 135, column: 23, scope: !8163)
!8171 = !DILocation(line: 135, column: 7, scope: !8163)
!8172 = !DILocation(line: 135, column: 26, scope: !8163)
!8173 = !DILocation(line: 135, column: 41, scope: !8163)
!8174 = !DILocation(line: 135, column: 38, scope: !8163)
!8175 = !DILocation(line: 135, column: 53, scope: !8163)
!8176 = !DILocation(line: 136, column: 7, scope: !8163)
!8177 = !DILocation(line: 136, column: 19, scope: !8163)
!8178 = !DILocation(line: 134, column: 7, scope: !8164)
!8179 = !DILocalVariable(name: "cnt", scope: !8180, file: !376, line: 137, type: !343)
!8180 = distinct !DILexicalBlock(scope: !8163, file: !376, line: 136, column: 41)
!8181 = !DILocation(line: 137, column: 13, scope: !8180)
!8182 = !DILocation(line: 137, column: 47, scope: !8180)
!8183 = !DILocation(line: 137, column: 31, scope: !8180)
!8184 = !DILocation(line: 137, column: 50, scope: !8180)
!8185 = !DILocation(line: 137, column: 19, scope: !8180)
!8186 = !DILocation(line: 139, column: 4, scope: !8180)
!8187 = !DILocation(line: 142, column: 3, scope: !8180)
!8188 = !DILocation(line: 143, column: 2, scope: !8164)
!8189 = !DILocation(line: 133, column: 55, scope: !8159)
!8190 = !DILocation(line: 133, column: 2, scope: !8159)
!8191 = distinct !{!8191, !8161, !8192}
!8192 = !DILocation(line: 143, column: 2, scope: !8155)
!8193 = !DILocation(line: 144, column: 1, scope: !8149)
!8194 = distinct !DISubprogram(name: "atomic_dec", scope: !8128, file: !8128, line: 36, type: !8129, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8195 = !DILocalVariable(name: "target", arg: 1, scope: !8194, file: !8128, line: 36, type: !1342)
!8196 = !DILocation(line: 36, column: 49, scope: !8194)
!8197 = !DILocation(line: 38, column: 20, scope: !8194)
!8198 = !DILocation(line: 38, column: 9, scope: !8194)
!8199 = !DILocation(line: 38, column: 2, scope: !8194)
!8200 = distinct !DISubprogram(name: "atomic_sub", scope: !7160, file: !7160, line: 98, type: !7161, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8201 = !DILocalVariable(name: "target", arg: 1, scope: !8200, file: !7160, line: 98, type: !1342)
!8202 = !DILocation(line: 98, column: 50, scope: !8200)
!8203 = !DILocalVariable(name: "value", arg: 2, scope: !8200, file: !7160, line: 98, type: !1343)
!8204 = !DILocation(line: 98, column: 71, scope: !8200)
!8205 = !DILocation(line: 107, column: 2, scope: !8200)
!8206 = !DILocation(line: 107, column: 2, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8200, file: !7160, line: 107, column: 2)
!8208 = !{i64 2147940497}
!8209 = !DILocation(line: 108, column: 27, scope: !8200)
!8210 = !DILocation(line: 108, column: 35, scope: !8200)
!8211 = !DILocation(line: 108, column: 9, scope: !8200)
!8212 = !DILocation(line: 108, column: 2, scope: !8200)
!8213 = distinct !DISubprogram(name: "pm_policy_latency_request_add", scope: !376, file: !376, line: 159, type: !8214, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{null, !353, !173}
!8216 = !DILocalVariable(name: "req", arg: 1, scope: !8213, file: !376, line: 159, type: !353)
!8217 = !DILocation(line: 159, column: 70, scope: !8213)
!8218 = !DILocalVariable(name: "value", arg: 2, scope: !8213, file: !376, line: 160, type: !173)
!8219 = !DILocation(line: 160, column: 17, scope: !8213)
!8220 = !DILocation(line: 162, column: 15, scope: !8213)
!8221 = !DILocation(line: 162, column: 2, scope: !8213)
!8222 = !DILocation(line: 162, column: 7, scope: !8213)
!8223 = !DILocation(line: 162, column: 13, scope: !8213)
!8224 = !DILocalVariable(name: "key", scope: !8213, file: !376, line: 164, type: !8225)
!8225 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !8226)
!8226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !8227)
!8227 = !{!8228}
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8226, file: !222, line: 33, baseType: !103, size: 32)
!8229 = !DILocation(line: 164, column: 19, scope: !8213)
!8230 = !DILocalVariable(name: "l", arg: 1, scope: !8231, file: !222, line: 136, type: !8234)
!8231 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !8232, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!8225, !8234}
!8234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!8235 = !DILocation(line: 136, column: 70, scope: !8231, inlinedAt: !8236)
!8236 = distinct !DILocation(line: 164, column: 25, scope: !8213)
!8237 = !DILocation(line: 138, column: 2, scope: !8231, inlinedAt: !8236)
!8238 = !DILocalVariable(name: "k", scope: !8231, file: !222, line: 139, type: !8225)
!8239 = !DILocation(line: 139, column: 19, scope: !8231, inlinedAt: !8236)
!8240 = !DILocalVariable(name: "key", scope: !8241, file: !3614, line: 44, type: !32)
!8241 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8242 = !DILocation(line: 44, column: 15, scope: !8241, inlinedAt: !8243)
!8243 = distinct !DILocation(line: 145, column: 10, scope: !8231, inlinedAt: !8236)
!8244 = !DILocation(line: 47, column: 2, scope: !8241, inlinedAt: !8243)
!8245 = !{i64 1444811}
!8246 = !DILocation(line: 76, column: 9, scope: !8241, inlinedAt: !8243)
!8247 = !DILocation(line: 145, column: 4, scope: !8231, inlinedAt: !8236)
!8248 = !DILocation(line: 145, column: 8, scope: !8231, inlinedAt: !8236)
!8249 = !DILocation(line: 165, column: 2, scope: !8231, inlinedAt: !8236)
!8250 = !DILocation(line: 164, column: 25, scope: !8213)
!8251 = !DILocation(line: 166, column: 35, scope: !8213)
!8252 = !DILocation(line: 166, column: 40, scope: !8213)
!8253 = !DILocation(line: 166, column: 2, scope: !8213)
!8254 = !DILocation(line: 167, column: 2, scope: !8213)
!8255 = !DILocation(line: 169, column: 2, scope: !8213)
!8256 = !DILocalVariable(name: "l", arg: 1, scope: !8257, file: !222, line: 189, type: !8234)
!8257 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !8258, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{null, !8234, !8225}
!8260 = !DILocation(line: 189, column: 60, scope: !8257, inlinedAt: !8261)
!8261 = distinct !DILocation(line: 169, column: 2, scope: !8213)
!8262 = !DILocalVariable(name: "key", arg: 2, scope: !8257, file: !222, line: 190, type: !8225)
!8263 = !DILocation(line: 190, column: 23, scope: !8257, inlinedAt: !8261)
!8264 = !DILocation(line: 192, column: 2, scope: !8257, inlinedAt: !8261)
!8265 = !DILocation(line: 215, column: 22, scope: !8257, inlinedAt: !8261)
!8266 = !DILocalVariable(name: "key", arg: 1, scope: !8267, file: !3614, line: 84, type: !32)
!8267 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8268 = !DILocation(line: 84, column: 56, scope: !8267, inlinedAt: !8269)
!8269 = distinct !DILocation(line: 215, column: 2, scope: !8257, inlinedAt: !8261)
!8270 = !DILocation(line: 87, column: 6, scope: !8271, inlinedAt: !8269)
!8271 = distinct !DILexicalBlock(scope: !8267, file: !3614, line: 87, column: 6)
!8272 = !DILocation(line: 87, column: 10, scope: !8271, inlinedAt: !8269)
!8273 = !DILocation(line: 87, column: 6, scope: !8267, inlinedAt: !8269)
!8274 = !DILocation(line: 88, column: 3, scope: !8275, inlinedAt: !8269)
!8275 = distinct !DILexicalBlock(scope: !8271, file: !3614, line: 87, column: 17)
!8276 = !DILocation(line: 90, column: 2, scope: !8267, inlinedAt: !8269)
!8277 = !{i64 1445675}
!8278 = !DILocation(line: 110, column: 1, scope: !8267, inlinedAt: !8269)
!8279 = !DILocation(line: 170, column: 1, scope: !8213)
!8280 = distinct !DISubprogram(name: "sys_slist_append", scope: !301, file: !301, line: 311, type: !8281, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{null, !8283, !384}
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!8284 = !DILocalVariable(name: "list", arg: 1, scope: !8280, file: !301, line: 311, type: !8283)
!8285 = !DILocation(line: 311, column: 1, scope: !8280)
!8286 = !DILocalVariable(name: "node", arg: 2, scope: !8280, file: !301, line: 311, type: !384)
!8287 = !DILocation(line: 311, column: 1, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8280, file: !301, line: 311, column: 1)
!8289 = !DILocation(line: 311, column: 1, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8288, file: !301, line: 311, column: 1)
!8291 = !DILocation(line: 311, column: 1, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8288, file: !301, line: 311, column: 1)
!8293 = distinct !DISubprogram(name: "update_max_latency", scope: !376, file: !376, line: 55, type: !253, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8294 = !DILocalVariable(name: "new_max_latency_us", scope: !8293, file: !376, line: 57, type: !250)
!8295 = !DILocation(line: 57, column: 10, scope: !8293)
!8296 = !DILocalVariable(name: "req", scope: !8293, file: !376, line: 58, type: !353)
!8297 = !DILocation(line: 58, column: 36, scope: !8293)
!8298 = !DILocation(line: 60, column: 2, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8293, file: !376, line: 60, column: 2)
!8300 = !DILocation(line: 60, column: 2, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8299, file: !376, line: 60, column: 2)
!8302 = !DILocation(line: 61, column: 8, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !376, line: 61, column: 7)
!8304 = distinct !DILexicalBlock(scope: !8301, file: !376, line: 60, column: 57)
!8305 = !DILocation(line: 61, column: 27, scope: !8303)
!8306 = !DILocation(line: 61, column: 46, scope: !8303)
!8307 = !DILocation(line: 62, column: 17, scope: !8303)
!8308 = !DILocation(line: 62, column: 22, scope: !8303)
!8309 = !DILocation(line: 62, column: 30, scope: !8303)
!8310 = !DILocation(line: 62, column: 28, scope: !8303)
!8311 = !DILocation(line: 61, column: 7, scope: !8304)
!8312 = !DILocation(line: 63, column: 34, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8303, file: !376, line: 62, column: 51)
!8314 = !DILocation(line: 63, column: 39, scope: !8313)
!8315 = !DILocation(line: 63, column: 23, scope: !8313)
!8316 = !DILocation(line: 64, column: 3, scope: !8313)
!8317 = !DILocation(line: 65, column: 2, scope: !8304)
!8318 = distinct !{!8318, !8298, !8319}
!8319 = !DILocation(line: 65, column: 2, scope: !8299)
!8320 = !DILocation(line: 67, column: 6, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8293, file: !376, line: 67, column: 6)
!8322 = !DILocation(line: 67, column: 24, scope: !8321)
!8323 = !DILocation(line: 67, column: 21, scope: !8321)
!8324 = !DILocation(line: 67, column: 6, scope: !8293)
!8325 = !DILocalVariable(name: "sreq", scope: !8326, file: !376, line: 68, type: !364)
!8326 = distinct !DILexicalBlock(scope: !8321, file: !376, line: 67, column: 44)
!8327 = !DILocation(line: 68, column: 42, scope: !8326)
!8328 = !DILocalVariable(name: "new_max_latency_ticks", scope: !8326, file: !376, line: 69, type: !250)
!8329 = !DILocation(line: 69, column: 11, scope: !8326)
!8330 = !DILocation(line: 71, column: 3, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8326, file: !376, line: 71, column: 3)
!8332 = !DILocation(line: 71, column: 3, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8331, file: !376, line: 71, column: 3)
!8334 = !DILocation(line: 72, column: 4, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8333, file: !376, line: 71, column: 59)
!8336 = !DILocation(line: 72, column: 10, scope: !8335)
!8337 = !DILocation(line: 72, column: 13, scope: !8335)
!8338 = !DILocation(line: 73, column: 3, scope: !8335)
!8339 = distinct !{!8339, !8330, !8340}
!8340 = !DILocation(line: 73, column: 3, scope: !8331)
!8341 = !DILocation(line: 75, column: 7, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8326, file: !376, line: 75, column: 7)
!8343 = !DILocation(line: 75, column: 26, scope: !8342)
!8344 = !DILocation(line: 75, column: 7, scope: !8326)
!8345 = !DILocation(line: 76, column: 58, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !376, line: 75, column: 45)
!8347 = !DILocation(line: 76, column: 37, scope: !8346)
!8348 = !DILocation(line: 76, column: 26, scope: !8346)
!8349 = !DILocation(line: 77, column: 3, scope: !8346)
!8350 = !DILocation(line: 79, column: 20, scope: !8326)
!8351 = !DILocation(line: 79, column: 18, scope: !8326)
!8352 = !DILocation(line: 80, column: 23, scope: !8326)
!8353 = !DILocation(line: 80, column: 21, scope: !8326)
!8354 = !DILocation(line: 81, column: 2, scope: !8326)
!8355 = !DILocation(line: 82, column: 1, scope: !8293)
!8356 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !301, file: !301, line: 231, type: !8357, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{!384, !8283}
!8359 = !DILocalVariable(name: "list", arg: 1, scope: !8356, file: !301, line: 231, type: !8283)
!8360 = !DILocation(line: 231, column: 61, scope: !8356)
!8361 = !DILocation(line: 233, column: 9, scope: !8356)
!8362 = !DILocation(line: 233, column: 15, scope: !8356)
!8363 = !DILocation(line: 233, column: 2, scope: !8356)
!8364 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !301, file: !301, line: 285, type: !8365, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8365 = !DISubroutineType(types: !8366)
!8366 = !{!384, !384}
!8367 = !DILocalVariable(name: "node", arg: 1, scope: !8364, file: !301, line: 285, type: !384)
!8368 = !DILocation(line: 285, column: 1, scope: !8364)
!8369 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !301, file: !301, line: 274, type: !8365, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8370 = !DILocalVariable(name: "node", arg: 1, scope: !8369, file: !301, line: 274, type: !384)
!8371 = !DILocation(line: 274, column: 1, scope: !8369)
!8372 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !301, file: !301, line: 204, type: !8365, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8373 = !DILocalVariable(name: "node", arg: 1, scope: !8372, file: !301, line: 204, type: !384)
!8374 = !DILocation(line: 204, column: 59, scope: !8372)
!8375 = !DILocation(line: 206, column: 9, scope: !8372)
!8376 = !DILocation(line: 206, column: 15, scope: !8372)
!8377 = !DILocation(line: 206, column: 2, scope: !8372)
!8378 = distinct !DISubprogram(name: "z_snode_next_set", scope: !301, file: !301, line: 209, type: !8379, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8379 = !DISubroutineType(types: !8380)
!8380 = !{null, !384, !384}
!8381 = !DILocalVariable(name: "parent", arg: 1, scope: !8378, file: !301, line: 209, type: !384)
!8382 = !DILocation(line: 209, column: 50, scope: !8378)
!8383 = !DILocalVariable(name: "child", arg: 2, scope: !8378, file: !301, line: 209, type: !384)
!8384 = !DILocation(line: 209, column: 71, scope: !8378)
!8385 = !DILocation(line: 211, column: 17, scope: !8378)
!8386 = !DILocation(line: 211, column: 2, scope: !8378)
!8387 = !DILocation(line: 211, column: 10, scope: !8378)
!8388 = !DILocation(line: 211, column: 15, scope: !8378)
!8389 = !DILocation(line: 212, column: 1, scope: !8378)
!8390 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !301, file: !301, line: 243, type: !8357, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8391 = !DILocalVariable(name: "list", arg: 1, scope: !8390, file: !301, line: 243, type: !8283)
!8392 = !DILocation(line: 243, column: 61, scope: !8390)
!8393 = !DILocation(line: 245, column: 9, scope: !8390)
!8394 = !DILocation(line: 245, column: 15, scope: !8390)
!8395 = !DILocation(line: 245, column: 2, scope: !8390)
!8396 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !301, file: !301, line: 219, type: !8281, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8397 = !DILocalVariable(name: "list", arg: 1, scope: !8396, file: !301, line: 219, type: !8283)
!8398 = !DILocation(line: 219, column: 50, scope: !8396)
!8399 = !DILocalVariable(name: "node", arg: 2, scope: !8396, file: !301, line: 219, type: !384)
!8400 = !DILocation(line: 219, column: 69, scope: !8396)
!8401 = !DILocation(line: 221, column: 15, scope: !8396)
!8402 = !DILocation(line: 221, column: 2, scope: !8396)
!8403 = !DILocation(line: 221, column: 8, scope: !8396)
!8404 = !DILocation(line: 221, column: 13, scope: !8396)
!8405 = !DILocation(line: 222, column: 1, scope: !8396)
!8406 = distinct !DISubprogram(name: "z_slist_head_set", scope: !301, file: !301, line: 214, type: !8281, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8407 = !DILocalVariable(name: "list", arg: 1, scope: !8406, file: !301, line: 214, type: !8283)
!8408 = !DILocation(line: 214, column: 50, scope: !8406)
!8409 = !DILocalVariable(name: "node", arg: 2, scope: !8406, file: !301, line: 214, type: !384)
!8410 = !DILocation(line: 214, column: 69, scope: !8406)
!8411 = !DILocation(line: 216, column: 15, scope: !8406)
!8412 = !DILocation(line: 216, column: 2, scope: !8406)
!8413 = !DILocation(line: 216, column: 8, scope: !8406)
!8414 = !DILocation(line: 216, column: 13, scope: !8406)
!8415 = !DILocation(line: 217, column: 1, scope: !8406)
!8416 = distinct !DISubprogram(name: "pm_policy_latency_request_update", scope: !376, file: !376, line: 172, type: !8214, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8417 = !DILocalVariable(name: "req", arg: 1, scope: !8416, file: !376, line: 172, type: !353)
!8418 = !DILocation(line: 172, column: 73, scope: !8416)
!8419 = !DILocalVariable(name: "value", arg: 2, scope: !8416, file: !376, line: 173, type: !173)
!8420 = !DILocation(line: 173, column: 20, scope: !8416)
!8421 = !DILocalVariable(name: "key", scope: !8416, file: !376, line: 175, type: !8225)
!8422 = !DILocation(line: 175, column: 19, scope: !8416)
!8423 = !DILocation(line: 136, column: 70, scope: !8231, inlinedAt: !8424)
!8424 = distinct !DILocation(line: 175, column: 25, scope: !8416)
!8425 = !DILocation(line: 138, column: 2, scope: !8231, inlinedAt: !8424)
!8426 = !DILocation(line: 139, column: 19, scope: !8231, inlinedAt: !8424)
!8427 = !DILocation(line: 44, column: 15, scope: !8241, inlinedAt: !8428)
!8428 = distinct !DILocation(line: 145, column: 10, scope: !8231, inlinedAt: !8424)
!8429 = !DILocation(line: 47, column: 2, scope: !8241, inlinedAt: !8428)
!8430 = !DILocation(line: 76, column: 9, scope: !8241, inlinedAt: !8428)
!8431 = !DILocation(line: 145, column: 4, scope: !8231, inlinedAt: !8424)
!8432 = !DILocation(line: 145, column: 8, scope: !8231, inlinedAt: !8424)
!8433 = !DILocation(line: 165, column: 2, scope: !8231, inlinedAt: !8424)
!8434 = !DILocation(line: 175, column: 25, scope: !8416)
!8435 = !DILocation(line: 177, column: 15, scope: !8416)
!8436 = !DILocation(line: 177, column: 2, scope: !8416)
!8437 = !DILocation(line: 177, column: 7, scope: !8416)
!8438 = !DILocation(line: 177, column: 13, scope: !8416)
!8439 = !DILocation(line: 178, column: 2, scope: !8416)
!8440 = !DILocation(line: 180, column: 2, scope: !8416)
!8441 = !DILocation(line: 189, column: 60, scope: !8257, inlinedAt: !8442)
!8442 = distinct !DILocation(line: 180, column: 2, scope: !8416)
!8443 = !DILocation(line: 190, column: 23, scope: !8257, inlinedAt: !8442)
!8444 = !DILocation(line: 192, column: 2, scope: !8257, inlinedAt: !8442)
!8445 = !DILocation(line: 215, column: 22, scope: !8257, inlinedAt: !8442)
!8446 = !DILocation(line: 84, column: 56, scope: !8267, inlinedAt: !8447)
!8447 = distinct !DILocation(line: 215, column: 2, scope: !8257, inlinedAt: !8442)
!8448 = !DILocation(line: 87, column: 6, scope: !8271, inlinedAt: !8447)
!8449 = !DILocation(line: 87, column: 10, scope: !8271, inlinedAt: !8447)
!8450 = !DILocation(line: 87, column: 6, scope: !8267, inlinedAt: !8447)
!8451 = !DILocation(line: 88, column: 3, scope: !8275, inlinedAt: !8447)
!8452 = !DILocation(line: 90, column: 2, scope: !8267, inlinedAt: !8447)
!8453 = !DILocation(line: 110, column: 1, scope: !8267, inlinedAt: !8447)
!8454 = !DILocation(line: 181, column: 1, scope: !8416)
!8455 = distinct !DISubprogram(name: "pm_policy_latency_request_remove", scope: !376, file: !376, line: 183, type: !8456, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8456 = !DISubroutineType(types: !8457)
!8457 = !{null, !353}
!8458 = !DILocalVariable(name: "req", arg: 1, scope: !8455, file: !376, line: 183, type: !353)
!8459 = !DILocation(line: 183, column: 73, scope: !8455)
!8460 = !DILocalVariable(name: "key", scope: !8455, file: !376, line: 185, type: !8225)
!8461 = !DILocation(line: 185, column: 19, scope: !8455)
!8462 = !DILocation(line: 136, column: 70, scope: !8231, inlinedAt: !8463)
!8463 = distinct !DILocation(line: 185, column: 25, scope: !8455)
!8464 = !DILocation(line: 138, column: 2, scope: !8231, inlinedAt: !8463)
!8465 = !DILocation(line: 139, column: 19, scope: !8231, inlinedAt: !8463)
!8466 = !DILocation(line: 44, column: 15, scope: !8241, inlinedAt: !8467)
!8467 = distinct !DILocation(line: 145, column: 10, scope: !8231, inlinedAt: !8463)
!8468 = !DILocation(line: 47, column: 2, scope: !8241, inlinedAt: !8467)
!8469 = !DILocation(line: 76, column: 9, scope: !8241, inlinedAt: !8467)
!8470 = !DILocation(line: 145, column: 4, scope: !8231, inlinedAt: !8463)
!8471 = !DILocation(line: 145, column: 8, scope: !8231, inlinedAt: !8463)
!8472 = !DILocation(line: 165, column: 2, scope: !8231, inlinedAt: !8463)
!8473 = !DILocation(line: 185, column: 25, scope: !8455)
!8474 = !DILocation(line: 187, column: 50, scope: !8455)
!8475 = !DILocation(line: 187, column: 55, scope: !8455)
!8476 = !DILocation(line: 187, column: 8, scope: !8455)
!8477 = !DILocation(line: 188, column: 2, scope: !8455)
!8478 = !DILocation(line: 190, column: 2, scope: !8455)
!8479 = !DILocation(line: 189, column: 60, scope: !8257, inlinedAt: !8480)
!8480 = distinct !DILocation(line: 190, column: 2, scope: !8455)
!8481 = !DILocation(line: 190, column: 23, scope: !8257, inlinedAt: !8480)
!8482 = !DILocation(line: 192, column: 2, scope: !8257, inlinedAt: !8480)
!8483 = !DILocation(line: 215, column: 22, scope: !8257, inlinedAt: !8480)
!8484 = !DILocation(line: 84, column: 56, scope: !8267, inlinedAt: !8485)
!8485 = distinct !DILocation(line: 215, column: 2, scope: !8257, inlinedAt: !8480)
!8486 = !DILocation(line: 87, column: 6, scope: !8271, inlinedAt: !8485)
!8487 = !DILocation(line: 87, column: 10, scope: !8271, inlinedAt: !8485)
!8488 = !DILocation(line: 87, column: 6, scope: !8267, inlinedAt: !8485)
!8489 = !DILocation(line: 88, column: 3, scope: !8275, inlinedAt: !8485)
!8490 = !DILocation(line: 90, column: 2, scope: !8267, inlinedAt: !8485)
!8491 = !DILocation(line: 110, column: 1, scope: !8267, inlinedAt: !8485)
!8492 = !DILocation(line: 191, column: 1, scope: !8455)
!8493 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !301, file: !301, line: 417, type: !8494, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{!717, !8283, !384}
!8496 = !DILocalVariable(name: "list", arg: 1, scope: !8493, file: !301, line: 417, type: !8283)
!8497 = !DILocation(line: 417, column: 1, scope: !8493)
!8498 = !DILocalVariable(name: "node", arg: 2, scope: !8493, file: !301, line: 417, type: !384)
!8499 = !DILocalVariable(name: "prev", scope: !8493, file: !301, line: 417, type: !384)
!8500 = !DILocalVariable(name: "test", scope: !8493, file: !301, line: 417, type: !384)
!8501 = !DILocation(line: 417, column: 1, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8493, file: !301, line: 417, column: 1)
!8503 = !DILocation(line: 417, column: 1, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8502, file: !301, line: 417, column: 1)
!8505 = !DILocation(line: 417, column: 1, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !301, line: 417, column: 1)
!8507 = distinct !DILexicalBlock(scope: !8504, file: !301, line: 417, column: 1)
!8508 = !DILocation(line: 417, column: 1, scope: !8507)
!8509 = !DILocation(line: 417, column: 1, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8506, file: !301, line: 417, column: 1)
!8511 = distinct !{!8511, !8501, !8501}
!8512 = distinct !DISubprogram(name: "sys_slist_remove", scope: !301, file: !301, line: 401, type: !8513, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8513 = !DISubroutineType(types: !8514)
!8514 = !{null, !8283, !384, !384}
!8515 = !DILocalVariable(name: "list", arg: 1, scope: !8512, file: !301, line: 401, type: !8283)
!8516 = !DILocation(line: 401, column: 1, scope: !8512)
!8517 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8512, file: !301, line: 401, type: !384)
!8518 = !DILocalVariable(name: "node", arg: 3, scope: !8512, file: !301, line: 401, type: !384)
!8519 = !DILocation(line: 401, column: 1, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8512, file: !301, line: 401, column: 1)
!8521 = !DILocation(line: 401, column: 1, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8520, file: !301, line: 401, column: 1)
!8523 = !DILocation(line: 401, column: 1, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8522, file: !301, line: 401, column: 1)
!8525 = !DILocation(line: 401, column: 1, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8524, file: !301, line: 401, column: 1)
!8527 = !DILocation(line: 401, column: 1, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8520, file: !301, line: 401, column: 1)
!8529 = !DILocation(line: 401, column: 1, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8528, file: !301, line: 401, column: 1)
!8531 = !DILocation(line: 401, column: 1, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8530, file: !301, line: 401, column: 1)
!8533 = distinct !DISubprogram(name: "pm_policy_latency_changed_subscribe", scope: !376, file: !376, line: 193, type: !8534, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8534 = !DISubroutineType(types: !8535)
!8535 = !{null, !364, !369}
!8536 = !DILocalVariable(name: "req", arg: 1, scope: !8533, file: !376, line: 193, type: !364)
!8537 = !DILocation(line: 193, column: 81, scope: !8533)
!8538 = !DILocalVariable(name: "cb", arg: 2, scope: !8533, file: !376, line: 194, type: !369)
!8539 = !DILocation(line: 194, column: 38, scope: !8533)
!8540 = !DILocalVariable(name: "key", scope: !8533, file: !376, line: 196, type: !8225)
!8541 = !DILocation(line: 196, column: 19, scope: !8533)
!8542 = !DILocation(line: 136, column: 70, scope: !8231, inlinedAt: !8543)
!8543 = distinct !DILocation(line: 196, column: 25, scope: !8533)
!8544 = !DILocation(line: 138, column: 2, scope: !8231, inlinedAt: !8543)
!8545 = !DILocation(line: 139, column: 19, scope: !8231, inlinedAt: !8543)
!8546 = !DILocation(line: 44, column: 15, scope: !8241, inlinedAt: !8547)
!8547 = distinct !DILocation(line: 145, column: 10, scope: !8231, inlinedAt: !8543)
!8548 = !DILocation(line: 47, column: 2, scope: !8241, inlinedAt: !8547)
!8549 = !DILocation(line: 76, column: 9, scope: !8241, inlinedAt: !8547)
!8550 = !DILocation(line: 145, column: 4, scope: !8231, inlinedAt: !8543)
!8551 = !DILocation(line: 145, column: 8, scope: !8231, inlinedAt: !8543)
!8552 = !DILocation(line: 165, column: 2, scope: !8231, inlinedAt: !8543)
!8553 = !DILocation(line: 196, column: 25, scope: !8533)
!8554 = !DILocation(line: 198, column: 12, scope: !8533)
!8555 = !DILocation(line: 198, column: 2, scope: !8533)
!8556 = !DILocation(line: 198, column: 7, scope: !8533)
!8557 = !DILocation(line: 198, column: 10, scope: !8533)
!8558 = !DILocation(line: 199, column: 35, scope: !8533)
!8559 = !DILocation(line: 199, column: 40, scope: !8533)
!8560 = !DILocation(line: 199, column: 2, scope: !8533)
!8561 = !DILocation(line: 201, column: 2, scope: !8533)
!8562 = !DILocation(line: 189, column: 60, scope: !8257, inlinedAt: !8563)
!8563 = distinct !DILocation(line: 201, column: 2, scope: !8533)
!8564 = !DILocation(line: 190, column: 23, scope: !8257, inlinedAt: !8563)
!8565 = !DILocation(line: 192, column: 2, scope: !8257, inlinedAt: !8563)
!8566 = !DILocation(line: 215, column: 22, scope: !8257, inlinedAt: !8563)
!8567 = !DILocation(line: 84, column: 56, scope: !8267, inlinedAt: !8568)
!8568 = distinct !DILocation(line: 215, column: 2, scope: !8257, inlinedAt: !8563)
!8569 = !DILocation(line: 87, column: 6, scope: !8271, inlinedAt: !8568)
!8570 = !DILocation(line: 87, column: 10, scope: !8271, inlinedAt: !8568)
!8571 = !DILocation(line: 87, column: 6, scope: !8267, inlinedAt: !8568)
!8572 = !DILocation(line: 88, column: 3, scope: !8275, inlinedAt: !8568)
!8573 = !DILocation(line: 90, column: 2, scope: !8267, inlinedAt: !8568)
!8574 = !DILocation(line: 110, column: 1, scope: !8267, inlinedAt: !8568)
!8575 = !DILocation(line: 202, column: 1, scope: !8533)
!8576 = distinct !DISubprogram(name: "pm_policy_latency_changed_unsubscribe", scope: !376, file: !376, line: 204, type: !8577, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !223)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{null, !364}
!8579 = !DILocalVariable(name: "req", arg: 1, scope: !8576, file: !376, line: 204, type: !364)
!8580 = !DILocation(line: 204, column: 83, scope: !8576)
!8581 = !DILocalVariable(name: "key", scope: !8576, file: !376, line: 206, type: !8225)
!8582 = !DILocation(line: 206, column: 19, scope: !8576)
!8583 = !DILocation(line: 136, column: 70, scope: !8231, inlinedAt: !8584)
!8584 = distinct !DILocation(line: 206, column: 25, scope: !8576)
!8585 = !DILocation(line: 138, column: 2, scope: !8231, inlinedAt: !8584)
!8586 = !DILocation(line: 139, column: 19, scope: !8231, inlinedAt: !8584)
!8587 = !DILocation(line: 44, column: 15, scope: !8241, inlinedAt: !8588)
!8588 = distinct !DILocation(line: 145, column: 10, scope: !8231, inlinedAt: !8584)
!8589 = !DILocation(line: 47, column: 2, scope: !8241, inlinedAt: !8588)
!8590 = !DILocation(line: 76, column: 9, scope: !8241, inlinedAt: !8588)
!8591 = !DILocation(line: 145, column: 4, scope: !8231, inlinedAt: !8584)
!8592 = !DILocation(line: 145, column: 8, scope: !8231, inlinedAt: !8584)
!8593 = !DILocation(line: 165, column: 2, scope: !8231, inlinedAt: !8584)
!8594 = !DILocation(line: 206, column: 25, scope: !8576)
!8595 = !DILocation(line: 208, column: 50, scope: !8576)
!8596 = !DILocation(line: 208, column: 55, scope: !8576)
!8597 = !DILocation(line: 208, column: 8, scope: !8576)
!8598 = !DILocation(line: 210, column: 2, scope: !8576)
!8599 = !DILocation(line: 189, column: 60, scope: !8257, inlinedAt: !8600)
!8600 = distinct !DILocation(line: 210, column: 2, scope: !8576)
!8601 = !DILocation(line: 190, column: 23, scope: !8257, inlinedAt: !8600)
!8602 = !DILocation(line: 192, column: 2, scope: !8257, inlinedAt: !8600)
!8603 = !DILocation(line: 215, column: 22, scope: !8257, inlinedAt: !8600)
!8604 = !DILocation(line: 84, column: 56, scope: !8267, inlinedAt: !8605)
!8605 = distinct !DILocation(line: 215, column: 2, scope: !8257, inlinedAt: !8600)
!8606 = !DILocation(line: 87, column: 6, scope: !8271, inlinedAt: !8605)
!8607 = !DILocation(line: 87, column: 10, scope: !8271, inlinedAt: !8605)
!8608 = !DILocation(line: 87, column: 6, scope: !8267, inlinedAt: !8605)
!8609 = !DILocation(line: 88, column: 3, scope: !8275, inlinedAt: !8605)
!8610 = !DILocation(line: 90, column: 2, scope: !8267, inlinedAt: !8605)
!8611 = !DILocation(line: 110, column: 1, scope: !8267, inlinedAt: !8605)
!8612 = !DILocation(line: 211, column: 1, scope: !8576)
!8613 = distinct !DISubprogram(name: "pm_state_cpu_get_all", scope: !409, file: !409, line: 59, type: !8614, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !402, retainedNodes: !223)
!8614 = !DISubroutineType(types: !8615)
!8615 = !{!156, !156, !8616}
!8616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!8617 = !DILocalVariable(name: "cpu", arg: 1, scope: !8613, file: !409, line: 59, type: !156)
!8618 = !DILocation(line: 59, column: 38, scope: !8613)
!8619 = !DILocalVariable(name: "states", arg: 2, scope: !8613, file: !409, line: 59, type: !8616)
!8620 = !DILocation(line: 59, column: 72, scope: !8613)
!8621 = !DILocation(line: 61, column: 6, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8613, file: !409, line: 61, column: 6)
!8623 = !DILocation(line: 61, column: 10, scope: !8622)
!8624 = !DILocation(line: 61, column: 6, scope: !8613)
!8625 = !DILocation(line: 62, column: 3, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8622, file: !409, line: 61, column: 38)
!8627 = !DILocation(line: 65, column: 24, scope: !8613)
!8628 = !DILocation(line: 65, column: 12, scope: !8613)
!8629 = !DILocation(line: 65, column: 3, scope: !8613)
!8630 = !DILocation(line: 65, column: 10, scope: !8613)
!8631 = !DILocation(line: 67, column: 24, scope: !8613)
!8632 = !DILocation(line: 67, column: 9, scope: !8613)
!8633 = !DILocation(line: 67, column: 2, scope: !8613)
!8634 = !DILocation(line: 68, column: 1, scope: !8613)
!8635 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8636, file: !8636, line: 57, type: !8637, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2500, retainedNodes: !223)
!8636 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8637 = !DISubroutineType(types: !8638)
!8638 = !{null, !32, !8639}
!8639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8640, size: 32)
!8640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8641)
!8641 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2558, line: 141, baseType: !8642)
!8642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2558, line: 97, size: 256, elements: !8643)
!8643 = !{!8644}
!8644 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8642, file: !2558, line: 107, baseType: !8645, size: 256)
!8645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2558, line: 98, size: 256, elements: !8646)
!8646 = !{!8647, !8652, !8657, !8662, !8667, !8672, !8677, !8682}
!8647 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !2558, line: 99, baseType: !8648, size: 32)
!8648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !2558, line: 99, size: 32, elements: !8649)
!8649 = !{!8650, !8651}
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8648, file: !2558, line: 99, baseType: !173, size: 32)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8648, file: !2558, line: 99, baseType: !173, size: 32)
!8652 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !2558, line: 100, baseType: !8653, size: 32, offset: 32)
!8653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !2558, line: 100, size: 32, elements: !8654)
!8654 = !{!8655, !8656}
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8653, file: !2558, line: 100, baseType: !173, size: 32)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8653, file: !2558, line: 100, baseType: !173, size: 32)
!8657 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !2558, line: 101, baseType: !8658, size: 32, offset: 64)
!8658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !2558, line: 101, size: 32, elements: !8659)
!8659 = !{!8660, !8661}
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8658, file: !2558, line: 101, baseType: !173, size: 32)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8658, file: !2558, line: 101, baseType: !173, size: 32)
!8662 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !2558, line: 102, baseType: !8663, size: 32, offset: 96)
!8663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !2558, line: 102, size: 32, elements: !8664)
!8664 = !{!8665, !8666}
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8663, file: !2558, line: 102, baseType: !173, size: 32)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8663, file: !2558, line: 102, baseType: !173, size: 32)
!8667 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !2558, line: 103, baseType: !8668, size: 32, offset: 128)
!8668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !2558, line: 103, size: 32, elements: !8669)
!8669 = !{!8670, !8671}
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8668, file: !2558, line: 103, baseType: !173, size: 32)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8668, file: !2558, line: 103, baseType: !173, size: 32)
!8672 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !2558, line: 104, baseType: !8673, size: 32, offset: 160)
!8673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !2558, line: 104, size: 32, elements: !8674)
!8674 = !{!8675, !8676}
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8673, file: !2558, line: 104, baseType: !173, size: 32)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8673, file: !2558, line: 104, baseType: !173, size: 32)
!8677 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !2558, line: 105, baseType: !8678, size: 32, offset: 192)
!8678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !2558, line: 105, size: 32, elements: !8679)
!8679 = !{!8680, !8681}
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8678, file: !2558, line: 105, baseType: !173, size: 32)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8678, file: !2558, line: 105, baseType: !173, size: 32)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8645, file: !2558, line: 106, baseType: !173, size: 32, offset: 224)
!8683 = !DILocalVariable(name: "reason", arg: 1, scope: !8635, file: !8636, line: 57, type: !32)
!8684 = !DILocation(line: 57, column: 37, scope: !8635)
!8685 = !DILocalVariable(name: "esf", arg: 2, scope: !8635, file: !8636, line: 57, type: !8639)
!8686 = !DILocation(line: 57, column: 65, scope: !8635)
!8687 = !DILocation(line: 60, column: 6, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8635, file: !8636, line: 60, column: 6)
!8689 = !DILocation(line: 60, column: 10, scope: !8688)
!8690 = !DILocation(line: 60, column: 6, scope: !8635)
!8691 = !DILocation(line: 61, column: 12, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8688, file: !8636, line: 60, column: 19)
!8693 = !DILocation(line: 61, column: 3, scope: !8692)
!8694 = !DILocation(line: 62, column: 2, scope: !8692)
!8695 = !DILocation(line: 63, column: 16, scope: !8635)
!8696 = !DILocation(line: 63, column: 24, scope: !8635)
!8697 = !DILocation(line: 63, column: 2, scope: !8635)
!8698 = !DILocation(line: 64, column: 1, scope: !8635)
!8699 = distinct !DISubprogram(name: "esf_dump", scope: !8636, file: !8636, line: 20, type: !8700, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2500, retainedNodes: !223)
!8700 = !DISubroutineType(types: !8701)
!8701 = !{null, !8639}
!8702 = !DILocalVariable(name: "esf", arg: 1, scope: !8699, file: !8636, line: 20, type: !8639)
!8703 = !DILocation(line: 20, column: 42, scope: !8699)
!8704 = !DILocation(line: 22, column: 2, scope: !8699)
!8705 = !DILocation(line: 22, column: 2, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !8636, line: 22, column: 2)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !8636, line: 22, column: 2)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !8636, line: 22, column: 2)
!8709 = !DILocation(line: 24, column: 2, scope: !8699)
!8710 = !DILocation(line: 24, column: 2, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !8636, line: 24, column: 2)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !8636, line: 24, column: 2)
!8713 = distinct !DILexicalBlock(scope: !8699, file: !8636, line: 24, column: 2)
!8714 = !DILocation(line: 26, column: 2, scope: !8699)
!8715 = !DILocation(line: 26, column: 2, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !8636, line: 26, column: 2)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !8636, line: 26, column: 2)
!8718 = distinct !DILexicalBlock(scope: !8699, file: !8636, line: 26, column: 2)
!8719 = !DILocation(line: 53, column: 2, scope: !8699)
!8720 = !DILocation(line: 53, column: 2, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !8636, line: 53, column: 2)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !8636, line: 53, column: 2)
!8723 = distinct !DILexicalBlock(scope: !8699, file: !8636, line: 53, column: 2)
!8724 = !DILocation(line: 55, column: 1, scope: !8699)
!8725 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8636, file: !8636, line: 82, type: !8726, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2500, retainedNodes: !223)
!8726 = !DISubroutineType(types: !8727)
!8727 = !{null, !8639, !8728}
!8728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8729, size: 32)
!8729 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !8730)
!8730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !8731)
!8731 = !{!8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740}
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8730, file: !190, line: 26, baseType: !173, size: 32)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8730, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8730, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8730, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8730, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8730, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8730, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8730, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8730, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!8741 = !DILocalVariable(name: "esf", arg: 1, scope: !8725, file: !8636, line: 82, type: !8639)
!8742 = !DILocation(line: 82, column: 43, scope: !8725)
!8743 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8725, file: !8636, line: 82, type: !8728)
!8744 = !DILocation(line: 82, column: 65, scope: !8725)
!8745 = !DILocation(line: 85, column: 2, scope: !8725)
!8746 = !DILocalVariable(name: "reason", scope: !8725, file: !8636, line: 88, type: !32)
!8747 = !DILocation(line: 88, column: 15, scope: !8725)
!8748 = !DILocation(line: 88, column: 24, scope: !8725)
!8749 = !DILocation(line: 88, column: 29, scope: !8725)
!8750 = !DILocation(line: 88, column: 35, scope: !8725)
!8751 = !DILocation(line: 108, column: 20, scope: !8725)
!8752 = !DILocation(line: 108, column: 28, scope: !8725)
!8753 = !DILocation(line: 108, column: 2, scope: !8725)
!8754 = !DILocation(line: 131, column: 1, scope: !8725)
!8755 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8636, file: !8636, line: 133, type: !8756, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2500, retainedNodes: !223)
!8756 = !DISubroutineType(types: !8757)
!8757 = !{null, !102}
!8758 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8755, file: !8636, line: 133, type: !102)
!8759 = !DILocation(line: 133, column: 44, scope: !8755)
!8760 = !DILocalVariable(name: "ssf_contents", scope: !8755, file: !8636, line: 135, type: !922)
!8761 = !DILocation(line: 135, column: 12, scope: !8755)
!8762 = !DILocation(line: 135, column: 27, scope: !8755)
!8763 = !DILocalVariable(name: "oops_esf", scope: !8755, file: !8636, line: 136, type: !8641)
!8764 = !DILocation(line: 136, column: 15, scope: !8755)
!8765 = !DILocation(line: 139, column: 22, scope: !8755)
!8766 = !DILocation(line: 139, column: 11, scope: !8755)
!8767 = !DILocation(line: 139, column: 17, scope: !8755)
!8768 = !DILocation(line: 139, column: 20, scope: !8755)
!8769 = !DILocation(line: 141, column: 2, scope: !8755)
!8770 = !DILocation(line: 142, column: 2, scope: !8755)
!8771 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8772, file: !8772, line: 40, type: !3712, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8772 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8773 = !DILocalVariable(name: "irq", arg: 1, scope: !8771, file: !8772, line: 40, type: !32)
!8774 = !DILocation(line: 40, column: 35, scope: !8771)
!8775 = !DILocation(line: 42, column: 28, scope: !8771)
!8776 = !DILocation(line: 42, column: 2, scope: !8771)
!8777 = !DILocation(line: 43, column: 1, scope: !8771)
!8778 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !508, file: !508, line: 623, type: !8779, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{null, !1685}
!8781 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8778, file: !508, line: 623, type: !1685)
!8782 = !DILocation(line: 623, column: 49, scope: !8778)
!8783 = !DILocation(line: 625, column: 17, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8778, file: !508, line: 625, column: 7)
!8785 = !DILocation(line: 625, column: 23, scope: !8784)
!8786 = !DILocation(line: 625, column: 7, scope: !8778)
!8787 = !DILocation(line: 627, column: 5, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8784, file: !508, line: 626, column: 3)
!8789 = !{i64 2149942304}
!8790 = !DILocation(line: 628, column: 52, scope: !8788)
!8791 = !DILocation(line: 628, column: 58, scope: !8788)
!8792 = !DILocation(line: 628, column: 37, scope: !8788)
!8793 = !DILocation(line: 628, column: 20, scope: !8788)
!8794 = !DILocation(line: 629, column: 5, scope: !8788)
!8795 = !{i64 2149942418}
!8796 = !DILocation(line: 630, column: 3, scope: !8788)
!8797 = !DILocation(line: 631, column: 1, scope: !8778)
!8798 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8772, file: !8772, line: 45, type: !3712, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8799 = !DILocalVariable(name: "irq", arg: 1, scope: !8798, file: !8772, line: 45, type: !32)
!8800 = !DILocation(line: 45, column: 36, scope: !8798)
!8801 = !DILocation(line: 47, column: 29, scope: !8798)
!8802 = !DILocation(line: 47, column: 2, scope: !8798)
!8803 = !DILocation(line: 48, column: 1, scope: !8798)
!8804 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !508, file: !508, line: 661, type: !8779, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8805 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8804, file: !508, line: 661, type: !1685)
!8806 = !DILocation(line: 661, column: 50, scope: !8804)
!8807 = !DILocation(line: 663, column: 17, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8804, file: !508, line: 663, column: 7)
!8809 = !DILocation(line: 663, column: 23, scope: !8808)
!8810 = !DILocation(line: 663, column: 7, scope: !8804)
!8811 = !DILocation(line: 665, column: 52, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8808, file: !508, line: 664, column: 3)
!8813 = !DILocation(line: 665, column: 58, scope: !8812)
!8814 = !DILocation(line: 665, column: 37, scope: !8812)
!8815 = !DILocation(line: 665, column: 20, scope: !8812)
!8816 = !DILocation(line: 271, column: 3, scope: !8817, inlinedAt: !8819)
!8817 = distinct !DISubprogram(name: "__DSB", scope: !8818, file: !8818, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8818 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8819 = distinct !DILocation(line: 666, column: 5, scope: !8812)
!8820 = !{i64 2402256}
!8821 = !DILocation(line: 260, column: 3, scope: !8822, inlinedAt: !8823)
!8822 = distinct !DISubprogram(name: "__ISB", scope: !8818, file: !8818, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8823 = distinct !DILocation(line: 667, column: 5, scope: !8812)
!8824 = !{i64 2401973}
!8825 = !DILocation(line: 668, column: 3, scope: !8812)
!8826 = !DILocation(line: 669, column: 1, scope: !8804)
!8827 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8772, file: !8772, line: 50, type: !8828, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!103, !32}
!8830 = !DILocalVariable(name: "irq", arg: 1, scope: !8827, file: !8772, line: 50, type: !32)
!8831 = !DILocation(line: 50, column: 38, scope: !8827)
!8832 = !DILocation(line: 52, column: 20, scope: !8827)
!8833 = !DILocation(line: 52, column: 9, scope: !8827)
!8834 = !DILocation(line: 52, column: 41, scope: !8827)
!8835 = !DILocation(line: 52, column: 39, scope: !8827)
!8836 = !DILocation(line: 52, column: 2, scope: !8827)
!8837 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8772, file: !8772, line: 64, type: !8838, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8838 = !DISubroutineType(types: !8839)
!8839 = !{null, !32, !32, !173}
!8840 = !DILocalVariable(name: "irq", arg: 1, scope: !8837, file: !8772, line: 64, type: !32)
!8841 = !DILocation(line: 64, column: 42, scope: !8837)
!8842 = !DILocalVariable(name: "prio", arg: 2, scope: !8837, file: !8772, line: 64, type: !32)
!8843 = !DILocation(line: 64, column: 60, scope: !8837)
!8844 = !DILocalVariable(name: "flags", arg: 3, scope: !8837, file: !8772, line: 64, type: !173)
!8845 = !DILocation(line: 64, column: 75, scope: !8837)
!8846 = !DILocation(line: 83, column: 8, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !8772, line: 82, column: 9)
!8848 = distinct !DILexicalBlock(scope: !8837, file: !8772, line: 76, column: 6)
!8849 = !DILocation(line: 95, column: 30, scope: !8837)
!8850 = !DILocation(line: 95, column: 35, scope: !8837)
!8851 = !DILocation(line: 95, column: 2, scope: !8837)
!8852 = !DILocation(line: 96, column: 1, scope: !8837)
!8853 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 732, type: !8854, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{null, !1685, !173}
!8856 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8853, file: !508, line: 732, type: !1685)
!8857 = !DILocation(line: 732, column: 51, scope: !8853)
!8858 = !DILocalVariable(name: "priority", arg: 2, scope: !8853, file: !508, line: 732, type: !173)
!8859 = !DILocation(line: 732, column: 66, scope: !8853)
!8860 = !DILocation(line: 734, column: 17, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8853, file: !508, line: 734, column: 7)
!8862 = !DILocation(line: 734, column: 23, scope: !8861)
!8863 = !DILocation(line: 734, column: 7, scope: !8853)
!8864 = !DILocation(line: 736, column: 53, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !508, line: 735, column: 3)
!8866 = !DILocation(line: 736, column: 44, scope: !8865)
!8867 = !DILocation(line: 736, column: 83, scope: !8865)
!8868 = !DILocation(line: 736, column: 80, scope: !8865)
!8869 = !DILocation(line: 736, column: 71, scope: !8865)
!8870 = !DILocation(line: 736, column: 69, scope: !8865)
!8871 = !DILocation(line: 737, column: 11, scope: !8865)
!8872 = !DILocation(line: 737, column: 20, scope: !8865)
!8873 = !DILocation(line: 737, column: 48, scope: !8865)
!8874 = !DILocation(line: 737, column: 71, scope: !8865)
!8875 = !DILocation(line: 737, column: 68, scope: !8865)
!8876 = !DILocation(line: 736, column: 102, scope: !8865)
!8877 = !DILocation(line: 736, column: 14, scope: !8865)
!8878 = !DILocation(line: 736, column: 5, scope: !8865)
!8879 = !DILocation(line: 736, column: 30, scope: !8865)
!8880 = !DILocation(line: 738, column: 3, scope: !8865)
!8881 = !DILocation(line: 741, column: 53, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8861, file: !508, line: 740, column: 3)
!8883 = !DILocation(line: 741, column: 44, scope: !8882)
!8884 = !DILocation(line: 741, column: 83, scope: !8882)
!8885 = !DILocation(line: 741, column: 80, scope: !8882)
!8886 = !DILocation(line: 741, column: 71, scope: !8882)
!8887 = !DILocation(line: 741, column: 69, scope: !8882)
!8888 = !DILocation(line: 742, column: 11, scope: !8882)
!8889 = !DILocation(line: 742, column: 20, scope: !8882)
!8890 = !DILocation(line: 742, column: 48, scope: !8882)
!8891 = !DILocation(line: 742, column: 71, scope: !8882)
!8892 = !DILocation(line: 742, column: 68, scope: !8882)
!8893 = !DILocation(line: 741, column: 102, scope: !8882)
!8894 = !DILocation(line: 741, column: 14, scope: !8882)
!8895 = !DILocation(line: 741, column: 5, scope: !8882)
!8896 = !DILocation(line: 741, column: 30, scope: !8882)
!8897 = !DILocation(line: 744, column: 1, scope: !8853)
!8898 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8772, file: !8772, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8899 = !DILocalVariable(name: "unused", arg: 1, scope: !8898, file: !8772, line: 155, type: !13)
!8900 = !DILocation(line: 155, column: 33, scope: !8898)
!8901 = !DILocation(line: 157, column: 2, scope: !8898)
!8902 = !DILocation(line: 159, column: 2, scope: !8898)
!8903 = !DILocation(line: 160, column: 1, scope: !8898)
!8904 = distinct !DISubprogram(name: "_arch_isr_direct_pm", scope: !8772, file: !8772, line: 163, type: !253, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8905 = !DILocalVariable(name: "key", scope: !8904, file: !8772, line: 169, type: !32)
!8906 = !DILocation(line: 169, column: 15, scope: !8904)
!8907 = !DILocalVariable(name: "key", scope: !8908, file: !3614, line: 44, type: !32)
!8908 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8909 = !DILocation(line: 44, column: 15, scope: !8908, inlinedAt: !8910)
!8910 = distinct !DILocation(line: 172, column: 8, scope: !8904)
!8911 = !DILocation(line: 47, column: 2, scope: !8908, inlinedAt: !8910)
!8912 = !{i64 1448283}
!8913 = !DILocation(line: 76, column: 9, scope: !8908, inlinedAt: !8910)
!8914 = !DILocation(line: 172, column: 6, scope: !8904)
!8915 = !DILocation(line: 183, column: 14, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8904, file: !8772, line: 183, column: 6)
!8917 = !DILocation(line: 183, column: 6, scope: !8916)
!8918 = !DILocation(line: 183, column: 6, scope: !8904)
!8919 = !DILocation(line: 184, column: 16, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8916, file: !8772, line: 183, column: 20)
!8921 = !DILocation(line: 185, column: 3, scope: !8920)
!8922 = !DILocation(line: 186, column: 2, scope: !8920)
!8923 = !DILocation(line: 192, column: 2, scope: !8904)
!8924 = !DILocalVariable(name: "key", arg: 1, scope: !8925, file: !3614, line: 84, type: !32)
!8925 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2502, retainedNodes: !223)
!8926 = !DILocation(line: 84, column: 56, scope: !8925, inlinedAt: !8927)
!8927 = distinct !DILocation(line: 192, column: 2, scope: !8904)
!8928 = !DILocation(line: 87, column: 6, scope: !8929, inlinedAt: !8927)
!8929 = distinct !DILexicalBlock(scope: !8925, file: !3614, line: 87, column: 6)
!8930 = !DILocation(line: 87, column: 10, scope: !8929, inlinedAt: !8927)
!8931 = !DILocation(line: 87, column: 6, scope: !8925, inlinedAt: !8927)
!8932 = !DILocation(line: 88, column: 3, scope: !8933, inlinedAt: !8927)
!8933 = distinct !DILexicalBlock(scope: !8929, file: !3614, line: 87, column: 17)
!8934 = !DILocation(line: 90, column: 2, scope: !8925, inlinedAt: !8927)
!8935 = !{i64 1449147}
!8936 = !DILocation(line: 110, column: 1, scope: !8925, inlinedAt: !8927)
!8937 = !DILocation(line: 199, column: 1, scope: !8904)
!8938 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8939, file: !8939, line: 87, type: !253, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2533, retainedNodes: !223)
!8939 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8940 = !DILocation(line: 89, column: 2, scope: !8938)
!8941 = !DILocation(line: 90, column: 2, scope: !8938)
!8942 = !DILocation(line: 91, column: 1, scope: !8938)
!8943 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8944, file: !8944, line: 74, type: !253, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2535, retainedNodes: !223)
!8944 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8945 = !DILocation(line: 86, column: 1, scope: !8943)
!8946 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8944, file: !8944, line: 256, type: !253, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2535, retainedNodes: !223)
!8947 = !DILocation(line: 258, column: 2, scope: !8946)
!8948 = !DILocation(line: 262, column: 2, scope: !8946)
!8949 = !DILocation(line: 263, column: 2, scope: !8946)
!8950 = !DILocation(line: 267, column: 2, scope: !8946)
!8951 = !DILocation(line: 268, column: 2, scope: !8946)
!8952 = distinct !DISubprogram(name: "arch_swap", scope: !8953, file: !8953, line: 33, type: !8828, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2537, retainedNodes: !223)
!8953 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8954 = !DILocalVariable(name: "key", arg: 1, scope: !8952, file: !8953, line: 33, type: !32)
!8955 = !DILocation(line: 33, column: 28, scope: !8952)
!8956 = !DILocation(line: 36, column: 27, scope: !8952)
!8957 = !DILocation(line: 36, column: 2, scope: !8952)
!8958 = !DILocation(line: 36, column: 12, scope: !8952)
!8959 = !DILocation(line: 36, column: 17, scope: !8952)
!8960 = !DILocation(line: 36, column: 25, scope: !8952)
!8961 = !DILocation(line: 37, column: 37, scope: !8952)
!8962 = !DILocation(line: 37, column: 2, scope: !8952)
!8963 = !DILocation(line: 37, column: 12, scope: !8952)
!8964 = !DILocation(line: 37, column: 17, scope: !8952)
!8965 = !DILocation(line: 37, column: 35, scope: !8952)
!8966 = !DILocation(line: 41, column: 12, scope: !8952)
!8967 = !DILocalVariable(name: "key", arg: 1, scope: !8968, file: !3614, line: 84, type: !32)
!8968 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2537, retainedNodes: !223)
!8969 = !DILocation(line: 84, column: 56, scope: !8968, inlinedAt: !8970)
!8970 = distinct !DILocation(line: 44, column: 2, scope: !8952)
!8971 = !DILocation(line: 87, column: 6, scope: !8972, inlinedAt: !8970)
!8972 = distinct !DILexicalBlock(scope: !8968, file: !3614, line: 87, column: 6)
!8973 = !DILocation(line: 87, column: 10, scope: !8972, inlinedAt: !8970)
!8974 = !DILocation(line: 87, column: 6, scope: !8968, inlinedAt: !8970)
!8975 = !DILocation(line: 88, column: 3, scope: !8976, inlinedAt: !8970)
!8976 = distinct !DILexicalBlock(scope: !8972, file: !3614, line: 87, column: 17)
!8977 = !DILocation(line: 90, column: 2, scope: !8968, inlinedAt: !8970)
!8978 = !{i64 1441678}
!8979 = !DILocation(line: 110, column: 1, scope: !8968, inlinedAt: !8970)
!8980 = !DILocation(line: 53, column: 9, scope: !8952)
!8981 = !DILocation(line: 53, column: 19, scope: !8952)
!8982 = !DILocation(line: 53, column: 24, scope: !8952)
!8983 = !DILocation(line: 53, column: 2, scope: !8952)
!8984 = distinct !DISubprogram(name: "arch_new_thread", scope: !8985, file: !8985, line: 56, type: !8986, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2553, retainedNodes: !223)
!8985 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8986 = !DISubroutineType(types: !8987)
!8987 = !{null, !8988, !9082, !311, !240, !102, !102, !102}
!8988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8989, size: 32)
!8989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !8990)
!8990 = !{!8991, !9049, !9061, !9062, !9063, !9064, !9077}
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8989, file: !114, line: 247, baseType: !8992, size: 384)
!8992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !8993)
!8993 = !{!8994, !9018, !9025, !9026, !9027, !9036, !9037, !9038}
!8994 = !DIDerivedType(tag: DW_TAG_member, scope: !8992, file: !114, line: 60, baseType: !8995, size: 64)
!8995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8992, file: !114, line: 60, size: 64, elements: !8996)
!8996 = !{!8997, !9012}
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8995, file: !114, line: 61, baseType: !8998, size: 64)
!8998 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !8999)
!8999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !9000)
!9000 = !{!9001, !9007}
!9001 = !DIDerivedType(tag: DW_TAG_member, scope: !8999, file: !124, line: 38, baseType: !9002, size: 32)
!9002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8999, file: !124, line: 38, size: 32, elements: !9003)
!9003 = !{!9004, !9006}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9002, file: !124, line: 39, baseType: !9005, size: 32)
!9005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8999, size: 32)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9002, file: !124, line: 40, baseType: !9005, size: 32)
!9007 = !DIDerivedType(tag: DW_TAG_member, scope: !8999, file: !124, line: 42, baseType: !9008, size: 32, offset: 32)
!9008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8999, file: !124, line: 42, size: 32, elements: !9009)
!9009 = !{!9010, !9011}
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9008, file: !124, line: 43, baseType: !9005, size: 32)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9008, file: !124, line: 44, baseType: !9005, size: 32)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8995, file: !114, line: 62, baseType: !9013, size: 64)
!9013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !9014)
!9014 = !{!9015}
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9013, file: !140, line: 50, baseType: !9016, size: 64)
!9016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9017, size: 64, elements: !145)
!9017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9013, size: 32)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8992, file: !114, line: 68, baseType: !9019, size: 32, offset: 64)
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 32)
!9020 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !9021)
!9021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !9022)
!9022 = !{!9023}
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9021, file: !150, line: 232, baseType: !9024, size: 64)
!9024 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !8999)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8992, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8992, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!9027 = !DIDerivedType(tag: DW_TAG_member, scope: !8992, file: !114, line: 90, baseType: !9028, size: 16, offset: 112)
!9028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8992, file: !114, line: 90, size: 16, elements: !9029)
!9029 = !{!9030, !9035}
!9030 = !DIDerivedType(tag: DW_TAG_member, scope: !9028, file: !114, line: 91, baseType: !9031, size: 16)
!9031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9028, file: !114, line: 91, size: 16, elements: !9032)
!9032 = !{!9033, !9034}
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9031, file: !114, line: 96, baseType: !166, size: 8)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9031, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9028, file: !114, line: 100, baseType: !170, size: 16)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8992, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8992, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8992, file: !114, line: 131, baseType: !9039, size: 192, offset: 192)
!9039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !9040)
!9040 = !{!9041, !9042, !9048}
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9039, file: !150, line: 245, baseType: !8998, size: 64)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9039, file: !150, line: 246, baseType: !9043, size: 32, offset: 64)
!9043 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !9044)
!9044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9045, size: 32)
!9045 = !DISubroutineType(types: !9046)
!9046 = !{null, !9047}
!9047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9039, size: 32)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9039, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8989, file: !114, line: 250, baseType: !9050, size: 288, offset: 384)
!9050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !9051)
!9051 = !{!9052, !9053, !9054, !9055, !9056, !9057, !9058, !9059, !9060}
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9050, file: !190, line: 26, baseType: !173, size: 32)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9050, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9050, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9050, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9050, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9050, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9050, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9050, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9050, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8989, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8989, file: !114, line: 256, baseType: !9020, size: 64, offset: 704)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8989, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8989, file: !114, line: 325, baseType: !9065, size: 32, offset: 800)
!9065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9066, size: 32)
!9066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !9067)
!9067 = !{!9068, !9074, !9075}
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9066, file: !109, line: 5074, baseType: !9069, size: 96)
!9069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !9070)
!9070 = !{!9071, !9072, !9073}
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9069, file: !210, line: 57, baseType: !213, size: 32)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9069, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9069, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9066, file: !109, line: 5075, baseType: !9020, size: 64, offset: 96)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9066, file: !109, line: 5076, baseType: !9076, offset: 160)
!9076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8989, file: !114, line: 343, baseType: !9078, size: 64, offset: 832)
!9078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !9079)
!9079 = !{!9080, !9081}
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9078, file: !190, line: 63, baseType: !173, size: 32)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9078, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!9082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9083, size: 32)
!9083 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !9084)
!9084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !9085)
!9085 = !{!9086}
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9084, file: !234, line: 48, baseType: !237, size: 8)
!9087 = !DILocalVariable(name: "thread", arg: 1, scope: !8984, file: !8985, line: 56, type: !8988)
!9088 = !DILocation(line: 56, column: 39, scope: !8984)
!9089 = !DILocalVariable(name: "stack", arg: 2, scope: !8984, file: !8985, line: 56, type: !9082)
!9090 = !DILocation(line: 56, column: 65, scope: !8984)
!9091 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8984, file: !8985, line: 57, type: !311)
!9092 = !DILocation(line: 57, column: 14, scope: !8984)
!9093 = !DILocalVariable(name: "entry", arg: 4, scope: !8984, file: !8985, line: 57, type: !240)
!9094 = !DILocation(line: 57, column: 42, scope: !8984)
!9095 = !DILocalVariable(name: "p1", arg: 5, scope: !8984, file: !8985, line: 58, type: !102)
!9096 = !DILocation(line: 58, column: 14, scope: !8984)
!9097 = !DILocalVariable(name: "p2", arg: 6, scope: !8984, file: !8985, line: 58, type: !102)
!9098 = !DILocation(line: 58, column: 24, scope: !8984)
!9099 = !DILocalVariable(name: "p3", arg: 7, scope: !8984, file: !8985, line: 58, type: !102)
!9100 = !DILocation(line: 58, column: 34, scope: !8984)
!9101 = !DILocalVariable(name: "iframe", scope: !8984, file: !8985, line: 60, type: !2556)
!9102 = !DILocation(line: 60, column: 21, scope: !8984)
!9103 = !DILocation(line: 85, column: 11, scope: !8984)
!9104 = !DILocation(line: 85, column: 9, scope: !8984)
!9105 = !DILocation(line: 93, column: 2, scope: !8984)
!9106 = !DILocation(line: 93, column: 10, scope: !8984)
!9107 = !DILocation(line: 93, column: 13, scope: !8984)
!9108 = !DILocation(line: 98, column: 2, scope: !8984)
!9109 = !DILocation(line: 98, column: 10, scope: !8984)
!9110 = !DILocation(line: 98, column: 13, scope: !8984)
!9111 = !DILocation(line: 100, column: 25, scope: !8984)
!9112 = !DILocation(line: 100, column: 15, scope: !8984)
!9113 = !DILocation(line: 100, column: 2, scope: !8984)
!9114 = !DILocation(line: 100, column: 10, scope: !8984)
!9115 = !DILocation(line: 100, column: 13, scope: !8984)
!9116 = !DILocation(line: 101, column: 25, scope: !8984)
!9117 = !DILocation(line: 101, column: 15, scope: !8984)
!9118 = !DILocation(line: 101, column: 2, scope: !8984)
!9119 = !DILocation(line: 101, column: 10, scope: !8984)
!9120 = !DILocation(line: 101, column: 13, scope: !8984)
!9121 = !DILocation(line: 102, column: 25, scope: !8984)
!9122 = !DILocation(line: 102, column: 15, scope: !8984)
!9123 = !DILocation(line: 102, column: 2, scope: !8984)
!9124 = !DILocation(line: 102, column: 10, scope: !8984)
!9125 = !DILocation(line: 102, column: 13, scope: !8984)
!9126 = !DILocation(line: 103, column: 25, scope: !8984)
!9127 = !DILocation(line: 103, column: 15, scope: !8984)
!9128 = !DILocation(line: 103, column: 2, scope: !8984)
!9129 = !DILocation(line: 103, column: 10, scope: !8984)
!9130 = !DILocation(line: 103, column: 13, scope: !8984)
!9131 = !DILocation(line: 106, column: 2, scope: !8984)
!9132 = !DILocation(line: 106, column: 10, scope: !8984)
!9133 = !DILocation(line: 106, column: 15, scope: !8984)
!9134 = !DILocation(line: 122, column: 39, scope: !8984)
!9135 = !DILocation(line: 122, column: 29, scope: !8984)
!9136 = !DILocation(line: 122, column: 2, scope: !8984)
!9137 = !DILocation(line: 122, column: 10, scope: !8984)
!9138 = !DILocation(line: 122, column: 23, scope: !8984)
!9139 = !DILocation(line: 122, column: 27, scope: !8984)
!9140 = !DILocation(line: 123, column: 2, scope: !8984)
!9141 = !DILocation(line: 123, column: 10, scope: !8984)
!9142 = !DILocation(line: 123, column: 15, scope: !8984)
!9143 = !DILocation(line: 123, column: 23, scope: !8984)
!9144 = !DILocation(line: 143, column: 1, scope: !8984)
!9145 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8985, file: !8985, line: 530, type: !9146, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2553, retainedNodes: !223)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{null, !8988, !311, !240}
!9148 = !DILocalVariable(name: "main_thread", arg: 1, scope: !9145, file: !8985, line: 530, type: !8988)
!9149 = !DILocation(line: 530, column: 50, scope: !9145)
!9150 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !9145, file: !8985, line: 530, type: !311)
!9151 = !DILocation(line: 530, column: 69, scope: !9145)
!9152 = !DILocalVariable(name: "_main", arg: 3, scope: !9145, file: !8985, line: 531, type: !240)
!9153 = !DILocation(line: 531, column: 22, scope: !9145)
!9154 = !DILocation(line: 533, column: 2, scope: !9145)
!9155 = !DILocation(line: 535, column: 13, scope: !9145)
!9156 = !DILocation(line: 535, column: 11, scope: !9145)
!9157 = !DILocation(line: 599, column: 9, scope: !9145)
!9158 = !DILocation(line: 599, column: 22, scope: !9145)
!9159 = !DILocation(line: 576, column: 2, scope: !9145)
!9160 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18355, i64 18626, i64 18645, i64 18664, i64 18689}
!9161 = !DILocation(line: 603, column: 2, scope: !9145)
!9162 = distinct !DISubprogram(name: "z_arm_prepare_switch_to_main", scope: !8985, file: !8985, line: 506, type: !253, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2553, retainedNodes: !223)
!9163 = !DILocation(line: 528, column: 1, scope: !9162)
!9164 = distinct !DISubprogram(name: "z_arm_fault", scope: !9165, file: !9165, line: 1036, type: !9166, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9165 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9166 = !DISubroutineType(types: !9167)
!9167 = !{null, !173, !173, !173, !9168}
!9168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9169, size: 32)
!9169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !9170)
!9170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !9171)
!9171 = !{!9172, !9173, !9174, !9175, !9176, !9177, !9178, !9179, !9180}
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9170, file: !190, line: 26, baseType: !173, size: 32)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9170, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9170, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9170, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9170, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9170, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9170, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9170, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9170, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!9181 = !DILocalVariable(name: "msp", arg: 1, scope: !9164, file: !9165, line: 1036, type: !173)
!9182 = !DILocation(line: 1036, column: 27, scope: !9164)
!9183 = !DILocalVariable(name: "psp", arg: 2, scope: !9164, file: !9165, line: 1036, type: !173)
!9184 = !DILocation(line: 1036, column: 41, scope: !9164)
!9185 = !DILocalVariable(name: "exc_return", arg: 3, scope: !9164, file: !9165, line: 1036, type: !173)
!9186 = !DILocation(line: 1036, column: 55, scope: !9164)
!9187 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !9164, file: !9165, line: 1037, type: !9168)
!9188 = !DILocation(line: 1037, column: 19, scope: !9164)
!9189 = !DILocalVariable(name: "reason", scope: !9164, file: !9165, line: 1039, type: !173)
!9190 = !DILocation(line: 1039, column: 11, scope: !9164)
!9191 = !DILocalVariable(name: "fault", scope: !9164, file: !9165, line: 1040, type: !103)
!9192 = !DILocation(line: 1040, column: 6, scope: !9164)
!9193 = !DILocation(line: 1040, column: 19, scope: !9164)
!9194 = !DILocation(line: 1040, column: 24, scope: !9164)
!9195 = !DILocalVariable(name: "recoverable", scope: !9164, file: !9165, line: 1041, type: !717)
!9196 = !DILocation(line: 1041, column: 7, scope: !9164)
!9197 = !DILocalVariable(name: "nested_exc", scope: !9164, file: !9165, line: 1041, type: !717)
!9198 = !DILocation(line: 1041, column: 20, scope: !9164)
!9199 = !DILocalVariable(name: "esf", scope: !9164, file: !9165, line: 1042, type: !2612)
!9200 = !DILocation(line: 1042, column: 16, scope: !9164)
!9201 = !DILocalVariable(name: "esf_copy", scope: !9164, file: !9165, line: 1047, type: !2613)
!9202 = !DILocation(line: 1047, column: 15, scope: !9164)
!9203 = !DILocalVariable(name: "key", arg: 1, scope: !9204, file: !3614, line: 84, type: !32)
!9204 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9205 = !DILocation(line: 84, column: 56, scope: !9204, inlinedAt: !9206)
!9206 = distinct !DILocation(line: 1050, column: 2, scope: !9164)
!9207 = !DILocation(line: 87, column: 6, scope: !9208, inlinedAt: !9206)
!9208 = distinct !DILexicalBlock(scope: !9204, file: !3614, line: 87, column: 6)
!9209 = !DILocation(line: 87, column: 10, scope: !9208, inlinedAt: !9206)
!9210 = !DILocation(line: 87, column: 6, scope: !9204, inlinedAt: !9206)
!9211 = !DILocation(line: 88, column: 3, scope: !9212, inlinedAt: !9206)
!9212 = distinct !DILexicalBlock(scope: !9208, file: !3614, line: 87, column: 17)
!9213 = !DILocation(line: 90, column: 2, scope: !9204, inlinedAt: !9206)
!9214 = !{i64 1474922}
!9215 = !DILocation(line: 110, column: 1, scope: !9204, inlinedAt: !9206)
!9216 = !DILocation(line: 1055, column: 17, scope: !9164)
!9217 = !DILocation(line: 1055, column: 22, scope: !9164)
!9218 = !DILocation(line: 1055, column: 27, scope: !9164)
!9219 = !DILocation(line: 1055, column: 9, scope: !9164)
!9220 = !DILocation(line: 1055, column: 7, scope: !9164)
!9221 = !DILocation(line: 1063, column: 24, scope: !9164)
!9222 = !DILocation(line: 1063, column: 29, scope: !9164)
!9223 = !DILocation(line: 1063, column: 11, scope: !9164)
!9224 = !DILocation(line: 1063, column: 9, scope: !9164)
!9225 = !DILocation(line: 1064, column: 6, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9164, file: !9165, line: 1064, column: 6)
!9227 = !DILocation(line: 1064, column: 6, scope: !9164)
!9228 = !DILocation(line: 1065, column: 3, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9226, file: !9165, line: 1064, column: 19)
!9230 = !DILocation(line: 1070, column: 9, scope: !9164)
!9231 = !DILocation(line: 1070, column: 20, scope: !9164)
!9232 = !DILocation(line: 1070, column: 2, scope: !9164)
!9233 = !DILocation(line: 1071, column: 2, scope: !9164)
!9234 = !DILocation(line: 1089, column: 6, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9164, file: !9165, line: 1089, column: 6)
!9236 = !DILocation(line: 1089, column: 6, scope: !9164)
!9237 = !DILocation(line: 1090, column: 17, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9239, file: !9165, line: 1090, column: 7)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !9165, line: 1089, column: 18)
!9240 = !DILocation(line: 1090, column: 23, scope: !9238)
!9241 = !DILocation(line: 1090, column: 28, scope: !9238)
!9242 = !DILocation(line: 1090, column: 44, scope: !9238)
!9243 = !DILocation(line: 1090, column: 7, scope: !9239)
!9244 = !DILocation(line: 1091, column: 13, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9238, file: !9165, line: 1090, column: 50)
!9246 = !DILocation(line: 1091, column: 19, scope: !9245)
!9247 = !DILocation(line: 1091, column: 24, scope: !9245)
!9248 = !DILocation(line: 1092, column: 3, scope: !9245)
!9249 = !DILocation(line: 1093, column: 2, scope: !9239)
!9250 = !DILocation(line: 1094, column: 12, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9235, file: !9165, line: 1093, column: 9)
!9252 = !DILocation(line: 1094, column: 18, scope: !9251)
!9253 = !DILocation(line: 1094, column: 23, scope: !9251)
!9254 = !DILocation(line: 1097, column: 20, scope: !9164)
!9255 = !DILocation(line: 1097, column: 2, scope: !9164)
!9256 = !DILocation(line: 1098, column: 1, scope: !9164)
!9257 = distinct !DISubprogram(name: "get_esf", scope: !9165, file: !9165, line: 894, type: !9258, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!2612, !173, !173, !173, !9260}
!9260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!9261 = !DILocalVariable(name: "msp", arg: 1, scope: !9257, file: !9165, line: 894, type: !173)
!9262 = !DILocation(line: 894, column: 46, scope: !9257)
!9263 = !DILocalVariable(name: "psp", arg: 2, scope: !9257, file: !9165, line: 894, type: !173)
!9264 = !DILocation(line: 894, column: 60, scope: !9257)
!9265 = !DILocalVariable(name: "exc_return", arg: 3, scope: !9257, file: !9165, line: 894, type: !173)
!9266 = !DILocation(line: 894, column: 74, scope: !9257)
!9267 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !9257, file: !9165, line: 895, type: !9260)
!9268 = !DILocation(line: 895, column: 8, scope: !9257)
!9269 = !DILocalVariable(name: "alternative_state_exc", scope: !9257, file: !9165, line: 897, type: !717)
!9270 = !DILocation(line: 897, column: 7, scope: !9257)
!9271 = !DILocalVariable(name: "ptr_esf", scope: !9257, file: !9165, line: 898, type: !2612)
!9272 = !DILocation(line: 898, column: 16, scope: !9257)
!9273 = !DILocation(line: 900, column: 3, scope: !9257)
!9274 = !DILocation(line: 900, column: 14, scope: !9257)
!9275 = !DILocation(line: 902, column: 7, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9257, file: !9165, line: 902, column: 6)
!9277 = !DILocation(line: 902, column: 18, scope: !9276)
!9278 = !DILocation(line: 902, column: 49, scope: !9276)
!9279 = !DILocation(line: 902, column: 6, scope: !9257)
!9280 = !DILocation(line: 905, column: 3, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9276, file: !9165, line: 903, column: 33)
!9282 = !DILocation(line: 983, column: 7, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9257, file: !9165, line: 983, column: 6)
!9284 = !DILocation(line: 983, column: 18, scope: !9283)
!9285 = !DILocation(line: 983, column: 44, scope: !9283)
!9286 = !DILocation(line: 984, column: 6, scope: !9283)
!9287 = !DILocation(line: 984, column: 17, scope: !9283)
!9288 = !DILocation(line: 983, column: 6, scope: !9257)
!9289 = !DILocation(line: 985, column: 3, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9283, file: !9165, line: 984, column: 47)
!9291 = !DILocation(line: 985, column: 3, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !9165, line: 985, column: 3)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !9165, line: 985, column: 3)
!9294 = distinct !DILexicalBlock(scope: !9290, file: !9165, line: 985, column: 3)
!9295 = !DILocation(line: 986, column: 3, scope: !9290)
!9296 = !DILocation(line: 990, column: 7, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9257, file: !9165, line: 990, column: 6)
!9298 = !DILocation(line: 990, column: 6, scope: !9257)
!9299 = !DILocation(line: 991, column: 7, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9301, file: !9165, line: 991, column: 7)
!9301 = distinct !DILexicalBlock(scope: !9297, file: !9165, line: 990, column: 30)
!9302 = !DILocation(line: 991, column: 18, scope: !9300)
!9303 = !DILocation(line: 991, column: 7, scope: !9301)
!9304 = !DILocation(line: 993, column: 31, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9300, file: !9165, line: 991, column: 44)
!9306 = !DILocation(line: 993, column: 15, scope: !9305)
!9307 = !DILocation(line: 993, column: 12, scope: !9305)
!9308 = !DILocation(line: 995, column: 3, scope: !9305)
!9309 = !DILocation(line: 997, column: 30, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9300, file: !9165, line: 995, column: 10)
!9311 = !DILocation(line: 997, column: 14, scope: !9310)
!9312 = !DILocation(line: 997, column: 12, scope: !9310)
!9313 = !DILocation(line: 998, column: 5, scope: !9310)
!9314 = !DILocation(line: 998, column: 16, scope: !9310)
!9315 = !DILocation(line: 1000, column: 2, scope: !9301)
!9316 = !DILocation(line: 1002, column: 9, scope: !9257)
!9317 = !DILocation(line: 1002, column: 2, scope: !9257)
!9318 = !DILocation(line: 1003, column: 1, scope: !9257)
!9319 = distinct !DISubprogram(name: "fault_handle", scope: !9165, file: !9165, line: 786, type: !9320, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9320 = !DISubroutineType(types: !9321)
!9321 = !{!173, !2612, !103, !9260}
!9322 = !DILocalVariable(name: "esf", arg: 1, scope: !9319, file: !9165, line: 786, type: !2612)
!9323 = !DILocation(line: 786, column: 44, scope: !9319)
!9324 = !DILocalVariable(name: "fault", arg: 2, scope: !9319, file: !9165, line: 786, type: !103)
!9325 = !DILocation(line: 786, column: 53, scope: !9319)
!9326 = !DILocalVariable(name: "recoverable", arg: 3, scope: !9319, file: !9165, line: 786, type: !9260)
!9327 = !DILocation(line: 786, column: 66, scope: !9319)
!9328 = !DILocalVariable(name: "reason", scope: !9319, file: !9165, line: 788, type: !173)
!9329 = !DILocation(line: 788, column: 11, scope: !9319)
!9330 = !DILocation(line: 790, column: 3, scope: !9319)
!9331 = !DILocation(line: 790, column: 15, scope: !9319)
!9332 = !DILocation(line: 792, column: 10, scope: !9319)
!9333 = !DILocation(line: 792, column: 2, scope: !9319)
!9334 = !DILocation(line: 794, column: 23, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9319, file: !9165, line: 792, column: 17)
!9336 = !DILocation(line: 794, column: 28, scope: !9335)
!9337 = !DILocation(line: 794, column: 12, scope: !9335)
!9338 = !DILocation(line: 794, column: 10, scope: !9335)
!9339 = !DILocation(line: 795, column: 3, scope: !9335)
!9340 = !DILocation(line: 820, column: 22, scope: !9335)
!9341 = !DILocation(line: 820, column: 27, scope: !9335)
!9342 = !DILocation(line: 820, column: 3, scope: !9335)
!9343 = !DILocation(line: 821, column: 3, scope: !9335)
!9344 = !DILocation(line: 824, column: 8, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9319, file: !9165, line: 824, column: 6)
!9346 = !DILocation(line: 824, column: 7, scope: !9345)
!9347 = !DILocation(line: 824, column: 6, scope: !9345)
!9348 = !DILocation(line: 824, column: 21, scope: !9345)
!9349 = !DILocation(line: 824, column: 6, scope: !9319)
!9350 = !DILocation(line: 826, column: 14, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9345, file: !9165, line: 824, column: 31)
!9352 = !DILocation(line: 826, column: 19, scope: !9351)
!9353 = !DILocation(line: 826, column: 3, scope: !9351)
!9354 = !DILocation(line: 827, column: 2, scope: !9351)
!9355 = !DILocation(line: 829, column: 9, scope: !9319)
!9356 = !DILocation(line: 829, column: 2, scope: !9319)
!9357 = distinct !DISubprogram(name: "hard_fault", scope: !9165, file: !9165, line: 709, type: !9358, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{!173, !2612, !9260}
!9360 = !DILocalVariable(name: "esf", arg: 1, scope: !9357, file: !9165, line: 709, type: !2612)
!9361 = !DILocation(line: 709, column: 42, scope: !9357)
!9362 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9357, file: !9165, line: 709, type: !9260)
!9363 = !DILocation(line: 709, column: 53, scope: !9357)
!9364 = !DILocalVariable(name: "reason", scope: !9357, file: !9165, line: 711, type: !173)
!9365 = !DILocation(line: 711, column: 11, scope: !9357)
!9366 = !DILocation(line: 713, column: 2, scope: !9357)
!9367 = !DILocation(line: 713, column: 2, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !9165, line: 713, column: 2)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !9165, line: 713, column: 2)
!9370 = distinct !DILexicalBlock(scope: !9357, file: !9165, line: 713, column: 2)
!9371 = !DILocation(line: 724, column: 31, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9357, file: !9165, line: 724, column: 6)
!9373 = !DILocation(line: 724, column: 6, scope: !9372)
!9374 = !DILocation(line: 724, column: 6, scope: !9357)
!9375 = !DILocation(line: 726, column: 3, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9372, file: !9165, line: 724, column: 37)
!9377 = !DILocation(line: 726, column: 3, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !9165, line: 726, column: 3)
!9379 = distinct !DILexicalBlock(scope: !9380, file: !9165, line: 726, column: 3)
!9380 = distinct !DILexicalBlock(scope: !9376, file: !9165, line: 726, column: 3)
!9381 = !DILocation(line: 727, column: 12, scope: !9376)
!9382 = !DILocation(line: 727, column: 17, scope: !9376)
!9383 = !DILocation(line: 727, column: 23, scope: !9376)
!9384 = !DILocation(line: 727, column: 10, scope: !9376)
!9385 = !DILocation(line: 728, column: 2, scope: !9376)
!9386 = !DILocation(line: 730, column: 42, scope: !9357)
!9387 = !DILocation(line: 730, column: 17, scope: !9357)
!9388 = !DILocation(line: 730, column: 3, scope: !9357)
!9389 = !DILocation(line: 730, column: 15, scope: !9357)
!9390 = !DILocation(line: 766, column: 9, scope: !9357)
!9391 = !DILocation(line: 766, column: 2, scope: !9357)
!9392 = distinct !DISubprogram(name: "reserved_exception", scope: !9165, file: !9165, line: 776, type: !9393, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9393 = !DISubroutineType(types: !9394)
!9394 = !{null, !9395, !103}
!9395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9396, size: 32)
!9396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2613)
!9397 = !DILocalVariable(name: "esf", arg: 1, scope: !9392, file: !9165, line: 776, type: !9395)
!9398 = !DILocation(line: 776, column: 52, scope: !9392)
!9399 = !DILocalVariable(name: "fault", arg: 2, scope: !9392, file: !9165, line: 776, type: !103)
!9400 = !DILocation(line: 776, column: 61, scope: !9392)
!9401 = !DILocation(line: 778, column: 2, scope: !9392)
!9402 = !DILocation(line: 780, column: 2, scope: !9392)
!9403 = !DILocation(line: 780, column: 2, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !9165, line: 780, column: 2)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !9165, line: 780, column: 2)
!9406 = distinct !DILexicalBlock(scope: !9392, file: !9165, line: 780, column: 2)
!9407 = !DILocation(line: 783, column: 1, scope: !9392)
!9408 = distinct !DISubprogram(name: "fault_show", scope: !9165, file: !9165, line: 166, type: !9393, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9409 = !DILocalVariable(name: "esf", arg: 1, scope: !9408, file: !9165, line: 166, type: !9395)
!9410 = !DILocation(line: 166, column: 44, scope: !9408)
!9411 = !DILocalVariable(name: "fault", arg: 2, scope: !9408, file: !9165, line: 166, type: !103)
!9412 = !DILocation(line: 166, column: 53, scope: !9408)
!9413 = !DILocation(line: 168, column: 8, scope: !9408)
!9414 = !DILocation(line: 169, column: 8, scope: !9408)
!9415 = !DILocation(line: 170, column: 1, scope: !9408)
!9416 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !9165, file: !9165, line: 658, type: !9417, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9417 = !DISubroutineType(types: !9418)
!9418 = !{!717, !2612}
!9419 = !DILocalVariable(name: "esf", arg: 1, scope: !9416, file: !9165, line: 658, type: !2612)
!9420 = !DILocation(line: 658, column: 59, scope: !9416)
!9421 = !DILocalVariable(name: "ret_addr", scope: !9416, file: !9165, line: 660, type: !2655)
!9422 = !DILocation(line: 660, column: 12, scope: !9416)
!9423 = !DILocation(line: 660, column: 35, scope: !9416)
!9424 = !DILocation(line: 660, column: 40, scope: !9416)
!9425 = !DILocation(line: 660, column: 46, scope: !9416)
!9426 = !DILocation(line: 660, column: 23, scope: !9416)
!9427 = !DILocalVariable(name: "fault_insn", scope: !9416, file: !9165, line: 680, type: !170)
!9428 = !DILocation(line: 680, column: 11, scope: !9416)
!9429 = !DILocation(line: 680, column: 26, scope: !9416)
!9430 = !DILocation(line: 680, column: 35, scope: !9416)
!9431 = !DILocation(line: 680, column: 24, scope: !9416)
!9432 = !DILocation(line: 693, column: 8, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9416, file: !9165, line: 693, column: 6)
!9434 = !DILocation(line: 693, column: 19, scope: !9433)
!9435 = !DILocation(line: 693, column: 29, scope: !9433)
!9436 = !DILocation(line: 693, column: 45, scope: !9433)
!9437 = !DILocation(line: 694, column: 5, scope: !9433)
!9438 = !DILocation(line: 694, column: 16, scope: !9433)
!9439 = !DILocation(line: 694, column: 26, scope: !9433)
!9440 = !DILocation(line: 693, column: 6, scope: !9416)
!9441 = !DILocation(line: 695, column: 3, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9433, file: !9165, line: 694, column: 56)
!9443 = !DILocation(line: 698, column: 2, scope: !9416)
!9444 = !DILocation(line: 699, column: 1, scope: !9416)
!9445 = distinct !DISubprogram(name: "memory_fault_recoverable", scope: !9165, file: !9165, line: 186, type: !9446, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9446 = !DISubroutineType(types: !9447)
!9447 = !{!717, !2612, !717}
!9448 = !DILocalVariable(name: "esf", arg: 1, scope: !9445, file: !9165, line: 186, type: !2612)
!9449 = !DILocation(line: 186, column: 52, scope: !9445)
!9450 = !DILocalVariable(name: "synchronous", arg: 2, scope: !9445, file: !9165, line: 186, type: !717)
!9451 = !DILocation(line: 186, column: 62, scope: !9445)
!9452 = !DILocation(line: 209, column: 2, scope: !9445)
!9453 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !9165, file: !9165, line: 1107, type: !253, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2596, retainedNodes: !223)
!9454 = !DILocation(line: 1136, column: 1, scope: !9453)
!9455 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9456, file: !9456, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2656, retainedNodes: !223)
!9456 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9457 = !DILocalVariable(name: "irq", scope: !9455, file: !9456, line: 28, type: !103)
!9458 = !DILocation(line: 28, column: 6, scope: !9455)
!9459 = !DILocation(line: 30, column: 2, scope: !9455)
!9460 = !DILocation(line: 30, column: 9, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !9456, line: 30, column: 2)
!9462 = distinct !DILexicalBlock(scope: !9455, file: !9456, line: 30, column: 2)
!9463 = !DILocation(line: 30, column: 13, scope: !9461)
!9464 = !DILocation(line: 30, column: 2, scope: !9462)
!9465 = !DILocation(line: 31, column: 31, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9461, file: !9456, line: 30, column: 39)
!9467 = !DILocation(line: 31, column: 3, scope: !9466)
!9468 = !DILocation(line: 32, column: 2, scope: !9466)
!9469 = !DILocation(line: 30, column: 35, scope: !9461)
!9470 = !DILocation(line: 30, column: 2, scope: !9461)
!9471 = distinct !{!9471, !9464, !9472}
!9472 = !DILocation(line: 32, column: 2, scope: !9462)
!9473 = !DILocation(line: 33, column: 1, scope: !9455)
!9474 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 732, type: !8854, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2656, retainedNodes: !223)
!9475 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9474, file: !508, line: 732, type: !1685)
!9476 = !DILocation(line: 732, column: 51, scope: !9474)
!9477 = !DILocalVariable(name: "priority", arg: 2, scope: !9474, file: !508, line: 732, type: !173)
!9478 = !DILocation(line: 732, column: 66, scope: !9474)
!9479 = !DILocation(line: 734, column: 17, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9474, file: !508, line: 734, column: 7)
!9481 = !DILocation(line: 734, column: 23, scope: !9480)
!9482 = !DILocation(line: 734, column: 7, scope: !9474)
!9483 = !DILocation(line: 736, column: 53, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9480, file: !508, line: 735, column: 3)
!9485 = !DILocation(line: 736, column: 44, scope: !9484)
!9486 = !DILocation(line: 736, column: 83, scope: !9484)
!9487 = !DILocation(line: 736, column: 80, scope: !9484)
!9488 = !DILocation(line: 736, column: 71, scope: !9484)
!9489 = !DILocation(line: 736, column: 69, scope: !9484)
!9490 = !DILocation(line: 737, column: 11, scope: !9484)
!9491 = !DILocation(line: 737, column: 20, scope: !9484)
!9492 = !DILocation(line: 737, column: 48, scope: !9484)
!9493 = !DILocation(line: 737, column: 71, scope: !9484)
!9494 = !DILocation(line: 737, column: 68, scope: !9484)
!9495 = !DILocation(line: 736, column: 102, scope: !9484)
!9496 = !DILocation(line: 736, column: 14, scope: !9484)
!9497 = !DILocation(line: 736, column: 5, scope: !9484)
!9498 = !DILocation(line: 736, column: 30, scope: !9484)
!9499 = !DILocation(line: 738, column: 3, scope: !9484)
!9500 = !DILocation(line: 741, column: 53, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9480, file: !508, line: 740, column: 3)
!9502 = !DILocation(line: 741, column: 44, scope: !9501)
!9503 = !DILocation(line: 741, column: 83, scope: !9501)
!9504 = !DILocation(line: 741, column: 80, scope: !9501)
!9505 = !DILocation(line: 741, column: 71, scope: !9501)
!9506 = !DILocation(line: 741, column: 69, scope: !9501)
!9507 = !DILocation(line: 742, column: 11, scope: !9501)
!9508 = !DILocation(line: 742, column: 20, scope: !9501)
!9509 = !DILocation(line: 742, column: 48, scope: !9501)
!9510 = !DILocation(line: 742, column: 71, scope: !9501)
!9511 = !DILocation(line: 742, column: 68, scope: !9501)
!9512 = !DILocation(line: 741, column: 102, scope: !9501)
!9513 = !DILocation(line: 741, column: 14, scope: !9501)
!9514 = !DILocation(line: 741, column: 5, scope: !9501)
!9515 = !DILocation(line: 741, column: 30, scope: !9501)
!9516 = !DILocation(line: 744, column: 1, scope: !9474)
!9517 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9518, file: !9518, line: 27, type: !9519, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!9518 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9519 = !DISubroutineType(types: !9520)
!9520 = !{null, !9521}
!9521 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !9522)
!9522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9523, size: 32)
!9523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !9524)
!9524 = !{!9525, !9583, !9595, !9596, !9597, !9598, !9611}
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9523, file: !114, line: 247, baseType: !9526, size: 384)
!9526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !9527)
!9527 = !{!9528, !9552, !9559, !9560, !9561, !9570, !9571, !9572}
!9528 = !DIDerivedType(tag: DW_TAG_member, scope: !9526, file: !114, line: 60, baseType: !9529, size: 64)
!9529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9526, file: !114, line: 60, size: 64, elements: !9530)
!9530 = !{!9531, !9546}
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9529, file: !114, line: 61, baseType: !9532, size: 64)
!9532 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !9533)
!9533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !9534)
!9534 = !{!9535, !9541}
!9535 = !DIDerivedType(tag: DW_TAG_member, scope: !9533, file: !124, line: 38, baseType: !9536, size: 32)
!9536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9533, file: !124, line: 38, size: 32, elements: !9537)
!9537 = !{!9538, !9540}
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9536, file: !124, line: 39, baseType: !9539, size: 32)
!9539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9533, size: 32)
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9536, file: !124, line: 40, baseType: !9539, size: 32)
!9541 = !DIDerivedType(tag: DW_TAG_member, scope: !9533, file: !124, line: 42, baseType: !9542, size: 32, offset: 32)
!9542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9533, file: !124, line: 42, size: 32, elements: !9543)
!9543 = !{!9544, !9545}
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9542, file: !124, line: 43, baseType: !9539, size: 32)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9542, file: !124, line: 44, baseType: !9539, size: 32)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9529, file: !114, line: 62, baseType: !9547, size: 64)
!9547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !9548)
!9548 = !{!9549}
!9549 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9547, file: !140, line: 50, baseType: !9550, size: 64)
!9550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9551, size: 64, elements: !145)
!9551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9547, size: 32)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9526, file: !114, line: 68, baseType: !9553, size: 32, offset: 64)
!9553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9554, size: 32)
!9554 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !9555)
!9555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !9556)
!9556 = !{!9557}
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9555, file: !150, line: 232, baseType: !9558, size: 64)
!9558 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !9533)
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9526, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9526, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!9561 = !DIDerivedType(tag: DW_TAG_member, scope: !9526, file: !114, line: 90, baseType: !9562, size: 16, offset: 112)
!9562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9526, file: !114, line: 90, size: 16, elements: !9563)
!9563 = !{!9564, !9569}
!9564 = !DIDerivedType(tag: DW_TAG_member, scope: !9562, file: !114, line: 91, baseType: !9565, size: 16)
!9565 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9562, file: !114, line: 91, size: 16, elements: !9566)
!9566 = !{!9567, !9568}
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9565, file: !114, line: 96, baseType: !166, size: 8)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9565, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9562, file: !114, line: 100, baseType: !170, size: 16)
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9526, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9526, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9526, file: !114, line: 131, baseType: !9573, size: 192, offset: 192)
!9573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !9574)
!9574 = !{!9575, !9576, !9582}
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9573, file: !150, line: 245, baseType: !9532, size: 64)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9573, file: !150, line: 246, baseType: !9577, size: 32, offset: 64)
!9577 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !9578)
!9578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9579, size: 32)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{null, !9581}
!9581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9573, size: 32)
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9573, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9523, file: !114, line: 250, baseType: !9584, size: 288, offset: 384)
!9584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !9585)
!9585 = !{!9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593, !9594}
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9584, file: !190, line: 26, baseType: !173, size: 32)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9584, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9584, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9584, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9584, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9584, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9584, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9584, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9584, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9523, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9523, file: !114, line: 256, baseType: !9554, size: 64, offset: 704)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9523, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9523, file: !114, line: 325, baseType: !9599, size: 32, offset: 800)
!9599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9600, size: 32)
!9600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !9601)
!9601 = !{!9602, !9608, !9609}
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9600, file: !109, line: 5074, baseType: !9603, size: 96)
!9603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !9604)
!9604 = !{!9605, !9606, !9607}
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9603, file: !210, line: 57, baseType: !213, size: 32)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9603, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9603, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9600, file: !109, line: 5075, baseType: !9554, size: 64, offset: 96)
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9600, file: !109, line: 5076, baseType: !9610, offset: 160)
!9610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9523, file: !114, line: 343, baseType: !9612, size: 64, offset: 832)
!9612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !9613)
!9613 = !{!9614, !9615}
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9612, file: !190, line: 63, baseType: !173, size: 32)
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9612, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!9616 = !DILocalVariable(name: "thread", arg: 1, scope: !9517, file: !9518, line: 27, type: !9521)
!9617 = !DILocation(line: 27, column: 36, scope: !9517)
!9618 = !DILocation(line: 29, column: 6, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9517, file: !9518, line: 29, column: 6)
!9620 = !DILocation(line: 29, column: 18, scope: !9619)
!9621 = !DILocation(line: 29, column: 15, scope: !9619)
!9622 = !DILocation(line: 29, column: 6, scope: !9517)
!9623 = !DILocalVariable(name: "result", scope: !9624, file: !8818, line: 1029, type: !173)
!9624 = distinct !DISubprogram(name: "__get_IPSR", scope: !8818, file: !8818, line: 1027, type: !9625, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!173}
!9627 = !DILocation(line: 1029, column: 12, scope: !9624, inlinedAt: !9628)
!9628 = distinct !DILocation(line: 48, column: 10, scope: !9629, inlinedAt: !9631)
!9629 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9630, file: !9630, line: 46, type: !3163, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!9630 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9631 = distinct !DILocation(line: 30, column: 7, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9633, file: !9518, line: 30, column: 7)
!9633 = distinct !DILexicalBlock(scope: !9619, file: !9518, line: 29, column: 26)
!9634 = !DILocation(line: 1031, column: 3, scope: !9624, inlinedAt: !9628)
!9635 = !{i64 2466358}
!9636 = !DILocation(line: 1032, column: 10, scope: !9624, inlinedAt: !9628)
!9637 = !DILocation(line: 48, column: 9, scope: !9629, inlinedAt: !9631)
!9638 = !DILocation(line: 30, column: 7, scope: !9633)
!9639 = !DILocation(line: 42, column: 14, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9632, file: !9518, line: 30, column: 25)
!9641 = !DILocation(line: 48, column: 15, scope: !9640)
!9642 = !DILocation(line: 49, column: 3, scope: !9640)
!9643 = !DILocation(line: 50, column: 2, scope: !9633)
!9644 = !DILocation(line: 52, column: 17, scope: !9517)
!9645 = !DILocation(line: 52, column: 2, scope: !9517)
!9646 = !DILocation(line: 53, column: 1, scope: !9517)
!9647 = distinct !DISubprogram(name: "strcpy", scope: !9648, file: !9648, line: 20, type: !9649, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9648 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9649 = !DISubroutineType(types: !9650)
!9650 = !{!311, !9651, !9652}
!9651 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !311)
!9652 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!9653 = !DILocalVariable(name: "d", arg: 1, scope: !9647, file: !9648, line: 20, type: !9651)
!9654 = !DILocation(line: 20, column: 30, scope: !9647)
!9655 = !DILocalVariable(name: "s", arg: 2, scope: !9647, file: !9648, line: 20, type: !9652)
!9656 = !DILocation(line: 20, column: 55, scope: !9647)
!9657 = !DILocalVariable(name: "dest", scope: !9647, file: !9648, line: 22, type: !311)
!9658 = !DILocation(line: 22, column: 8, scope: !9647)
!9659 = !DILocation(line: 22, column: 15, scope: !9647)
!9660 = !DILocation(line: 24, column: 2, scope: !9647)
!9661 = !DILocation(line: 24, column: 10, scope: !9647)
!9662 = !DILocation(line: 24, column: 9, scope: !9647)
!9663 = !DILocation(line: 24, column: 12, scope: !9647)
!9664 = !DILocation(line: 25, column: 9, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9647, file: !9648, line: 24, column: 21)
!9666 = !DILocation(line: 25, column: 8, scope: !9665)
!9667 = !DILocation(line: 25, column: 4, scope: !9665)
!9668 = !DILocation(line: 25, column: 6, scope: !9665)
!9669 = !DILocation(line: 26, column: 4, scope: !9665)
!9670 = !DILocation(line: 27, column: 4, scope: !9665)
!9671 = distinct !{!9671, !9660, !9672}
!9672 = !DILocation(line: 28, column: 2, scope: !9647)
!9673 = !DILocation(line: 30, column: 3, scope: !9647)
!9674 = !DILocation(line: 30, column: 5, scope: !9647)
!9675 = !DILocation(line: 32, column: 9, scope: !9647)
!9676 = !DILocation(line: 32, column: 2, scope: !9647)
!9677 = distinct !DISubprogram(name: "strncpy", scope: !9648, file: !9648, line: 42, type: !9678, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9678 = !DISubroutineType(types: !9679)
!9679 = !{!311, !9651, !9652, !217}
!9680 = !DILocalVariable(name: "d", arg: 1, scope: !9677, file: !9648, line: 42, type: !9651)
!9681 = !DILocation(line: 42, column: 31, scope: !9677)
!9682 = !DILocalVariable(name: "s", arg: 2, scope: !9677, file: !9648, line: 42, type: !9652)
!9683 = !DILocation(line: 42, column: 56, scope: !9677)
!9684 = !DILocalVariable(name: "n", arg: 3, scope: !9677, file: !9648, line: 42, type: !217)
!9685 = !DILocation(line: 42, column: 66, scope: !9677)
!9686 = !DILocalVariable(name: "dest", scope: !9677, file: !9648, line: 44, type: !311)
!9687 = !DILocation(line: 44, column: 8, scope: !9677)
!9688 = !DILocation(line: 44, column: 15, scope: !9677)
!9689 = !DILocation(line: 46, column: 2, scope: !9677)
!9690 = !DILocation(line: 46, column: 10, scope: !9677)
!9691 = !DILocation(line: 46, column: 12, scope: !9677)
!9692 = !DILocation(line: 46, column: 17, scope: !9677)
!9693 = !DILocation(line: 46, column: 21, scope: !9677)
!9694 = !DILocation(line: 46, column: 20, scope: !9677)
!9695 = !DILocation(line: 46, column: 23, scope: !9677)
!9696 = !DILocation(line: 0, scope: !9677)
!9697 = !DILocation(line: 47, column: 9, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9677, file: !9648, line: 46, column: 32)
!9699 = !DILocation(line: 47, column: 8, scope: !9698)
!9700 = !DILocation(line: 47, column: 4, scope: !9698)
!9701 = !DILocation(line: 47, column: 6, scope: !9698)
!9702 = !DILocation(line: 48, column: 4, scope: !9698)
!9703 = !DILocation(line: 49, column: 4, scope: !9698)
!9704 = !DILocation(line: 50, column: 4, scope: !9698)
!9705 = distinct !{!9705, !9689, !9706}
!9706 = !DILocation(line: 51, column: 2, scope: !9677)
!9707 = !DILocation(line: 53, column: 2, scope: !9677)
!9708 = !DILocation(line: 53, column: 9, scope: !9677)
!9709 = !DILocation(line: 53, column: 11, scope: !9677)
!9710 = !DILocation(line: 54, column: 4, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9677, file: !9648, line: 53, column: 16)
!9712 = !DILocation(line: 54, column: 6, scope: !9711)
!9713 = !DILocation(line: 55, column: 4, scope: !9711)
!9714 = !DILocation(line: 56, column: 4, scope: !9711)
!9715 = distinct !{!9715, !9707, !9716}
!9716 = !DILocation(line: 57, column: 2, scope: !9677)
!9717 = !DILocation(line: 59, column: 9, scope: !9677)
!9718 = !DILocation(line: 59, column: 2, scope: !9677)
!9719 = distinct !DISubprogram(name: "strchr", scope: !9648, file: !9648, line: 69, type: !9720, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9720 = !DISubroutineType(types: !9721)
!9721 = !{!311, !256, !103}
!9722 = !DILocalVariable(name: "s", arg: 1, scope: !9719, file: !9648, line: 69, type: !256)
!9723 = !DILocation(line: 69, column: 26, scope: !9719)
!9724 = !DILocalVariable(name: "c", arg: 2, scope: !9719, file: !9648, line: 69, type: !103)
!9725 = !DILocation(line: 69, column: 33, scope: !9719)
!9726 = !DILocalVariable(name: "tmp", scope: !9719, file: !9648, line: 71, type: !237)
!9727 = !DILocation(line: 71, column: 7, scope: !9719)
!9728 = !DILocation(line: 71, column: 20, scope: !9719)
!9729 = !DILocation(line: 71, column: 13, scope: !9719)
!9730 = !DILocation(line: 73, column: 2, scope: !9719)
!9731 = !DILocation(line: 73, column: 11, scope: !9719)
!9732 = !DILocation(line: 73, column: 10, scope: !9719)
!9733 = !DILocation(line: 73, column: 16, scope: !9719)
!9734 = !DILocation(line: 73, column: 13, scope: !9719)
!9735 = !DILocation(line: 73, column: 21, scope: !9719)
!9736 = !DILocation(line: 73, column: 26, scope: !9719)
!9737 = !DILocation(line: 73, column: 25, scope: !9719)
!9738 = !DILocation(line: 73, column: 28, scope: !9719)
!9739 = !DILocation(line: 0, scope: !9719)
!9740 = !DILocation(line: 74, column: 4, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9719, file: !9648, line: 73, column: 38)
!9742 = distinct !{!9742, !9730, !9743}
!9743 = !DILocation(line: 75, column: 2, scope: !9719)
!9744 = !DILocation(line: 77, column: 11, scope: !9719)
!9745 = !DILocation(line: 77, column: 10, scope: !9719)
!9746 = !DILocation(line: 77, column: 16, scope: !9719)
!9747 = !DILocation(line: 77, column: 13, scope: !9719)
!9748 = !DILocation(line: 77, column: 9, scope: !9719)
!9749 = !DILocation(line: 77, column: 32, scope: !9719)
!9750 = !DILocation(line: 77, column: 2, scope: !9719)
!9751 = distinct !DISubprogram(name: "strrchr", scope: !9648, file: !9648, line: 87, type: !9720, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9752 = !DILocalVariable(name: "s", arg: 1, scope: !9751, file: !9648, line: 87, type: !256)
!9753 = !DILocation(line: 87, column: 27, scope: !9751)
!9754 = !DILocalVariable(name: "c", arg: 2, scope: !9751, file: !9648, line: 87, type: !103)
!9755 = !DILocation(line: 87, column: 34, scope: !9751)
!9756 = !DILocalVariable(name: "match", scope: !9751, file: !9648, line: 89, type: !311)
!9757 = !DILocation(line: 89, column: 8, scope: !9751)
!9758 = !DILocation(line: 91, column: 2, scope: !9751)
!9759 = !DILocation(line: 92, column: 8, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9761, file: !9648, line: 92, column: 7)
!9761 = distinct !DILexicalBlock(scope: !9751, file: !9648, line: 91, column: 5)
!9762 = !DILocation(line: 92, column: 7, scope: !9760)
!9763 = !DILocation(line: 92, column: 19, scope: !9760)
!9764 = !DILocation(line: 92, column: 13, scope: !9760)
!9765 = !DILocation(line: 92, column: 10, scope: !9760)
!9766 = !DILocation(line: 92, column: 7, scope: !9761)
!9767 = !DILocation(line: 93, column: 20, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9760, file: !9648, line: 92, column: 22)
!9769 = !DILocation(line: 93, column: 10, scope: !9768)
!9770 = !DILocation(line: 94, column: 3, scope: !9768)
!9771 = !DILocation(line: 95, column: 2, scope: !9761)
!9772 = !DILocation(line: 95, column: 13, scope: !9751)
!9773 = !DILocation(line: 95, column: 11, scope: !9751)
!9774 = distinct !{!9774, !9758, !9775}
!9775 = !DILocation(line: 95, column: 15, scope: !9751)
!9776 = !DILocation(line: 97, column: 9, scope: !9751)
!9777 = !DILocation(line: 97, column: 2, scope: !9751)
!9778 = distinct !DISubprogram(name: "strlen", scope: !9648, file: !9648, line: 107, type: !9779, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!217, !256}
!9781 = !DILocalVariable(name: "s", arg: 1, scope: !9778, file: !9648, line: 107, type: !256)
!9782 = !DILocation(line: 107, column: 27, scope: !9778)
!9783 = !DILocalVariable(name: "n", scope: !9778, file: !9648, line: 109, type: !217)
!9784 = !DILocation(line: 109, column: 9, scope: !9778)
!9785 = !DILocation(line: 111, column: 2, scope: !9778)
!9786 = !DILocation(line: 111, column: 10, scope: !9778)
!9787 = !DILocation(line: 111, column: 9, scope: !9778)
!9788 = !DILocation(line: 111, column: 12, scope: !9778)
!9789 = !DILocation(line: 112, column: 4, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9778, file: !9648, line: 111, column: 21)
!9791 = !DILocation(line: 113, column: 4, scope: !9790)
!9792 = distinct !{!9792, !9785, !9793}
!9793 = !DILocation(line: 114, column: 2, scope: !9778)
!9794 = !DILocation(line: 116, column: 9, scope: !9778)
!9795 = !DILocation(line: 116, column: 2, scope: !9778)
!9796 = distinct !DISubprogram(name: "strnlen", scope: !9648, file: !9648, line: 126, type: !9797, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9797 = !DISubroutineType(types: !9798)
!9798 = !{!217, !256, !217}
!9799 = !DILocalVariable(name: "s", arg: 1, scope: !9796, file: !9648, line: 126, type: !256)
!9800 = !DILocation(line: 126, column: 28, scope: !9796)
!9801 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9796, file: !9648, line: 126, type: !217)
!9802 = !DILocation(line: 126, column: 38, scope: !9796)
!9803 = !DILocalVariable(name: "n", scope: !9796, file: !9648, line: 128, type: !217)
!9804 = !DILocation(line: 128, column: 9, scope: !9796)
!9805 = !DILocation(line: 130, column: 2, scope: !9796)
!9806 = !DILocation(line: 130, column: 10, scope: !9796)
!9807 = !DILocation(line: 130, column: 9, scope: !9796)
!9808 = !DILocation(line: 130, column: 12, scope: !9796)
!9809 = !DILocation(line: 130, column: 20, scope: !9796)
!9810 = !DILocation(line: 130, column: 23, scope: !9796)
!9811 = !DILocation(line: 130, column: 27, scope: !9796)
!9812 = !DILocation(line: 130, column: 25, scope: !9796)
!9813 = !DILocation(line: 0, scope: !9796)
!9814 = !DILocation(line: 131, column: 4, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9796, file: !9648, line: 130, column: 35)
!9816 = !DILocation(line: 132, column: 4, scope: !9815)
!9817 = distinct !{!9817, !9805, !9818}
!9818 = !DILocation(line: 133, column: 2, scope: !9796)
!9819 = !DILocation(line: 135, column: 9, scope: !9796)
!9820 = !DILocation(line: 135, column: 2, scope: !9796)
!9821 = distinct !DISubprogram(name: "strcmp", scope: !9648, file: !9648, line: 145, type: !9822, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9822 = !DISubroutineType(types: !9823)
!9823 = !{!103, !256, !256}
!9824 = !DILocalVariable(name: "s1", arg: 1, scope: !9821, file: !9648, line: 145, type: !256)
!9825 = !DILocation(line: 145, column: 24, scope: !9821)
!9826 = !DILocalVariable(name: "s2", arg: 2, scope: !9821, file: !9648, line: 145, type: !256)
!9827 = !DILocation(line: 145, column: 40, scope: !9821)
!9828 = !DILocation(line: 147, column: 2, scope: !9821)
!9829 = !DILocation(line: 147, column: 11, scope: !9821)
!9830 = !DILocation(line: 147, column: 10, scope: !9821)
!9831 = !DILocation(line: 147, column: 18, scope: !9821)
!9832 = !DILocation(line: 147, column: 17, scope: !9821)
!9833 = !DILocation(line: 147, column: 14, scope: !9821)
!9834 = !DILocation(line: 147, column: 22, scope: !9821)
!9835 = !DILocation(line: 147, column: 27, scope: !9821)
!9836 = !DILocation(line: 147, column: 26, scope: !9821)
!9837 = !DILocation(line: 147, column: 30, scope: !9821)
!9838 = !DILocation(line: 0, scope: !9821)
!9839 = !DILocation(line: 148, column: 5, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9821, file: !9648, line: 147, column: 40)
!9841 = !DILocation(line: 149, column: 5, scope: !9840)
!9842 = distinct !{!9842, !9828, !9843}
!9843 = !DILocation(line: 150, column: 2, scope: !9821)
!9844 = !DILocation(line: 152, column: 10, scope: !9821)
!9845 = !DILocation(line: 152, column: 9, scope: !9821)
!9846 = !DILocation(line: 152, column: 16, scope: !9821)
!9847 = !DILocation(line: 152, column: 15, scope: !9821)
!9848 = !DILocation(line: 152, column: 13, scope: !9821)
!9849 = !DILocation(line: 152, column: 2, scope: !9821)
!9850 = distinct !DISubprogram(name: "strncmp", scope: !9648, file: !9648, line: 162, type: !9851, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9851 = !DISubroutineType(types: !9852)
!9852 = !{!103, !256, !256, !217}
!9853 = !DILocalVariable(name: "s1", arg: 1, scope: !9850, file: !9648, line: 162, type: !256)
!9854 = !DILocation(line: 162, column: 25, scope: !9850)
!9855 = !DILocalVariable(name: "s2", arg: 2, scope: !9850, file: !9648, line: 162, type: !256)
!9856 = !DILocation(line: 162, column: 41, scope: !9850)
!9857 = !DILocalVariable(name: "n", arg: 3, scope: !9850, file: !9648, line: 162, type: !217)
!9858 = !DILocation(line: 162, column: 52, scope: !9850)
!9859 = !DILocation(line: 164, column: 2, scope: !9850)
!9860 = !DILocation(line: 164, column: 10, scope: !9850)
!9861 = !DILocation(line: 164, column: 12, scope: !9850)
!9862 = !DILocation(line: 164, column: 17, scope: !9850)
!9863 = !DILocation(line: 164, column: 22, scope: !9850)
!9864 = !DILocation(line: 164, column: 21, scope: !9850)
!9865 = !DILocation(line: 164, column: 29, scope: !9850)
!9866 = !DILocation(line: 164, column: 28, scope: !9850)
!9867 = !DILocation(line: 164, column: 25, scope: !9850)
!9868 = !DILocation(line: 164, column: 33, scope: !9850)
!9869 = !DILocation(line: 164, column: 38, scope: !9850)
!9870 = !DILocation(line: 164, column: 37, scope: !9850)
!9871 = !DILocation(line: 164, column: 41, scope: !9850)
!9872 = !DILocation(line: 0, scope: !9850)
!9873 = !DILocation(line: 165, column: 5, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9850, file: !9648, line: 164, column: 51)
!9875 = !DILocation(line: 166, column: 5, scope: !9874)
!9876 = !DILocation(line: 167, column: 4, scope: !9874)
!9877 = distinct !{!9877, !9859, !9878}
!9878 = !DILocation(line: 168, column: 2, scope: !9850)
!9879 = !DILocation(line: 170, column: 10, scope: !9850)
!9880 = !DILocation(line: 170, column: 12, scope: !9850)
!9881 = !DILocation(line: 170, column: 9, scope: !9850)
!9882 = !DILocation(line: 170, column: 26, scope: !9850)
!9883 = !DILocation(line: 170, column: 25, scope: !9850)
!9884 = !DILocation(line: 170, column: 32, scope: !9850)
!9885 = !DILocation(line: 170, column: 31, scope: !9850)
!9886 = !DILocation(line: 170, column: 29, scope: !9850)
!9887 = !DILocation(line: 170, column: 2, scope: !9850)
!9888 = distinct !DISubprogram(name: "strtok_r", scope: !9648, file: !9648, line: 180, type: !9889, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9889 = !DISubroutineType(types: !9890)
!9890 = !{!311, !311, !256, !9891}
!9891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!9892 = !DILocalVariable(name: "str", arg: 1, scope: !9888, file: !9648, line: 180, type: !311)
!9893 = !DILocation(line: 180, column: 22, scope: !9888)
!9894 = !DILocalVariable(name: "sep", arg: 2, scope: !9888, file: !9648, line: 180, type: !256)
!9895 = !DILocation(line: 180, column: 39, scope: !9888)
!9896 = !DILocalVariable(name: "state", arg: 3, scope: !9888, file: !9648, line: 180, type: !9891)
!9897 = !DILocation(line: 180, column: 51, scope: !9888)
!9898 = !DILocalVariable(name: "start", scope: !9888, file: !9648, line: 182, type: !311)
!9899 = !DILocation(line: 182, column: 8, scope: !9888)
!9900 = !DILocalVariable(name: "end", scope: !9888, file: !9648, line: 182, type: !311)
!9901 = !DILocation(line: 182, column: 16, scope: !9888)
!9902 = !DILocation(line: 184, column: 10, scope: !9888)
!9903 = !DILocation(line: 184, column: 16, scope: !9888)
!9904 = !DILocation(line: 184, column: 23, scope: !9888)
!9905 = !DILocation(line: 184, column: 22, scope: !9888)
!9906 = !DILocation(line: 184, column: 8, scope: !9888)
!9907 = !DILocation(line: 187, column: 2, scope: !9888)
!9908 = !DILocation(line: 187, column: 10, scope: !9888)
!9909 = !DILocation(line: 187, column: 9, scope: !9888)
!9910 = !DILocation(line: 187, column: 16, scope: !9888)
!9911 = !DILocation(line: 187, column: 26, scope: !9888)
!9912 = !DILocation(line: 187, column: 32, scope: !9888)
!9913 = !DILocation(line: 187, column: 31, scope: !9888)
!9914 = !DILocation(line: 187, column: 19, scope: !9888)
!9915 = !DILocation(line: 0, scope: !9888)
!9916 = !DILocation(line: 188, column: 8, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9888, file: !9648, line: 187, column: 40)
!9918 = distinct !{!9918, !9907, !9919}
!9919 = !DILocation(line: 189, column: 2, scope: !9888)
!9920 = !DILocation(line: 191, column: 7, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9888, file: !9648, line: 191, column: 6)
!9922 = !DILocation(line: 191, column: 6, scope: !9921)
!9923 = !DILocation(line: 191, column: 13, scope: !9921)
!9924 = !DILocation(line: 191, column: 6, scope: !9888)
!9925 = !DILocation(line: 192, column: 12, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9921, file: !9648, line: 191, column: 22)
!9927 = !DILocation(line: 192, column: 4, scope: !9926)
!9928 = !DILocation(line: 192, column: 10, scope: !9926)
!9929 = !DILocation(line: 193, column: 3, scope: !9926)
!9930 = !DILocation(line: 197, column: 8, scope: !9888)
!9931 = !DILocation(line: 197, column: 6, scope: !9888)
!9932 = !DILocation(line: 198, column: 2, scope: !9888)
!9933 = !DILocation(line: 198, column: 10, scope: !9888)
!9934 = !DILocation(line: 198, column: 9, scope: !9888)
!9935 = !DILocation(line: 198, column: 14, scope: !9888)
!9936 = !DILocation(line: 198, column: 25, scope: !9888)
!9937 = !DILocation(line: 198, column: 31, scope: !9888)
!9938 = !DILocation(line: 198, column: 30, scope: !9888)
!9939 = !DILocation(line: 198, column: 18, scope: !9888)
!9940 = !DILocation(line: 198, column: 17, scope: !9888)
!9941 = !DILocation(line: 199, column: 6, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9888, file: !9648, line: 198, column: 37)
!9943 = distinct !{!9943, !9932, !9944}
!9944 = !DILocation(line: 200, column: 2, scope: !9888)
!9945 = !DILocation(line: 202, column: 7, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9888, file: !9648, line: 202, column: 6)
!9947 = !DILocation(line: 202, column: 6, scope: !9946)
!9948 = !DILocation(line: 202, column: 11, scope: !9946)
!9949 = !DILocation(line: 202, column: 6, scope: !9888)
!9950 = !DILocation(line: 203, column: 4, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9946, file: !9648, line: 202, column: 20)
!9952 = !DILocation(line: 203, column: 8, scope: !9951)
!9953 = !DILocation(line: 204, column: 12, scope: !9951)
!9954 = !DILocation(line: 204, column: 16, scope: !9951)
!9955 = !DILocation(line: 204, column: 4, scope: !9951)
!9956 = !DILocation(line: 204, column: 10, scope: !9951)
!9957 = !DILocation(line: 205, column: 2, scope: !9951)
!9958 = !DILocation(line: 206, column: 12, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9946, file: !9648, line: 205, column: 9)
!9960 = !DILocation(line: 206, column: 4, scope: !9959)
!9961 = !DILocation(line: 206, column: 10, scope: !9959)
!9962 = !DILocation(line: 209, column: 9, scope: !9888)
!9963 = !DILocation(line: 209, column: 2, scope: !9888)
!9964 = !DILocation(line: 210, column: 1, scope: !9888)
!9965 = distinct !DISubprogram(name: "strcat", scope: !9648, file: !9648, line: 212, type: !9649, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9966 = !DILocalVariable(name: "dest", arg: 1, scope: !9965, file: !9648, line: 212, type: !9651)
!9967 = !DILocation(line: 212, column: 30, scope: !9965)
!9968 = !DILocalVariable(name: "src", arg: 2, scope: !9965, file: !9648, line: 212, type: !9652)
!9969 = !DILocation(line: 212, column: 58, scope: !9965)
!9970 = !DILocation(line: 214, column: 9, scope: !9965)
!9971 = !DILocation(line: 214, column: 23, scope: !9965)
!9972 = !DILocation(line: 214, column: 16, scope: !9965)
!9973 = !DILocation(line: 214, column: 14, scope: !9965)
!9974 = !DILocation(line: 214, column: 30, scope: !9965)
!9975 = !DILocation(line: 214, column: 2, scope: !9965)
!9976 = !DILocation(line: 215, column: 9, scope: !9965)
!9977 = !DILocation(line: 215, column: 2, scope: !9965)
!9978 = distinct !DISubprogram(name: "strncat", scope: !9648, file: !9648, line: 218, type: !9678, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!9979 = !DILocalVariable(name: "dest", arg: 1, scope: !9978, file: !9648, line: 218, type: !9651)
!9980 = !DILocation(line: 218, column: 31, scope: !9978)
!9981 = !DILocalVariable(name: "src", arg: 2, scope: !9978, file: !9648, line: 218, type: !9652)
!9982 = !DILocation(line: 218, column: 59, scope: !9978)
!9983 = !DILocalVariable(name: "n", arg: 3, scope: !9978, file: !9648, line: 219, type: !217)
!9984 = !DILocation(line: 219, column: 15, scope: !9978)
!9985 = !DILocalVariable(name: "orig_dest", scope: !9978, file: !9648, line: 221, type: !311)
!9986 = !DILocation(line: 221, column: 8, scope: !9978)
!9987 = !DILocation(line: 221, column: 20, scope: !9978)
!9988 = !DILocalVariable(name: "len", scope: !9978, file: !9648, line: 222, type: !217)
!9989 = !DILocation(line: 222, column: 9, scope: !9978)
!9990 = !DILocation(line: 222, column: 22, scope: !9978)
!9991 = !DILocation(line: 222, column: 15, scope: !9978)
!9992 = !DILocation(line: 224, column: 10, scope: !9978)
!9993 = !DILocation(line: 224, column: 7, scope: !9978)
!9994 = !DILocation(line: 225, column: 2, scope: !9978)
!9995 = !DILocation(line: 225, column: 11, scope: !9978)
!9996 = !DILocation(line: 225, column: 14, scope: !9978)
!9997 = !DILocation(line: 225, column: 19, scope: !9978)
!9998 = !DILocation(line: 225, column: 24, scope: !9978)
!9999 = !DILocation(line: 225, column: 23, scope: !9978)
!10000 = !DILocation(line: 225, column: 28, scope: !9978)
!10001 = !DILocation(line: 0, scope: !9978)
!10002 = !DILocation(line: 226, column: 17, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9978, file: !9648, line: 225, column: 38)
!10004 = !DILocation(line: 226, column: 13, scope: !10003)
!10005 = !DILocation(line: 226, column: 8, scope: !10003)
!10006 = !DILocation(line: 226, column: 11, scope: !10003)
!10007 = distinct !{!10007, !9994, !10008}
!10008 = !DILocation(line: 227, column: 2, scope: !9978)
!10009 = !DILocation(line: 228, column: 3, scope: !9978)
!10010 = !DILocation(line: 228, column: 8, scope: !9978)
!10011 = !DILocation(line: 230, column: 9, scope: !9978)
!10012 = !DILocation(line: 230, column: 2, scope: !9978)
!10013 = distinct !DISubprogram(name: "memcmp", scope: !9648, file: !9648, line: 239, type: !10014, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!103, !13, !13, !217}
!10016 = !DILocalVariable(name: "m1", arg: 1, scope: !10013, file: !9648, line: 239, type: !13)
!10017 = !DILocation(line: 239, column: 24, scope: !10013)
!10018 = !DILocalVariable(name: "m2", arg: 2, scope: !10013, file: !9648, line: 239, type: !13)
!10019 = !DILocation(line: 239, column: 40, scope: !10013)
!10020 = !DILocalVariable(name: "n", arg: 3, scope: !10013, file: !9648, line: 239, type: !217)
!10021 = !DILocation(line: 239, column: 51, scope: !10013)
!10022 = !DILocalVariable(name: "c1", scope: !10013, file: !9648, line: 241, type: !256)
!10023 = !DILocation(line: 241, column: 14, scope: !10013)
!10024 = !DILocation(line: 241, column: 19, scope: !10013)
!10025 = !DILocalVariable(name: "c2", scope: !10013, file: !9648, line: 242, type: !256)
!10026 = !DILocation(line: 242, column: 14, scope: !10013)
!10027 = !DILocation(line: 242, column: 19, scope: !10013)
!10028 = !DILocation(line: 244, column: 7, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10013, file: !9648, line: 244, column: 6)
!10030 = !DILocation(line: 244, column: 6, scope: !10013)
!10031 = !DILocation(line: 245, column: 3, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10029, file: !9648, line: 244, column: 10)
!10033 = !DILocation(line: 248, column: 2, scope: !10013)
!10034 = !DILocation(line: 248, column: 10, scope: !10013)
!10035 = !DILocation(line: 248, column: 14, scope: !10013)
!10036 = !DILocation(line: 248, column: 19, scope: !10013)
!10037 = !DILocation(line: 248, column: 24, scope: !10013)
!10038 = !DILocation(line: 248, column: 23, scope: !10013)
!10039 = !DILocation(line: 248, column: 31, scope: !10013)
!10040 = !DILocation(line: 248, column: 30, scope: !10013)
!10041 = !DILocation(line: 248, column: 27, scope: !10013)
!10042 = !DILocation(line: 0, scope: !10013)
!10043 = !DILocation(line: 249, column: 5, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10013, file: !9648, line: 248, column: 36)
!10045 = !DILocation(line: 250, column: 5, scope: !10044)
!10046 = distinct !{!10046, !10033, !10047}
!10047 = !DILocation(line: 251, column: 2, scope: !10013)
!10048 = !DILocation(line: 253, column: 10, scope: !10013)
!10049 = !DILocation(line: 253, column: 9, scope: !10013)
!10050 = !DILocation(line: 253, column: 16, scope: !10013)
!10051 = !DILocation(line: 253, column: 15, scope: !10013)
!10052 = !DILocation(line: 253, column: 13, scope: !10013)
!10053 = !DILocation(line: 253, column: 2, scope: !10013)
!10054 = !DILocation(line: 254, column: 1, scope: !10013)
!10055 = distinct !DISubprogram(name: "memmove", scope: !9648, file: !9648, line: 263, type: !10056, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!102, !102, !13, !217}
!10058 = !DILocalVariable(name: "d", arg: 1, scope: !10055, file: !9648, line: 263, type: !102)
!10059 = !DILocation(line: 263, column: 21, scope: !10055)
!10060 = !DILocalVariable(name: "s", arg: 2, scope: !10055, file: !9648, line: 263, type: !13)
!10061 = !DILocation(line: 263, column: 36, scope: !10055)
!10062 = !DILocalVariable(name: "n", arg: 3, scope: !10055, file: !9648, line: 263, type: !217)
!10063 = !DILocation(line: 263, column: 46, scope: !10055)
!10064 = !DILocalVariable(name: "dest", scope: !10055, file: !9648, line: 265, type: !311)
!10065 = !DILocation(line: 265, column: 8, scope: !10055)
!10066 = !DILocation(line: 265, column: 15, scope: !10055)
!10067 = !DILocalVariable(name: "src", scope: !10055, file: !9648, line: 266, type: !256)
!10068 = !DILocation(line: 266, column: 14, scope: !10055)
!10069 = !DILocation(line: 266, column: 21, scope: !10055)
!10070 = !DILocation(line: 268, column: 16, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10055, file: !9648, line: 268, column: 6)
!10072 = !DILocation(line: 268, column: 23, scope: !10071)
!10073 = !DILocation(line: 268, column: 21, scope: !10071)
!10074 = !DILocation(line: 268, column: 30, scope: !10071)
!10075 = !DILocation(line: 268, column: 28, scope: !10071)
!10076 = !DILocation(line: 268, column: 6, scope: !10055)
!10077 = !DILocation(line: 274, column: 3, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10071, file: !9648, line: 268, column: 33)
!10079 = !DILocation(line: 274, column: 10, scope: !10078)
!10080 = !DILocation(line: 274, column: 12, scope: !10078)
!10081 = !DILocation(line: 275, column: 5, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10078, file: !9648, line: 274, column: 17)
!10083 = !DILocation(line: 276, column: 14, scope: !10082)
!10084 = !DILocation(line: 276, column: 18, scope: !10082)
!10085 = !DILocation(line: 276, column: 4, scope: !10082)
!10086 = !DILocation(line: 276, column: 9, scope: !10082)
!10087 = !DILocation(line: 276, column: 12, scope: !10082)
!10088 = distinct !{!10088, !10077, !10089}
!10089 = !DILocation(line: 277, column: 3, scope: !10078)
!10090 = !DILocation(line: 278, column: 2, scope: !10078)
!10091 = !DILocation(line: 280, column: 3, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10071, file: !9648, line: 278, column: 9)
!10093 = !DILocation(line: 280, column: 10, scope: !10092)
!10094 = !DILocation(line: 280, column: 12, scope: !10092)
!10095 = !DILocation(line: 281, column: 13, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10092, file: !9648, line: 280, column: 17)
!10097 = !DILocation(line: 281, column: 12, scope: !10096)
!10098 = !DILocation(line: 281, column: 5, scope: !10096)
!10099 = !DILocation(line: 281, column: 10, scope: !10096)
!10100 = !DILocation(line: 282, column: 8, scope: !10096)
!10101 = !DILocation(line: 283, column: 7, scope: !10096)
!10102 = !DILocation(line: 284, column: 5, scope: !10096)
!10103 = distinct !{!10103, !10091, !10104}
!10104 = !DILocation(line: 285, column: 3, scope: !10092)
!10105 = !DILocation(line: 288, column: 9, scope: !10055)
!10106 = !DILocation(line: 288, column: 2, scope: !10055)
!10107 = distinct !DISubprogram(name: "memcpy", scope: !9648, file: !9648, line: 298, type: !10108, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{!102, !10110, !10111, !217}
!10110 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!10111 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!10112 = !DILocalVariable(name: "d", arg: 1, scope: !10107, file: !9648, line: 298, type: !10110)
!10113 = !DILocation(line: 298, column: 30, scope: !10107)
!10114 = !DILocalVariable(name: "s", arg: 2, scope: !10107, file: !9648, line: 298, type: !10111)
!10115 = !DILocation(line: 298, column: 55, scope: !10107)
!10116 = !DILocalVariable(name: "n", arg: 3, scope: !10107, file: !9648, line: 298, type: !217)
!10117 = !DILocation(line: 298, column: 65, scope: !10107)
!10118 = !DILocalVariable(name: "d_byte", scope: !10107, file: !9648, line: 302, type: !990)
!10119 = !DILocation(line: 302, column: 17, scope: !10107)
!10120 = !DILocation(line: 302, column: 43, scope: !10107)
!10121 = !DILocalVariable(name: "s_byte", scope: !10107, file: !9648, line: 303, type: !2706)
!10122 = !DILocation(line: 303, column: 23, scope: !10107)
!10123 = !DILocation(line: 303, column: 55, scope: !10107)
!10124 = !DILocalVariable(name: "mask", scope: !10107, file: !9648, line: 306, type: !10125)
!10125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!10126 = !DILocation(line: 306, column: 18, scope: !10107)
!10127 = !DILocation(line: 308, column: 19, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10107, file: !9648, line: 308, column: 6)
!10129 = !DILocation(line: 308, column: 8, scope: !10128)
!10130 = !DILocation(line: 308, column: 34, scope: !10128)
!10131 = !DILocation(line: 308, column: 23, scope: !10128)
!10132 = !DILocation(line: 308, column: 21, scope: !10128)
!10133 = !DILocation(line: 308, column: 42, scope: !10128)
!10134 = !DILocation(line: 308, column: 50, scope: !10128)
!10135 = !DILocation(line: 308, column: 6, scope: !10107)
!10136 = !DILocation(line: 312, column: 3, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10128, file: !9648, line: 308, column: 56)
!10138 = !DILocation(line: 312, column: 22, scope: !10137)
!10139 = !DILocation(line: 312, column: 11, scope: !10137)
!10140 = !DILocation(line: 312, column: 30, scope: !10137)
!10141 = !DILocation(line: 313, column: 8, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !9648, line: 313, column: 8)
!10143 = distinct !DILexicalBlock(scope: !10137, file: !9648, line: 312, column: 38)
!10144 = !DILocation(line: 313, column: 10, scope: !10142)
!10145 = !DILocation(line: 313, column: 8, scope: !10143)
!10146 = !DILocation(line: 314, column: 12, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10142, file: !9648, line: 313, column: 16)
!10148 = !DILocation(line: 314, column: 5, scope: !10147)
!10149 = !DILocation(line: 316, column: 26, scope: !10143)
!10150 = !DILocation(line: 316, column: 18, scope: !10143)
!10151 = !DILocation(line: 316, column: 12, scope: !10143)
!10152 = !DILocation(line: 316, column: 16, scope: !10143)
!10153 = !DILocation(line: 317, column: 5, scope: !10143)
!10154 = distinct !{!10154, !10136, !10155}
!10155 = !DILocation(line: 318, column: 3, scope: !10137)
!10156 = !DILocalVariable(name: "d_word", scope: !10137, file: !9648, line: 322, type: !2708)
!10157 = !DILocation(line: 322, column: 15, scope: !10137)
!10158 = !DILocation(line: 322, column: 38, scope: !10137)
!10159 = !DILocation(line: 322, column: 24, scope: !10137)
!10160 = !DILocalVariable(name: "s_word", scope: !10137, file: !9648, line: 323, type: !2711)
!10161 = !DILocation(line: 323, column: 21, scope: !10137)
!10162 = !DILocation(line: 323, column: 50, scope: !10137)
!10163 = !DILocation(line: 323, column: 30, scope: !10137)
!10164 = !DILocation(line: 325, column: 3, scope: !10137)
!10165 = !DILocation(line: 325, column: 10, scope: !10137)
!10166 = !DILocation(line: 325, column: 12, scope: !10137)
!10167 = !DILocation(line: 326, column: 26, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10137, file: !9648, line: 325, column: 35)
!10169 = !DILocation(line: 326, column: 18, scope: !10168)
!10170 = !DILocation(line: 326, column: 12, scope: !10168)
!10171 = !DILocation(line: 326, column: 16, scope: !10168)
!10172 = !DILocation(line: 327, column: 6, scope: !10168)
!10173 = distinct !{!10173, !10164, !10174}
!10174 = !DILocation(line: 328, column: 3, scope: !10137)
!10175 = !DILocation(line: 330, column: 29, scope: !10137)
!10176 = !DILocation(line: 330, column: 12, scope: !10137)
!10177 = !DILocation(line: 330, column: 10, scope: !10137)
!10178 = !DILocation(line: 331, column: 29, scope: !10137)
!10179 = !DILocation(line: 331, column: 12, scope: !10137)
!10180 = !DILocation(line: 331, column: 10, scope: !10137)
!10181 = !DILocation(line: 332, column: 2, scope: !10137)
!10182 = !DILocation(line: 337, column: 2, scope: !10107)
!10183 = !DILocation(line: 337, column: 9, scope: !10107)
!10184 = !DILocation(line: 337, column: 11, scope: !10107)
!10185 = !DILocation(line: 338, column: 25, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10107, file: !9648, line: 337, column: 16)
!10187 = !DILocation(line: 338, column: 17, scope: !10186)
!10188 = !DILocation(line: 338, column: 11, scope: !10186)
!10189 = !DILocation(line: 338, column: 15, scope: !10186)
!10190 = !DILocation(line: 339, column: 4, scope: !10186)
!10191 = distinct !{!10191, !10182, !10192}
!10192 = !DILocation(line: 340, column: 2, scope: !10107)
!10193 = !DILocation(line: 342, column: 9, scope: !10107)
!10194 = !DILocation(line: 342, column: 2, scope: !10107)
!10195 = !DILocation(line: 343, column: 1, scope: !10107)
!10196 = distinct !DISubprogram(name: "memset", scope: !9648, file: !9648, line: 352, type: !10197, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!10197 = !DISubroutineType(types: !10198)
!10198 = !{!102, !102, !103, !217}
!10199 = !DILocalVariable(name: "buf", arg: 1, scope: !10196, file: !9648, line: 352, type: !102)
!10200 = !DILocation(line: 352, column: 20, scope: !10196)
!10201 = !DILocalVariable(name: "c", arg: 2, scope: !10196, file: !9648, line: 352, type: !103)
!10202 = !DILocation(line: 352, column: 29, scope: !10196)
!10203 = !DILocalVariable(name: "n", arg: 3, scope: !10196, file: !9648, line: 352, type: !217)
!10204 = !DILocation(line: 352, column: 39, scope: !10196)
!10205 = !DILocalVariable(name: "d_byte", scope: !10196, file: !9648, line: 356, type: !990)
!10206 = !DILocation(line: 356, column: 17, scope: !10196)
!10207 = !DILocation(line: 356, column: 43, scope: !10196)
!10208 = !DILocalVariable(name: "c_byte", scope: !10196, file: !9648, line: 357, type: !157)
!10209 = !DILocation(line: 357, column: 16, scope: !10196)
!10210 = !DILocation(line: 357, column: 40, scope: !10196)
!10211 = !DILocation(line: 357, column: 25, scope: !10196)
!10212 = !DILocation(line: 360, column: 2, scope: !10196)
!10213 = !DILocation(line: 360, column: 21, scope: !10196)
!10214 = !DILocation(line: 360, column: 10, scope: !10196)
!10215 = !DILocation(line: 360, column: 29, scope: !10196)
!10216 = !DILocation(line: 361, column: 7, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !9648, line: 361, column: 7)
!10218 = distinct !DILexicalBlock(scope: !10196, file: !9648, line: 360, column: 57)
!10219 = !DILocation(line: 361, column: 9, scope: !10217)
!10220 = !DILocation(line: 361, column: 7, scope: !10218)
!10221 = !DILocation(line: 362, column: 11, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10217, file: !9648, line: 361, column: 15)
!10223 = !DILocation(line: 362, column: 4, scope: !10222)
!10224 = !DILocation(line: 364, column: 17, scope: !10218)
!10225 = !DILocation(line: 364, column: 11, scope: !10218)
!10226 = !DILocation(line: 364, column: 15, scope: !10218)
!10227 = !DILocation(line: 365, column: 4, scope: !10218)
!10228 = distinct !{!10228, !10212, !10229}
!10229 = !DILocation(line: 366, column: 2, scope: !10196)
!10230 = !DILocalVariable(name: "d_word", scope: !10196, file: !9648, line: 370, type: !2708)
!10231 = !DILocation(line: 370, column: 14, scope: !10196)
!10232 = !DILocation(line: 370, column: 37, scope: !10196)
!10233 = !DILocation(line: 370, column: 23, scope: !10196)
!10234 = !DILocalVariable(name: "c_word", scope: !10196, file: !9648, line: 371, type: !2709)
!10235 = !DILocation(line: 371, column: 13, scope: !10196)
!10236 = !DILocation(line: 371, column: 34, scope: !10196)
!10237 = !DILocation(line: 371, column: 22, scope: !10196)
!10238 = !DILocation(line: 373, column: 12, scope: !10196)
!10239 = !DILocation(line: 373, column: 19, scope: !10196)
!10240 = !DILocation(line: 373, column: 9, scope: !10196)
!10241 = !DILocation(line: 374, column: 12, scope: !10196)
!10242 = !DILocation(line: 374, column: 19, scope: !10196)
!10243 = !DILocation(line: 374, column: 9, scope: !10196)
!10244 = !DILocation(line: 379, column: 2, scope: !10196)
!10245 = !DILocation(line: 379, column: 9, scope: !10196)
!10246 = !DILocation(line: 379, column: 11, scope: !10196)
!10247 = !DILocation(line: 380, column: 17, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10196, file: !9648, line: 379, column: 34)
!10249 = !DILocation(line: 380, column: 11, scope: !10248)
!10250 = !DILocation(line: 380, column: 15, scope: !10248)
!10251 = !DILocation(line: 381, column: 5, scope: !10248)
!10252 = distinct !{!10252, !10244, !10253}
!10253 = !DILocation(line: 382, column: 2, scope: !10196)
!10254 = !DILocation(line: 386, column: 28, scope: !10196)
!10255 = !DILocation(line: 386, column: 11, scope: !10196)
!10256 = !DILocation(line: 386, column: 9, scope: !10196)
!10257 = !DILocation(line: 389, column: 2, scope: !10196)
!10258 = !DILocation(line: 389, column: 9, scope: !10196)
!10259 = !DILocation(line: 389, column: 11, scope: !10196)
!10260 = !DILocation(line: 390, column: 17, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10196, file: !9648, line: 389, column: 16)
!10262 = !DILocation(line: 390, column: 11, scope: !10261)
!10263 = !DILocation(line: 390, column: 15, scope: !10261)
!10264 = !DILocation(line: 391, column: 4, scope: !10261)
!10265 = distinct !{!10265, !10257, !10266}
!10266 = !DILocation(line: 392, column: 2, scope: !10196)
!10267 = !DILocation(line: 394, column: 9, scope: !10196)
!10268 = !DILocation(line: 394, column: 2, scope: !10196)
!10269 = !DILocation(line: 395, column: 1, scope: !10196)
!10270 = distinct !DISubprogram(name: "memchr", scope: !9648, file: !9648, line: 404, type: !10271, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2703, retainedNodes: !223)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!102, !13, !103, !217}
!10273 = !DILocalVariable(name: "s", arg: 1, scope: !10270, file: !9648, line: 404, type: !13)
!10274 = !DILocation(line: 404, column: 26, scope: !10270)
!10275 = !DILocalVariable(name: "c", arg: 2, scope: !10270, file: !9648, line: 404, type: !103)
!10276 = !DILocation(line: 404, column: 33, scope: !10270)
!10277 = !DILocalVariable(name: "n", arg: 3, scope: !10270, file: !9648, line: 404, type: !217)
!10278 = !DILocation(line: 404, column: 43, scope: !10270)
!10279 = !DILocation(line: 406, column: 6, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10270, file: !9648, line: 406, column: 6)
!10281 = !DILocation(line: 406, column: 8, scope: !10280)
!10282 = !DILocation(line: 406, column: 6, scope: !10270)
!10283 = !DILocalVariable(name: "p", scope: !10284, file: !9648, line: 407, type: !2706)
!10284 = distinct !DILexicalBlock(scope: !10280, file: !9648, line: 406, column: 14)
!10285 = !DILocation(line: 407, column: 24, scope: !10284)
!10286 = !DILocation(line: 407, column: 28, scope: !10284)
!10287 = !DILocation(line: 409, column: 3, scope: !10284)
!10288 = !DILocation(line: 410, column: 10, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10290, file: !9648, line: 410, column: 8)
!10290 = distinct !DILexicalBlock(scope: !10284, file: !9648, line: 409, column: 6)
!10291 = !DILocation(line: 410, column: 8, scope: !10289)
!10292 = !DILocation(line: 410, column: 31, scope: !10289)
!10293 = !DILocation(line: 410, column: 16, scope: !10289)
!10294 = !DILocation(line: 410, column: 13, scope: !10289)
!10295 = !DILocation(line: 410, column: 8, scope: !10290)
!10296 = !DILocation(line: 411, column: 22, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10289, file: !9648, line: 410, column: 34)
!10298 = !DILocation(line: 411, column: 24, scope: !10297)
!10299 = !DILocation(line: 411, column: 5, scope: !10297)
!10300 = !DILocation(line: 414, column: 3, scope: !10290)
!10301 = !DILocation(line: 414, column: 12, scope: !10284)
!10302 = !DILocation(line: 414, column: 16, scope: !10284)
!10303 = distinct !{!10303, !10287, !10304}
!10304 = !DILocation(line: 414, column: 20, scope: !10284)
!10305 = !DILocation(line: 415, column: 2, scope: !10284)
!10306 = !DILocation(line: 417, column: 2, scope: !10270)
!10307 = !DILocation(line: 418, column: 1, scope: !10270)
!10308 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !433, file: !433, line: 23, type: !3109, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10309 = !DILocalVariable(name: "hook", arg: 1, scope: !10308, file: !433, line: 23, type: !273)
!10310 = !DILocation(line: 23, column: 34, scope: !10308)
!10311 = !DILocation(line: 25, column: 17, scope: !10308)
!10312 = !DILocation(line: 25, column: 15, scope: !10308)
!10313 = !DILocation(line: 26, column: 1, scope: !10308)
!10314 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !433, file: !433, line: 14, type: !274, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10315 = !DILocalVariable(name: "c", arg: 1, scope: !10314, file: !433, line: 14, type: !103)
!10316 = !DILocation(line: 14, column: 37, scope: !10314)
!10317 = !DILocation(line: 16, column: 9, scope: !10314)
!10318 = !DILocation(line: 18, column: 2, scope: !10314)
!10319 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !433, file: !433, line: 28, type: !10320, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10320 = !DISubroutineType(types: !10321)
!10321 = !{!103, !103, !429}
!10322 = !DILocalVariable(name: "c", arg: 1, scope: !10319, file: !433, line: 28, type: !103)
!10323 = !DILocation(line: 28, column: 29, scope: !10319)
!10324 = !DILocalVariable(name: "stream", arg: 2, scope: !10319, file: !433, line: 28, type: !429)
!10325 = !DILocation(line: 28, column: 38, scope: !10319)
!10326 = !DILocation(line: 30, column: 10, scope: !10319)
!10327 = !DILocation(line: 30, column: 17, scope: !10319)
!10328 = !DILocation(line: 30, column: 27, scope: !10319)
!10329 = !DILocation(line: 30, column: 30, scope: !10319)
!10330 = !DILocation(line: 30, column: 37, scope: !10319)
!10331 = !DILocation(line: 30, column: 9, scope: !10319)
!10332 = !DILocation(line: 30, column: 50, scope: !10319)
!10333 = !DILocation(line: 30, column: 63, scope: !10319)
!10334 = !DILocation(line: 30, column: 2, scope: !10319)
!10335 = distinct !DISubprogram(name: "fputc", scope: !433, file: !433, line: 41, type: !10320, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10336 = !DILocalVariable(name: "c", arg: 1, scope: !10335, file: !433, line: 41, type: !103)
!10337 = !DILocation(line: 41, column: 15, scope: !10335)
!10338 = !DILocalVariable(name: "stream", arg: 2, scope: !10335, file: !433, line: 41, type: !429)
!10339 = !DILocation(line: 41, column: 24, scope: !10335)
!10340 = !DILocation(line: 43, column: 22, scope: !10335)
!10341 = !DILocation(line: 43, column: 25, scope: !10335)
!10342 = !DILocation(line: 43, column: 9, scope: !10335)
!10343 = !DILocation(line: 43, column: 2, scope: !10335)
!10344 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10345, file: !10345, line: 72, type: !10320, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10345 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!10346 = !DILocalVariable(name: "c", arg: 1, scope: !10344, file: !10345, line: 72, type: !103)
!10347 = !DILocation(line: 72, column: 36, scope: !10344)
!10348 = !DILocalVariable(name: "stream", arg: 2, scope: !10344, file: !10345, line: 72, type: !429)
!10349 = !DILocation(line: 72, column: 46, scope: !10344)
!10350 = !DILocation(line: 81, column: 2, scope: !10344)
!10351 = !DILocation(line: 81, column: 2, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10344, file: !10345, line: 81, column: 2)
!10353 = !{i64 2149696708}
!10354 = !DILocation(line: 82, column: 29, scope: !10344)
!10355 = !DILocation(line: 82, column: 32, scope: !10344)
!10356 = !DILocation(line: 82, column: 9, scope: !10344)
!10357 = !DILocation(line: 82, column: 2, scope: !10344)
!10358 = distinct !DISubprogram(name: "fputs", scope: !433, file: !433, line: 46, type: !10359, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10359 = !DISubroutineType(types: !10360)
!10360 = !{!103, !9652, !10361}
!10361 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !429)
!10362 = !DILocalVariable(name: "s", arg: 1, scope: !10358, file: !433, line: 46, type: !9652)
!10363 = !DILocation(line: 46, column: 33, scope: !10358)
!10364 = !DILocalVariable(name: "stream", arg: 2, scope: !10358, file: !433, line: 46, type: !10361)
!10365 = !DILocation(line: 46, column: 52, scope: !10358)
!10366 = !DILocalVariable(name: "len", scope: !10358, file: !433, line: 48, type: !103)
!10367 = !DILocation(line: 48, column: 6, scope: !10358)
!10368 = !DILocation(line: 48, column: 19, scope: !10358)
!10369 = !DILocation(line: 48, column: 12, scope: !10358)
!10370 = !DILocalVariable(name: "ret", scope: !10358, file: !433, line: 49, type: !103)
!10371 = !DILocation(line: 49, column: 6, scope: !10358)
!10372 = !DILocation(line: 51, column: 15, scope: !10358)
!10373 = !DILocation(line: 51, column: 21, scope: !10358)
!10374 = !DILocation(line: 51, column: 26, scope: !10358)
!10375 = !DILocation(line: 51, column: 8, scope: !10358)
!10376 = !DILocation(line: 51, column: 6, scope: !10358)
!10377 = !DILocation(line: 53, column: 9, scope: !10358)
!10378 = !DILocation(line: 53, column: 16, scope: !10358)
!10379 = !DILocation(line: 53, column: 13, scope: !10358)
!10380 = !DILocation(line: 53, column: 2, scope: !10358)
!10381 = distinct !DISubprogram(name: "fwrite", scope: !433, file: !433, line: 99, type: !10382, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10382 = !DISubroutineType(types: !10383)
!10383 = !{!217, !10111, !217, !217, !10361}
!10384 = !DILocalVariable(name: "ptr", arg: 1, scope: !10381, file: !433, line: 99, type: !10111)
!10385 = !DILocation(line: 99, column: 37, scope: !10381)
!10386 = !DILocalVariable(name: "size", arg: 2, scope: !10381, file: !433, line: 99, type: !217)
!10387 = !DILocation(line: 99, column: 49, scope: !10381)
!10388 = !DILocalVariable(name: "nitems", arg: 3, scope: !10381, file: !433, line: 99, type: !217)
!10389 = !DILocation(line: 99, column: 62, scope: !10381)
!10390 = !DILocalVariable(name: "stream", arg: 4, scope: !10381, file: !433, line: 100, type: !10361)
!10391 = !DILocation(line: 100, column: 22, scope: !10381)
!10392 = !DILocation(line: 102, column: 23, scope: !10381)
!10393 = !DILocation(line: 102, column: 28, scope: !10381)
!10394 = !DILocation(line: 102, column: 34, scope: !10381)
!10395 = !DILocation(line: 102, column: 42, scope: !10381)
!10396 = !DILocation(line: 102, column: 9, scope: !10381)
!10397 = !DILocation(line: 102, column: 2, scope: !10381)
!10398 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10345, file: !10345, line: 96, type: !10382, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10399 = !DILocalVariable(name: "ptr", arg: 1, scope: !10398, file: !10345, line: 96, type: !10111)
!10400 = !DILocation(line: 96, column: 58, scope: !10398)
!10401 = !DILocalVariable(name: "size", arg: 2, scope: !10398, file: !10345, line: 96, type: !217)
!10402 = !DILocation(line: 96, column: 70, scope: !10398)
!10403 = !DILocalVariable(name: "nitems", arg: 3, scope: !10398, file: !10345, line: 96, type: !217)
!10404 = !DILocation(line: 96, column: 83, scope: !10398)
!10405 = !DILocalVariable(name: "stream", arg: 4, scope: !10398, file: !10345, line: 96, type: !10361)
!10406 = !DILocation(line: 96, column: 107, scope: !10398)
!10407 = !DILocation(line: 107, column: 2, scope: !10398)
!10408 = !DILocation(line: 107, column: 2, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10398, file: !10345, line: 107, column: 2)
!10410 = !{i64 2149696812}
!10411 = !DILocation(line: 108, column: 30, scope: !10398)
!10412 = !DILocation(line: 108, column: 35, scope: !10398)
!10413 = !DILocation(line: 108, column: 41, scope: !10398)
!10414 = !DILocation(line: 108, column: 49, scope: !10398)
!10415 = !DILocation(line: 108, column: 9, scope: !10398)
!10416 = !DILocation(line: 108, column: 2, scope: !10398)
!10417 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !433, file: !433, line: 56, type: !10382, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10418 = !DILocalVariable(name: "ptr", arg: 1, scope: !10417, file: !433, line: 56, type: !10111)
!10419 = !DILocation(line: 56, column: 51, scope: !10417)
!10420 = !DILocalVariable(name: "size", arg: 2, scope: !10417, file: !433, line: 56, type: !217)
!10421 = !DILocation(line: 56, column: 63, scope: !10417)
!10422 = !DILocalVariable(name: "nitems", arg: 3, scope: !10417, file: !433, line: 57, type: !217)
!10423 = !DILocation(line: 57, column: 15, scope: !10417)
!10424 = !DILocalVariable(name: "stream", arg: 4, scope: !10417, file: !433, line: 57, type: !10361)
!10425 = !DILocation(line: 57, column: 39, scope: !10417)
!10426 = !DILocalVariable(name: "i", scope: !10417, file: !433, line: 59, type: !217)
!10427 = !DILocation(line: 59, column: 9, scope: !10417)
!10428 = !DILocalVariable(name: "j", scope: !10417, file: !433, line: 60, type: !217)
!10429 = !DILocation(line: 60, column: 9, scope: !10417)
!10430 = !DILocalVariable(name: "p", scope: !10417, file: !433, line: 61, type: !2706)
!10431 = !DILocation(line: 61, column: 23, scope: !10417)
!10432 = !DILocation(line: 63, column: 7, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10417, file: !433, line: 63, column: 6)
!10434 = !DILocation(line: 63, column: 14, scope: !10433)
!10435 = !DILocation(line: 63, column: 24, scope: !10433)
!10436 = !DILocation(line: 63, column: 27, scope: !10433)
!10437 = !DILocation(line: 63, column: 34, scope: !10433)
!10438 = !DILocation(line: 63, column: 45, scope: !10433)
!10439 = !DILocation(line: 64, column: 7, scope: !10433)
!10440 = !DILocation(line: 64, column: 14, scope: !10433)
!10441 = !DILocation(line: 64, column: 20, scope: !10433)
!10442 = !DILocation(line: 64, column: 24, scope: !10433)
!10443 = !DILocation(line: 64, column: 29, scope: !10433)
!10444 = !DILocation(line: 63, column: 6, scope: !10417)
!10445 = !DILocation(line: 65, column: 3, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10433, file: !433, line: 64, column: 36)
!10447 = !DILocation(line: 68, column: 6, scope: !10417)
!10448 = !DILocation(line: 68, column: 4, scope: !10417)
!10449 = !DILocation(line: 69, column: 6, scope: !10417)
!10450 = !DILocation(line: 69, column: 4, scope: !10417)
!10451 = !DILocation(line: 70, column: 2, scope: !10417)
!10452 = !DILocation(line: 71, column: 7, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10417, file: !433, line: 70, column: 5)
!10454 = !DILocation(line: 71, column: 5, scope: !10453)
!10455 = !DILocation(line: 72, column: 3, scope: !10453)
!10456 = !DILocation(line: 73, column: 8, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !433, line: 73, column: 8)
!10458 = distinct !DILexicalBlock(scope: !10453, file: !433, line: 72, column: 6)
!10459 = !DILocation(line: 73, column: 29, scope: !10457)
!10460 = !DILocation(line: 73, column: 27, scope: !10457)
!10461 = !DILocation(line: 73, column: 21, scope: !10457)
!10462 = !DILocation(line: 73, column: 33, scope: !10457)
!10463 = !DILocation(line: 73, column: 8, scope: !10458)
!10464 = !DILocation(line: 74, column: 5, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10457, file: !433, line: 73, column: 41)
!10466 = !DILocation(line: 76, column: 5, scope: !10458)
!10467 = !DILocation(line: 77, column: 3, scope: !10458)
!10468 = !DILocation(line: 77, column: 12, scope: !10453)
!10469 = !DILocation(line: 77, column: 14, scope: !10453)
!10470 = distinct !{!10470, !10455, !10471}
!10471 = !DILocation(line: 77, column: 17, scope: !10453)
!10472 = !DILocation(line: 79, column: 4, scope: !10453)
!10473 = !DILocation(line: 80, column: 2, scope: !10453)
!10474 = !DILocation(line: 80, column: 11, scope: !10417)
!10475 = !DILocation(line: 80, column: 13, scope: !10417)
!10476 = distinct !{!10476, !10451, !10477}
!10477 = !DILocation(line: 80, column: 16, scope: !10417)
!10478 = !DILabel(scope: !10417, name: "done", file: !433, line: 82)
!10479 = !DILocation(line: 82, column: 1, scope: !10417)
!10480 = !DILocation(line: 83, column: 10, scope: !10417)
!10481 = !DILocation(line: 83, column: 19, scope: !10417)
!10482 = !DILocation(line: 83, column: 17, scope: !10417)
!10483 = !DILocation(line: 83, column: 2, scope: !10417)
!10484 = !DILocation(line: 84, column: 1, scope: !10417)
!10485 = distinct !DISubprogram(name: "puts", scope: !433, file: !433, line: 106, type: !10486, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !426, retainedNodes: !223)
!10486 = !DISubroutineType(types: !10487)
!10487 = !{!103, !256}
!10488 = !DILocalVariable(name: "s", arg: 1, scope: !10485, file: !433, line: 106, type: !256)
!10489 = !DILocation(line: 106, column: 22, scope: !10485)
!10490 = !DILocation(line: 108, column: 12, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10485, file: !433, line: 108, column: 6)
!10492 = !DILocation(line: 108, column: 6, scope: !10491)
!10493 = !DILocation(line: 108, column: 23, scope: !10491)
!10494 = !DILocation(line: 108, column: 6, scope: !10485)
!10495 = !DILocation(line: 109, column: 3, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10491, file: !433, line: 108, column: 31)
!10497 = !DILocation(line: 112, column: 9, scope: !10485)
!10498 = !DILocation(line: 112, column: 29, scope: !10485)
!10499 = !DILocation(line: 112, column: 2, scope: !10485)
!10500 = !DILocation(line: 113, column: 1, scope: !10485)
!10501 = distinct !DISubprogram(name: "nordicsemi_nrf51_init", scope: !532, file: !532, line: 41, type: !539, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10502 = !DILocalVariable(name: "arg", arg: 1, scope: !10501, file: !532, line: 41, type: !541)
!10503 = !DILocation(line: 41, column: 55, scope: !10501)
!10504 = !DILocalVariable(name: "key", scope: !10501, file: !532, line: 43, type: !173)
!10505 = !DILocation(line: 43, column: 11, scope: !10501)
!10506 = !DILocation(line: 45, column: 2, scope: !10501)
!10507 = !DILocalVariable(name: "key", scope: !10508, file: !3614, line: 44, type: !32)
!10508 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10509 = !DILocation(line: 44, column: 15, scope: !10508, inlinedAt: !10510)
!10510 = distinct !DILocation(line: 47, column: 8, scope: !10501)
!10511 = !DILocation(line: 47, column: 2, scope: !10508, inlinedAt: !10510)
!10512 = !{i64 1440421}
!10513 = !DILocation(line: 76, column: 9, scope: !10508, inlinedAt: !10510)
!10514 = !DILocation(line: 47, column: 6, scope: !10501)
!10515 = !DILocation(line: 54, column: 2, scope: !10501)
!10516 = !DILocalVariable(name: "key", arg: 1, scope: !10517, file: !3614, line: 84, type: !32)
!10517 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10518 = !DILocation(line: 84, column: 56, scope: !10517, inlinedAt: !10519)
!10519 = distinct !DILocation(line: 54, column: 2, scope: !10501)
!10520 = !DILocation(line: 87, column: 6, scope: !10521, inlinedAt: !10519)
!10521 = distinct !DILexicalBlock(scope: !10517, file: !3614, line: 87, column: 6)
!10522 = !DILocation(line: 87, column: 10, scope: !10521, inlinedAt: !10519)
!10523 = !DILocation(line: 87, column: 6, scope: !10517, inlinedAt: !10519)
!10524 = !DILocation(line: 88, column: 3, scope: !10525, inlinedAt: !10519)
!10525 = distinct !DILexicalBlock(scope: !10521, file: !3614, line: 87, column: 17)
!10526 = !DILocation(line: 90, column: 2, scope: !10517, inlinedAt: !10519)
!10527 = !{i64 1441285}
!10528 = !DILocation(line: 110, column: 1, scope: !10517, inlinedAt: !10519)
!10529 = !DILocation(line: 56, column: 2, scope: !10501)
!10530 = distinct !DISubprogram(name: "sys_arch_reboot", scope: !532, file: !532, line: 35, type: !10531, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10531 = !DISubroutineType(types: !10532)
!10532 = !{null, !103}
!10533 = !DILocalVariable(name: "type", arg: 1, scope: !10530, file: !532, line: 35, type: !103)
!10534 = !DILocation(line: 35, column: 26, scope: !10530)
!10535 = !DILocation(line: 37, column: 45, scope: !10530)
!10536 = !DILocation(line: 37, column: 36, scope: !10530)
!10537 = !DILocation(line: 37, column: 2, scope: !10530)
!10538 = !DILocation(line: 38, column: 2, scope: !10530)
!10539 = distinct !DISubprogram(name: "nrf_power_gpregret_set", scope: !10540, file: !10540, line: 1051, type: !10541, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10540 = !DIFile(filename: "modules/hal/nordic/nrfx/hal/nrf_power.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10541 = !DISubroutineType(types: !10542)
!10542 = !{null, !439, !156}
!10543 = !DILocalVariable(name: "p_reg", arg: 1, scope: !10539, file: !10540, line: 1051, type: !439)
!10544 = !DILocation(line: 1051, column: 64, scope: !10539)
!10545 = !DILocalVariable(name: "val", arg: 2, scope: !10539, file: !10540, line: 1051, type: !156)
!10546 = !DILocation(line: 1051, column: 79, scope: !10539)
!10547 = !DILocalVariable(name: "p_gpregret", scope: !10539, file: !10540, line: 1053, type: !505)
!10548 = !DILocation(line: 1053, column: 25, scope: !10539)
!10549 = !DILocation(line: 1060, column: 46, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !10540, line: 1059, column: 5)
!10551 = distinct !DILexicalBlock(scope: !10539, file: !10540, line: 1054, column: 9)
!10552 = !DILocation(line: 1060, column: 53, scope: !10550)
!10553 = !DILocation(line: 1060, column: 23, scope: !10550)
!10554 = !DILocation(line: 1060, column: 20, scope: !10550)
!10555 = !DILocation(line: 1062, column: 19, scope: !10539)
!10556 = !DILocation(line: 1062, column: 6, scope: !10539)
!10557 = !DILocation(line: 1062, column: 17, scope: !10539)
!10558 = !DILocation(line: 1063, column: 1, scope: !10539)
!10559 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !508, file: !508, line: 859, type: !253, scopeLine: 860, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10560 = !DILocation(line: 271, column: 3, scope: !10561, inlinedAt: !10562)
!10561 = distinct !DISubprogram(name: "__DSB", scope: !8818, file: !8818, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10562 = distinct !DILocation(line: 861, column: 3, scope: !10559)
!10563 = !{i64 2449534}
!10564 = !DILocation(line: 863, column: 15, scope: !10559)
!10565 = !DILocation(line: 271, column: 3, scope: !10561, inlinedAt: !10566)
!10566 = distinct !DILocation(line: 865, column: 3, scope: !10559)
!10567 = !DILocation(line: 867, column: 3, scope: !10559)
!10568 = !DILocation(line: 869, column: 5, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10570, file: !508, line: 868, column: 3)
!10570 = distinct !DILexicalBlock(scope: !10571, file: !508, line: 867, column: 3)
!10571 = distinct !DILexicalBlock(scope: !10559, file: !508, line: 867, column: 3)
!10572 = !{i64 2149991791}
!10573 = !DILocation(line: 867, column: 3, scope: !10570)
!10574 = distinct !{!10574, !10575, !10576}
!10575 = !DILocation(line: 867, column: 3, scope: !10571)
!10576 = !DILocation(line: 870, column: 3, scope: !10571)
!10577 = distinct !DISubprogram(name: "arch_busy_wait", scope: !532, file: !532, line: 61, type: !524, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !436, retainedNodes: !223)
!10578 = !DILocalVariable(name: "time_us", arg: 1, scope: !10577, file: !532, line: 61, type: !173)
!10579 = !DILocation(line: 61, column: 30, scope: !10577)
!10580 = !DILocation(line: 63, column: 6, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10577, file: !532, line: 63, column: 6)
!10582 = !DILocation(line: 63, column: 14, scope: !10581)
!10583 = !DILocation(line: 63, column: 6, scope: !10577)
!10584 = !DILocation(line: 64, column: 3, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10581, file: !532, line: 63, column: 41)
!10586 = !DILocation(line: 67, column: 10, scope: !10577)
!10587 = !DILocation(line: 68, column: 24, scope: !10577)
!10588 = !DILocation(line: 68, column: 2, scope: !10577)
!10589 = !DILocation(line: 69, column: 1, scope: !10577)
!10590 = !DILocalVariable(name: "time_us", arg: 1, scope: !523, file: !522, line: 134, type: !173)
!10591 = !DILocation(line: 134, column: 55, scope: !523)
!10592 = !DILocation(line: 136, column: 9, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !523, file: !522, line: 136, column: 9)
!10594 = !DILocation(line: 136, column: 17, scope: !10593)
!10595 = !DILocation(line: 136, column: 9, scope: !523)
!10596 = !DILocation(line: 138, column: 9, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10593, file: !522, line: 137, column: 5)
!10598 = !DILocalVariable(name: "delay_cycles", scope: !523, file: !522, line: 168, type: !10599)
!10599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!10600 = !DILocation(line: 168, column: 24, scope: !523)
!10601 = !DILocalVariable(name: "cycles", scope: !523, file: !522, line: 171, type: !173)
!10602 = !DILocation(line: 171, column: 14, scope: !523)
!10603 = !DILocation(line: 171, column: 23, scope: !523)
!10604 = !DILocation(line: 171, column: 31, scope: !523)
!10605 = !DILocation(line: 172, column: 5, scope: !523)
!10606 = !DILocation(line: 172, column: 18, scope: !523)
!10607 = !DILocation(line: 173, column: 1, scope: !523)
!10608 = distinct !DISubprogram(name: "pm_state_set", scope: !10609, file: !10609, line: 14, type: !8084, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2713, retainedNodes: !223)
!10609 = !DIFile(filename: "zephyr/soc/arm/nordic_nrf/nrf51/power.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10610 = !DILocalVariable(name: "state", arg: 1, scope: !10608, file: !10609, line: 14, type: !281)
!10611 = !DILocation(line: 14, column: 40, scope: !10608)
!10612 = !DILocalVariable(name: "substate_id", arg: 2, scope: !10608, file: !10609, line: 14, type: !156)
!10613 = !DILocation(line: 14, column: 55, scope: !10608)
!10614 = !DILocation(line: 16, column: 2, scope: !10608)
!10615 = !DILocation(line: 18, column: 10, scope: !10608)
!10616 = !DILocation(line: 18, column: 2, scope: !10608)
!10617 = !DILocation(line: 20, column: 3, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10608, file: !10609, line: 18, column: 17)
!10619 = !DILocation(line: 21, column: 3, scope: !10618)
!10620 = !DILocation(line: 23, column: 3, scope: !10618)
!10621 = !DILocation(line: 23, column: 3, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10623, file: !10609, line: 23, column: 3)
!10623 = distinct !DILexicalBlock(scope: !10624, file: !10609, line: 23, column: 3)
!10624 = distinct !DILexicalBlock(scope: !10618, file: !10609, line: 23, column: 3)
!10625 = !DILocation(line: 24, column: 3, scope: !10618)
!10626 = !DILocation(line: 26, column: 1, scope: !10608)
!10627 = distinct !DISubprogram(name: "nrf_power_system_off", scope: !10540, file: !10540, line: 983, type: !10628, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2713, retainedNodes: !223)
!10628 = !DISubroutineType(types: !10629)
!10629 = !{null, !2716}
!10630 = !DILocalVariable(name: "p_reg", arg: 1, scope: !10627, file: !10540, line: 983, type: !2716)
!10631 = !DILocation(line: 983, column: 62, scope: !10627)
!10632 = !DILocation(line: 985, column: 5, scope: !10627)
!10633 = !DILocation(line: 985, column: 12, scope: !10627)
!10634 = !DILocation(line: 985, column: 22, scope: !10627)
!10635 = !DILocation(line: 271, column: 3, scope: !10636, inlinedAt: !10637)
!10636 = distinct !DISubprogram(name: "__DSB", scope: !8818, file: !8818, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2713, retainedNodes: !223)
!10637 = distinct !DILocation(line: 986, column: 5, scope: !10627)
!10638 = !{i64 2444478}
!10639 = !DILocation(line: 989, column: 5, scope: !10627)
!10640 = !DILocation(line: 991, column: 9, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10627, file: !10540, line: 990, column: 5)
!10642 = !{i64 2151635746}
!10643 = distinct !{!10643, !10639, !10644}
!10644 = !DILocation(line: 992, column: 5, scope: !10627)
!10645 = distinct !DISubprogram(name: "pm_state_exit_post_ops", scope: !10609, file: !10609, line: 29, type: !8084, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2713, retainedNodes: !223)
!10646 = !DILocalVariable(name: "state", arg: 1, scope: !10645, file: !10609, line: 29, type: !281)
!10647 = !DILocation(line: 29, column: 50, scope: !10645)
!10648 = !DILocalVariable(name: "substate_id", arg: 2, scope: !10645, file: !10609, line: 29, type: !156)
!10649 = !DILocation(line: 29, column: 65, scope: !10645)
!10650 = !DILocation(line: 31, column: 2, scope: !10645)
!10651 = !DILocation(line: 33, column: 10, scope: !10645)
!10652 = !DILocation(line: 33, column: 2, scope: !10645)
!10653 = !DILocation(line: 36, column: 3, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10645, file: !10609, line: 33, column: 17)
!10655 = !DILocation(line: 38, column: 3, scope: !10654)
!10656 = !DILocation(line: 38, column: 3, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !10609, line: 38, column: 3)
!10658 = distinct !DILexicalBlock(scope: !10659, file: !10609, line: 38, column: 3)
!10659 = distinct !DILexicalBlock(scope: !10654, file: !10609, line: 38, column: 3)
!10660 = !DILocation(line: 39, column: 3, scope: !10654)
!10661 = !DILocalVariable(name: "key", arg: 1, scope: !10662, file: !3614, line: 84, type: !32)
!10662 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2713, retainedNodes: !223)
!10663 = !DILocation(line: 84, column: 56, scope: !10662, inlinedAt: !10664)
!10664 = distinct !DILocation(line: 46, column: 2, scope: !10645)
!10665 = !DILocation(line: 87, column: 6, scope: !10666, inlinedAt: !10664)
!10666 = distinct !DILexicalBlock(scope: !10662, file: !3614, line: 87, column: 6)
!10667 = !DILocation(line: 87, column: 10, scope: !10666, inlinedAt: !10664)
!10668 = !DILocation(line: 87, column: 6, scope: !10662, inlinedAt: !10664)
!10669 = !DILocation(line: 88, column: 3, scope: !10670, inlinedAt: !10664)
!10670 = distinct !DILexicalBlock(scope: !10666, file: !3614, line: 87, column: 17)
!10671 = !DILocation(line: 90, column: 2, scope: !10662, inlinedAt: !10664)
!10672 = !{i64 1440825}
!10673 = !DILocation(line: 110, column: 1, scope: !10662, inlinedAt: !10664)
!10674 = !DILocation(line: 47, column: 1, scope: !10645)
!10675 = distinct !DISubprogram(name: "api_blocking_start", scope: !746, file: !746, line: 401, type: !909, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10676 = !DILocalVariable(name: "dev", arg: 1, scope: !10675, file: !746, line: 401, type: !811)
!10677 = !DILocation(line: 401, column: 52, scope: !10675)
!10678 = !DILocalVariable(name: "subsys", arg: 2, scope: !10675, file: !746, line: 402, type: !741)
!10679 = !DILocation(line: 402, column: 33, scope: !10675)
!10680 = !DILocalVariable(name: "sem", scope: !10675, file: !746, line: 404, type: !10681)
!10681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !109, line: 2909, size: 128, elements: !10682)
!10682 = !{!10683, !10688, !10689}
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10681, file: !109, line: 2910, baseType: !10684, size: 64)
!10684 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !10685)
!10685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !10686)
!10686 = !{!10687}
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10685, file: !150, line: 232, baseType: !772, size: 64)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10681, file: !109, line: 2911, baseType: !32, size: 32, offset: 64)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !10681, file: !109, line: 2912, baseType: !32, size: 32, offset: 96)
!10690 = !DILocation(line: 404, column: 15, scope: !10675)
!10691 = !DILocation(line: 404, column: 21, scope: !10675)
!10692 = !DILocalVariable(name: "err", scope: !10675, file: !746, line: 405, type: !103)
!10693 = !DILocation(line: 405, column: 6, scope: !10675)
!10694 = !DILocation(line: 411, column: 18, scope: !10675)
!10695 = !DILocation(line: 411, column: 23, scope: !10675)
!10696 = !DILocation(line: 411, column: 56, scope: !10675)
!10697 = !DILocation(line: 411, column: 8, scope: !10675)
!10698 = !DILocation(line: 411, column: 6, scope: !10675)
!10699 = !DILocation(line: 412, column: 6, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10675, file: !746, line: 412, column: 6)
!10701 = !DILocation(line: 412, column: 10, scope: !10700)
!10702 = !DILocation(line: 412, column: 6, scope: !10675)
!10703 = !DILocation(line: 413, column: 10, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10700, file: !746, line: 412, column: 15)
!10705 = !DILocation(line: 413, column: 3, scope: !10704)
!10706 = !DILocation(line: 416, column: 26, scope: !10675)
!10707 = !DILocation(line: 416, column: 9, scope: !10675)
!10708 = !DILocation(line: 416, column: 2, scope: !10675)
!10709 = !DILocation(line: 417, column: 1, scope: !10675)
!10710 = distinct !DISubprogram(name: "api_stop", scope: !746, file: !746, line: 361, type: !909, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10711 = !DILocalVariable(name: "dev", arg: 1, scope: !10710, file: !746, line: 361, type: !811)
!10712 = !DILocation(line: 361, column: 42, scope: !10710)
!10713 = !DILocalVariable(name: "subsys", arg: 2, scope: !10710, file: !746, line: 361, type: !741)
!10714 = !DILocation(line: 361, column: 70, scope: !10710)
!10715 = !DILocation(line: 363, column: 14, scope: !10710)
!10716 = !DILocation(line: 363, column: 19, scope: !10710)
!10717 = !DILocation(line: 363, column: 9, scope: !10710)
!10718 = !DILocation(line: 363, column: 2, scope: !10710)
!10719 = distinct !DISubprogram(name: "api_start", scope: !746, file: !746, line: 386, type: !915, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10720 = !DILocalVariable(name: "dev", arg: 1, scope: !10719, file: !746, line: 386, type: !811)
!10721 = !DILocation(line: 386, column: 43, scope: !10719)
!10722 = !DILocalVariable(name: "subsys", arg: 2, scope: !10719, file: !746, line: 386, type: !741)
!10723 = !DILocation(line: 386, column: 71, scope: !10719)
!10724 = !DILocalVariable(name: "cb", arg: 3, scope: !10719, file: !746, line: 387, type: !873)
!10725 = !DILocation(line: 387, column: 27, scope: !10719)
!10726 = !DILocalVariable(name: "user_data", arg: 4, scope: !10719, file: !746, line: 387, type: !102)
!10727 = !DILocation(line: 387, column: 37, scope: !10719)
!10728 = !DILocation(line: 389, column: 21, scope: !10719)
!10729 = !DILocation(line: 389, column: 26, scope: !10719)
!10730 = !DILocation(line: 389, column: 34, scope: !10719)
!10731 = !DILocation(line: 389, column: 38, scope: !10719)
!10732 = !DILocation(line: 389, column: 9, scope: !10719)
!10733 = !DILocation(line: 389, column: 2, scope: !10719)
!10734 = distinct !DISubprogram(name: "get_status", scope: !746, file: !746, line: 117, type: !926, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10735 = !DILocalVariable(name: "dev", arg: 1, scope: !10734, file: !746, line: 117, type: !811)
!10736 = !DILocation(line: 117, column: 66, scope: !10734)
!10737 = !DILocalVariable(name: "subsys", arg: 2, scope: !10734, file: !746, line: 118, type: !741)
!10738 = !DILocation(line: 118, column: 33, scope: !10734)
!10739 = !DILocalVariable(name: "type", scope: !10734, file: !746, line: 120, type: !550)
!10740 = !DILocation(line: 120, column: 30, scope: !10734)
!10741 = !DILocation(line: 120, column: 66, scope: !10734)
!10742 = !DILocation(line: 120, column: 37, scope: !10734)
!10743 = !DILocation(line: 124, column: 9, scope: !10734)
!10744 = !DILocation(line: 124, column: 2, scope: !10734)
!10745 = distinct !DISubprogram(name: "get_sub_data", scope: !746, file: !746, line: 83, type: !10746, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10746 = !DISubroutineType(types: !10747)
!10747 = !{!10748, !811, !550}
!10748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!10749 = !DILocalVariable(name: "dev", arg: 1, scope: !10745, file: !746, line: 83, type: !811)
!10750 = !DILocation(line: 83, column: 77, scope: !10745)
!10751 = !DILocalVariable(name: "type", arg: 2, scope: !10745, file: !746, line: 84, type: !550)
!10752 = !DILocation(line: 84, column: 42, scope: !10745)
!10753 = !DILocalVariable(name: "data", scope: !10745, file: !746, line: 86, type: !10754)
!10754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!10755 = !DILocation(line: 86, column: 33, scope: !10745)
!10756 = !DILocation(line: 86, column: 40, scope: !10745)
!10757 = !DILocation(line: 86, column: 45, scope: !10745)
!10758 = !DILocation(line: 88, column: 10, scope: !10745)
!10759 = !DILocation(line: 88, column: 16, scope: !10745)
!10760 = !DILocation(line: 88, column: 23, scope: !10745)
!10761 = !DILocation(line: 88, column: 2, scope: !10745)
!10762 = distinct !DISubprogram(name: "async_start", scope: !746, file: !746, line: 366, type: !10763, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{!103, !811, !741, !873, !102, !173}
!10765 = !DILocalVariable(name: "dev", arg: 1, scope: !10762, file: !746, line: 366, type: !811)
!10766 = !DILocation(line: 366, column: 45, scope: !10762)
!10767 = !DILocalVariable(name: "subsys", arg: 2, scope: !10762, file: !746, line: 366, type: !741)
!10768 = !DILocation(line: 366, column: 73, scope: !10762)
!10769 = !DILocalVariable(name: "cb", arg: 3, scope: !10762, file: !746, line: 367, type: !873)
!10770 = !DILocation(line: 367, column: 23, scope: !10762)
!10771 = !DILocalVariable(name: "user_data", arg: 4, scope: !10762, file: !746, line: 367, type: !102)
!10772 = !DILocation(line: 367, column: 33, scope: !10762)
!10773 = !DILocalVariable(name: "ctx", arg: 5, scope: !10762, file: !746, line: 367, type: !173)
!10774 = !DILocation(line: 367, column: 53, scope: !10762)
!10775 = !DILocalVariable(name: "type", scope: !10762, file: !746, line: 369, type: !550)
!10776 = !DILocation(line: 369, column: 30, scope: !10762)
!10777 = !DILocation(line: 369, column: 66, scope: !10762)
!10778 = !DILocation(line: 369, column: 37, scope: !10762)
!10779 = !DILocalVariable(name: "subdata", scope: !10762, file: !746, line: 370, type: !10748)
!10780 = !DILocation(line: 370, column: 37, scope: !10762)
!10781 = !DILocation(line: 370, column: 60, scope: !10762)
!10782 = !DILocation(line: 370, column: 65, scope: !10762)
!10783 = !DILocation(line: 370, column: 47, scope: !10762)
!10784 = !DILocalVariable(name: "err", scope: !10762, file: !746, line: 371, type: !103)
!10785 = !DILocation(line: 371, column: 6, scope: !10762)
!10786 = !DILocation(line: 373, column: 28, scope: !10762)
!10787 = !DILocation(line: 373, column: 37, scope: !10762)
!10788 = !DILocation(line: 373, column: 44, scope: !10762)
!10789 = !DILocation(line: 373, column: 8, scope: !10762)
!10790 = !DILocation(line: 373, column: 6, scope: !10762)
!10791 = !DILocation(line: 374, column: 6, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10762, file: !746, line: 374, column: 6)
!10793 = !DILocation(line: 374, column: 10, scope: !10792)
!10794 = !DILocation(line: 374, column: 6, scope: !10762)
!10795 = !DILocation(line: 375, column: 10, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10792, file: !746, line: 374, column: 15)
!10797 = !DILocation(line: 375, column: 3, scope: !10796)
!10798 = !DILocation(line: 378, column: 16, scope: !10762)
!10799 = !DILocation(line: 378, column: 2, scope: !10762)
!10800 = !DILocation(line: 378, column: 11, scope: !10762)
!10801 = !DILocation(line: 378, column: 14, scope: !10762)
!10802 = !DILocation(line: 379, column: 23, scope: !10762)
!10803 = !DILocation(line: 379, column: 2, scope: !10762)
!10804 = !DILocation(line: 379, column: 11, scope: !10762)
!10805 = !DILocation(line: 379, column: 21, scope: !10762)
!10806 = !DILocation(line: 381, column: 18, scope: !10762)
!10807 = !DILocation(line: 381, column: 23, scope: !10762)
!10808 = !DILocation(line: 381, column: 3, scope: !10762)
!10809 = !DILocation(line: 381, column: 30, scope: !10762)
!10810 = !DILocation(line: 383, column: 2, scope: !10762)
!10811 = !DILocation(line: 384, column: 1, scope: !10762)
!10812 = distinct !DISubprogram(name: "set_starting_state", scope: !746, file: !746, line: 144, type: !10813, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10813 = !DISubroutineType(types: !10814)
!10814 = !{!103, !922, !173}
!10815 = !DILocalVariable(name: "flags", arg: 1, scope: !10812, file: !746, line: 144, type: !922)
!10816 = !DILocation(line: 144, column: 41, scope: !10812)
!10817 = !DILocalVariable(name: "ctx", arg: 2, scope: !10812, file: !746, line: 144, type: !173)
!10818 = !DILocation(line: 144, column: 57, scope: !10812)
!10819 = !DILocalVariable(name: "err", scope: !10812, file: !746, line: 146, type: !103)
!10820 = !DILocation(line: 146, column: 6, scope: !10812)
!10821 = !DILocalVariable(name: "key", scope: !10812, file: !746, line: 147, type: !32)
!10822 = !DILocation(line: 147, column: 15, scope: !10812)
!10823 = !DILocalVariable(name: "key", scope: !10824, file: !3614, line: 44, type: !32)
!10824 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10825 = !DILocation(line: 44, column: 15, scope: !10824, inlinedAt: !10826)
!10826 = distinct !DILocation(line: 147, column: 21, scope: !10812)
!10827 = !DILocation(line: 47, column: 2, scope: !10824, inlinedAt: !10826)
!10828 = !{i64 1857268}
!10829 = !DILocation(line: 76, column: 9, scope: !10824, inlinedAt: !10826)
!10830 = !DILocalVariable(name: "current_ctx", scope: !10812, file: !746, line: 148, type: !173)
!10831 = !DILocation(line: 148, column: 11, scope: !10812)
!10832 = !DILocation(line: 148, column: 25, scope: !10812)
!10833 = !DILocation(line: 150, column: 8, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10812, file: !746, line: 150, column: 6)
!10835 = !DILocation(line: 150, column: 7, scope: !10834)
!10836 = !DILocation(line: 150, column: 14, scope: !10834)
!10837 = !DILocation(line: 150, column: 31, scope: !10834)
!10838 = !DILocation(line: 150, column: 6, scope: !10812)
!10839 = !DILocation(line: 151, column: 44, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10834, file: !746, line: 150, column: 60)
!10841 = !DILocation(line: 151, column: 42, scope: !10840)
!10842 = !DILocation(line: 151, column: 4, scope: !10840)
!10843 = !DILocation(line: 151, column: 10, scope: !10840)
!10844 = !DILocation(line: 152, column: 2, scope: !10840)
!10845 = !DILocation(line: 152, column: 13, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10834, file: !746, line: 152, column: 13)
!10847 = !DILocation(line: 152, column: 28, scope: !10846)
!10848 = !DILocation(line: 152, column: 25, scope: !10846)
!10849 = !DILocation(line: 152, column: 13, scope: !10834)
!10850 = !DILocation(line: 153, column: 7, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10846, file: !746, line: 152, column: 33)
!10852 = !DILocation(line: 154, column: 2, scope: !10851)
!10853 = !DILocation(line: 155, column: 7, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10846, file: !746, line: 154, column: 9)
!10855 = !DILocation(line: 158, column: 2, scope: !10812)
!10856 = !DILocalVariable(name: "key", arg: 1, scope: !10857, file: !3614, line: 84, type: !32)
!10857 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10858 = !DILocation(line: 84, column: 56, scope: !10857, inlinedAt: !10859)
!10859 = distinct !DILocation(line: 158, column: 2, scope: !10812)
!10860 = !DILocation(line: 87, column: 6, scope: !10861, inlinedAt: !10859)
!10861 = distinct !DILexicalBlock(scope: !10857, file: !3614, line: 87, column: 6)
!10862 = !DILocation(line: 87, column: 10, scope: !10861, inlinedAt: !10859)
!10863 = !DILocation(line: 87, column: 6, scope: !10857, inlinedAt: !10859)
!10864 = !DILocation(line: 88, column: 3, scope: !10865, inlinedAt: !10859)
!10865 = distinct !DILexicalBlock(scope: !10861, file: !3614, line: 87, column: 17)
!10866 = !DILocation(line: 90, column: 2, scope: !10857, inlinedAt: !10859)
!10867 = !{i64 1858132}
!10868 = !DILocation(line: 110, column: 1, scope: !10857, inlinedAt: !10859)
!10869 = !DILocation(line: 160, column: 9, scope: !10812)
!10870 = !DILocation(line: 160, column: 2, scope: !10812)
!10871 = distinct !DISubprogram(name: "get_sub_config", scope: !746, file: !746, line: 91, type: !10872, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{!10874, !811, !550}
!10874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10875, size: 32)
!10875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !896)
!10876 = !DILocalVariable(name: "dev", arg: 1, scope: !10871, file: !746, line: 91, type: !811)
!10877 = !DILocation(line: 91, column: 87, scope: !10871)
!10878 = !DILocalVariable(name: "type", arg: 2, scope: !10871, file: !746, line: 92, type: !550)
!10879 = !DILocation(line: 92, column: 38, scope: !10871)
!10880 = !DILocalVariable(name: "config", scope: !10871, file: !746, line: 94, type: !10881)
!10881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!10882 = !DILocation(line: 94, column: 41, scope: !10871)
!10883 = !DILocation(line: 95, column: 7, scope: !10871)
!10884 = !DILocation(line: 95, column: 12, scope: !10871)
!10885 = !DILocation(line: 97, column: 10, scope: !10871)
!10886 = !DILocation(line: 97, column: 18, scope: !10871)
!10887 = !DILocation(line: 97, column: 25, scope: !10871)
!10888 = !DILocation(line: 97, column: 2, scope: !10871)
!10889 = distinct !DISubprogram(name: "stop", scope: !746, file: !746, line: 342, type: !10890, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10890 = !DISubroutineType(types: !10891)
!10891 = !{!103, !811, !741, !173}
!10892 = !DILocalVariable(name: "dev", arg: 1, scope: !10889, file: !746, line: 342, type: !811)
!10893 = !DILocation(line: 342, column: 38, scope: !10889)
!10894 = !DILocalVariable(name: "subsys", arg: 2, scope: !10889, file: !746, line: 342, type: !741)
!10895 = !DILocation(line: 342, column: 66, scope: !10889)
!10896 = !DILocalVariable(name: "ctx", arg: 3, scope: !10889, file: !746, line: 343, type: !173)
!10897 = !DILocation(line: 343, column: 12, scope: !10889)
!10898 = !DILocalVariable(name: "type", scope: !10889, file: !746, line: 345, type: !550)
!10899 = !DILocation(line: 345, column: 30, scope: !10889)
!10900 = !DILocation(line: 345, column: 66, scope: !10889)
!10901 = !DILocation(line: 345, column: 37, scope: !10889)
!10902 = !DILocalVariable(name: "subdata", scope: !10889, file: !746, line: 346, type: !10748)
!10903 = !DILocation(line: 346, column: 37, scope: !10889)
!10904 = !DILocation(line: 346, column: 60, scope: !10889)
!10905 = !DILocation(line: 346, column: 65, scope: !10889)
!10906 = !DILocation(line: 346, column: 47, scope: !10889)
!10907 = !DILocalVariable(name: "err", scope: !10889, file: !746, line: 347, type: !103)
!10908 = !DILocation(line: 347, column: 6, scope: !10889)
!10909 = !DILocation(line: 351, column: 23, scope: !10889)
!10910 = !DILocation(line: 351, column: 32, scope: !10889)
!10911 = !DILocation(line: 351, column: 39, scope: !10889)
!10912 = !DILocation(line: 351, column: 8, scope: !10889)
!10913 = !DILocation(line: 351, column: 6, scope: !10889)
!10914 = !DILocation(line: 352, column: 6, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10889, file: !746, line: 352, column: 6)
!10916 = !DILocation(line: 352, column: 10, scope: !10915)
!10917 = !DILocation(line: 352, column: 6, scope: !10889)
!10918 = !DILocation(line: 353, column: 10, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10915, file: !746, line: 352, column: 15)
!10920 = !DILocation(line: 353, column: 3, scope: !10919)
!10921 = !DILocation(line: 356, column: 17, scope: !10889)
!10922 = !DILocation(line: 356, column: 22, scope: !10889)
!10923 = !DILocation(line: 356, column: 2, scope: !10889)
!10924 = !DILocation(line: 356, column: 29, scope: !10889)
!10925 = !DILocation(line: 358, column: 2, scope: !10889)
!10926 = !DILocation(line: 359, column: 1, scope: !10889)
!10927 = distinct !DISubprogram(name: "set_off_state", scope: !746, file: !746, line: 127, type: !10813, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10928 = !DILocalVariable(name: "flags", arg: 1, scope: !10927, file: !746, line: 127, type: !922)
!10929 = !DILocation(line: 127, column: 36, scope: !10927)
!10930 = !DILocalVariable(name: "ctx", arg: 2, scope: !10927, file: !746, line: 127, type: !173)
!10931 = !DILocation(line: 127, column: 52, scope: !10927)
!10932 = !DILocalVariable(name: "err", scope: !10927, file: !746, line: 129, type: !103)
!10933 = !DILocation(line: 129, column: 6, scope: !10927)
!10934 = !DILocalVariable(name: "key", scope: !10927, file: !746, line: 130, type: !32)
!10935 = !DILocation(line: 130, column: 15, scope: !10927)
!10936 = !DILocation(line: 44, column: 15, scope: !10824, inlinedAt: !10937)
!10937 = distinct !DILocation(line: 130, column: 21, scope: !10927)
!10938 = !DILocation(line: 47, column: 2, scope: !10824, inlinedAt: !10937)
!10939 = !DILocation(line: 76, column: 9, scope: !10824, inlinedAt: !10937)
!10940 = !DILocalVariable(name: "current_ctx", scope: !10927, file: !746, line: 131, type: !173)
!10941 = !DILocation(line: 131, column: 11, scope: !10927)
!10942 = !DILocation(line: 131, column: 25, scope: !10927)
!10943 = !DILocation(line: 133, column: 7, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10927, file: !746, line: 133, column: 6)
!10945 = !DILocation(line: 133, column: 19, scope: !10944)
!10946 = !DILocation(line: 133, column: 25, scope: !10944)
!10947 = !DILocation(line: 133, column: 29, scope: !10944)
!10948 = !DILocation(line: 133, column: 44, scope: !10944)
!10949 = !DILocation(line: 133, column: 41, scope: !10944)
!10950 = !DILocation(line: 133, column: 6, scope: !10927)
!10951 = !DILocation(line: 134, column: 7, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10944, file: !746, line: 133, column: 50)
!10953 = !DILocation(line: 135, column: 2, scope: !10952)
!10954 = !DILocation(line: 136, column: 4, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10944, file: !746, line: 135, column: 9)
!10956 = !DILocation(line: 136, column: 10, scope: !10955)
!10957 = !DILocation(line: 139, column: 2, scope: !10927)
!10958 = !DILocation(line: 84, column: 56, scope: !10857, inlinedAt: !10959)
!10959 = distinct !DILocation(line: 139, column: 2, scope: !10927)
!10960 = !DILocation(line: 87, column: 6, scope: !10861, inlinedAt: !10959)
!10961 = !DILocation(line: 87, column: 10, scope: !10861, inlinedAt: !10959)
!10962 = !DILocation(line: 87, column: 6, scope: !10857, inlinedAt: !10959)
!10963 = !DILocation(line: 88, column: 3, scope: !10865, inlinedAt: !10959)
!10964 = !DILocation(line: 90, column: 2, scope: !10857, inlinedAt: !10959)
!10965 = !DILocation(line: 110, column: 1, scope: !10857, inlinedAt: !10959)
!10966 = !DILocation(line: 141, column: 9, scope: !10927)
!10967 = !DILocation(line: 141, column: 2, scope: !10927)
!10968 = distinct !DISubprogram(name: "blocking_start_callback", scope: !746, file: !746, line: 392, type: !875, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10969 = !DILocalVariable(name: "dev", arg: 1, scope: !10968, file: !746, line: 392, type: !811)
!10970 = !DILocation(line: 392, column: 58, scope: !10968)
!10971 = !DILocalVariable(name: "subsys", arg: 2, scope: !10968, file: !746, line: 393, type: !741)
!10972 = !DILocation(line: 393, column: 32, scope: !10968)
!10973 = !DILocalVariable(name: "user_data", arg: 3, scope: !10968, file: !746, line: 394, type: !102)
!10974 = !DILocation(line: 394, column: 15, scope: !10968)
!10975 = !DILocalVariable(name: "sem", scope: !10968, file: !746, line: 396, type: !10976)
!10976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10681, size: 32)
!10977 = !DILocation(line: 396, column: 16, scope: !10968)
!10978 = !DILocation(line: 396, column: 22, scope: !10968)
!10979 = !DILocation(line: 398, column: 13, scope: !10968)
!10980 = !DILocation(line: 398, column: 2, scope: !10968)
!10981 = !DILocation(line: 399, column: 1, scope: !10968)
!10982 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !7339, file: !7339, line: 403, type: !10983, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{!312, !312}
!10985 = !DILocalVariable(name: "t", arg: 1, scope: !10982, file: !7339, line: 403, type: !312)
!10986 = !DILocation(line: 403, column: 69, scope: !10982)
!10987 = !DILocation(line: 406, column: 17, scope: !10982)
!10988 = !DILocalVariable(name: "t", arg: 1, scope: !10989, file: !7339, line: 102, type: !312)
!10989 = distinct !DISubprogram(name: "z_tmcvt", scope: !7339, file: !7339, line: 102, type: !7347, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!10990 = !DILocation(line: 102, column: 63, scope: !10989, inlinedAt: !10991)
!10991 = distinct !DILocation(line: 406, column: 9, scope: !10982)
!10992 = !DILocalVariable(name: "from_hz", arg: 2, scope: !10989, file: !7339, line: 102, type: !173)
!10993 = !DILocation(line: 102, column: 75, scope: !10989, inlinedAt: !10991)
!10994 = !DILocalVariable(name: "to_hz", arg: 3, scope: !10989, file: !7339, line: 103, type: !173)
!10995 = !DILocation(line: 103, column: 18, scope: !10989, inlinedAt: !10991)
!10996 = !DILocalVariable(name: "const_hz", arg: 4, scope: !10989, file: !7339, line: 103, type: !717)
!10997 = !DILocation(line: 103, column: 30, scope: !10989, inlinedAt: !10991)
!10998 = !DILocalVariable(name: "result32", arg: 5, scope: !10989, file: !7339, line: 104, type: !717)
!10999 = !DILocation(line: 104, column: 14, scope: !10989, inlinedAt: !10991)
!11000 = !DILocalVariable(name: "round_up", arg: 6, scope: !10989, file: !7339, line: 104, type: !717)
!11001 = !DILocation(line: 104, column: 29, scope: !10989, inlinedAt: !10991)
!11002 = !DILocalVariable(name: "round_off", arg: 7, scope: !10989, file: !7339, line: 105, type: !717)
!11003 = !DILocation(line: 105, column: 14, scope: !10989, inlinedAt: !10991)
!11004 = !DILocalVariable(name: "mul_ratio", scope: !10989, file: !7339, line: 107, type: !717)
!11005 = !DILocation(line: 107, column: 7, scope: !10989, inlinedAt: !10991)
!11006 = !DILocation(line: 107, column: 19, scope: !10989, inlinedAt: !10991)
!11007 = !DILocation(line: 107, column: 28, scope: !10989, inlinedAt: !10991)
!11008 = !DILocation(line: 108, column: 4, scope: !10989, inlinedAt: !10991)
!11009 = !DILocation(line: 108, column: 12, scope: !10989, inlinedAt: !10991)
!11010 = !DILocation(line: 108, column: 10, scope: !10989, inlinedAt: !10991)
!11011 = !DILocation(line: 108, column: 21, scope: !10989, inlinedAt: !10991)
!11012 = !DILocation(line: 108, column: 26, scope: !10989, inlinedAt: !10991)
!11013 = !DILocation(line: 108, column: 34, scope: !10989, inlinedAt: !10991)
!11014 = !DILocation(line: 108, column: 32, scope: !10989, inlinedAt: !10991)
!11015 = !DILocation(line: 108, column: 43, scope: !10989, inlinedAt: !10991)
!11016 = !DILocation(line: 0, scope: !10989, inlinedAt: !10991)
!11017 = !DILocalVariable(name: "div_ratio", scope: !10989, file: !7339, line: 109, type: !717)
!11018 = !DILocation(line: 109, column: 7, scope: !10989, inlinedAt: !10991)
!11019 = !DILocation(line: 109, column: 19, scope: !10989, inlinedAt: !10991)
!11020 = !DILocation(line: 109, column: 28, scope: !10989, inlinedAt: !10991)
!11021 = !DILocation(line: 110, column: 4, scope: !10989, inlinedAt: !10991)
!11022 = !DILocation(line: 110, column: 14, scope: !10989, inlinedAt: !10991)
!11023 = !DILocation(line: 110, column: 12, scope: !10989, inlinedAt: !10991)
!11024 = !DILocation(line: 110, column: 21, scope: !10989, inlinedAt: !10991)
!11025 = !DILocation(line: 110, column: 26, scope: !10989, inlinedAt: !10991)
!11026 = !DILocation(line: 110, column: 36, scope: !10989, inlinedAt: !10991)
!11027 = !DILocation(line: 110, column: 34, scope: !10989, inlinedAt: !10991)
!11028 = !DILocation(line: 110, column: 43, scope: !10989, inlinedAt: !10991)
!11029 = !DILocation(line: 112, column: 6, scope: !11030, inlinedAt: !10991)
!11030 = distinct !DILexicalBlock(scope: !10989, file: !7339, line: 112, column: 6)
!11031 = !DILocation(line: 112, column: 17, scope: !11030, inlinedAt: !10991)
!11032 = !DILocation(line: 112, column: 14, scope: !11030, inlinedAt: !10991)
!11033 = !DILocation(line: 112, column: 6, scope: !10989, inlinedAt: !10991)
!11034 = !DILocation(line: 113, column: 10, scope: !11035, inlinedAt: !10991)
!11035 = distinct !DILexicalBlock(scope: !11030, file: !7339, line: 112, column: 24)
!11036 = !DILocation(line: 113, column: 32, scope: !11035, inlinedAt: !10991)
!11037 = !DILocation(line: 113, column: 22, scope: !11035, inlinedAt: !10991)
!11038 = !DILocation(line: 113, column: 21, scope: !11035, inlinedAt: !10991)
!11039 = !DILocation(line: 113, column: 37, scope: !11035, inlinedAt: !10991)
!11040 = !DILocation(line: 113, column: 3, scope: !11035, inlinedAt: !10991)
!11041 = !DILocalVariable(name: "off", scope: !10989, file: !7339, line: 116, type: !312)
!11042 = !DILocation(line: 116, column: 11, scope: !10989, inlinedAt: !10991)
!11043 = !DILocation(line: 118, column: 7, scope: !11044, inlinedAt: !10991)
!11044 = distinct !DILexicalBlock(scope: !10989, file: !7339, line: 118, column: 6)
!11045 = !DILocation(line: 118, column: 6, scope: !10989, inlinedAt: !10991)
!11046 = !DILocalVariable(name: "rdivisor", scope: !11047, file: !7339, line: 119, type: !173)
!11047 = distinct !DILexicalBlock(scope: !11044, file: !7339, line: 118, column: 18)
!11048 = !DILocation(line: 119, column: 12, scope: !11047, inlinedAt: !10991)
!11049 = !DILocation(line: 119, column: 23, scope: !11047, inlinedAt: !10991)
!11050 = !DILocation(line: 119, column: 36, scope: !11047, inlinedAt: !10991)
!11051 = !DILocation(line: 119, column: 46, scope: !11047, inlinedAt: !10991)
!11052 = !DILocation(line: 119, column: 44, scope: !11047, inlinedAt: !10991)
!11053 = !DILocation(line: 119, column: 55, scope: !11047, inlinedAt: !10991)
!11054 = !DILocation(line: 121, column: 7, scope: !11055, inlinedAt: !10991)
!11055 = distinct !DILexicalBlock(scope: !11047, file: !7339, line: 121, column: 7)
!11056 = !DILocation(line: 121, column: 7, scope: !11047, inlinedAt: !10991)
!11057 = !DILocation(line: 122, column: 10, scope: !11058, inlinedAt: !10991)
!11058 = distinct !DILexicalBlock(scope: !11055, file: !7339, line: 121, column: 17)
!11059 = !DILocation(line: 122, column: 19, scope: !11058, inlinedAt: !10991)
!11060 = !DILocation(line: 122, column: 8, scope: !11058, inlinedAt: !10991)
!11061 = !DILocation(line: 123, column: 3, scope: !11058, inlinedAt: !10991)
!11062 = !DILocation(line: 124, column: 7, scope: !11063, inlinedAt: !10991)
!11063 = distinct !DILexicalBlock(scope: !11047, file: !7339, line: 124, column: 7)
!11064 = !DILocation(line: 124, column: 7, scope: !11047, inlinedAt: !10991)
!11065 = !DILocation(line: 125, column: 10, scope: !11066, inlinedAt: !10991)
!11066 = distinct !DILexicalBlock(scope: !11063, file: !7339, line: 124, column: 18)
!11067 = !DILocation(line: 125, column: 19, scope: !11066, inlinedAt: !10991)
!11068 = !DILocation(line: 125, column: 8, scope: !11066, inlinedAt: !10991)
!11069 = !DILocation(line: 126, column: 3, scope: !11066, inlinedAt: !10991)
!11070 = !DILocation(line: 127, column: 2, scope: !11047, inlinedAt: !10991)
!11071 = !DILocation(line: 134, column: 6, scope: !11072, inlinedAt: !10991)
!11072 = distinct !DILexicalBlock(scope: !10989, file: !7339, line: 134, column: 6)
!11073 = !DILocation(line: 134, column: 6, scope: !10989, inlinedAt: !10991)
!11074 = !DILocation(line: 135, column: 8, scope: !11075, inlinedAt: !10991)
!11075 = distinct !DILexicalBlock(scope: !11072, file: !7339, line: 134, column: 17)
!11076 = !DILocation(line: 135, column: 5, scope: !11075, inlinedAt: !10991)
!11077 = !DILocation(line: 136, column: 7, scope: !11078, inlinedAt: !10991)
!11078 = distinct !DILexicalBlock(scope: !11075, file: !7339, line: 136, column: 7)
!11079 = !DILocation(line: 136, column: 16, scope: !11078, inlinedAt: !10991)
!11080 = !DILocation(line: 136, column: 20, scope: !11078, inlinedAt: !10991)
!11081 = !DILocation(line: 136, column: 22, scope: !11078, inlinedAt: !10991)
!11082 = !DILocation(line: 136, column: 7, scope: !11075, inlinedAt: !10991)
!11083 = !DILocation(line: 137, column: 22, scope: !11084, inlinedAt: !10991)
!11084 = distinct !DILexicalBlock(scope: !11078, file: !7339, line: 136, column: 36)
!11085 = !DILocation(line: 137, column: 12, scope: !11084, inlinedAt: !10991)
!11086 = !DILocation(line: 137, column: 28, scope: !11084, inlinedAt: !10991)
!11087 = !DILocation(line: 137, column: 38, scope: !11084, inlinedAt: !10991)
!11088 = !DILocation(line: 137, column: 36, scope: !11084, inlinedAt: !10991)
!11089 = !DILocation(line: 137, column: 25, scope: !11084, inlinedAt: !10991)
!11090 = !DILocation(line: 137, column: 11, scope: !11084, inlinedAt: !10991)
!11091 = !DILocation(line: 137, column: 4, scope: !11084, inlinedAt: !10991)
!11092 = !DILocation(line: 139, column: 11, scope: !11093, inlinedAt: !10991)
!11093 = distinct !DILexicalBlock(scope: !11078, file: !7339, line: 138, column: 10)
!11094 = !DILocation(line: 139, column: 26, scope: !11093, inlinedAt: !10991)
!11095 = !DILocation(line: 139, column: 16, scope: !11093, inlinedAt: !10991)
!11096 = !DILocation(line: 139, column: 36, scope: !11093, inlinedAt: !10991)
!11097 = !DILocation(line: 139, column: 34, scope: !11093, inlinedAt: !10991)
!11098 = !DILocation(line: 139, column: 13, scope: !11093, inlinedAt: !10991)
!11099 = !DILocation(line: 139, column: 4, scope: !11093, inlinedAt: !10991)
!11100 = !DILocation(line: 141, column: 13, scope: !11101, inlinedAt: !10991)
!11101 = distinct !DILexicalBlock(scope: !11072, file: !7339, line: 141, column: 13)
!11102 = !DILocation(line: 141, column: 13, scope: !11072, inlinedAt: !10991)
!11103 = !DILocation(line: 142, column: 7, scope: !11104, inlinedAt: !10991)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !7339, line: 142, column: 7)
!11105 = distinct !DILexicalBlock(scope: !11101, file: !7339, line: 141, column: 24)
!11106 = !DILocation(line: 142, column: 7, scope: !11105, inlinedAt: !10991)
!11107 = !DILocation(line: 143, column: 22, scope: !11108, inlinedAt: !10991)
!11108 = distinct !DILexicalBlock(scope: !11104, file: !7339, line: 142, column: 17)
!11109 = !DILocation(line: 143, column: 12, scope: !11108, inlinedAt: !10991)
!11110 = !DILocation(line: 143, column: 28, scope: !11108, inlinedAt: !10991)
!11111 = !DILocation(line: 143, column: 36, scope: !11108, inlinedAt: !10991)
!11112 = !DILocation(line: 143, column: 34, scope: !11108, inlinedAt: !10991)
!11113 = !DILocation(line: 143, column: 25, scope: !11108, inlinedAt: !10991)
!11114 = !DILocation(line: 143, column: 11, scope: !11108, inlinedAt: !10991)
!11115 = !DILocation(line: 143, column: 4, scope: !11108, inlinedAt: !10991)
!11116 = !DILocation(line: 145, column: 11, scope: !11117, inlinedAt: !10991)
!11117 = distinct !DILexicalBlock(scope: !11104, file: !7339, line: 144, column: 10)
!11118 = !DILocation(line: 145, column: 26, scope: !11117, inlinedAt: !10991)
!11119 = !DILocation(line: 145, column: 16, scope: !11117, inlinedAt: !10991)
!11120 = !DILocation(line: 145, column: 34, scope: !11117, inlinedAt: !10991)
!11121 = !DILocation(line: 145, column: 32, scope: !11117, inlinedAt: !10991)
!11122 = !DILocation(line: 145, column: 13, scope: !11117, inlinedAt: !10991)
!11123 = !DILocation(line: 145, column: 4, scope: !11117, inlinedAt: !10991)
!11124 = !DILocation(line: 148, column: 7, scope: !11125, inlinedAt: !10991)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !7339, line: 148, column: 7)
!11126 = distinct !DILexicalBlock(scope: !11101, file: !7339, line: 147, column: 9)
!11127 = !DILocation(line: 148, column: 7, scope: !11126, inlinedAt: !10991)
!11128 = !DILocation(line: 149, column: 23, scope: !11129, inlinedAt: !10991)
!11129 = distinct !DILexicalBlock(scope: !11125, file: !7339, line: 148, column: 17)
!11130 = !DILocation(line: 149, column: 27, scope: !11129, inlinedAt: !10991)
!11131 = !DILocation(line: 149, column: 25, scope: !11129, inlinedAt: !10991)
!11132 = !DILocation(line: 149, column: 35, scope: !11129, inlinedAt: !10991)
!11133 = !DILocation(line: 149, column: 33, scope: !11129, inlinedAt: !10991)
!11134 = !DILocation(line: 149, column: 42, scope: !11129, inlinedAt: !10991)
!11135 = !DILocation(line: 149, column: 40, scope: !11129, inlinedAt: !10991)
!11136 = !DILocation(line: 149, column: 11, scope: !11129, inlinedAt: !10991)
!11137 = !DILocation(line: 149, column: 4, scope: !11129, inlinedAt: !10991)
!11138 = !DILocation(line: 150, column: 14, scope: !11139, inlinedAt: !10991)
!11139 = distinct !DILexicalBlock(scope: !11125, file: !7339, line: 150, column: 14)
!11140 = !DILocation(line: 150, column: 23, scope: !11139, inlinedAt: !10991)
!11141 = !DILocation(line: 150, column: 26, scope: !11139, inlinedAt: !10991)
!11142 = !DILocation(line: 150, column: 14, scope: !11125, inlinedAt: !10991)
!11143 = !DILocation(line: 156, column: 13, scope: !11144, inlinedAt: !10991)
!11144 = distinct !DILexicalBlock(scope: !11139, file: !7339, line: 150, column: 65)
!11145 = !DILocation(line: 156, column: 17, scope: !11144, inlinedAt: !10991)
!11146 = !DILocation(line: 156, column: 15, scope: !11144, inlinedAt: !10991)
!11147 = !DILocation(line: 156, column: 25, scope: !11144, inlinedAt: !10991)
!11148 = !DILocation(line: 156, column: 23, scope: !11144, inlinedAt: !10991)
!11149 = !DILocation(line: 156, column: 32, scope: !11144, inlinedAt: !10991)
!11150 = !DILocation(line: 156, column: 30, scope: !11144, inlinedAt: !10991)
!11151 = !DILocation(line: 156, column: 4, scope: !11144, inlinedAt: !10991)
!11152 = !DILocation(line: 161, column: 12, scope: !11153, inlinedAt: !10991)
!11153 = distinct !DILexicalBlock(scope: !11139, file: !7339, line: 157, column: 10)
!11154 = !DILocation(line: 161, column: 16, scope: !11153, inlinedAt: !10991)
!11155 = !DILocation(line: 161, column: 14, scope: !11153, inlinedAt: !10991)
!11156 = !DILocation(line: 161, column: 27, scope: !11153, inlinedAt: !10991)
!11157 = !DILocation(line: 161, column: 25, scope: !11153, inlinedAt: !10991)
!11158 = !DILocation(line: 161, column: 37, scope: !11153, inlinedAt: !10991)
!11159 = !DILocation(line: 161, column: 41, scope: !11153, inlinedAt: !10991)
!11160 = !DILocation(line: 161, column: 39, scope: !11153, inlinedAt: !10991)
!11161 = !DILocation(line: 161, column: 52, scope: !11153, inlinedAt: !10991)
!11162 = !DILocation(line: 161, column: 50, scope: !11153, inlinedAt: !10991)
!11163 = !DILocation(line: 161, column: 60, scope: !11153, inlinedAt: !10991)
!11164 = !DILocation(line: 161, column: 58, scope: !11153, inlinedAt: !10991)
!11165 = !DILocation(line: 161, column: 67, scope: !11153, inlinedAt: !10991)
!11166 = !DILocation(line: 161, column: 65, scope: !11153, inlinedAt: !10991)
!11167 = !DILocation(line: 161, column: 33, scope: !11153, inlinedAt: !10991)
!11168 = !DILocation(line: 161, column: 4, scope: !11153, inlinedAt: !10991)
!11169 = !DILocation(line: 164, column: 1, scope: !10989, inlinedAt: !10991)
!11170 = !DILocation(line: 406, column: 2, scope: !10982)
!11171 = distinct !DISubprogram(name: "k_sem_take", scope: !3240, file: !3240, line: 1044, type: !11172, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11172 = !DISubroutineType(types: !11173)
!11173 = !{!103, !10976, !11174}
!11174 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !294, line: 67, baseType: !11175)
!11175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !294, line: 65, size: 64, elements: !11176)
!11176 = !{!11177}
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11175, file: !294, line: 66, baseType: !293, size: 64)
!11178 = !DILocalVariable(name: "sem", arg: 1, scope: !11171, file: !3240, line: 1044, type: !10976)
!11179 = !DILocation(line: 1044, column: 45, scope: !11171)
!11180 = !DILocalVariable(name: "timeout", arg: 2, scope: !11171, file: !3240, line: 1044, type: !11174)
!11181 = !DILocation(line: 1044, column: 62, scope: !11171)
!11182 = !DILocation(line: 1053, column: 2, scope: !11171)
!11183 = !DILocation(line: 1053, column: 2, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11171, file: !3240, line: 1053, column: 2)
!11185 = !{i64 2150383653}
!11186 = !DILocation(line: 1054, column: 27, scope: !11171)
!11187 = !DILocation(line: 1054, column: 9, scope: !11171)
!11188 = !DILocation(line: 1054, column: 2, scope: !11171)
!11189 = distinct !DISubprogram(name: "k_sem_give", scope: !3240, file: !3240, line: 1061, type: !11190, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{null, !10976}
!11192 = !DILocalVariable(name: "sem", arg: 1, scope: !11189, file: !3240, line: 1061, type: !10976)
!11193 = !DILocation(line: 1061, column: 46, scope: !11189)
!11194 = !DILocation(line: 1070, column: 2, scope: !11189)
!11195 = !DILocation(line: 1070, column: 2, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11189, file: !3240, line: 1070, column: 2)
!11197 = !{i64 2150383721}
!11198 = !DILocation(line: 1071, column: 20, scope: !11189)
!11199 = !DILocation(line: 1071, column: 2, scope: !11189)
!11200 = !DILocation(line: 1072, column: 1, scope: !11189)
!11201 = distinct !DISubprogram(name: "generic_hfclk_start", scope: !746, file: !746, line: 266, type: !253, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11202 = !DILocalVariable(name: "type", scope: !11201, file: !746, line: 268, type: !715)
!11203 = !DILocation(line: 268, column: 20, scope: !11201)
!11204 = !DILocalVariable(name: "already_started", scope: !11201, file: !746, line: 269, type: !717)
!11205 = !DILocation(line: 269, column: 7, scope: !11201)
!11206 = !DILocalVariable(name: "key", scope: !11201, file: !746, line: 270, type: !32)
!11207 = !DILocation(line: 270, column: 15, scope: !11201)
!11208 = !DILocation(line: 44, column: 15, scope: !10824, inlinedAt: !11209)
!11209 = distinct !DILocation(line: 270, column: 21, scope: !11201)
!11210 = !DILocation(line: 47, column: 2, scope: !10824, inlinedAt: !11209)
!11211 = !DILocation(line: 76, column: 9, scope: !10824, inlinedAt: !11209)
!11212 = !DILocation(line: 272, column: 14, scope: !11201)
!11213 = !DILocation(line: 273, column: 6, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11201, file: !746, line: 273, column: 6)
!11215 = !DILocation(line: 273, column: 18, scope: !11214)
!11216 = !DILocation(line: 273, column: 6, scope: !11201)
!11217 = !DILocation(line: 274, column: 55, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11214, file: !746, line: 273, column: 32)
!11219 = !DILocation(line: 274, column: 9, scope: !11218)
!11220 = !DILocation(line: 275, column: 7, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11218, file: !746, line: 275, column: 7)
!11222 = !DILocation(line: 275, column: 12, scope: !11221)
!11223 = !DILocation(line: 275, column: 7, scope: !11218)
!11224 = !DILocation(line: 276, column: 20, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11221, file: !746, line: 275, column: 46)
!11226 = !DILocation(line: 280, column: 17, scope: !11225)
!11227 = !DILocation(line: 280, column: 4, scope: !11225)
!11228 = !DILocation(line: 281, column: 3, scope: !11225)
!11229 = !DILocation(line: 282, column: 2, scope: !11218)
!11230 = !DILocation(line: 284, column: 2, scope: !11201)
!11231 = !DILocation(line: 84, column: 56, scope: !10857, inlinedAt: !11232)
!11232 = distinct !DILocation(line: 284, column: 2, scope: !11201)
!11233 = !DILocation(line: 87, column: 6, scope: !10861, inlinedAt: !11232)
!11234 = !DILocation(line: 87, column: 10, scope: !10861, inlinedAt: !11232)
!11235 = !DILocation(line: 87, column: 6, scope: !10857, inlinedAt: !11232)
!11236 = !DILocation(line: 88, column: 3, scope: !10865, inlinedAt: !11232)
!11237 = !DILocation(line: 90, column: 2, scope: !10857, inlinedAt: !11232)
!11238 = !DILocation(line: 110, column: 1, scope: !10857, inlinedAt: !11232)
!11239 = !DILocation(line: 286, column: 6, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11201, file: !746, line: 286, column: 6)
!11241 = !DILocation(line: 286, column: 6, scope: !11201)
!11242 = !DILocation(line: 288, column: 3, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11240, file: !746, line: 286, column: 23)
!11244 = !DILocation(line: 290, column: 3, scope: !11243)
!11245 = !DILocation(line: 293, column: 2, scope: !11201)
!11246 = !DILocation(line: 294, column: 1, scope: !11201)
!11247 = distinct !DISubprogram(name: "generic_hfclk_stop", scope: !746, file: !746, line: 296, type: !253, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11248 = !DILocalVariable(name: "key", scope: !11247, file: !746, line: 304, type: !32)
!11249 = !DILocation(line: 304, column: 15, scope: !11247)
!11250 = !DILocation(line: 44, column: 15, scope: !10824, inlinedAt: !11251)
!11251 = distinct !DILocation(line: 304, column: 21, scope: !11247)
!11252 = !DILocation(line: 47, column: 2, scope: !10824, inlinedAt: !11251)
!11253 = !DILocation(line: 76, column: 9, scope: !10824, inlinedAt: !11251)
!11254 = !DILocation(line: 306, column: 14, scope: !11247)
!11255 = !DILocation(line: 308, column: 8, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11247, file: !746, line: 308, column: 6)
!11257 = !DILocation(line: 308, column: 20, scope: !11256)
!11258 = !DILocation(line: 308, column: 6, scope: !11247)
!11259 = !DILocation(line: 309, column: 3, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11256, file: !746, line: 308, column: 35)
!11261 = !DILocation(line: 310, column: 2, scope: !11260)
!11262 = !DILocation(line: 312, column: 2, scope: !11247)
!11263 = !DILocation(line: 84, column: 56, scope: !10857, inlinedAt: !11264)
!11264 = distinct !DILocation(line: 312, column: 2, scope: !11247)
!11265 = !DILocation(line: 87, column: 6, scope: !10861, inlinedAt: !11264)
!11266 = !DILocation(line: 87, column: 10, scope: !10861, inlinedAt: !11264)
!11267 = !DILocation(line: 87, column: 6, scope: !10857, inlinedAt: !11264)
!11268 = !DILocation(line: 88, column: 3, scope: !10865, inlinedAt: !11264)
!11269 = !DILocation(line: 90, column: 2, scope: !10857, inlinedAt: !11264)
!11270 = !DILocation(line: 110, column: 1, scope: !10857, inlinedAt: !11264)
!11271 = !DILocation(line: 313, column: 1, scope: !11247)
!11272 = distinct !DISubprogram(name: "lfclk_start", scope: !746, file: !746, line: 199, type: !253, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11273 = !DILocation(line: 205, column: 2, scope: !11272)
!11274 = !DILocation(line: 206, column: 1, scope: !11272)
!11275 = distinct !DISubprogram(name: "lfclk_stop", scope: !746, file: !746, line: 208, type: !253, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11276 = !DILocation(line: 214, column: 2, scope: !11275)
!11277 = !DILocation(line: 215, column: 1, scope: !11275)
!11278 = distinct !DISubprogram(name: "nrfx_clock_lfclk_stop", scope: !656, file: !656, line: 301, type: !253, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11279 = !DILocation(line: 303, column: 5, scope: !11278)
!11280 = !DILocation(line: 304, column: 1, scope: !11278)
!11281 = distinct !DISubprogram(name: "nrfx_clock_lfclk_start", scope: !656, file: !656, line: 296, type: !253, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11282 = !DILocation(line: 298, column: 5, scope: !11281)
!11283 = !DILocation(line: 299, column: 1, scope: !11281)
!11284 = distinct !DISubprogram(name: "hfclk_stop", scope: !746, file: !746, line: 226, type: !253, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11285 = !DILocation(line: 232, column: 2, scope: !11284)
!11286 = !DILocation(line: 233, column: 1, scope: !11284)
!11287 = distinct !DISubprogram(name: "nrfx_clock_hfclk_stop", scope: !656, file: !656, line: 311, type: !253, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11288 = !DILocation(line: 313, column: 5, scope: !11287)
!11289 = !DILocation(line: 314, column: 1, scope: !11287)
!11290 = distinct !DISubprogram(name: "nrfx_clock_is_running", scope: !656, file: !656, line: 326, type: !11291, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11291 = !DISubroutineType(types: !11292)
!11292 = !{!717, !885, !102}
!11293 = !DILocalVariable(name: "domain", arg: 1, scope: !11290, file: !656, line: 326, type: !885)
!11294 = !DILocation(line: 326, column: 66, scope: !11290)
!11295 = !DILocalVariable(name: "p_clk_src", arg: 2, scope: !11290, file: !656, line: 326, type: !102)
!11296 = !DILocation(line: 326, column: 81, scope: !11290)
!11297 = !DILocation(line: 328, column: 44, scope: !11290)
!11298 = !DILocation(line: 328, column: 52, scope: !11290)
!11299 = !DILocation(line: 328, column: 12, scope: !11290)
!11300 = !DILocation(line: 328, column: 5, scope: !11290)
!11301 = distinct !DISubprogram(name: "get_hf_flags", scope: !746, file: !746, line: 259, type: !11302, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11302 = !DISubroutineType(types: !11303)
!11303 = !{!922}
!11304 = !DILocalVariable(name: "data", scope: !11301, file: !746, line: 261, type: !10754)
!11305 = !DILocation(line: 261, column: 33, scope: !11301)
!11306 = !DILocation(line: 261, column: 54, scope: !11301)
!11307 = !DILocation(line: 261, column: 40, scope: !11301)
!11308 = !DILocation(line: 263, column: 10, scope: !11301)
!11309 = !DILocation(line: 263, column: 16, scope: !11301)
!11310 = !DILocation(line: 263, column: 53, scope: !11301)
!11311 = !DILocation(line: 263, column: 2, scope: !11301)
!11312 = distinct !DISubprogram(name: "set_on_state", scope: !746, file: !746, line: 163, type: !11313, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11313 = !DISubroutineType(types: !11314)
!11314 = !{null, !922}
!11315 = !DILocalVariable(name: "flags", arg: 1, scope: !11312, file: !746, line: 163, type: !922)
!11316 = !DILocation(line: 163, column: 36, scope: !11312)
!11317 = !DILocalVariable(name: "key", scope: !11312, file: !746, line: 165, type: !32)
!11318 = !DILocation(line: 165, column: 15, scope: !11312)
!11319 = !DILocation(line: 44, column: 15, scope: !10824, inlinedAt: !11320)
!11320 = distinct !DILocation(line: 165, column: 21, scope: !11312)
!11321 = !DILocation(line: 47, column: 2, scope: !10824, inlinedAt: !11320)
!11322 = !DILocation(line: 76, column: 9, scope: !10824, inlinedAt: !11320)
!11323 = !DILocation(line: 167, column: 37, scope: !11312)
!11324 = !DILocation(line: 167, column: 35, scope: !11312)
!11325 = !DILocation(line: 167, column: 3, scope: !11312)
!11326 = !DILocation(line: 167, column: 9, scope: !11312)
!11327 = !DILocation(line: 168, column: 2, scope: !11312)
!11328 = !DILocation(line: 84, column: 56, scope: !10857, inlinedAt: !11329)
!11329 = distinct !DILocation(line: 168, column: 2, scope: !11312)
!11330 = !DILocation(line: 87, column: 6, scope: !10861, inlinedAt: !11329)
!11331 = !DILocation(line: 87, column: 10, scope: !10861, inlinedAt: !11329)
!11332 = !DILocation(line: 87, column: 6, scope: !10857, inlinedAt: !11329)
!11333 = !DILocation(line: 88, column: 3, scope: !10865, inlinedAt: !11329)
!11334 = !DILocation(line: 90, column: 2, scope: !10857, inlinedAt: !11329)
!11335 = !DILocation(line: 110, column: 1, scope: !10857, inlinedAt: !11329)
!11336 = !DILocation(line: 169, column: 1, scope: !11312)
!11337 = distinct !DISubprogram(name: "clkstarted_handle", scope: !746, file: !746, line: 171, type: !11338, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11338 = !DISubroutineType(types: !11339)
!11339 = !{null, !811, !550}
!11340 = !DILocalVariable(name: "dev", arg: 1, scope: !11337, file: !746, line: 171, type: !811)
!11341 = !DILocation(line: 171, column: 52, scope: !11337)
!11342 = !DILocalVariable(name: "type", arg: 2, scope: !11337, file: !746, line: 172, type: !550)
!11343 = !DILocation(line: 172, column: 38, scope: !11337)
!11344 = !DILocalVariable(name: "sub_data", scope: !11337, file: !746, line: 174, type: !10748)
!11345 = !DILocation(line: 174, column: 37, scope: !11337)
!11346 = !DILocation(line: 174, column: 61, scope: !11337)
!11347 = !DILocation(line: 174, column: 66, scope: !11337)
!11348 = !DILocation(line: 174, column: 48, scope: !11337)
!11349 = !DILocalVariable(name: "callback", scope: !11337, file: !746, line: 175, type: !873)
!11350 = !DILocation(line: 175, column: 21, scope: !11337)
!11351 = !DILocation(line: 175, column: 32, scope: !11337)
!11352 = !DILocation(line: 175, column: 42, scope: !11337)
!11353 = !DILocalVariable(name: "user_data", scope: !11337, file: !746, line: 176, type: !102)
!11354 = !DILocation(line: 176, column: 8, scope: !11337)
!11355 = !DILocation(line: 176, column: 20, scope: !11337)
!11356 = !DILocation(line: 176, column: 30, scope: !11337)
!11357 = !DILocation(line: 178, column: 2, scope: !11337)
!11358 = !DILocation(line: 178, column: 12, scope: !11337)
!11359 = !DILocation(line: 178, column: 15, scope: !11337)
!11360 = !DILocation(line: 179, column: 16, scope: !11337)
!11361 = !DILocation(line: 179, column: 26, scope: !11337)
!11362 = !DILocation(line: 179, column: 2, scope: !11337)
!11363 = !DILocation(line: 182, column: 6, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11337, file: !746, line: 182, column: 6)
!11365 = !DILocation(line: 182, column: 6, scope: !11337)
!11366 = !DILocation(line: 183, column: 3, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11364, file: !746, line: 182, column: 16)
!11368 = !DILocation(line: 183, column: 12, scope: !11367)
!11369 = !DILocation(line: 183, column: 41, scope: !11367)
!11370 = !DILocation(line: 183, column: 17, scope: !11367)
!11371 = !DILocation(line: 183, column: 47, scope: !11367)
!11372 = !DILocation(line: 184, column: 2, scope: !11367)
!11373 = !DILocation(line: 185, column: 1, scope: !11337)
!11374 = distinct !DISubprogram(name: "hfclk_start", scope: !746, file: !746, line: 217, type: !253, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11375 = !DILocation(line: 223, column: 2, scope: !11374)
!11376 = !DILocation(line: 224, column: 1, scope: !11374)
!11377 = distinct !DISubprogram(name: "nrfx_clock_hfclk_start", scope: !656, file: !656, line: 306, type: !253, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11378 = !DILocation(line: 308, column: 5, scope: !11377)
!11379 = !DILocation(line: 309, column: 1, scope: !11377)
!11380 = distinct !DISubprogram(name: "nrf_clock_is_running", scope: !562, file: !562, line: 786, type: !11381, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11381 = !DISubroutineType(types: !11382)
!11382 = !{!717, !11383, !885, !102}
!11383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11384, size: 32)
!11384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !666)
!11385 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11380, file: !562, line: 786, type: !11383)
!11386 = !DILocation(line: 786, column: 68, scope: !11380)
!11387 = !DILocalVariable(name: "domain", arg: 2, scope: !11380, file: !562, line: 787, type: !885)
!11388 = !DILocation(line: 787, column: 68, scope: !11380)
!11389 = !DILocalVariable(name: "p_clk_src", arg: 3, scope: !11380, file: !562, line: 788, type: !102)
!11390 = !DILocation(line: 788, column: 68, scope: !11380)
!11391 = !DILocation(line: 790, column: 13, scope: !11380)
!11392 = !DILocation(line: 790, column: 5, scope: !11380)
!11393 = !DILocation(line: 793, column: 17, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !562, line: 793, column: 17)
!11395 = distinct !DILexicalBlock(scope: !11380, file: !562, line: 791, column: 5)
!11396 = !DILocation(line: 793, column: 27, scope: !11394)
!11397 = !DILocation(line: 793, column: 17, scope: !11395)
!11398 = !DILocation(line: 796, column: 42, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11394, file: !562, line: 794, column: 13)
!11400 = !DILocation(line: 796, column: 49, scope: !11399)
!11401 = !DILocation(line: 796, column: 59, scope: !11399)
!11402 = !DILocation(line: 797, column: 41, scope: !11399)
!11403 = !DILocation(line: 795, column: 40, scope: !11399)
!11404 = !DILocation(line: 795, column: 19, scope: !11399)
!11405 = !DILocation(line: 795, column: 51, scope: !11399)
!11406 = !DILocation(line: 798, column: 13, scope: !11399)
!11407 = !DILocation(line: 799, column: 18, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11395, file: !562, line: 799, column: 17)
!11409 = !DILocation(line: 799, column: 25, scope: !11408)
!11410 = !DILocation(line: 799, column: 35, scope: !11408)
!11411 = !DILocation(line: 800, column: 17, scope: !11408)
!11412 = !DILocation(line: 799, column: 17, scope: !11395)
!11413 = !DILocation(line: 802, column: 17, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11408, file: !562, line: 801, column: 13)
!11415 = !DILocation(line: 804, column: 13, scope: !11395)
!11416 = !DILocation(line: 806, column: 17, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11395, file: !562, line: 806, column: 17)
!11418 = !DILocation(line: 806, column: 27, scope: !11417)
!11419 = !DILocation(line: 806, column: 17, scope: !11395)
!11420 = !DILocation(line: 809, column: 42, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11417, file: !562, line: 807, column: 13)
!11422 = !DILocation(line: 809, column: 49, scope: !11421)
!11423 = !DILocation(line: 809, column: 59, scope: !11421)
!11424 = !DILocation(line: 810, column: 41, scope: !11421)
!11425 = !DILocation(line: 808, column: 40, scope: !11421)
!11426 = !DILocation(line: 808, column: 19, scope: !11421)
!11427 = !DILocation(line: 808, column: 51, scope: !11421)
!11428 = !DILocation(line: 811, column: 13, scope: !11421)
!11429 = !DILocation(line: 812, column: 18, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11395, file: !562, line: 812, column: 17)
!11431 = !DILocation(line: 812, column: 25, scope: !11430)
!11432 = !DILocation(line: 812, column: 35, scope: !11430)
!11433 = !DILocation(line: 813, column: 17, scope: !11430)
!11434 = !DILocation(line: 812, column: 17, scope: !11395)
!11435 = !DILocation(line: 815, column: 17, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11430, file: !562, line: 814, column: 13)
!11437 = !DILocation(line: 817, column: 13, scope: !11395)
!11438 = !DILocation(line: 840, column: 13, scope: !11395)
!11439 = !DILocation(line: 842, column: 5, scope: !11380)
!11440 = !DILocation(line: 843, column: 1, scope: !11380)
!11441 = !DILocalVariable(name: "dev", arg: 1, scope: !941, file: !746, line: 651, type: !811)
!11442 = !DILocation(line: 651, column: 42, scope: !941)
!11443 = !DILocalVariable(name: "nrfx_err", scope: !941, file: !746, line: 653, type: !11444)
!11444 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_err_t", file: !637, line: 72, baseType: !636)
!11445 = !DILocation(line: 653, column: 13, scope: !941)
!11446 = !DILocalVariable(name: "err", scope: !941, file: !746, line: 654, type: !103)
!11447 = !DILocation(line: 654, column: 6, scope: !941)
!11448 = !DILocation(line: 660, column: 2, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !941, file: !746, line: 660, column: 2)
!11450 = !DILocation(line: 663, column: 13, scope: !941)
!11451 = !DILocation(line: 663, column: 11, scope: !941)
!11452 = !DILocation(line: 664, column: 6, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !941, file: !746, line: 664, column: 6)
!11454 = !DILocation(line: 664, column: 15, scope: !11453)
!11455 = !DILocation(line: 664, column: 6, scope: !941)
!11456 = !DILocation(line: 665, column: 3, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !746, line: 664, column: 32)
!11458 = !DILocation(line: 668, column: 2, scope: !941)
!11459 = !DILocation(line: 676, column: 2, scope: !941)
!11460 = !DILocalVariable(name: "i", scope: !11461, file: !746, line: 678, type: !550)
!11461 = distinct !DILexicalBlock(scope: !941, file: !746, line: 678, column: 2)
!11462 = !DILocation(line: 678, column: 35, scope: !11461)
!11463 = !DILocation(line: 678, column: 7, scope: !11461)
!11464 = !DILocation(line: 679, column: 3, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11461, file: !746, line: 678, column: 2)
!11466 = !DILocation(line: 679, column: 5, scope: !11465)
!11467 = !DILocation(line: 678, column: 2, scope: !11461)
!11468 = !DILocalVariable(name: "subdata", scope: !11469, file: !746, line: 680, type: !10748)
!11469 = distinct !DILexicalBlock(scope: !11465, file: !746, line: 679, column: 42)
!11470 = !DILocation(line: 680, column: 38, scope: !11469)
!11471 = !DILocation(line: 681, column: 20, scope: !11469)
!11472 = !DILocation(line: 681, column: 25, scope: !11469)
!11473 = !DILocation(line: 681, column: 7, scope: !11469)
!11474 = !DILocation(line: 683, column: 46, scope: !11469)
!11475 = !DILocation(line: 683, column: 51, scope: !11469)
!11476 = !DILocation(line: 683, column: 28, scope: !11469)
!11477 = !DILocation(line: 683, column: 9, scope: !11469)
!11478 = !DILocation(line: 683, column: 7, scope: !11469)
!11479 = !DILocation(line: 685, column: 7, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11469, file: !746, line: 685, column: 7)
!11481 = !DILocation(line: 685, column: 11, scope: !11480)
!11482 = !DILocation(line: 685, column: 7, scope: !11469)
!11483 = !DILocation(line: 686, column: 11, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11480, file: !746, line: 685, column: 16)
!11485 = !DILocation(line: 686, column: 4, scope: !11484)
!11486 = !DILocation(line: 689, column: 3, scope: !11469)
!11487 = !DILocation(line: 689, column: 12, scope: !11469)
!11488 = !DILocation(line: 689, column: 18, scope: !11469)
!11489 = !DILocation(line: 690, column: 2, scope: !11469)
!11490 = !DILocation(line: 679, column: 38, scope: !11465)
!11491 = !DILocation(line: 678, column: 2, scope: !11465)
!11492 = distinct !{!11492, !11467, !11493}
!11493 = !DILocation(line: 690, column: 2, scope: !11461)
!11494 = !DILocation(line: 692, column: 2, scope: !941)
!11495 = !DILocation(line: 693, column: 1, scope: !941)
!11496 = distinct !DISubprogram(name: "clock_event_handler", scope: !746, file: !746, line: 582, type: !1694, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11497 = !DILocalVariable(name: "event", arg: 1, scope: !11496, file: !746, line: 582, type: !1696)
!11498 = !DILocation(line: 582, column: 55, scope: !11496)
!11499 = !DILocalVariable(name: "dev", scope: !11496, file: !746, line: 584, type: !811)
!11500 = !DILocation(line: 584, column: 23, scope: !11496)
!11501 = !DILocation(line: 586, column: 10, scope: !11496)
!11502 = !DILocation(line: 586, column: 2, scope: !11496)
!11503 = !DILocalVariable(name: "data", scope: !11504, file: !746, line: 589, type: !10748)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !746, line: 588, column: 2)
!11505 = distinct !DILexicalBlock(scope: !11496, file: !746, line: 586, column: 17)
!11506 = !DILocation(line: 589, column: 38, scope: !11504)
!11507 = !DILocation(line: 590, column: 18, scope: !11504)
!11508 = !DILocation(line: 590, column: 5, scope: !11504)
!11509 = !DILocation(line: 595, column: 7, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11504, file: !746, line: 595, column: 7)
!11511 = !DILocation(line: 595, column: 31, scope: !11510)
!11512 = !DILocation(line: 595, column: 7, scope: !11504)
!11513 = !DILocation(line: 596, column: 22, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11510, file: !746, line: 595, column: 65)
!11515 = !DILocation(line: 596, column: 4, scope: !11514)
!11516 = !DILocation(line: 597, column: 3, scope: !11514)
!11517 = !DILocation(line: 599, column: 3, scope: !11504)
!11518 = !DILocation(line: 615, column: 21, scope: !11505)
!11519 = !DILocation(line: 615, column: 3, scope: !11505)
!11520 = !DILocation(line: 616, column: 3, scope: !11505)
!11521 = !DILocation(line: 624, column: 3, scope: !11505)
!11522 = !DILocation(line: 627, column: 3, scope: !11505)
!11523 = !DILocation(line: 629, column: 1, scope: !11496)
!11524 = distinct !DISubprogram(name: "hfclkaudio_init", scope: !746, file: !746, line: 631, type: !253, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11525 = !DILocation(line: 649, column: 1, scope: !11524)
!11526 = distinct !DISubprogram(name: "get_onoff_manager", scope: !746, file: !746, line: 100, type: !11527, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11527 = !DISubroutineType(types: !11528)
!11528 = !{!856, !811, !550}
!11529 = !DILocalVariable(name: "dev", arg: 1, scope: !11526, file: !746, line: 100, type: !811)
!11530 = !DILocation(line: 100, column: 69, scope: !11526)
!11531 = !DILocalVariable(name: "type", arg: 2, scope: !11526, file: !746, line: 101, type: !550)
!11532 = !DILocation(line: 101, column: 41, scope: !11526)
!11533 = !DILocalVariable(name: "data", scope: !11526, file: !746, line: 103, type: !10754)
!11534 = !DILocation(line: 103, column: 33, scope: !11526)
!11535 = !DILocation(line: 103, column: 40, scope: !11526)
!11536 = !DILocation(line: 103, column: 45, scope: !11526)
!11537 = !DILocation(line: 105, column: 10, scope: !11526)
!11538 = !DILocation(line: 105, column: 16, scope: !11526)
!11539 = !DILocation(line: 105, column: 20, scope: !11526)
!11540 = !DILocation(line: 105, column: 2, scope: !11526)
!11541 = distinct !DISubprogram(name: "onoff_start", scope: !746, file: !746, line: 447, type: !854, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11542 = !DILocalVariable(name: "mgr", arg: 1, scope: !11541, file: !746, line: 447, type: !856)
!11543 = !DILocation(line: 447, column: 47, scope: !11541)
!11544 = !DILocalVariable(name: "notify", arg: 2, scope: !11541, file: !746, line: 448, type: !857)
!11545 = !DILocation(line: 448, column: 20, scope: !11541)
!11546 = !DILocalVariable(name: "err", scope: !11541, file: !746, line: 450, type: !103)
!11547 = !DILocation(line: 450, column: 6, scope: !11541)
!11548 = !DILocation(line: 452, column: 45, scope: !11541)
!11549 = !DILocation(line: 452, column: 34, scope: !11541)
!11550 = !DILocation(line: 453, column: 30, scope: !11541)
!11551 = !DILocation(line: 452, column: 8, scope: !11541)
!11552 = !DILocation(line: 452, column: 6, scope: !11541)
!11553 = !DILocation(line: 454, column: 6, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11541, file: !746, line: 454, column: 6)
!11555 = !DILocation(line: 454, column: 10, scope: !11554)
!11556 = !DILocation(line: 454, column: 6, scope: !11541)
!11557 = !DILocation(line: 455, column: 3, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11554, file: !746, line: 454, column: 15)
!11559 = !DILocation(line: 455, column: 10, scope: !11558)
!11560 = !DILocation(line: 455, column: 15, scope: !11558)
!11561 = !DILocation(line: 456, column: 2, scope: !11558)
!11562 = !DILocation(line: 457, column: 1, scope: !11541)
!11563 = distinct !DISubprogram(name: "onoff_stop", scope: !746, file: !746, line: 427, type: !854, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11564 = !DILocalVariable(name: "mgr", arg: 1, scope: !11563, file: !746, line: 427, type: !856)
!11565 = !DILocation(line: 427, column: 46, scope: !11563)
!11566 = !DILocalVariable(name: "notify", arg: 2, scope: !11563, file: !746, line: 428, type: !857)
!11567 = !DILocation(line: 428, column: 20, scope: !11563)
!11568 = !DILocalVariable(name: "res", scope: !11563, file: !746, line: 430, type: !103)
!11569 = !DILocation(line: 430, column: 6, scope: !11563)
!11570 = !DILocation(line: 432, column: 38, scope: !11563)
!11571 = !DILocation(line: 432, column: 27, scope: !11563)
!11572 = !DILocation(line: 432, column: 8, scope: !11563)
!11573 = !DILocation(line: 432, column: 6, scope: !11563)
!11574 = !DILocation(line: 433, column: 2, scope: !11563)
!11575 = !DILocation(line: 433, column: 9, scope: !11563)
!11576 = !DILocation(line: 433, column: 14, scope: !11563)
!11577 = !DILocation(line: 434, column: 1, scope: !11563)
!11578 = distinct !DISubprogram(name: "get_subsys", scope: !746, file: !746, line: 419, type: !11579, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11579 = !DISubroutineType(types: !11580)
!11580 = !{!741, !856}
!11581 = !DILocalVariable(name: "mgr", arg: 1, scope: !11578, file: !746, line: 419, type: !856)
!11582 = !DILocation(line: 419, column: 64, scope: !11578)
!11583 = !DILocalVariable(name: "data", scope: !11578, file: !746, line: 421, type: !10754)
!11584 = !DILocation(line: 421, column: 33, scope: !11578)
!11585 = !DILocation(line: 421, column: 54, scope: !11578)
!11586 = !DILocation(line: 421, column: 40, scope: !11578)
!11587 = !DILocalVariable(name: "offset", scope: !11578, file: !746, line: 422, type: !217)
!11588 = !DILocation(line: 422, column: 9, scope: !11578)
!11589 = !DILocation(line: 422, column: 27, scope: !11578)
!11590 = !DILocation(line: 422, column: 33, scope: !11578)
!11591 = !DILocation(line: 422, column: 39, scope: !11578)
!11592 = !DILocation(line: 422, column: 31, scope: !11578)
!11593 = !DILocation(line: 424, column: 33, scope: !11578)
!11594 = !DILocation(line: 424, column: 9, scope: !11578)
!11595 = !DILocation(line: 424, column: 2, scope: !11578)
!11596 = distinct !DISubprogram(name: "onoff_started_callback", scope: !746, file: !746, line: 436, type: !875, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11597 = !DILocalVariable(name: "dev", arg: 1, scope: !11596, file: !746, line: 436, type: !811)
!11598 = !DILocation(line: 436, column: 57, scope: !11596)
!11599 = !DILocalVariable(name: "sys", arg: 2, scope: !11596, file: !746, line: 437, type: !741)
!11600 = !DILocation(line: 437, column: 31, scope: !11596)
!11601 = !DILocalVariable(name: "user_data", arg: 3, scope: !11596, file: !746, line: 438, type: !102)
!11602 = !DILocation(line: 438, column: 14, scope: !11596)
!11603 = !DILocalVariable(name: "type", scope: !11596, file: !746, line: 440, type: !550)
!11604 = !DILocation(line: 440, column: 30, scope: !11596)
!11605 = !DILocation(line: 440, column: 66, scope: !11596)
!11606 = !DILocation(line: 440, column: 37, scope: !11596)
!11607 = !DILocalVariable(name: "mgr", scope: !11596, file: !746, line: 441, type: !856)
!11608 = !DILocation(line: 441, column: 24, scope: !11596)
!11609 = !DILocation(line: 441, column: 48, scope: !11596)
!11610 = !DILocation(line: 441, column: 53, scope: !11596)
!11611 = !DILocation(line: 441, column: 30, scope: !11596)
!11612 = !DILocalVariable(name: "notify", scope: !11596, file: !746, line: 442, type: !857)
!11613 = !DILocation(line: 442, column: 18, scope: !11596)
!11614 = !DILocation(line: 442, column: 27, scope: !11596)
!11615 = !DILocation(line: 444, column: 2, scope: !11596)
!11616 = !DILocation(line: 444, column: 9, scope: !11596)
!11617 = !DILocation(line: 445, column: 1, scope: !11596)
!11618 = distinct !DISubprogram(name: "z_nrf_clock_control_get_onoff", scope: !746, file: !746, line: 111, type: !11619, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11619 = !DISubroutineType(types: !11620)
!11620 = !{!856, !741}
!11621 = !DILocalVariable(name: "sys", arg: 1, scope: !11618, file: !746, line: 111, type: !741)
!11622 = !DILocation(line: 111, column: 76, scope: !11618)
!11623 = !DILocation(line: 114, column: 34, scope: !11618)
!11624 = !DILocation(line: 114, column: 5, scope: !11618)
!11625 = !DILocation(line: 113, column: 9, scope: !11618)
!11626 = !DILocation(line: 113, column: 2, scope: !11618)
!11627 = distinct !DISubprogram(name: "z_nrf_clock_bt_ctlr_hf_request", scope: !746, file: !746, line: 316, type: !253, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11628 = !DILocation(line: 318, column: 6, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11627, file: !746, line: 318, column: 6)
!11630 = !DILocation(line: 318, column: 42, scope: !11629)
!11631 = !DILocation(line: 318, column: 6, scope: !11627)
!11632 = !DILocation(line: 320, column: 3, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11629, file: !746, line: 318, column: 61)
!11634 = !DILocation(line: 323, column: 2, scope: !11627)
!11635 = !DILocation(line: 324, column: 1, scope: !11627)
!11636 = distinct !DISubprogram(name: "atomic_or", scope: !7160, file: !7160, line: 170, type: !7161, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11637 = !DILocalVariable(name: "target", arg: 1, scope: !11636, file: !7160, line: 170, type: !1342)
!11638 = !DILocation(line: 170, column: 49, scope: !11636)
!11639 = !DILocalVariable(name: "value", arg: 2, scope: !11636, file: !7160, line: 170, type: !1343)
!11640 = !DILocation(line: 170, column: 70, scope: !11636)
!11641 = !DILocation(line: 179, column: 2, scope: !11636)
!11642 = !DILocation(line: 179, column: 2, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11636, file: !7160, line: 179, column: 2)
!11644 = !{i64 2149150456}
!11645 = !DILocation(line: 180, column: 26, scope: !11636)
!11646 = !DILocation(line: 180, column: 34, scope: !11636)
!11647 = !DILocation(line: 180, column: 9, scope: !11636)
!11648 = !DILocation(line: 180, column: 2, scope: !11636)
!11649 = distinct !DISubprogram(name: "z_nrf_clock_bt_ctlr_hf_release", scope: !746, file: !746, line: 326, type: !253, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11650 = !DILocalVariable(name: "key", scope: !11649, file: !746, line: 331, type: !32)
!11651 = !DILocation(line: 331, column: 15, scope: !11649)
!11652 = !DILocation(line: 44, column: 15, scope: !10824, inlinedAt: !11653)
!11653 = distinct !DILocation(line: 331, column: 21, scope: !11649)
!11654 = !DILocation(line: 47, column: 2, scope: !10824, inlinedAt: !11653)
!11655 = !DILocation(line: 76, column: 9, scope: !10824, inlinedAt: !11653)
!11656 = !DILocation(line: 333, column: 14, scope: !11649)
!11657 = !DILocation(line: 335, column: 8, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11649, file: !746, line: 335, column: 6)
!11659 = !DILocation(line: 335, column: 20, scope: !11658)
!11660 = !DILocation(line: 335, column: 6, scope: !11649)
!11661 = !DILocation(line: 336, column: 3, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11658, file: !746, line: 335, column: 40)
!11663 = !DILocation(line: 337, column: 2, scope: !11662)
!11664 = !DILocation(line: 339, column: 2, scope: !11649)
!11665 = !DILocation(line: 84, column: 56, scope: !10857, inlinedAt: !11666)
!11666 = distinct !DILocation(line: 339, column: 2, scope: !11649)
!11667 = !DILocation(line: 87, column: 6, scope: !10861, inlinedAt: !11666)
!11668 = !DILocation(line: 87, column: 10, scope: !10861, inlinedAt: !11666)
!11669 = !DILocation(line: 87, column: 6, scope: !10857, inlinedAt: !11666)
!11670 = !DILocation(line: 88, column: 3, scope: !10865, inlinedAt: !11666)
!11671 = !DILocation(line: 90, column: 2, scope: !10857, inlinedAt: !11666)
!11672 = !DILocation(line: 110, column: 1, scope: !10857, inlinedAt: !11666)
!11673 = !DILocation(line: 340, column: 1, scope: !11649)
!11674 = !DILocalVariable(name: "start_mode", arg: 1, scope: !745, file: !746, line: 547, type: !556)
!11675 = !DILocation(line: 547, column: 58, scope: !745)
!11676 = !DILocation(line: 552, column: 6, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !745, file: !746, line: 552, column: 6)
!11678 = !DILocation(line: 552, column: 25, scope: !11677)
!11679 = !DILocation(line: 552, column: 6, scope: !745)
!11680 = !DILocalVariable(name: "err", scope: !11681, file: !746, line: 553, type: !103)
!11681 = distinct !DILexicalBlock(scope: !11677, file: !746, line: 552, column: 31)
!11682 = !DILocation(line: 553, column: 7, scope: !11681)
!11683 = !DILocalVariable(name: "mgr", scope: !11681, file: !746, line: 554, type: !856)
!11684 = !DILocation(line: 554, column: 25, scope: !11681)
!11685 = !DILocation(line: 555, column: 5, scope: !11681)
!11686 = !DILocation(line: 558, column: 3, scope: !11681)
!11687 = !DILocation(line: 559, column: 23, scope: !11681)
!11688 = !DILocation(line: 559, column: 9, scope: !11681)
!11689 = !DILocation(line: 559, column: 7, scope: !11681)
!11690 = !DILocation(line: 561, column: 2, scope: !11681)
!11691 = !DILocation(line: 568, column: 10, scope: !745)
!11692 = !DILocation(line: 568, column: 2, scope: !745)
!11693 = !DILocation(line: 571, column: 18, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !745, file: !746, line: 568, column: 22)
!11695 = !DILocation(line: 571, column: 3, scope: !11694)
!11696 = !DILocation(line: 572, column: 3, scope: !11694)
!11697 = !DILocation(line: 575, column: 3, scope: !11694)
!11698 = !DILocation(line: 579, column: 2, scope: !11694)
!11699 = !DILocation(line: 580, column: 1, scope: !745)
!11700 = distinct !DISubprogram(name: "atomic_set", scope: !7160, file: !7160, line: 122, type: !7161, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11701 = !DILocalVariable(name: "target", arg: 1, scope: !11700, file: !7160, line: 122, type: !1342)
!11702 = !DILocation(line: 122, column: 50, scope: !11700)
!11703 = !DILocalVariable(name: "value", arg: 2, scope: !11700, file: !7160, line: 122, type: !1343)
!11704 = !DILocation(line: 122, column: 71, scope: !11700)
!11705 = !DILocation(line: 131, column: 2, scope: !11700)
!11706 = !DILocation(line: 131, column: 2, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11700, file: !7160, line: 131, column: 2)
!11708 = !{i64 2149150320}
!11709 = !DILocation(line: 132, column: 27, scope: !11700)
!11710 = !DILocation(line: 132, column: 35, scope: !11700)
!11711 = !DILocation(line: 132, column: 9, scope: !11700)
!11712 = !DILocation(line: 132, column: 2, scope: !11700)
!11713 = distinct !DISubprogram(name: "sys_notify_init_spinwait", scope: !762, file: !762, line: 264, type: !11714, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11714 = !DISubroutineType(types: !11715)
!11715 = !{null, !11716}
!11716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 32)
!11717 = !DILocalVariable(name: "notify", arg: 1, scope: !11713, file: !762, line: 264, type: !11716)
!11718 = !DILocation(line: 264, column: 64, scope: !11713)
!11719 = !DILocation(line: 268, column: 3, scope: !11713)
!11720 = !DILocation(line: 268, column: 31, scope: !11713)
!11721 = !DILocation(line: 268, column: 12, scope: !11713)
!11722 = !DILocation(line: 271, column: 1, scope: !11713)
!11723 = !DILocalVariable(name: "mode", arg: 1, scope: !883, file: !746, line: 474, type: !556)
!11724 = !DILocation(line: 474, column: 54, scope: !883)
!11725 = !DILocalVariable(name: "type", scope: !883, file: !746, line: 486, type: !713)
!11726 = !DILocation(line: 486, column: 20, scope: !883)
!11727 = !DILocation(line: 488, column: 7, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !883, file: !746, line: 488, column: 6)
!11729 = !DILocation(line: 488, column: 12, scope: !11728)
!11730 = !DILocation(line: 489, column: 44, scope: !11728)
!11731 = !DILocation(line: 490, column: 7, scope: !11728)
!11732 = !DILocation(line: 490, column: 43, scope: !11728)
!11733 = !DILocation(line: 488, column: 6, scope: !883)
!11734 = !DILocation(line: 497, column: 3, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11728, file: !746, line: 490, column: 73)
!11736 = !DILocalVariable(name: "isr_mode", scope: !883, file: !746, line: 500, type: !717)
!11737 = !DILocation(line: 500, column: 7, scope: !883)
!11738 = !DILocation(line: 500, column: 18, scope: !883)
!11739 = !DILocation(line: 500, column: 32, scope: !883)
!11740 = !DILocation(line: 500, column: 35, scope: !883)
!11741 = !DILocalVariable(name: "key", scope: !883, file: !746, line: 501, type: !103)
!11742 = !DILocation(line: 501, column: 6, scope: !883)
!11743 = !DILocation(line: 501, column: 12, scope: !883)
!11744 = !DILocation(line: 44, column: 15, scope: !10824, inlinedAt: !11745)
!11745 = distinct !DILocation(line: 501, column: 23, scope: !883)
!11746 = !DILocation(line: 47, column: 2, scope: !10824, inlinedAt: !11745)
!11747 = !DILocation(line: 76, column: 9, scope: !10824, inlinedAt: !11745)
!11748 = !DILocation(line: 503, column: 7, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !883, file: !746, line: 503, column: 6)
!11750 = !DILocation(line: 503, column: 6, scope: !883)
!11751 = !DILocation(line: 504, column: 3, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11749, file: !746, line: 503, column: 17)
!11753 = !DILocation(line: 505, column: 2, scope: !11752)
!11754 = !DILocation(line: 507, column: 2, scope: !883)
!11755 = !DILocation(line: 507, column: 36, scope: !883)
!11756 = !DILocation(line: 507, column: 11, scope: !883)
!11757 = !DILocation(line: 508, column: 4, scope: !883)
!11758 = !DILocation(line: 508, column: 9, scope: !883)
!11759 = !DILocation(line: 508, column: 14, scope: !883)
!11760 = !DILocation(line: 509, column: 8, scope: !883)
!11761 = !DILocation(line: 509, column: 12, scope: !883)
!11762 = !DILocation(line: 509, column: 17, scope: !883)
!11763 = !DILocation(line: 0, scope: !883)
!11764 = !DILocation(line: 507, column: 9, scope: !883)
!11765 = !DILocation(line: 514, column: 8, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11767, file: !746, line: 514, column: 8)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !746, line: 513, column: 59)
!11768 = distinct !DILexicalBlock(scope: !11769, file: !746, line: 513, column: 7)
!11769 = distinct !DILexicalBlock(scope: !883, file: !746, line: 509, column: 61)
!11770 = !DILocation(line: 514, column: 8, scope: !11767)
!11771 = !DILocation(line: 515, column: 23, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11766, file: !746, line: 514, column: 56)
!11773 = !DILocation(line: 515, column: 5, scope: !11772)
!11774 = !DILocation(line: 516, column: 4, scope: !11772)
!11775 = !DILocation(line: 517, column: 5, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11766, file: !746, line: 516, column: 11)
!11777 = !DILocation(line: 523, column: 11, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11769, file: !746, line: 522, column: 7)
!11779 = !DILocation(line: 523, column: 43, scope: !11778)
!11780 = !DILocation(line: 524, column: 7, scope: !11778)
!11781 = !DILocation(line: 524, column: 10, scope: !11778)
!11782 = !DILocation(line: 522, column: 7, scope: !11769)
!11783 = !DILocation(line: 526, column: 4, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11778, file: !746, line: 525, column: 42)
!11785 = !DILocation(line: 528, column: 4, scope: !11784)
!11786 = !DILocation(line: 534, column: 4, scope: !11784)
!11787 = !DILocation(line: 535, column: 4, scope: !11784)
!11788 = !DILocation(line: 537, column: 3, scope: !11784)
!11789 = distinct !{!11789, !11754, !11790}
!11790 = !DILocation(line: 538, column: 2, scope: !883)
!11791 = !DILocation(line: 540, column: 6, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !883, file: !746, line: 540, column: 6)
!11793 = !DILocation(line: 540, column: 6, scope: !883)
!11794 = !DILocation(line: 541, column: 3, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11792, file: !746, line: 540, column: 16)
!11796 = !DILocation(line: 84, column: 56, scope: !10857, inlinedAt: !11797)
!11797 = distinct !DILocation(line: 541, column: 3, scope: !11795)
!11798 = !DILocation(line: 87, column: 6, scope: !10861, inlinedAt: !11797)
!11799 = !DILocation(line: 87, column: 10, scope: !10861, inlinedAt: !11797)
!11800 = !DILocation(line: 87, column: 6, scope: !10857, inlinedAt: !11797)
!11801 = !DILocation(line: 88, column: 3, scope: !10865, inlinedAt: !11797)
!11802 = !DILocation(line: 90, column: 2, scope: !10857, inlinedAt: !11797)
!11803 = !DILocation(line: 110, column: 1, scope: !10857, inlinedAt: !11797)
!11804 = !DILocation(line: 542, column: 2, scope: !11795)
!11805 = !DILocation(line: 543, column: 3, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11792, file: !746, line: 542, column: 9)
!11807 = !DILocation(line: 545, column: 1, scope: !883)
!11808 = distinct !DISubprogram(name: "nrf_clock_lf_srccopy_get", scope: !562, file: !562, line: 866, type: !11809, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11809 = !DISubroutineType(types: !11810)
!11810 = !{!713, !11383}
!11811 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11808, file: !562, line: 866, type: !11383)
!11812 = !DILocation(line: 866, column: 85, scope: !11808)
!11813 = !DILocation(line: 868, column: 33, scope: !11808)
!11814 = !DILocation(line: 868, column: 40, scope: !11808)
!11815 = !DILocation(line: 868, column: 53, scope: !11808)
!11816 = !DILocation(line: 869, column: 33, scope: !11808)
!11817 = !DILocation(line: 868, column: 5, scope: !11808)
!11818 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !109, file: !109, line: 989, type: !3163, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11819 = !DILocation(line: 993, column: 10, scope: !11818)
!11820 = !DILocation(line: 993, column: 9, scope: !11818)
!11821 = !DILocation(line: 993, column: 2, scope: !11818)
!11822 = distinct !DISubprogram(name: "nrf_clock_int_disable", scope: !562, file: !562, line: 710, type: !11823, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11823 = !DISubroutineType(types: !11824)
!11824 = !{null, !665, !173}
!11825 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11822, file: !562, line: 710, type: !665)
!11826 = !DILocation(line: 710, column: 63, scope: !11822)
!11827 = !DILocalVariable(name: "mask", arg: 2, scope: !11822, file: !562, line: 710, type: !173)
!11828 = !DILocation(line: 710, column: 79, scope: !11822)
!11829 = !DILocation(line: 712, column: 23, scope: !11822)
!11830 = !DILocation(line: 712, column: 5, scope: !11822)
!11831 = !DILocation(line: 712, column: 12, scope: !11822)
!11832 = !DILocation(line: 712, column: 21, scope: !11822)
!11833 = !DILocation(line: 713, column: 1, scope: !11822)
!11834 = distinct !DISubprogram(name: "k_cpu_atomic_idle", scope: !109, file: !109, line: 5646, type: !3712, scopeLine: 5647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11835 = !DILocalVariable(name: "key", arg: 1, scope: !11834, file: !109, line: 5646, type: !32)
!11836 = !DILocation(line: 5646, column: 51, scope: !11834)
!11837 = !DILocation(line: 5648, column: 23, scope: !11834)
!11838 = !DILocation(line: 5648, column: 2, scope: !11834)
!11839 = !DILocation(line: 5649, column: 1, scope: !11834)
!11840 = distinct !DISubprogram(name: "k_msleep", scope: !109, file: !109, line: 439, type: !11841, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11841 = !DISubroutineType(types: !11842)
!11842 = !{!250, !250}
!11843 = !DILocalVariable(name: "ms", arg: 1, scope: !11840, file: !109, line: 439, type: !250)
!11844 = !DILocation(line: 439, column: 40, scope: !11840)
!11845 = !DILocation(line: 441, column: 17, scope: !11840)
!11846 = !DILocation(line: 441, column: 9, scope: !11840)
!11847 = !DILocation(line: 441, column: 2, scope: !11840)
!11848 = distinct !DISubprogram(name: "nrf_clock_lf_src_get", scope: !562, file: !562, line: 854, type: !11809, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11849 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11848, file: !562, line: 854, type: !11383)
!11850 = !DILocation(line: 854, column: 81, scope: !11848)
!11851 = !DILocation(line: 856, column: 32, scope: !11848)
!11852 = !DILocation(line: 856, column: 39, scope: !11848)
!11853 = !DILocation(line: 856, column: 5, scope: !11848)
!11854 = distinct !DISubprogram(name: "nrf_clock_event_check", scope: !562, file: !562, line: 743, type: !11855, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11855 = !DISubroutineType(types: !11856)
!11856 = !{!717, !11383, !11857}
!11857 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_clock_event_t", file: !562, line: 281, baseType: !577)
!11858 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11854, file: !562, line: 743, type: !11383)
!11859 = !DILocation(line: 743, column: 69, scope: !11854)
!11860 = !DILocalVariable(name: "event", arg: 2, scope: !11854, file: !562, line: 743, type: !11857)
!11861 = !DILocation(line: 743, column: 94, scope: !11854)
!11862 = !DILocation(line: 745, column: 53, scope: !11854)
!11863 = !DILocation(line: 745, column: 42, scope: !11854)
!11864 = !DILocation(line: 745, column: 61, scope: !11854)
!11865 = !DILocation(line: 745, column: 59, scope: !11854)
!11866 = !DILocation(line: 745, column: 18, scope: !11854)
!11867 = !DILocation(line: 745, column: 12, scope: !11854)
!11868 = !DILocation(line: 745, column: 5, scope: !11854)
!11869 = distinct !DISubprogram(name: "nrf_clock_event_clear", scope: !562, file: !562, line: 737, type: !11870, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11870 = !DISubroutineType(types: !11871)
!11871 = !{null, !665, !11857}
!11872 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11869, file: !562, line: 737, type: !665)
!11873 = !DILocation(line: 737, column: 63, scope: !11869)
!11874 = !DILocalVariable(name: "event", arg: 2, scope: !11869, file: !562, line: 737, type: !11857)
!11875 = !DILocation(line: 737, column: 88, scope: !11869)
!11876 = !DILocation(line: 739, column: 40, scope: !11869)
!11877 = !DILocation(line: 739, column: 29, scope: !11869)
!11878 = !DILocation(line: 739, column: 58, scope: !11869)
!11879 = !DILocation(line: 739, column: 46, scope: !11869)
!11880 = !DILocation(line: 739, column: 5, scope: !11869)
!11881 = !DILocation(line: 739, column: 66, scope: !11869)
!11882 = !DILocation(line: 740, column: 35, scope: !11869)
!11883 = !DILocation(line: 740, column: 24, scope: !11869)
!11884 = !DILocation(line: 740, column: 53, scope: !11869)
!11885 = !DILocation(line: 740, column: 41, scope: !11869)
!11886 = !DILocation(line: 740, column: 5, scope: !11869)
!11887 = !DILocation(line: 741, column: 1, scope: !11869)
!11888 = distinct !DISubprogram(name: "nrf_clock_lf_src_set", scope: !562, file: !562, line: 849, type: !11889, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11889 = !DISubroutineType(types: !11890)
!11890 = !{null, !665, !713}
!11891 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11888, file: !562, line: 849, type: !665)
!11892 = !DILocation(line: 849, column: 62, scope: !11888)
!11893 = !DILocalVariable(name: "source", arg: 2, scope: !11888, file: !562, line: 849, type: !713)
!11894 = !DILocation(line: 849, column: 87, scope: !11888)
!11895 = !DILocation(line: 851, column: 34, scope: !11888)
!11896 = !DILocation(line: 851, column: 5, scope: !11888)
!11897 = !DILocation(line: 851, column: 12, scope: !11888)
!11898 = !DILocation(line: 851, column: 21, scope: !11888)
!11899 = !DILocation(line: 852, column: 1, scope: !11888)
!11900 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !508, file: !508, line: 714, type: !8779, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11901 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11900, file: !508, line: 714, type: !1685)
!11902 = !DILocation(line: 714, column: 55, scope: !11900)
!11903 = !DILocation(line: 716, column: 17, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11900, file: !508, line: 716, column: 7)
!11905 = !DILocation(line: 716, column: 23, scope: !11904)
!11906 = !DILocation(line: 716, column: 7, scope: !11900)
!11907 = !DILocation(line: 718, column: 52, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11904, file: !508, line: 717, column: 3)
!11909 = !DILocation(line: 718, column: 58, scope: !11908)
!11910 = !DILocation(line: 718, column: 37, scope: !11908)
!11911 = !DILocation(line: 718, column: 20, scope: !11908)
!11912 = !DILocation(line: 719, column: 3, scope: !11908)
!11913 = !DILocation(line: 720, column: 1, scope: !11900)
!11914 = distinct !DISubprogram(name: "nrf_clock_task_trigger", scope: !562, file: !562, line: 726, type: !11915, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11915 = !DISubroutineType(types: !11916)
!11916 = !{null, !665, !11917}
!11917 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_clock_task_t", file: !562, line: 258, baseType: !583)
!11918 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11914, file: !562, line: 726, type: !665)
!11919 = !DILocation(line: 726, column: 64, scope: !11914)
!11920 = !DILocalVariable(name: "task", arg: 2, scope: !11914, file: !562, line: 726, type: !11917)
!11921 = !DILocation(line: 726, column: 88, scope: !11914)
!11922 = !DILocation(line: 728, column: 40, scope: !11914)
!11923 = !DILocation(line: 728, column: 29, scope: !11914)
!11924 = !DILocation(line: 728, column: 58, scope: !11914)
!11925 = !DILocation(line: 728, column: 46, scope: !11914)
!11926 = !DILocation(line: 728, column: 5, scope: !11914)
!11927 = !DILocation(line: 728, column: 65, scope: !11914)
!11928 = !DILocation(line: 729, column: 1, scope: !11914)
!11929 = distinct !DISubprogram(name: "nrf_clock_int_enable", scope: !562, file: !562, line: 705, type: !11823, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11930 = !DILocalVariable(name: "p_reg", arg: 1, scope: !11929, file: !562, line: 705, type: !665)
!11931 = !DILocation(line: 705, column: 62, scope: !11929)
!11932 = !DILocalVariable(name: "mask", arg: 2, scope: !11929, file: !562, line: 705, type: !173)
!11933 = !DILocation(line: 705, column: 78, scope: !11929)
!11934 = !DILocation(line: 707, column: 23, scope: !11929)
!11935 = !DILocation(line: 707, column: 5, scope: !11929)
!11936 = !DILocation(line: 707, column: 12, scope: !11929)
!11937 = !DILocation(line: 707, column: 21, scope: !11929)
!11938 = !DILocation(line: 708, column: 1, scope: !11929)
!11939 = distinct !DISubprogram(name: "nrf_event_readback", scope: !11940, file: !11940, line: 63, type: !8756, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11940 = !DIFile(filename: "modules/hal/nordic/nrfx/hal/nrf_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11941 = !DILocalVariable(name: "p_event_reg", arg: 1, scope: !11939, file: !11940, line: 63, type: !102)
!11942 = !DILocation(line: 63, column: 50, scope: !11939)
!11943 = !DILocation(line: 68, column: 11, scope: !11939)
!11944 = !DILocation(line: 70, column: 1, scope: !11939)
!11945 = distinct !DISubprogram(name: "k_sleep", scope: !3240, file: !3240, line: 91, type: !11946, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !223)
!11946 = !DISubroutineType(types: !11947)
!11947 = !{!250, !11174}
!11948 = !DILocalVariable(name: "timeout", arg: 1, scope: !11945, file: !3240, line: 91, type: !11174)
!11949 = !DILocation(line: 91, column: 43, scope: !11945)
!11950 = !DILocation(line: 99, column: 2, scope: !11945)
!11951 = !DILocation(line: 99, column: 2, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11945, file: !3240, line: 99, column: 2)
!11953 = !{i64 2150379809}
!11954 = !DILocation(line: 100, column: 9, scope: !11945)
!11955 = !DILocation(line: 100, column: 2, scope: !11945)
!11956 = distinct !DISubprogram(name: "uart_console_init", scope: !1020, file: !1020, line: 588, type: !997, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !223)
!11957 = !DILocalVariable(name: "arg", arg: 1, scope: !11956, file: !1020, line: 588, type: !975)
!11958 = !DILocation(line: 588, column: 51, scope: !11956)
!11959 = !DILocation(line: 591, column: 2, scope: !11956)
!11960 = !DILocation(line: 593, column: 7, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11956, file: !1020, line: 593, column: 6)
!11962 = !DILocation(line: 593, column: 6, scope: !11956)
!11963 = !DILocation(line: 594, column: 3, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11961, file: !1020, line: 593, column: 42)
!11965 = !DILocation(line: 597, column: 2, scope: !11956)
!11966 = !DILocation(line: 599, column: 2, scope: !11956)
!11967 = !DILocation(line: 600, column: 1, scope: !11956)
!11968 = distinct !DISubprogram(name: "device_is_ready", scope: !11969, file: !11969, line: 47, type: !11970, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !223)
!11969 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!11970 = !DISubroutineType(types: !11971)
!11971 = !{!717, !975}
!11972 = !DILocalVariable(name: "dev", arg: 1, scope: !11968, file: !11969, line: 47, type: !975)
!11973 = !DILocation(line: 47, column: 58, scope: !11968)
!11974 = !DILocation(line: 55, column: 2, scope: !11968)
!11975 = !DILocation(line: 55, column: 2, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11968, file: !11969, line: 55, column: 2)
!11977 = !{i64 2149828802}
!11978 = !DILocation(line: 56, column: 32, scope: !11968)
!11979 = !DILocation(line: 56, column: 9, scope: !11968)
!11980 = !DILocation(line: 56, column: 2, scope: !11968)
!11981 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1020, file: !1020, line: 573, type: !253, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !223)
!11982 = !DILocation(line: 576, column: 2, scope: !11981)
!11983 = !DILocation(line: 579, column: 2, scope: !11981)
!11984 = !DILocation(line: 581, column: 1, scope: !11981)
!11985 = distinct !DISubprogram(name: "console_out", scope: !1020, file: !1020, line: 77, type: !274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !223)
!11986 = !DILocalVariable(name: "c", arg: 1, scope: !11985, file: !1020, line: 77, type: !103)
!11987 = !DILocation(line: 77, column: 28, scope: !11985)
!11988 = !DILocation(line: 89, column: 14, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11985, file: !1020, line: 89, column: 6)
!11990 = !DILocation(line: 89, column: 11, scope: !11989)
!11991 = !DILocation(line: 89, column: 6, scope: !11985)
!11992 = !DILocation(line: 90, column: 3, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !1020, line: 89, column: 17)
!11994 = !DILocation(line: 91, column: 2, scope: !11993)
!11995 = !DILocation(line: 92, column: 34, scope: !11985)
!11996 = !DILocation(line: 92, column: 2, scope: !11985)
!11997 = !DILocation(line: 94, column: 9, scope: !11985)
!11998 = !DILocation(line: 94, column: 2, scope: !11985)
!11999 = distinct !DISubprogram(name: "uart_poll_out", scope: !12000, file: !12000, line: 95, type: !993, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !223)
!12000 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon_nrf51/gdbstub")
!12001 = !DILocalVariable(name: "dev", arg: 1, scope: !11999, file: !12000, line: 95, type: !975)
!12002 = !DILocation(line: 95, column: 56, scope: !11999)
!12003 = !DILocalVariable(name: "out_char", arg: 2, scope: !11999, file: !12000, line: 95, type: !157)
!12004 = !DILocation(line: 95, column: 75, scope: !11999)
!12005 = !DILocation(line: 105, column: 2, scope: !11999)
!12006 = !DILocation(line: 105, column: 2, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11999, file: !12000, line: 105, column: 2)
!12008 = !{i64 2149912193}
!12009 = !DILocation(line: 106, column: 23, scope: !11999)
!12010 = !DILocation(line: 106, column: 28, scope: !11999)
!12011 = !DILocation(line: 106, column: 2, scope: !11999)
!12012 = !DILocation(line: 107, column: 1, scope: !11999)
!12013 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !969, file: !969, line: 574, type: !993, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !223)
!12014 = !DILocalVariable(name: "dev", arg: 1, scope: !12013, file: !969, line: 574, type: !975)
!12015 = !DILocation(line: 574, column: 62, scope: !12013)
!12016 = !DILocalVariable(name: "out_char", arg: 2, scope: !12013, file: !969, line: 575, type: !157)
!12017 = !DILocation(line: 575, column: 20, scope: !12013)
!12018 = !DILocalVariable(name: "api", scope: !12013, file: !969, line: 577, type: !966)
!12019 = !DILocation(line: 577, column: 32, scope: !12013)
!12020 = !DILocation(line: 578, column: 35, scope: !12013)
!12021 = !DILocation(line: 578, column: 40, scope: !12013)
!12022 = !DILocation(line: 578, column: 3, scope: !12013)
!12023 = !DILocation(line: 580, column: 2, scope: !12013)
!12024 = !DILocation(line: 580, column: 7, scope: !12013)
!12025 = !DILocation(line: 580, column: 16, scope: !12013)
!12026 = !DILocation(line: 580, column: 21, scope: !12013)
!12027 = !DILocation(line: 581, column: 1, scope: !12013)
!12028 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !801, file: !801, line: 730, type: !11970, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !223)
!12029 = !DILocalVariable(name: "dev", arg: 1, scope: !12028, file: !801, line: 730, type: !975)
!12030 = !DILocation(line: 730, column: 64, scope: !12028)
!12031 = !DILocation(line: 732, column: 27, scope: !12028)
!12032 = !DILocation(line: 732, column: 9, scope: !12028)
!12033 = !DILocation(line: 732, column: 2, scope: !12028)
!12034 = distinct !DISubprogram(name: "uart_register_input", scope: !1020, file: !1020, line: 560, type: !12035, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !223)
!12035 = !DISubroutineType(types: !12036)
!12036 = !{null, !12037, !12037, !12077}
!12037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12038, size: 32)
!12038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !109, line: 2208, size: 128, elements: !12039)
!12039 = !{!12040}
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !12038, file: !109, line: 2209, baseType: !12041, size: 128)
!12041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !109, line: 1709, size: 128, elements: !12042)
!12042 = !{!12043, !12056, !12058}
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !12041, file: !109, line: 1710, baseType: !12044, size: 64)
!12044 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !12045, line: 46, baseType: !12046)
!12045 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !12045, line: 41, size: 64, elements: !12047)
!12047 = !{!12048, !12055}
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12046, file: !12045, line: 42, baseType: !12049, size: 32)
!12049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12050, size: 32)
!12050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !12045, line: 39, baseType: !12051)
!12051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !12045, line: 35, size: 32, elements: !12052)
!12052 = !{!12053}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !12051, file: !12045, line: 36, baseType: !12054, size: 32)
!12054 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !12045, line: 32, baseType: !173)
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12046, file: !12045, line: 43, baseType: !12049, size: 32, offset: 32)
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12041, file: !109, line: 1711, baseType: !12057, offset: 64)
!12057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12041, file: !109, line: 1712, baseType: !12059, size: 64, offset: 64)
!12059 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !12060)
!12060 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !12061)
!12061 = !{!12062}
!12062 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12060, file: !150, line: 232, baseType: !12063, size: 64)
!12063 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !12064)
!12064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !12065)
!12065 = !{!12066, !12072}
!12066 = !DIDerivedType(tag: DW_TAG_member, scope: !12064, file: !124, line: 38, baseType: !12067, size: 32)
!12067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12064, file: !124, line: 38, size: 32, elements: !12068)
!12068 = !{!12069, !12071}
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12067, file: !124, line: 39, baseType: !12070, size: 32)
!12070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12064, size: 32)
!12071 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12067, file: !124, line: 40, baseType: !12070, size: 32)
!12072 = !DIDerivedType(tag: DW_TAG_member, scope: !12064, file: !124, line: 42, baseType: !12073, size: 32, offset: 32)
!12073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12064, file: !124, line: 42, size: 32, elements: !12074)
!12074 = !{!12075, !12076}
!12075 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12073, file: !124, line: 43, baseType: !12070, size: 32)
!12076 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12073, file: !124, line: 44, baseType: !12070, size: 32)
!12077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12078, size: 32)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!156, !311, !156}
!12080 = !DILocalVariable(name: "avail", arg: 1, scope: !12034, file: !1020, line: 560, type: !12037)
!12081 = !DILocation(line: 560, column: 41, scope: !12034)
!12082 = !DILocalVariable(name: "lines", arg: 2, scope: !12034, file: !1020, line: 560, type: !12037)
!12083 = !DILocation(line: 560, column: 63, scope: !12034)
!12084 = !DILocalVariable(name: "completion", arg: 3, scope: !12034, file: !1020, line: 561, type: !12077)
!12085 = !DILocation(line: 561, column: 15, scope: !12034)
!12086 = !DILocation(line: 563, column: 2, scope: !12034)
!12087 = !DILocation(line: 564, column: 2, scope: !12034)
!12088 = !DILocation(line: 565, column: 2, scope: !12034)
!12089 = !DILocation(line: 566, column: 1, scope: !12034)
!12090 = distinct !DISubprogram(name: "gpio_nrfx_pin_configure", scope: !1185, file: !1185, line: 85, type: !1084, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12091 = !DILocalVariable(name: "port", arg: 1, scope: !12090, file: !1185, line: 85, type: !1086)
!12092 = !DILocation(line: 85, column: 57, scope: !12090)
!12093 = !DILocalVariable(name: "pin", arg: 2, scope: !12090, file: !1185, line: 85, type: !1101)
!12094 = !DILocation(line: 85, column: 74, scope: !12090)
!12095 = !DILocalVariable(name: "flags", arg: 3, scope: !12090, file: !1185, line: 86, type: !1102)
!12096 = !DILocation(line: 86, column: 21, scope: !12090)
!12097 = !DILocalVariable(name: "err", scope: !12090, file: !1185, line: 88, type: !11444)
!12098 = !DILocation(line: 88, column: 13, scope: !12090)
!12099 = !DILocalVariable(name: "ch", scope: !12090, file: !1185, line: 89, type: !156)
!12100 = !DILocation(line: 89, column: 10, scope: !12090)
!12101 = !DILocalVariable(name: "free_ch", scope: !12090, file: !1185, line: 90, type: !717)
!12102 = !DILocation(line: 90, column: 7, scope: !12090)
!12103 = !DILocalVariable(name: "cfg", scope: !12090, file: !1185, line: 91, type: !12104)
!12104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!12105 = !DILocation(line: 91, column: 30, scope: !12090)
!12106 = !DILocation(line: 91, column: 49, scope: !12090)
!12107 = !DILocation(line: 91, column: 36, scope: !12090)
!12108 = !DILocalVariable(name: "abs_pin", scope: !12090, file: !1185, line: 92, type: !1796)
!12109 = !DILocation(line: 92, column: 20, scope: !12090)
!12110 = !DILocation(line: 92, column: 30, scope: !12090)
!12111 = !DILocation(line: 97, column: 32, scope: !12090)
!12112 = !DILocation(line: 97, column: 8, scope: !12090)
!12113 = !DILocation(line: 97, column: 6, scope: !12090)
!12114 = !DILocation(line: 98, column: 13, scope: !12090)
!12115 = !DILocation(line: 98, column: 17, scope: !12090)
!12116 = !DILocation(line: 98, column: 10, scope: !12090)
!12117 = !DILocation(line: 100, column: 7, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12090, file: !1185, line: 100, column: 6)
!12119 = !DILocation(line: 100, column: 13, scope: !12118)
!12120 = !DILocation(line: 100, column: 43, scope: !12118)
!12121 = !DILocation(line: 100, column: 6, scope: !12090)
!12122 = !DILocation(line: 102, column: 32, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12118, file: !1185, line: 100, column: 65)
!12124 = !DILocation(line: 102, column: 9, scope: !12123)
!12125 = !DILocation(line: 104, column: 7, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12123, file: !1185, line: 104, column: 7)
!12127 = !DILocation(line: 104, column: 7, scope: !12123)
!12128 = !DILocation(line: 105, column: 35, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12126, file: !1185, line: 104, column: 16)
!12130 = !DILocation(line: 105, column: 10, scope: !12129)
!12131 = !DILocation(line: 105, column: 8, scope: !12129)
!12132 = !DILocation(line: 107, column: 3, scope: !12129)
!12133 = !DILocation(line: 109, column: 3, scope: !12123)
!12134 = !DILocalVariable(name: "trigger_config", scope: !12090, file: !1185, line: 112, type: !12135)
!12135 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_trigger_config_t", file: !1044, line: 115, baseType: !12136)
!12136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 108, size: 64, elements: !12137)
!12137 = !{!12138, !12139}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !12136, file: !1044, line: 110, baseType: !1790, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "p_in_channel", scope: !12136, file: !1044, line: 111, baseType: !1798, size: 32, offset: 32)
!12140 = !DILocation(line: 112, column: 31, scope: !12090)
!12141 = !DILocation(line: 117, column: 36, scope: !12090)
!12142 = !DILocation(line: 117, column: 8, scope: !12090)
!12143 = !DILocation(line: 117, column: 6, scope: !12090)
!12144 = !DILocation(line: 118, column: 6, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12090, file: !1185, line: 118, column: 6)
!12146 = !DILocation(line: 118, column: 10, scope: !12145)
!12147 = !DILocation(line: 118, column: 6, scope: !12090)
!12148 = !DILocation(line: 119, column: 3, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12145, file: !1185, line: 118, column: 27)
!12150 = !DILocation(line: 122, column: 6, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12090, file: !1185, line: 122, column: 6)
!12152 = !DILocation(line: 122, column: 6, scope: !12090)
!12153 = !DILocation(line: 123, column: 34, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12151, file: !1185, line: 122, column: 15)
!12155 = !DILocation(line: 123, column: 9, scope: !12154)
!12156 = !DILocation(line: 123, column: 7, scope: !12154)
!12157 = !DILocation(line: 125, column: 2, scope: !12154)
!12158 = !DILocation(line: 127, column: 6, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12090, file: !1185, line: 127, column: 6)
!12160 = !DILocation(line: 127, column: 12, scope: !12159)
!12161 = !DILocation(line: 127, column: 6, scope: !12090)
!12162 = !DILocalVariable(name: "drive", scope: !12163, file: !1185, line: 128, type: !12164)
!12163 = distinct !DILexicalBlock(scope: !12159, file: !1185, line: 127, column: 27)
!12164 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpio_pin_drive_t", file: !1054, line: 141, baseType: !1053)
!12165 = !DILocation(line: 128, column: 24, scope: !12163)
!12166 = !DILocalVariable(name: "rv", scope: !12163, file: !1185, line: 129, type: !103)
!12167 = !DILocation(line: 129, column: 7, scope: !12163)
!12168 = !DILocation(line: 129, column: 22, scope: !12163)
!12169 = !DILocation(line: 129, column: 12, scope: !12163)
!12170 = !DILocation(line: 131, column: 7, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12163, file: !1185, line: 131, column: 7)
!12172 = !DILocation(line: 131, column: 10, scope: !12171)
!12173 = !DILocation(line: 131, column: 7, scope: !12163)
!12174 = !DILocation(line: 132, column: 11, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12171, file: !1185, line: 131, column: 16)
!12176 = !DILocation(line: 132, column: 4, scope: !12175)
!12177 = !DILocalVariable(name: "output_config", scope: !12163, file: !1185, line: 135, type: !12178)
!12178 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_output_config_t", file: !1044, line: 99, baseType: !12179)
!12179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 92, size: 96, elements: !12180)
!12180 = !{!12181, !12182, !12184}
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "drive", scope: !12179, file: !1044, line: 94, baseType: !12164, size: 32)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "input_connect", scope: !12179, file: !1044, line: 95, baseType: !12183, size: 32, offset: 32)
!12183 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpio_pin_input_t", file: !1054, line: 96, baseType: !1064)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "pull", scope: !12179, file: !1044, line: 96, baseType: !12185, size: 32, offset: 64)
!12185 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpio_pin_pull_t", file: !1054, line: 107, baseType: !1068)
!12186 = !DILocation(line: 135, column: 31, scope: !12163)
!12187 = !DILocation(line: 135, column: 47, scope: !12163)
!12188 = !DILocation(line: 136, column: 13, scope: !12163)
!12189 = !DILocation(line: 137, column: 22, scope: !12163)
!12190 = !DILocation(line: 137, column: 28, scope: !12163)
!12191 = !DILocation(line: 137, column: 21, scope: !12163)
!12192 = !DILocation(line: 140, column: 21, scope: !12163)
!12193 = !DILocation(line: 140, column: 12, scope: !12163)
!12194 = !DILocation(line: 144, column: 7, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12163, file: !1185, line: 144, column: 7)
!12196 = !DILocation(line: 144, column: 13, scope: !12195)
!12197 = !DILocation(line: 144, column: 7, scope: !12163)
!12198 = !DILocation(line: 145, column: 26, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12195, file: !1185, line: 144, column: 38)
!12200 = !DILocation(line: 145, column: 31, scope: !12199)
!12201 = !DILocation(line: 145, column: 37, scope: !12199)
!12202 = !DILocation(line: 145, column: 4, scope: !12199)
!12203 = !DILocation(line: 146, column: 3, scope: !12199)
!12204 = !DILocation(line: 146, column: 14, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12195, file: !1185, line: 146, column: 14)
!12206 = !DILocation(line: 146, column: 20, scope: !12205)
!12207 = !DILocation(line: 146, column: 14, scope: !12195)
!12208 = !DILocation(line: 147, column: 28, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12205, file: !1185, line: 146, column: 44)
!12210 = !DILocation(line: 147, column: 33, scope: !12209)
!12211 = !DILocation(line: 147, column: 39, scope: !12209)
!12212 = !DILocation(line: 147, column: 4, scope: !12209)
!12213 = !DILocation(line: 148, column: 3, scope: !12209)
!12214 = !DILocation(line: 150, column: 38, scope: !12163)
!12215 = !DILocation(line: 150, column: 9, scope: !12163)
!12216 = !DILocation(line: 150, column: 7, scope: !12163)
!12217 = !DILocation(line: 151, column: 11, scope: !12163)
!12218 = !DILocation(line: 151, column: 15, scope: !12163)
!12219 = !DILocation(line: 151, column: 10, scope: !12163)
!12220 = !DILocation(line: 151, column: 3, scope: !12163)
!12221 = !DILocalVariable(name: "input_config", scope: !12090, file: !1185, line: 154, type: !12222)
!12222 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_input_config_t", file: !1044, line: 105, baseType: !12223)
!12223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 102, size: 32, elements: !12224)
!12224 = !{!12225}
!12225 = !DIDerivedType(tag: DW_TAG_member, name: "pull", scope: !12223, file: !1044, line: 104, baseType: !12185, size: 32)
!12226 = !DILocation(line: 154, column: 29, scope: !12090)
!12227 = !DILocation(line: 154, column: 44, scope: !12090)
!12228 = !DILocation(line: 155, column: 20, scope: !12090)
!12229 = !DILocation(line: 155, column: 11, scope: !12090)
!12230 = !DILocation(line: 158, column: 36, scope: !12090)
!12231 = !DILocation(line: 158, column: 8, scope: !12090)
!12232 = !DILocation(line: 158, column: 6, scope: !12090)
!12233 = !DILocation(line: 160, column: 10, scope: !12090)
!12234 = !DILocation(line: 160, column: 14, scope: !12090)
!12235 = !DILocation(line: 160, column: 9, scope: !12090)
!12236 = !DILocation(line: 160, column: 2, scope: !12090)
!12237 = !DILocation(line: 161, column: 1, scope: !12090)
!12238 = distinct !DISubprogram(name: "gpio_nrfx_port_get_raw", scope: !1185, file: !1185, line: 163, type: !1105, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12239 = !DILocalVariable(name: "port", arg: 1, scope: !12238, file: !1185, line: 163, type: !1086)
!12240 = !DILocation(line: 163, column: 56, scope: !12238)
!12241 = !DILocalVariable(name: "value", arg: 2, scope: !12238, file: !1185, line: 164, type: !1107)
!12242 = !DILocation(line: 164, column: 26, scope: !12238)
!12243 = !DILocalVariable(name: "reg", scope: !12238, file: !1185, line: 166, type: !1159)
!12244 = !DILocation(line: 166, column: 17, scope: !12238)
!12245 = !DILocation(line: 166, column: 36, scope: !12238)
!12246 = !DILocation(line: 166, column: 23, scope: !12238)
!12247 = !DILocation(line: 166, column: 43, scope: !12238)
!12248 = !DILocation(line: 168, column: 33, scope: !12238)
!12249 = !DILocation(line: 168, column: 11, scope: !12238)
!12250 = !DILocation(line: 168, column: 3, scope: !12238)
!12251 = !DILocation(line: 168, column: 9, scope: !12238)
!12252 = !DILocation(line: 170, column: 2, scope: !12238)
!12253 = distinct !DISubprogram(name: "gpio_nrfx_port_set_masked_raw", scope: !1185, file: !1185, line: 173, type: !1111, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12254 = !DILocalVariable(name: "port", arg: 1, scope: !12253, file: !1185, line: 173, type: !1086)
!12255 = !DILocation(line: 173, column: 63, scope: !12253)
!12256 = !DILocalVariable(name: "mask", arg: 2, scope: !12253, file: !1185, line: 174, type: !1113)
!12257 = !DILocation(line: 174, column: 24, scope: !12253)
!12258 = !DILocalVariable(name: "value", arg: 3, scope: !12253, file: !1185, line: 175, type: !1108)
!12259 = !DILocation(line: 175, column: 25, scope: !12253)
!12260 = !DILocalVariable(name: "reg", scope: !12253, file: !1185, line: 177, type: !1159)
!12261 = !DILocation(line: 177, column: 17, scope: !12253)
!12262 = !DILocation(line: 177, column: 36, scope: !12253)
!12263 = !DILocation(line: 177, column: 23, scope: !12253)
!12264 = !DILocation(line: 177, column: 43, scope: !12253)
!12265 = !DILocalVariable(name: "set_mask", scope: !12253, file: !1185, line: 179, type: !12266)
!12266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!12267 = !DILocation(line: 179, column: 17, scope: !12253)
!12268 = !DILocation(line: 179, column: 28, scope: !12253)
!12269 = !DILocation(line: 179, column: 36, scope: !12253)
!12270 = !DILocation(line: 179, column: 34, scope: !12253)
!12271 = !DILocalVariable(name: "clear_mask", scope: !12253, file: !1185, line: 180, type: !12266)
!12272 = !DILocation(line: 180, column: 17, scope: !12253)
!12273 = !DILocation(line: 180, column: 32, scope: !12253)
!12274 = !DILocation(line: 180, column: 31, scope: !12253)
!12275 = !DILocation(line: 180, column: 44, scope: !12253)
!12276 = !DILocation(line: 180, column: 42, scope: !12253)
!12277 = !DILocation(line: 182, column: 24, scope: !12253)
!12278 = !DILocation(line: 182, column: 29, scope: !12253)
!12279 = !DILocation(line: 182, column: 2, scope: !12253)
!12280 = !DILocation(line: 183, column: 26, scope: !12253)
!12281 = !DILocation(line: 183, column: 31, scope: !12253)
!12282 = !DILocation(line: 183, column: 2, scope: !12253)
!12283 = !DILocation(line: 185, column: 2, scope: !12253)
!12284 = distinct !DISubprogram(name: "gpio_nrfx_port_set_bits_raw", scope: !1185, file: !1185, line: 188, type: !1116, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12285 = !DILocalVariable(name: "port", arg: 1, scope: !12284, file: !1185, line: 188, type: !1086)
!12286 = !DILocation(line: 188, column: 61, scope: !12284)
!12287 = !DILocalVariable(name: "mask", arg: 2, scope: !12284, file: !1185, line: 189, type: !1113)
!12288 = !DILocation(line: 189, column: 29, scope: !12284)
!12289 = !DILocalVariable(name: "reg", scope: !12284, file: !1185, line: 191, type: !1159)
!12290 = !DILocation(line: 191, column: 17, scope: !12284)
!12291 = !DILocation(line: 191, column: 36, scope: !12284)
!12292 = !DILocation(line: 191, column: 23, scope: !12284)
!12293 = !DILocation(line: 191, column: 43, scope: !12284)
!12294 = !DILocation(line: 193, column: 24, scope: !12284)
!12295 = !DILocation(line: 193, column: 29, scope: !12284)
!12296 = !DILocation(line: 193, column: 2, scope: !12284)
!12297 = !DILocation(line: 195, column: 2, scope: !12284)
!12298 = distinct !DISubprogram(name: "gpio_nrfx_port_clear_bits_raw", scope: !1185, file: !1185, line: 198, type: !1116, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12299 = !DILocalVariable(name: "port", arg: 1, scope: !12298, file: !1185, line: 198, type: !1086)
!12300 = !DILocation(line: 198, column: 63, scope: !12298)
!12301 = !DILocalVariable(name: "mask", arg: 2, scope: !12298, file: !1185, line: 199, type: !1113)
!12302 = !DILocation(line: 199, column: 24, scope: !12298)
!12303 = !DILocalVariable(name: "reg", scope: !12298, file: !1185, line: 201, type: !1159)
!12304 = !DILocation(line: 201, column: 17, scope: !12298)
!12305 = !DILocation(line: 201, column: 36, scope: !12298)
!12306 = !DILocation(line: 201, column: 23, scope: !12298)
!12307 = !DILocation(line: 201, column: 43, scope: !12298)
!12308 = !DILocation(line: 203, column: 26, scope: !12298)
!12309 = !DILocation(line: 203, column: 31, scope: !12298)
!12310 = !DILocation(line: 203, column: 2, scope: !12298)
!12311 = !DILocation(line: 205, column: 2, scope: !12298)
!12312 = distinct !DISubprogram(name: "gpio_nrfx_port_toggle_bits", scope: !1185, file: !1185, line: 208, type: !1116, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12313 = !DILocalVariable(name: "port", arg: 1, scope: !12312, file: !1185, line: 208, type: !1086)
!12314 = !DILocation(line: 208, column: 60, scope: !12312)
!12315 = !DILocalVariable(name: "mask", arg: 2, scope: !12312, file: !1185, line: 209, type: !1113)
!12316 = !DILocation(line: 209, column: 28, scope: !12312)
!12317 = !DILocalVariable(name: "reg", scope: !12312, file: !1185, line: 211, type: !1159)
!12318 = !DILocation(line: 211, column: 17, scope: !12312)
!12319 = !DILocation(line: 211, column: 36, scope: !12312)
!12320 = !DILocation(line: 211, column: 23, scope: !12312)
!12321 = !DILocation(line: 211, column: 43, scope: !12312)
!12322 = !DILocalVariable(name: "value", scope: !12312, file: !1185, line: 212, type: !12266)
!12323 = !DILocation(line: 212, column: 17, scope: !12312)
!12324 = !DILocation(line: 212, column: 48, scope: !12312)
!12325 = !DILocation(line: 212, column: 25, scope: !12312)
!12326 = !DILocation(line: 212, column: 55, scope: !12312)
!12327 = !DILocation(line: 212, column: 53, scope: !12312)
!12328 = !DILocalVariable(name: "set_mask", scope: !12312, file: !1185, line: 213, type: !12266)
!12329 = !DILocation(line: 213, column: 17, scope: !12312)
!12330 = !DILocation(line: 213, column: 28, scope: !12312)
!12331 = !DILocation(line: 213, column: 36, scope: !12312)
!12332 = !DILocation(line: 213, column: 34, scope: !12312)
!12333 = !DILocalVariable(name: "clear_mask", scope: !12312, file: !1185, line: 214, type: !12266)
!12334 = !DILocation(line: 214, column: 17, scope: !12312)
!12335 = !DILocation(line: 214, column: 32, scope: !12312)
!12336 = !DILocation(line: 214, column: 31, scope: !12312)
!12337 = !DILocation(line: 214, column: 41, scope: !12312)
!12338 = !DILocation(line: 214, column: 39, scope: !12312)
!12339 = !DILocation(line: 216, column: 24, scope: !12312)
!12340 = !DILocation(line: 216, column: 29, scope: !12312)
!12341 = !DILocation(line: 216, column: 2, scope: !12312)
!12342 = !DILocation(line: 217, column: 26, scope: !12312)
!12343 = !DILocation(line: 217, column: 31, scope: !12312)
!12344 = !DILocation(line: 217, column: 2, scope: !12312)
!12345 = !DILocation(line: 219, column: 2, scope: !12312)
!12346 = distinct !DISubprogram(name: "gpio_nrfx_pin_interrupt_configure", scope: !1185, file: !1185, line: 235, type: !1122, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12347 = !DILocalVariable(name: "port", arg: 1, scope: !12346, file: !1185, line: 235, type: !1086)
!12348 = !DILocation(line: 235, column: 67, scope: !12346)
!12349 = !DILocalVariable(name: "pin", arg: 2, scope: !12346, file: !1185, line: 236, type: !1101)
!12350 = !DILocation(line: 236, column: 22, scope: !12346)
!12351 = !DILocalVariable(name: "mode", arg: 3, scope: !12346, file: !1185, line: 237, type: !1032)
!12352 = !DILocation(line: 237, column: 30, scope: !12346)
!12353 = !DILocalVariable(name: "trig", arg: 4, scope: !12346, file: !1185, line: 238, type: !1038)
!12354 = !DILocation(line: 238, column: 30, scope: !12346)
!12355 = !DILocalVariable(name: "abs_pin", scope: !12346, file: !1185, line: 240, type: !173)
!12356 = !DILocation(line: 240, column: 11, scope: !12346)
!12357 = !DILocation(line: 240, column: 21, scope: !12346)
!12358 = !DILocalVariable(name: "err", scope: !12346, file: !1185, line: 241, type: !11444)
!12359 = !DILocation(line: 241, column: 13, scope: !12346)
!12360 = !DILocalVariable(name: "ch", scope: !12346, file: !1185, line: 242, type: !156)
!12361 = !DILocation(line: 242, column: 10, scope: !12346)
!12362 = !DILocation(line: 244, column: 6, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12346, file: !1185, line: 244, column: 6)
!12364 = !DILocation(line: 244, column: 11, scope: !12363)
!12365 = !DILocation(line: 244, column: 6, scope: !12346)
!12366 = !DILocation(line: 245, column: 31, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12363, file: !1185, line: 244, column: 38)
!12368 = !DILocation(line: 245, column: 3, scope: !12367)
!12369 = !DILocation(line: 247, column: 3, scope: !12367)
!12370 = !DILocalVariable(name: "trigger_config", scope: !12346, file: !1185, line: 250, type: !12135)
!12371 = !DILocation(line: 250, column: 31, scope: !12346)
!12372 = !DILocation(line: 250, column: 48, scope: !12346)
!12373 = !DILocation(line: 251, column: 26, scope: !12346)
!12374 = !DILocation(line: 251, column: 32, scope: !12346)
!12375 = !DILocation(line: 251, column: 14, scope: !12346)
!12376 = !DILocation(line: 257, column: 8, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12346, file: !1185, line: 257, column: 6)
!12378 = !DILocation(line: 257, column: 32, scope: !12377)
!12379 = !DILocation(line: 257, column: 19, scope: !12377)
!12380 = !DILocation(line: 257, column: 39, scope: !12377)
!12381 = !DILocation(line: 257, column: 17, scope: !12377)
!12382 = !DILocation(line: 257, column: 51, scope: !12377)
!12383 = !DILocation(line: 258, column: 7, scope: !12377)
!12384 = !DILocation(line: 258, column: 12, scope: !12377)
!12385 = !DILocation(line: 258, column: 35, scope: !12377)
!12386 = !DILocation(line: 259, column: 28, scope: !12377)
!12387 = !DILocation(line: 259, column: 7, scope: !12377)
!12388 = !DILocation(line: 259, column: 37, scope: !12377)
!12389 = !DILocation(line: 257, column: 6, scope: !12346)
!12390 = !DILocation(line: 260, column: 33, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12377, file: !1185, line: 259, column: 65)
!12392 = !DILocation(line: 260, column: 9, scope: !12391)
!12393 = !DILocation(line: 260, column: 7, scope: !12391)
!12394 = !DILocation(line: 261, column: 7, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12391, file: !1185, line: 261, column: 7)
!12396 = !DILocation(line: 261, column: 11, scope: !12395)
!12397 = !DILocation(line: 261, column: 7, scope: !12391)
!12398 = !DILocation(line: 262, column: 10, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12395, file: !1185, line: 261, column: 40)
!12400 = !DILocation(line: 262, column: 8, scope: !12399)
!12401 = !DILocation(line: 263, column: 8, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12399, file: !1185, line: 263, column: 8)
!12403 = !DILocation(line: 263, column: 12, scope: !12402)
!12404 = !DILocation(line: 263, column: 8, scope: !12399)
!12405 = !DILocation(line: 264, column: 5, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12402, file: !1185, line: 263, column: 29)
!12407 = !DILocation(line: 266, column: 3, scope: !12399)
!12408 = !DILocation(line: 268, column: 18, scope: !12391)
!12409 = !DILocation(line: 268, column: 31, scope: !12391)
!12410 = !DILocation(line: 269, column: 2, scope: !12391)
!12411 = !DILocation(line: 271, column: 36, scope: !12346)
!12412 = !DILocation(line: 271, column: 8, scope: !12346)
!12413 = !DILocation(line: 271, column: 6, scope: !12346)
!12414 = !DILocation(line: 272, column: 6, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12346, file: !1185, line: 272, column: 6)
!12416 = !DILocation(line: 272, column: 10, scope: !12415)
!12417 = !DILocation(line: 272, column: 6, scope: !12346)
!12418 = !DILocation(line: 273, column: 3, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12415, file: !1185, line: 272, column: 27)
!12420 = !DILocation(line: 276, column: 29, scope: !12346)
!12421 = !DILocation(line: 276, column: 2, scope: !12346)
!12422 = !DILocation(line: 278, column: 2, scope: !12346)
!12423 = !DILocation(line: 279, column: 1, scope: !12346)
!12424 = distinct !DISubprogram(name: "gpio_nrfx_manage_callback", scope: !1185, file: !1185, line: 281, type: !1126, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12425 = !DILocalVariable(name: "port", arg: 1, scope: !12424, file: !1185, line: 281, type: !1086)
!12426 = !DILocation(line: 281, column: 59, scope: !12424)
!12427 = !DILocalVariable(name: "callback", arg: 2, scope: !12424, file: !1185, line: 282, type: !1128)
!12428 = !DILocation(line: 282, column: 32, scope: !12424)
!12429 = !DILocalVariable(name: "set", arg: 3, scope: !12424, file: !1185, line: 283, type: !717)
!12430 = !DILocation(line: 283, column: 15, scope: !12424)
!12431 = !DILocation(line: 285, column: 45, scope: !12424)
!12432 = !DILocation(line: 285, column: 31, scope: !12424)
!12433 = !DILocation(line: 285, column: 52, scope: !12424)
!12434 = !DILocation(line: 286, column: 10, scope: !12424)
!12435 = !DILocation(line: 286, column: 20, scope: !12424)
!12436 = !DILocation(line: 285, column: 9, scope: !12424)
!12437 = !DILocation(line: 285, column: 2, scope: !12424)
!12438 = distinct !DISubprogram(name: "get_port_data", scope: !1185, file: !1185, line: 30, type: !12439, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12439 = !DISubroutineType(types: !12440)
!12440 = !{!12441, !1086}
!12441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!12442 = !DILocalVariable(name: "port", arg: 1, scope: !12438, file: !1185, line: 30, type: !1086)
!12443 = !DILocation(line: 30, column: 73, scope: !12438)
!12444 = !DILocation(line: 32, column: 9, scope: !12438)
!12445 = !DILocation(line: 32, column: 15, scope: !12438)
!12446 = !DILocation(line: 32, column: 2, scope: !12438)
!12447 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !12448, file: !12448, line: 38, type: !12449, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12448 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12449 = !DISubroutineType(types: !12450)
!12450 = !{!103, !12451, !1128, !717}
!12451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!12452 = !DILocalVariable(name: "callbacks", arg: 1, scope: !12447, file: !12448, line: 38, type: !12451)
!12453 = !DILocation(line: 38, column: 53, scope: !12447)
!12454 = !DILocalVariable(name: "callback", arg: 2, scope: !12447, file: !12448, line: 39, type: !1128)
!12455 = !DILocation(line: 39, column: 28, scope: !12447)
!12456 = !DILocalVariable(name: "set", arg: 3, scope: !12447, file: !12448, line: 40, type: !717)
!12457 = !DILocation(line: 40, column: 11, scope: !12447)
!12458 = !DILocation(line: 45, column: 26, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12447, file: !12448, line: 45, column: 6)
!12460 = !DILocation(line: 45, column: 7, scope: !12459)
!12461 = !DILocation(line: 45, column: 6, scope: !12447)
!12462 = !DILocation(line: 46, column: 34, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12464, file: !12448, line: 46, column: 7)
!12464 = distinct !DILexicalBlock(scope: !12459, file: !12448, line: 45, column: 38)
!12465 = !DILocation(line: 46, column: 46, scope: !12463)
!12466 = !DILocation(line: 46, column: 56, scope: !12463)
!12467 = !DILocation(line: 46, column: 8, scope: !12463)
!12468 = !DILocation(line: 46, column: 7, scope: !12464)
!12469 = !DILocation(line: 47, column: 9, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !12448, line: 47, column: 8)
!12471 = distinct !DILexicalBlock(scope: !12463, file: !12448, line: 46, column: 63)
!12472 = !DILocation(line: 47, column: 8, scope: !12471)
!12473 = !DILocation(line: 48, column: 5, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12470, file: !12448, line: 47, column: 14)
!12475 = !DILocation(line: 50, column: 3, scope: !12471)
!12476 = !DILocation(line: 51, column: 2, scope: !12464)
!12477 = !DILocation(line: 51, column: 14, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12459, file: !12448, line: 51, column: 13)
!12479 = !DILocation(line: 51, column: 13, scope: !12459)
!12480 = !DILocation(line: 52, column: 3, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12478, file: !12448, line: 51, column: 19)
!12482 = !DILocation(line: 55, column: 6, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12447, file: !12448, line: 55, column: 6)
!12484 = !DILocation(line: 55, column: 6, scope: !12447)
!12485 = !DILocation(line: 56, column: 21, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12483, file: !12448, line: 55, column: 11)
!12487 = !DILocation(line: 56, column: 33, scope: !12486)
!12488 = !DILocation(line: 56, column: 43, scope: !12486)
!12489 = !DILocation(line: 56, column: 3, scope: !12486)
!12490 = !DILocation(line: 57, column: 2, scope: !12486)
!12491 = !DILocation(line: 59, column: 2, scope: !12447)
!12492 = !DILocation(line: 60, column: 1, scope: !12447)
!12493 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !301, file: !301, line: 261, type: !12494, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{!717, !12451}
!12496 = !DILocalVariable(name: "list", arg: 1, scope: !12493, file: !301, line: 261, type: !12451)
!12497 = !DILocation(line: 261, column: 1, scope: !12493)
!12498 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !301, file: !301, line: 417, type: !12499, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12499 = !DISubroutineType(types: !12500)
!12500 = !{!717, !12451, !1208}
!12501 = !DILocalVariable(name: "list", arg: 1, scope: !12498, file: !301, line: 417, type: !12451)
!12502 = !DILocation(line: 417, column: 1, scope: !12498)
!12503 = !DILocalVariable(name: "node", arg: 2, scope: !12498, file: !301, line: 417, type: !1208)
!12504 = !DILocalVariable(name: "prev", scope: !12498, file: !301, line: 417, type: !1208)
!12505 = !DILocalVariable(name: "test", scope: !12498, file: !301, line: 417, type: !1208)
!12506 = !DILocation(line: 417, column: 1, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12498, file: !301, line: 417, column: 1)
!12508 = !DILocation(line: 417, column: 1, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12507, file: !301, line: 417, column: 1)
!12510 = !DILocation(line: 417, column: 1, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !301, line: 417, column: 1)
!12512 = distinct !DILexicalBlock(scope: !12509, file: !301, line: 417, column: 1)
!12513 = !DILocation(line: 417, column: 1, scope: !12512)
!12514 = !DILocation(line: 417, column: 1, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12511, file: !301, line: 417, column: 1)
!12516 = distinct !{!12516, !12506, !12506}
!12517 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !301, file: !301, line: 298, type: !12518, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12518 = !DISubroutineType(types: !12519)
!12519 = !{null, !12451, !1208}
!12520 = !DILocalVariable(name: "list", arg: 1, scope: !12517, file: !301, line: 298, type: !12451)
!12521 = !DILocation(line: 298, column: 1, scope: !12517)
!12522 = !DILocalVariable(name: "node", arg: 2, scope: !12517, file: !301, line: 298, type: !1208)
!12523 = !DILocation(line: 298, column: 1, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12517, file: !301, line: 298, column: 1)
!12525 = !DILocation(line: 298, column: 1, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12524, file: !301, line: 298, column: 1)
!12527 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !301, file: !301, line: 231, type: !12528, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{!1208, !12451}
!12530 = !DILocalVariable(name: "list", arg: 1, scope: !12527, file: !301, line: 231, type: !12451)
!12531 = !DILocation(line: 231, column: 61, scope: !12527)
!12532 = !DILocation(line: 233, column: 9, scope: !12527)
!12533 = !DILocation(line: 233, column: 15, scope: !12527)
!12534 = !DILocation(line: 233, column: 2, scope: !12527)
!12535 = distinct !DISubprogram(name: "z_snode_next_set", scope: !301, file: !301, line: 209, type: !12536, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12536 = !DISubroutineType(types: !12537)
!12537 = !{null, !1208, !1208}
!12538 = !DILocalVariable(name: "parent", arg: 1, scope: !12535, file: !301, line: 209, type: !1208)
!12539 = !DILocation(line: 209, column: 50, scope: !12535)
!12540 = !DILocalVariable(name: "child", arg: 2, scope: !12535, file: !301, line: 209, type: !1208)
!12541 = !DILocation(line: 209, column: 71, scope: !12535)
!12542 = !DILocation(line: 211, column: 17, scope: !12535)
!12543 = !DILocation(line: 211, column: 2, scope: !12535)
!12544 = !DILocation(line: 211, column: 10, scope: !12535)
!12545 = !DILocation(line: 211, column: 15, scope: !12535)
!12546 = !DILocation(line: 212, column: 1, scope: !12535)
!12547 = distinct !DISubprogram(name: "z_slist_head_set", scope: !301, file: !301, line: 214, type: !12518, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12548 = !DILocalVariable(name: "list", arg: 1, scope: !12547, file: !301, line: 214, type: !12451)
!12549 = !DILocation(line: 214, column: 50, scope: !12547)
!12550 = !DILocalVariable(name: "node", arg: 2, scope: !12547, file: !301, line: 214, type: !1208)
!12551 = !DILocation(line: 214, column: 69, scope: !12547)
!12552 = !DILocation(line: 216, column: 15, scope: !12547)
!12553 = !DILocation(line: 216, column: 2, scope: !12547)
!12554 = !DILocation(line: 216, column: 8, scope: !12547)
!12555 = !DILocation(line: 216, column: 13, scope: !12547)
!12556 = !DILocation(line: 217, column: 1, scope: !12547)
!12557 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !301, file: !301, line: 243, type: !12528, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12558 = !DILocalVariable(name: "list", arg: 1, scope: !12557, file: !301, line: 243, type: !12451)
!12559 = !DILocation(line: 243, column: 61, scope: !12557)
!12560 = !DILocation(line: 245, column: 9, scope: !12557)
!12561 = !DILocation(line: 245, column: 15, scope: !12557)
!12562 = !DILocation(line: 245, column: 2, scope: !12557)
!12563 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !301, file: !301, line: 219, type: !12518, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12564 = !DILocalVariable(name: "list", arg: 1, scope: !12563, file: !301, line: 219, type: !12451)
!12565 = !DILocation(line: 219, column: 50, scope: !12563)
!12566 = !DILocalVariable(name: "node", arg: 2, scope: !12563, file: !301, line: 219, type: !1208)
!12567 = !DILocation(line: 219, column: 69, scope: !12563)
!12568 = !DILocation(line: 221, column: 15, scope: !12563)
!12569 = !DILocation(line: 221, column: 2, scope: !12563)
!12570 = !DILocation(line: 221, column: 8, scope: !12563)
!12571 = !DILocation(line: 221, column: 13, scope: !12563)
!12572 = !DILocation(line: 222, column: 1, scope: !12563)
!12573 = distinct !DISubprogram(name: "sys_slist_remove", scope: !301, file: !301, line: 401, type: !12574, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12574 = !DISubroutineType(types: !12575)
!12575 = !{null, !12451, !1208, !1208}
!12576 = !DILocalVariable(name: "list", arg: 1, scope: !12573, file: !301, line: 401, type: !12451)
!12577 = !DILocation(line: 401, column: 1, scope: !12573)
!12578 = !DILocalVariable(name: "prev_node", arg: 2, scope: !12573, file: !301, line: 401, type: !1208)
!12579 = !DILocalVariable(name: "node", arg: 3, scope: !12573, file: !301, line: 401, type: !1208)
!12580 = !DILocation(line: 401, column: 1, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12573, file: !301, line: 401, column: 1)
!12582 = !DILocation(line: 401, column: 1, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12581, file: !301, line: 401, column: 1)
!12584 = !DILocation(line: 401, column: 1, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12583, file: !301, line: 401, column: 1)
!12586 = !DILocation(line: 401, column: 1, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12585, file: !301, line: 401, column: 1)
!12588 = !DILocation(line: 401, column: 1, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12581, file: !301, line: 401, column: 1)
!12590 = !DILocation(line: 401, column: 1, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12589, file: !301, line: 401, column: 1)
!12592 = !DILocation(line: 401, column: 1, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12591, file: !301, line: 401, column: 1)
!12594 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !301, file: !301, line: 285, type: !12595, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12595 = !DISubroutineType(types: !12596)
!12596 = !{!1208, !1208}
!12597 = !DILocalVariable(name: "node", arg: 1, scope: !12594, file: !301, line: 285, type: !1208)
!12598 = !DILocation(line: 285, column: 1, scope: !12594)
!12599 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !301, file: !301, line: 274, type: !12595, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12600 = !DILocalVariable(name: "node", arg: 1, scope: !12599, file: !301, line: 274, type: !1208)
!12601 = !DILocation(line: 274, column: 1, scope: !12599)
!12602 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !301, file: !301, line: 204, type: !12595, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12603 = !DILocalVariable(name: "node", arg: 1, scope: !12602, file: !301, line: 204, type: !1208)
!12604 = !DILocation(line: 204, column: 59, scope: !12602)
!12605 = !DILocation(line: 206, column: 9, scope: !12602)
!12606 = !DILocation(line: 206, column: 15, scope: !12602)
!12607 = !DILocation(line: 206, column: 2, scope: !12602)
!12608 = distinct !DISubprogram(name: "get_port_cfg", scope: !1185, file: !1185, line: 35, type: !12609, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{!12104, !1086}
!12611 = !DILocalVariable(name: "port", arg: 1, scope: !12608, file: !1185, line: 35, type: !1086)
!12612 = !DILocation(line: 35, column: 77, scope: !12608)
!12613 = !DILocation(line: 37, column: 9, scope: !12608)
!12614 = !DILocation(line: 37, column: 15, scope: !12608)
!12615 = !DILocation(line: 37, column: 2, scope: !12608)
!12616 = distinct !DISubprogram(name: "get_trigger", scope: !1185, file: !1185, line: 222, type: !12617, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12617 = !DISubroutineType(types: !12618)
!12618 = !{!1790, !1032, !1038}
!12619 = !DILocalVariable(name: "mode", arg: 1, scope: !12616, file: !1185, line: 222, type: !1032)
!12620 = !DILocation(line: 222, column: 61, scope: !12616)
!12621 = !DILocalVariable(name: "trig", arg: 2, scope: !12616, file: !1185, line: 223, type: !1038)
!12622 = !DILocation(line: 223, column: 26, scope: !12616)
!12623 = !DILocation(line: 225, column: 6, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12616, file: !1185, line: 225, column: 6)
!12625 = !DILocation(line: 225, column: 11, scope: !12624)
!12626 = !DILocation(line: 225, column: 6, scope: !12616)
!12627 = !DILocation(line: 226, column: 10, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12624, file: !1185, line: 225, column: 35)
!12629 = !DILocation(line: 226, column: 15, scope: !12628)
!12630 = !DILocation(line: 226, column: 3, scope: !12628)
!12631 = !DILocation(line: 230, column: 9, scope: !12616)
!12632 = !DILocation(line: 230, column: 14, scope: !12616)
!12633 = !DILocation(line: 231, column: 9, scope: !12616)
!12634 = !DILocation(line: 231, column: 14, scope: !12616)
!12635 = !DILocation(line: 230, column: 2, scope: !12616)
!12636 = !DILocation(line: 233, column: 1, scope: !12616)
!12637 = distinct !DISubprogram(name: "nrf_gpio_pin_dir_get", scope: !1054, file: !1054, line: 828, type: !12638, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12638 = !DISubroutineType(types: !12639)
!12639 = !{!1158, !173}
!12640 = !DILocalVariable(name: "pin_number", arg: 1, scope: !12637, file: !1054, line: 828, type: !173)
!12641 = !DILocation(line: 828, column: 68, scope: !12637)
!12642 = !DILocalVariable(name: "reg", scope: !12637, file: !1054, line: 830, type: !1159)
!12643 = !DILocation(line: 830, column: 21, scope: !12637)
!12644 = !DILocation(line: 830, column: 27, scope: !12637)
!12645 = !DILocation(line: 832, column: 34, scope: !12637)
!12646 = !DILocation(line: 832, column: 39, scope: !12637)
!12647 = !DILocation(line: 832, column: 47, scope: !12637)
!12648 = !DILocation(line: 832, column: 59, scope: !12637)
!12649 = !DILocation(line: 833, column: 56, scope: !12637)
!12650 = !DILocation(line: 832, column: 5, scope: !12637)
!12651 = distinct !DISubprogram(name: "nrf_gpio_pin_port_decode", scope: !1054, file: !1054, line: 581, type: !12652, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12652 = !DISubroutineType(types: !12653)
!12653 = !{!1159, !922}
!12654 = !DILocalVariable(name: "p_pin", arg: 1, scope: !12651, file: !1054, line: 581, type: !922)
!12655 = !DILocation(line: 581, column: 71, scope: !12651)
!12656 = !DILocation(line: 585, column: 46, scope: !12651)
!12657 = !DILocation(line: 585, column: 13, scope: !12651)
!12658 = !DILocation(line: 585, column: 5, scope: !12651)
!12659 = !DILocation(line: 588, column: 13, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12661, file: !1054, line: 588, column: 13)
!12661 = distinct !DILexicalBlock(scope: !12651, file: !1054, line: 586, column: 5)
!12662 = !DILocation(line: 591, column: 17, scope: !12661)
!12663 = distinct !DISubprogram(name: "nrf_gpio_pin_port_number_extract", scope: !1054, file: !1054, line: 1024, type: !12664, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12664 = !DISubroutineType(types: !12665)
!12665 = !{!173, !922}
!12666 = !DILocalVariable(name: "p_pin", arg: 1, scope: !12663, file: !1054, line: 1024, type: !922)
!12667 = !DILocation(line: 1024, column: 72, scope: !12663)
!12668 = !DILocalVariable(name: "pin_number", scope: !12663, file: !1054, line: 1026, type: !173)
!12669 = !DILocation(line: 1026, column: 14, scope: !12663)
!12670 = !DILocation(line: 1026, column: 28, scope: !12663)
!12671 = !DILocation(line: 1026, column: 27, scope: !12663)
!12672 = !DILocation(line: 1027, column: 14, scope: !12663)
!12673 = !DILocation(line: 1027, column: 25, scope: !12663)
!12674 = !DILocation(line: 1027, column: 6, scope: !12663)
!12675 = !DILocation(line: 1027, column: 12, scope: !12663)
!12676 = !DILocation(line: 1029, column: 12, scope: !12663)
!12677 = !DILocation(line: 1029, column: 23, scope: !12663)
!12678 = !DILocation(line: 1029, column: 5, scope: !12663)
!12679 = distinct !DISubprogram(name: "nrf_gpio_port_out_read", scope: !1054, file: !1054, line: 883, type: !12680, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12680 = !DISubroutineType(types: !12681)
!12681 = !{!173, !12682}
!12682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12683, size: 32)
!12683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!12684 = !DILocalVariable(name: "p_reg", arg: 1, scope: !12679, file: !1054, line: 883, type: !12682)
!12685 = !DILocation(line: 883, column: 73, scope: !12679)
!12686 = !DILocation(line: 885, column: 12, scope: !12679)
!12687 = !DILocation(line: 885, column: 19, scope: !12679)
!12688 = !DILocation(line: 885, column: 5, scope: !12679)
!12689 = distinct !DISubprogram(name: "nrf_gpio_port_out_set", scope: !1054, file: !1054, line: 895, type: !12690, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12690 = !DISubroutineType(types: !12691)
!12691 = !{null, !1159, !173}
!12692 = !DILocalVariable(name: "p_reg", arg: 1, scope: !12689, file: !1054, line: 895, type: !1159)
!12693 = !DILocation(line: 895, column: 62, scope: !12689)
!12694 = !DILocalVariable(name: "set_mask", arg: 2, scope: !12689, file: !1054, line: 895, type: !173)
!12695 = !DILocation(line: 895, column: 78, scope: !12689)
!12696 = !DILocation(line: 897, column: 21, scope: !12689)
!12697 = !DILocation(line: 897, column: 5, scope: !12689)
!12698 = !DILocation(line: 897, column: 12, scope: !12689)
!12699 = !DILocation(line: 897, column: 19, scope: !12689)
!12700 = !DILocation(line: 898, column: 1, scope: !12689)
!12701 = distinct !DISubprogram(name: "nrf_gpio_port_out_clear", scope: !1054, file: !1054, line: 901, type: !12690, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12702 = !DILocalVariable(name: "p_reg", arg: 1, scope: !12701, file: !1054, line: 901, type: !1159)
!12703 = !DILocation(line: 901, column: 64, scope: !12701)
!12704 = !DILocalVariable(name: "clr_mask", arg: 2, scope: !12701, file: !1054, line: 901, type: !173)
!12705 = !DILocation(line: 901, column: 80, scope: !12701)
!12706 = !DILocation(line: 903, column: 21, scope: !12701)
!12707 = !DILocation(line: 903, column: 5, scope: !12701)
!12708 = !DILocation(line: 903, column: 12, scope: !12701)
!12709 = !DILocation(line: 903, column: 19, scope: !12701)
!12710 = !DILocation(line: 904, column: 1, scope: !12701)
!12711 = distinct !DISubprogram(name: "nrf_gpio_port_in_read", scope: !1054, file: !1054, line: 877, type: !12680, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12712 = !DILocalVariable(name: "p_reg", arg: 1, scope: !12711, file: !1054, line: 877, type: !12682)
!12713 = !DILocation(line: 877, column: 72, scope: !12711)
!12714 = !DILocation(line: 879, column: 12, scope: !12711)
!12715 = !DILocation(line: 879, column: 19, scope: !12711)
!12716 = !DILocation(line: 879, column: 5, scope: !12711)
!12717 = distinct !DISubprogram(name: "get_drive", scope: !1185, file: !1185, line: 40, type: !12718, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{!103, !1102, !12720}
!12720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12164, size: 32)
!12721 = !DILocalVariable(name: "flags", arg: 1, scope: !12717, file: !1185, line: 40, type: !1102)
!12722 = !DILocation(line: 40, column: 35, scope: !12717)
!12723 = !DILocalVariable(name: "drive", arg: 2, scope: !12717, file: !1185, line: 40, type: !12720)
!12724 = !DILocation(line: 40, column: 64, scope: !12717)
!12725 = !DILocation(line: 42, column: 10, scope: !12717)
!12726 = !DILocation(line: 42, column: 16, scope: !12717)
!12727 = !DILocation(line: 42, column: 2, scope: !12717)
!12728 = !DILocation(line: 44, column: 4, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12717, file: !1185, line: 42, column: 58)
!12730 = !DILocation(line: 44, column: 10, scope: !12729)
!12731 = !DILocation(line: 45, column: 3, scope: !12729)
!12732 = !DILocation(line: 47, column: 4, scope: !12729)
!12733 = !DILocation(line: 47, column: 10, scope: !12729)
!12734 = !DILocation(line: 48, column: 3, scope: !12729)
!12735 = !DILocation(line: 50, column: 4, scope: !12729)
!12736 = !DILocation(line: 50, column: 10, scope: !12729)
!12737 = !DILocation(line: 51, column: 3, scope: !12729)
!12738 = !DILocation(line: 53, column: 4, scope: !12729)
!12739 = !DILocation(line: 53, column: 10, scope: !12729)
!12740 = !DILocation(line: 54, column: 3, scope: !12729)
!12741 = !DILocation(line: 56, column: 4, scope: !12729)
!12742 = !DILocation(line: 56, column: 10, scope: !12729)
!12743 = !DILocation(line: 57, column: 3, scope: !12729)
!12744 = !DILocation(line: 59, column: 4, scope: !12729)
!12745 = !DILocation(line: 59, column: 10, scope: !12729)
!12746 = !DILocation(line: 60, column: 3, scope: !12729)
!12747 = !DILocation(line: 62, column: 4, scope: !12729)
!12748 = !DILocation(line: 62, column: 10, scope: !12729)
!12749 = !DILocation(line: 63, column: 3, scope: !12729)
!12750 = !DILocation(line: 65, column: 4, scope: !12729)
!12751 = !DILocation(line: 65, column: 10, scope: !12729)
!12752 = !DILocation(line: 66, column: 3, scope: !12729)
!12753 = !DILocation(line: 68, column: 3, scope: !12729)
!12754 = !DILocation(line: 71, column: 2, scope: !12717)
!12755 = !DILocation(line: 72, column: 1, scope: !12717)
!12756 = distinct !DISubprogram(name: "get_pull", scope: !1185, file: !1185, line: 74, type: !12757, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12757 = !DISubroutineType(types: !12758)
!12758 = !{!12185, !1102}
!12759 = !DILocalVariable(name: "flags", arg: 1, scope: !12756, file: !1185, line: 74, type: !1102)
!12760 = !DILocation(line: 74, column: 50, scope: !12756)
!12761 = !DILocation(line: 76, column: 6, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12756, file: !1185, line: 76, column: 6)
!12763 = !DILocation(line: 76, column: 12, scope: !12762)
!12764 = !DILocation(line: 76, column: 6, scope: !12756)
!12765 = !DILocation(line: 77, column: 3, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12762, file: !1185, line: 76, column: 28)
!12767 = !DILocation(line: 78, column: 13, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12762, file: !1185, line: 78, column: 13)
!12769 = !DILocation(line: 78, column: 19, scope: !12768)
!12770 = !DILocation(line: 78, column: 13, scope: !12762)
!12771 = !DILocation(line: 79, column: 3, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12768, file: !1185, line: 78, column: 37)
!12773 = !DILocation(line: 82, column: 2, scope: !12756)
!12774 = !DILocation(line: 83, column: 1, scope: !12756)
!12775 = !DILocalVariable(name: "port", arg: 1, scope: !1216, file: !1185, line: 363, type: !1086)
!12776 = !DILocation(line: 363, column: 48, scope: !1216)
!12777 = !DILocalVariable(name: "err", scope: !1216, file: !1185, line: 365, type: !11444)
!12778 = !DILocation(line: 365, column: 13, scope: !1216)
!12779 = !DILocation(line: 367, column: 6, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !1216, file: !1185, line: 367, column: 6)
!12781 = !DILocation(line: 367, column: 6, scope: !1216)
!12782 = !DILocation(line: 368, column: 3, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12780, file: !1185, line: 367, column: 29)
!12784 = !DILocation(line: 371, column: 8, scope: !1216)
!12785 = !DILocation(line: 371, column: 6, scope: !1216)
!12786 = !DILocation(line: 372, column: 6, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !1216, file: !1185, line: 372, column: 6)
!12788 = !DILocation(line: 372, column: 10, scope: !12787)
!12789 = !DILocation(line: 372, column: 6, scope: !1216)
!12790 = !DILocation(line: 373, column: 3, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12787, file: !1185, line: 372, column: 27)
!12792 = !DILocation(line: 376, column: 2, scope: !1216)
!12793 = !DILocation(line: 378, column: 2, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !1216, file: !1185, line: 378, column: 2)
!12795 = !DILocation(line: 381, column: 2, scope: !1216)
!12796 = !DILocation(line: 382, column: 1, scope: !1216)
!12797 = distinct !DISubprogram(name: "nrfx_gpio_handler", scope: !1185, file: !1185, line: 342, type: !1812, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12798 = !DILocalVariable(name: "abs_pin", arg: 1, scope: !12797, file: !1185, line: 342, type: !1796)
!12799 = !DILocation(line: 342, column: 49, scope: !12797)
!12800 = !DILocalVariable(name: "trigger", arg: 2, scope: !12797, file: !1185, line: 343, type: !1790)
!12801 = !DILocation(line: 343, column: 32, scope: !12797)
!12802 = !DILocalVariable(name: "context", arg: 3, scope: !12797, file: !1185, line: 344, type: !102)
!12803 = !DILocation(line: 344, column: 16, scope: !12797)
!12804 = !DILocalVariable(name: "pin", scope: !12797, file: !1185, line: 346, type: !173)
!12805 = !DILocation(line: 346, column: 11, scope: !12797)
!12806 = !DILocation(line: 346, column: 17, scope: !12797)
!12807 = !DILocalVariable(name: "port_id", scope: !12797, file: !1185, line: 347, type: !173)
!12808 = !DILocation(line: 347, column: 11, scope: !12797)
!12809 = !DILocation(line: 347, column: 21, scope: !12797)
!12810 = !DILocalVariable(name: "port", scope: !12797, file: !1185, line: 348, type: !1086)
!12811 = !DILocation(line: 348, column: 23, scope: !12797)
!12812 = !DILocation(line: 348, column: 38, scope: !12797)
!12813 = !DILocation(line: 348, column: 30, scope: !12797)
!12814 = !DILocation(line: 351, column: 6, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12797, file: !1185, line: 351, column: 6)
!12816 = !DILocation(line: 351, column: 11, scope: !12815)
!12817 = !DILocation(line: 351, column: 6, scope: !12797)
!12818 = !DILocation(line: 352, column: 3, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12815, file: !1185, line: 351, column: 20)
!12820 = !DILocalVariable(name: "data", scope: !12797, file: !1185, line: 355, type: !12441)
!12821 = !DILocation(line: 355, column: 25, scope: !12797)
!12822 = !DILocation(line: 355, column: 46, scope: !12797)
!12823 = !DILocation(line: 355, column: 32, scope: !12797)
!12824 = !DILocalVariable(name: "list", scope: !12797, file: !1185, line: 356, type: !12451)
!12825 = !DILocation(line: 356, column: 15, scope: !12797)
!12826 = !DILocation(line: 356, column: 23, scope: !12797)
!12827 = !DILocation(line: 356, column: 29, scope: !12797)
!12828 = !DILocation(line: 358, column: 22, scope: !12797)
!12829 = !DILocation(line: 358, column: 28, scope: !12797)
!12830 = !DILocation(line: 358, column: 34, scope: !12797)
!12831 = !DILocation(line: 358, column: 2, scope: !12797)
!12832 = !DILocation(line: 359, column: 1, scope: !12797)
!12833 = distinct !DISubprogram(name: "get_dev", scope: !1185, file: !1185, line: 325, type: !12834, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12834 = !DISubroutineType(types: !12835)
!12835 = !{!1086, !173}
!12836 = !DILocalVariable(name: "port_id", arg: 1, scope: !12833, file: !1185, line: 325, type: !173)
!12837 = !DILocation(line: 325, column: 46, scope: !12833)
!12838 = !DILocalVariable(name: "dev", scope: !12833, file: !1185, line: 327, type: !1086)
!12839 = !DILocation(line: 327, column: 23, scope: !12833)
!12840 = !DILocation(line: 336, column: 2, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12842, file: !1185, line: 336, column: 2)
!12842 = distinct !DILexicalBlock(scope: !12833, file: !1185, line: 334, column: 6)
!12843 = !DILocation(line: 336, column: 2, scope: !12842)
!12844 = !DILocation(line: 336, column: 2, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12841, file: !1185, line: 336, column: 2)
!12846 = !DILocation(line: 339, column: 9, scope: !12833)
!12847 = !DILocation(line: 339, column: 2, scope: !12833)
!12848 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !12448, file: !12448, line: 69, type: !12849, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1029, retainedNodes: !223)
!12849 = !DISubroutineType(types: !12850)
!12850 = !{null, !12451, !1086, !173}
!12851 = !DILocalVariable(name: "list", arg: 1, scope: !12848, file: !12448, line: 69, type: !12451)
!12852 = !DILocation(line: 69, column: 53, scope: !12848)
!12853 = !DILocalVariable(name: "port", arg: 2, scope: !12848, file: !12448, line: 70, type: !1086)
!12854 = !DILocation(line: 70, column: 27, scope: !12848)
!12855 = !DILocalVariable(name: "pins", arg: 3, scope: !12848, file: !12448, line: 71, type: !173)
!12856 = !DILocation(line: 71, column: 15, scope: !12848)
!12857 = !DILocalVariable(name: "cb", scope: !12848, file: !12448, line: 73, type: !1128)
!12858 = !DILocation(line: 73, column: 24, scope: !12848)
!12859 = !DILocalVariable(name: "tmp", scope: !12848, file: !12448, line: 73, type: !1128)
!12860 = !DILocation(line: 73, column: 29, scope: !12848)
!12861 = !DILocation(line: 75, column: 2, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12848, file: !12448, line: 75, column: 2)
!12863 = !DILocation(line: 75, column: 2, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12862, file: !12448, line: 75, column: 2)
!12865 = !DILocation(line: 76, column: 7, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !12448, line: 76, column: 7)
!12867 = distinct !DILexicalBlock(scope: !12864, file: !12448, line: 75, column: 57)
!12868 = !DILocation(line: 76, column: 11, scope: !12866)
!12869 = !DILocation(line: 76, column: 22, scope: !12866)
!12870 = !DILocation(line: 76, column: 20, scope: !12866)
!12871 = !DILocation(line: 76, column: 7, scope: !12867)
!12872 = !DILocation(line: 78, column: 4, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12866, file: !12448, line: 76, column: 28)
!12874 = !DILocation(line: 78, column: 8, scope: !12873)
!12875 = !DILocation(line: 78, column: 16, scope: !12873)
!12876 = !DILocation(line: 78, column: 22, scope: !12873)
!12877 = !DILocation(line: 78, column: 26, scope: !12873)
!12878 = !DILocation(line: 78, column: 30, scope: !12873)
!12879 = !DILocation(line: 78, column: 41, scope: !12873)
!12880 = !DILocation(line: 78, column: 39, scope: !12873)
!12881 = !DILocation(line: 79, column: 3, scope: !12873)
!12882 = !DILocation(line: 80, column: 2, scope: !12867)
!12883 = distinct !{!12883, !12861, !12884}
!12884 = !DILocation(line: 80, column: 2, scope: !12862)
!12885 = !DILocation(line: 81, column: 1, scope: !12848)
!12886 = distinct !DISubprogram(name: "uart_nrfx_poll_in", scope: !1347, file: !1347, line: 275, type: !1299, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!12887 = !DILocalVariable(name: "dev", arg: 1, scope: !12886, file: !1347, line: 275, type: !1301)
!12888 = !DILocation(line: 275, column: 51, scope: !12886)
!12889 = !DILocalVariable(name: "c", arg: 2, scope: !12886, file: !1347, line: 275, type: !990)
!12890 = !DILocation(line: 275, column: 71, scope: !12886)
!12891 = !DILocation(line: 277, column: 7, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12886, file: !1347, line: 277, column: 6)
!12893 = !DILocation(line: 277, column: 6, scope: !12886)
!12894 = !DILocation(line: 278, column: 3, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12892, file: !1347, line: 277, column: 64)
!12896 = !DILocation(line: 282, column: 2, scope: !12886)
!12897 = !DILocation(line: 285, column: 7, scope: !12886)
!12898 = !DILocation(line: 285, column: 3, scope: !12886)
!12899 = !DILocation(line: 285, column: 5, scope: !12886)
!12900 = !DILocation(line: 287, column: 2, scope: !12886)
!12901 = !DILocation(line: 288, column: 1, scope: !12886)
!12902 = !DILocalVariable(name: "dev", arg: 1, scope: !1455, file: !1347, line: 300, type: !1301)
!12903 = !DILocation(line: 300, column: 53, scope: !1455)
!12904 = !DILocalVariable(name: "c", arg: 2, scope: !1455, file: !1347, line: 300, type: !157)
!12905 = !DILocation(line: 300, column: 72, scope: !1455)
!12906 = !DILocalVariable(name: "lock", scope: !1455, file: !1347, line: 302, type: !1342)
!12907 = !DILocation(line: 302, column: 12, scope: !1455)
!12908 = !DILocation(line: 320, column: 7, scope: !1455)
!12909 = !DILocation(line: 323, column: 7, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !1455, file: !1347, line: 323, column: 6)
!12911 = !DILocation(line: 323, column: 6, scope: !1455)
!12912 = !DILocalVariable(name: "safety_cnt", scope: !12913, file: !1347, line: 324, type: !156)
!12913 = distinct !DILexicalBlock(scope: !12910, file: !1347, line: 323, column: 22)
!12914 = !DILocation(line: 324, column: 11, scope: !12913)
!12915 = !DILocation(line: 326, column: 3, scope: !12913)
!12916 = !DILocation(line: 326, column: 34, scope: !12913)
!12917 = !DILocation(line: 326, column: 10, scope: !12913)
!12918 = !DILocation(line: 328, column: 25, scope: !12913)
!12919 = !DILocation(line: 333, column: 5, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !1347, line: 329, column: 43)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !1347, line: 329, column: 8)
!12922 = distinct !DILexicalBlock(scope: !12913, file: !1347, line: 328, column: 35)
!12923 = !DILocation(line: 337, column: 8, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12922, file: !1347, line: 337, column: 8)
!12925 = !DILocation(line: 337, column: 21, scope: !12924)
!12926 = !DILocation(line: 337, column: 8, scope: !12922)
!12927 = !DILocation(line: 338, column: 5, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12924, file: !1347, line: 337, column: 27)
!12929 = distinct !{!12929, !12915, !12930}
!12930 = !DILocation(line: 340, column: 3, scope: !12913)
!12931 = !DILocation(line: 341, column: 2, scope: !12913)
!12932 = !DILocation(line: 342, column: 4, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12910, file: !1347, line: 341, column: 9)
!12934 = !DILocation(line: 342, column: 9, scope: !12933)
!12935 = !DILocation(line: 345, column: 2, scope: !1455)
!12936 = !DILocation(line: 348, column: 2, scope: !1455)
!12937 = !DILocation(line: 351, column: 40, scope: !1455)
!12938 = !DILocation(line: 351, column: 2, scope: !1455)
!12939 = !DILocalVariable(name: "res", scope: !1455, file: !1347, line: 354, type: !103)
!12940 = !DILocation(line: 354, column: 6, scope: !1455)
!12941 = !DILocation(line: 356, column: 2, scope: !1455)
!12942 = !DILocation(line: 356, column: 2, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !1455, file: !1347, line: 356, column: 2)
!12944 = !DILocalVariable(name: "remaining_attempts", scope: !12943, file: !1347, line: 356, type: !173)
!12945 = !DILocation(line: 356, column: 2, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12947, file: !1347, line: 356, column: 2)
!12947 = distinct !DILexicalBlock(scope: !12943, file: !1347, line: 356, column: 2)
!12948 = !DILocation(line: 356, column: 2, scope: !12947)
!12949 = !DILocation(line: 356, column: 2, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12946, file: !1347, line: 356, column: 2)
!12951 = distinct !{!12951, !12942, !12942}
!12952 = !DILocation(line: 361, column: 2, scope: !1455)
!12953 = !DILocation(line: 364, column: 3, scope: !1455)
!12954 = !DILocation(line: 364, column: 8, scope: !1455)
!12955 = !DILocation(line: 365, column: 1, scope: !1455)
!12956 = distinct !DISubprogram(name: "uart_nrfx_err_check", scope: !1347, file: !1347, line: 368, type: !1322, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!12957 = !DILocalVariable(name: "dev", arg: 1, scope: !12956, file: !1347, line: 368, type: !1301)
!12958 = !DILocation(line: 368, column: 53, scope: !12956)
!12959 = !DILocation(line: 371, column: 9, scope: !12956)
!12960 = !DILocation(line: 371, column: 2, scope: !12956)
!12961 = distinct !DISubprogram(name: "uart_nrfx_configure", scope: !1347, file: !1347, line: 374, type: !1326, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!12962 = !DILocalVariable(name: "dev", arg: 1, scope: !12961, file: !1347, line: 374, type: !1301)
!12963 = !DILocation(line: 374, column: 53, scope: !12961)
!12964 = !DILocalVariable(name: "cfg", arg: 2, scope: !12961, file: !1347, line: 375, type: !1328)
!12965 = !DILocation(line: 375, column: 37, scope: !12961)
!12966 = !DILocalVariable(name: "data", scope: !12961, file: !1347, line: 377, type: !12967)
!12967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!12968 = !DILocation(line: 377, column: 25, scope: !12961)
!12969 = !DILocation(line: 377, column: 32, scope: !12961)
!12970 = !DILocation(line: 377, column: 37, scope: !12961)
!12971 = !DILocalVariable(name: "uart_cfg", scope: !12961, file: !1347, line: 378, type: !12972)
!12972 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_uart_config_t", file: !1236, line: 160, baseType: !12973)
!12973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1236, line: 150, size: 64, elements: !12974)
!12974 = !{!12975, !12977}
!12975 = !DIDerivedType(tag: DW_TAG_member, name: "hwfc", scope: !12973, file: !1236, line: 152, baseType: !12976, size: 32)
!12976 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_uart_hwfc_t", file: !1236, line: 129, baseType: !1251)
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !12973, file: !1236, line: 153, baseType: !12978, size: 32, offset: 32)
!12978 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_uart_parity_t", file: !1236, line: 122, baseType: !1255)
!12979 = !DILocation(line: 378, column: 20, scope: !12961)
!12980 = !DILocation(line: 392, column: 6, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12961, file: !1347, line: 392, column: 6)
!12982 = !DILocation(line: 392, column: 11, scope: !12981)
!12983 = !DILocation(line: 392, column: 21, scope: !12981)
!12984 = !DILocation(line: 392, column: 6, scope: !12961)
!12985 = !DILocation(line: 393, column: 3, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12981, file: !1347, line: 392, column: 46)
!12987 = !DILocation(line: 397, column: 6, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12961, file: !1347, line: 397, column: 6)
!12989 = !DILocation(line: 397, column: 11, scope: !12988)
!12990 = !DILocation(line: 397, column: 21, scope: !12988)
!12991 = !DILocation(line: 397, column: 6, scope: !12961)
!12992 = !DILocation(line: 398, column: 3, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12988, file: !1347, line: 397, column: 46)
!12994 = !DILocation(line: 401, column: 10, scope: !12961)
!12995 = !DILocation(line: 401, column: 15, scope: !12961)
!12996 = !DILocation(line: 401, column: 2, scope: !12961)
!12997 = !DILocation(line: 403, column: 12, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12961, file: !1347, line: 401, column: 26)
!12999 = !DILocation(line: 403, column: 17, scope: !12998)
!13000 = !DILocation(line: 404, column: 3, scope: !12998)
!13001 = !DILocation(line: 409, column: 4, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !1347, line: 408, column: 10)
!13003 = distinct !DILexicalBlock(scope: !12998, file: !1347, line: 406, column: 7)
!13004 = !DILocation(line: 413, column: 3, scope: !12998)
!13005 = !DILocation(line: 419, column: 10, scope: !12961)
!13006 = !DILocation(line: 419, column: 15, scope: !12961)
!13007 = !DILocation(line: 419, column: 2, scope: !12961)
!13008 = !DILocation(line: 421, column: 12, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12961, file: !1347, line: 419, column: 23)
!13010 = !DILocation(line: 421, column: 19, scope: !13009)
!13011 = !DILocation(line: 422, column: 3, scope: !13009)
!13012 = !DILocation(line: 424, column: 12, scope: !13009)
!13013 = !DILocation(line: 424, column: 19, scope: !13009)
!13014 = !DILocation(line: 425, column: 3, scope: !13009)
!13015 = !DILocation(line: 433, column: 3, scope: !13009)
!13016 = !DILocation(line: 436, column: 19, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !12961, file: !1347, line: 436, column: 6)
!13018 = !DILocation(line: 436, column: 24, scope: !13017)
!13019 = !DILocation(line: 436, column: 29, scope: !13017)
!13020 = !DILocation(line: 436, column: 6, scope: !13017)
!13021 = !DILocation(line: 436, column: 39, scope: !13017)
!13022 = !DILocation(line: 436, column: 6, scope: !12961)
!13023 = !DILocation(line: 437, column: 3, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13017, file: !1347, line: 436, column: 45)
!13025 = !DILocation(line: 440, column: 2, scope: !12961)
!13026 = !DILocation(line: 442, column: 2, scope: !12961)
!13027 = !DILocation(line: 442, column: 8, scope: !12961)
!13028 = !DILocation(line: 442, column: 23, scope: !12961)
!13029 = !DILocation(line: 442, column: 22, scope: !12961)
!13030 = !DILocation(line: 444, column: 2, scope: !12961)
!13031 = !DILocation(line: 445, column: 1, scope: !12961)
!13032 = distinct !DISubprogram(name: "uart_nrfx_config_get", scope: !1347, file: !1347, line: 448, type: !1339, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13033 = !DILocalVariable(name: "dev", arg: 1, scope: !13032, file: !1347, line: 448, type: !1301)
!13034 = !DILocation(line: 448, column: 54, scope: !13032)
!13035 = !DILocalVariable(name: "cfg", arg: 2, scope: !13032, file: !1347, line: 449, type: !1341)
!13036 = !DILocation(line: 449, column: 25, scope: !13032)
!13037 = !DILocalVariable(name: "data", scope: !13032, file: !1347, line: 451, type: !12967)
!13038 = !DILocation(line: 451, column: 25, scope: !13032)
!13039 = !DILocation(line: 451, column: 32, scope: !13032)
!13040 = !DILocation(line: 451, column: 37, scope: !13032)
!13041 = !DILocation(line: 453, column: 3, scope: !13032)
!13042 = !DILocation(line: 453, column: 9, scope: !13032)
!13043 = !DILocation(line: 453, column: 15, scope: !13032)
!13044 = !DILocation(line: 454, column: 2, scope: !13032)
!13045 = distinct !DISubprogram(name: "baudrate_set", scope: !1347, file: !1347, line: 190, type: !13046, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!103, !1301, !173}
!13048 = !DILocalVariable(name: "dev", arg: 1, scope: !13045, file: !1347, line: 190, type: !1301)
!13049 = !DILocation(line: 190, column: 46, scope: !13045)
!13050 = !DILocalVariable(name: "baudrate", arg: 2, scope: !13045, file: !1347, line: 190, type: !173)
!13051 = !DILocation(line: 190, column: 60, scope: !13045)
!13052 = !DILocalVariable(name: "nrf_baudrate", scope: !13045, file: !1347, line: 192, type: !13053)
!13053 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_uart_baudrate_t", file: !1236, line: 106, baseType: !1272)
!13054 = !DILocation(line: 192, column: 22, scope: !13045)
!13055 = !DILocation(line: 194, column: 10, scope: !13045)
!13056 = !DILocation(line: 194, column: 2, scope: !13045)
!13057 = !DILocation(line: 197, column: 16, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13045, file: !1347, line: 194, column: 20)
!13059 = !DILocation(line: 198, column: 3, scope: !13058)
!13060 = !DILocation(line: 201, column: 16, scope: !13058)
!13061 = !DILocation(line: 202, column: 3, scope: !13058)
!13062 = !DILocation(line: 204, column: 16, scope: !13058)
!13063 = !DILocation(line: 205, column: 3, scope: !13058)
!13064 = !DILocation(line: 207, column: 16, scope: !13058)
!13065 = !DILocation(line: 208, column: 3, scope: !13058)
!13066 = !DILocation(line: 210, column: 16, scope: !13058)
!13067 = !DILocation(line: 211, column: 3, scope: !13058)
!13068 = !DILocation(line: 213, column: 16, scope: !13058)
!13069 = !DILocation(line: 214, column: 3, scope: !13058)
!13070 = !DILocation(line: 216, column: 16, scope: !13058)
!13071 = !DILocation(line: 217, column: 3, scope: !13058)
!13072 = !DILocation(line: 219, column: 16, scope: !13058)
!13073 = !DILocation(line: 220, column: 3, scope: !13058)
!13074 = !DILocation(line: 222, column: 16, scope: !13058)
!13075 = !DILocation(line: 223, column: 3, scope: !13058)
!13076 = !DILocation(line: 225, column: 16, scope: !13058)
!13077 = !DILocation(line: 226, column: 3, scope: !13058)
!13078 = !DILocation(line: 228, column: 16, scope: !13058)
!13079 = !DILocation(line: 229, column: 3, scope: !13058)
!13080 = !DILocation(line: 231, column: 16, scope: !13058)
!13081 = !DILocation(line: 232, column: 3, scope: !13058)
!13082 = !DILocation(line: 234, column: 16, scope: !13058)
!13083 = !DILocation(line: 235, column: 3, scope: !13058)
!13084 = !DILocation(line: 237, column: 16, scope: !13058)
!13085 = !DILocation(line: 238, column: 3, scope: !13058)
!13086 = !DILocation(line: 240, column: 16, scope: !13058)
!13087 = !DILocation(line: 241, column: 3, scope: !13058)
!13088 = !DILocation(line: 243, column: 16, scope: !13058)
!13089 = !DILocation(line: 244, column: 3, scope: !13058)
!13090 = !DILocation(line: 246, column: 16, scope: !13058)
!13091 = !DILocation(line: 247, column: 3, scope: !13058)
!13092 = !DILocation(line: 249, column: 16, scope: !13058)
!13093 = !DILocation(line: 250, column: 3, scope: !13058)
!13094 = !DILocation(line: 252, column: 16, scope: !13058)
!13095 = !DILocation(line: 253, column: 3, scope: !13058)
!13096 = !DILocation(line: 255, column: 16, scope: !13058)
!13097 = !DILocation(line: 256, column: 3, scope: !13058)
!13098 = !DILocation(line: 258, column: 3, scope: !13058)
!13099 = !DILocation(line: 261, column: 36, scope: !13045)
!13100 = !DILocation(line: 261, column: 2, scope: !13045)
!13101 = !DILocation(line: 263, column: 2, scope: !13045)
!13102 = !DILocation(line: 264, column: 1, scope: !13045)
!13103 = distinct !DISubprogram(name: "nrf_uart_configure", scope: !1236, file: !1236, line: 518, type: !13104, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13104 = !DISubroutineType(types: !13105)
!13105 = !{null, !1391, !13106}
!13106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13107, size: 32)
!13107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12972)
!13108 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13103, file: !1236, line: 518, type: !1391)
!13109 = !DILocation(line: 518, column: 69, scope: !13103)
!13110 = !DILocalVariable(name: "p_cfg", arg: 2, scope: !13103, file: !1236, line: 519, type: !13106)
!13111 = !DILocation(line: 519, column: 69, scope: !13103)
!13112 = !DILocation(line: 521, column: 31, scope: !13103)
!13113 = !DILocation(line: 521, column: 38, scope: !13103)
!13114 = !DILocation(line: 528, column: 33, scope: !13103)
!13115 = !DILocation(line: 528, column: 40, scope: !13103)
!13116 = !DILocation(line: 528, column: 21, scope: !13103)
!13117 = !DILocation(line: 521, column: 5, scope: !13103)
!13118 = !DILocation(line: 521, column: 12, scope: !13103)
!13119 = !DILocation(line: 521, column: 19, scope: !13103)
!13120 = !DILocation(line: 529, column: 1, scope: !13103)
!13121 = distinct !DISubprogram(name: "nrf_uart_baudrate_set", scope: !1236, file: !1236, line: 531, type: !13122, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{null, !1391, !13053}
!13124 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13121, file: !1236, line: 531, type: !1391)
!13125 = !DILocation(line: 531, column: 62, scope: !13121)
!13126 = !DILocalVariable(name: "baudrate", arg: 2, scope: !13121, file: !1236, line: 531, type: !13053)
!13127 = !DILocation(line: 531, column: 89, scope: !13121)
!13128 = !DILocation(line: 533, column: 23, scope: !13121)
!13129 = !DILocation(line: 533, column: 5, scope: !13121)
!13130 = !DILocation(line: 533, column: 12, scope: !13121)
!13131 = !DILocation(line: 533, column: 21, scope: !13121)
!13132 = !DILocation(line: 534, column: 1, scope: !13121)
!13133 = distinct !DISubprogram(name: "nrf_uart_errorsrc_get_and_clear", scope: !1236, file: !1236, line: 401, type: !13134, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13134 = !DISubroutineType(types: !13135)
!13135 = !{!173, !1391}
!13136 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13133, file: !1236, line: 401, type: !1391)
!13137 = !DILocation(line: 401, column: 76, scope: !13133)
!13138 = !DILocalVariable(name: "errsrc_mask", scope: !13133, file: !1236, line: 403, type: !173)
!13139 = !DILocation(line: 403, column: 14, scope: !13133)
!13140 = !DILocation(line: 403, column: 28, scope: !13133)
!13141 = !DILocation(line: 403, column: 35, scope: !13133)
!13142 = !DILocation(line: 404, column: 23, scope: !13133)
!13143 = !DILocation(line: 404, column: 5, scope: !13133)
!13144 = !DILocation(line: 404, column: 12, scope: !13133)
!13145 = !DILocation(line: 404, column: 21, scope: !13133)
!13146 = !DILocation(line: 405, column: 12, scope: !13133)
!13147 = !DILocation(line: 405, column: 5, scope: !13133)
!13148 = distinct !DISubprogram(name: "atomic_cas", scope: !7160, file: !7160, line: 24, type: !13149, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13149 = !DISubroutineType(types: !13150)
!13150 = !{!717, !1342, !1343, !1343}
!13151 = !DILocalVariable(name: "target", arg: 1, scope: !13148, file: !7160, line: 24, type: !1342)
!13152 = !DILocation(line: 24, column: 42, scope: !13148)
!13153 = !DILocalVariable(name: "old_value", arg: 2, scope: !13148, file: !7160, line: 24, type: !1343)
!13154 = !DILocation(line: 24, column: 63, scope: !13148)
!13155 = !DILocalVariable(name: "new_value", arg: 3, scope: !13148, file: !7160, line: 24, type: !1343)
!13156 = !DILocation(line: 24, column: 87, scope: !13148)
!13157 = !DILocation(line: 34, column: 2, scope: !13148)
!13158 = !DILocation(line: 34, column: 2, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13148, file: !7160, line: 34, column: 2)
!13160 = !{i64 2148958272}
!13161 = !DILocation(line: 35, column: 27, scope: !13148)
!13162 = !DILocation(line: 35, column: 35, scope: !13148)
!13163 = !DILocation(line: 35, column: 46, scope: !13148)
!13164 = !DILocation(line: 35, column: 9, scope: !13148)
!13165 = !DILocation(line: 35, column: 2, scope: !13148)
!13166 = distinct !DISubprogram(name: "k_msleep", scope: !109, file: !109, line: 439, type: !11841, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13167 = !DILocalVariable(name: "ms", arg: 1, scope: !13166, file: !109, line: 439, type: !250)
!13168 = !DILocation(line: 439, column: 40, scope: !13166)
!13169 = !DILocation(line: 441, column: 17, scope: !13166)
!13170 = !DILocation(line: 441, column: 9, scope: !13166)
!13171 = !DILocation(line: 441, column: 2, scope: !13166)
!13172 = distinct !DISubprogram(name: "event_txdrdy_clear", scope: !1347, file: !1347, line: 169, type: !253, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13173 = !DILocation(line: 171, column: 2, scope: !13172)
!13174 = !DILocation(line: 175, column: 1, scope: !13172)
!13175 = distinct !DISubprogram(name: "nrf_uart_task_trigger", scope: !1236, file: !1236, line: 507, type: !13176, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13176 = !DISubroutineType(types: !13177)
!13177 = !{null, !1391, !13178}
!13178 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_uart_task_t", file: !1236, line: 61, baseType: !1244)
!13179 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13175, file: !1236, line: 507, type: !1391)
!13180 = !DILocation(line: 507, column: 62, scope: !13175)
!13181 = !DILocalVariable(name: "task", arg: 2, scope: !13175, file: !1236, line: 507, type: !13178)
!13182 = !DILocation(line: 507, column: 85, scope: !13175)
!13183 = !DILocation(line: 509, column: 40, scope: !13175)
!13184 = !DILocation(line: 509, column: 29, scope: !13175)
!13185 = !DILocation(line: 509, column: 58, scope: !13175)
!13186 = !DILocation(line: 509, column: 46, scope: !13175)
!13187 = !DILocation(line: 509, column: 5, scope: !13175)
!13188 = !DILocation(line: 509, column: 65, scope: !13175)
!13189 = !DILocation(line: 510, column: 1, scope: !13175)
!13190 = distinct !DISubprogram(name: "nrf_uart_txd_set", scope: !1236, file: !1236, line: 502, type: !13191, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13191 = !DISubroutineType(types: !13192)
!13192 = !{null, !1391, !156}
!13193 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13190, file: !1236, line: 502, type: !1391)
!13194 = !DILocation(line: 502, column: 57, scope: !13190)
!13195 = !DILocalVariable(name: "txd", arg: 2, scope: !13190, file: !1236, line: 502, type: !156)
!13196 = !DILocation(line: 502, column: 72, scope: !13190)
!13197 = !DILocation(line: 504, column: 18, scope: !13190)
!13198 = !DILocation(line: 504, column: 5, scope: !13190)
!13199 = !DILocation(line: 504, column: 12, scope: !13190)
!13200 = !DILocation(line: 504, column: 16, scope: !13190)
!13201 = !DILocation(line: 505, column: 1, scope: !13190)
!13202 = distinct !DISubprogram(name: "event_txdrdy_check", scope: !1347, file: !1347, line: 160, type: !3163, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13203 = !DILocation(line: 162, column: 10, scope: !13202)
!13204 = !DILocation(line: 162, column: 2, scope: !13202)
!13205 = distinct !DISubprogram(name: "nrf_uart_event_check", scope: !1236, file: !1236, line: 375, type: !13206, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13206 = !DISubroutineType(types: !13207)
!13207 = !{!717, !13208, !13210}
!13208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13209, size: 32)
!13209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1392)
!13210 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_uart_event_t", file: !1236, line: 72, baseType: !1235)
!13211 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13205, file: !1236, line: 375, type: !13208)
!13212 = !DILocation(line: 375, column: 67, scope: !13205)
!13213 = !DILocalVariable(name: "event", arg: 2, scope: !13205, file: !1236, line: 375, type: !13210)
!13214 = !DILocation(line: 375, column: 91, scope: !13205)
!13215 = !DILocation(line: 377, column: 52, scope: !13205)
!13216 = !DILocation(line: 377, column: 41, scope: !13205)
!13217 = !DILocation(line: 377, column: 70, scope: !13205)
!13218 = !DILocation(line: 377, column: 58, scope: !13205)
!13219 = !DILocation(line: 377, column: 18, scope: !13205)
!13220 = !DILocation(line: 377, column: 12, scope: !13205)
!13221 = !DILocation(line: 377, column: 5, scope: !13205)
!13222 = distinct !DISubprogram(name: "nrf_uart_event_clear", scope: !1236, file: !1236, line: 369, type: !13223, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{null, !1391, !13210}
!13225 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13222, file: !1236, line: 369, type: !1391)
!13226 = !DILocation(line: 369, column: 61, scope: !13222)
!13227 = !DILocalVariable(name: "event", arg: 2, scope: !13222, file: !1236, line: 369, type: !13210)
!13228 = !DILocation(line: 369, column: 85, scope: !13222)
!13229 = !DILocation(line: 371, column: 40, scope: !13222)
!13230 = !DILocation(line: 371, column: 29, scope: !13222)
!13231 = !DILocation(line: 371, column: 58, scope: !13222)
!13232 = !DILocation(line: 371, column: 46, scope: !13222)
!13233 = !DILocation(line: 371, column: 5, scope: !13222)
!13234 = !DILocation(line: 371, column: 66, scope: !13222)
!13235 = !DILocation(line: 372, column: 35, scope: !13222)
!13236 = !DILocation(line: 372, column: 24, scope: !13222)
!13237 = !DILocation(line: 372, column: 53, scope: !13222)
!13238 = !DILocation(line: 372, column: 41, scope: !13222)
!13239 = !DILocation(line: 372, column: 5, scope: !13222)
!13240 = !DILocation(line: 373, column: 1, scope: !13222)
!13241 = distinct !DISubprogram(name: "nrf_event_readback", scope: !11940, file: !11940, line: 63, type: !8756, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13242 = !DILocalVariable(name: "p_event_reg", arg: 1, scope: !13241, file: !11940, line: 63, type: !102)
!13243 = !DILocation(line: 63, column: 50, scope: !13241)
!13244 = !DILocation(line: 68, column: 11, scope: !13241)
!13245 = !DILocation(line: 70, column: 1, scope: !13241)
!13246 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !7339, file: !7339, line: 403, type: !10983, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13247 = !DILocalVariable(name: "t", arg: 1, scope: !13246, file: !7339, line: 403, type: !312)
!13248 = !DILocation(line: 403, column: 69, scope: !13246)
!13249 = !DILocation(line: 406, column: 17, scope: !13246)
!13250 = !DILocalVariable(name: "t", arg: 1, scope: !13251, file: !7339, line: 102, type: !312)
!13251 = distinct !DISubprogram(name: "z_tmcvt", scope: !7339, file: !7339, line: 102, type: !7347, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13252 = !DILocation(line: 102, column: 63, scope: !13251, inlinedAt: !13253)
!13253 = distinct !DILocation(line: 406, column: 9, scope: !13246)
!13254 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13251, file: !7339, line: 102, type: !173)
!13255 = !DILocation(line: 102, column: 75, scope: !13251, inlinedAt: !13253)
!13256 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13251, file: !7339, line: 103, type: !173)
!13257 = !DILocation(line: 103, column: 18, scope: !13251, inlinedAt: !13253)
!13258 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13251, file: !7339, line: 103, type: !717)
!13259 = !DILocation(line: 103, column: 30, scope: !13251, inlinedAt: !13253)
!13260 = !DILocalVariable(name: "result32", arg: 5, scope: !13251, file: !7339, line: 104, type: !717)
!13261 = !DILocation(line: 104, column: 14, scope: !13251, inlinedAt: !13253)
!13262 = !DILocalVariable(name: "round_up", arg: 6, scope: !13251, file: !7339, line: 104, type: !717)
!13263 = !DILocation(line: 104, column: 29, scope: !13251, inlinedAt: !13253)
!13264 = !DILocalVariable(name: "round_off", arg: 7, scope: !13251, file: !7339, line: 105, type: !717)
!13265 = !DILocation(line: 105, column: 14, scope: !13251, inlinedAt: !13253)
!13266 = !DILocalVariable(name: "mul_ratio", scope: !13251, file: !7339, line: 107, type: !717)
!13267 = !DILocation(line: 107, column: 7, scope: !13251, inlinedAt: !13253)
!13268 = !DILocation(line: 107, column: 19, scope: !13251, inlinedAt: !13253)
!13269 = !DILocation(line: 107, column: 28, scope: !13251, inlinedAt: !13253)
!13270 = !DILocation(line: 108, column: 4, scope: !13251, inlinedAt: !13253)
!13271 = !DILocation(line: 108, column: 12, scope: !13251, inlinedAt: !13253)
!13272 = !DILocation(line: 108, column: 10, scope: !13251, inlinedAt: !13253)
!13273 = !DILocation(line: 108, column: 21, scope: !13251, inlinedAt: !13253)
!13274 = !DILocation(line: 108, column: 26, scope: !13251, inlinedAt: !13253)
!13275 = !DILocation(line: 108, column: 34, scope: !13251, inlinedAt: !13253)
!13276 = !DILocation(line: 108, column: 32, scope: !13251, inlinedAt: !13253)
!13277 = !DILocation(line: 108, column: 43, scope: !13251, inlinedAt: !13253)
!13278 = !DILocation(line: 0, scope: !13251, inlinedAt: !13253)
!13279 = !DILocalVariable(name: "div_ratio", scope: !13251, file: !7339, line: 109, type: !717)
!13280 = !DILocation(line: 109, column: 7, scope: !13251, inlinedAt: !13253)
!13281 = !DILocation(line: 109, column: 19, scope: !13251, inlinedAt: !13253)
!13282 = !DILocation(line: 109, column: 28, scope: !13251, inlinedAt: !13253)
!13283 = !DILocation(line: 110, column: 4, scope: !13251, inlinedAt: !13253)
!13284 = !DILocation(line: 110, column: 14, scope: !13251, inlinedAt: !13253)
!13285 = !DILocation(line: 110, column: 12, scope: !13251, inlinedAt: !13253)
!13286 = !DILocation(line: 110, column: 21, scope: !13251, inlinedAt: !13253)
!13287 = !DILocation(line: 110, column: 26, scope: !13251, inlinedAt: !13253)
!13288 = !DILocation(line: 110, column: 36, scope: !13251, inlinedAt: !13253)
!13289 = !DILocation(line: 110, column: 34, scope: !13251, inlinedAt: !13253)
!13290 = !DILocation(line: 110, column: 43, scope: !13251, inlinedAt: !13253)
!13291 = !DILocation(line: 112, column: 6, scope: !13292, inlinedAt: !13253)
!13292 = distinct !DILexicalBlock(scope: !13251, file: !7339, line: 112, column: 6)
!13293 = !DILocation(line: 112, column: 17, scope: !13292, inlinedAt: !13253)
!13294 = !DILocation(line: 112, column: 14, scope: !13292, inlinedAt: !13253)
!13295 = !DILocation(line: 112, column: 6, scope: !13251, inlinedAt: !13253)
!13296 = !DILocation(line: 113, column: 10, scope: !13297, inlinedAt: !13253)
!13297 = distinct !DILexicalBlock(scope: !13292, file: !7339, line: 112, column: 24)
!13298 = !DILocation(line: 113, column: 32, scope: !13297, inlinedAt: !13253)
!13299 = !DILocation(line: 113, column: 22, scope: !13297, inlinedAt: !13253)
!13300 = !DILocation(line: 113, column: 21, scope: !13297, inlinedAt: !13253)
!13301 = !DILocation(line: 113, column: 37, scope: !13297, inlinedAt: !13253)
!13302 = !DILocation(line: 113, column: 3, scope: !13297, inlinedAt: !13253)
!13303 = !DILocalVariable(name: "off", scope: !13251, file: !7339, line: 116, type: !312)
!13304 = !DILocation(line: 116, column: 11, scope: !13251, inlinedAt: !13253)
!13305 = !DILocation(line: 118, column: 7, scope: !13306, inlinedAt: !13253)
!13306 = distinct !DILexicalBlock(scope: !13251, file: !7339, line: 118, column: 6)
!13307 = !DILocation(line: 118, column: 6, scope: !13251, inlinedAt: !13253)
!13308 = !DILocalVariable(name: "rdivisor", scope: !13309, file: !7339, line: 119, type: !173)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !7339, line: 118, column: 18)
!13310 = !DILocation(line: 119, column: 12, scope: !13309, inlinedAt: !13253)
!13311 = !DILocation(line: 119, column: 23, scope: !13309, inlinedAt: !13253)
!13312 = !DILocation(line: 119, column: 36, scope: !13309, inlinedAt: !13253)
!13313 = !DILocation(line: 119, column: 46, scope: !13309, inlinedAt: !13253)
!13314 = !DILocation(line: 119, column: 44, scope: !13309, inlinedAt: !13253)
!13315 = !DILocation(line: 119, column: 55, scope: !13309, inlinedAt: !13253)
!13316 = !DILocation(line: 121, column: 7, scope: !13317, inlinedAt: !13253)
!13317 = distinct !DILexicalBlock(scope: !13309, file: !7339, line: 121, column: 7)
!13318 = !DILocation(line: 121, column: 7, scope: !13309, inlinedAt: !13253)
!13319 = !DILocation(line: 122, column: 10, scope: !13320, inlinedAt: !13253)
!13320 = distinct !DILexicalBlock(scope: !13317, file: !7339, line: 121, column: 17)
!13321 = !DILocation(line: 122, column: 19, scope: !13320, inlinedAt: !13253)
!13322 = !DILocation(line: 122, column: 8, scope: !13320, inlinedAt: !13253)
!13323 = !DILocation(line: 123, column: 3, scope: !13320, inlinedAt: !13253)
!13324 = !DILocation(line: 124, column: 7, scope: !13325, inlinedAt: !13253)
!13325 = distinct !DILexicalBlock(scope: !13309, file: !7339, line: 124, column: 7)
!13326 = !DILocation(line: 124, column: 7, scope: !13309, inlinedAt: !13253)
!13327 = !DILocation(line: 125, column: 10, scope: !13328, inlinedAt: !13253)
!13328 = distinct !DILexicalBlock(scope: !13325, file: !7339, line: 124, column: 18)
!13329 = !DILocation(line: 125, column: 19, scope: !13328, inlinedAt: !13253)
!13330 = !DILocation(line: 125, column: 8, scope: !13328, inlinedAt: !13253)
!13331 = !DILocation(line: 126, column: 3, scope: !13328, inlinedAt: !13253)
!13332 = !DILocation(line: 127, column: 2, scope: !13309, inlinedAt: !13253)
!13333 = !DILocation(line: 134, column: 6, scope: !13334, inlinedAt: !13253)
!13334 = distinct !DILexicalBlock(scope: !13251, file: !7339, line: 134, column: 6)
!13335 = !DILocation(line: 134, column: 6, scope: !13251, inlinedAt: !13253)
!13336 = !DILocation(line: 135, column: 8, scope: !13337, inlinedAt: !13253)
!13337 = distinct !DILexicalBlock(scope: !13334, file: !7339, line: 134, column: 17)
!13338 = !DILocation(line: 135, column: 5, scope: !13337, inlinedAt: !13253)
!13339 = !DILocation(line: 136, column: 7, scope: !13340, inlinedAt: !13253)
!13340 = distinct !DILexicalBlock(scope: !13337, file: !7339, line: 136, column: 7)
!13341 = !DILocation(line: 136, column: 16, scope: !13340, inlinedAt: !13253)
!13342 = !DILocation(line: 136, column: 20, scope: !13340, inlinedAt: !13253)
!13343 = !DILocation(line: 136, column: 22, scope: !13340, inlinedAt: !13253)
!13344 = !DILocation(line: 136, column: 7, scope: !13337, inlinedAt: !13253)
!13345 = !DILocation(line: 137, column: 22, scope: !13346, inlinedAt: !13253)
!13346 = distinct !DILexicalBlock(scope: !13340, file: !7339, line: 136, column: 36)
!13347 = !DILocation(line: 137, column: 12, scope: !13346, inlinedAt: !13253)
!13348 = !DILocation(line: 137, column: 28, scope: !13346, inlinedAt: !13253)
!13349 = !DILocation(line: 137, column: 38, scope: !13346, inlinedAt: !13253)
!13350 = !DILocation(line: 137, column: 36, scope: !13346, inlinedAt: !13253)
!13351 = !DILocation(line: 137, column: 25, scope: !13346, inlinedAt: !13253)
!13352 = !DILocation(line: 137, column: 11, scope: !13346, inlinedAt: !13253)
!13353 = !DILocation(line: 137, column: 4, scope: !13346, inlinedAt: !13253)
!13354 = !DILocation(line: 139, column: 11, scope: !13355, inlinedAt: !13253)
!13355 = distinct !DILexicalBlock(scope: !13340, file: !7339, line: 138, column: 10)
!13356 = !DILocation(line: 139, column: 26, scope: !13355, inlinedAt: !13253)
!13357 = !DILocation(line: 139, column: 16, scope: !13355, inlinedAt: !13253)
!13358 = !DILocation(line: 139, column: 36, scope: !13355, inlinedAt: !13253)
!13359 = !DILocation(line: 139, column: 34, scope: !13355, inlinedAt: !13253)
!13360 = !DILocation(line: 139, column: 13, scope: !13355, inlinedAt: !13253)
!13361 = !DILocation(line: 139, column: 4, scope: !13355, inlinedAt: !13253)
!13362 = !DILocation(line: 141, column: 13, scope: !13363, inlinedAt: !13253)
!13363 = distinct !DILexicalBlock(scope: !13334, file: !7339, line: 141, column: 13)
!13364 = !DILocation(line: 141, column: 13, scope: !13334, inlinedAt: !13253)
!13365 = !DILocation(line: 142, column: 7, scope: !13366, inlinedAt: !13253)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !7339, line: 142, column: 7)
!13367 = distinct !DILexicalBlock(scope: !13363, file: !7339, line: 141, column: 24)
!13368 = !DILocation(line: 142, column: 7, scope: !13367, inlinedAt: !13253)
!13369 = !DILocation(line: 143, column: 22, scope: !13370, inlinedAt: !13253)
!13370 = distinct !DILexicalBlock(scope: !13366, file: !7339, line: 142, column: 17)
!13371 = !DILocation(line: 143, column: 12, scope: !13370, inlinedAt: !13253)
!13372 = !DILocation(line: 143, column: 28, scope: !13370, inlinedAt: !13253)
!13373 = !DILocation(line: 143, column: 36, scope: !13370, inlinedAt: !13253)
!13374 = !DILocation(line: 143, column: 34, scope: !13370, inlinedAt: !13253)
!13375 = !DILocation(line: 143, column: 25, scope: !13370, inlinedAt: !13253)
!13376 = !DILocation(line: 143, column: 11, scope: !13370, inlinedAt: !13253)
!13377 = !DILocation(line: 143, column: 4, scope: !13370, inlinedAt: !13253)
!13378 = !DILocation(line: 145, column: 11, scope: !13379, inlinedAt: !13253)
!13379 = distinct !DILexicalBlock(scope: !13366, file: !7339, line: 144, column: 10)
!13380 = !DILocation(line: 145, column: 26, scope: !13379, inlinedAt: !13253)
!13381 = !DILocation(line: 145, column: 16, scope: !13379, inlinedAt: !13253)
!13382 = !DILocation(line: 145, column: 34, scope: !13379, inlinedAt: !13253)
!13383 = !DILocation(line: 145, column: 32, scope: !13379, inlinedAt: !13253)
!13384 = !DILocation(line: 145, column: 13, scope: !13379, inlinedAt: !13253)
!13385 = !DILocation(line: 145, column: 4, scope: !13379, inlinedAt: !13253)
!13386 = !DILocation(line: 148, column: 7, scope: !13387, inlinedAt: !13253)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !7339, line: 148, column: 7)
!13388 = distinct !DILexicalBlock(scope: !13363, file: !7339, line: 147, column: 9)
!13389 = !DILocation(line: 148, column: 7, scope: !13388, inlinedAt: !13253)
!13390 = !DILocation(line: 149, column: 23, scope: !13391, inlinedAt: !13253)
!13391 = distinct !DILexicalBlock(scope: !13387, file: !7339, line: 148, column: 17)
!13392 = !DILocation(line: 149, column: 27, scope: !13391, inlinedAt: !13253)
!13393 = !DILocation(line: 149, column: 25, scope: !13391, inlinedAt: !13253)
!13394 = !DILocation(line: 149, column: 35, scope: !13391, inlinedAt: !13253)
!13395 = !DILocation(line: 149, column: 33, scope: !13391, inlinedAt: !13253)
!13396 = !DILocation(line: 149, column: 42, scope: !13391, inlinedAt: !13253)
!13397 = !DILocation(line: 149, column: 40, scope: !13391, inlinedAt: !13253)
!13398 = !DILocation(line: 149, column: 11, scope: !13391, inlinedAt: !13253)
!13399 = !DILocation(line: 149, column: 4, scope: !13391, inlinedAt: !13253)
!13400 = !DILocation(line: 150, column: 14, scope: !13401, inlinedAt: !13253)
!13401 = distinct !DILexicalBlock(scope: !13387, file: !7339, line: 150, column: 14)
!13402 = !DILocation(line: 150, column: 23, scope: !13401, inlinedAt: !13253)
!13403 = !DILocation(line: 150, column: 26, scope: !13401, inlinedAt: !13253)
!13404 = !DILocation(line: 150, column: 14, scope: !13387, inlinedAt: !13253)
!13405 = !DILocation(line: 156, column: 13, scope: !13406, inlinedAt: !13253)
!13406 = distinct !DILexicalBlock(scope: !13401, file: !7339, line: 150, column: 65)
!13407 = !DILocation(line: 156, column: 17, scope: !13406, inlinedAt: !13253)
!13408 = !DILocation(line: 156, column: 15, scope: !13406, inlinedAt: !13253)
!13409 = !DILocation(line: 156, column: 25, scope: !13406, inlinedAt: !13253)
!13410 = !DILocation(line: 156, column: 23, scope: !13406, inlinedAt: !13253)
!13411 = !DILocation(line: 156, column: 32, scope: !13406, inlinedAt: !13253)
!13412 = !DILocation(line: 156, column: 30, scope: !13406, inlinedAt: !13253)
!13413 = !DILocation(line: 156, column: 4, scope: !13406, inlinedAt: !13253)
!13414 = !DILocation(line: 161, column: 12, scope: !13415, inlinedAt: !13253)
!13415 = distinct !DILexicalBlock(scope: !13401, file: !7339, line: 157, column: 10)
!13416 = !DILocation(line: 161, column: 16, scope: !13415, inlinedAt: !13253)
!13417 = !DILocation(line: 161, column: 14, scope: !13415, inlinedAt: !13253)
!13418 = !DILocation(line: 161, column: 27, scope: !13415, inlinedAt: !13253)
!13419 = !DILocation(line: 161, column: 25, scope: !13415, inlinedAt: !13253)
!13420 = !DILocation(line: 161, column: 37, scope: !13415, inlinedAt: !13253)
!13421 = !DILocation(line: 161, column: 41, scope: !13415, inlinedAt: !13253)
!13422 = !DILocation(line: 161, column: 39, scope: !13415, inlinedAt: !13253)
!13423 = !DILocation(line: 161, column: 52, scope: !13415, inlinedAt: !13253)
!13424 = !DILocation(line: 161, column: 50, scope: !13415, inlinedAt: !13253)
!13425 = !DILocation(line: 161, column: 60, scope: !13415, inlinedAt: !13253)
!13426 = !DILocation(line: 161, column: 58, scope: !13415, inlinedAt: !13253)
!13427 = !DILocation(line: 161, column: 67, scope: !13415, inlinedAt: !13253)
!13428 = !DILocation(line: 161, column: 65, scope: !13415, inlinedAt: !13253)
!13429 = !DILocation(line: 161, column: 33, scope: !13415, inlinedAt: !13253)
!13430 = !DILocation(line: 161, column: 4, scope: !13415, inlinedAt: !13253)
!13431 = !DILocation(line: 164, column: 1, scope: !13251, inlinedAt: !13253)
!13432 = !DILocation(line: 406, column: 2, scope: !13246)
!13433 = distinct !DISubprogram(name: "k_sleep", scope: !3240, file: !3240, line: 91, type: !13434, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13434 = !DISubroutineType(types: !13435)
!13435 = !{!250, !13436}
!13436 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !294, line: 67, baseType: !13437)
!13437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !294, line: 65, size: 64, elements: !13438)
!13438 = !{!13439}
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13437, file: !294, line: 66, baseType: !293, size: 64)
!13440 = !DILocalVariable(name: "timeout", arg: 1, scope: !13433, file: !3240, line: 91, type: !13436)
!13441 = !DILocation(line: 91, column: 43, scope: !13433)
!13442 = !DILocation(line: 99, column: 2, scope: !13433)
!13443 = !DILocation(line: 99, column: 2, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13433, file: !3240, line: 99, column: 2)
!13445 = !{i64 2149926839}
!13446 = !DILocation(line: 100, column: 9, scope: !13433)
!13447 = !DILocation(line: 100, column: 2, scope: !13433)
!13448 = distinct !DISubprogram(name: "nrf_uart_rxd_get", scope: !1236, file: !1236, line: 497, type: !13449, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13449 = !DISubroutineType(types: !13450)
!13450 = !{!156, !13208}
!13451 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13448, file: !1236, line: 497, type: !13208)
!13452 = !DILocation(line: 497, column: 66, scope: !13448)
!13453 = !DILocation(line: 499, column: 12, scope: !13448)
!13454 = !DILocation(line: 499, column: 19, scope: !13448)
!13455 = !DILocation(line: 499, column: 5, scope: !13448)
!13456 = distinct !DISubprogram(name: "uart_nrfx_init", scope: !1347, file: !1347, line: 1041, type: !1322, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13457 = !DILocalVariable(name: "dev", arg: 1, scope: !13456, file: !1347, line: 1041, type: !1301)
!13458 = !DILocation(line: 1041, column: 48, scope: !13456)
!13459 = !DILocalVariable(name: "data", scope: !13456, file: !1347, line: 1043, type: !12967)
!13460 = !DILocation(line: 1043, column: 25, scope: !13456)
!13461 = !DILocation(line: 1043, column: 32, scope: !13456)
!13462 = !DILocation(line: 1043, column: 37, scope: !13456)
!13463 = !DILocalVariable(name: "err", scope: !13456, file: !1347, line: 1044, type: !103)
!13464 = !DILocation(line: 1044, column: 6, scope: !13456)
!13465 = !DILocalVariable(name: "config", scope: !13456, file: !1347, line: 1046, type: !13466)
!13466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!13467 = !DILocation(line: 1046, column: 33, scope: !13456)
!13468 = !DILocation(line: 1046, column: 42, scope: !13456)
!13469 = !DILocation(line: 1046, column: 47, scope: !13456)
!13470 = !DILocation(line: 1049, column: 2, scope: !13456)
!13471 = !DILocation(line: 1052, column: 28, scope: !13456)
!13472 = !DILocation(line: 1052, column: 36, scope: !13456)
!13473 = !DILocation(line: 1052, column: 8, scope: !13456)
!13474 = !DILocation(line: 1052, column: 6, scope: !13456)
!13475 = !DILocation(line: 1053, column: 6, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13456, file: !1347, line: 1053, column: 6)
!13477 = !DILocation(line: 1053, column: 10, scope: !13476)
!13478 = !DILocation(line: 1053, column: 6, scope: !13456)
!13479 = !DILocation(line: 1054, column: 10, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13476, file: !1347, line: 1053, column: 15)
!13481 = !DILocation(line: 1054, column: 3, scope: !13480)
!13482 = !DILocation(line: 1061, column: 28, scope: !13456)
!13483 = !DILocation(line: 1061, column: 34, scope: !13456)
!13484 = !DILocation(line: 1061, column: 40, scope: !13456)
!13485 = !DILocation(line: 1061, column: 8, scope: !13456)
!13486 = !DILocation(line: 1061, column: 6, scope: !13456)
!13487 = !DILocation(line: 1062, column: 6, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13456, file: !1347, line: 1062, column: 6)
!13489 = !DILocation(line: 1062, column: 6, scope: !13456)
!13490 = !DILocation(line: 1063, column: 10, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13488, file: !1347, line: 1062, column: 11)
!13492 = !DILocation(line: 1063, column: 3, scope: !13491)
!13493 = !DILocation(line: 1070, column: 2, scope: !13456)
!13494 = !DILocation(line: 1073, column: 3, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !1347, line: 1072, column: 19)
!13496 = distinct !DILexicalBlock(scope: !13456, file: !1347, line: 1072, column: 6)
!13497 = !DILocation(line: 1075, column: 3, scope: !13495)
!13498 = !DILocation(line: 1101, column: 2, scope: !13456)
!13499 = !DILocation(line: 1102, column: 1, scope: !13456)
!13500 = distinct !DISubprogram(name: "nrf_uart_disable", scope: !1236, file: !1236, line: 413, type: !13501, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{null, !1391}
!13503 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13500, file: !1236, line: 413, type: !1391)
!13504 = !DILocation(line: 413, column: 57, scope: !13500)
!13505 = !DILocation(line: 415, column: 5, scope: !13500)
!13506 = !DILocation(line: 415, column: 12, scope: !13500)
!13507 = !DILocation(line: 415, column: 19, scope: !13500)
!13508 = !DILocation(line: 416, column: 1, scope: !13500)
!13509 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1364, file: !1364, line: 342, type: !13510, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13510 = !DISubroutineType(types: !13511)
!13511 = !{!103, !1465, !156}
!13512 = !DILocalVariable(name: "config", arg: 1, scope: !13509, file: !1364, line: 342, type: !1465)
!13513 = !DILocation(line: 342, column: 72, scope: !13509)
!13514 = !DILocalVariable(name: "id", arg: 2, scope: !13509, file: !1364, line: 343, type: !156)
!13515 = !DILocation(line: 343, column: 19, scope: !13509)
!13516 = !DILocalVariable(name: "ret", scope: !13509, file: !1364, line: 345, type: !103)
!13517 = !DILocation(line: 345, column: 6, scope: !13509)
!13518 = !DILocalVariable(name: "state", scope: !13509, file: !1364, line: 346, type: !1368)
!13519 = !DILocation(line: 346, column: 30, scope: !13509)
!13520 = !DILocation(line: 348, column: 29, scope: !13509)
!13521 = !DILocation(line: 348, column: 37, scope: !13509)
!13522 = !DILocation(line: 348, column: 8, scope: !13509)
!13523 = !DILocation(line: 348, column: 6, scope: !13509)
!13524 = !DILocation(line: 349, column: 6, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13509, file: !1364, line: 349, column: 6)
!13526 = !DILocation(line: 349, column: 10, scope: !13525)
!13527 = !DILocation(line: 349, column: 6, scope: !13509)
!13528 = !DILocation(line: 350, column: 10, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13525, file: !1364, line: 349, column: 15)
!13530 = !DILocation(line: 350, column: 3, scope: !13529)
!13531 = !DILocation(line: 353, column: 36, scope: !13509)
!13532 = !DILocation(line: 353, column: 44, scope: !13509)
!13533 = !DILocation(line: 353, column: 9, scope: !13509)
!13534 = !DILocation(line: 353, column: 2, scope: !13509)
!13535 = !DILocation(line: 354, column: 1, scope: !13509)
!13536 = distinct !DISubprogram(name: "nrf_uart_enable", scope: !1236, file: !1236, line: 408, type: !13501, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13537 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13536, file: !1236, line: 408, type: !1391)
!13538 = !DILocation(line: 408, column: 56, scope: !13536)
!13539 = !DILocation(line: 410, column: 5, scope: !13536)
!13540 = !DILocation(line: 410, column: 12, scope: !13536)
!13541 = !DILocation(line: 410, column: 19, scope: !13536)
!13542 = !DILocation(line: 411, column: 1, scope: !13536)
!13543 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1364, file: !1364, line: 316, type: !13544, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !223)
!13544 = !DISubroutineType(types: !13545)
!13545 = !{!103, !1465, !1368}
!13546 = !DILocalVariable(name: "config", arg: 1, scope: !13543, file: !1364, line: 317, type: !1465)
!13547 = !DILocation(line: 317, column: 35, scope: !13543)
!13548 = !DILocalVariable(name: "state", arg: 2, scope: !13543, file: !1364, line: 318, type: !1368)
!13549 = !DILocation(line: 318, column: 30, scope: !13543)
!13550 = !DILocalVariable(name: "reg", scope: !13543, file: !1364, line: 320, type: !22)
!13551 = !DILocation(line: 320, column: 12, scope: !13543)
!13552 = !DILocation(line: 323, column: 8, scope: !13543)
!13553 = !DILocation(line: 323, column: 16, scope: !13543)
!13554 = !DILocation(line: 323, column: 6, scope: !13543)
!13555 = !DILocation(line: 329, column: 32, scope: !13543)
!13556 = !DILocation(line: 329, column: 39, scope: !13543)
!13557 = !DILocation(line: 329, column: 45, scope: !13543)
!13558 = !DILocation(line: 329, column: 52, scope: !13543)
!13559 = !DILocation(line: 329, column: 61, scope: !13543)
!13560 = !DILocation(line: 329, column: 9, scope: !13543)
!13561 = !DILocation(line: 329, column: 2, scope: !13543)
!13562 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !13563, file: !13563, line: 25, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2748, retainedNodes: !223)
!13563 = !DIFile(filename: "zephyr/drivers/timer/sys_clock_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13564 = !DILocation(line: 27, column: 1, scope: !13562)
!13565 = distinct !DISubprogram(name: "rtc_nrf_isr", scope: !1559, file: !1559, line: 513, type: !17, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13566 = !DILocalVariable(name: "arg", arg: 1, scope: !13565, file: !1559, line: 513, type: !13)
!13567 = !DILocation(line: 513, column: 30, scope: !13565)
!13568 = !DILocation(line: 515, column: 2, scope: !13565)
!13569 = !DILocation(line: 517, column: 6, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13565, file: !1559, line: 517, column: 6)
!13571 = !DILocation(line: 517, column: 63, scope: !13570)
!13572 = !DILocation(line: 518, column: 6, scope: !13570)
!13573 = !DILocation(line: 517, column: 6, scope: !13565)
!13574 = !DILocation(line: 519, column: 3, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13570, file: !1559, line: 518, column: 56)
!13576 = !DILocation(line: 520, column: 15, scope: !13575)
!13577 = !DILocation(line: 521, column: 2, scope: !13575)
!13578 = !DILocalVariable(name: "chan", scope: !13579, file: !1559, line: 523, type: !250)
!13579 = distinct !DILexicalBlock(scope: !13565, file: !1559, line: 523, column: 2)
!13580 = !DILocation(line: 523, column: 15, scope: !13579)
!13581 = !DILocation(line: 523, column: 7, scope: !13579)
!13582 = !DILocation(line: 523, column: 25, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13579, file: !1559, line: 523, column: 2)
!13584 = !DILocation(line: 523, column: 30, scope: !13583)
!13585 = !DILocation(line: 523, column: 2, scope: !13579)
!13586 = !DILocation(line: 524, column: 19, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13583, file: !1559, line: 523, column: 52)
!13588 = !DILocation(line: 524, column: 3, scope: !13587)
!13589 = !DILocation(line: 525, column: 2, scope: !13587)
!13590 = !DILocation(line: 523, column: 48, scope: !13583)
!13591 = !DILocation(line: 523, column: 2, scope: !13583)
!13592 = distinct !{!13592, !13585, !13593}
!13593 = !DILocation(line: 525, column: 2, scope: !13579)
!13594 = !DILocation(line: 526, column: 1, scope: !13565)
!13595 = distinct !DISubprogram(name: "nrf_rtc_int_enable_check", scope: !1472, file: !1472, line: 332, type: !13596, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13596 = !DISubroutineType(types: !13597)
!13597 = !{!173, !13598, !173}
!13598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13599, size: 32)
!13599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!13600 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13595, file: !1472, line: 332, type: !13598)
!13601 = !DILocation(line: 332, column: 74, scope: !13595)
!13602 = !DILocalVariable(name: "mask", arg: 2, scope: !13595, file: !1472, line: 332, type: !173)
!13603 = !DILocation(line: 332, column: 90, scope: !13595)
!13604 = !DILocation(line: 334, column: 12, scope: !13595)
!13605 = !DILocation(line: 334, column: 19, scope: !13595)
!13606 = !DILocation(line: 334, column: 30, scope: !13595)
!13607 = !DILocation(line: 334, column: 28, scope: !13595)
!13608 = !DILocation(line: 334, column: 5, scope: !13595)
!13609 = distinct !DISubprogram(name: "nrf_rtc_event_check", scope: !1472, file: !1472, line: 367, type: !13610, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13610 = !DISubroutineType(types: !13611)
!13611 = !{!717, !13598, !1541}
!13612 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13609, file: !1472, line: 367, type: !13598)
!13613 = !DILocation(line: 367, column: 65, scope: !13609)
!13614 = !DILocalVariable(name: "event", arg: 2, scope: !13609, file: !1472, line: 367, type: !1541)
!13615 = !DILocation(line: 367, column: 88, scope: !13609)
!13616 = !DILocation(line: 369, column: 52, scope: !13609)
!13617 = !DILocation(line: 369, column: 41, scope: !13609)
!13618 = !DILocation(line: 369, column: 70, scope: !13609)
!13619 = !DILocation(line: 369, column: 58, scope: !13609)
!13620 = !DILocation(line: 369, column: 18, scope: !13609)
!13621 = !DILocation(line: 369, column: 12, scope: !13609)
!13622 = !DILocation(line: 369, column: 5, scope: !13609)
!13623 = distinct !DISubprogram(name: "nrf_rtc_event_clear", scope: !1472, file: !1472, line: 372, type: !13624, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13624 = !DISubroutineType(types: !13625)
!13625 = !{null, !1495, !1541}
!13626 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13623, file: !1472, line: 372, type: !1495)
!13627 = !DILocation(line: 372, column: 59, scope: !13623)
!13628 = !DILocalVariable(name: "event", arg: 2, scope: !13623, file: !1472, line: 372, type: !1541)
!13629 = !DILocation(line: 372, column: 82, scope: !13623)
!13630 = !DILocation(line: 374, column: 40, scope: !13623)
!13631 = !DILocation(line: 374, column: 29, scope: !13623)
!13632 = !DILocation(line: 374, column: 58, scope: !13623)
!13633 = !DILocation(line: 374, column: 46, scope: !13623)
!13634 = !DILocation(line: 374, column: 5, scope: !13623)
!13635 = !DILocation(line: 374, column: 66, scope: !13623)
!13636 = !DILocation(line: 375, column: 35, scope: !13623)
!13637 = !DILocation(line: 375, column: 24, scope: !13623)
!13638 = !DILocation(line: 375, column: 53, scope: !13623)
!13639 = !DILocation(line: 375, column: 41, scope: !13623)
!13640 = !DILocation(line: 375, column: 5, scope: !13623)
!13641 = !DILocation(line: 376, column: 1, scope: !13623)
!13642 = distinct !DISubprogram(name: "process_channel", scope: !1559, file: !1559, line: 468, type: !371, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13643 = !DILocalVariable(name: "chan", arg: 1, scope: !13642, file: !1559, line: 468, type: !250)
!13644 = !DILocation(line: 468, column: 37, scope: !13642)
!13645 = !DILocation(line: 470, column: 41, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13642, file: !1559, line: 470, column: 6)
!13647 = !DILocation(line: 470, column: 6, scope: !13646)
!13648 = !DILocation(line: 470, column: 6, scope: !13642)
!13649 = !DILocalVariable(name: "user_context", scope: !13650, file: !1559, line: 471, type: !102)
!13650 = distinct !DILexicalBlock(scope: !13646, file: !1559, line: 470, column: 48)
!13651 = !DILocation(line: 471, column: 9, scope: !13650)
!13652 = !DILocalVariable(name: "mcu_critical_state", scope: !13650, file: !1559, line: 472, type: !173)
!13653 = !DILocation(line: 472, column: 12, scope: !13650)
!13654 = !DILocalVariable(name: "curr_time", scope: !13650, file: !1559, line: 473, type: !312)
!13655 = !DILocation(line: 473, column: 12, scope: !13650)
!13656 = !DILocalVariable(name: "expire_time", scope: !13650, file: !1559, line: 474, type: !312)
!13657 = !DILocation(line: 474, column: 12, scope: !13650)
!13658 = !DILocalVariable(name: "handler", scope: !13650, file: !1559, line: 475, type: !1614)
!13659 = !DILocation(line: 475, column: 37, scope: !13650)
!13660 = !DILocation(line: 477, column: 15, scope: !13650)
!13661 = !DILocation(line: 477, column: 13, scope: !13650)
!13662 = !DILocation(line: 483, column: 24, scope: !13650)
!13663 = !DILocation(line: 483, column: 22, scope: !13650)
!13664 = !DILocation(line: 488, column: 25, scope: !13650)
!13665 = !DILocation(line: 488, column: 17, scope: !13650)
!13666 = !DILocation(line: 488, column: 31, scope: !13650)
!13667 = !DILocation(line: 488, column: 15, scope: !13650)
!13668 = !DILocation(line: 489, column: 7, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13650, file: !1559, line: 489, column: 7)
!13670 = !DILocation(line: 489, column: 20, scope: !13669)
!13671 = !DILocation(line: 489, column: 17, scope: !13669)
!13672 = !DILocation(line: 489, column: 7, scope: !13650)
!13673 = !DILocation(line: 490, column: 22, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13669, file: !1559, line: 489, column: 33)
!13675 = !DILocation(line: 490, column: 14, scope: !13674)
!13676 = !DILocation(line: 490, column: 28, scope: !13674)
!13677 = !DILocation(line: 490, column: 12, scope: !13674)
!13678 = !DILocation(line: 491, column: 27, scope: !13674)
!13679 = !DILocation(line: 491, column: 19, scope: !13674)
!13680 = !DILocation(line: 491, column: 33, scope: !13674)
!13681 = !DILocation(line: 491, column: 17, scope: !13674)
!13682 = !DILocation(line: 492, column: 12, scope: !13674)
!13683 = !DILocation(line: 492, column: 4, scope: !13674)
!13684 = !DILocation(line: 492, column: 18, scope: !13674)
!13685 = !DILocation(line: 492, column: 27, scope: !13674)
!13686 = !DILocation(line: 493, column: 12, scope: !13674)
!13687 = !DILocation(line: 493, column: 4, scope: !13674)
!13688 = !DILocation(line: 493, column: 18, scope: !13674)
!13689 = !DILocation(line: 493, column: 30, scope: !13674)
!13690 = !DILocation(line: 494, column: 18, scope: !13674)
!13691 = !DILocation(line: 494, column: 4, scope: !13674)
!13692 = !DILocation(line: 495, column: 3, scope: !13674)
!13693 = !DILocation(line: 497, column: 19, scope: !13650)
!13694 = !DILocation(line: 497, column: 3, scope: !13650)
!13695 = !DILocation(line: 499, column: 7, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13650, file: !1559, line: 499, column: 7)
!13697 = !DILocation(line: 499, column: 7, scope: !13650)
!13698 = !DILocation(line: 500, column: 4, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13696, file: !1559, line: 499, column: 16)
!13700 = !DILocation(line: 500, column: 12, scope: !13699)
!13701 = !DILocation(line: 500, column: 18, scope: !13699)
!13702 = !DILocation(line: 500, column: 31, scope: !13699)
!13703 = !DILocation(line: 501, column: 3, scope: !13699)
!13704 = !DILocation(line: 502, column: 2, scope: !13650)
!13705 = !DILocation(line: 503, column: 1, scope: !13642)
!13706 = distinct !DISubprogram(name: "channel_processing_check_and_clear", scope: !1559, file: !1559, line: 445, type: !7218, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13707 = !DILocalVariable(name: "chan", arg: 1, scope: !13706, file: !1559, line: 445, type: !250)
!13708 = !DILocation(line: 445, column: 56, scope: !13706)
!13709 = !DILocalVariable(name: "result", scope: !13706, file: !1559, line: 447, type: !717)
!13710 = !DILocation(line: 447, column: 7, scope: !13706)
!13711 = !DILocalVariable(name: "mcu_critical_state", scope: !13706, file: !1559, line: 449, type: !173)
!13712 = !DILocation(line: 449, column: 11, scope: !13706)
!13713 = !DILocation(line: 449, column: 32, scope: !13706)
!13714 = !DILocation(line: 451, column: 36, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13706, file: !1559, line: 451, column: 6)
!13716 = !DILocation(line: 451, column: 6, scope: !13715)
!13717 = !DILocation(line: 451, column: 6, scope: !13706)
!13718 = !DILocation(line: 455, column: 41, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13715, file: !1559, line: 451, column: 65)
!13720 = !DILocation(line: 455, column: 40, scope: !13719)
!13721 = !DILocation(line: 455, column: 12, scope: !13719)
!13722 = !DILocation(line: 455, column: 52, scope: !13719)
!13723 = !DILocation(line: 456, column: 30, scope: !13719)
!13724 = !DILocation(line: 456, column: 5, scope: !13719)
!13725 = !DILocation(line: 455, column: 10, scope: !13719)
!13726 = !DILocation(line: 458, column: 7, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13719, file: !1559, line: 458, column: 7)
!13728 = !DILocation(line: 458, column: 7, scope: !13719)
!13729 = !DILocation(line: 459, column: 16, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13727, file: !1559, line: 458, column: 15)
!13731 = !DILocation(line: 459, column: 4, scope: !13730)
!13732 = !DILocation(line: 460, column: 3, scope: !13730)
!13733 = !DILocation(line: 461, column: 2, scope: !13719)
!13734 = !DILocation(line: 463, column: 18, scope: !13706)
!13735 = !DILocation(line: 463, column: 2, scope: !13706)
!13736 = !DILocation(line: 465, column: 9, scope: !13706)
!13737 = !DILocation(line: 465, column: 2, scope: !13706)
!13738 = distinct !DISubprogram(name: "z_nrf_rtc_timer_read", scope: !1559, file: !1559, line: 358, type: !13739, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13739 = !DISubroutineType(types: !13740)
!13740 = !{!312}
!13741 = !DILocalVariable(name: "val", scope: !13738, file: !1559, line: 360, type: !312)
!13742 = !DILocation(line: 360, column: 11, scope: !13738)
!13743 = !DILocation(line: 360, column: 28, scope: !13738)
!13744 = !DILocation(line: 360, column: 18, scope: !13738)
!13745 = !DILocation(line: 360, column: 42, scope: !13738)
!13746 = !DILocation(line: 282, column: 3, scope: !13747, inlinedAt: !13748)
!13747 = distinct !DISubprogram(name: "__DMB", scope: !8818, file: !8818, line: 280, type: !253, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13748 = distinct !DILocation(line: 362, column: 2, scope: !13738)
!13749 = !{i64 1361371}
!13750 = !DILocalVariable(name: "cntr", scope: !13738, file: !1559, line: 364, type: !173)
!13751 = !DILocation(line: 364, column: 11, scope: !13738)
!13752 = !DILocation(line: 364, column: 18, scope: !13738)
!13753 = !DILocation(line: 366, column: 9, scope: !13738)
!13754 = !DILocation(line: 366, column: 6, scope: !13738)
!13755 = !DILocation(line: 368, column: 6, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13738, file: !1559, line: 368, column: 6)
!13757 = !DILocation(line: 368, column: 11, scope: !13756)
!13758 = !DILocation(line: 368, column: 6, scope: !13738)
!13759 = !DILocation(line: 375, column: 7, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13761, file: !1559, line: 375, column: 7)
!13761 = distinct !DILexicalBlock(scope: !13756, file: !1559, line: 368, column: 38)
!13762 = !DILocation(line: 375, column: 13, scope: !13760)
!13763 = !DILocation(line: 375, column: 11, scope: !13760)
!13764 = !DILocation(line: 375, column: 7, scope: !13761)
!13765 = !DILocation(line: 377, column: 8, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13760, file: !1559, line: 375, column: 21)
!13767 = !DILocation(line: 378, column: 3, scope: !13766)
!13768 = !DILocation(line: 379, column: 2, scope: !13761)
!13769 = !DILocation(line: 385, column: 9, scope: !13738)
!13770 = !DILocation(line: 385, column: 2, scope: !13738)
!13771 = distinct !DISubprogram(name: "full_int_lock", scope: !1559, file: !1559, line: 99, type: !9625, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13772 = !DILocalVariable(name: "mcu_critical_state", scope: !13771, file: !1559, line: 101, type: !173)
!13773 = !DILocation(line: 101, column: 11, scope: !13771)
!13774 = !DILocalVariable(name: "key", scope: !13775, file: !3614, line: 44, type: !32)
!13775 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13776 = !DILocation(line: 44, column: 15, scope: !13775, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 107, column: 24, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !1559, line: 106, column: 9)
!13779 = distinct !DILexicalBlock(scope: !13771, file: !1559, line: 103, column: 6)
!13780 = !DILocation(line: 47, column: 2, scope: !13775, inlinedAt: !13777)
!13781 = !{i64 2047143}
!13782 = !DILocation(line: 76, column: 9, scope: !13775, inlinedAt: !13777)
!13783 = !DILocation(line: 107, column: 22, scope: !13778)
!13784 = !DILocation(line: 110, column: 9, scope: !13771)
!13785 = !DILocation(line: 110, column: 2, scope: !13771)
!13786 = distinct !DISubprogram(name: "event_disable", scope: !1559, file: !1559, line: 83, type: !371, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13787 = !DILocalVariable(name: "chan", arg: 1, scope: !13786, file: !1559, line: 83, type: !250)
!13788 = !DILocation(line: 83, column: 35, scope: !13786)
!13789 = !DILocation(line: 85, column: 29, scope: !13786)
!13790 = !DILocation(line: 85, column: 2, scope: !13786)
!13791 = !DILocation(line: 86, column: 1, scope: !13786)
!13792 = distinct !DISubprogram(name: "full_int_unlock", scope: !1559, file: !1559, line: 113, type: !524, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13793 = !DILocalVariable(name: "mcu_critical_state", arg: 1, scope: !13792, file: !1559, line: 113, type: !173)
!13794 = !DILocation(line: 113, column: 38, scope: !13792)
!13795 = !DILocation(line: 118, column: 3, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13797, file: !1559, line: 117, column: 9)
!13797 = distinct !DILexicalBlock(scope: !13792, file: !1559, line: 115, column: 6)
!13798 = !DILocalVariable(name: "key", arg: 1, scope: !13799, file: !3614, line: 84, type: !32)
!13799 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13800 = !DILocation(line: 84, column: 56, scope: !13799, inlinedAt: !13801)
!13801 = distinct !DILocation(line: 118, column: 3, scope: !13796)
!13802 = !DILocation(line: 87, column: 6, scope: !13803, inlinedAt: !13801)
!13803 = distinct !DILexicalBlock(scope: !13799, file: !3614, line: 87, column: 6)
!13804 = !DILocation(line: 87, column: 10, scope: !13803, inlinedAt: !13801)
!13805 = !DILocation(line: 87, column: 6, scope: !13799, inlinedAt: !13801)
!13806 = !DILocation(line: 88, column: 3, scope: !13807, inlinedAt: !13801)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !3614, line: 87, column: 17)
!13808 = !DILocation(line: 90, column: 2, scope: !13799, inlinedAt: !13801)
!13809 = !{i64 2048007}
!13810 = !DILocation(line: 110, column: 1, scope: !13799, inlinedAt: !13801)
!13811 = !DILocation(line: 120, column: 1, scope: !13792)
!13812 = distinct !DISubprogram(name: "nrf_rtc_event_disable", scope: !1472, file: !1472, line: 416, type: !13813, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13813 = !DISubroutineType(types: !13814)
!13814 = !{null, !1495, !173}
!13815 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13812, file: !1472, line: 416, type: !1495)
!13816 = !DILocation(line: 416, column: 61, scope: !13812)
!13817 = !DILocalVariable(name: "mask", arg: 2, scope: !13812, file: !1472, line: 416, type: !173)
!13818 = !DILocation(line: 416, column: 77, scope: !13812)
!13819 = !DILocation(line: 418, column: 23, scope: !13812)
!13820 = !DILocation(line: 418, column: 5, scope: !13812)
!13821 = !DILocation(line: 418, column: 12, scope: !13812)
!13822 = !DILocation(line: 418, column: 21, scope: !13812)
!13823 = !DILocation(line: 419, column: 1, scope: !13812)
!13824 = distinct !DISubprogram(name: "counter", scope: !1559, file: !1559, line: 88, type: !9625, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13825 = !DILocation(line: 90, column: 9, scope: !13824)
!13826 = !DILocation(line: 90, column: 2, scope: !13824)
!13827 = distinct !DISubprogram(name: "nrf_rtc_counter_get", scope: !1472, file: !1472, line: 378, type: !13828, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13828 = !DISubroutineType(types: !13829)
!13829 = !{!173, !13598}
!13830 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13827, file: !1472, line: 378, type: !13598)
!13831 = !DILocation(line: 378, column: 69, scope: !13827)
!13832 = !DILocation(line: 380, column: 13, scope: !13827)
!13833 = !DILocation(line: 380, column: 20, scope: !13827)
!13834 = !DILocation(line: 380, column: 6, scope: !13827)
!13835 = distinct !DISubprogram(name: "atomic_and", scope: !7160, file: !7160, line: 218, type: !7161, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13836 = !DILocalVariable(name: "target", arg: 1, scope: !13835, file: !7160, line: 218, type: !1342)
!13837 = !DILocation(line: 218, column: 50, scope: !13835)
!13838 = !DILocalVariable(name: "value", arg: 2, scope: !13835, file: !7160, line: 218, type: !1343)
!13839 = !DILocation(line: 218, column: 71, scope: !13835)
!13840 = !DILocation(line: 227, column: 2, scope: !13835)
!13841 = !DILocation(line: 227, column: 2, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13835, file: !7160, line: 227, column: 2)
!13843 = !{i64 2149340467}
!13844 = !DILocation(line: 228, column: 27, scope: !13835)
!13845 = !DILocation(line: 228, column: 35, scope: !13835)
!13846 = !DILocation(line: 228, column: 9, scope: !13835)
!13847 = !DILocation(line: 228, column: 2, scope: !13835)
!13848 = distinct !DISubprogram(name: "event_clear", scope: !1559, file: !1559, line: 73, type: !371, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13849 = !DILocalVariable(name: "chan", arg: 1, scope: !13848, file: !1559, line: 73, type: !250)
!13850 = !DILocation(line: 73, column: 33, scope: !13848)
!13851 = !DILocation(line: 75, column: 27, scope: !13848)
!13852 = !DILocation(line: 75, column: 2, scope: !13848)
!13853 = !DILocation(line: 76, column: 1, scope: !13848)
!13854 = distinct !DISubprogram(name: "nrf_event_readback", scope: !11940, file: !11940, line: 63, type: !8756, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13855 = !DILocalVariable(name: "p_event_reg", arg: 1, scope: !13854, file: !11940, line: 63, type: !102)
!13856 = !DILocation(line: 63, column: 50, scope: !13854)
!13857 = !DILocation(line: 68, column: 11, scope: !13854)
!13858 = !DILocation(line: 70, column: 1, scope: !13854)
!13859 = !DILocalVariable(name: "dev", arg: 1, scope: !1600, file: !1559, line: 646, type: !1567)
!13860 = !DILocation(line: 646, column: 55, scope: !1600)
!13861 = !DILocation(line: 648, column: 2, scope: !1600)
!13862 = !DILocation(line: 657, column: 2, scope: !1600)
!13863 = !DILocalVariable(name: "chan", scope: !13864, file: !1559, line: 658, type: !250)
!13864 = distinct !DILexicalBlock(scope: !1600, file: !1559, line: 658, column: 2)
!13865 = !DILocation(line: 658, column: 15, scope: !13864)
!13866 = !DILocation(line: 658, column: 7, scope: !13864)
!13867 = !DILocation(line: 658, column: 25, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13864, file: !1559, line: 658, column: 2)
!13869 = !DILocation(line: 658, column: 30, scope: !13868)
!13870 = !DILocation(line: 658, column: 2, scope: !13864)
!13871 = !DILocation(line: 659, column: 11, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13868, file: !1559, line: 658, column: 52)
!13873 = !DILocation(line: 659, column: 3, scope: !13872)
!13874 = !DILocation(line: 659, column: 17, scope: !13872)
!13875 = !DILocation(line: 659, column: 29, scope: !13872)
!13876 = !DILocation(line: 660, column: 27, scope: !13872)
!13877 = !DILocation(line: 660, column: 3, scope: !13872)
!13878 = !DILocation(line: 661, column: 2, scope: !13872)
!13879 = !DILocation(line: 658, column: 48, scope: !13868)
!13880 = !DILocation(line: 658, column: 2, scope: !13868)
!13881 = distinct !{!13881, !13870, !13882}
!13882 = !DILocation(line: 661, column: 2, scope: !13864)
!13883 = !DILocation(line: 663, column: 2, scope: !1600)
!13884 = !DILocation(line: 665, column: 2, scope: !1600)
!13885 = !DILocation(line: 667, column: 2, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !1600, file: !1559, line: 667, column: 2)
!13887 = !DILocation(line: 669, column: 2, scope: !1600)
!13888 = !DILocation(line: 671, column: 2, scope: !1600)
!13889 = !DILocation(line: 672, column: 2, scope: !1600)
!13890 = !DILocation(line: 674, column: 11, scope: !1600)
!13891 = !DILocalVariable(name: "initial_timeout", scope: !1600, file: !1559, line: 679, type: !173)
!13892 = !DILocation(line: 679, column: 11, scope: !1600)
!13893 = !DILocation(line: 680, column: 3, scope: !1600)
!13894 = !DILocation(line: 682, column: 17, scope: !1600)
!13895 = !DILocation(line: 682, column: 2, scope: !1600)
!13896 = !DILocation(line: 684, column: 2, scope: !1600)
!13897 = !DILocation(line: 686, column: 2, scope: !1600)
!13898 = distinct !DISubprogram(name: "nrf_rtc_prescaler_set", scope: !1472, file: !1472, line: 383, type: !13813, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13899 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13898, file: !1472, line: 383, type: !1495)
!13900 = !DILocation(line: 383, column: 61, scope: !13898)
!13901 = !DILocalVariable(name: "val", arg: 2, scope: !13898, file: !1472, line: 383, type: !173)
!13902 = !DILocation(line: 383, column: 77, scope: !13898)
!13903 = !DILocation(line: 386, column: 24, scope: !13898)
!13904 = !DILocation(line: 386, column: 5, scope: !13898)
!13905 = !DILocation(line: 386, column: 12, scope: !13898)
!13906 = !DILocation(line: 386, column: 22, scope: !13898)
!13907 = !DILocation(line: 387, column: 1, scope: !13898)
!13908 = distinct !DISubprogram(name: "nrf_rtc_int_enable", scope: !1472, file: !1472, line: 322, type: !13813, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13909 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13908, file: !1472, line: 322, type: !1495)
!13910 = !DILocation(line: 322, column: 58, scope: !13908)
!13911 = !DILocalVariable(name: "mask", arg: 2, scope: !13908, file: !1472, line: 322, type: !173)
!13912 = !DILocation(line: 322, column: 74, scope: !13908)
!13913 = !DILocation(line: 324, column: 23, scope: !13908)
!13914 = !DILocation(line: 324, column: 5, scope: !13908)
!13915 = !DILocation(line: 324, column: 12, scope: !13908)
!13916 = !DILocation(line: 324, column: 21, scope: !13908)
!13917 = !DILocation(line: 325, column: 1, scope: !13908)
!13918 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !508, file: !508, line: 714, type: !8779, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13919 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13918, file: !508, line: 714, type: !1685)
!13920 = !DILocation(line: 714, column: 55, scope: !13918)
!13921 = !DILocation(line: 716, column: 17, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13918, file: !508, line: 716, column: 7)
!13923 = !DILocation(line: 716, column: 23, scope: !13922)
!13924 = !DILocation(line: 716, column: 7, scope: !13918)
!13925 = !DILocation(line: 718, column: 52, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13922, file: !508, line: 717, column: 3)
!13927 = !DILocation(line: 718, column: 58, scope: !13926)
!13928 = !DILocation(line: 718, column: 37, scope: !13926)
!13929 = !DILocation(line: 718, column: 20, scope: !13926)
!13930 = !DILocation(line: 719, column: 3, scope: !13926)
!13931 = !DILocation(line: 720, column: 1, scope: !13918)
!13932 = distinct !DISubprogram(name: "nrf_rtc_task_trigger", scope: !1472, file: !1472, line: 406, type: !13933, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13933 = !DISubroutineType(types: !13934)
!13934 = !{null, !1495, !13935}
!13935 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_rtc_task_t", file: !1472, line: 94, baseType: !1488)
!13936 = !DILocalVariable(name: "p_reg", arg: 1, scope: !13932, file: !1472, line: 406, type: !1495)
!13937 = !DILocation(line: 406, column: 60, scope: !13932)
!13938 = !DILocalVariable(name: "task", arg: 2, scope: !13932, file: !1472, line: 406, type: !13935)
!13939 = !DILocation(line: 406, column: 82, scope: !13932)
!13940 = !DILocation(line: 408, column: 34, scope: !13932)
!13941 = !DILocation(line: 408, column: 24, scope: !13932)
!13942 = !DILocation(line: 408, column: 42, scope: !13932)
!13943 = !DILocation(line: 408, column: 40, scope: !13932)
!13944 = !DILocation(line: 408, column: 6, scope: !13932)
!13945 = !DILocation(line: 408, column: 48, scope: !13932)
!13946 = !DILocation(line: 409, column: 1, scope: !13932)
!13947 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !7339, file: !7339, line: 59, type: !3089, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13948 = !DILocation(line: 64, column: 2, scope: !13947)
!13949 = distinct !DISubprogram(name: "sys_clock_timeout_handler", scope: !1559, file: !1559, line: 409, type: !1617, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13950 = !DILocalVariable(name: "chan", arg: 1, scope: !13949, file: !1559, line: 409, type: !250)
!13951 = !DILocation(line: 409, column: 47, scope: !13949)
!13952 = !DILocalVariable(name: "expire_time", arg: 2, scope: !13949, file: !1559, line: 410, type: !312)
!13953 = !DILocation(line: 410, column: 20, scope: !13949)
!13954 = !DILocalVariable(name: "user_data", arg: 3, scope: !13949, file: !1559, line: 411, type: !102)
!13955 = !DILocation(line: 411, column: 17, scope: !13949)
!13956 = !DILocalVariable(name: "cc_value", scope: !13949, file: !1559, line: 413, type: !173)
!13957 = !DILocation(line: 413, column: 11, scope: !13949)
!13958 = !DILocation(line: 413, column: 42, scope: !13949)
!13959 = !DILocation(line: 413, column: 22, scope: !13949)
!13960 = !DILocalVariable(name: "dticks", scope: !13949, file: !1559, line: 414, type: !312)
!13961 = !DILocation(line: 414, column: 11, scope: !13949)
!13962 = !DILocation(line: 414, column: 21, scope: !13949)
!13963 = !DILocation(line: 414, column: 35, scope: !13949)
!13964 = !DILocation(line: 414, column: 33, scope: !13949)
!13965 = !DILocation(line: 414, column: 49, scope: !13949)
!13966 = !DILocation(line: 414, column: 47, scope: !13949)
!13967 = !DILocation(line: 416, column: 16, scope: !13949)
!13968 = !DILocation(line: 416, column: 25, scope: !13949)
!13969 = !DILocation(line: 416, column: 23, scope: !13949)
!13970 = !DILocation(line: 416, column: 13, scope: !13949)
!13971 = !DILocalVariable(name: "anchor_updated", scope: !13949, file: !1559, line: 418, type: !717)
!13972 = !DILocation(line: 418, column: 7, scope: !13949)
!13973 = !DILocation(line: 418, column: 38, scope: !13949)
!13974 = !DILocation(line: 418, column: 24, scope: !13949)
!13975 = !DILocation(line: 429, column: 16, scope: !13949)
!13976 = !DILocation(line: 429, column: 7, scope: !13949)
!13977 = !DILocation(line: 428, column: 2, scope: !13949)
!13978 = !DILocation(line: 431, column: 6, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13949, file: !1559, line: 431, column: 6)
!13980 = !DILocation(line: 431, column: 33, scope: !13979)
!13981 = !DILocation(line: 431, column: 18, scope: !13979)
!13982 = !DILocation(line: 431, column: 15, scope: !13979)
!13983 = !DILocation(line: 431, column: 6, scope: !13949)
!13984 = !DILocation(line: 438, column: 8, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !1559, line: 438, column: 7)
!13986 = distinct !DILexicalBlock(scope: !13979, file: !1559, line: 431, column: 40)
!13987 = !DILocation(line: 438, column: 7, scope: !13986)
!13988 = !DILocation(line: 439, column: 19, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13985, file: !1559, line: 438, column: 24)
!13990 = !DILocation(line: 439, column: 4, scope: !13989)
!13991 = !DILocation(line: 440, column: 3, scope: !13989)
!13992 = !DILocation(line: 441, column: 16, scope: !13986)
!13993 = !DILocation(line: 441, column: 3, scope: !13986)
!13994 = !DILocation(line: 442, column: 2, scope: !13986)
!13995 = !DILocation(line: 443, column: 1, scope: !13949)
!13996 = distinct !DISubprogram(name: "compare_set", scope: !1559, file: !1559, line: 320, type: !13997, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{!103, !250, !312, !1614, !102}
!13999 = !DILocalVariable(name: "chan", arg: 1, scope: !13996, file: !1559, line: 320, type: !250)
!14000 = !DILocation(line: 320, column: 32, scope: !13996)
!14001 = !DILocalVariable(name: "target_time", arg: 2, scope: !13996, file: !1559, line: 320, type: !312)
!14002 = !DILocation(line: 320, column: 47, scope: !13996)
!14003 = !DILocalVariable(name: "handler", arg: 3, scope: !13996, file: !1559, line: 321, type: !1614)
!14004 = !DILocation(line: 321, column: 38, scope: !13996)
!14005 = !DILocalVariable(name: "user_data", arg: 4, scope: !13996, file: !1559, line: 322, type: !102)
!14006 = !DILocation(line: 322, column: 10, scope: !13996)
!14007 = !DILocalVariable(name: "key", scope: !13996, file: !1559, line: 324, type: !717)
!14008 = !DILocation(line: 324, column: 7, scope: !13996)
!14009 = !DILocation(line: 326, column: 25, scope: !13996)
!14010 = !DILocation(line: 326, column: 8, scope: !13996)
!14011 = !DILocation(line: 326, column: 6, scope: !13996)
!14012 = !DILocalVariable(name: "ret", scope: !13996, file: !1559, line: 328, type: !103)
!14013 = !DILocation(line: 328, column: 6, scope: !13996)
!14014 = !DILocation(line: 328, column: 32, scope: !13996)
!14015 = !DILocation(line: 328, column: 38, scope: !13996)
!14016 = !DILocation(line: 328, column: 51, scope: !13996)
!14017 = !DILocation(line: 328, column: 60, scope: !13996)
!14018 = !DILocation(line: 328, column: 12, scope: !13996)
!14019 = !DILocation(line: 330, column: 21, scope: !13996)
!14020 = !DILocation(line: 330, column: 27, scope: !13996)
!14021 = !DILocation(line: 330, column: 2, scope: !13996)
!14022 = !DILocation(line: 332, column: 9, scope: !13996)
!14023 = !DILocation(line: 332, column: 2, scope: !13996)
!14024 = distinct !DISubprogram(name: "compare_int_lock", scope: !1559, file: !1559, line: 145, type: !7218, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14025 = !DILocalVariable(name: "chan", arg: 1, scope: !14024, file: !1559, line: 145, type: !250)
!14026 = !DILocation(line: 145, column: 38, scope: !14024)
!14027 = !DILocalVariable(name: "prev", scope: !14024, file: !1559, line: 147, type: !1343)
!14028 = !DILocation(line: 147, column: 15, scope: !14024)
!14029 = !DILocation(line: 147, column: 45, scope: !14024)
!14030 = !DILocation(line: 147, column: 44, scope: !14024)
!14031 = !DILocation(line: 147, column: 22, scope: !14024)
!14032 = !DILocation(line: 149, column: 27, scope: !14024)
!14033 = !DILocation(line: 149, column: 2, scope: !14024)
!14034 = !DILocation(line: 282, column: 3, scope: !13747, inlinedAt: !14035)
!14035 = distinct !DILocation(line: 151, column: 2, scope: !14024)
!14036 = !DILocation(line: 260, column: 3, scope: !14037, inlinedAt: !14038)
!14037 = distinct !DISubprogram(name: "__ISB", scope: !8818, file: !8818, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14038 = distinct !DILocation(line: 152, column: 2, scope: !14024)
!14039 = !{i64 1360812}
!14040 = !DILocation(line: 154, column: 9, scope: !14024)
!14041 = !DILocation(line: 154, column: 16, scope: !14024)
!14042 = !DILocation(line: 154, column: 14, scope: !14024)
!14043 = !DILocation(line: 154, column: 2, scope: !14024)
!14044 = distinct !DISubprogram(name: "compare_set_nolocks", scope: !1559, file: !1559, line: 286, type: !13997, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14045 = !DILocalVariable(name: "chan", arg: 1, scope: !14044, file: !1559, line: 286, type: !250)
!14046 = !DILocation(line: 286, column: 40, scope: !14044)
!14047 = !DILocalVariable(name: "target_time", arg: 2, scope: !14044, file: !1559, line: 286, type: !312)
!14048 = !DILocation(line: 286, column: 55, scope: !14044)
!14049 = !DILocalVariable(name: "handler", arg: 3, scope: !14044, file: !1559, line: 287, type: !1614)
!14050 = !DILocation(line: 287, column: 38, scope: !14044)
!14051 = !DILocalVariable(name: "user_data", arg: 4, scope: !14044, file: !1559, line: 288, type: !102)
!14052 = !DILocation(line: 288, column: 10, scope: !14044)
!14053 = !DILocalVariable(name: "ret", scope: !14044, file: !1559, line: 290, type: !103)
!14054 = !DILocation(line: 290, column: 6, scope: !14044)
!14055 = !DILocalVariable(name: "cc_value", scope: !14044, file: !1559, line: 291, type: !173)
!14056 = !DILocation(line: 291, column: 11, scope: !14044)
!14057 = !DILocation(line: 291, column: 42, scope: !14044)
!14058 = !DILocation(line: 291, column: 22, scope: !14044)
!14059 = !DILocalVariable(name: "curr_time", scope: !14044, file: !1559, line: 292, type: !312)
!14060 = !DILocation(line: 292, column: 11, scope: !14044)
!14061 = !DILocation(line: 292, column: 23, scope: !14044)
!14062 = !DILocation(line: 294, column: 6, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14044, file: !1559, line: 294, column: 6)
!14064 = !DILocation(line: 294, column: 18, scope: !14063)
!14065 = !DILocation(line: 294, column: 16, scope: !14063)
!14066 = !DILocation(line: 294, column: 6, scope: !14044)
!14067 = !DILocation(line: 295, column: 7, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14069, file: !1559, line: 295, column: 7)
!14069 = distinct !DILexicalBlock(scope: !14063, file: !1559, line: 294, column: 31)
!14070 = !DILocation(line: 295, column: 21, scope: !14068)
!14071 = !DILocation(line: 295, column: 19, scope: !14068)
!14072 = !DILocation(line: 295, column: 31, scope: !14068)
!14073 = !DILocation(line: 295, column: 7, scope: !14069)
!14074 = !DILocation(line: 297, column: 4, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14068, file: !1559, line: 295, column: 47)
!14076 = !DILocation(line: 300, column: 7, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14069, file: !1559, line: 300, column: 7)
!14078 = !DILocation(line: 300, column: 30, scope: !14077)
!14079 = !DILocation(line: 300, column: 22, scope: !14077)
!14080 = !DILocation(line: 300, column: 36, scope: !14077)
!14081 = !DILocation(line: 300, column: 19, scope: !14077)
!14082 = !DILocation(line: 300, column: 7, scope: !14069)
!14083 = !DILocalVariable(name: "cc_set", scope: !14084, file: !1559, line: 304, type: !173)
!14084 = distinct !DILexicalBlock(scope: !14077, file: !1559, line: 300, column: 49)
!14085 = !DILocation(line: 304, column: 13, scope: !14084)
!14086 = !DILocation(line: 304, column: 41, scope: !14084)
!14087 = !DILocation(line: 304, column: 47, scope: !14084)
!14088 = !DILocation(line: 304, column: 22, scope: !14084)
!14089 = !DILocation(line: 306, column: 31, scope: !14084)
!14090 = !DILocation(line: 306, column: 39, scope: !14084)
!14091 = !DILocation(line: 306, column: 19, scope: !14084)
!14092 = !DILocation(line: 306, column: 16, scope: !14084)
!14093 = !DILocation(line: 307, column: 3, scope: !14084)
!14094 = !DILocation(line: 308, column: 2, scope: !14069)
!14095 = !DILocation(line: 310, column: 30, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14063, file: !1559, line: 308, column: 9)
!14097 = !DILocation(line: 310, column: 3, scope: !14096)
!14098 = !DILocation(line: 313, column: 30, scope: !14044)
!14099 = !DILocation(line: 313, column: 10, scope: !14044)
!14100 = !DILocation(line: 313, column: 2, scope: !14044)
!14101 = !DILocation(line: 313, column: 16, scope: !14044)
!14102 = !DILocation(line: 313, column: 28, scope: !14044)
!14103 = !DILocation(line: 314, column: 27, scope: !14044)
!14104 = !DILocation(line: 314, column: 10, scope: !14044)
!14105 = !DILocation(line: 314, column: 2, scope: !14044)
!14106 = !DILocation(line: 314, column: 16, scope: !14044)
!14107 = !DILocation(line: 314, column: 25, scope: !14044)
!14108 = !DILocation(line: 315, column: 31, scope: !14044)
!14109 = !DILocation(line: 315, column: 10, scope: !14044)
!14110 = !DILocation(line: 315, column: 2, scope: !14044)
!14111 = !DILocation(line: 315, column: 16, scope: !14044)
!14112 = !DILocation(line: 315, column: 29, scope: !14044)
!14113 = !DILocation(line: 317, column: 9, scope: !14044)
!14114 = !DILocation(line: 317, column: 2, scope: !14044)
!14115 = !DILocation(line: 318, column: 1, scope: !14044)
!14116 = distinct !DISubprogram(name: "compare_int_unlock", scope: !1559, file: !1559, line: 165, type: !14117, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14117 = !DISubroutineType(types: !14118)
!14118 = !{null, !250, !717}
!14119 = !DILocalVariable(name: "chan", arg: 1, scope: !14116, file: !1559, line: 165, type: !250)
!14120 = !DILocation(line: 165, column: 40, scope: !14116)
!14121 = !DILocalVariable(name: "key", arg: 2, scope: !14116, file: !1559, line: 165, type: !717)
!14122 = !DILocation(line: 165, column: 51, scope: !14116)
!14123 = !DILocation(line: 167, column: 6, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14116, file: !1559, line: 167, column: 6)
!14125 = !DILocation(line: 167, column: 6, scope: !14116)
!14126 = !DILocation(line: 168, column: 24, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14124, file: !1559, line: 167, column: 11)
!14128 = !DILocation(line: 168, column: 3, scope: !14127)
!14129 = !DILocation(line: 169, column: 27, scope: !14127)
!14130 = !DILocation(line: 169, column: 3, scope: !14127)
!14131 = !DILocation(line: 170, column: 7, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14127, file: !1559, line: 170, column: 7)
!14133 = !DILocation(line: 170, column: 37, scope: !14132)
!14134 = !DILocation(line: 170, column: 35, scope: !14132)
!14135 = !DILocation(line: 170, column: 7, scope: !14127)
!14136 = !DILocation(line: 171, column: 4, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14132, file: !1559, line: 170, column: 48)
!14138 = !DILocation(line: 172, column: 3, scope: !14137)
!14139 = !DILocation(line: 173, column: 2, scope: !14127)
!14140 = !DILocation(line: 174, column: 1, scope: !14116)
!14141 = distinct !DISubprogram(name: "atomic_or", scope: !7160, file: !7160, line: 170, type: !7161, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14142 = !DILocalVariable(name: "target", arg: 1, scope: !14141, file: !7160, line: 170, type: !1342)
!14143 = !DILocation(line: 170, column: 49, scope: !14141)
!14144 = !DILocalVariable(name: "value", arg: 2, scope: !14141, file: !7160, line: 170, type: !1343)
!14145 = !DILocation(line: 170, column: 70, scope: !14141)
!14146 = !DILocation(line: 179, column: 2, scope: !14141)
!14147 = !DILocation(line: 179, column: 2, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14141, file: !7160, line: 179, column: 2)
!14149 = !{i64 2149340331}
!14150 = !DILocation(line: 180, column: 26, scope: !14141)
!14151 = !DILocation(line: 180, column: 34, scope: !14141)
!14152 = !DILocation(line: 180, column: 9, scope: !14141)
!14153 = !DILocation(line: 180, column: 2, scope: !14141)
!14154 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !508, file: !508, line: 699, type: !8779, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14155 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14154, file: !508, line: 699, type: !1685)
!14156 = !DILocation(line: 699, column: 53, scope: !14154)
!14157 = !DILocation(line: 701, column: 17, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14154, file: !508, line: 701, column: 7)
!14159 = !DILocation(line: 701, column: 23, scope: !14158)
!14160 = !DILocation(line: 701, column: 7, scope: !14154)
!14161 = !DILocation(line: 703, column: 52, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14158, file: !508, line: 702, column: 3)
!14163 = !DILocation(line: 703, column: 58, scope: !14162)
!14164 = !DILocation(line: 703, column: 37, scope: !14162)
!14165 = !DILocation(line: 703, column: 20, scope: !14162)
!14166 = !DILocation(line: 704, column: 3, scope: !14162)
!14167 = !DILocation(line: 705, column: 1, scope: !14154)
!14168 = distinct !DISubprogram(name: "absolute_time_to_cc", scope: !1559, file: !1559, line: 93, type: !14169, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14169 = !DISubroutineType(types: !14170)
!14170 = !{!173, !312}
!14171 = !DILocalVariable(name: "absolute_time", arg: 1, scope: !14168, file: !1559, line: 93, type: !312)
!14172 = !DILocation(line: 93, column: 46, scope: !14168)
!14173 = !DILocation(line: 96, column: 9, scope: !14168)
!14174 = !DILocation(line: 96, column: 23, scope: !14168)
!14175 = !DILocation(line: 96, column: 2, scope: !14168)
!14176 = distinct !DISubprogram(name: "set_absolute_alarm", scope: !1559, file: !1559, line: 231, type: !14177, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{!173, !250, !173}
!14179 = !DILocalVariable(name: "chan", arg: 1, scope: !14176, file: !1559, line: 231, type: !250)
!14180 = !DILocation(line: 231, column: 44, scope: !14176)
!14181 = !DILocalVariable(name: "abs_val", arg: 2, scope: !14176, file: !1559, line: 231, type: !173)
!14182 = !DILocation(line: 231, column: 59, scope: !14176)
!14183 = !DILocalVariable(name: "now", scope: !14176, file: !1559, line: 233, type: !173)
!14184 = !DILocation(line: 233, column: 11, scope: !14176)
!14185 = !DILocalVariable(name: "now2", scope: !14176, file: !1559, line: 234, type: !173)
!14186 = !DILocation(line: 234, column: 11, scope: !14176)
!14187 = !DILocalVariable(name: "cc_val", scope: !14176, file: !1559, line: 235, type: !173)
!14188 = !DILocation(line: 235, column: 11, scope: !14176)
!14189 = !DILocation(line: 235, column: 20, scope: !14176)
!14190 = !DILocation(line: 235, column: 28, scope: !14176)
!14191 = !DILocalVariable(name: "prev_cc", scope: !14176, file: !1559, line: 236, type: !173)
!14192 = !DILocation(line: 236, column: 11, scope: !14176)
!14193 = !DILocation(line: 236, column: 36, scope: !14176)
!14194 = !DILocation(line: 236, column: 21, scope: !14176)
!14195 = !DILocalVariable(name: "tick_inc", scope: !14176, file: !1559, line: 237, type: !173)
!14196 = !DILocation(line: 237, column: 11, scope: !14176)
!14197 = !DILocation(line: 239, column: 2, scope: !14176)
!14198 = !DILocation(line: 240, column: 9, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14176, file: !1559, line: 239, column: 5)
!14200 = !DILocation(line: 240, column: 7, scope: !14199)
!14201 = !DILocation(line: 247, column: 18, scope: !14199)
!14202 = !DILocation(line: 247, column: 24, scope: !14199)
!14203 = !DILocation(line: 247, column: 3, scope: !14199)
!14204 = !DILocation(line: 248, column: 19, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14199, file: !1559, line: 248, column: 7)
!14206 = !DILocation(line: 248, column: 28, scope: !14205)
!14207 = !DILocation(line: 248, column: 7, scope: !14205)
!14208 = !DILocation(line: 248, column: 33, scope: !14205)
!14209 = !DILocation(line: 248, column: 7, scope: !14199)
!14210 = !DILocation(line: 253, column: 4, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14205, file: !1559, line: 248, column: 39)
!14212 = !DILocation(line: 254, column: 3, scope: !14211)
!14213 = !DILocation(line: 263, column: 19, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14199, file: !1559, line: 263, column: 7)
!14215 = !DILocation(line: 263, column: 27, scope: !14214)
!14216 = !DILocation(line: 263, column: 31, scope: !14214)
!14217 = !DILocation(line: 263, column: 7, scope: !14214)
!14218 = !DILocation(line: 263, column: 36, scope: !14214)
!14219 = !DILocation(line: 263, column: 7, scope: !14199)
!14220 = !DILocation(line: 264, column: 13, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14214, file: !1559, line: 263, column: 57)
!14222 = !DILocation(line: 264, column: 19, scope: !14221)
!14223 = !DILocation(line: 264, column: 17, scope: !14221)
!14224 = !DILocation(line: 264, column: 11, scope: !14221)
!14225 = !DILocation(line: 265, column: 12, scope: !14221)
!14226 = !DILocation(line: 266, column: 3, scope: !14221)
!14227 = !DILocation(line: 268, column: 15, scope: !14199)
!14228 = !DILocation(line: 268, column: 3, scope: !14199)
!14229 = !DILocation(line: 269, column: 16, scope: !14199)
!14230 = !DILocation(line: 269, column: 3, scope: !14199)
!14231 = !DILocation(line: 270, column: 18, scope: !14199)
!14232 = !DILocation(line: 270, column: 24, scope: !14199)
!14233 = !DILocation(line: 270, column: 3, scope: !14199)
!14234 = !DILocation(line: 271, column: 10, scope: !14199)
!14235 = !DILocation(line: 271, column: 8, scope: !14199)
!14236 = !DILocation(line: 272, column: 13, scope: !14199)
!14237 = !DILocation(line: 272, column: 11, scope: !14199)
!14238 = !DILocation(line: 280, column: 2, scope: !14199)
!14239 = !DILocation(line: 280, column: 12, scope: !14176)
!14240 = !DILocation(line: 280, column: 20, scope: !14176)
!14241 = !DILocation(line: 280, column: 17, scope: !14176)
!14242 = !DILocation(line: 280, column: 25, scope: !14176)
!14243 = !DILocation(line: 281, column: 17, scope: !14176)
!14244 = !DILocation(line: 281, column: 25, scope: !14176)
!14245 = !DILocation(line: 281, column: 30, scope: !14176)
!14246 = !DILocation(line: 281, column: 5, scope: !14176)
!14247 = !DILocation(line: 281, column: 35, scope: !14176)
!14248 = !DILocation(line: 0, scope: !14176)
!14249 = distinct !{!14249, !14197, !14250}
!14250 = !DILocation(line: 281, column: 55, scope: !14176)
!14251 = !DILocation(line: 283, column: 9, scope: !14176)
!14252 = !DILocation(line: 283, column: 2, scope: !14176)
!14253 = distinct !DISubprogram(name: "counter_sub", scope: !1559, file: !1559, line: 58, type: !14254, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14254 = !DISubroutineType(types: !14255)
!14255 = !{!173, !173, !173}
!14256 = !DILocalVariable(name: "a", arg: 1, scope: !14253, file: !1559, line: 58, type: !173)
!14257 = !DILocation(line: 58, column: 38, scope: !14253)
!14258 = !DILocalVariable(name: "b", arg: 2, scope: !14253, file: !1559, line: 58, type: !173)
!14259 = !DILocation(line: 58, column: 50, scope: !14253)
!14260 = !DILocation(line: 60, column: 10, scope: !14253)
!14261 = !DILocation(line: 60, column: 14, scope: !14253)
!14262 = !DILocation(line: 60, column: 12, scope: !14253)
!14263 = !DILocation(line: 60, column: 17, scope: !14253)
!14264 = !DILocation(line: 60, column: 2, scope: !14253)
!14265 = distinct !DISubprogram(name: "get_comparator", scope: !1559, file: !1559, line: 68, type: !14266, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14266 = !DISubroutineType(types: !14267)
!14267 = !{!173, !250}
!14268 = !DILocalVariable(name: "chan", arg: 1, scope: !14265, file: !1559, line: 68, type: !250)
!14269 = !DILocation(line: 68, column: 40, scope: !14265)
!14270 = !DILocation(line: 70, column: 29, scope: !14265)
!14271 = !DILocation(line: 70, column: 9, scope: !14265)
!14272 = !DILocation(line: 70, column: 2, scope: !14265)
!14273 = distinct !DISubprogram(name: "set_comparator", scope: !1559, file: !1559, line: 63, type: !14274, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14274 = !DISubroutineType(types: !14275)
!14275 = !{null, !250, !173}
!14276 = !DILocalVariable(name: "chan", arg: 1, scope: !14273, file: !1559, line: 63, type: !250)
!14277 = !DILocation(line: 63, column: 36, scope: !14273)
!14278 = !DILocalVariable(name: "cyc", arg: 2, scope: !14273, file: !1559, line: 63, type: !173)
!14279 = !DILocation(line: 63, column: 51, scope: !14273)
!14280 = !DILocation(line: 65, column: 22, scope: !14273)
!14281 = !DILocation(line: 65, column: 28, scope: !14273)
!14282 = !DILocation(line: 65, column: 32, scope: !14273)
!14283 = !DILocation(line: 65, column: 2, scope: !14273)
!14284 = !DILocation(line: 66, column: 1, scope: !14273)
!14285 = distinct !DISubprogram(name: "k_busy_wait", scope: !3240, file: !3240, line: 123, type: !524, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14286 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14285, file: !3240, line: 123, type: !173)
!14287 = !DILocation(line: 123, column: 41, scope: !14285)
!14288 = !DILocation(line: 132, column: 2, scope: !14285)
!14289 = !DILocation(line: 132, column: 2, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14285, file: !3240, line: 132, column: 2)
!14291 = !{i64 2150614901}
!14292 = !DILocation(line: 133, column: 21, scope: !14285)
!14293 = !DILocation(line: 133, column: 2, scope: !14285)
!14294 = !DILocation(line: 134, column: 1, scope: !14285)
!14295 = distinct !DISubprogram(name: "event_enable", scope: !1559, file: !1559, line: 78, type: !371, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14296 = !DILocalVariable(name: "chan", arg: 1, scope: !14295, file: !1559, line: 78, type: !250)
!14297 = !DILocation(line: 78, column: 34, scope: !14295)
!14298 = !DILocation(line: 80, column: 28, scope: !14295)
!14299 = !DILocation(line: 80, column: 2, scope: !14295)
!14300 = !DILocation(line: 81, column: 1, scope: !14295)
!14301 = distinct !DISubprogram(name: "nrf_rtc_event_enable", scope: !1472, file: !1472, line: 411, type: !13813, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14302 = !DILocalVariable(name: "p_reg", arg: 1, scope: !14301, file: !1472, line: 411, type: !1495)
!14303 = !DILocation(line: 411, column: 60, scope: !14301)
!14304 = !DILocalVariable(name: "mask", arg: 2, scope: !14301, file: !1472, line: 411, type: !173)
!14305 = !DILocation(line: 411, column: 76, scope: !14301)
!14306 = !DILocation(line: 413, column: 23, scope: !14301)
!14307 = !DILocation(line: 413, column: 5, scope: !14301)
!14308 = !DILocation(line: 413, column: 12, scope: !14301)
!14309 = !DILocation(line: 413, column: 21, scope: !14301)
!14310 = !DILocation(line: 414, column: 1, scope: !14301)
!14311 = distinct !DISubprogram(name: "nrf_rtc_cc_set", scope: !1472, file: !1472, line: 312, type: !14312, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14312 = !DISubroutineType(types: !14313)
!14313 = !{null, !1495, !173, !173}
!14314 = !DILocalVariable(name: "p_reg", arg: 1, scope: !14311, file: !1472, line: 312, type: !1495)
!14315 = !DILocation(line: 312, column: 55, scope: !14311)
!14316 = !DILocalVariable(name: "ch", arg: 2, scope: !14311, file: !1472, line: 312, type: !173)
!14317 = !DILocation(line: 312, column: 71, scope: !14311)
!14318 = !DILocalVariable(name: "cc_val", arg: 3, scope: !14311, file: !1472, line: 312, type: !173)
!14319 = !DILocation(line: 312, column: 84, scope: !14311)
!14320 = !DILocation(line: 314, column: 21, scope: !14311)
!14321 = !DILocation(line: 314, column: 5, scope: !14311)
!14322 = !DILocation(line: 314, column: 12, scope: !14311)
!14323 = !DILocation(line: 314, column: 15, scope: !14311)
!14324 = !DILocation(line: 314, column: 19, scope: !14311)
!14325 = !DILocation(line: 315, column: 1, scope: !14311)
!14326 = distinct !DISubprogram(name: "nrf_rtc_cc_get", scope: !1472, file: !1472, line: 317, type: !13596, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14327 = !DILocalVariable(name: "p_reg", arg: 1, scope: !14326, file: !1472, line: 317, type: !13598)
!14328 = !DILocation(line: 317, column: 65, scope: !14326)
!14329 = !DILocalVariable(name: "ch", arg: 2, scope: !14326, file: !1472, line: 317, type: !173)
!14330 = !DILocation(line: 317, column: 81, scope: !14326)
!14331 = !DILocation(line: 319, column: 12, scope: !14326)
!14332 = !DILocation(line: 319, column: 19, scope: !14326)
!14333 = !DILocation(line: 319, column: 22, scope: !14326)
!14334 = !DILocation(line: 319, column: 5, scope: !14326)
!14335 = distinct !DISubprogram(name: "nrf_rtc_int_disable", scope: !1472, file: !1472, line: 327, type: !13813, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14336 = !DILocalVariable(name: "p_reg", arg: 1, scope: !14335, file: !1472, line: 327, type: !1495)
!14337 = !DILocation(line: 327, column: 59, scope: !14335)
!14338 = !DILocalVariable(name: "mask", arg: 2, scope: !14335, file: !1472, line: 327, type: !173)
!14339 = !DILocation(line: 327, column: 75, scope: !14335)
!14340 = !DILocation(line: 329, column: 23, scope: !14335)
!14341 = !DILocation(line: 329, column: 5, scope: !14335)
!14342 = !DILocation(line: 329, column: 12, scope: !14335)
!14343 = !DILocation(line: 329, column: 21, scope: !14335)
!14344 = !DILocation(line: 330, column: 1, scope: !14335)
!14345 = distinct !DISubprogram(name: "anchor_update", scope: !1559, file: !1559, line: 393, type: !14346, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14346 = !DISubroutineType(types: !14347)
!14347 = !{!717, !173}
!14348 = !DILocalVariable(name: "cc_value", arg: 1, scope: !14345, file: !1559, line: 393, type: !173)
!14349 = !DILocation(line: 393, column: 43, scope: !14345)
!14350 = !DILocation(line: 396, column: 22, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14345, file: !1559, line: 396, column: 6)
!14352 = !DILocation(line: 396, column: 6, scope: !14351)
!14353 = !DILocation(line: 396, column: 6, scope: !14345)
!14354 = !DILocation(line: 402, column: 24, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14351, file: !1559, line: 396, column: 33)
!14356 = !DILocation(line: 402, column: 14, scope: !14355)
!14357 = !DILocation(line: 402, column: 38, scope: !14355)
!14358 = !DILocation(line: 402, column: 62, scope: !14355)
!14359 = !DILocation(line: 402, column: 60, scope: !14355)
!14360 = !DILocation(line: 402, column: 10, scope: !14355)
!14361 = !DILocation(line: 403, column: 3, scope: !14355)
!14362 = !DILocation(line: 406, column: 2, scope: !14345)
!14363 = !DILocation(line: 407, column: 1, scope: !14345)
!14364 = distinct !DISubprogram(name: "in_anchor_range", scope: !1559, file: !1559, line: 388, type: !14346, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14365 = !DILocalVariable(name: "cc_value", arg: 1, scope: !14364, file: !1559, line: 388, type: !173)
!14366 = !DILocation(line: 388, column: 45, scope: !14364)
!14367 = !DILocation(line: 390, column: 10, scope: !14364)
!14368 = !DILocation(line: 390, column: 19, scope: !14364)
!14369 = !DILocation(line: 390, column: 42, scope: !14364)
!14370 = !DILocation(line: 390, column: 46, scope: !14364)
!14371 = !DILocation(line: 390, column: 55, scope: !14364)
!14372 = !DILocation(line: 0, scope: !14364)
!14373 = !DILocation(line: 390, column: 2, scope: !14364)
!14374 = distinct !DISubprogram(name: "z_nrf_rtc_timer_compare_evt_address_get", scope: !1559, file: !1559, line: 122, type: !14266, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14375 = !DILocalVariable(name: "chan", arg: 1, scope: !14374, file: !1559, line: 122, type: !250)
!14376 = !DILocation(line: 122, column: 58, scope: !14374)
!14377 = !DILocation(line: 125, column: 66, scope: !14374)
!14378 = !DILocation(line: 125, column: 40, scope: !14374)
!14379 = !DILocation(line: 125, column: 9, scope: !14374)
!14380 = !DILocation(line: 125, column: 2, scope: !14374)
!14381 = distinct !DISubprogram(name: "nrf_rtc_compare_event_get", scope: !1472, file: !1472, line: 421, type: !14382, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14382 = !DISubroutineType(types: !14383)
!14383 = !{!1541, !156}
!14384 = !DILocalVariable(name: "index", arg: 1, scope: !14381, file: !1472, line: 421, type: !156)
!14385 = !DILocation(line: 421, column: 69, scope: !14381)
!14386 = !DILocation(line: 423, column: 29, scope: !14381)
!14387 = !DILocation(line: 423, column: 5, scope: !14381)
!14388 = distinct !DISubprogram(name: "nrf_rtc_event_address_get", scope: !1472, file: !1472, line: 394, type: !14389, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14389 = !DISubroutineType(types: !14390)
!14390 = !{!173, !13598, !1541}
!14391 = !DILocalVariable(name: "p_reg", arg: 1, scope: !14388, file: !1472, line: 394, type: !13598)
!14392 = !DILocation(line: 394, column: 75, scope: !14388)
!14393 = !DILocalVariable(name: "event", arg: 2, scope: !14388, file: !1472, line: 395, type: !1541)
!14394 = !DILocation(line: 395, column: 75, scope: !14388)
!14395 = !DILocation(line: 397, column: 22, scope: !14388)
!14396 = !DILocation(line: 397, column: 12, scope: !14388)
!14397 = !DILocation(line: 397, column: 30, scope: !14388)
!14398 = !DILocation(line: 397, column: 28, scope: !14388)
!14399 = !DILocation(line: 397, column: 5, scope: !14388)
!14400 = distinct !DISubprogram(name: "z_nrf_rtc_timer_capture_task_address_get", scope: !1559, file: !1559, line: 128, type: !14266, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14401 = !DILocalVariable(name: "chan", arg: 1, scope: !14400, file: !1559, line: 128, type: !250)
!14402 = !DILocation(line: 128, column: 59, scope: !14400)
!14403 = !DILocation(line: 140, column: 2, scope: !14400)
!14404 = !DILocation(line: 141, column: 2, scope: !14400)
!14405 = distinct !DISubprogram(name: "z_nrf_rtc_timer_compare_int_lock", scope: !1559, file: !1559, line: 158, type: !7218, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14406 = !DILocalVariable(name: "chan", arg: 1, scope: !14405, file: !1559, line: 158, type: !250)
!14407 = !DILocation(line: 158, column: 47, scope: !14405)
!14408 = !DILocation(line: 162, column: 26, scope: !14405)
!14409 = !DILocation(line: 162, column: 9, scope: !14405)
!14410 = !DILocation(line: 162, column: 2, scope: !14405)
!14411 = distinct !DISubprogram(name: "z_nrf_rtc_timer_compare_int_unlock", scope: !1559, file: !1559, line: 176, type: !14117, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14412 = !DILocalVariable(name: "chan", arg: 1, scope: !14411, file: !1559, line: 176, type: !250)
!14413 = !DILocation(line: 176, column: 49, scope: !14411)
!14414 = !DILocalVariable(name: "key", arg: 2, scope: !14411, file: !1559, line: 176, type: !717)
!14415 = !DILocation(line: 176, column: 60, scope: !14411)
!14416 = !DILocation(line: 180, column: 21, scope: !14411)
!14417 = !DILocation(line: 180, column: 27, scope: !14411)
!14418 = !DILocation(line: 180, column: 2, scope: !14411)
!14419 = !DILocation(line: 181, column: 1, scope: !14411)
!14420 = distinct !DISubprogram(name: "z_nrf_rtc_timer_compare_read", scope: !1559, file: !1559, line: 183, type: !14266, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14421 = !DILocalVariable(name: "chan", arg: 1, scope: !14420, file: !1559, line: 183, type: !250)
!14422 = !DILocation(line: 183, column: 47, scope: !14420)
!14423 = !DILocation(line: 187, column: 29, scope: !14420)
!14424 = !DILocation(line: 187, column: 9, scope: !14420)
!14425 = !DILocation(line: 187, column: 2, scope: !14420)
!14426 = distinct !DISubprogram(name: "z_nrf_rtc_timer_get_ticks", scope: !1559, file: !1559, line: 190, type: !14427, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14427 = !DISubroutineType(types: !14428)
!14428 = !{!312, !14429}
!14429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !294, line: 67, baseType: !14430)
!14430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !294, line: 65, size: 64, elements: !14431)
!14431 = !{!14432}
!14432 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14430, file: !294, line: 66, baseType: !293, size: 64)
!14433 = !DILocalVariable(name: "t", arg: 1, scope: !14426, file: !1559, line: 190, type: !14429)
!14434 = !DILocation(line: 190, column: 48, scope: !14426)
!14435 = !DILocalVariable(name: "curr_time", scope: !14426, file: !1559, line: 192, type: !312)
!14436 = !DILocation(line: 192, column: 11, scope: !14426)
!14437 = !DILocalVariable(name: "curr_tick", scope: !14426, file: !1559, line: 193, type: !186)
!14438 = !DILocation(line: 193, column: 10, scope: !14426)
!14439 = !DILocalVariable(name: "result", scope: !14426, file: !1559, line: 194, type: !186)
!14440 = !DILocation(line: 194, column: 10, scope: !14426)
!14441 = !DILocalVariable(name: "abs_ticks", scope: !14426, file: !1559, line: 195, type: !186)
!14442 = !DILocation(line: 195, column: 10, scope: !14426)
!14443 = !DILocation(line: 197, column: 2, scope: !14426)
!14444 = !DILocation(line: 198, column: 15, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14426, file: !1559, line: 197, column: 5)
!14446 = !DILocation(line: 198, column: 13, scope: !14445)
!14447 = !DILocation(line: 199, column: 15, scope: !14445)
!14448 = !DILocation(line: 199, column: 13, scope: !14445)
!14449 = !DILocation(line: 200, column: 2, scope: !14445)
!14450 = !DILocation(line: 200, column: 11, scope: !14426)
!14451 = !DILocation(line: 200, column: 24, scope: !14426)
!14452 = !DILocation(line: 200, column: 21, scope: !14426)
!14453 = distinct !{!14453, !14443, !14454}
!14454 = !DILocation(line: 200, column: 46, scope: !14426)
!14455 = !DILocation(line: 202, column: 14, scope: !14426)
!14456 = !DILocation(line: 202, column: 12, scope: !14426)
!14457 = !DILocation(line: 203, column: 6, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14426, file: !1559, line: 203, column: 6)
!14459 = !DILocation(line: 203, column: 16, scope: !14458)
!14460 = !DILocation(line: 203, column: 6, scope: !14426)
!14461 = !DILocation(line: 205, column: 13, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14458, file: !1559, line: 203, column: 21)
!14463 = !DILocation(line: 205, column: 19, scope: !14462)
!14464 = !DILocation(line: 205, column: 10, scope: !14462)
!14465 = !DILocation(line: 206, column: 15, scope: !14462)
!14466 = !DILocation(line: 206, column: 29, scope: !14462)
!14467 = !DILocation(line: 206, column: 25, scope: !14462)
!14468 = !DILocation(line: 205, column: 3, scope: !14462)
!14469 = !DILocation(line: 210, column: 11, scope: !14426)
!14470 = !DILocation(line: 210, column: 23, scope: !14426)
!14471 = !DILocation(line: 210, column: 21, scope: !14426)
!14472 = !DILocation(line: 210, column: 9, scope: !14426)
!14473 = !DILocation(line: 212, column: 6, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14426, file: !1559, line: 212, column: 6)
!14475 = !DILocation(line: 212, column: 13, scope: !14474)
!14476 = !DILocation(line: 212, column: 6, scope: !14426)
!14477 = !DILocation(line: 213, column: 3, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14474, file: !1559, line: 212, column: 29)
!14479 = !DILocation(line: 216, column: 9, scope: !14426)
!14480 = !DILocation(line: 216, column: 21, scope: !14426)
!14481 = !DILocation(line: 216, column: 19, scope: !14426)
!14482 = !DILocation(line: 216, column: 2, scope: !14426)
!14483 = !DILocation(line: 217, column: 1, scope: !14426)
!14484 = distinct !DISubprogram(name: "z_nrf_rtc_timer_set", scope: !1559, file: !1559, line: 335, type: !13997, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14485 = !DILocalVariable(name: "chan", arg: 1, scope: !14484, file: !1559, line: 335, type: !250)
!14486 = !DILocation(line: 335, column: 33, scope: !14484)
!14487 = !DILocalVariable(name: "target_time", arg: 2, scope: !14484, file: !1559, line: 335, type: !312)
!14488 = !DILocation(line: 335, column: 48, scope: !14484)
!14489 = !DILocalVariable(name: "handler", arg: 3, scope: !14484, file: !1559, line: 336, type: !1614)
!14490 = !DILocation(line: 336, column: 39, scope: !14484)
!14491 = !DILocalVariable(name: "user_data", arg: 4, scope: !14484, file: !1559, line: 337, type: !102)
!14492 = !DILocation(line: 337, column: 11, scope: !14484)
!14493 = !DILocation(line: 341, column: 21, scope: !14484)
!14494 = !DILocation(line: 341, column: 27, scope: !14484)
!14495 = !DILocation(line: 341, column: 40, scope: !14484)
!14496 = !DILocation(line: 341, column: 49, scope: !14484)
!14497 = !DILocation(line: 341, column: 9, scope: !14484)
!14498 = !DILocation(line: 341, column: 2, scope: !14484)
!14499 = distinct !DISubprogram(name: "z_nrf_rtc_timer_abort", scope: !1559, file: !1559, line: 344, type: !371, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14500 = !DILocalVariable(name: "chan", arg: 1, scope: !14499, file: !1559, line: 344, type: !250)
!14501 = !DILocation(line: 344, column: 36, scope: !14499)
!14502 = !DILocalVariable(name: "key", scope: !14499, file: !1559, line: 348, type: !717)
!14503 = !DILocation(line: 348, column: 7, scope: !14499)
!14504 = !DILocation(line: 348, column: 30, scope: !14499)
!14505 = !DILocation(line: 348, column: 13, scope: !14499)
!14506 = !DILocation(line: 350, column: 10, scope: !14499)
!14507 = !DILocation(line: 350, column: 2, scope: !14499)
!14508 = !DILocation(line: 350, column: 16, scope: !14499)
!14509 = !DILocation(line: 350, column: 28, scope: !14499)
!14510 = !DILocation(line: 351, column: 14, scope: !14499)
!14511 = !DILocation(line: 351, column: 2, scope: !14499)
!14512 = !DILocation(line: 352, column: 16, scope: !14499)
!14513 = !DILocation(line: 352, column: 2, scope: !14499)
!14514 = !DILocation(line: 353, column: 37, scope: !14499)
!14515 = !DILocation(line: 353, column: 36, scope: !14499)
!14516 = !DILocation(line: 353, column: 8, scope: !14499)
!14517 = !DILocation(line: 355, column: 21, scope: !14499)
!14518 = !DILocation(line: 355, column: 27, scope: !14499)
!14519 = !DILocation(line: 355, column: 2, scope: !14499)
!14520 = !DILocation(line: 356, column: 1, scope: !14499)
!14521 = distinct !DISubprogram(name: "z_nrf_rtc_timer_chan_alloc", scope: !1559, file: !1559, line: 528, type: !14522, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{!250}
!14524 = !DILocalVariable(name: "chan", scope: !14521, file: !1559, line: 530, type: !250)
!14525 = !DILocation(line: 530, column: 10, scope: !14521)
!14526 = !DILocalVariable(name: "prev", scope: !14521, file: !1559, line: 531, type: !1343)
!14527 = !DILocation(line: 531, column: 15, scope: !14521)
!14528 = !DILocation(line: 532, column: 2, scope: !14521)
!14529 = !DILocation(line: 533, column: 10, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14521, file: !1559, line: 532, column: 5)
!14531 = !DILocation(line: 533, column: 42, scope: !14530)
!14532 = !DILocation(line: 533, column: 28, scope: !14530)
!14533 = !DILocation(line: 533, column: 26, scope: !14530)
!14534 = !DILocation(line: 533, column: 8, scope: !14530)
!14535 = !DILocation(line: 534, column: 7, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14530, file: !1559, line: 534, column: 7)
!14537 = !DILocation(line: 534, column: 12, scope: !14536)
!14538 = !DILocation(line: 534, column: 7, scope: !14530)
!14539 = !DILocation(line: 535, column: 4, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14536, file: !1559, line: 534, column: 17)
!14541 = !DILocation(line: 537, column: 35, scope: !14530)
!14542 = !DILocation(line: 537, column: 34, scope: !14530)
!14543 = !DILocation(line: 537, column: 10, scope: !14530)
!14544 = !DILocation(line: 537, column: 8, scope: !14530)
!14545 = !DILocation(line: 538, column: 2, scope: !14530)
!14546 = !DILocation(line: 538, column: 13, scope: !14521)
!14547 = !DILocation(line: 538, column: 20, scope: !14521)
!14548 = !DILocation(line: 538, column: 18, scope: !14521)
!14549 = !DILocation(line: 538, column: 11, scope: !14521)
!14550 = distinct !{!14550, !14528, !14551}
!14551 = !DILocation(line: 538, column: 30, scope: !14521)
!14552 = !DILocation(line: 540, column: 9, scope: !14521)
!14553 = !DILocation(line: 540, column: 2, scope: !14521)
!14554 = !DILocation(line: 541, column: 1, scope: !14521)
!14555 = distinct !DISubprogram(name: "z_nrf_rtc_timer_chan_free", scope: !1559, file: !1559, line: 543, type: !371, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14556 = !DILocalVariable(name: "chan", arg: 1, scope: !14555, file: !1559, line: 543, type: !250)
!14557 = !DILocation(line: 543, column: 40, scope: !14555)
!14558 = !DILocation(line: 547, column: 25, scope: !14555)
!14559 = !DILocation(line: 547, column: 2, scope: !14555)
!14560 = !DILocation(line: 548, column: 1, scope: !14555)
!14561 = distinct !DISubprogram(name: "z_nrf_rtc_timer_trigger_overflow", scope: !1559, file: !1559, line: 551, type: !3089, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14562 = !DILocalVariable(name: "mcu_critical_state", scope: !14561, file: !1559, line: 553, type: !173)
!14563 = !DILocation(line: 553, column: 11, scope: !14561)
!14564 = !DILocalVariable(name: "err", scope: !14561, file: !1559, line: 554, type: !103)
!14565 = !DILocation(line: 554, column: 6, scope: !14561)
!14566 = !DILocation(line: 558, column: 3, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14568, file: !1559, line: 557, column: 50)
!14568 = distinct !DILexicalBlock(scope: !14561, file: !1559, line: 556, column: 6)
!14569 = !DILabel(scope: !14561, name: "bail", file: !1559, line: 580)
!14570 = !DILocation(line: 580, column: 1, scope: !14561)
!14571 = !DILocation(line: 581, column: 18, scope: !14561)
!14572 = !DILocation(line: 581, column: 2, scope: !14561)
!14573 = !DILocation(line: 583, column: 9, scope: !14561)
!14574 = !DILocation(line: 583, column: 2, scope: !14561)
!14575 = !DILocation(line: 584, column: 1, scope: !14561)
!14576 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1559, file: !1559, line: 586, type: !14117, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14577 = !DILocalVariable(name: "ticks", arg: 1, scope: !14576, file: !1559, line: 586, type: !250)
!14578 = !DILocation(line: 586, column: 36, scope: !14576)
!14579 = !DILocalVariable(name: "idle", arg: 2, scope: !14576, file: !1559, line: 586, type: !717)
!14580 = !DILocation(line: 586, column: 48, scope: !14576)
!14581 = !DILocation(line: 588, column: 2, scope: !14576)
!14582 = !DILocalVariable(name: "cyc", scope: !14576, file: !1559, line: 589, type: !173)
!14583 = !DILocation(line: 589, column: 11, scope: !14576)
!14584 = !DILocation(line: 595, column: 11, scope: !14576)
!14585 = !DILocation(line: 595, column: 17, scope: !14576)
!14586 = !DILocation(line: 595, column: 10, scope: !14576)
!14587 = !DILocation(line: 595, column: 39, scope: !14576)
!14588 = !DILocation(line: 595, column: 51, scope: !14576)
!14589 = !DILocation(line: 595, column: 8, scope: !14576)
!14590 = !DILocation(line: 596, column: 10, scope: !14576)
!14591 = !DILocation(line: 596, column: 8, scope: !14576)
!14592 = !DILocation(line: 600, column: 14, scope: !14576)
!14593 = !DILocation(line: 600, column: 23, scope: !14576)
!14594 = !DILocation(line: 600, column: 33, scope: !14576)
!14595 = !DILocation(line: 600, column: 20, scope: !14576)
!14596 = !DILocation(line: 600, column: 11, scope: !14576)
!14597 = !DILocalVariable(name: "unannounced", scope: !14576, file: !1559, line: 602, type: !173)
!14598 = !DILocation(line: 602, column: 11, scope: !14576)
!14599 = !DILocation(line: 602, column: 25, scope: !14576)
!14600 = !DILocation(line: 602, column: 50, scope: !14576)
!14601 = !DILocation(line: 602, column: 48, scope: !14576)
!14602 = !DILocation(line: 609, column: 6, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14576, file: !1559, line: 609, column: 6)
!14604 = !DILocation(line: 609, column: 18, scope: !14603)
!14605 = !DILocation(line: 609, column: 6, scope: !14576)
!14606 = !DILocation(line: 610, column: 9, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14603, file: !1559, line: 609, column: 40)
!14608 = !DILocation(line: 611, column: 2, scope: !14607)
!14609 = !DILocation(line: 616, column: 8, scope: !14576)
!14610 = !DILocation(line: 616, column: 16, scope: !14576)
!14611 = !DILocation(line: 616, column: 14, scope: !14576)
!14612 = !DILocation(line: 616, column: 29, scope: !14576)
!14613 = !DILocation(line: 616, column: 35, scope: !14576)
!14614 = !DILocation(line: 616, column: 33, scope: !14576)
!14615 = !DILocation(line: 616, column: 6, scope: !14576)
!14616 = !DILocation(line: 617, column: 10, scope: !14576)
!14617 = !DILocation(line: 617, column: 23, scope: !14576)
!14618 = !DILocation(line: 617, column: 6, scope: !14576)
!14619 = !DILocation(line: 618, column: 9, scope: !14576)
!14620 = !DILocation(line: 618, column: 15, scope: !14576)
!14621 = !DILocation(line: 618, column: 13, scope: !14576)
!14622 = !DILocation(line: 618, column: 31, scope: !14576)
!14623 = !DILocation(line: 618, column: 29, scope: !14576)
!14624 = !DILocation(line: 618, column: 6, scope: !14576)
!14625 = !DILocation(line: 623, column: 6, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14576, file: !1559, line: 623, column: 6)
!14627 = !DILocation(line: 623, column: 12, scope: !14626)
!14628 = !DILocation(line: 623, column: 10, scope: !14626)
!14629 = !DILocation(line: 623, column: 6, scope: !14576)
!14630 = !DILocation(line: 624, column: 9, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14626, file: !1559, line: 623, column: 24)
!14632 = !DILocation(line: 624, column: 7, scope: !14631)
!14633 = !DILocation(line: 625, column: 2, scope: !14631)
!14634 = !DILocalVariable(name: "target_time", scope: !14576, file: !1559, line: 627, type: !312)
!14635 = !DILocation(line: 627, column: 11, scope: !14576)
!14636 = !DILocation(line: 627, column: 25, scope: !14576)
!14637 = !DILocation(line: 627, column: 31, scope: !14576)
!14638 = !DILocation(line: 627, column: 29, scope: !14576)
!14639 = !DILocation(line: 629, column: 17, scope: !14576)
!14640 = !DILocation(line: 629, column: 2, scope: !14576)
!14641 = !DILocation(line: 630, column: 1, scope: !14576)
!14642 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1559, file: !1559, line: 632, type: !9625, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14643 = !DILocation(line: 638, column: 10, scope: !14642)
!14644 = !DILocation(line: 638, column: 35, scope: !14642)
!14645 = !DILocation(line: 638, column: 33, scope: !14642)
!14646 = !DILocation(line: 638, column: 49, scope: !14642)
!14647 = !DILocation(line: 638, column: 47, scope: !14642)
!14648 = !DILocation(line: 638, column: 9, scope: !14642)
!14649 = !DILocation(line: 638, column: 2, scope: !14642)
!14650 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1559, file: !1559, line: 641, type: !9625, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1468, retainedNodes: !223)
!14651 = !DILocation(line: 643, column: 19, scope: !14650)
!14652 = !DILocation(line: 643, column: 9, scope: !14650)
!14653 = !DILocation(line: 643, column: 2, scope: !14650)
!14654 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !14655, file: !14655, line: 9, type: !14656, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2750, retainedNodes: !223)
!14655 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14656 = !DISubroutineType(types: !14657)
!14657 = !{!103, !14658, !156, !14672}
!14658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14659, size: 32)
!14659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14660)
!14660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1364, line: 60, size: 96, elements: !14661)
!14661 = !{!14662, !14663, !14671}
!14662 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !14660, file: !1364, line: 66, baseType: !22, size: 32)
!14663 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !14660, file: !1364, line: 69, baseType: !14664, size: 32, offset: 32)
!14664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14665, size: 32)
!14665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14666)
!14666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1364, line: 50, size: 64, elements: !14667)
!14667 = !{!14668, !14669, !14670}
!14668 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !14666, file: !1364, line: 52, baseType: !1373, size: 32)
!14669 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !14666, file: !1364, line: 54, baseType: !156, size: 8, offset: 32)
!14670 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !14666, file: !1364, line: 56, baseType: !156, size: 8, offset: 40)
!14671 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !14660, file: !1364, line: 71, baseType: !156, size: 8, offset: 64)
!14672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14664, size: 32)
!14673 = !DILocalVariable(name: "config", arg: 1, scope: !14654, file: !14655, line: 9, type: !14658)
!14674 = !DILocation(line: 9, column: 59, scope: !14654)
!14675 = !DILocalVariable(name: "id", arg: 2, scope: !14654, file: !14655, line: 9, type: !156)
!14676 = !DILocation(line: 9, column: 75, scope: !14654)
!14677 = !DILocalVariable(name: "state", arg: 3, scope: !14654, file: !14655, line: 10, type: !14672)
!14678 = !DILocation(line: 10, column: 34, scope: !14654)
!14679 = !DILocation(line: 12, column: 12, scope: !14654)
!14680 = !DILocation(line: 12, column: 20, scope: !14654)
!14681 = !DILocation(line: 12, column: 3, scope: !14654)
!14682 = !DILocation(line: 12, column: 9, scope: !14654)
!14683 = !DILocation(line: 13, column: 2, scope: !14654)
!14684 = !DILocation(line: 13, column: 10, scope: !14654)
!14685 = !DILocation(line: 13, column: 9, scope: !14654)
!14686 = !DILocation(line: 13, column: 19, scope: !14654)
!14687 = !DILocation(line: 13, column: 27, scope: !14654)
!14688 = !DILocation(line: 13, column: 34, scope: !14654)
!14689 = !DILocation(line: 13, column: 42, scope: !14654)
!14690 = !DILocation(line: 13, column: 16, scope: !14654)
!14691 = !DILocation(line: 14, column: 7, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !14655, line: 14, column: 7)
!14693 = distinct !DILexicalBlock(scope: !14654, file: !14655, line: 13, column: 54)
!14694 = !DILocation(line: 14, column: 15, scope: !14692)
!14695 = !DILocation(line: 14, column: 14, scope: !14692)
!14696 = !DILocation(line: 14, column: 23, scope: !14692)
!14697 = !DILocation(line: 14, column: 13, scope: !14692)
!14698 = !DILocation(line: 14, column: 10, scope: !14692)
!14699 = !DILocation(line: 14, column: 7, scope: !14693)
!14700 = !DILocation(line: 15, column: 4, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14692, file: !14655, line: 14, column: 27)
!14702 = !DILocation(line: 18, column: 5, scope: !14693)
!14703 = !DILocation(line: 18, column: 11, scope: !14693)
!14704 = distinct !{!14704, !14683, !14705}
!14705 = !DILocation(line: 19, column: 2, scope: !14654)
!14706 = !DILocation(line: 21, column: 2, scope: !14654)
!14707 = !DILocation(line: 22, column: 1, scope: !14654)
!14708 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !14709, file: !14709, line: 83, type: !14710, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14709 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_nrf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14710 = !DISubroutineType(types: !14711)
!14711 = !{!103, !1373, !156, !22}
!14712 = !DILocalVariable(name: "pins", arg: 1, scope: !14708, file: !14709, line: 83, type: !1373)
!14713 = !DILocation(line: 83, column: 53, scope: !14708)
!14714 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !14708, file: !14709, line: 83, type: !156)
!14715 = !DILocation(line: 83, column: 67, scope: !14708)
!14716 = !DILocalVariable(name: "reg", arg: 3, scope: !14708, file: !14709, line: 84, type: !22)
!14717 = !DILocation(line: 84, column: 17, scope: !14708)
!14718 = !DILocalVariable(name: "i", scope: !14719, file: !14709, line: 86, type: !156)
!14719 = distinct !DILexicalBlock(scope: !14708, file: !14709, line: 86, column: 2)
!14720 = !DILocation(line: 86, column: 15, scope: !14719)
!14721 = !DILocation(line: 86, column: 7, scope: !14719)
!14722 = !DILocation(line: 86, column: 23, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14719, file: !14709, line: 86, column: 2)
!14724 = !DILocation(line: 86, column: 27, scope: !14723)
!14725 = !DILocation(line: 86, column: 25, scope: !14723)
!14726 = !DILocation(line: 86, column: 2, scope: !14719)
!14727 = !DILocalVariable(name: "drive", scope: !14728, file: !14709, line: 87, type: !12164)
!14728 = distinct !DILexicalBlock(scope: !14723, file: !14709, line: 86, column: 41)
!14729 = !DILocation(line: 87, column: 24, scope: !14728)
!14730 = !DILocation(line: 87, column: 32, scope: !14728)
!14731 = !DILocalVariable(name: "pin", scope: !14728, file: !14709, line: 88, type: !173)
!14732 = !DILocation(line: 88, column: 12, scope: !14728)
!14733 = !DILocation(line: 88, column: 18, scope: !14728)
!14734 = !DILocalVariable(name: "write", scope: !14728, file: !14709, line: 89, type: !173)
!14735 = !DILocation(line: 89, column: 12, scope: !14728)
!14736 = !DILocalVariable(name: "dir", scope: !14728, file: !14709, line: 90, type: !1158)
!14737 = !DILocation(line: 90, column: 22, scope: !14728)
!14738 = !DILocalVariable(name: "input", scope: !14728, file: !14709, line: 91, type: !12183)
!14739 = !DILocation(line: 91, column: 24, scope: !14728)
!14740 = !DILocation(line: 93, column: 7, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14728, file: !14709, line: 93, column: 7)
!14742 = !DILocation(line: 93, column: 11, scope: !14741)
!14743 = !DILocation(line: 93, column: 7, scope: !14728)
!14744 = !DILocation(line: 94, column: 8, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14741, file: !14709, line: 93, column: 36)
!14746 = !DILocation(line: 95, column: 3, scope: !14745)
!14747 = !DILocation(line: 97, column: 11, scope: !14728)
!14748 = !DILocation(line: 97, column: 3, scope: !14728)
!14749 = !DILocation(line: 100, column: 30, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14728, file: !14709, line: 97, column: 33)
!14751 = !DILocation(line: 100, column: 4, scope: !14750)
!14752 = !DILocation(line: 100, column: 28, scope: !14750)
!14753 = !DILocation(line: 101, column: 10, scope: !14750)
!14754 = !DILocation(line: 102, column: 8, scope: !14750)
!14755 = !DILocation(line: 103, column: 10, scope: !14750)
!14756 = !DILocation(line: 104, column: 4, scope: !14750)
!14757 = !DILocation(line: 106, column: 30, scope: !14750)
!14758 = !DILocation(line: 106, column: 4, scope: !14750)
!14759 = !DILocation(line: 106, column: 28, scope: !14750)
!14760 = !DILocation(line: 107, column: 8, scope: !14750)
!14761 = !DILocation(line: 108, column: 10, scope: !14750)
!14762 = !DILocation(line: 109, column: 4, scope: !14750)
!14763 = !DILocation(line: 111, column: 30, scope: !14750)
!14764 = !DILocation(line: 111, column: 4, scope: !14750)
!14765 = !DILocation(line: 111, column: 28, scope: !14750)
!14766 = !DILocation(line: 112, column: 10, scope: !14750)
!14767 = !DILocation(line: 113, column: 8, scope: !14750)
!14768 = !DILocation(line: 114, column: 10, scope: !14750)
!14769 = !DILocation(line: 115, column: 4, scope: !14750)
!14770 = !DILocation(line: 117, column: 30, scope: !14750)
!14771 = !DILocation(line: 117, column: 4, scope: !14750)
!14772 = !DILocation(line: 117, column: 28, scope: !14750)
!14773 = !DILocation(line: 118, column: 8, scope: !14750)
!14774 = !DILocation(line: 119, column: 10, scope: !14750)
!14775 = !DILocation(line: 120, column: 4, scope: !14750)
!14776 = !DILocation(line: 143, column: 30, scope: !14750)
!14777 = !DILocation(line: 143, column: 4, scope: !14750)
!14778 = !DILocation(line: 143, column: 28, scope: !14750)
!14779 = !DILocation(line: 144, column: 8, scope: !14750)
!14780 = !DILocation(line: 145, column: 10, scope: !14750)
!14781 = !DILocation(line: 146, column: 4, scope: !14750)
!14782 = !DILocation(line: 148, column: 31, scope: !14750)
!14783 = !DILocation(line: 148, column: 4, scope: !14750)
!14784 = !DILocation(line: 148, column: 29, scope: !14750)
!14785 = !DILocation(line: 149, column: 8, scope: !14750)
!14786 = !DILocation(line: 150, column: 10, scope: !14750)
!14787 = !DILocation(line: 151, column: 4, scope: !14750)
!14788 = !DILocation(line: 153, column: 31, scope: !14750)
!14789 = !DILocation(line: 153, column: 4, scope: !14750)
!14790 = !DILocation(line: 153, column: 29, scope: !14750)
!14791 = !DILocation(line: 154, column: 8, scope: !14750)
!14792 = !DILocation(line: 155, column: 10, scope: !14750)
!14793 = !DILocation(line: 156, column: 4, scope: !14750)
!14794 = !DILocation(line: 158, column: 30, scope: !14750)
!14795 = !DILocation(line: 158, column: 4, scope: !14750)
!14796 = !DILocation(line: 158, column: 28, scope: !14750)
!14797 = !DILocation(line: 159, column: 8, scope: !14750)
!14798 = !DILocation(line: 160, column: 10, scope: !14750)
!14799 = !DILocation(line: 161, column: 4, scope: !14750)
!14800 = !DILocation(line: 165, column: 30, scope: !14750)
!14801 = !DILocation(line: 165, column: 4, scope: !14750)
!14802 = !DILocation(line: 165, column: 28, scope: !14750)
!14803 = !DILocation(line: 166, column: 8, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14750, file: !14709, line: 166, column: 8)
!14805 = !DILocation(line: 166, column: 14, scope: !14804)
!14806 = !DILocation(line: 166, column: 8, scope: !14750)
!14807 = !DILocation(line: 173, column: 11, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14804, file: !14709, line: 166, column: 33)
!14809 = !DILocation(line: 174, column: 4, scope: !14808)
!14810 = !DILocation(line: 175, column: 8, scope: !14750)
!14811 = !DILocation(line: 176, column: 10, scope: !14750)
!14812 = !DILocation(line: 177, column: 4, scope: !14750)
!14813 = !DILocation(line: 179, column: 30, scope: !14750)
!14814 = !DILocation(line: 179, column: 4, scope: !14750)
!14815 = !DILocation(line: 179, column: 28, scope: !14750)
!14816 = !DILocation(line: 180, column: 8, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14750, file: !14709, line: 180, column: 8)
!14818 = !DILocation(line: 180, column: 14, scope: !14817)
!14819 = !DILocation(line: 180, column: 8, scope: !14750)
!14820 = !DILocation(line: 181, column: 11, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14817, file: !14709, line: 180, column: 33)
!14822 = !DILocation(line: 182, column: 4, scope: !14821)
!14823 = !DILocation(line: 183, column: 8, scope: !14750)
!14824 = !DILocation(line: 184, column: 10, scope: !14750)
!14825 = !DILocation(line: 185, column: 4, scope: !14750)
!14826 = !DILocation(line: 318, column: 4, scope: !14750)
!14827 = !DILocation(line: 322, column: 7, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14728, file: !14709, line: 322, column: 7)
!14829 = !DILocation(line: 322, column: 11, scope: !14828)
!14830 = !DILocation(line: 322, column: 7, scope: !14728)
!14831 = !DILocation(line: 323, column: 8, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14833, file: !14709, line: 323, column: 8)
!14833 = distinct !DILexicalBlock(scope: !14828, file: !14709, line: 322, column: 36)
!14834 = !DILocation(line: 323, column: 14, scope: !14832)
!14835 = !DILocation(line: 323, column: 8, scope: !14833)
!14836 = !DILocation(line: 324, column: 24, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14832, file: !14709, line: 323, column: 27)
!14838 = !DILocation(line: 324, column: 29, scope: !14837)
!14839 = !DILocation(line: 324, column: 5, scope: !14837)
!14840 = !DILocation(line: 325, column: 4, scope: !14837)
!14841 = !DILocation(line: 328, column: 8, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14833, file: !14709, line: 328, column: 8)
!14843 = !DILocation(line: 328, column: 28, scope: !14842)
!14844 = !DILocation(line: 328, column: 8, scope: !14833)
!14845 = !DILocation(line: 329, column: 9, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14842, file: !14709, line: 328, column: 46)
!14847 = !DILocation(line: 330, column: 11, scope: !14846)
!14848 = !DILocation(line: 331, column: 4, scope: !14846)
!14849 = !DILocation(line: 333, column: 17, scope: !14833)
!14850 = !DILocation(line: 333, column: 22, scope: !14833)
!14851 = !DILocation(line: 333, column: 27, scope: !14833)
!14852 = !DILocation(line: 333, column: 34, scope: !14833)
!14853 = !DILocation(line: 334, column: 10, scope: !14833)
!14854 = !DILocation(line: 333, column: 4, scope: !14833)
!14855 = !DILocation(line: 335, column: 3, scope: !14833)
!14856 = !DILocation(line: 336, column: 2, scope: !14728)
!14857 = !DILocation(line: 86, column: 37, scope: !14723)
!14858 = !DILocation(line: 86, column: 2, scope: !14723)
!14859 = distinct !{!14859, !14726, !14860}
!14860 = !DILocation(line: 336, column: 2, scope: !14719)
!14861 = !DILocation(line: 338, column: 2, scope: !14708)
!14862 = !DILocation(line: 339, column: 1, scope: !14708)
!14863 = distinct !DISubprogram(name: "nrf_gpio_pin_write", scope: !1054, file: !1054, line: 790, type: !14864, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14864 = !DISubroutineType(types: !14865)
!14865 = !{null, !173, !173}
!14866 = !DILocalVariable(name: "pin_number", arg: 1, scope: !14863, file: !1054, line: 790, type: !173)
!14867 = !DILocation(line: 790, column: 52, scope: !14863)
!14868 = !DILocalVariable(name: "value", arg: 2, scope: !14863, file: !1054, line: 790, type: !173)
!14869 = !DILocation(line: 790, column: 73, scope: !14863)
!14870 = !DILocation(line: 792, column: 9, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14863, file: !1054, line: 792, column: 9)
!14872 = !DILocation(line: 792, column: 15, scope: !14871)
!14873 = !DILocation(line: 792, column: 9, scope: !14863)
!14874 = !DILocation(line: 794, column: 28, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14871, file: !1054, line: 793, column: 5)
!14876 = !DILocation(line: 794, column: 9, scope: !14875)
!14877 = !DILocation(line: 795, column: 5, scope: !14875)
!14878 = !DILocation(line: 798, column: 26, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14871, file: !1054, line: 797, column: 5)
!14880 = !DILocation(line: 798, column: 9, scope: !14879)
!14881 = !DILocation(line: 800, column: 1, scope: !14863)
!14882 = distinct !DISubprogram(name: "nrf_gpio_cfg", scope: !1054, file: !1054, line: 621, type: !14883, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14883 = !DISubroutineType(types: !14884)
!14884 = !{null, !173, !1158, !12183, !12185, !12164, !1797}
!14885 = !DILocalVariable(name: "pin_number", arg: 1, scope: !14882, file: !1054, line: 622, type: !173)
!14886 = !DILocation(line: 622, column: 26, scope: !14882)
!14887 = !DILocalVariable(name: "dir", arg: 2, scope: !14882, file: !1054, line: 623, type: !1158)
!14888 = !DILocation(line: 623, column: 26, scope: !14882)
!14889 = !DILocalVariable(name: "input", arg: 3, scope: !14882, file: !1054, line: 624, type: !12183)
!14890 = !DILocation(line: 624, column: 26, scope: !14882)
!14891 = !DILocalVariable(name: "pull", arg: 4, scope: !14882, file: !1054, line: 625, type: !12185)
!14892 = !DILocation(line: 625, column: 26, scope: !14882)
!14893 = !DILocalVariable(name: "drive", arg: 5, scope: !14882, file: !1054, line: 626, type: !12164)
!14894 = !DILocation(line: 626, column: 26, scope: !14882)
!14895 = !DILocalVariable(name: "sense", arg: 6, scope: !14882, file: !1054, line: 627, type: !1797)
!14896 = !DILocation(line: 627, column: 26, scope: !14882)
!14897 = !DILocalVariable(name: "reg", scope: !14882, file: !1054, line: 629, type: !2908)
!14898 = !DILocation(line: 629, column: 21, scope: !14882)
!14899 = !DILocation(line: 629, column: 27, scope: !14882)
!14900 = !DILocalVariable(name: "cnf", scope: !14882, file: !1054, line: 635, type: !173)
!14901 = !DILocation(line: 635, column: 14, scope: !14882)
!14902 = !DILocation(line: 637, column: 23, scope: !14882)
!14903 = !DILocation(line: 637, column: 27, scope: !14882)
!14904 = !DILocation(line: 638, column: 23, scope: !14882)
!14905 = !DILocation(line: 638, column: 29, scope: !14882)
!14906 = !DILocation(line: 637, column: 56, scope: !14882)
!14907 = !DILocation(line: 639, column: 23, scope: !14882)
!14908 = !DILocation(line: 639, column: 28, scope: !14882)
!14909 = !DILocation(line: 638, column: 56, scope: !14882)
!14910 = !DILocation(line: 640, column: 23, scope: !14882)
!14911 = !DILocation(line: 640, column: 29, scope: !14882)
!14912 = !DILocation(line: 639, column: 56, scope: !14882)
!14913 = !DILocation(line: 641, column: 23, scope: !14882)
!14914 = !DILocation(line: 641, column: 29, scope: !14882)
!14915 = !DILocation(line: 640, column: 56, scope: !14882)
!14916 = !DILocation(line: 637, column: 9, scope: !14882)
!14917 = !DILocation(line: 643, column: 32, scope: !14882)
!14918 = !DILocation(line: 643, column: 5, scope: !14882)
!14919 = !DILocation(line: 643, column: 10, scope: !14882)
!14920 = !DILocation(line: 643, column: 18, scope: !14882)
!14921 = !DILocation(line: 643, column: 30, scope: !14882)
!14922 = !DILocation(line: 644, column: 1, scope: !14882)
!14923 = distinct !DISubprogram(name: "nrf_gpio_pin_port_decode", scope: !1054, file: !1054, line: 581, type: !14924, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14924 = !DISubroutineType(types: !14925)
!14925 = !{!2908, !922}
!14926 = !DILocalVariable(name: "p_pin", arg: 1, scope: !14923, file: !1054, line: 581, type: !922)
!14927 = !DILocation(line: 581, column: 71, scope: !14923)
!14928 = !DILocation(line: 585, column: 46, scope: !14923)
!14929 = !DILocation(line: 585, column: 13, scope: !14923)
!14930 = !DILocation(line: 585, column: 5, scope: !14923)
!14931 = !DILocation(line: 588, column: 13, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14933, file: !1054, line: 588, column: 13)
!14933 = distinct !DILexicalBlock(scope: !14923, file: !1054, line: 586, column: 5)
!14934 = !DILocation(line: 591, column: 17, scope: !14933)
!14935 = distinct !DISubprogram(name: "nrf_gpio_pin_port_number_extract", scope: !1054, file: !1054, line: 1024, type: !12664, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14936 = !DILocalVariable(name: "p_pin", arg: 1, scope: !14935, file: !1054, line: 1024, type: !922)
!14937 = !DILocation(line: 1024, column: 72, scope: !14935)
!14938 = !DILocalVariable(name: "pin_number", scope: !14935, file: !1054, line: 1026, type: !173)
!14939 = !DILocation(line: 1026, column: 14, scope: !14935)
!14940 = !DILocation(line: 1026, column: 28, scope: !14935)
!14941 = !DILocation(line: 1026, column: 27, scope: !14935)
!14942 = !DILocation(line: 1027, column: 14, scope: !14935)
!14943 = !DILocation(line: 1027, column: 25, scope: !14935)
!14944 = !DILocation(line: 1027, column: 6, scope: !14935)
!14945 = !DILocation(line: 1027, column: 12, scope: !14935)
!14946 = !DILocation(line: 1029, column: 12, scope: !14935)
!14947 = !DILocation(line: 1029, column: 23, scope: !14935)
!14948 = !DILocation(line: 1029, column: 5, scope: !14935)
!14949 = distinct !DISubprogram(name: "nrf_gpio_pin_clear", scope: !1054, file: !1054, line: 772, type: !524, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14950 = !DILocalVariable(name: "pin_number", arg: 1, scope: !14949, file: !1054, line: 772, type: !173)
!14951 = !DILocation(line: 772, column: 52, scope: !14949)
!14952 = !DILocalVariable(name: "reg", scope: !14949, file: !1054, line: 774, type: !2908)
!14953 = !DILocation(line: 774, column: 21, scope: !14949)
!14954 = !DILocation(line: 774, column: 27, scope: !14949)
!14955 = !DILocation(line: 776, column: 29, scope: !14949)
!14956 = !DILocation(line: 776, column: 41, scope: !14949)
!14957 = !DILocation(line: 776, column: 38, scope: !14949)
!14958 = !DILocation(line: 776, column: 5, scope: !14949)
!14959 = !DILocation(line: 777, column: 1, scope: !14949)
!14960 = distinct !DISubprogram(name: "nrf_gpio_pin_set", scope: !1054, file: !1054, line: 764, type: !524, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14961 = !DILocalVariable(name: "pin_number", arg: 1, scope: !14960, file: !1054, line: 764, type: !173)
!14962 = !DILocation(line: 764, column: 50, scope: !14960)
!14963 = !DILocalVariable(name: "reg", scope: !14960, file: !1054, line: 766, type: !2908)
!14964 = !DILocation(line: 766, column: 21, scope: !14960)
!14965 = !DILocation(line: 766, column: 27, scope: !14960)
!14966 = !DILocation(line: 768, column: 27, scope: !14960)
!14967 = !DILocation(line: 768, column: 39, scope: !14960)
!14968 = !DILocation(line: 768, column: 36, scope: !14960)
!14969 = !DILocation(line: 768, column: 5, scope: !14960)
!14970 = !DILocation(line: 769, column: 1, scope: !14960)
!14971 = distinct !DISubprogram(name: "nrf_gpio_port_out_set", scope: !1054, file: !1054, line: 895, type: !14972, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14972 = !DISubroutineType(types: !14973)
!14973 = !{null, !2908, !173}
!14974 = !DILocalVariable(name: "p_reg", arg: 1, scope: !14971, file: !1054, line: 895, type: !2908)
!14975 = !DILocation(line: 895, column: 62, scope: !14971)
!14976 = !DILocalVariable(name: "set_mask", arg: 2, scope: !14971, file: !1054, line: 895, type: !173)
!14977 = !DILocation(line: 895, column: 78, scope: !14971)
!14978 = !DILocation(line: 897, column: 21, scope: !14971)
!14979 = !DILocation(line: 897, column: 5, scope: !14971)
!14980 = !DILocation(line: 897, column: 12, scope: !14971)
!14981 = !DILocation(line: 897, column: 19, scope: !14971)
!14982 = !DILocation(line: 898, column: 1, scope: !14971)
!14983 = distinct !DISubprogram(name: "nrf_gpio_port_out_clear", scope: !1054, file: !1054, line: 901, type: !14972, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2752, retainedNodes: !223)
!14984 = !DILocalVariable(name: "p_reg", arg: 1, scope: !14983, file: !1054, line: 901, type: !2908)
!14985 = !DILocation(line: 901, column: 64, scope: !14983)
!14986 = !DILocalVariable(name: "clr_mask", arg: 2, scope: !14983, file: !1054, line: 901, type: !173)
!14987 = !DILocation(line: 901, column: 80, scope: !14983)
!14988 = !DILocation(line: 903, column: 21, scope: !14983)
!14989 = !DILocation(line: 903, column: 5, scope: !14983)
!14990 = !DILocation(line: 903, column: 12, scope: !14983)
!14991 = !DILocation(line: 903, column: 19, scope: !14983)
!14992 = !DILocation(line: 904, column: 1, scope: !14983)
!14993 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1645, file: !1645, line: 45, type: !253, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!14994 = !DILocation(line: 47, column: 21, scope: !14993)
!14995 = !DILocation(line: 48, column: 1, scope: !14993)
!14996 = distinct !DISubprogram(name: "SystemInit", scope: !1645, file: !1645, line: 50, type: !253, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!14997 = !DILocation(line: 60, column: 9, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14996, file: !1645, line: 60, column: 9)
!14999 = !DILocation(line: 60, column: 9, scope: !14996)
!15000 = !DILocation(line: 62, column: 42, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !14998, file: !1645, line: 61, column: 5)
!15002 = !DILocation(line: 63, column: 42, scope: !15001)
!15003 = !DILocation(line: 64, column: 5, scope: !15001)
!15004 = !DILocation(line: 69, column: 9, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !14996, file: !1645, line: 69, column: 9)
!15006 = !DILocation(line: 69, column: 9, scope: !14996)
!15007 = !DILocation(line: 71, column: 33, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15005, file: !1645, line: 70, column: 5)
!15009 = !DILocation(line: 72, column: 5, scope: !15008)
!15010 = !DILocation(line: 77, column: 9, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !14996, file: !1645, line: 77, column: 9)
!15012 = !DILocation(line: 77, column: 9, scope: !14996)
!15013 = !DILocation(line: 78, column: 13, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !1645, line: 78, column: 13)
!15015 = distinct !DILexicalBlock(scope: !15011, file: !1645, line: 77, column: 27)
!15016 = !DILocation(line: 78, column: 46, scope: !15014)
!15017 = !DILocation(line: 78, column: 13, scope: !15015)
!15018 = !DILocation(line: 79, column: 46, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15014, file: !1645, line: 78, column: 51)
!15020 = !DILocation(line: 80, column: 13, scope: !15019)
!15021 = !DILocation(line: 80, column: 20, scope: !15019)
!15022 = !DILocation(line: 80, column: 53, scope: !15019)
!15023 = distinct !{!15023, !15020, !15024}
!15024 = !DILocation(line: 81, column: 13, scope: !15019)
!15025 = !DILocation(line: 82, column: 9, scope: !15019)
!15026 = !DILocation(line: 83, column: 42, scope: !15015)
!15027 = !DILocation(line: 84, column: 5, scope: !15015)
!15028 = !DILocation(line: 86, column: 5, scope: !14996)
!15029 = !DILocation(line: 87, column: 1, scope: !14996)
!15030 = distinct !DISubprogram(name: "nrf51_errata_26", scope: !15031, file: !15031, line: 5094, type: !3163, scopeLine: 5095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!15031 = !DIFile(filename: "modules/hal/nordic/nrfx/mdk/nrf51_erratas.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15032 = !DILocalVariable(name: "var1", scope: !15030, file: !15031, line: 5108, type: !173)
!15033 = !DILocation(line: 5108, column: 22, scope: !15030)
!15034 = !DILocation(line: 5108, column: 31, scope: !15030)
!15035 = !DILocation(line: 5108, column: 58, scope: !15030)
!15036 = !DILocalVariable(name: "var2", scope: !15030, file: !15031, line: 5109, type: !173)
!15037 = !DILocation(line: 5109, column: 22, scope: !15030)
!15038 = !DILocation(line: 5109, column: 31, scope: !15030)
!15039 = !DILocation(line: 5109, column: 58, scope: !15030)
!15040 = !DILocation(line: 5109, column: 74, scope: !15030)
!15041 = !DILocation(line: 5114, column: 17, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15030, file: !15031, line: 5114, column: 17)
!15043 = !DILocation(line: 5114, column: 22, scope: !15042)
!15044 = !DILocation(line: 5114, column: 17, scope: !15030)
!15045 = !DILocation(line: 5116, column: 24, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15042, file: !15031, line: 5115, column: 13)
!15047 = !DILocation(line: 5116, column: 17, scope: !15046)
!15048 = !DILocation(line: 5119, column: 25, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15046, file: !15031, line: 5117, column: 17)
!15050 = !DILocation(line: 5121, column: 25, scope: !15049)
!15051 = !DILocation(line: 5123, column: 25, scope: !15049)
!15052 = !DILocation(line: 5125, column: 25, scope: !15049)
!15053 = !DILocation(line: 5127, column: 25, scope: !15049)
!15054 = !DILocation(line: 5129, column: 25, scope: !15049)
!15055 = !DILocation(line: 5131, column: 25, scope: !15049)
!15056 = !DILocation(line: 5133, column: 25, scope: !15049)
!15057 = !DILocation(line: 5135, column: 25, scope: !15049)
!15058 = !DILocation(line: 5137, column: 25, scope: !15049)
!15059 = !DILocation(line: 5139, column: 25, scope: !15049)
!15060 = !DILocation(line: 5141, column: 25, scope: !15049)
!15061 = !DILocation(line: 5143, column: 25, scope: !15049)
!15062 = !DILocation(line: 5285, column: 9, scope: !15030)
!15063 = !DILocation(line: 5287, column: 1, scope: !15030)
!15064 = distinct !DISubprogram(name: "nrf51_errata_59", scope: !15031, file: !15031, line: 11166, type: !3163, scopeLine: 11167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!15065 = !DILocalVariable(name: "var1", scope: !15064, file: !15031, line: 11180, type: !173)
!15066 = !DILocation(line: 11180, column: 22, scope: !15064)
!15067 = !DILocation(line: 11180, column: 31, scope: !15064)
!15068 = !DILocation(line: 11180, column: 58, scope: !15064)
!15069 = !DILocalVariable(name: "var2", scope: !15064, file: !15031, line: 11181, type: !173)
!15070 = !DILocation(line: 11181, column: 22, scope: !15064)
!15071 = !DILocation(line: 11181, column: 31, scope: !15064)
!15072 = !DILocation(line: 11181, column: 58, scope: !15064)
!15073 = !DILocation(line: 11181, column: 74, scope: !15064)
!15074 = !DILocation(line: 11186, column: 17, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15064, file: !15031, line: 11186, column: 17)
!15076 = !DILocation(line: 11186, column: 22, scope: !15075)
!15077 = !DILocation(line: 11186, column: 17, scope: !15064)
!15078 = !DILocation(line: 11188, column: 24, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15075, file: !15031, line: 11187, column: 13)
!15080 = !DILocation(line: 11188, column: 17, scope: !15079)
!15081 = !DILocation(line: 11191, column: 25, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15079, file: !15031, line: 11189, column: 17)
!15083 = !DILocation(line: 11193, column: 25, scope: !15082)
!15084 = !DILocation(line: 11195, column: 25, scope: !15082)
!15085 = !DILocation(line: 11197, column: 25, scope: !15082)
!15086 = !DILocation(line: 11199, column: 25, scope: !15082)
!15087 = !DILocation(line: 11201, column: 25, scope: !15082)
!15088 = !DILocation(line: 11203, column: 25, scope: !15082)
!15089 = !DILocation(line: 11205, column: 25, scope: !15082)
!15090 = !DILocation(line: 11207, column: 25, scope: !15082)
!15091 = !DILocation(line: 11209, column: 25, scope: !15082)
!15092 = !DILocation(line: 11211, column: 25, scope: !15082)
!15093 = !DILocation(line: 11213, column: 25, scope: !15082)
!15094 = !DILocation(line: 11215, column: 25, scope: !15082)
!15095 = !DILocation(line: 11357, column: 9, scope: !15064)
!15096 = !DILocation(line: 11359, column: 1, scope: !15064)
!15097 = distinct !DISubprogram(name: "nrf51_errata_76", scope: !15031, file: !15031, line: 14804, type: !3163, scopeLine: 14805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!15098 = !DILocalVariable(name: "var1", scope: !15097, file: !15031, line: 14818, type: !173)
!15099 = !DILocation(line: 14818, column: 22, scope: !15097)
!15100 = !DILocation(line: 14818, column: 31, scope: !15097)
!15101 = !DILocation(line: 14818, column: 58, scope: !15097)
!15102 = !DILocalVariable(name: "var2", scope: !15097, file: !15031, line: 14819, type: !173)
!15103 = !DILocation(line: 14819, column: 22, scope: !15097)
!15104 = !DILocation(line: 14819, column: 31, scope: !15097)
!15105 = !DILocation(line: 14819, column: 58, scope: !15097)
!15106 = !DILocation(line: 14819, column: 74, scope: !15097)
!15107 = !DILocation(line: 14824, column: 17, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15097, file: !15031, line: 14824, column: 17)
!15109 = !DILocation(line: 14824, column: 22, scope: !15108)
!15110 = !DILocation(line: 14824, column: 17, scope: !15097)
!15111 = !DILocation(line: 14826, column: 24, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15108, file: !15031, line: 14825, column: 13)
!15113 = !DILocation(line: 14826, column: 17, scope: !15112)
!15114 = !DILocation(line: 14829, column: 25, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15112, file: !15031, line: 14827, column: 17)
!15116 = !DILocation(line: 14831, column: 25, scope: !15115)
!15117 = !DILocation(line: 14833, column: 25, scope: !15115)
!15118 = !DILocation(line: 14835, column: 25, scope: !15115)
!15119 = !DILocation(line: 14837, column: 25, scope: !15115)
!15120 = !DILocation(line: 14839, column: 25, scope: !15115)
!15121 = !DILocation(line: 14841, column: 25, scope: !15115)
!15122 = !DILocation(line: 14843, column: 25, scope: !15115)
!15123 = !DILocation(line: 14845, column: 25, scope: !15115)
!15124 = !DILocation(line: 14847, column: 25, scope: !15115)
!15125 = !DILocation(line: 14849, column: 25, scope: !15115)
!15126 = !DILocation(line: 14851, column: 25, scope: !15115)
!15127 = !DILocation(line: 14853, column: 25, scope: !15115)
!15128 = !DILocation(line: 14995, column: 9, scope: !15097)
!15129 = !DILocation(line: 14997, column: 1, scope: !15097)
!15130 = distinct !DISubprogram(name: "nrfx_isr", scope: !15131, file: !15131, line: 11, type: !17, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2922, retainedNodes: !223)
!15131 = !DIFile(filename: "zephyr/modules/hal_nordic/nrfx/nrfx_glue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15132 = !DILocalVariable(name: "irq_handler", arg: 1, scope: !15130, file: !15131, line: 11, type: !13)
!15133 = !DILocation(line: 11, column: 27, scope: !15130)
!15134 = !DILocation(line: 13, column: 23, scope: !15130)
!15135 = !DILocation(line: 13, column: 3, scope: !15130)
!15136 = !DILocation(line: 13, column: 2, scope: !15130)
!15137 = !DILocation(line: 14, column: 1, scope: !15130)
!15138 = distinct !DISubprogram(name: "nrfx_busy_wait", scope: !15131, file: !15131, line: 16, type: !524, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2922, retainedNodes: !223)
!15139 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15138, file: !15131, line: 16, type: !173)
!15140 = !DILocation(line: 16, column: 30, scope: !15138)
!15141 = !DILocation(line: 19, column: 15, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15143, file: !15131, line: 18, column: 43)
!15143 = distinct !DILexicalBlock(scope: !15138, file: !15131, line: 18, column: 6)
!15144 = !DILocation(line: 19, column: 3, scope: !15142)
!15145 = !DILocation(line: 23, column: 1, scope: !15138)
!15146 = distinct !DISubprogram(name: "k_busy_wait", scope: !3240, file: !3240, line: 123, type: !524, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2922, retainedNodes: !223)
!15147 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15146, file: !3240, line: 123, type: !173)
!15148 = !DILocation(line: 123, column: 41, scope: !15146)
!15149 = !DILocation(line: 132, column: 2, scope: !15146)
!15150 = !DILocation(line: 132, column: 2, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15146, file: !3240, line: 132, column: 2)
!15152 = !{i64 2150329975}
!15153 = !DILocation(line: 133, column: 21, scope: !15146)
!15154 = !DILocation(line: 133, column: 2, scope: !15146)
!15155 = !DILocation(line: 134, column: 1, scope: !15146)
!15156 = distinct !DISubprogram(name: "nrfx_error_string_get", scope: !15131, file: !15131, line: 25, type: !15157, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2922, retainedNodes: !223)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!256, !11444}
!15159 = !DILocalVariable(name: "code", arg: 1, scope: !15156, file: !15131, line: 25, type: !11444)
!15160 = !DILocation(line: 25, column: 46, scope: !15156)
!15161 = !DILocation(line: 28, column: 10, scope: !15156)
!15162 = !DILocation(line: 28, column: 2, scope: !15156)
!15163 = !DILocation(line: 29, column: 3, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15156, file: !15131, line: 28, column: 16)
!15165 = !DILocation(line: 30, column: 3, scope: !15164)
!15166 = !DILocation(line: 31, column: 3, scope: !15164)
!15167 = !DILocation(line: 32, column: 3, scope: !15164)
!15168 = !DILocation(line: 33, column: 3, scope: !15164)
!15169 = !DILocation(line: 34, column: 3, scope: !15164)
!15170 = !DILocation(line: 35, column: 3, scope: !15164)
!15171 = !DILocation(line: 36, column: 3, scope: !15164)
!15172 = !DILocation(line: 37, column: 3, scope: !15164)
!15173 = !DILocation(line: 38, column: 3, scope: !15164)
!15174 = !DILocation(line: 39, column: 3, scope: !15164)
!15175 = !DILocation(line: 40, column: 3, scope: !15164)
!15176 = !DILocation(line: 41, column: 3, scope: !15164)
!15177 = !DILocation(line: 42, column: 3, scope: !15164)
!15178 = !DILocation(line: 43, column: 3, scope: !15164)
!15179 = !DILocation(line: 44, column: 3, scope: !15164)
!15180 = !DILocation(line: 45, column: 12, scope: !15164)
!15181 = !DILocation(line: 47, column: 1, scope: !15156)
!15182 = distinct !DISubprogram(name: "nrfx_flag32_is_allocated", scope: !15183, file: !15183, line: 53, type: !15184, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2927, retainedNodes: !223)
!15183 = !DIFile(filename: "modules/hal/nordic/nrfx/helpers/nrfx_flag32_allocator.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15184 = !DISubroutineType(types: !15185)
!15185 = !{!717, !343, !156}
!15186 = !DILocalVariable(name: "mask", arg: 1, scope: !15182, file: !15183, line: 53, type: !343)
!15187 = !DILocation(line: 53, column: 45, scope: !15182)
!15188 = !DILocalVariable(name: "bitpos", arg: 2, scope: !15182, file: !15183, line: 53, type: !156)
!15189 = !DILocation(line: 53, column: 59, scope: !15182)
!15190 = !DILocation(line: 55, column: 13, scope: !15182)
!15191 = !DILocation(line: 55, column: 20, scope: !15182)
!15192 = !DILocation(line: 55, column: 18, scope: !15182)
!15193 = !DILocation(line: 55, column: 12, scope: !15182)
!15194 = !DILocation(line: 55, column: 5, scope: !15182)
!15195 = distinct !DISubprogram(name: "nrfx_flag32_alloc", scope: !15183, file: !15183, line: 58, type: !15196, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2927, retainedNodes: !223)
!15196 = !DISubroutineType(types: !15197)
!15197 = !{!11444, !1342, !718}
!15198 = !DILocalVariable(name: "p_mask", arg: 1, scope: !15195, file: !15183, line: 58, type: !1342)
!15199 = !DILocation(line: 58, column: 46, scope: !15195)
!15200 = !DILocalVariable(name: "p_flag", arg: 2, scope: !15195, file: !15183, line: 58, type: !718)
!15201 = !DILocation(line: 58, column: 63, scope: !15195)
!15202 = !DILocalVariable(name: "idx", scope: !15195, file: !15183, line: 60, type: !166)
!15203 = !DILocation(line: 60, column: 12, scope: !15195)
!15204 = !DILocalVariable(name: "new_mask", scope: !15195, file: !15183, line: 61, type: !173)
!15205 = !DILocation(line: 61, column: 14, scope: !15195)
!15206 = !DILocalVariable(name: "prev_mask", scope: !15195, file: !15183, line: 61, type: !173)
!15207 = !DILocation(line: 61, column: 24, scope: !15195)
!15208 = !DILocation(line: 63, column: 5, scope: !15195)
!15209 = !DILocation(line: 64, column: 22, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15195, file: !15183, line: 63, column: 8)
!15211 = !DILocation(line: 64, column: 21, scope: !15210)
!15212 = !DILocation(line: 64, column: 19, scope: !15210)
!15213 = !DILocation(line: 65, column: 20, scope: !15210)
!15214 = !DILocation(line: 65, column: 18, scope: !15210)
!15215 = !DILocation(line: 65, column: 15, scope: !15210)
!15216 = !DILocation(line: 65, column: 13, scope: !15210)
!15217 = !DILocation(line: 66, column: 13, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15210, file: !15183, line: 66, column: 13)
!15219 = !DILocation(line: 66, column: 17, scope: !15218)
!15220 = !DILocation(line: 66, column: 13, scope: !15210)
!15221 = !DILocation(line: 67, column: 13, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15218, file: !15183, line: 66, column: 22)
!15223 = !DILocation(line: 70, column: 20, scope: !15210)
!15224 = !DILocation(line: 70, column: 33, scope: !15210)
!15225 = !DILocation(line: 70, column: 32, scope: !15210)
!15226 = !DILocation(line: 70, column: 30, scope: !15210)
!15227 = !DILocation(line: 70, column: 18, scope: !15210)
!15228 = !DILocation(line: 71, column: 5, scope: !15210)
!15229 = !DILocation(line: 71, column: 15, scope: !15195)
!15230 = !DILocation(line: 71, column: 14, scope: !15195)
!15231 = distinct !{!15231, !15208, !15232}
!15232 = !DILocation(line: 71, column: 59, scope: !15195)
!15233 = !DILocation(line: 73, column: 15, scope: !15195)
!15234 = !DILocation(line: 73, column: 6, scope: !15195)
!15235 = !DILocation(line: 73, column: 13, scope: !15195)
!15236 = !DILocation(line: 75, column: 5, scope: !15195)
!15237 = !DILocation(line: 76, column: 1, scope: !15195)
!15238 = distinct !DISubprogram(name: "atomic_cas", scope: !7160, file: !7160, line: 24, type: !13149, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2927, retainedNodes: !223)
!15239 = !DILocalVariable(name: "target", arg: 1, scope: !15238, file: !7160, line: 24, type: !1342)
!15240 = !DILocation(line: 24, column: 42, scope: !15238)
!15241 = !DILocalVariable(name: "old_value", arg: 2, scope: !15238, file: !7160, line: 24, type: !1343)
!15242 = !DILocation(line: 24, column: 63, scope: !15238)
!15243 = !DILocalVariable(name: "new_value", arg: 3, scope: !15238, file: !7160, line: 24, type: !1343)
!15244 = !DILocation(line: 24, column: 87, scope: !15238)
!15245 = !DILocation(line: 34, column: 2, scope: !15238)
!15246 = !DILocation(line: 34, column: 2, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15238, file: !7160, line: 34, column: 2)
!15248 = !{i64 2149128313}
!15249 = !DILocation(line: 35, column: 27, scope: !15238)
!15250 = !DILocation(line: 35, column: 35, scope: !15238)
!15251 = !DILocation(line: 35, column: 46, scope: !15238)
!15252 = !DILocation(line: 35, column: 9, scope: !15238)
!15253 = !DILocation(line: 35, column: 2, scope: !15238)
!15254 = distinct !DISubprogram(name: "nrfx_flag32_free", scope: !15183, file: !15183, line: 78, type: !15255, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2927, retainedNodes: !223)
!15255 = !DISubroutineType(types: !15256)
!15256 = !{!11444, !1342, !156}
!15257 = !DILocalVariable(name: "p_mask", arg: 1, scope: !15254, file: !15183, line: 78, type: !1342)
!15258 = !DILocation(line: 78, column: 45, scope: !15254)
!15259 = !DILocalVariable(name: "flag", arg: 2, scope: !15254, file: !15183, line: 78, type: !156)
!15260 = !DILocation(line: 78, column: 61, scope: !15254)
!15261 = !DILocalVariable(name: "new_mask", scope: !15254, file: !15183, line: 80, type: !173)
!15262 = !DILocation(line: 80, column: 14, scope: !15254)
!15263 = !DILocalVariable(name: "prev_mask", scope: !15254, file: !15183, line: 80, type: !173)
!15264 = !DILocation(line: 80, column: 24, scope: !15254)
!15265 = !DILocation(line: 82, column: 10, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15254, file: !15183, line: 82, column: 9)
!15267 = !DILocation(line: 82, column: 28, scope: !15266)
!15268 = !DILocation(line: 82, column: 27, scope: !15266)
!15269 = !DILocation(line: 82, column: 25, scope: !15266)
!15270 = !DILocation(line: 82, column: 9, scope: !15254)
!15271 = !DILocation(line: 84, column: 9, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15266, file: !15183, line: 83, column: 5)
!15273 = !DILocation(line: 87, column: 5, scope: !15254)
!15274 = !DILocation(line: 88, column: 22, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15254, file: !15183, line: 87, column: 8)
!15276 = !DILocation(line: 88, column: 21, scope: !15275)
!15277 = !DILocation(line: 88, column: 19, scope: !15275)
!15278 = !DILocation(line: 89, column: 20, scope: !15275)
!15279 = !DILocation(line: 89, column: 32, scope: !15275)
!15280 = !DILocation(line: 89, column: 30, scope: !15275)
!15281 = !DILocation(line: 89, column: 18, scope: !15275)
!15282 = !DILocation(line: 90, column: 5, scope: !15275)
!15283 = !DILocation(line: 90, column: 15, scope: !15254)
!15284 = !DILocation(line: 90, column: 14, scope: !15254)
!15285 = distinct !{!15285, !15273, !15286}
!15286 = !DILocation(line: 90, column: 59, scope: !15254)
!15287 = !DILocation(line: 92, column: 5, scope: !15254)
!15288 = !DILocation(line: 93, column: 1, scope: !15254)
!15289 = distinct !DISubprogram(name: "nrfx_clock_init", scope: !1687, file: !1687, line: 275, type: !15290, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15290 = !DISubroutineType(types: !15291)
!15291 = !{!11444, !1692}
!15292 = !DILocalVariable(name: "event_handler", arg: 1, scope: !15289, file: !1687, line: 275, type: !1692)
!15293 = !DILocation(line: 275, column: 55, scope: !15289)
!15294 = !DILocalVariable(name: "err_code", scope: !15289, file: !1687, line: 279, type: !11444)
!15295 = !DILocation(line: 279, column: 16, scope: !15289)
!15296 = !DILocation(line: 280, column: 20, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15289, file: !1687, line: 280, column: 9)
!15298 = !DILocation(line: 280, column: 9, scope: !15289)
!15299 = !DILocation(line: 282, column: 18, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15297, file: !1687, line: 281, column: 5)
!15301 = !DILocation(line: 283, column: 5, scope: !15300)
!15302 = !DILocation(line: 289, column: 36, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15297, file: !1687, line: 285, column: 5)
!15304 = !DILocation(line: 289, column: 34, scope: !15303)
!15305 = !DILocation(line: 290, column: 39, scope: !15303)
!15306 = !DILocation(line: 296, column: 5, scope: !15289)
!15307 = !DILocation(line: 296, column: 5, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15309, file: !1687, line: 296, column: 5)
!15309 = distinct !DILexicalBlock(scope: !15310, file: !1687, line: 296, column: 5)
!15310 = distinct !DILexicalBlock(scope: !15289, file: !1687, line: 296, column: 5)
!15311 = !DILocation(line: 297, column: 12, scope: !15289)
!15312 = !DILocation(line: 297, column: 5, scope: !15289)
!15313 = distinct !DISubprogram(name: "nrfx_clock_enable", scope: !1687, file: !1687, line: 300, type: !253, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15314 = !DILocation(line: 303, column: 5, scope: !15313)
!15315 = !DILocation(line: 304, column: 37, scope: !15313)
!15316 = !DILocation(line: 304, column: 5, scope: !15313)
!15317 = !DILocation(line: 315, column: 5, scope: !15313)
!15318 = !DILocation(line: 315, column: 5, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15320, file: !1687, line: 315, column: 5)
!15320 = distinct !DILexicalBlock(scope: !15321, file: !1687, line: 315, column: 5)
!15321 = distinct !DILexicalBlock(scope: !15313, file: !1687, line: 315, column: 5)
!15322 = !DILocation(line: 316, column: 1, scope: !15313)
!15323 = distinct !DISubprogram(name: "nrfx_power_clock_irq_init", scope: !15324, file: !15324, line: 44, type: !253, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15324 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/include/nrfx_power_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15325 = !DILocalVariable(name: "priority", scope: !15323, file: !15324, line: 46, type: !156)
!15326 = !DILocation(line: 46, column: 13, scope: !15323)
!15327 = !DILocation(line: 55, column: 14, scope: !15323)
!15328 = !DILocation(line: 60, column: 10, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15323, file: !15324, line: 60, column: 9)
!15330 = !DILocation(line: 60, column: 9, scope: !15323)
!15331 = !DILocation(line: 63, column: 9, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15329, file: !15324, line: 61, column: 5)
!15333 = !DILocation(line: 64, column: 5, scope: !15332)
!15334 = !DILocation(line: 65, column: 1, scope: !15323)
!15335 = distinct !DISubprogram(name: "clock_initial_lfclksrc_get", scope: !1687, file: !1687, line: 238, type: !15336, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15336 = !DISubroutineType(types: !15337)
!15337 = !{!713}
!15338 = !DILocation(line: 241, column: 5, scope: !15335)
!15339 = distinct !DISubprogram(name: "nrf_clock_lf_src_set", scope: !562, file: !562, line: 849, type: !15340, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15340 = !DISubroutineType(types: !15341)
!15341 = !{null, !1652, !713}
!15342 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15339, file: !562, line: 849, type: !1652)
!15343 = !DILocation(line: 849, column: 62, scope: !15339)
!15344 = !DILocalVariable(name: "source", arg: 2, scope: !15339, file: !562, line: 849, type: !713)
!15345 = !DILocation(line: 849, column: 87, scope: !15339)
!15346 = !DILocation(line: 851, column: 34, scope: !15339)
!15347 = !DILocation(line: 851, column: 5, scope: !15339)
!15348 = !DILocation(line: 851, column: 12, scope: !15339)
!15349 = !DILocation(line: 851, column: 21, scope: !15339)
!15350 = !DILocation(line: 852, column: 1, scope: !15339)
!15351 = distinct !DISubprogram(name: "nrfx_get_irq_number", scope: !1715, file: !1715, line: 375, type: !15352, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15352 = !DISubroutineType(types: !15353)
!15353 = !{!1685, !13}
!15354 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15351, file: !1715, line: 375, type: !13)
!15355 = !DILocation(line: 375, column: 62, scope: !15351)
!15356 = !DILocation(line: 377, column: 23, scope: !15351)
!15357 = !DILocation(line: 377, column: 12, scope: !15351)
!15358 = !DILocation(line: 377, column: 5, scope: !15351)
!15359 = distinct !DISubprogram(name: "nrfx_clock_disable", scope: !1687, file: !1687, line: 318, type: !253, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15360 = !DILocation(line: 326, column: 9, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15359, file: !1687, line: 325, column: 5)
!15362 = !DILocation(line: 328, column: 5, scope: !15359)
!15363 = !DILocation(line: 340, column: 5, scope: !15359)
!15364 = !DILocation(line: 340, column: 5, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15366, file: !1687, line: 340, column: 5)
!15366 = distinct !DILexicalBlock(scope: !15367, file: !1687, line: 340, column: 5)
!15367 = distinct !DILexicalBlock(scope: !15359, file: !1687, line: 340, column: 5)
!15368 = !DILocation(line: 341, column: 1, scope: !15359)
!15369 = distinct !DISubprogram(name: "nrf_clock_int_disable", scope: !562, file: !562, line: 710, type: !15370, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15370 = !DISubroutineType(types: !15371)
!15371 = !{null, !1652, !173}
!15372 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15369, file: !562, line: 710, type: !1652)
!15373 = !DILocation(line: 710, column: 63, scope: !15369)
!15374 = !DILocalVariable(name: "mask", arg: 2, scope: !15369, file: !562, line: 710, type: !173)
!15375 = !DILocation(line: 710, column: 79, scope: !15369)
!15376 = !DILocation(line: 712, column: 23, scope: !15369)
!15377 = !DILocation(line: 712, column: 5, scope: !15369)
!15378 = !DILocation(line: 712, column: 12, scope: !15369)
!15379 = !DILocation(line: 712, column: 21, scope: !15369)
!15380 = !DILocation(line: 713, column: 1, scope: !15369)
!15381 = distinct !DISubprogram(name: "nrfx_clock_uninit", scope: !1687, file: !1687, line: 343, type: !253, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15382 = !DILocation(line: 346, column: 5, scope: !15381)
!15383 = !DILocation(line: 347, column: 5, scope: !15381)
!15384 = !DILocation(line: 354, column: 35, scope: !15381)
!15385 = !DILocation(line: 355, column: 5, scope: !15381)
!15386 = !DILocation(line: 355, column: 5, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !15388, file: !1687, line: 355, column: 5)
!15388 = distinct !DILexicalBlock(scope: !15389, file: !1687, line: 355, column: 5)
!15389 = distinct !DILexicalBlock(scope: !15381, file: !1687, line: 355, column: 5)
!15390 = !DILocation(line: 356, column: 1, scope: !15381)
!15391 = distinct !DISubprogram(name: "clock_stop", scope: !1687, file: !1687, line: 187, type: !15392, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15392 = !DISubroutineType(types: !15393)
!15393 = !{null, !885}
!15394 = !DILocalVariable(name: "domain", arg: 1, scope: !15391, file: !1687, line: 187, type: !885)
!15395 = !DILocation(line: 187, column: 43, scope: !15391)
!15396 = !DILocation(line: 189, column: 13, scope: !15391)
!15397 = !DILocation(line: 189, column: 5, scope: !15391)
!15398 = !DILocation(line: 192, column: 13, scope: !15399)
!15399 = distinct !DILexicalBlock(scope: !15391, file: !1687, line: 190, column: 5)
!15400 = !DILocation(line: 193, column: 13, scope: !15399)
!15401 = !DILocation(line: 194, column: 13, scope: !15399)
!15402 = !DILocation(line: 195, column: 13, scope: !15399)
!15403 = !DILocation(line: 197, column: 13, scope: !15399)
!15404 = !DILocation(line: 198, column: 13, scope: !15399)
!15405 = !DILocation(line: 199, column: 13, scope: !15399)
!15406 = !DILocation(line: 200, column: 13, scope: !15399)
!15407 = !DILocation(line: 217, column: 13, scope: !15399)
!15408 = !DILocalVariable(name: "stopped", scope: !15391, file: !1687, line: 220, type: !717)
!15409 = !DILocation(line: 220, column: 10, scope: !15391)
!15410 = !DILocalVariable(name: "clk_src", scope: !15391, file: !1687, line: 221, type: !715)
!15411 = !DILocation(line: 221, column: 23, scope: !15391)
!15412 = !DILocalVariable(name: "p_clk_src", scope: !15391, file: !1687, line: 222, type: !716)
!15413 = !DILocation(line: 222, column: 24, scope: !15391)
!15414 = !DILocation(line: 222, column: 37, scope: !15391)
!15415 = !DILocation(line: 222, column: 44, scope: !15391)
!15416 = !DILocation(line: 222, column: 36, scope: !15391)
!15417 = !DILocation(line: 223, column: 5, scope: !15391)
!15418 = !DILocation(line: 223, column: 5, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15391, file: !1687, line: 223, column: 5)
!15420 = !DILocalVariable(name: "remaining_attempts", scope: !15419, file: !1687, line: 223, type: !173)
!15421 = !DILocation(line: 223, column: 5, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15423, file: !1687, line: 223, column: 5)
!15423 = distinct !DILexicalBlock(scope: !15419, file: !1687, line: 223, column: 5)
!15424 = !DILocation(line: 223, column: 5, scope: !15423)
!15425 = !DILocation(line: 223, column: 5, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15422, file: !1687, line: 223, column: 5)
!15427 = distinct !{!15427, !15418, !15418}
!15428 = !DILocation(line: 225, column: 10, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15391, file: !1687, line: 225, column: 9)
!15430 = !DILocation(line: 225, column: 9, scope: !15391)
!15431 = !DILocation(line: 227, column: 9, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15429, file: !1687, line: 226, column: 5)
!15433 = !DILocation(line: 227, column: 9, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15435, file: !1687, line: 227, column: 9)
!15435 = distinct !DILexicalBlock(scope: !15436, file: !1687, line: 227, column: 9)
!15436 = distinct !DILexicalBlock(scope: !15432, file: !1687, line: 227, column: 9)
!15437 = !DILocation(line: 228, column: 5, scope: !15432)
!15438 = !DILocation(line: 236, column: 1, scope: !15391)
!15439 = distinct !DISubprogram(name: "nrf_clock_event_clear", scope: !562, file: !562, line: 737, type: !15440, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15440 = !DISubroutineType(types: !15441)
!15441 = !{null, !1652, !11857}
!15442 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15439, file: !562, line: 737, type: !1652)
!15443 = !DILocation(line: 737, column: 63, scope: !15439)
!15444 = !DILocalVariable(name: "event", arg: 2, scope: !15439, file: !562, line: 737, type: !11857)
!15445 = !DILocation(line: 737, column: 88, scope: !15439)
!15446 = !DILocation(line: 739, column: 40, scope: !15439)
!15447 = !DILocation(line: 739, column: 29, scope: !15439)
!15448 = !DILocation(line: 739, column: 58, scope: !15439)
!15449 = !DILocation(line: 739, column: 46, scope: !15439)
!15450 = !DILocation(line: 739, column: 5, scope: !15439)
!15451 = !DILocation(line: 739, column: 66, scope: !15439)
!15452 = !DILocation(line: 740, column: 35, scope: !15439)
!15453 = !DILocation(line: 740, column: 24, scope: !15439)
!15454 = !DILocation(line: 740, column: 53, scope: !15439)
!15455 = !DILocation(line: 740, column: 41, scope: !15439)
!15456 = !DILocation(line: 740, column: 5, scope: !15439)
!15457 = !DILocation(line: 741, column: 1, scope: !15439)
!15458 = distinct !DISubprogram(name: "nrf_clock_task_trigger", scope: !562, file: !562, line: 726, type: !15459, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15459 = !DISubroutineType(types: !15460)
!15460 = !{null, !1652, !11917}
!15461 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15458, file: !562, line: 726, type: !1652)
!15462 = !DILocation(line: 726, column: 64, scope: !15458)
!15463 = !DILocalVariable(name: "task", arg: 2, scope: !15458, file: !562, line: 726, type: !11917)
!15464 = !DILocation(line: 726, column: 88, scope: !15458)
!15465 = !DILocation(line: 728, column: 40, scope: !15458)
!15466 = !DILocation(line: 728, column: 29, scope: !15458)
!15467 = !DILocation(line: 728, column: 58, scope: !15458)
!15468 = !DILocation(line: 728, column: 46, scope: !15458)
!15469 = !DILocation(line: 728, column: 5, scope: !15458)
!15470 = !DILocation(line: 728, column: 65, scope: !15458)
!15471 = !DILocation(line: 729, column: 1, scope: !15458)
!15472 = distinct !DISubprogram(name: "nrfx_clock_is_running", scope: !656, file: !656, line: 326, type: !11291, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15473 = !DILocalVariable(name: "domain", arg: 1, scope: !15472, file: !656, line: 326, type: !885)
!15474 = !DILocation(line: 326, column: 66, scope: !15472)
!15475 = !DILocalVariable(name: "p_clk_src", arg: 2, scope: !15472, file: !656, line: 326, type: !102)
!15476 = !DILocation(line: 326, column: 81, scope: !15472)
!15477 = !DILocation(line: 328, column: 44, scope: !15472)
!15478 = !DILocation(line: 328, column: 52, scope: !15472)
!15479 = !DILocation(line: 328, column: 12, scope: !15472)
!15480 = !DILocation(line: 328, column: 5, scope: !15472)
!15481 = distinct !DISubprogram(name: "nrf_clock_is_running", scope: !562, file: !562, line: 786, type: !15482, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15482 = !DISubroutineType(types: !15483)
!15483 = !{!717, !15484, !885, !102}
!15484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15485, size: 32)
!15485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1653)
!15486 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15481, file: !562, line: 786, type: !15484)
!15487 = !DILocation(line: 786, column: 68, scope: !15481)
!15488 = !DILocalVariable(name: "domain", arg: 2, scope: !15481, file: !562, line: 787, type: !885)
!15489 = !DILocation(line: 787, column: 68, scope: !15481)
!15490 = !DILocalVariable(name: "p_clk_src", arg: 3, scope: !15481, file: !562, line: 788, type: !102)
!15491 = !DILocation(line: 788, column: 68, scope: !15481)
!15492 = !DILocation(line: 790, column: 13, scope: !15481)
!15493 = !DILocation(line: 790, column: 5, scope: !15481)
!15494 = !DILocation(line: 793, column: 17, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15496, file: !562, line: 793, column: 17)
!15496 = distinct !DILexicalBlock(scope: !15481, file: !562, line: 791, column: 5)
!15497 = !DILocation(line: 793, column: 27, scope: !15495)
!15498 = !DILocation(line: 793, column: 17, scope: !15496)
!15499 = !DILocation(line: 796, column: 42, scope: !15500)
!15500 = distinct !DILexicalBlock(scope: !15495, file: !562, line: 794, column: 13)
!15501 = !DILocation(line: 796, column: 49, scope: !15500)
!15502 = !DILocation(line: 796, column: 59, scope: !15500)
!15503 = !DILocation(line: 797, column: 41, scope: !15500)
!15504 = !DILocation(line: 795, column: 40, scope: !15500)
!15505 = !DILocation(line: 795, column: 19, scope: !15500)
!15506 = !DILocation(line: 795, column: 51, scope: !15500)
!15507 = !DILocation(line: 798, column: 13, scope: !15500)
!15508 = !DILocation(line: 799, column: 18, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15496, file: !562, line: 799, column: 17)
!15510 = !DILocation(line: 799, column: 25, scope: !15509)
!15511 = !DILocation(line: 799, column: 35, scope: !15509)
!15512 = !DILocation(line: 800, column: 17, scope: !15509)
!15513 = !DILocation(line: 799, column: 17, scope: !15496)
!15514 = !DILocation(line: 802, column: 17, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15509, file: !562, line: 801, column: 13)
!15516 = !DILocation(line: 804, column: 13, scope: !15496)
!15517 = !DILocation(line: 806, column: 17, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15496, file: !562, line: 806, column: 17)
!15519 = !DILocation(line: 806, column: 27, scope: !15518)
!15520 = !DILocation(line: 806, column: 17, scope: !15496)
!15521 = !DILocation(line: 809, column: 42, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15518, file: !562, line: 807, column: 13)
!15523 = !DILocation(line: 809, column: 49, scope: !15522)
!15524 = !DILocation(line: 809, column: 59, scope: !15522)
!15525 = !DILocation(line: 810, column: 41, scope: !15522)
!15526 = !DILocation(line: 808, column: 40, scope: !15522)
!15527 = !DILocation(line: 808, column: 19, scope: !15522)
!15528 = !DILocation(line: 808, column: 51, scope: !15522)
!15529 = !DILocation(line: 811, column: 13, scope: !15522)
!15530 = !DILocation(line: 812, column: 18, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15496, file: !562, line: 812, column: 17)
!15532 = !DILocation(line: 812, column: 25, scope: !15531)
!15533 = !DILocation(line: 812, column: 35, scope: !15531)
!15534 = !DILocation(line: 813, column: 17, scope: !15531)
!15535 = !DILocation(line: 812, column: 17, scope: !15496)
!15536 = !DILocation(line: 815, column: 17, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15531, file: !562, line: 814, column: 13)
!15538 = !DILocation(line: 817, column: 13, scope: !15496)
!15539 = !DILocation(line: 840, column: 13, scope: !15496)
!15540 = !DILocation(line: 842, column: 5, scope: !15481)
!15541 = !DILocation(line: 843, column: 1, scope: !15481)
!15542 = distinct !DISubprogram(name: "nrf_event_readback", scope: !11940, file: !11940, line: 63, type: !8756, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15543 = !DILocalVariable(name: "p_event_reg", arg: 1, scope: !15542, file: !11940, line: 63, type: !102)
!15544 = !DILocation(line: 63, column: 50, scope: !15542)
!15545 = !DILocation(line: 68, column: 11, scope: !15542)
!15546 = !DILocation(line: 70, column: 1, scope: !15542)
!15547 = distinct !DISubprogram(name: "nrfx_clock_start", scope: !1687, file: !1687, line: 358, type: !15392, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15548 = !DILocalVariable(name: "domain", arg: 1, scope: !15547, file: !1687, line: 358, type: !885)
!15549 = !DILocation(line: 358, column: 42, scope: !15547)
!15550 = !DILocation(line: 361, column: 13, scope: !15547)
!15551 = !DILocation(line: 361, column: 5, scope: !15547)
!15552 = !DILocalVariable(name: "lfclksrc", scope: !15553, file: !1687, line: 365, type: !713)
!15553 = distinct !DILexicalBlock(scope: !15554, file: !1687, line: 364, column: 13)
!15554 = distinct !DILexicalBlock(scope: !15547, file: !1687, line: 362, column: 5)
!15555 = !DILocation(line: 365, column: 35, scope: !15553)
!15556 = !DILocation(line: 366, column: 77, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15553, file: !1687, line: 366, column: 21)
!15558 = !DILocation(line: 366, column: 21, scope: !15557)
!15559 = !DILocation(line: 366, column: 21, scope: !15553)
!15560 = !DILocation(line: 371, column: 27, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15557, file: !1687, line: 367, column: 17)
!15562 = !DILocation(line: 372, column: 17, scope: !15561)
!15563 = !DILocation(line: 373, column: 26, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15557, file: !1687, line: 373, column: 26)
!15565 = !DILocation(line: 373, column: 26, scope: !15557)
!15566 = !DILocation(line: 376, column: 32, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15564, file: !1687, line: 374, column: 17)
!15568 = !DILocation(line: 376, column: 30, scope: !15567)
!15569 = !DILocation(line: 377, column: 25, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15567, file: !1687, line: 377, column: 25)
!15571 = !DILocation(line: 377, column: 25, scope: !15567)
!15572 = !DILocation(line: 382, column: 25, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15570, file: !1687, line: 378, column: 21)
!15574 = !DILocation(line: 383, column: 25, scope: !15573)
!15575 = !DILocation(line: 387, column: 17, scope: !15567)
!15576 = !DILocation(line: 391, column: 32, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15564, file: !1687, line: 389, column: 17)
!15578 = !DILocation(line: 391, column: 30, scope: !15577)
!15579 = !DILocation(line: 393, column: 49, scope: !15553)
!15580 = !DILocation(line: 393, column: 17, scope: !15553)
!15581 = !DILocation(line: 395, column: 13, scope: !15554)
!15582 = !DILocation(line: 396, column: 13, scope: !15554)
!15583 = !DILocation(line: 400, column: 13, scope: !15554)
!15584 = !DILocation(line: 401, column: 13, scope: !15554)
!15585 = !DILocation(line: 403, column: 13, scope: !15554)
!15586 = !DILocation(line: 404, column: 13, scope: !15554)
!15587 = !DILocation(line: 405, column: 13, scope: !15554)
!15588 = !DILocation(line: 406, column: 13, scope: !15554)
!15589 = !DILocation(line: 423, column: 13, scope: !15554)
!15590 = !DILocation(line: 425, column: 1, scope: !15547)
!15591 = distinct !DISubprogram(name: "clock_lfclksrc_tweak", scope: !1687, file: !1687, line: 258, type: !15592, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15592 = !DISubroutineType(types: !15593)
!15593 = !{!717, !714}
!15594 = !DILocalVariable(name: "p_lfclksrc", arg: 1, scope: !15591, file: !1687, line: 258, type: !714)
!15595 = !DILocation(line: 258, column: 54, scope: !15591)
!15596 = !DILocalVariable(name: "is_correct_clk", scope: !15591, file: !1687, line: 260, type: !717)
!15597 = !DILocation(line: 260, column: 10, scope: !15591)
!15598 = !DILocation(line: 260, column: 29, scope: !15591)
!15599 = !DILocation(line: 260, column: 28, scope: !15591)
!15600 = !DILocation(line: 260, column: 40, scope: !15591)
!15601 = !DILocation(line: 263, column: 22, scope: !15591)
!15602 = !DILocation(line: 263, column: 37, scope: !15591)
!15603 = !DILocation(line: 263, column: 42, scope: !15591)
!15604 = !DILocation(line: 263, column: 41, scope: !15591)
!15605 = !DILocation(line: 263, column: 53, scope: !15591)
!15606 = !DILocation(line: 263, column: 20, scope: !15591)
!15607 = !DILocation(line: 265, column: 10, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15591, file: !1687, line: 265, column: 9)
!15609 = !DILocation(line: 265, column: 9, scope: !15591)
!15610 = !DILocation(line: 269, column: 9, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15608, file: !1687, line: 266, column: 5)
!15612 = !DILocation(line: 270, column: 23, scope: !15611)
!15613 = !DILocation(line: 270, column: 10, scope: !15611)
!15614 = !DILocation(line: 270, column: 21, scope: !15611)
!15615 = !DILocation(line: 271, column: 5, scope: !15611)
!15616 = !DILocation(line: 272, column: 12, scope: !15591)
!15617 = !DILocation(line: 272, column: 5, scope: !15591)
!15618 = distinct !DISubprogram(name: "nrf_clock_start_task_check", scope: !562, file: !562, line: 748, type: !15619, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15619 = !DISubroutineType(types: !15620)
!15620 = !{!717, !15484, !885}
!15621 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15618, file: !562, line: 748, type: !15484)
!15622 = !DILocation(line: 748, column: 74, scope: !15618)
!15623 = !DILocalVariable(name: "domain", arg: 2, scope: !15618, file: !562, line: 749, type: !885)
!15624 = !DILocation(line: 749, column: 74, scope: !15618)
!15625 = !DILocation(line: 751, column: 13, scope: !15618)
!15626 = !DILocation(line: 751, column: 5, scope: !15618)
!15627 = !DILocation(line: 754, column: 22, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15618, file: !562, line: 752, column: 5)
!15629 = !DILocation(line: 754, column: 29, scope: !15628)
!15630 = !DILocation(line: 754, column: 38, scope: !15628)
!15631 = !DILocation(line: 755, column: 21, scope: !15628)
!15632 = !DILocation(line: 754, column: 20, scope: !15628)
!15633 = !DILocation(line: 754, column: 13, scope: !15628)
!15634 = !DILocation(line: 757, column: 22, scope: !15628)
!15635 = !DILocation(line: 757, column: 29, scope: !15628)
!15636 = !DILocation(line: 757, column: 38, scope: !15628)
!15637 = !DILocation(line: 758, column: 21, scope: !15628)
!15638 = !DILocation(line: 757, column: 20, scope: !15628)
!15639 = !DILocation(line: 757, column: 13, scope: !15628)
!15640 = !DILocation(line: 771, column: 13, scope: !15628)
!15641 = !DILocation(line: 773, column: 1, scope: !15618)
!15642 = distinct !DISubprogram(name: "nrf_clock_lf_srccopy_get", scope: !562, file: !562, line: 866, type: !15643, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15643 = !DISubroutineType(types: !15644)
!15644 = !{!713, !15484}
!15645 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15642, file: !562, line: 866, type: !15484)
!15646 = !DILocation(line: 866, column: 85, scope: !15642)
!15647 = !DILocation(line: 868, column: 33, scope: !15642)
!15648 = !DILocation(line: 868, column: 40, scope: !15642)
!15649 = !DILocation(line: 868, column: 53, scope: !15642)
!15650 = !DILocation(line: 869, column: 33, scope: !15642)
!15651 = !DILocation(line: 868, column: 5, scope: !15642)
!15652 = distinct !DISubprogram(name: "nrf_clock_int_enable", scope: !562, file: !562, line: 705, type: !15370, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15653 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15652, file: !562, line: 705, type: !1652)
!15654 = !DILocation(line: 705, column: 62, scope: !15652)
!15655 = !DILocalVariable(name: "mask", arg: 2, scope: !15652, file: !562, line: 705, type: !173)
!15656 = !DILocation(line: 705, column: 78, scope: !15652)
!15657 = !DILocation(line: 707, column: 23, scope: !15652)
!15658 = !DILocation(line: 707, column: 5, scope: !15652)
!15659 = !DILocation(line: 707, column: 12, scope: !15652)
!15660 = !DILocation(line: 707, column: 21, scope: !15652)
!15661 = !DILocation(line: 708, column: 1, scope: !15652)
!15662 = distinct !DISubprogram(name: "nrfx_clock_stop", scope: !1687, file: !1687, line: 427, type: !15392, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15663 = !DILocalVariable(name: "domain", arg: 1, scope: !15662, file: !1687, line: 427, type: !885)
!15664 = !DILocation(line: 427, column: 41, scope: !15662)
!15665 = !DILocation(line: 430, column: 16, scope: !15662)
!15666 = !DILocation(line: 430, column: 5, scope: !15662)
!15667 = !DILocation(line: 431, column: 1, scope: !15662)
!15668 = distinct !DISubprogram(name: "nrfx_clock_calibration_start", scope: !1687, file: !1687, line: 433, type: !15669, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15669 = !DISubroutineType(types: !15670)
!15670 = !{!11444}
!15671 = !DILocalVariable(name: "err_code", scope: !15668, file: !1687, line: 435, type: !11444)
!15672 = !DILocation(line: 435, column: 16, scope: !15668)
!15673 = !DILocation(line: 470, column: 5, scope: !15668)
!15674 = !DILocation(line: 470, column: 5, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15676, file: !1687, line: 470, column: 5)
!15676 = distinct !DILexicalBlock(scope: !15677, file: !1687, line: 470, column: 5)
!15677 = distinct !DILexicalBlock(scope: !15668, file: !1687, line: 470, column: 5)
!15678 = !DILocation(line: 473, column: 12, scope: !15668)
!15679 = !DILocation(line: 473, column: 5, scope: !15668)
!15680 = distinct !DISubprogram(name: "nrfx_clock_is_calibrating", scope: !1687, file: !1687, line: 476, type: !15669, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15681 = !DILocation(line: 484, column: 5, scope: !15680)
!15682 = distinct !DISubprogram(name: "nrfx_clock_calibration_timer_start", scope: !1687, file: !1687, line: 487, type: !15683, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15683 = !DISubroutineType(types: !15684)
!15684 = !{null, !156}
!15685 = !DILocalVariable(name: "interval", arg: 1, scope: !15682, file: !1687, line: 487, type: !156)
!15686 = !DILocation(line: 487, column: 49, scope: !15682)
!15687 = !DILocation(line: 496, column: 11, scope: !15682)
!15688 = !DILocation(line: 498, column: 1, scope: !15682)
!15689 = distinct !DISubprogram(name: "nrfx_clock_calibration_timer_stop", scope: !1687, file: !1687, line: 500, type: !253, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15690 = !DILocation(line: 507, column: 1, scope: !15689)
!15691 = distinct !DISubprogram(name: "nrfx_power_clock_irq_handler", scope: !1687, file: !1687, line: 586, type: !253, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15692 = !DILocation(line: 588, column: 9, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15691, file: !1687, line: 588, column: 9)
!15694 = !DILocation(line: 588, column: 9, scope: !15691)
!15695 = !DILocation(line: 590, column: 9, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15693, file: !1687, line: 589, column: 5)
!15697 = !DILocation(line: 591, column: 9, scope: !15696)
!15698 = !DILocation(line: 591, column: 9, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15700, file: !1687, line: 591, column: 9)
!15700 = distinct !DILexicalBlock(scope: !15701, file: !1687, line: 591, column: 9)
!15701 = distinct !DILexicalBlock(scope: !15696, file: !1687, line: 591, column: 9)
!15702 = !DILocation(line: 592, column: 9, scope: !15696)
!15703 = !DILocation(line: 601, column: 20, scope: !15696)
!15704 = !DILocation(line: 601, column: 9, scope: !15696)
!15705 = !DILocation(line: 603, column: 5, scope: !15696)
!15706 = !DILocation(line: 604, column: 9, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15691, file: !1687, line: 604, column: 9)
!15708 = !DILocation(line: 604, column: 9, scope: !15691)
!15709 = !DILocation(line: 606, column: 9, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15707, file: !1687, line: 605, column: 5)
!15711 = !DILocation(line: 607, column: 9, scope: !15710)
!15712 = !DILocation(line: 607, column: 9, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15714, file: !1687, line: 607, column: 9)
!15714 = distinct !DILexicalBlock(scope: !15715, file: !1687, line: 607, column: 9)
!15715 = distinct !DILexicalBlock(scope: !15710, file: !1687, line: 607, column: 9)
!15716 = !DILocalVariable(name: "lfclksrc", scope: !15710, file: !1687, line: 610, type: !713)
!15717 = !DILocation(line: 610, column: 27, scope: !15710)
!15718 = !DILocation(line: 611, column: 71, scope: !15710)
!15719 = !DILocation(line: 611, column: 15, scope: !15710)
!15720 = !DILocation(line: 612, column: 13, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15710, file: !1687, line: 612, column: 13)
!15722 = !DILocation(line: 612, column: 22, scope: !15721)
!15723 = !DILocation(line: 612, column: 13, scope: !15710)
!15724 = !DILocation(line: 615, column: 13, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15721, file: !1687, line: 613, column: 9)
!15726 = !DILocation(line: 616, column: 13, scope: !15725)
!15727 = !DILocation(line: 617, column: 9, scope: !15725)
!15728 = !DILocation(line: 622, column: 13, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15721, file: !1687, line: 620, column: 9)
!15730 = !DILocation(line: 623, column: 24, scope: !15729)
!15731 = !DILocation(line: 623, column: 13, scope: !15729)
!15732 = !DILocation(line: 625, column: 5, scope: !15710)
!15733 = !DILocation(line: 675, column: 1, scope: !15691)
!15734 = distinct !DISubprogram(name: "nrf_clock_event_check", scope: !562, file: !562, line: 743, type: !15735, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !223)
!15735 = !DISubroutineType(types: !15736)
!15736 = !{!717, !15484, !11857}
!15737 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15734, file: !562, line: 743, type: !15484)
!15738 = !DILocation(line: 743, column: 69, scope: !15734)
!15739 = !DILocalVariable(name: "event", arg: 2, scope: !15734, file: !562, line: 743, type: !11857)
!15740 = !DILocation(line: 743, column: 94, scope: !15734)
!15741 = !DILocation(line: 745, column: 53, scope: !15734)
!15742 = !DILocation(line: 745, column: 42, scope: !15734)
!15743 = !DILocation(line: 745, column: 61, scope: !15734)
!15744 = !DILocation(line: 745, column: 59, scope: !15734)
!15745 = !DILocation(line: 745, column: 18, scope: !15734)
!15746 = !DILocation(line: 745, column: 12, scope: !15734)
!15747 = !DILocation(line: 745, column: 5, scope: !15734)
!15748 = distinct !DISubprogram(name: "nrfx_gpiote_pin_uninit", scope: !1800, file: !1800, line: 331, type: !15749, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15749 = !DISubroutineType(types: !15750)
!15750 = !{!11444, !1796}
!15751 = !DILocalVariable(name: "pin", arg: 1, scope: !15748, file: !1800, line: 331, type: !1796)
!15752 = !DILocation(line: 331, column: 53, scope: !15748)
!15753 = !DILocation(line: 333, column: 21, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15748, file: !1800, line: 333, column: 9)
!15755 = !DILocation(line: 333, column: 10, scope: !15754)
!15756 = !DILocation(line: 333, column: 9, scope: !15748)
!15757 = !DILocation(line: 335, column: 9, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15754, file: !1800, line: 334, column: 5)
!15759 = !DILocation(line: 338, column: 33, scope: !15748)
!15760 = !DILocation(line: 338, column: 5, scope: !15748)
!15761 = !DILocation(line: 339, column: 32, scope: !15748)
!15762 = !DILocation(line: 339, column: 5, scope: !15748)
!15763 = !DILocation(line: 340, column: 26, scope: !15748)
!15764 = !DILocation(line: 340, column: 5, scope: !15748)
!15765 = !DILocation(line: 342, column: 5, scope: !15748)
!15766 = !DILocation(line: 343, column: 1, scope: !15748)
!15767 = distinct !DISubprogram(name: "pin_in_use", scope: !1800, file: !1800, line: 184, type: !14346, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15768 = !DILocalVariable(name: "pin", arg: 1, scope: !15767, file: !1800, line: 184, type: !173)
!15769 = !DILocation(line: 184, column: 33, scope: !15767)
!15770 = !DILocation(line: 186, column: 27, scope: !15767)
!15771 = !DILocation(line: 186, column: 12, scope: !15767)
!15772 = !DILocation(line: 186, column: 32, scope: !15767)
!15773 = !DILocation(line: 186, column: 5, scope: !15767)
!15774 = distinct !DISubprogram(name: "nrfx_gpiote_trigger_disable", scope: !1800, file: !1800, line: 1011, type: !15775, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15775 = !DISubroutineType(types: !15776)
!15776 = !{null, !1796}
!15777 = !DILocalVariable(name: "pin", arg: 1, scope: !15774, file: !1800, line: 1011, type: !1796)
!15778 = !DILocation(line: 1011, column: 52, scope: !15774)
!15779 = !DILocation(line: 1013, column: 26, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15774, file: !1800, line: 1013, column: 9)
!15781 = !DILocation(line: 1013, column: 9, scope: !15780)
!15782 = !DILocation(line: 1013, column: 31, scope: !15780)
!15783 = !DILocation(line: 1013, column: 47, scope: !15780)
!15784 = !DILocation(line: 1013, column: 34, scope: !15780)
!15785 = !DILocation(line: 1013, column: 9, scope: !15774)
!15786 = !DILocalVariable(name: "ch", scope: !15787, file: !1800, line: 1015, type: !156)
!15787 = distinct !DILexicalBlock(scope: !15780, file: !1800, line: 1014, column: 5)
!15788 = !DILocation(line: 1015, column: 17, scope: !15787)
!15789 = !DILocation(line: 1015, column: 33, scope: !15787)
!15790 = !DILocation(line: 1015, column: 22, scope: !15787)
!15791 = !DILocation(line: 1017, column: 44, scope: !15787)
!15792 = !DILocation(line: 1017, column: 9, scope: !15787)
!15793 = !DILocation(line: 1018, column: 46, scope: !15787)
!15794 = !DILocation(line: 1018, column: 9, scope: !15787)
!15795 = !DILocation(line: 1019, column: 5, scope: !15787)
!15796 = !DILocation(line: 1022, column: 32, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15780, file: !1800, line: 1021, column: 5)
!15798 = !DILocation(line: 1022, column: 9, scope: !15797)
!15799 = !DILocation(line: 1024, column: 1, scope: !15774)
!15800 = distinct !DISubprogram(name: "pin_handler_trigger_uninit", scope: !1800, file: !1800, line: 313, type: !15775, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15801 = !DILocalVariable(name: "pin", arg: 1, scope: !15800, file: !1800, line: 313, type: !1796)
!15802 = !DILocation(line: 313, column: 58, scope: !15800)
!15803 = !DILocation(line: 315, column: 26, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15800, file: !1800, line: 315, column: 9)
!15805 = !DILocation(line: 315, column: 9, scope: !15804)
!15806 = !DILocation(line: 315, column: 9, scope: !15800)
!15807 = !DILocation(line: 318, column: 54, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15804, file: !1800, line: 316, column: 5)
!15809 = !DILocation(line: 318, column: 43, scope: !15808)
!15810 = !DILocation(line: 318, column: 9, scope: !15808)
!15811 = !DILocation(line: 319, column: 5, scope: !15808)
!15812 = !DILocation(line: 323, column: 31, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15804, file: !1800, line: 321, column: 5)
!15814 = !DILocation(line: 323, column: 9, scope: !15813)
!15815 = !DILocation(line: 327, column: 21, scope: !15800)
!15816 = !DILocation(line: 327, column: 5, scope: !15800)
!15817 = !DILocation(line: 328, column: 20, scope: !15800)
!15818 = !DILocation(line: 328, column: 5, scope: !15800)
!15819 = !DILocation(line: 328, column: 25, scope: !15800)
!15820 = !DILocation(line: 329, column: 1, scope: !15800)
!15821 = distinct !DISubprogram(name: "nrf_gpio_cfg_default", scope: !1054, file: !1054, line: 696, type: !524, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15822 = !DILocalVariable(name: "pin_number", arg: 1, scope: !15821, file: !1054, line: 696, type: !173)
!15823 = !DILocation(line: 696, column: 54, scope: !15821)
!15824 = !DILocation(line: 699, column: 9, scope: !15821)
!15825 = !DILocation(line: 698, column: 5, scope: !15821)
!15826 = !DILocation(line: 705, column: 1, scope: !15821)
!15827 = distinct !DISubprogram(name: "nrf_gpio_cfg", scope: !1054, file: !1054, line: 621, type: !14883, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15828 = !DILocalVariable(name: "pin_number", arg: 1, scope: !15827, file: !1054, line: 622, type: !173)
!15829 = !DILocation(line: 622, column: 26, scope: !15827)
!15830 = !DILocalVariable(name: "dir", arg: 2, scope: !15827, file: !1054, line: 623, type: !1158)
!15831 = !DILocation(line: 623, column: 26, scope: !15827)
!15832 = !DILocalVariable(name: "input", arg: 3, scope: !15827, file: !1054, line: 624, type: !12183)
!15833 = !DILocation(line: 624, column: 26, scope: !15827)
!15834 = !DILocalVariable(name: "pull", arg: 4, scope: !15827, file: !1054, line: 625, type: !12185)
!15835 = !DILocation(line: 625, column: 26, scope: !15827)
!15836 = !DILocalVariable(name: "drive", arg: 5, scope: !15827, file: !1054, line: 626, type: !12164)
!15837 = !DILocation(line: 626, column: 26, scope: !15827)
!15838 = !DILocalVariable(name: "sense", arg: 6, scope: !15827, file: !1054, line: 627, type: !1797)
!15839 = !DILocation(line: 627, column: 26, scope: !15827)
!15840 = !DILocalVariable(name: "reg", scope: !15827, file: !1054, line: 629, type: !1775)
!15841 = !DILocation(line: 629, column: 21, scope: !15827)
!15842 = !DILocation(line: 629, column: 27, scope: !15827)
!15843 = !DILocalVariable(name: "cnf", scope: !15827, file: !1054, line: 635, type: !173)
!15844 = !DILocation(line: 635, column: 14, scope: !15827)
!15845 = !DILocation(line: 637, column: 23, scope: !15827)
!15846 = !DILocation(line: 637, column: 27, scope: !15827)
!15847 = !DILocation(line: 638, column: 23, scope: !15827)
!15848 = !DILocation(line: 638, column: 29, scope: !15827)
!15849 = !DILocation(line: 637, column: 56, scope: !15827)
!15850 = !DILocation(line: 639, column: 23, scope: !15827)
!15851 = !DILocation(line: 639, column: 28, scope: !15827)
!15852 = !DILocation(line: 638, column: 56, scope: !15827)
!15853 = !DILocation(line: 640, column: 23, scope: !15827)
!15854 = !DILocation(line: 640, column: 29, scope: !15827)
!15855 = !DILocation(line: 639, column: 56, scope: !15827)
!15856 = !DILocation(line: 641, column: 23, scope: !15827)
!15857 = !DILocation(line: 641, column: 29, scope: !15827)
!15858 = !DILocation(line: 640, column: 56, scope: !15827)
!15859 = !DILocation(line: 637, column: 9, scope: !15827)
!15860 = !DILocation(line: 643, column: 32, scope: !15827)
!15861 = !DILocation(line: 643, column: 5, scope: !15827)
!15862 = !DILocation(line: 643, column: 10, scope: !15827)
!15863 = !DILocation(line: 643, column: 18, scope: !15827)
!15864 = !DILocation(line: 643, column: 30, scope: !15827)
!15865 = !DILocation(line: 644, column: 1, scope: !15827)
!15866 = distinct !DISubprogram(name: "nrf_gpio_pin_port_decode", scope: !1054, file: !1054, line: 581, type: !15867, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15867 = !DISubroutineType(types: !15868)
!15868 = !{!1775, !922}
!15869 = !DILocalVariable(name: "p_pin", arg: 1, scope: !15866, file: !1054, line: 581, type: !922)
!15870 = !DILocation(line: 581, column: 71, scope: !15866)
!15871 = !DILocation(line: 585, column: 46, scope: !15866)
!15872 = !DILocation(line: 585, column: 13, scope: !15866)
!15873 = !DILocation(line: 585, column: 5, scope: !15866)
!15874 = !DILocation(line: 588, column: 13, scope: !15875)
!15875 = distinct !DILexicalBlock(scope: !15876, file: !1054, line: 588, column: 13)
!15876 = distinct !DILexicalBlock(scope: !15866, file: !1054, line: 586, column: 5)
!15877 = !DILocation(line: 591, column: 17, scope: !15876)
!15878 = distinct !DISubprogram(name: "nrf_gpio_pin_port_number_extract", scope: !1054, file: !1054, line: 1024, type: !12664, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15879 = !DILocalVariable(name: "p_pin", arg: 1, scope: !15878, file: !1054, line: 1024, type: !922)
!15880 = !DILocation(line: 1024, column: 72, scope: !15878)
!15881 = !DILocalVariable(name: "pin_number", scope: !15878, file: !1054, line: 1026, type: !173)
!15882 = !DILocation(line: 1026, column: 14, scope: !15878)
!15883 = !DILocation(line: 1026, column: 28, scope: !15878)
!15884 = !DILocation(line: 1026, column: 27, scope: !15878)
!15885 = !DILocation(line: 1027, column: 14, scope: !15878)
!15886 = !DILocation(line: 1027, column: 25, scope: !15878)
!15887 = !DILocation(line: 1027, column: 6, scope: !15878)
!15888 = !DILocation(line: 1027, column: 12, scope: !15878)
!15889 = !DILocation(line: 1029, column: 12, scope: !15878)
!15890 = !DILocation(line: 1029, column: 23, scope: !15878)
!15891 = !DILocation(line: 1029, column: 5, scope: !15878)
!15892 = distinct !DISubprogram(name: "pin_in_use_by_te", scope: !1800, file: !1800, line: 197, type: !14346, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15893 = !DILocalVariable(name: "pin", arg: 1, scope: !15892, file: !1800, line: 197, type: !173)
!15894 = !DILocation(line: 197, column: 39, scope: !15892)
!15895 = !DILocation(line: 199, column: 27, scope: !15892)
!15896 = !DILocation(line: 199, column: 12, scope: !15892)
!15897 = !DILocation(line: 199, column: 32, scope: !15892)
!15898 = !DILocation(line: 199, column: 5, scope: !15892)
!15899 = distinct !DISubprogram(name: "pin_te_get", scope: !1800, file: !1800, line: 261, type: !15900, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15900 = !DISubroutineType(types: !15901)
!15901 = !{!156, !1796}
!15902 = !DILocalVariable(name: "pin", arg: 1, scope: !15899, file: !1800, line: 261, type: !1796)
!15903 = !DILocation(line: 261, column: 45, scope: !15899)
!15904 = !DILocation(line: 263, column: 12, scope: !15899)
!15905 = !DILocation(line: 263, column: 5, scope: !15899)
!15906 = distinct !DISubprogram(name: "nrf_gpiote_te_default", scope: !1704, file: !1704, line: 615, type: !15907, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{null, !1746, !173}
!15909 = !DILocalVariable(name: "p_reg", arg: 1, scope: !15906, file: !1704, line: 615, type: !1746)
!15910 = !DILocation(line: 615, column: 64, scope: !15906)
!15911 = !DILocalVariable(name: "idx", arg: 2, scope: !15906, file: !1704, line: 615, type: !173)
!15912 = !DILocation(line: 615, column: 80, scope: !15906)
!15913 = !DILocation(line: 617, column: 5, scope: !15906)
!15914 = !DILocation(line: 617, column: 12, scope: !15906)
!15915 = !DILocation(line: 617, column: 19, scope: !15906)
!15916 = !DILocation(line: 617, column: 24, scope: !15906)
!15917 = !DILocation(line: 621, column: 1, scope: !15906)
!15918 = distinct !DISubprogram(name: "nrf_bitmask_bit_clear", scope: !15919, file: !15919, line: 102, type: !15920, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15919 = !DIFile(filename: "modules/hal/nordic/nrfx/drivers/include/nrf_bitmask.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15920 = !DISubroutineType(types: !15921)
!15921 = !{null, !173, !102}
!15922 = !DILocalVariable(name: "bit", arg: 1, scope: !15918, file: !15919, line: 102, type: !173)
!15923 = !DILocation(line: 102, column: 53, scope: !15918)
!15924 = !DILocalVariable(name: "p_mask", arg: 2, scope: !15918, file: !15919, line: 102, type: !102)
!15925 = !DILocation(line: 102, column: 65, scope: !15918)
!15926 = !DILocalVariable(name: "p_mask8", scope: !15918, file: !15919, line: 104, type: !718)
!15927 = !DILocation(line: 104, column: 15, scope: !15918)
!15928 = !DILocation(line: 104, column: 36, scope: !15918)
!15929 = !DILocalVariable(name: "byte_idx", scope: !15918, file: !15919, line: 105, type: !173)
!15930 = !DILocation(line: 105, column: 14, scope: !15918)
!15931 = !DILocation(line: 105, column: 25, scope: !15918)
!15932 = !DILocation(line: 106, column: 11, scope: !15918)
!15933 = !DILocation(line: 106, column: 9, scope: !15918)
!15934 = !DILocation(line: 107, column: 33, scope: !15918)
!15935 = !DILocation(line: 107, column: 30, scope: !15918)
!15936 = !DILocation(line: 107, column: 26, scope: !15918)
!15937 = !DILocation(line: 107, column: 5, scope: !15918)
!15938 = !DILocation(line: 107, column: 13, scope: !15918)
!15939 = !DILocation(line: 107, column: 23, scope: !15918)
!15940 = !DILocation(line: 108, column: 1, scope: !15918)
!15941 = distinct !DISubprogram(name: "release_handler", scope: !1800, file: !1800, line: 287, type: !15775, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15942 = !DILocalVariable(name: "pin", arg: 1, scope: !15941, file: !1800, line: 287, type: !1796)
!15943 = !DILocation(line: 287, column: 47, scope: !15941)
!15944 = !DILocalVariable(name: "handler_id", scope: !15941, file: !1800, line: 289, type: !250)
!15945 = !DILocation(line: 289, column: 13, scope: !15941)
!15946 = !DILocation(line: 289, column: 26, scope: !15941)
!15947 = !DILocation(line: 291, column: 9, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15941, file: !1800, line: 291, column: 9)
!15949 = !DILocation(line: 291, column: 20, scope: !15948)
!15950 = !DILocation(line: 291, column: 9, scope: !15941)
!15951 = !DILocation(line: 293, column: 9, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15948, file: !1800, line: 292, column: 5)
!15953 = !DILocation(line: 296, column: 20, scope: !15941)
!15954 = !DILocation(line: 296, column: 5, scope: !15941)
!15955 = !DILocation(line: 296, column: 25, scope: !15941)
!15956 = !DILocation(line: 301, column: 25, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15941, file: !1800, line: 301, column: 9)
!15958 = !DILocation(line: 301, column: 10, scope: !15957)
!15959 = !DILocation(line: 301, column: 9, scope: !15941)
!15960 = !DILocation(line: 303, column: 23, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15957, file: !1800, line: 302, column: 5)
!15962 = !DILocation(line: 303, column: 9, scope: !15961)
!15963 = !DILocation(line: 303, column: 35, scope: !15961)
!15964 = !DILocation(line: 303, column: 43, scope: !15961)
!15965 = !DILocalVariable(name: "err", scope: !15961, file: !1800, line: 304, type: !11444)
!15966 = !DILocation(line: 304, column: 20, scope: !15961)
!15967 = !DILocation(line: 304, column: 73, scope: !15961)
!15968 = !DILocation(line: 304, column: 26, scope: !15961)
!15969 = !DILocation(line: 305, column: 15, scope: !15961)
!15970 = !DILocation(line: 307, column: 5, scope: !15961)
!15971 = !DILocation(line: 308, column: 1, scope: !15941)
!15972 = distinct !DISubprogram(name: "handler_in_use", scope: !1800, file: !1800, line: 271, type: !7218, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15973 = !DILocalVariable(name: "handler_id", arg: 1, scope: !15972, file: !1800, line: 271, type: !250)
!15974 = !DILocation(line: 271, column: 36, scope: !15972)
!15975 = !DILocalVariable(name: "i", scope: !15976, file: !1800, line: 274, type: !173)
!15976 = distinct !DILexicalBlock(scope: !15972, file: !1800, line: 274, column: 5)
!15977 = !DILocation(line: 274, column: 19, scope: !15976)
!15978 = !DILocation(line: 274, column: 10, scope: !15976)
!15979 = !DILocation(line: 274, column: 26, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15976, file: !1800, line: 274, column: 5)
!15981 = !DILocation(line: 274, column: 28, scope: !15980)
!15982 = !DILocation(line: 274, column: 5, scope: !15976)
!15983 = !DILocation(line: 276, column: 13, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15985, file: !1800, line: 276, column: 13)
!15985 = distinct !DILexicalBlock(scope: !15980, file: !1800, line: 275, column: 5)
!15986 = !DILocation(line: 276, column: 54, scope: !15984)
!15987 = !DILocation(line: 276, column: 51, scope: !15984)
!15988 = !DILocation(line: 276, column: 13, scope: !15985)
!15989 = !DILocation(line: 278, column: 13, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15984, file: !1800, line: 277, column: 9)
!15991 = !DILocation(line: 280, column: 5, scope: !15985)
!15992 = !DILocation(line: 274, column: 47, scope: !15980)
!15993 = !DILocation(line: 274, column: 5, scope: !15980)
!15994 = distinct !{!15994, !15982, !15995}
!15995 = !DILocation(line: 280, column: 5, scope: !15976)
!15996 = !DILocation(line: 282, column: 5, scope: !15972)
!15997 = !DILocation(line: 283, column: 1, scope: !15972)
!15998 = distinct !DISubprogram(name: "pin_is_input", scope: !1800, file: !1800, line: 243, type: !14346, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!15999 = !DILocalVariable(name: "pin", arg: 1, scope: !15998, file: !1800, line: 243, type: !173)
!16000 = !DILocation(line: 243, column: 35, scope: !15998)
!16001 = !DILocation(line: 245, column: 27, scope: !15998)
!16002 = !DILocation(line: 245, column: 13, scope: !15998)
!16003 = !DILocation(line: 245, column: 12, scope: !15998)
!16004 = !DILocation(line: 245, column: 5, scope: !15998)
!16005 = distinct !DISubprogram(name: "nrf_gpiote_int_disable", scope: !1704, file: !1704, line: 499, type: !15907, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16006 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16005, file: !1704, line: 499, type: !1746)
!16007 = !DILocation(line: 499, column: 65, scope: !16005)
!16008 = !DILocalVariable(name: "mask", arg: 2, scope: !16005, file: !1704, line: 499, type: !173)
!16009 = !DILocation(line: 499, column: 81, scope: !16005)
!16010 = !DILocation(line: 501, column: 23, scope: !16005)
!16011 = !DILocation(line: 501, column: 5, scope: !16005)
!16012 = !DILocation(line: 501, column: 12, scope: !16005)
!16013 = !DILocation(line: 501, column: 21, scope: !16005)
!16014 = !DILocation(line: 502, column: 1, scope: !16005)
!16015 = distinct !DISubprogram(name: "nrf_gpiote_event_disable", scope: !1704, file: !1704, line: 542, type: !15907, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16016 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16015, file: !1704, line: 542, type: !1746)
!16017 = !DILocation(line: 542, column: 67, scope: !16015)
!16018 = !DILocalVariable(name: "idx", arg: 2, scope: !16015, file: !1704, line: 542, type: !173)
!16019 = !DILocation(line: 542, column: 83, scope: !16015)
!16020 = !DILocation(line: 544, column: 4, scope: !16015)
!16021 = !DILocation(line: 544, column: 11, scope: !16015)
!16022 = !DILocation(line: 544, column: 18, scope: !16015)
!16023 = !DILocation(line: 544, column: 23, scope: !16015)
!16024 = !DILocation(line: 545, column: 1, scope: !16015)
!16025 = distinct !DISubprogram(name: "nrf_gpio_cfg_sense_set", scope: !1054, file: !1054, line: 738, type: !16026, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16026 = !DISubroutineType(types: !16027)
!16027 = !{null, !173, !1797}
!16028 = !DILocalVariable(name: "pin_number", arg: 1, scope: !16025, file: !1054, line: 738, type: !173)
!16029 = !DILocation(line: 738, column: 68, scope: !16025)
!16030 = !DILocalVariable(name: "sense_config", arg: 2, scope: !16025, file: !1054, line: 739, type: !1797)
!16031 = !DILocation(line: 739, column: 68, scope: !16025)
!16032 = !DILocation(line: 741, column: 26, scope: !16025)
!16033 = !DILocation(line: 741, column: 5, scope: !16025)
!16034 = !DILocation(line: 742, column: 1, scope: !16025)
!16035 = distinct !DISubprogram(name: "nrf_gpio_reconfigure", scope: !1054, file: !1054, line: 646, type: !16036, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16036 = !DISubroutineType(types: !16037)
!16037 = !{null, !173, !16038, !16040, !16042, !16044, !16046}
!16038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16039, size: 32)
!16039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!16040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16041, size: 32)
!16041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12183)
!16042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16043, size: 32)
!16043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12185)
!16044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16045, size: 32)
!16045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12164)
!16046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16047, size: 32)
!16047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1797)
!16048 = !DILocalVariable(name: "pin_number", arg: 1, scope: !16035, file: !1054, line: 646, type: !173)
!16049 = !DILocation(line: 646, column: 74, scope: !16035)
!16050 = !DILocalVariable(name: "p_dir", arg: 2, scope: !16035, file: !1054, line: 647, type: !16038)
!16051 = !DILocation(line: 647, column: 74, scope: !16035)
!16052 = !DILocalVariable(name: "p_input", arg: 3, scope: !16035, file: !1054, line: 648, type: !16040)
!16053 = !DILocation(line: 648, column: 74, scope: !16035)
!16054 = !DILocalVariable(name: "p_pull", arg: 4, scope: !16035, file: !1054, line: 649, type: !16042)
!16055 = !DILocation(line: 649, column: 74, scope: !16035)
!16056 = !DILocalVariable(name: "p_drive", arg: 5, scope: !16035, file: !1054, line: 650, type: !16044)
!16057 = !DILocation(line: 650, column: 74, scope: !16035)
!16058 = !DILocalVariable(name: "p_sense", arg: 6, scope: !16035, file: !1054, line: 651, type: !16046)
!16059 = !DILocation(line: 651, column: 74, scope: !16035)
!16060 = !DILocalVariable(name: "reg", scope: !16035, file: !1054, line: 653, type: !1775)
!16061 = !DILocation(line: 653, column: 21, scope: !16035)
!16062 = !DILocation(line: 653, column: 27, scope: !16035)
!16063 = !DILocalVariable(name: "cnf", scope: !16035, file: !1054, line: 654, type: !173)
!16064 = !DILocation(line: 654, column: 14, scope: !16035)
!16065 = !DILocation(line: 654, column: 20, scope: !16035)
!16066 = !DILocation(line: 654, column: 25, scope: !16035)
!16067 = !DILocation(line: 654, column: 33, scope: !16035)
!16068 = !DILocalVariable(name: "to_update", scope: !16035, file: !1054, line: 655, type: !173)
!16069 = !DILocation(line: 655, column: 14, scope: !16035)
!16070 = !DILocation(line: 655, column: 27, scope: !16035)
!16071 = !DILocation(line: 656, column: 27, scope: !16035)
!16072 = !DILocation(line: 655, column: 65, scope: !16035)
!16073 = !DILocation(line: 657, column: 27, scope: !16035)
!16074 = !DILocation(line: 656, column: 65, scope: !16035)
!16075 = !DILocation(line: 658, column: 27, scope: !16035)
!16076 = !DILocation(line: 657, column: 65, scope: !16035)
!16077 = !DILocation(line: 659, column: 27, scope: !16035)
!16078 = !DILocation(line: 658, column: 65, scope: !16035)
!16079 = !DILocation(line: 662, column: 13, scope: !16035)
!16080 = !DILocation(line: 662, column: 12, scope: !16035)
!16081 = !DILocation(line: 662, column: 9, scope: !16035)
!16082 = !DILocation(line: 663, column: 24, scope: !16035)
!16083 = !DILocation(line: 663, column: 35, scope: !16035)
!16084 = !DILocation(line: 663, column: 34, scope: !16035)
!16085 = !DILocation(line: 663, column: 48, scope: !16035)
!16086 = !DILocation(line: 664, column: 24, scope: !16035)
!16087 = !DILocation(line: 664, column: 35, scope: !16035)
!16088 = !DILocation(line: 664, column: 34, scope: !16035)
!16089 = !DILocation(line: 664, column: 48, scope: !16035)
!16090 = !DILocation(line: 663, column: 75, scope: !16035)
!16091 = !DILocation(line: 665, column: 24, scope: !16035)
!16092 = !DILocation(line: 665, column: 35, scope: !16035)
!16093 = !DILocation(line: 665, column: 34, scope: !16035)
!16094 = !DILocation(line: 665, column: 48, scope: !16035)
!16095 = !DILocation(line: 664, column: 75, scope: !16035)
!16096 = !DILocation(line: 666, column: 24, scope: !16035)
!16097 = !DILocation(line: 666, column: 35, scope: !16035)
!16098 = !DILocation(line: 666, column: 34, scope: !16035)
!16099 = !DILocation(line: 666, column: 48, scope: !16035)
!16100 = !DILocation(line: 665, column: 75, scope: !16035)
!16101 = !DILocation(line: 667, column: 24, scope: !16035)
!16102 = !DILocation(line: 667, column: 35, scope: !16035)
!16103 = !DILocation(line: 667, column: 34, scope: !16035)
!16104 = !DILocation(line: 667, column: 47, scope: !16035)
!16105 = !DILocation(line: 666, column: 75, scope: !16035)
!16106 = !DILocation(line: 663, column: 9, scope: !16035)
!16107 = !DILocation(line: 669, column: 32, scope: !16035)
!16108 = !DILocation(line: 669, column: 5, scope: !16035)
!16109 = !DILocation(line: 669, column: 10, scope: !16035)
!16110 = !DILocation(line: 669, column: 18, scope: !16035)
!16111 = !DILocation(line: 669, column: 30, scope: !16035)
!16112 = !DILocation(line: 670, column: 1, scope: !16035)
!16113 = distinct !DISubprogram(name: "pin_is_output", scope: !1800, file: !1800, line: 221, type: !14346, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16114 = !DILocalVariable(name: "pin", arg: 1, scope: !16113, file: !1800, line: 221, type: !173)
!16115 = !DILocation(line: 221, column: 36, scope: !16113)
!16116 = !DILocation(line: 223, column: 12, scope: !16113)
!16117 = !DILocation(line: 223, column: 5, scope: !16113)
!16118 = distinct !DISubprogram(name: "nrfx_gpiote_input_configure", scope: !1800, file: !1800, line: 415, type: !16119, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16119 = !DISubroutineType(types: !16120)
!16120 = !{!11444, !1796, !16121, !16127, !16134}
!16121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16122, size: 32)
!16122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16123)
!16123 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_input_config_t", file: !1044, line: 105, baseType: !16124)
!16124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 102, size: 32, elements: !16125)
!16125 = !{!16126}
!16126 = !DIDerivedType(tag: DW_TAG_member, name: "pull", scope: !16124, file: !1044, line: 104, baseType: !12185, size: 32)
!16127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16128, size: 32)
!16128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16129)
!16129 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_trigger_config_t", file: !1044, line: 115, baseType: !16130)
!16130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 108, size: 64, elements: !16131)
!16131 = !{!16132, !16133}
!16132 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !16130, file: !1044, line: 110, baseType: !1790, size: 32)
!16133 = !DIDerivedType(tag: DW_TAG_member, name: "p_in_channel", scope: !16130, file: !1044, line: 111, baseType: !1798, size: 32, offset: 32)
!16134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16135, size: 32)
!16135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!16136 = !DILocalVariable(name: "pin", arg: 1, scope: !16118, file: !1800, line: 415, type: !1796)
!16137 = !DILocation(line: 415, column: 77, scope: !16118)
!16138 = !DILocalVariable(name: "p_input_config", arg: 2, scope: !16118, file: !1800, line: 416, type: !16121)
!16139 = !DILocation(line: 416, column: 77, scope: !16118)
!16140 = !DILocalVariable(name: "p_trigger_config", arg: 3, scope: !16118, file: !1800, line: 417, type: !16127)
!16141 = !DILocation(line: 417, column: 77, scope: !16118)
!16142 = !DILocalVariable(name: "p_handler_config", arg: 4, scope: !16118, file: !1800, line: 418, type: !16134)
!16143 = !DILocation(line: 418, column: 77, scope: !16118)
!16144 = !DILocalVariable(name: "err", scope: !16118, file: !1800, line: 420, type: !11444)
!16145 = !DILocation(line: 420, column: 16, scope: !16118)
!16146 = !DILocation(line: 422, column: 9, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16118, file: !1800, line: 422, column: 9)
!16148 = !DILocation(line: 422, column: 9, scope: !16118)
!16149 = !DILocation(line: 424, column: 32, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !1800, line: 424, column: 13)
!16151 = distinct !DILexicalBlock(scope: !16147, file: !1800, line: 423, column: 5)
!16152 = !DILocation(line: 424, column: 13, scope: !16150)
!16153 = !DILocation(line: 424, column: 13, scope: !16151)
!16154 = !DILocation(line: 426, column: 13, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16150, file: !1800, line: 425, column: 9)
!16156 = !DILocalVariable(name: "dir", scope: !16151, file: !1800, line: 429, type: !1158)
!16157 = !DILocation(line: 429, column: 28, scope: !16151)
!16158 = !DILocalVariable(name: "input_connect", scope: !16151, file: !1800, line: 430, type: !12183)
!16159 = !DILocation(line: 430, column: 30, scope: !16151)
!16160 = !DILocation(line: 432, column: 30, scope: !16151)
!16161 = !DILocation(line: 432, column: 58, scope: !16151)
!16162 = !DILocation(line: 432, column: 74, scope: !16151)
!16163 = !DILocation(line: 432, column: 9, scope: !16151)
!16164 = !DILocation(line: 434, column: 24, scope: !16151)
!16165 = !DILocation(line: 434, column: 9, scope: !16151)
!16166 = !DILocation(line: 434, column: 29, scope: !16151)
!16167 = !DILocation(line: 435, column: 24, scope: !16151)
!16168 = !DILocation(line: 435, column: 9, scope: !16151)
!16169 = !DILocation(line: 435, column: 29, scope: !16151)
!16170 = !DILocation(line: 436, column: 5, scope: !16151)
!16171 = !DILocation(line: 438, column: 9, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16118, file: !1800, line: 438, column: 9)
!16173 = !DILocation(line: 438, column: 9, scope: !16118)
!16174 = !DILocalVariable(name: "trigger", scope: !16175, file: !1800, line: 440, type: !1790)
!16175 = distinct !DILexicalBlock(scope: !16172, file: !1800, line: 439, column: 5)
!16176 = !DILocation(line: 440, column: 31, scope: !16175)
!16177 = !DILocation(line: 440, column: 41, scope: !16175)
!16178 = !DILocation(line: 440, column: 59, scope: !16175)
!16179 = !DILocalVariable(name: "use_evt", scope: !16175, file: !1800, line: 441, type: !717)
!16180 = !DILocation(line: 441, column: 14, scope: !16175)
!16181 = !DILocation(line: 441, column: 24, scope: !16175)
!16182 = !DILocation(line: 441, column: 42, scope: !16175)
!16183 = !DILocation(line: 443, column: 27, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16175, file: !1800, line: 443, column: 13)
!16185 = !DILocation(line: 443, column: 13, scope: !16184)
!16186 = !DILocation(line: 443, column: 13, scope: !16175)
!16187 = !DILocation(line: 445, column: 17, scope: !16188)
!16188 = distinct !DILexicalBlock(scope: !16189, file: !1800, line: 445, column: 17)
!16189 = distinct !DILexicalBlock(scope: !16184, file: !1800, line: 444, column: 9)
!16190 = !DILocation(line: 445, column: 17, scope: !16189)
!16191 = !DILocation(line: 447, column: 17, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16188, file: !1800, line: 446, column: 13)
!16193 = !DILocation(line: 449, column: 9, scope: !16189)
!16194 = !DILocation(line: 452, column: 28, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16184, file: !1800, line: 451, column: 9)
!16196 = !DILocation(line: 452, column: 13, scope: !16195)
!16197 = !DILocation(line: 452, column: 33, scope: !16195)
!16198 = !DILocation(line: 453, column: 17, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16195, file: !1800, line: 453, column: 17)
!16200 = !DILocation(line: 453, column: 17, scope: !16195)
!16201 = !DILocalVariable(name: "edge", scope: !16202, file: !1800, line: 455, type: !717)
!16202 = distinct !DILexicalBlock(scope: !16199, file: !1800, line: 454, column: 13)
!16203 = !DILocation(line: 455, column: 22, scope: !16202)
!16204 = !DILocation(line: 455, column: 29, scope: !16202)
!16205 = !DILocation(line: 455, column: 37, scope: !16202)
!16206 = !DILocation(line: 458, column: 22, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16202, file: !1800, line: 458, column: 21)
!16208 = !DILocation(line: 458, column: 21, scope: !16202)
!16209 = !DILocation(line: 461, column: 21, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16207, file: !1800, line: 459, column: 17)
!16211 = !DILocalVariable(name: "ch", scope: !16202, file: !1800, line: 464, type: !156)
!16212 = !DILocation(line: 464, column: 25, scope: !16202)
!16213 = !DILocation(line: 464, column: 31, scope: !16202)
!16214 = !DILocation(line: 464, column: 49, scope: !16202)
!16215 = !DILocation(line: 464, column: 30, scope: !16202)
!16216 = !DILocation(line: 466, column: 21, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16202, file: !1800, line: 466, column: 21)
!16218 = !DILocation(line: 466, column: 29, scope: !16217)
!16219 = !DILocation(line: 466, column: 21, scope: !16202)
!16220 = !DILocation(line: 468, column: 55, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16217, file: !1800, line: 467, column: 17)
!16222 = !DILocation(line: 468, column: 21, scope: !16221)
!16223 = !DILocation(line: 469, column: 17, scope: !16221)
!16224 = !DILocalVariable(name: "polarity", scope: !16225, file: !1800, line: 472, type: !1789)
!16225 = distinct !DILexicalBlock(scope: !16217, file: !1800, line: 471, column: 17)
!16226 = !DILocation(line: 472, column: 43, scope: !16225)
!16227 = !DILocation(line: 472, column: 81, scope: !16225)
!16228 = !DILocation(line: 472, column: 54, scope: !16225)
!16229 = !DILocation(line: 474, column: 58, scope: !16225)
!16230 = !DILocation(line: 474, column: 21, scope: !16225)
!16231 = !DILocation(line: 475, column: 60, scope: !16225)
!16232 = !DILocation(line: 475, column: 64, scope: !16225)
!16233 = !DILocation(line: 475, column: 69, scope: !16225)
!16234 = !DILocation(line: 475, column: 21, scope: !16225)
!16235 = !DILocation(line: 477, column: 44, scope: !16225)
!16236 = !DILocation(line: 477, column: 36, scope: !16225)
!16237 = !DILocation(line: 477, column: 21, scope: !16225)
!16238 = !DILocation(line: 477, column: 41, scope: !16225)
!16239 = !DILocation(line: 479, column: 13, scope: !16202)
!16240 = !DILocation(line: 482, column: 13, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16175, file: !1800, line: 482, column: 13)
!16242 = !DILocation(line: 482, column: 21, scope: !16241)
!16243 = !DILocation(line: 482, column: 24, scope: !16241)
!16244 = !DILocation(line: 482, column: 32, scope: !16241)
!16245 = !DILocation(line: 482, column: 13, scope: !16175)
!16246 = !DILocation(line: 484, column: 35, scope: !16247)
!16247 = distinct !DILexicalBlock(scope: !16241, file: !1800, line: 483, column: 9)
!16248 = !DILocation(line: 484, column: 13, scope: !16247)
!16249 = !DILocation(line: 485, column: 9, scope: !16247)
!16250 = !DILocation(line: 488, column: 33, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16241, file: !1800, line: 487, column: 9)
!16252 = !DILocation(line: 488, column: 13, scope: !16251)
!16253 = !DILocation(line: 491, column: 24, scope: !16175)
!16254 = !DILocation(line: 491, column: 9, scope: !16175)
!16255 = !DILocation(line: 491, column: 29, scope: !16175)
!16256 = !DILocation(line: 492, column: 32, scope: !16175)
!16257 = !DILocation(line: 492, column: 24, scope: !16175)
!16258 = !DILocation(line: 492, column: 9, scope: !16175)
!16259 = !DILocation(line: 492, column: 29, scope: !16175)
!16260 = !DILocation(line: 493, column: 5, scope: !16175)
!16261 = !DILocation(line: 495, column: 9, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16118, file: !1800, line: 495, column: 9)
!16263 = !DILocation(line: 495, column: 9, scope: !16118)
!16264 = !DILocation(line: 497, column: 31, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16262, file: !1800, line: 496, column: 5)
!16266 = !DILocation(line: 497, column: 36, scope: !16265)
!16267 = !DILocation(line: 497, column: 54, scope: !16265)
!16268 = !DILocation(line: 497, column: 63, scope: !16265)
!16269 = !DILocation(line: 497, column: 81, scope: !16265)
!16270 = !DILocation(line: 497, column: 15, scope: !16265)
!16271 = !DILocation(line: 497, column: 13, scope: !16265)
!16272 = !DILocation(line: 498, column: 5, scope: !16265)
!16273 = !DILocation(line: 501, column: 13, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16262, file: !1800, line: 500, column: 5)
!16275 = !DILocation(line: 504, column: 12, scope: !16118)
!16276 = !DILocation(line: 504, column: 5, scope: !16118)
!16277 = !DILocation(line: 505, column: 1, scope: !16118)
!16278 = distinct !DISubprogram(name: "pin_is_task_output", scope: !1800, file: !1800, line: 232, type: !14346, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16279 = !DILocalVariable(name: "pin", arg: 1, scope: !16278, file: !1800, line: 232, type: !173)
!16280 = !DILocation(line: 232, column: 41, scope: !16278)
!16281 = !DILocation(line: 234, column: 26, scope: !16278)
!16282 = !DILocation(line: 234, column: 12, scope: !16278)
!16283 = !DILocation(line: 234, column: 31, scope: !16278)
!16284 = !DILocation(line: 234, column: 51, scope: !16278)
!16285 = !DILocation(line: 234, column: 34, scope: !16278)
!16286 = !DILocation(line: 0, scope: !16278)
!16287 = !DILocation(line: 234, column: 5, scope: !16278)
!16288 = distinct !DISubprogram(name: "gpiote_trigger_to_polarity", scope: !1800, file: !1800, line: 255, type: !16289, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16289 = !DISubroutineType(types: !16290)
!16290 = !{!1789, !1790}
!16291 = !DILocalVariable(name: "trigger", arg: 1, scope: !16288, file: !1800, line: 255, type: !1790)
!16292 = !DILocation(line: 255, column: 79, scope: !16288)
!16293 = !DILocation(line: 257, column: 35, scope: !16288)
!16294 = !DILocation(line: 257, column: 5, scope: !16288)
!16295 = distinct !DISubprogram(name: "nrf_gpiote_event_configure", scope: !1704, file: !1704, line: 547, type: !16296, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16296 = !DISubroutineType(types: !16297)
!16297 = !{null, !1746, !173, !173, !1789}
!16298 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16295, file: !1704, line: 547, type: !1746)
!16299 = !DILocation(line: 547, column: 73, scope: !16295)
!16300 = !DILocalVariable(name: "idx", arg: 2, scope: !16295, file: !1704, line: 548, type: !173)
!16301 = !DILocation(line: 548, column: 73, scope: !16295)
!16302 = !DILocalVariable(name: "pin", arg: 3, scope: !16295, file: !1704, line: 549, type: !173)
!16303 = !DILocation(line: 549, column: 73, scope: !16295)
!16304 = !DILocalVariable(name: "polarity", arg: 4, scope: !16295, file: !1704, line: 550, type: !1789)
!16305 = !DILocation(line: 550, column: 73, scope: !16295)
!16306 = !DILocation(line: 552, column: 3, scope: !16295)
!16307 = !DILocation(line: 552, column: 10, scope: !16295)
!16308 = !DILocation(line: 552, column: 17, scope: !16295)
!16309 = !DILocation(line: 552, column: 22, scope: !16295)
!16310 = !DILocation(line: 553, column: 27, scope: !16295)
!16311 = !DILocation(line: 553, column: 31, scope: !16295)
!16312 = !DILocation(line: 553, column: 58, scope: !16295)
!16313 = !DILocation(line: 554, column: 27, scope: !16295)
!16314 = !DILocation(line: 554, column: 36, scope: !16295)
!16315 = !DILocation(line: 554, column: 67, scope: !16295)
!16316 = !DILocation(line: 553, column: 88, scope: !16295)
!16317 = !DILocation(line: 553, column: 3, scope: !16295)
!16318 = !DILocation(line: 553, column: 10, scope: !16295)
!16319 = !DILocation(line: 553, column: 17, scope: !16295)
!16320 = !DILocation(line: 553, column: 22, scope: !16295)
!16321 = !DILocation(line: 555, column: 1, scope: !16295)
!16322 = distinct !DISubprogram(name: "nrf_bitmask_bit_set", scope: !15919, file: !15919, line: 88, type: !15920, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16323 = !DILocalVariable(name: "bit", arg: 1, scope: !16322, file: !15919, line: 88, type: !173)
!16324 = !DILocation(line: 88, column: 51, scope: !16322)
!16325 = !DILocalVariable(name: "p_mask", arg: 2, scope: !16322, file: !15919, line: 88, type: !102)
!16326 = !DILocation(line: 88, column: 63, scope: !16322)
!16327 = !DILocalVariable(name: "p_mask8", scope: !16322, file: !15919, line: 90, type: !718)
!16328 = !DILocation(line: 90, column: 15, scope: !16322)
!16329 = !DILocation(line: 90, column: 36, scope: !16322)
!16330 = !DILocalVariable(name: "byte_idx", scope: !16322, file: !15919, line: 91, type: !173)
!16331 = !DILocation(line: 91, column: 14, scope: !16322)
!16332 = !DILocation(line: 91, column: 25, scope: !16322)
!16333 = !DILocation(line: 92, column: 11, scope: !16322)
!16334 = !DILocation(line: 92, column: 9, scope: !16322)
!16335 = !DILocation(line: 93, column: 32, scope: !16322)
!16336 = !DILocation(line: 93, column: 29, scope: !16322)
!16337 = !DILocation(line: 93, column: 5, scope: !16322)
!16338 = !DILocation(line: 93, column: 13, scope: !16322)
!16339 = !DILocation(line: 93, column: 23, scope: !16322)
!16340 = !DILocation(line: 94, column: 1, scope: !16322)
!16341 = distinct !DISubprogram(name: "pin_handler_set", scope: !1800, file: !1800, line: 359, type: !16342, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16342 = !DISubroutineType(types: !16343)
!16343 = !{!11444, !1796, !1810, !102}
!16344 = !DILocalVariable(name: "pin", arg: 1, scope: !16341, file: !1800, line: 359, type: !1796)
!16345 = !DILocation(line: 359, column: 67, scope: !16341)
!16346 = !DILocalVariable(name: "handler", arg: 2, scope: !16341, file: !1800, line: 360, type: !1810)
!16347 = !DILocation(line: 360, column: 67, scope: !16341)
!16348 = !DILocalVariable(name: "p_context", arg: 3, scope: !16341, file: !1800, line: 361, type: !102)
!16349 = !DILocation(line: 361, column: 67, scope: !16341)
!16350 = !DILocalVariable(name: "err", scope: !16341, file: !1800, line: 363, type: !11444)
!16351 = !DILocation(line: 363, column: 16, scope: !16341)
!16352 = !DILocalVariable(name: "handler_id", scope: !16341, file: !1800, line: 364, type: !250)
!16353 = !DILocation(line: 364, column: 13, scope: !16341)
!16354 = !DILocation(line: 366, column: 21, scope: !16341)
!16355 = !DILocation(line: 366, column: 5, scope: !16341)
!16356 = !DILocation(line: 367, column: 10, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16341, file: !1800, line: 367, column: 9)
!16358 = !DILocation(line: 367, column: 9, scope: !16341)
!16359 = !DILocation(line: 369, column: 9, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16357, file: !1800, line: 368, column: 5)
!16361 = !DILocation(line: 372, column: 31, scope: !16341)
!16362 = !DILocation(line: 372, column: 40, scope: !16341)
!16363 = !DILocation(line: 372, column: 18, scope: !16341)
!16364 = !DILocation(line: 372, column: 16, scope: !16341)
!16365 = !DILocation(line: 374, column: 9, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16341, file: !1800, line: 374, column: 9)
!16367 = !DILocation(line: 374, column: 20, scope: !16366)
!16368 = !DILocation(line: 374, column: 9, scope: !16341)
!16369 = !DILocalVariable(name: "id", scope: !16370, file: !1800, line: 376, type: !156)
!16370 = distinct !DILexicalBlock(scope: !16366, file: !1800, line: 375, column: 5)
!16371 = !DILocation(line: 376, column: 17, scope: !16370)
!16372 = !DILocation(line: 378, column: 15, scope: !16370)
!16373 = !DILocation(line: 378, column: 13, scope: !16370)
!16374 = !DILocation(line: 379, column: 13, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16370, file: !1800, line: 379, column: 13)
!16376 = !DILocation(line: 379, column: 17, scope: !16375)
!16377 = !DILocation(line: 379, column: 13, scope: !16370)
!16378 = !DILocation(line: 381, column: 20, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16375, file: !1800, line: 380, column: 9)
!16380 = !DILocation(line: 381, column: 13, scope: !16379)
!16381 = !DILocation(line: 383, column: 31, scope: !16370)
!16382 = !DILocation(line: 383, column: 22, scope: !16370)
!16383 = !DILocation(line: 383, column: 20, scope: !16370)
!16384 = !DILocation(line: 384, column: 5, scope: !16370)
!16385 = !DILocation(line: 386, column: 41, scope: !16341)
!16386 = !DILocation(line: 386, column: 19, scope: !16341)
!16387 = !DILocation(line: 386, column: 5, scope: !16341)
!16388 = !DILocation(line: 386, column: 31, scope: !16341)
!16389 = !DILocation(line: 386, column: 39, scope: !16341)
!16390 = !DILocation(line: 387, column: 43, scope: !16341)
!16391 = !DILocation(line: 387, column: 19, scope: !16341)
!16392 = !DILocation(line: 387, column: 5, scope: !16341)
!16393 = !DILocation(line: 387, column: 31, scope: !16341)
!16394 = !DILocation(line: 387, column: 41, scope: !16341)
!16395 = !DILocation(line: 388, column: 28, scope: !16341)
!16396 = !DILocation(line: 388, column: 20, scope: !16341)
!16397 = !DILocation(line: 388, column: 5, scope: !16341)
!16398 = !DILocation(line: 388, column: 25, scope: !16341)
!16399 = !DILocation(line: 390, column: 5, scope: !16341)
!16400 = !DILocation(line: 391, column: 1, scope: !16341)
!16401 = distinct !DISubprogram(name: "find_handler", scope: !1800, file: !1800, line: 345, type: !16402, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16402 = !DISubroutineType(types: !16403)
!16403 = !{!250, !1810, !102}
!16404 = !DILocalVariable(name: "handler", arg: 1, scope: !16401, file: !1800, line: 345, type: !1810)
!16405 = !DILocation(line: 345, column: 61, scope: !16401)
!16406 = !DILocalVariable(name: "p_context", arg: 2, scope: !16401, file: !1800, line: 345, type: !102)
!16407 = !DILocation(line: 345, column: 77, scope: !16401)
!16408 = !DILocalVariable(name: "i", scope: !16409, file: !1800, line: 347, type: !173)
!16409 = distinct !DILexicalBlock(scope: !16401, file: !1800, line: 347, column: 5)
!16410 = !DILocation(line: 347, column: 19, scope: !16409)
!16411 = !DILocation(line: 347, column: 10, scope: !16409)
!16412 = !DILocation(line: 347, column: 26, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16409, file: !1800, line: 347, column: 5)
!16414 = !DILocation(line: 347, column: 28, scope: !16413)
!16415 = !DILocation(line: 347, column: 5, scope: !16409)
!16416 = !DILocation(line: 349, column: 28, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16418, file: !1800, line: 349, column: 13)
!16418 = distinct !DILexicalBlock(scope: !16413, file: !1800, line: 348, column: 5)
!16419 = !DILocation(line: 349, column: 14, scope: !16417)
!16420 = !DILocation(line: 349, column: 31, scope: !16417)
!16421 = !DILocation(line: 349, column: 42, scope: !16417)
!16422 = !DILocation(line: 349, column: 39, scope: !16417)
!16423 = !DILocation(line: 349, column: 51, scope: !16417)
!16424 = !DILocation(line: 349, column: 69, scope: !16417)
!16425 = !DILocation(line: 349, column: 55, scope: !16417)
!16426 = !DILocation(line: 349, column: 72, scope: !16417)
!16427 = !DILocation(line: 349, column: 85, scope: !16417)
!16428 = !DILocation(line: 349, column: 82, scope: !16417)
!16429 = !DILocation(line: 349, column: 13, scope: !16418)
!16430 = !DILocation(line: 351, column: 20, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16417, file: !1800, line: 350, column: 9)
!16432 = !DILocation(line: 351, column: 13, scope: !16431)
!16433 = !DILocation(line: 353, column: 5, scope: !16418)
!16434 = !DILocation(line: 347, column: 71, scope: !16413)
!16435 = !DILocation(line: 347, column: 5, scope: !16413)
!16436 = distinct !{!16436, !16415, !16437}
!16437 = !DILocation(line: 353, column: 5, scope: !16409)
!16438 = !DILocation(line: 355, column: 5, scope: !16401)
!16439 = !DILocation(line: 356, column: 1, scope: !16401)
!16440 = distinct !DISubprogram(name: "nrfx_gpiote_output_configure", scope: !1800, file: !1800, line: 507, type: !16441, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16441 = !DISubroutineType(types: !16442)
!16442 = !{!11444, !1796, !16443, !16451}
!16443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16444, size: 32)
!16444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16445)
!16445 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_output_config_t", file: !1044, line: 99, baseType: !16446)
!16446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 92, size: 96, elements: !16447)
!16447 = !{!16448, !16449, !16450}
!16448 = !DIDerivedType(tag: DW_TAG_member, name: "drive", scope: !16446, file: !1044, line: 94, baseType: !12164, size: 32)
!16449 = !DIDerivedType(tag: DW_TAG_member, name: "input_connect", scope: !16446, file: !1044, line: 95, baseType: !12183, size: 32, offset: 32)
!16450 = !DIDerivedType(tag: DW_TAG_member, name: "pull", scope: !16446, file: !1044, line: 96, baseType: !12185, size: 32, offset: 64)
!16451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16452, size: 32)
!16452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16453)
!16453 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_task_config_t", file: !1044, line: 89, baseType: !16454)
!16454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 79, size: 96, elements: !16455)
!16455 = !{!16456, !16457, !16458}
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "task_ch", scope: !16454, file: !1044, line: 81, baseType: !156, size: 8)
!16457 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !16454, file: !1044, line: 85, baseType: !1789, size: 32, offset: 32)
!16458 = !DIDerivedType(tag: DW_TAG_member, name: "init_val", scope: !16454, file: !1044, line: 88, baseType: !16459, size: 32, offset: 64)
!16459 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrf_gpiote_outinit_t", file: !1704, line: 78, baseType: !1710)
!16460 = !DILocalVariable(name: "pin", arg: 1, scope: !16440, file: !1800, line: 507, type: !1796)
!16461 = !DILocation(line: 507, column: 77, scope: !16440)
!16462 = !DILocalVariable(name: "p_config", arg: 2, scope: !16440, file: !1800, line: 508, type: !16443)
!16463 = !DILocation(line: 508, column: 77, scope: !16440)
!16464 = !DILocalVariable(name: "p_task_config", arg: 3, scope: !16440, file: !1800, line: 509, type: !16451)
!16465 = !DILocation(line: 509, column: 77, scope: !16440)
!16466 = !DILocation(line: 511, column: 9, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16440, file: !1800, line: 511, column: 9)
!16468 = !DILocation(line: 511, column: 9, scope: !16440)
!16469 = !DILocation(line: 514, column: 26, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16471, file: !1800, line: 514, column: 13)
!16471 = distinct !DILexicalBlock(scope: !16467, file: !1800, line: 512, column: 5)
!16472 = !DILocation(line: 514, column: 13, scope: !16470)
!16473 = !DILocation(line: 514, column: 31, scope: !16470)
!16474 = !DILocation(line: 514, column: 51, scope: !16470)
!16475 = !DILocation(line: 514, column: 34, scope: !16470)
!16476 = !DILocation(line: 514, column: 13, scope: !16471)
!16477 = !DILocation(line: 516, column: 13, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16470, file: !1800, line: 515, column: 9)
!16479 = !DILocation(line: 521, column: 29, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16471, file: !1800, line: 521, column: 13)
!16481 = !DILocation(line: 521, column: 13, scope: !16480)
!16482 = !DILocation(line: 521, column: 34, scope: !16480)
!16483 = !DILocation(line: 521, column: 38, scope: !16480)
!16484 = !DILocation(line: 521, column: 48, scope: !16480)
!16485 = !DILocation(line: 521, column: 62, scope: !16480)
!16486 = !DILocation(line: 521, column: 13, scope: !16471)
!16487 = !DILocation(line: 523, column: 13, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16480, file: !1800, line: 522, column: 9)
!16489 = !DILocalVariable(name: "dir", scope: !16471, file: !1800, line: 526, type: !1158)
!16490 = !DILocation(line: 526, column: 28, scope: !16471)
!16491 = !DILocation(line: 528, column: 30, scope: !16471)
!16492 = !DILocation(line: 528, column: 42, scope: !16471)
!16493 = !DILocation(line: 528, column: 52, scope: !16471)
!16494 = !DILocation(line: 528, column: 68, scope: !16471)
!16495 = !DILocation(line: 528, column: 78, scope: !16471)
!16496 = !DILocation(line: 529, column: 31, scope: !16471)
!16497 = !DILocation(line: 529, column: 41, scope: !16471)
!16498 = !DILocation(line: 528, column: 9, scope: !16471)
!16499 = !DILocation(line: 531, column: 24, scope: !16471)
!16500 = !DILocation(line: 531, column: 9, scope: !16471)
!16501 = !DILocation(line: 531, column: 29, scope: !16471)
!16502 = !DILocation(line: 532, column: 5, scope: !16471)
!16503 = !DILocation(line: 534, column: 9, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16440, file: !1800, line: 534, column: 9)
!16505 = !DILocation(line: 534, column: 9, scope: !16440)
!16506 = !DILocation(line: 536, column: 26, scope: !16507)
!16507 = distinct !DILexicalBlock(scope: !16508, file: !1800, line: 536, column: 13)
!16508 = distinct !DILexicalBlock(scope: !16504, file: !1800, line: 535, column: 5)
!16509 = !DILocation(line: 536, column: 13, scope: !16507)
!16510 = !DILocation(line: 536, column: 13, scope: !16508)
!16511 = !DILocation(line: 538, column: 13, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16507, file: !1800, line: 537, column: 9)
!16513 = !DILocalVariable(name: "ch", scope: !16508, file: !1800, line: 541, type: !173)
!16514 = !DILocation(line: 541, column: 18, scope: !16508)
!16515 = !DILocation(line: 541, column: 23, scope: !16508)
!16516 = !DILocation(line: 541, column: 38, scope: !16508)
!16517 = !DILocation(line: 543, column: 43, scope: !16508)
!16518 = !DILocation(line: 543, column: 9, scope: !16508)
!16519 = !DILocation(line: 544, column: 24, scope: !16508)
!16520 = !DILocation(line: 544, column: 9, scope: !16508)
!16521 = !DILocation(line: 544, column: 29, scope: !16508)
!16522 = !DILocation(line: 545, column: 13, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16508, file: !1800, line: 545, column: 13)
!16524 = !DILocation(line: 545, column: 28, scope: !16523)
!16525 = !DILocation(line: 545, column: 37, scope: !16523)
!16526 = !DILocation(line: 545, column: 13, scope: !16508)
!16527 = !DILocation(line: 547, column: 51, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16523, file: !1800, line: 546, column: 9)
!16529 = !DILocation(line: 547, column: 55, scope: !16528)
!16530 = !DILocation(line: 548, column: 39, scope: !16528)
!16531 = !DILocation(line: 548, column: 54, scope: !16528)
!16532 = !DILocation(line: 549, column: 39, scope: !16528)
!16533 = !DILocation(line: 549, column: 54, scope: !16528)
!16534 = !DILocation(line: 547, column: 13, scope: !16528)
!16535 = !DILocation(line: 550, column: 36, scope: !16528)
!16536 = !DILocation(line: 550, column: 28, scope: !16528)
!16537 = !DILocation(line: 550, column: 13, scope: !16528)
!16538 = !DILocation(line: 550, column: 33, scope: !16528)
!16539 = !DILocation(line: 551, column: 9, scope: !16528)
!16540 = !DILocation(line: 552, column: 5, scope: !16508)
!16541 = !DILocation(line: 554, column: 5, scope: !16440)
!16542 = !DILocation(line: 555, column: 1, scope: !16440)
!16543 = distinct !DISubprogram(name: "pin_has_trigger", scope: !1800, file: !1800, line: 208, type: !14346, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16544 = !DILocalVariable(name: "pin", arg: 1, scope: !16543, file: !1800, line: 208, type: !173)
!16545 = !DILocation(line: 208, column: 38, scope: !16543)
!16546 = !DILocation(line: 210, column: 12, scope: !16543)
!16547 = !DILocation(line: 210, column: 56, scope: !16543)
!16548 = !DILocation(line: 210, column: 5, scope: !16543)
!16549 = distinct !DISubprogram(name: "nrf_gpiote_task_configure", scope: !1704, file: !1704, line: 592, type: !16550, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16550 = !DISubroutineType(types: !16551)
!16551 = !{null, !1746, !173, !173, !1789, !16459}
!16552 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16549, file: !1704, line: 592, type: !1746)
!16553 = !DILocation(line: 592, column: 72, scope: !16549)
!16554 = !DILocalVariable(name: "idx", arg: 2, scope: !16549, file: !1704, line: 593, type: !173)
!16555 = !DILocation(line: 593, column: 72, scope: !16549)
!16556 = !DILocalVariable(name: "pin", arg: 3, scope: !16549, file: !1704, line: 594, type: !173)
!16557 = !DILocation(line: 594, column: 72, scope: !16549)
!16558 = !DILocalVariable(name: "polarity", arg: 4, scope: !16549, file: !1704, line: 595, type: !1789)
!16559 = !DILocation(line: 595, column: 72, scope: !16549)
!16560 = !DILocalVariable(name: "init_val", arg: 5, scope: !16549, file: !1704, line: 596, type: !16459)
!16561 = !DILocation(line: 596, column: 72, scope: !16549)
!16562 = !DILocation(line: 598, column: 3, scope: !16549)
!16563 = !DILocation(line: 598, column: 10, scope: !16549)
!16564 = !DILocation(line: 598, column: 17, scope: !16549)
!16565 = !DILocation(line: 598, column: 22, scope: !16549)
!16566 = !DILocation(line: 602, column: 27, scope: !16549)
!16567 = !DILocation(line: 602, column: 31, scope: !16549)
!16568 = !DILocation(line: 602, column: 58, scope: !16549)
!16569 = !DILocation(line: 603, column: 27, scope: !16549)
!16570 = !DILocation(line: 603, column: 36, scope: !16549)
!16571 = !DILocation(line: 603, column: 67, scope: !16549)
!16572 = !DILocation(line: 602, column: 88, scope: !16549)
!16573 = !DILocation(line: 604, column: 27, scope: !16549)
!16574 = !DILocation(line: 604, column: 36, scope: !16549)
!16575 = !DILocation(line: 604, column: 66, scope: !16549)
!16576 = !DILocation(line: 603, column: 97, scope: !16549)
!16577 = !DILocation(line: 602, column: 3, scope: !16549)
!16578 = !DILocation(line: 602, column: 10, scope: !16549)
!16579 = !DILocation(line: 602, column: 17, scope: !16549)
!16580 = !DILocation(line: 602, column: 22, scope: !16549)
!16581 = !DILocation(line: 605, column: 1, scope: !16549)
!16582 = distinct !DISubprogram(name: "nrfx_gpiote_global_callback_set", scope: !1800, file: !1800, line: 557, type: !16583, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16583 = !DISubroutineType(types: !16584)
!16584 = !{null, !1810, !102}
!16585 = !DILocalVariable(name: "handler", arg: 1, scope: !16582, file: !1800, line: 557, type: !1810)
!16586 = !DILocation(line: 557, column: 70, scope: !16582)
!16587 = !DILocalVariable(name: "p_context", arg: 2, scope: !16582, file: !1800, line: 557, type: !102)
!16588 = !DILocation(line: 557, column: 86, scope: !16582)
!16589 = !DILocation(line: 559, column: 35, scope: !16582)
!16590 = !DILocation(line: 559, column: 33, scope: !16582)
!16591 = !DILocation(line: 560, column: 37, scope: !16582)
!16592 = !DILocation(line: 560, column: 35, scope: !16582)
!16593 = !DILocation(line: 561, column: 1, scope: !16582)
!16594 = distinct !DISubprogram(name: "nrfx_gpiote_channel_get", scope: !1800, file: !1800, line: 563, type: !16595, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16595 = !DISubroutineType(types: !16596)
!16596 = !{!11444, !1796, !718}
!16597 = !DILocalVariable(name: "pin", arg: 1, scope: !16594, file: !1800, line: 563, type: !1796)
!16598 = !DILocation(line: 563, column: 54, scope: !16594)
!16599 = !DILocalVariable(name: "p_channel", arg: 2, scope: !16594, file: !1800, line: 563, type: !718)
!16600 = !DILocation(line: 563, column: 68, scope: !16594)
!16601 = !DILocation(line: 567, column: 26, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16594, file: !1800, line: 567, column: 9)
!16603 = !DILocation(line: 567, column: 9, scope: !16602)
!16604 = !DILocation(line: 567, column: 9, scope: !16594)
!16605 = !DILocation(line: 569, column: 22, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16602, file: !1800, line: 568, column: 5)
!16607 = !DILocation(line: 569, column: 10, scope: !16606)
!16608 = !DILocation(line: 569, column: 20, scope: !16606)
!16609 = !DILocation(line: 570, column: 9, scope: !16606)
!16610 = !DILocation(line: 574, column: 9, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16602, file: !1800, line: 573, column: 5)
!16612 = !DILocation(line: 576, column: 1, scope: !16594)
!16613 = distinct !DISubprogram(name: "nrfx_gpiote_init", scope: !1800, file: !1800, line: 591, type: !16614, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16614 = !DISubroutineType(types: !16615)
!16615 = !{!11444, !156}
!16616 = !DILocalVariable(name: "interrupt_priority", arg: 1, scope: !16613, file: !1800, line: 591, type: !156)
!16617 = !DILocation(line: 591, column: 37, scope: !16613)
!16618 = !DILocalVariable(name: "err_code", scope: !16613, file: !1800, line: 593, type: !11444)
!16619 = !DILocation(line: 593, column: 16, scope: !16613)
!16620 = !DILocation(line: 595, column: 14, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16613, file: !1800, line: 595, column: 9)
!16622 = !DILocation(line: 595, column: 20, scope: !16621)
!16623 = !DILocation(line: 595, column: 9, scope: !16613)
!16624 = !DILocation(line: 597, column: 18, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16621, file: !1800, line: 596, column: 5)
!16626 = !DILocation(line: 598, column: 9, scope: !16625)
!16627 = !DILocation(line: 598, column: 9, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16629, file: !1800, line: 598, column: 9)
!16629 = distinct !DILexicalBlock(scope: !16630, file: !1800, line: 598, column: 9)
!16630 = distinct !DILexicalBlock(scope: !16625, file: !1800, line: 598, column: 9)
!16631 = !DILocation(line: 601, column: 16, scope: !16625)
!16632 = !DILocation(line: 601, column: 9, scope: !16625)
!16633 = !DILocation(line: 604, column: 5, scope: !16613)
!16634 = !DILocation(line: 607, column: 5, scope: !16613)
!16635 = !DILocation(line: 609, column: 5, scope: !16613)
!16636 = !DILocation(line: 610, column: 5, scope: !16613)
!16637 = !DILocation(line: 611, column: 16, scope: !16613)
!16638 = !DILocation(line: 612, column: 33, scope: !16613)
!16639 = !DILocation(line: 614, column: 14, scope: !16613)
!16640 = !DILocation(line: 615, column: 5, scope: !16613)
!16641 = !DILocation(line: 615, column: 5, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16643, file: !1800, line: 615, column: 5)
!16643 = distinct !DILexicalBlock(scope: !16644, file: !1800, line: 615, column: 5)
!16644 = distinct !DILexicalBlock(scope: !16613, file: !1800, line: 615, column: 5)
!16645 = !DILocation(line: 616, column: 12, scope: !16613)
!16646 = !DILocation(line: 616, column: 5, scope: !16613)
!16647 = !DILocation(line: 617, column: 1, scope: !16613)
!16648 = distinct !DISubprogram(name: "nrfx_get_irq_number", scope: !1715, file: !1715, line: 375, type: !15352, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16649 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16648, file: !1715, line: 375, type: !13)
!16650 = !DILocation(line: 375, column: 62, scope: !16648)
!16651 = !DILocation(line: 377, column: 23, scope: !16648)
!16652 = !DILocation(line: 377, column: 12, scope: !16648)
!16653 = !DILocation(line: 377, column: 5, scope: !16648)
!16654 = distinct !DISubprogram(name: "nrf_gpiote_event_clear", scope: !1704, file: !1704, line: 482, type: !16655, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16655 = !DISubroutineType(types: !16656)
!16656 = !{null, !1746, !1774}
!16657 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16654, file: !1704, line: 482, type: !1746)
!16658 = !DILocation(line: 482, column: 65, scope: !16654)
!16659 = !DILocalVariable(name: "event", arg: 2, scope: !16654, file: !1704, line: 482, type: !1774)
!16660 = !DILocation(line: 482, column: 91, scope: !16654)
!16661 = !DILocation(line: 484, column: 57, scope: !16654)
!16662 = !DILocation(line: 484, column: 64, scope: !16654)
!16663 = !DILocation(line: 484, column: 28, scope: !16654)
!16664 = !DILocation(line: 484, column: 7, scope: !16654)
!16665 = !DILocation(line: 484, column: 72, scope: !16654)
!16666 = !DILocation(line: 485, column: 61, scope: !16654)
!16667 = !DILocation(line: 485, column: 68, scope: !16654)
!16668 = !DILocation(line: 485, column: 32, scope: !16654)
!16669 = !DILocation(line: 485, column: 24, scope: !16654)
!16670 = !DILocation(line: 485, column: 5, scope: !16654)
!16671 = !DILocation(line: 486, column: 1, scope: !16654)
!16672 = distinct !DISubprogram(name: "nrf_gpiote_int_enable", scope: !1704, file: !1704, line: 494, type: !15907, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16673 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16672, file: !1704, line: 494, type: !1746)
!16674 = !DILocation(line: 494, column: 64, scope: !16672)
!16675 = !DILocalVariable(name: "mask", arg: 2, scope: !16672, file: !1704, line: 494, type: !173)
!16676 = !DILocation(line: 494, column: 80, scope: !16672)
!16677 = !DILocation(line: 496, column: 23, scope: !16672)
!16678 = !DILocation(line: 496, column: 5, scope: !16672)
!16679 = !DILocation(line: 496, column: 12, scope: !16672)
!16680 = !DILocation(line: 496, column: 21, scope: !16672)
!16681 = !DILocation(line: 497, column: 1, scope: !16672)
!16682 = distinct !DISubprogram(name: "nrf_gpiote_event_address_get", scope: !1704, file: !1704, line: 488, type: !16683, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!173, !16685, !1774}
!16685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16686, size: 32)
!16686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!16687 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16682, file: !1704, line: 488, type: !16685)
!16688 = !DILocation(line: 488, column: 81, scope: !16682)
!16689 = !DILocalVariable(name: "event", arg: 2, scope: !16682, file: !1704, line: 489, type: !1774)
!16690 = !DILocation(line: 489, column: 81, scope: !16682)
!16691 = !DILocation(line: 491, column: 23, scope: !16682)
!16692 = !DILocation(line: 491, column: 13, scope: !16682)
!16693 = !DILocation(line: 491, column: 31, scope: !16682)
!16694 = !DILocation(line: 491, column: 29, scope: !16682)
!16695 = !DILocation(line: 491, column: 5, scope: !16682)
!16696 = distinct !DISubprogram(name: "nrf_event_readback", scope: !11940, file: !11940, line: 63, type: !8756, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16697 = !DILocalVariable(name: "p_event_reg", arg: 1, scope: !16696, file: !11940, line: 63, type: !102)
!16698 = !DILocation(line: 63, column: 50, scope: !16696)
!16699 = !DILocation(line: 68, column: 11, scope: !16696)
!16700 = !DILocation(line: 70, column: 1, scope: !16696)
!16701 = distinct !DISubprogram(name: "nrfx_gpiote_is_init", scope: !1800, file: !1800, line: 620, type: !3163, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16702 = !DILocation(line: 622, column: 18, scope: !16701)
!16703 = !DILocation(line: 622, column: 24, scope: !16701)
!16704 = !DILocation(line: 622, column: 12, scope: !16701)
!16705 = !DILocation(line: 622, column: 5, scope: !16701)
!16706 = distinct !DISubprogram(name: "nrfx_gpiote_uninit", scope: !1800, file: !1800, line: 626, type: !253, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16707 = !DILocalVariable(name: "i", scope: !16706, file: !1800, line: 630, type: !173)
!16708 = !DILocation(line: 630, column: 14, scope: !16706)
!16709 = !DILocation(line: 632, column: 12, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16706, file: !1800, line: 632, column: 5)
!16711 = !DILocation(line: 632, column: 10, scope: !16710)
!16712 = !DILocation(line: 632, column: 17, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16710, file: !1800, line: 632, column: 5)
!16714 = !DILocation(line: 632, column: 19, scope: !16713)
!16715 = !DILocation(line: 632, column: 5, scope: !16710)
!16716 = !DILocation(line: 634, column: 40, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16718, file: !1800, line: 634, column: 13)
!16718 = distinct !DILexicalBlock(scope: !16713, file: !1800, line: 633, column: 5)
!16719 = !DILocation(line: 634, column: 13, scope: !16717)
!16720 = !DILocation(line: 634, column: 43, scope: !16717)
!16721 = !DILocation(line: 634, column: 57, scope: !16717)
!16722 = !DILocation(line: 634, column: 46, scope: !16717)
!16723 = !DILocation(line: 634, column: 13, scope: !16718)
!16724 = !DILocation(line: 636, column: 32, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16726, file: !1800, line: 636, column: 17)
!16726 = distinct !DILexicalBlock(scope: !16717, file: !1800, line: 635, column: 9)
!16727 = !DILocation(line: 636, column: 17, scope: !16725)
!16728 = !DILocation(line: 636, column: 35, scope: !16725)
!16729 = !DILocation(line: 636, column: 17, scope: !16726)
!16730 = !DILocation(line: 638, column: 32, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16725, file: !1800, line: 637, column: 13)
!16732 = !DILocation(line: 638, column: 17, scope: !16731)
!16733 = !DILocation(line: 638, column: 35, scope: !16731)
!16734 = !DILocation(line: 639, column: 37, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16731, file: !1800, line: 639, column: 21)
!16736 = !DILocation(line: 639, column: 21, scope: !16735)
!16737 = !DILocation(line: 639, column: 21, scope: !16731)
!16738 = !DILocation(line: 641, column: 43, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16735, file: !1800, line: 640, column: 17)
!16740 = !DILocation(line: 641, column: 21, scope: !16739)
!16741 = !DILocation(line: 642, column: 17, scope: !16739)
!16742 = !DILocation(line: 645, column: 44, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16735, file: !1800, line: 644, column: 17)
!16744 = !DILocation(line: 645, column: 21, scope: !16743)
!16745 = !DILocation(line: 647, column: 13, scope: !16731)
!16746 = !DILocation(line: 650, column: 40, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16725, file: !1800, line: 649, column: 13)
!16748 = !DILocation(line: 650, column: 17, scope: !16747)
!16749 = !DILocation(line: 652, column: 9, scope: !16726)
!16750 = !DILocation(line: 653, column: 5, scope: !16718)
!16751 = !DILocation(line: 632, column: 38, scope: !16713)
!16752 = !DILocation(line: 632, column: 5, scope: !16713)
!16753 = distinct !{!16753, !16715, !16754}
!16754 = !DILocation(line: 653, column: 5, scope: !16710)
!16755 = !DILocation(line: 654, column: 16, scope: !16706)
!16756 = !DILocation(line: 655, column: 5, scope: !16706)
!16757 = !DILocation(line: 655, column: 5, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16759, file: !1800, line: 655, column: 5)
!16759 = distinct !DILexicalBlock(scope: !16760, file: !1800, line: 655, column: 5)
!16760 = distinct !DILexicalBlock(scope: !16706, file: !1800, line: 655, column: 5)
!16761 = !DILocation(line: 656, column: 1, scope: !16706)
!16762 = distinct !DISubprogram(name: "nrf_gpio_pin_present_check", scope: !1054, file: !1054, line: 989, type: !14346, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16763 = !DILocalVariable(name: "pin_number", arg: 1, scope: !16762, file: !1054, line: 989, type: !173)
!16764 = !DILocation(line: 989, column: 60, scope: !16762)
!16765 = !DILocalVariable(name: "port", scope: !16762, file: !1054, line: 991, type: !173)
!16766 = !DILocation(line: 991, column: 14, scope: !16762)
!16767 = !DILocation(line: 991, column: 21, scope: !16762)
!16768 = !DILocation(line: 991, column: 32, scope: !16762)
!16769 = !DILocalVariable(name: "mask", scope: !16762, file: !1054, line: 992, type: !173)
!16770 = !DILocation(line: 992, column: 14, scope: !16762)
!16771 = !DILocation(line: 994, column: 13, scope: !16762)
!16772 = !DILocation(line: 994, column: 5, scope: !16762)
!16773 = !DILocation(line: 998, column: 18, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16762, file: !1054, line: 995, column: 5)
!16775 = !DILocation(line: 1010, column: 13, scope: !16774)
!16776 = !DILocation(line: 1019, column: 16, scope: !16762)
!16777 = !DILocation(line: 1021, column: 13, scope: !16762)
!16778 = !DILocation(line: 1021, column: 28, scope: !16762)
!16779 = !DILocation(line: 1021, column: 25, scope: !16762)
!16780 = !DILocation(line: 1021, column: 18, scope: !16762)
!16781 = !DILocation(line: 1021, column: 12, scope: !16762)
!16782 = !DILocation(line: 1021, column: 5, scope: !16762)
!16783 = distinct !DISubprogram(name: "nrfx_gpiote_in_uninit", scope: !1800, file: !1800, line: 1026, type: !15775, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16784 = !DILocalVariable(name: "pin", arg: 1, scope: !16783, file: !1800, line: 1026, type: !1796)
!16785 = !DILocation(line: 1026, column: 46, scope: !16783)
!16786 = !DILocalVariable(name: "err", scope: !16783, file: !1800, line: 1030, type: !11444)
!16787 = !DILocation(line: 1030, column: 16, scope: !16783)
!16788 = !DILocalVariable(name: "ch", scope: !16783, file: !1800, line: 1031, type: !156)
!16789 = !DILocation(line: 1031, column: 13, scope: !16783)
!16790 = !DILocation(line: 1033, column: 21, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16783, file: !1800, line: 1033, column: 9)
!16792 = !DILocation(line: 1033, column: 10, scope: !16791)
!16793 = !DILocation(line: 1033, column: 9, scope: !16783)
!16794 = !DILocation(line: 1035, column: 9, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16791, file: !1800, line: 1034, column: 5)
!16796 = !DILocation(line: 1038, column: 27, scope: !16783)
!16797 = !DILocation(line: 1038, column: 10, scope: !16783)
!16798 = !DILocation(line: 1038, column: 45, scope: !16783)
!16799 = !DILocation(line: 1038, column: 34, scope: !16783)
!16800 = !DILocation(line: 1038, column: 8, scope: !16783)
!16801 = !DILocation(line: 1040, column: 24, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16783, file: !1800, line: 1040, column: 9)
!16803 = !DILocation(line: 1040, column: 9, scope: !16802)
!16804 = !DILocation(line: 1040, column: 29, scope: !16802)
!16805 = !DILocation(line: 1040, column: 9, scope: !16783)
!16806 = !DILocation(line: 1042, column: 36, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16802, file: !1800, line: 1041, column: 5)
!16808 = !DILocation(line: 1042, column: 9, scope: !16807)
!16809 = !DILocation(line: 1043, column: 24, scope: !16807)
!16810 = !DILocation(line: 1043, column: 9, scope: !16807)
!16811 = !DILocation(line: 1043, column: 29, scope: !16807)
!16812 = !DILocation(line: 1044, column: 5, scope: !16807)
!16813 = !DILocation(line: 1047, column: 38, scope: !16814)
!16814 = distinct !DILexicalBlock(scope: !16802, file: !1800, line: 1046, column: 5)
!16815 = !DILocation(line: 1047, column: 15, scope: !16814)
!16816 = !DILocation(line: 1047, column: 13, scope: !16814)
!16817 = !DILocation(line: 1051, column: 9, scope: !16818)
!16818 = distinct !DILexicalBlock(scope: !16783, file: !1800, line: 1051, column: 9)
!16819 = !DILocation(line: 1051, column: 12, scope: !16818)
!16820 = !DILocation(line: 1051, column: 9, scope: !16783)
!16821 = !DILocation(line: 1053, column: 34, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16818, file: !1800, line: 1052, column: 5)
!16823 = !DILocation(line: 1053, column: 9, scope: !16822)
!16824 = !DILocation(line: 1054, column: 5, scope: !16822)
!16825 = !DILocation(line: 1056, column: 11, scope: !16783)
!16826 = !DILocation(line: 1057, column: 1, scope: !16783)
!16827 = distinct !DISubprogram(name: "nrfx_gpiote_out_uninit", scope: !1800, file: !1800, line: 733, type: !15775, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16828 = !DILocalVariable(name: "pin", arg: 1, scope: !16827, file: !1800, line: 733, type: !1796)
!16829 = !DILocation(line: 733, column: 47, scope: !16827)
!16830 = !DILocalVariable(name: "ch", scope: !16827, file: !1800, line: 738, type: !156)
!16831 = !DILocation(line: 738, column: 13, scope: !16827)
!16832 = !DILocation(line: 738, column: 35, scope: !16827)
!16833 = !DILocation(line: 738, column: 18, scope: !16827)
!16834 = !DILocation(line: 738, column: 53, scope: !16827)
!16835 = !DILocation(line: 738, column: 42, scope: !16827)
!16836 = !DILocalVariable(name: "err", scope: !16827, file: !1800, line: 740, type: !11444)
!16837 = !DILocation(line: 740, column: 16, scope: !16827)
!16838 = !DILocation(line: 740, column: 45, scope: !16827)
!16839 = !DILocation(line: 740, column: 22, scope: !16827)
!16840 = !DILocation(line: 743, column: 9, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16827, file: !1800, line: 743, column: 9)
!16842 = !DILocation(line: 743, column: 12, scope: !16841)
!16843 = !DILocation(line: 743, column: 9, scope: !16827)
!16844 = !DILocation(line: 745, column: 34, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16841, file: !1800, line: 744, column: 5)
!16846 = !DILocation(line: 745, column: 9, scope: !16845)
!16847 = !DILocation(line: 746, column: 5, scope: !16845)
!16848 = !DILocation(line: 748, column: 11, scope: !16827)
!16849 = !DILocation(line: 749, column: 1, scope: !16827)
!16850 = distinct !DISubprogram(name: "nrfx_gpiote_channel_free", scope: !1800, file: !1800, line: 658, type: !16614, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16851 = !DILocalVariable(name: "channel", arg: 1, scope: !16850, file: !1800, line: 658, type: !156)
!16852 = !DILocation(line: 658, column: 45, scope: !16850)
!16853 = !DILocation(line: 660, column: 60, scope: !16850)
!16854 = !DILocation(line: 660, column: 12, scope: !16850)
!16855 = !DILocation(line: 660, column: 5, scope: !16850)
!16856 = distinct !DISubprogram(name: "nrfx_gpiote_channel_alloc", scope: !1800, file: !1800, line: 663, type: !16857, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16857 = !DISubroutineType(types: !16858)
!16858 = !{!11444, !718}
!16859 = !DILocalVariable(name: "p_channel", arg: 1, scope: !16856, file: !1800, line: 663, type: !718)
!16860 = !DILocation(line: 663, column: 48, scope: !16856)
!16861 = !DILocation(line: 665, column: 61, scope: !16856)
!16862 = !DILocation(line: 665, column: 12, scope: !16856)
!16863 = !DILocation(line: 665, column: 5, scope: !16856)
!16864 = distinct !DISubprogram(name: "nrfx_gpiote_out_init", scope: !1800, file: !1800, line: 668, type: !16865, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16865 = !DISubroutineType(types: !16866)
!16866 = !{!11444, !1796, !16867}
!16867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16868, size: 32)
!16868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16869)
!16869 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_out_config_t", file: !1044, line: 236, baseType: !16870)
!16870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 231, size: 96, elements: !16871)
!16871 = !{!16872, !16873, !16874}
!16872 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !16870, file: !1044, line: 233, baseType: !1789, size: 32)
!16873 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !16870, file: !1044, line: 234, baseType: !16459, size: 32, offset: 32)
!16874 = !DIDerivedType(tag: DW_TAG_member, name: "task_pin", scope: !16870, file: !1044, line: 235, baseType: !717, size: 8, offset: 64)
!16875 = !DILocalVariable(name: "pin", arg: 1, scope: !16864, file: !1800, line: 668, type: !1796)
!16876 = !DILocation(line: 668, column: 66, scope: !16864)
!16877 = !DILocalVariable(name: "p_config", arg: 2, scope: !16864, file: !1800, line: 669, type: !16867)
!16878 = !DILocation(line: 669, column: 66, scope: !16864)
!16879 = !DILocalVariable(name: "ch", scope: !16864, file: !1800, line: 671, type: !156)
!16880 = !DILocation(line: 671, column: 13, scope: !16864)
!16881 = !DILocalVariable(name: "err", scope: !16864, file: !1800, line: 672, type: !11444)
!16882 = !DILocation(line: 672, column: 16, scope: !16864)
!16883 = !DILocation(line: 674, column: 9, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16864, file: !1800, line: 674, column: 9)
!16885 = !DILocation(line: 674, column: 19, scope: !16884)
!16886 = !DILocation(line: 674, column: 9, scope: !16864)
!16887 = !DILocation(line: 676, column: 15, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16884, file: !1800, line: 675, column: 5)
!16889 = !DILocation(line: 676, column: 13, scope: !16888)
!16890 = !DILocation(line: 677, column: 13, scope: !16891)
!16891 = distinct !DILexicalBlock(scope: !16888, file: !1800, line: 677, column: 13)
!16892 = !DILocation(line: 677, column: 17, scope: !16891)
!16893 = !DILocation(line: 677, column: 13, scope: !16888)
!16894 = !DILocation(line: 679, column: 20, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16891, file: !1800, line: 678, column: 9)
!16896 = !DILocation(line: 679, column: 13, scope: !16895)
!16897 = !DILocation(line: 681, column: 5, scope: !16888)
!16898 = !DILocation(line: 685, column: 12, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16884, file: !1800, line: 683, column: 5)
!16900 = !DILocation(line: 688, column: 41, scope: !16864)
!16901 = !DILocation(line: 688, column: 46, scope: !16864)
!16902 = !DILocation(line: 688, column: 56, scope: !16864)
!16903 = !DILocation(line: 688, column: 11, scope: !16864)
!16904 = !DILocation(line: 688, column: 9, scope: !16864)
!16905 = !DILocation(line: 689, column: 9, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16864, file: !1800, line: 689, column: 9)
!16907 = !DILocation(line: 689, column: 13, scope: !16906)
!16908 = !DILocation(line: 689, column: 32, scope: !16906)
!16909 = !DILocation(line: 689, column: 35, scope: !16906)
!16910 = !DILocation(line: 689, column: 45, scope: !16906)
!16911 = !DILocation(line: 689, column: 9, scope: !16864)
!16912 = !DILocation(line: 691, column: 34, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16906, file: !1800, line: 690, column: 5)
!16914 = !DILocation(line: 691, column: 9, scope: !16913)
!16915 = !DILocation(line: 692, column: 5, scope: !16913)
!16916 = !DILocation(line: 694, column: 12, scope: !16864)
!16917 = !DILocation(line: 694, column: 5, scope: !16864)
!16918 = !DILocation(line: 695, column: 1, scope: !16864)
!16919 = distinct !DISubprogram(name: "nrfx_gpiote_out_prealloc_init", scope: !1800, file: !1800, line: 697, type: !16920, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16920 = !DISubroutineType(types: !16921)
!16921 = !{!11444, !1796, !16867, !156}
!16922 = !DILocalVariable(name: "pin", arg: 1, scope: !16919, file: !1800, line: 697, type: !1796)
!16923 = !DILocation(line: 697, column: 75, scope: !16919)
!16924 = !DILocalVariable(name: "p_config", arg: 2, scope: !16919, file: !1800, line: 698, type: !16867)
!16925 = !DILocation(line: 698, column: 75, scope: !16919)
!16926 = !DILocalVariable(name: "channel", arg: 3, scope: !16919, file: !1800, line: 699, type: !156)
!16927 = !DILocation(line: 699, column: 75, scope: !16919)
!16928 = !DILocalVariable(name: "config", scope: !16919, file: !1800, line: 701, type: !16445)
!16929 = !DILocation(line: 701, column: 33, scope: !16919)
!16930 = !DILocalVariable(name: "task_config", scope: !16919, file: !1800, line: 702, type: !16453)
!16931 = !DILocation(line: 702, column: 31, scope: !16919)
!16932 = !DILocalVariable(name: "use_task", scope: !16919, file: !1800, line: 703, type: !717)
!16933 = !DILocation(line: 703, column: 10, scope: !16919)
!16934 = !DILocation(line: 703, column: 21, scope: !16919)
!16935 = !DILocation(line: 703, column: 31, scope: !16919)
!16936 = !DILocalVariable(name: "err", scope: !16919, file: !1800, line: 704, type: !11444)
!16937 = !DILocation(line: 704, column: 16, scope: !16919)
!16938 = !DILocation(line: 706, column: 20, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16919, file: !1800, line: 706, column: 9)
!16940 = !DILocation(line: 706, column: 9, scope: !16939)
!16941 = !DILocation(line: 706, column: 9, scope: !16919)
!16942 = !DILocation(line: 708, column: 9, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16939, file: !1800, line: 707, column: 5)
!16944 = !DILocation(line: 711, column: 9, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16919, file: !1800, line: 711, column: 9)
!16946 = !DILocation(line: 711, column: 19, scope: !16945)
!16947 = !DILocation(line: 711, column: 30, scope: !16945)
!16948 = !DILocation(line: 711, column: 9, scope: !16919)
!16949 = !DILocation(line: 713, column: 26, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16945, file: !1800, line: 712, column: 5)
!16951 = !DILocation(line: 713, column: 9, scope: !16950)
!16952 = !DILocation(line: 714, column: 5, scope: !16950)
!16953 = !DILocation(line: 716, column: 9, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16919, file: !1800, line: 716, column: 9)
!16955 = !DILocation(line: 716, column: 9, scope: !16919)
!16956 = !DILocation(line: 719, column: 31, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16954, file: !1800, line: 717, column: 5)
!16958 = !DILocation(line: 719, column: 21, scope: !16957)
!16959 = !DILocation(line: 719, column: 29, scope: !16957)
!16960 = !DILocation(line: 720, column: 32, scope: !16957)
!16961 = !DILocation(line: 720, column: 42, scope: !16957)
!16962 = !DILocation(line: 720, column: 21, scope: !16957)
!16963 = !DILocation(line: 720, column: 30, scope: !16957)
!16964 = !DILocation(line: 721, column: 32, scope: !16957)
!16965 = !DILocation(line: 721, column: 42, scope: !16957)
!16966 = !DILocation(line: 721, column: 21, scope: !16957)
!16967 = !DILocation(line: 721, column: 30, scope: !16957)
!16968 = !DILocation(line: 722, column: 5, scope: !16957)
!16969 = !DILocation(line: 724, column: 40, scope: !16919)
!16970 = !DILocation(line: 724, column: 54, scope: !16919)
!16971 = !DILocation(line: 724, column: 11, scope: !16919)
!16972 = !DILocation(line: 724, column: 9, scope: !16919)
!16973 = !DILocation(line: 725, column: 9, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16919, file: !1800, line: 725, column: 9)
!16975 = !DILocation(line: 725, column: 13, scope: !16974)
!16976 = !DILocation(line: 725, column: 9, scope: !16919)
!16977 = !DILocation(line: 727, column: 24, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16974, file: !1800, line: 726, column: 5)
!16979 = !DILocation(line: 727, column: 9, scope: !16978)
!16980 = !DILocation(line: 727, column: 29, scope: !16978)
!16981 = !DILocation(line: 728, column: 5, scope: !16978)
!16982 = !DILocation(line: 730, column: 12, scope: !16919)
!16983 = !DILocation(line: 730, column: 5, scope: !16919)
!16984 = !DILocation(line: 731, column: 1, scope: !16919)
!16985 = distinct !DISubprogram(name: "nrf_gpio_pin_set", scope: !1054, file: !1054, line: 764, type: !524, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16986 = !DILocalVariable(name: "pin_number", arg: 1, scope: !16985, file: !1054, line: 764, type: !173)
!16987 = !DILocation(line: 764, column: 50, scope: !16985)
!16988 = !DILocalVariable(name: "reg", scope: !16985, file: !1054, line: 766, type: !1775)
!16989 = !DILocation(line: 766, column: 21, scope: !16985)
!16990 = !DILocation(line: 766, column: 27, scope: !16985)
!16991 = !DILocation(line: 768, column: 27, scope: !16985)
!16992 = !DILocation(line: 768, column: 39, scope: !16985)
!16993 = !DILocation(line: 768, column: 36, scope: !16985)
!16994 = !DILocation(line: 768, column: 5, scope: !16985)
!16995 = !DILocation(line: 769, column: 1, scope: !16985)
!16996 = distinct !DISubprogram(name: "nrf_gpio_port_out_set", scope: !1054, file: !1054, line: 895, type: !16997, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!16997 = !DISubroutineType(types: !16998)
!16998 = !{null, !1775, !173}
!16999 = !DILocalVariable(name: "p_reg", arg: 1, scope: !16996, file: !1054, line: 895, type: !1775)
!17000 = !DILocation(line: 895, column: 62, scope: !16996)
!17001 = !DILocalVariable(name: "set_mask", arg: 2, scope: !16996, file: !1054, line: 895, type: !173)
!17002 = !DILocation(line: 895, column: 78, scope: !16996)
!17003 = !DILocation(line: 897, column: 21, scope: !16996)
!17004 = !DILocation(line: 897, column: 5, scope: !16996)
!17005 = !DILocation(line: 897, column: 12, scope: !16996)
!17006 = !DILocation(line: 897, column: 19, scope: !16996)
!17007 = !DILocation(line: 898, column: 1, scope: !16996)
!17008 = distinct !DISubprogram(name: "nrfx_gpiote_out_set", scope: !1800, file: !1800, line: 752, type: !15775, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17009 = !DILocalVariable(name: "pin", arg: 1, scope: !17008, file: !1800, line: 752, type: !1796)
!17010 = !DILocation(line: 752, column: 44, scope: !17008)
!17011 = !DILocation(line: 757, column: 22, scope: !17008)
!17012 = !DILocation(line: 757, column: 5, scope: !17008)
!17013 = !DILocation(line: 758, column: 1, scope: !17008)
!17014 = distinct !DISubprogram(name: "nrfx_gpiote_out_clear", scope: !1800, file: !1800, line: 761, type: !15775, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17015 = !DILocalVariable(name: "pin", arg: 1, scope: !17014, file: !1800, line: 761, type: !1796)
!17016 = !DILocation(line: 761, column: 46, scope: !17014)
!17017 = !DILocation(line: 766, column: 24, scope: !17014)
!17018 = !DILocation(line: 766, column: 5, scope: !17014)
!17019 = !DILocation(line: 767, column: 1, scope: !17014)
!17020 = distinct !DISubprogram(name: "nrf_gpio_pin_clear", scope: !1054, file: !1054, line: 772, type: !524, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17021 = !DILocalVariable(name: "pin_number", arg: 1, scope: !17020, file: !1054, line: 772, type: !173)
!17022 = !DILocation(line: 772, column: 52, scope: !17020)
!17023 = !DILocalVariable(name: "reg", scope: !17020, file: !1054, line: 774, type: !1775)
!17024 = !DILocation(line: 774, column: 21, scope: !17020)
!17025 = !DILocation(line: 774, column: 27, scope: !17020)
!17026 = !DILocation(line: 776, column: 29, scope: !17020)
!17027 = !DILocation(line: 776, column: 41, scope: !17020)
!17028 = !DILocation(line: 776, column: 38, scope: !17020)
!17029 = !DILocation(line: 776, column: 5, scope: !17020)
!17030 = !DILocation(line: 777, column: 1, scope: !17020)
!17031 = distinct !DISubprogram(name: "nrf_gpio_port_out_clear", scope: !1054, file: !1054, line: 901, type: !16997, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17032 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17031, file: !1054, line: 901, type: !1775)
!17033 = !DILocation(line: 901, column: 64, scope: !17031)
!17034 = !DILocalVariable(name: "clr_mask", arg: 2, scope: !17031, file: !1054, line: 901, type: !173)
!17035 = !DILocation(line: 901, column: 80, scope: !17031)
!17036 = !DILocation(line: 903, column: 21, scope: !17031)
!17037 = !DILocation(line: 903, column: 5, scope: !17031)
!17038 = !DILocation(line: 903, column: 12, scope: !17031)
!17039 = !DILocation(line: 903, column: 19, scope: !17031)
!17040 = !DILocation(line: 904, column: 1, scope: !17031)
!17041 = distinct !DISubprogram(name: "nrfx_gpiote_out_toggle", scope: !1800, file: !1800, line: 770, type: !15775, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17042 = !DILocalVariable(name: "pin", arg: 1, scope: !17041, file: !1800, line: 770, type: !1796)
!17043 = !DILocation(line: 770, column: 47, scope: !17041)
!17044 = !DILocation(line: 775, column: 25, scope: !17041)
!17045 = !DILocation(line: 775, column: 5, scope: !17041)
!17046 = !DILocation(line: 776, column: 1, scope: !17041)
!17047 = distinct !DISubprogram(name: "nrf_gpio_pin_toggle", scope: !1054, file: !1054, line: 780, type: !524, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17048 = !DILocalVariable(name: "pin_number", arg: 1, scope: !17047, file: !1054, line: 780, type: !173)
!17049 = !DILocation(line: 780, column: 53, scope: !17047)
!17050 = !DILocalVariable(name: "reg", scope: !17047, file: !1054, line: 782, type: !1775)
!17051 = !DILocation(line: 782, column: 21, scope: !17047)
!17052 = !DILocation(line: 782, column: 34, scope: !17047)
!17053 = !DILocalVariable(name: "pins_state", scope: !17047, file: !1054, line: 783, type: !173)
!17054 = !DILocation(line: 783, column: 21, scope: !17047)
!17055 = !DILocation(line: 783, column: 34, scope: !17047)
!17056 = !DILocation(line: 783, column: 39, scope: !17047)
!17057 = !DILocation(line: 785, column: 21, scope: !17047)
!17058 = !DILocation(line: 785, column: 20, scope: !17047)
!17059 = !DILocation(line: 785, column: 42, scope: !17047)
!17060 = !DILocation(line: 785, column: 39, scope: !17047)
!17061 = !DILocation(line: 785, column: 32, scope: !17047)
!17062 = !DILocation(line: 785, column: 5, scope: !17047)
!17063 = !DILocation(line: 785, column: 10, scope: !17047)
!17064 = !DILocation(line: 785, column: 17, scope: !17047)
!17065 = !DILocation(line: 786, column: 20, scope: !17047)
!17066 = !DILocation(line: 786, column: 41, scope: !17047)
!17067 = !DILocation(line: 786, column: 38, scope: !17047)
!17068 = !DILocation(line: 786, column: 31, scope: !17047)
!17069 = !DILocation(line: 786, column: 5, scope: !17047)
!17070 = !DILocation(line: 786, column: 10, scope: !17047)
!17071 = !DILocation(line: 786, column: 17, scope: !17047)
!17072 = !DILocation(line: 787, column: 1, scope: !17047)
!17073 = distinct !DISubprogram(name: "nrfx_gpiote_out_task_enable", scope: !1800, file: !1800, line: 778, type: !15775, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17074 = !DILocalVariable(name: "pin", arg: 1, scope: !17073, file: !1800, line: 778, type: !1796)
!17075 = !DILocation(line: 778, column: 52, scope: !17073)
!17076 = !DILocation(line: 784, column: 61, scope: !17073)
!17077 = !DILocation(line: 784, column: 50, scope: !17073)
!17078 = !DILocation(line: 784, column: 40, scope: !17073)
!17079 = !DILocation(line: 784, column: 5, scope: !17073)
!17080 = !DILocation(line: 785, column: 1, scope: !17073)
!17081 = distinct !DISubprogram(name: "nrf_gpiote_task_enable", scope: !1704, file: !1704, line: 569, type: !15907, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17082 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17081, file: !1704, line: 569, type: !1746)
!17083 = !DILocation(line: 569, column: 65, scope: !17081)
!17084 = !DILocalVariable(name: "idx", arg: 2, scope: !17081, file: !1704, line: 569, type: !173)
!17085 = !DILocation(line: 569, column: 81, scope: !17081)
!17086 = !DILocalVariable(name: "final_config", scope: !17081, file: !1704, line: 571, type: !173)
!17087 = !DILocation(line: 571, column: 14, scope: !17081)
!17088 = !DILocation(line: 571, column: 29, scope: !17081)
!17089 = !DILocation(line: 571, column: 36, scope: !17081)
!17090 = !DILocation(line: 571, column: 43, scope: !17081)
!17091 = !DILocation(line: 571, column: 48, scope: !17081)
!17092 = !DILocation(line: 578, column: 26, scope: !17081)
!17093 = !DILocation(line: 578, column: 39, scope: !17081)
!17094 = !DILocation(line: 578, column: 5, scope: !17081)
!17095 = !DILocation(line: 578, column: 12, scope: !17081)
!17096 = !DILocation(line: 578, column: 19, scope: !17081)
!17097 = !DILocation(line: 578, column: 24, scope: !17081)
!17098 = !DILocation(line: 580, column: 5, scope: !17081)
!17099 = !{i64 2149458224}
!17100 = !DILocation(line: 581, column: 5, scope: !17081)
!17101 = !{i64 2149458253}
!17102 = !DILocation(line: 582, column: 5, scope: !17081)
!17103 = !{i64 2149458282}
!17104 = !DILocation(line: 584, column: 26, scope: !17081)
!17105 = !DILocation(line: 584, column: 5, scope: !17081)
!17106 = !DILocation(line: 584, column: 12, scope: !17081)
!17107 = !DILocation(line: 584, column: 19, scope: !17081)
!17108 = !DILocation(line: 584, column: 24, scope: !17081)
!17109 = !DILocation(line: 585, column: 1, scope: !17081)
!17110 = distinct !DISubprogram(name: "nrfx_gpiote_out_task_disable", scope: !1800, file: !1800, line: 788, type: !15775, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17111 = !DILocalVariable(name: "pin", arg: 1, scope: !17110, file: !1800, line: 788, type: !1796)
!17112 = !DILocation(line: 788, column: 53, scope: !17110)
!17113 = !DILocation(line: 793, column: 62, scope: !17110)
!17114 = !DILocation(line: 793, column: 51, scope: !17110)
!17115 = !DILocation(line: 793, column: 41, scope: !17110)
!17116 = !DILocation(line: 793, column: 5, scope: !17110)
!17117 = !DILocation(line: 794, column: 1, scope: !17110)
!17118 = distinct !DISubprogram(name: "nrf_gpiote_task_disable", scope: !1704, file: !1704, line: 587, type: !15907, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17119 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17118, file: !1704, line: 587, type: !1746)
!17120 = !DILocation(line: 587, column: 66, scope: !17118)
!17121 = !DILocalVariable(name: "idx", arg: 2, scope: !17118, file: !1704, line: 587, type: !173)
!17122 = !DILocation(line: 587, column: 82, scope: !17118)
!17123 = !DILocation(line: 589, column: 5, scope: !17118)
!17124 = !DILocation(line: 589, column: 12, scope: !17118)
!17125 = !DILocation(line: 589, column: 19, scope: !17118)
!17126 = !DILocation(line: 589, column: 24, scope: !17118)
!17127 = !DILocation(line: 590, column: 1, scope: !17118)
!17128 = distinct !DISubprogram(name: "nrfx_gpiote_out_task_get", scope: !1800, file: !1800, line: 797, type: !17129, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17129 = !DISubroutineType(types: !17130)
!17130 = !{!1791, !1796}
!17131 = !DILocalVariable(name: "pin", arg: 1, scope: !17128, file: !1800, line: 797, type: !1796)
!17132 = !DILocation(line: 797, column: 62, scope: !17128)
!17133 = !DILocation(line: 802, column: 56, scope: !17128)
!17134 = !DILocation(line: 802, column: 45, scope: !17128)
!17135 = !DILocation(line: 802, column: 12, scope: !17128)
!17136 = !DILocation(line: 802, column: 5, scope: !17128)
!17137 = distinct !DISubprogram(name: "nrf_gpiote_out_task_get", scope: !1704, file: !1704, line: 628, type: !17138, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17138 = !DISubroutineType(types: !17139)
!17139 = !{!1791, !156}
!17140 = !DILocalVariable(name: "index", arg: 1, scope: !17137, file: !1704, line: 628, type: !156)
!17141 = !DILocation(line: 628, column: 69, scope: !17137)
!17142 = !DILocation(line: 631, column: 31, scope: !17137)
!17143 = !DILocation(line: 631, column: 5, scope: !17137)
!17144 = distinct !DISubprogram(name: "nrfx_gpiote_out_task_addr_get", scope: !1800, file: !1800, line: 806, type: !17145, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17145 = !DISubroutineType(types: !17146)
!17146 = !{!173, !1796}
!17147 = !DILocalVariable(name: "pin", arg: 1, scope: !17144, file: !1800, line: 806, type: !1796)
!17148 = !DILocation(line: 806, column: 58, scope: !17144)
!17149 = !DILocalVariable(name: "task", scope: !17144, file: !1800, line: 808, type: !1791)
!17150 = !DILocation(line: 808, column: 23, scope: !17144)
!17151 = !DILocation(line: 808, column: 55, scope: !17144)
!17152 = !DILocation(line: 808, column: 30, scope: !17144)
!17153 = !DILocation(line: 809, column: 52, scope: !17144)
!17154 = !DILocation(line: 809, column: 12, scope: !17144)
!17155 = !DILocation(line: 809, column: 5, scope: !17144)
!17156 = distinct !DISubprogram(name: "nrf_gpiote_task_address_get", scope: !1704, file: !1704, line: 470, type: !17157, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17157 = !DISubroutineType(types: !17158)
!17158 = !{!173, !16685, !1791}
!17159 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17156, file: !1704, line: 470, type: !16685)
!17160 = !DILocation(line: 470, column: 80, scope: !17156)
!17161 = !DILocalVariable(name: "task", arg: 2, scope: !17156, file: !1704, line: 471, type: !1791)
!17162 = !DILocation(line: 471, column: 80, scope: !17156)
!17163 = !DILocation(line: 473, column: 23, scope: !17156)
!17164 = !DILocation(line: 473, column: 13, scope: !17156)
!17165 = !DILocation(line: 473, column: 31, scope: !17156)
!17166 = !DILocation(line: 473, column: 29, scope: !17156)
!17167 = !DILocation(line: 473, column: 5, scope: !17156)
!17168 = distinct !DISubprogram(name: "nrfx_gpiote_out_task_force", scope: !1800, file: !1800, line: 849, type: !17169, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17169 = !DISubroutineType(types: !17170)
!17170 = !{null, !1796, !156}
!17171 = !DILocalVariable(name: "pin", arg: 1, scope: !17168, file: !1800, line: 849, type: !1796)
!17172 = !DILocation(line: 849, column: 51, scope: !17168)
!17173 = !DILocalVariable(name: "state", arg: 2, scope: !17168, file: !1800, line: 849, type: !156)
!17174 = !DILocation(line: 849, column: 64, scope: !17168)
!17175 = !DILocalVariable(name: "init_val", scope: !17168, file: !1800, line: 854, type: !16459)
!17176 = !DILocation(line: 854, column: 26, scope: !17168)
!17177 = !DILocation(line: 855, column: 9, scope: !17168)
!17178 = !DILocation(line: 856, column: 60, scope: !17168)
!17179 = !DILocation(line: 856, column: 49, scope: !17168)
!17180 = !DILocation(line: 856, column: 39, scope: !17168)
!17181 = !DILocation(line: 856, column: 66, scope: !17168)
!17182 = !DILocation(line: 856, column: 5, scope: !17168)
!17183 = !DILocation(line: 857, column: 1, scope: !17168)
!17184 = distinct !DISubprogram(name: "nrf_gpiote_task_force", scope: !1704, file: !1704, line: 607, type: !17185, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17185 = !DISubroutineType(types: !17186)
!17186 = !{null, !1746, !173, !16459}
!17187 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17184, file: !1704, line: 607, type: !1746)
!17188 = !DILocation(line: 607, column: 67, scope: !17184)
!17189 = !DILocalVariable(name: "idx", arg: 2, scope: !17184, file: !1704, line: 608, type: !173)
!17190 = !DILocation(line: 608, column: 67, scope: !17184)
!17191 = !DILocalVariable(name: "init_val", arg: 3, scope: !17184, file: !1704, line: 609, type: !16459)
!17192 = !DILocation(line: 609, column: 67, scope: !17184)
!17193 = !DILocation(line: 611, column: 27, scope: !17184)
!17194 = !DILocation(line: 611, column: 34, scope: !17184)
!17195 = !DILocation(line: 611, column: 41, scope: !17184)
!17196 = !DILocation(line: 611, column: 46, scope: !17184)
!17197 = !DILocation(line: 612, column: 28, scope: !17184)
!17198 = !DILocation(line: 612, column: 37, scope: !17184)
!17199 = !DILocation(line: 612, column: 67, scope: !17184)
!17200 = !DILocation(line: 611, column: 76, scope: !17184)
!17201 = !DILocation(line: 611, column: 5, scope: !17184)
!17202 = !DILocation(line: 611, column: 12, scope: !17184)
!17203 = !DILocation(line: 611, column: 19, scope: !17184)
!17204 = !DILocation(line: 611, column: 24, scope: !17184)
!17205 = !DILocation(line: 613, column: 1, scope: !17184)
!17206 = distinct !DISubprogram(name: "nrfx_gpiote_out_task_trigger", scope: !1800, file: !1800, line: 860, type: !15775, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17207 = !DILocalVariable(name: "pin", arg: 1, scope: !17206, file: !1800, line: 860, type: !1796)
!17208 = !DILocation(line: 860, column: 53, scope: !17206)
!17209 = !DILocalVariable(name: "task", scope: !17206, file: !1800, line: 865, type: !1791)
!17210 = !DILocation(line: 865, column: 23, scope: !17206)
!17211 = !DILocation(line: 865, column: 74, scope: !17206)
!17212 = !DILocation(line: 865, column: 63, scope: !17206)
!17213 = !DILocation(line: 865, column: 30, scope: !17206)
!17214 = !DILocation(line: 866, column: 41, scope: !17206)
!17215 = !DILocation(line: 866, column: 5, scope: !17206)
!17216 = !DILocation(line: 867, column: 1, scope: !17206)
!17217 = distinct !DISubprogram(name: "nrf_gpiote_task_trigger", scope: !1704, file: !1704, line: 465, type: !17218, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17218 = !DISubroutineType(types: !17219)
!17219 = !{null, !1746, !1791}
!17220 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17217, file: !1704, line: 465, type: !1746)
!17221 = !DILocation(line: 465, column: 66, scope: !17217)
!17222 = !DILocalVariable(name: "task", arg: 2, scope: !17217, file: !1704, line: 465, type: !1791)
!17223 = !DILocation(line: 465, column: 91, scope: !17217)
!17224 = !DILocation(line: 467, column: 38, scope: !17217)
!17225 = !DILocation(line: 467, column: 28, scope: !17217)
!17226 = !DILocation(line: 467, column: 46, scope: !17217)
!17227 = !DILocation(line: 467, column: 44, scope: !17217)
!17228 = !DILocation(line: 467, column: 6, scope: !17217)
!17229 = !DILocation(line: 467, column: 52, scope: !17217)
!17230 = !DILocation(line: 468, column: 1, scope: !17217)
!17231 = distinct !DISubprogram(name: "nrfx_gpiote_in_init", scope: !1800, file: !1800, line: 899, type: !17232, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17232 = !DISubroutineType(types: !17233)
!17233 = !{!11444, !1796, !17234, !1792}
!17234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17235, size: 32)
!17235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17236)
!17236 = !DIDerivedType(tag: DW_TAG_typedef, name: "nrfx_gpiote_in_config_t", file: !1044, line: 132, baseType: !17237)
!17237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1044, line: 125, size: 96, elements: !17238)
!17238 = !{!17239, !17240, !17241, !17242, !17243}
!17239 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !17237, file: !1044, line: 127, baseType: !1789, size: 32)
!17240 = !DIDerivedType(tag: DW_TAG_member, name: "pull", scope: !17237, file: !1044, line: 128, baseType: !12185, size: 32, offset: 32)
!17241 = !DIDerivedType(tag: DW_TAG_member, name: "is_watcher", scope: !17237, file: !1044, line: 129, baseType: !717, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!17242 = !DIDerivedType(tag: DW_TAG_member, name: "hi_accuracy", scope: !17237, file: !1044, line: 130, baseType: !717, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!17243 = !DIDerivedType(tag: DW_TAG_member, name: "skip_gpio_setup", scope: !17237, file: !1044, line: 131, baseType: !717, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 64)
!17244 = !DILocalVariable(name: "pin", arg: 1, scope: !17231, file: !1800, line: 899, type: !1796)
!17245 = !DILocation(line: 899, column: 64, scope: !17231)
!17246 = !DILocalVariable(name: "p_config", arg: 2, scope: !17231, file: !1800, line: 900, type: !17234)
!17247 = !DILocation(line: 900, column: 64, scope: !17231)
!17248 = !DILocalVariable(name: "evt_handler", arg: 3, scope: !17231, file: !1800, line: 901, type: !1792)
!17249 = !DILocation(line: 901, column: 64, scope: !17231)
!17250 = !DILocalVariable(name: "ch", scope: !17231, file: !1800, line: 903, type: !156)
!17251 = !DILocation(line: 903, column: 13, scope: !17231)
!17252 = !DILocalVariable(name: "err", scope: !17231, file: !1800, line: 904, type: !11444)
!17253 = !DILocation(line: 904, column: 16, scope: !17231)
!17254 = !DILocation(line: 906, column: 9, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17231, file: !1800, line: 906, column: 9)
!17256 = !DILocation(line: 906, column: 19, scope: !17255)
!17257 = !DILocation(line: 906, column: 9, scope: !17231)
!17258 = !DILocation(line: 908, column: 15, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17255, file: !1800, line: 907, column: 5)
!17260 = !DILocation(line: 908, column: 13, scope: !17259)
!17261 = !DILocation(line: 909, column: 13, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17259, file: !1800, line: 909, column: 13)
!17263 = !DILocation(line: 909, column: 17, scope: !17262)
!17264 = !DILocation(line: 909, column: 13, scope: !17259)
!17265 = !DILocation(line: 911, column: 20, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17262, file: !1800, line: 910, column: 9)
!17267 = !DILocation(line: 911, column: 13, scope: !17266)
!17268 = !DILocation(line: 913, column: 5, scope: !17259)
!17269 = !DILocation(line: 917, column: 12, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17255, file: !1800, line: 915, column: 5)
!17271 = !DILocation(line: 920, column: 40, scope: !17231)
!17272 = !DILocation(line: 920, column: 45, scope: !17231)
!17273 = !DILocation(line: 920, column: 55, scope: !17231)
!17274 = !DILocation(line: 920, column: 59, scope: !17231)
!17275 = !DILocation(line: 920, column: 11, scope: !17231)
!17276 = !DILocation(line: 920, column: 9, scope: !17231)
!17277 = !DILocation(line: 921, column: 10, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17231, file: !1800, line: 921, column: 9)
!17279 = !DILocation(line: 921, column: 14, scope: !17278)
!17280 = !DILocation(line: 921, column: 36, scope: !17278)
!17281 = !DILocation(line: 921, column: 39, scope: !17278)
!17282 = !DILocation(line: 921, column: 49, scope: !17278)
!17283 = !DILocation(line: 921, column: 9, scope: !17231)
!17284 = !DILocation(line: 923, column: 34, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17278, file: !1800, line: 922, column: 5)
!17286 = !DILocation(line: 923, column: 9, scope: !17285)
!17287 = !DILocation(line: 924, column: 5, scope: !17285)
!17288 = !DILocation(line: 926, column: 12, scope: !17231)
!17289 = !DILocation(line: 926, column: 5, scope: !17231)
!17290 = !DILocation(line: 927, column: 1, scope: !17231)
!17291 = distinct !DISubprogram(name: "nrfx_gpiote_in_prealloc_init", scope: !1800, file: !1800, line: 936, type: !17292, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17292 = !DISubroutineType(types: !17293)
!17293 = !{!11444, !1796, !17234, !156, !1792}
!17294 = !DILocalVariable(name: "pin", arg: 1, scope: !17291, file: !1800, line: 936, type: !1796)
!17295 = !DILocation(line: 936, column: 73, scope: !17291)
!17296 = !DILocalVariable(name: "p_config", arg: 2, scope: !17291, file: !1800, line: 937, type: !17234)
!17297 = !DILocation(line: 937, column: 73, scope: !17291)
!17298 = !DILocalVariable(name: "channel", arg: 3, scope: !17291, file: !1800, line: 938, type: !156)
!17299 = !DILocation(line: 938, column: 73, scope: !17291)
!17300 = !DILocalVariable(name: "evt_handler", arg: 4, scope: !17291, file: !1800, line: 939, type: !1792)
!17301 = !DILocation(line: 939, column: 73, scope: !17291)
!17302 = !DILocalVariable(name: "err", scope: !17291, file: !1800, line: 941, type: !11444)
!17303 = !DILocation(line: 941, column: 16, scope: !17291)
!17304 = !DILocalVariable(name: "skip_in_config", scope: !17291, file: !1800, line: 942, type: !717)
!17305 = !DILocation(line: 942, column: 10, scope: !17291)
!17306 = !DILocalVariable(name: "input_config", scope: !17291, file: !1800, line: 943, type: !16123)
!17307 = !DILocation(line: 943, column: 32, scope: !17291)
!17308 = !DILocalVariable(name: "trigger_config", scope: !17291, file: !1800, line: 944, type: !16129)
!17309 = !DILocation(line: 944, column: 34, scope: !17291)
!17310 = !DILocation(line: 944, column: 51, scope: !17291)
!17311 = !DILocation(line: 945, column: 47, scope: !17291)
!17312 = !DILocation(line: 945, column: 57, scope: !17291)
!17313 = !DILocation(line: 945, column: 20, scope: !17291)
!17314 = !DILocation(line: 946, column: 25, scope: !17291)
!17315 = !DILocation(line: 946, column: 35, scope: !17291)
!17316 = !DILocalVariable(name: "handler_config", scope: !17291, file: !1800, line: 948, type: !1806)
!17317 = !DILocation(line: 948, column: 34, scope: !17291)
!17318 = !DILocation(line: 948, column: 51, scope: !17291)
!17319 = !DILocation(line: 950, column: 30, scope: !17291)
!17320 = !DILocation(line: 950, column: 22, scope: !17291)
!17321 = !DILocation(line: 953, column: 9, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17291, file: !1800, line: 953, column: 9)
!17323 = !DILocation(line: 953, column: 19, scope: !17322)
!17324 = !DILocation(line: 953, column: 9, scope: !17291)
!17325 = !DILocalVariable(name: "output_config", scope: !17326, file: !1800, line: 955, type: !16445)
!17326 = distinct !DILexicalBlock(scope: !17322, file: !1800, line: 954, column: 5)
!17327 = !DILocation(line: 955, column: 37, scope: !17326)
!17328 = !DILocation(line: 959, column: 24, scope: !17326)
!17329 = !DILocation(line: 960, column: 44, scope: !17326)
!17330 = !DILocation(line: 960, column: 15, scope: !17326)
!17331 = !DILocation(line: 960, column: 13, scope: !17326)
!17332 = !DILocation(line: 961, column: 13, scope: !17333)
!17333 = distinct !DILexicalBlock(scope: !17326, file: !1800, line: 961, column: 13)
!17334 = !DILocation(line: 961, column: 17, scope: !17333)
!17335 = !DILocation(line: 961, column: 13, scope: !17326)
!17336 = !DILocation(line: 963, column: 20, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17333, file: !1800, line: 962, column: 9)
!17338 = !DILocation(line: 963, column: 13, scope: !17337)
!17339 = !DILocation(line: 965, column: 5, scope: !17326)
!17340 = !DILocation(line: 968, column: 29, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17322, file: !1800, line: 967, column: 5)
!17342 = !DILocation(line: 968, column: 39, scope: !17341)
!17343 = !DILocation(line: 968, column: 22, scope: !17341)
!17344 = !DILocation(line: 968, column: 27, scope: !17341)
!17345 = !DILocation(line: 971, column: 9, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17291, file: !1800, line: 971, column: 9)
!17347 = !DILocation(line: 971, column: 19, scope: !17346)
!17348 = !DILocation(line: 971, column: 9, scope: !17291)
!17349 = !DILocation(line: 973, column: 24, scope: !17350)
!17350 = distinct !DILexicalBlock(scope: !17346, file: !1800, line: 972, column: 5)
!17351 = !DILocation(line: 973, column: 9, scope: !17350)
!17352 = !DILocation(line: 973, column: 29, scope: !17350)
!17353 = !DILocation(line: 974, column: 24, scope: !17350)
!17354 = !DILocation(line: 975, column: 5, scope: !17350)
!17355 = !DILocation(line: 977, column: 39, scope: !17291)
!17356 = !DILocation(line: 978, column: 39, scope: !17291)
!17357 = !DILocation(line: 977, column: 11, scope: !17291)
!17358 = !DILocation(line: 977, column: 9, scope: !17291)
!17359 = !DILocation(line: 981, column: 9, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17291, file: !1800, line: 981, column: 9)
!17361 = !DILocation(line: 981, column: 13, scope: !17360)
!17362 = !DILocation(line: 981, column: 9, scope: !17291)
!17363 = !DILocation(line: 983, column: 24, scope: !17364)
!17364 = distinct !DILexicalBlock(scope: !17360, file: !1800, line: 982, column: 5)
!17365 = !DILocation(line: 983, column: 9, scope: !17364)
!17366 = !DILocation(line: 983, column: 29, scope: !17364)
!17367 = !DILocation(line: 984, column: 5, scope: !17364)
!17368 = !DILocation(line: 986, column: 12, scope: !17291)
!17369 = !DILocation(line: 986, column: 5, scope: !17291)
!17370 = !DILocation(line: 987, column: 1, scope: !17291)
!17371 = distinct !DISubprogram(name: "gpiote_polarity_to_trigger", scope: !1800, file: !1800, line: 249, type: !17372, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17372 = !DISubroutineType(types: !17373)
!17373 = !{!1790, !1789}
!17374 = !DILocalVariable(name: "polarity", arg: 1, scope: !17371, file: !1800, line: 249, type: !1789)
!17375 = !DILocation(line: 249, column: 79, scope: !17371)
!17376 = !DILocation(line: 251, column: 34, scope: !17371)
!17377 = !DILocation(line: 251, column: 4, scope: !17371)
!17378 = distinct !DISubprogram(name: "legacy_handler", scope: !1800, file: !1800, line: 929, type: !1812, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17379 = !DILocalVariable(name: "pin", arg: 1, scope: !17378, file: !1800, line: 929, type: !1796)
!17380 = !DILocation(line: 929, column: 46, scope: !17378)
!17381 = !DILocalVariable(name: "trigger", arg: 2, scope: !17378, file: !1800, line: 929, type: !1790)
!17382 = !DILocation(line: 929, column: 73, scope: !17378)
!17383 = !DILocalVariable(name: "p_context", arg: 3, scope: !17378, file: !1800, line: 929, type: !102)
!17384 = !DILocation(line: 929, column: 89, scope: !17378)
!17385 = !DILocation(line: 933, column: 33, scope: !17378)
!17386 = !DILocation(line: 933, column: 6, scope: !17378)
!17387 = !DILocation(line: 933, column: 44, scope: !17378)
!17388 = !DILocation(line: 933, column: 76, scope: !17378)
!17389 = !DILocation(line: 933, column: 49, scope: !17378)
!17390 = !DILocation(line: 933, column: 5, scope: !17378)
!17391 = !DILocation(line: 934, column: 1, scope: !17378)
!17392 = distinct !DISubprogram(name: "nrfx_gpiote_trigger_enable", scope: !1800, file: !1800, line: 989, type: !17393, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17393 = !DISubroutineType(types: !17394)
!17394 = !{null, !1796, !717}
!17395 = !DILocalVariable(name: "pin", arg: 1, scope: !17392, file: !1800, line: 989, type: !1796)
!17396 = !DILocation(line: 989, column: 51, scope: !17392)
!17397 = !DILocalVariable(name: "int_enable", arg: 2, scope: !17392, file: !1800, line: 989, type: !717)
!17398 = !DILocation(line: 989, column: 61, scope: !17392)
!17399 = !DILocation(line: 993, column: 26, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17392, file: !1800, line: 993, column: 9)
!17401 = !DILocation(line: 993, column: 9, scope: !17400)
!17402 = !DILocation(line: 993, column: 31, scope: !17400)
!17403 = !DILocation(line: 993, column: 47, scope: !17400)
!17404 = !DILocation(line: 993, column: 34, scope: !17400)
!17405 = !DILocation(line: 993, column: 9, scope: !17392)
!17406 = !DILocalVariable(name: "ch", scope: !17407, file: !1800, line: 995, type: !156)
!17407 = distinct !DILexicalBlock(scope: !17400, file: !1800, line: 994, column: 5)
!17408 = !DILocation(line: 995, column: 17, scope: !17407)
!17409 = !DILocation(line: 995, column: 33, scope: !17407)
!17410 = !DILocation(line: 995, column: 22, scope: !17407)
!17411 = !DILocation(line: 997, column: 68, scope: !17407)
!17412 = !DILocation(line: 997, column: 44, scope: !17407)
!17413 = !DILocation(line: 997, column: 9, scope: !17407)
!17414 = !DILocation(line: 998, column: 45, scope: !17407)
!17415 = !DILocation(line: 998, column: 9, scope: !17407)
!17416 = !DILocation(line: 999, column: 13, scope: !17417)
!17417 = distinct !DILexicalBlock(scope: !17407, file: !1800, line: 999, column: 13)
!17418 = !DILocation(line: 999, column: 13, scope: !17407)
!17419 = !DILocation(line: 1001, column: 47, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17417, file: !1800, line: 1000, column: 9)
!17421 = !DILocation(line: 1001, column: 13, scope: !17420)
!17422 = !DILocation(line: 1002, column: 9, scope: !17420)
!17423 = !DILocation(line: 1003, column: 5, scope: !17407)
!17424 = !DILocation(line: 1007, column: 32, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17400, file: !1800, line: 1005, column: 5)
!17426 = !DILocation(line: 1007, column: 55, scope: !17425)
!17427 = !DILocation(line: 1007, column: 37, scope: !17425)
!17428 = !DILocation(line: 1007, column: 9, scope: !17425)
!17429 = !DILocation(line: 1009, column: 1, scope: !17392)
!17430 = distinct !DISubprogram(name: "nrf_gpiote_in_event_get", scope: !1704, file: !1704, line: 650, type: !17431, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17431 = !DISubroutineType(types: !17432)
!17432 = !{!1774, !156}
!17433 = !DILocalVariable(name: "index", arg: 1, scope: !17430, file: !1704, line: 650, type: !156)
!17434 = !DILocation(line: 650, column: 70, scope: !17430)
!17435 = !DILocation(line: 653, column: 32, scope: !17430)
!17436 = !DILocation(line: 653, column: 5, scope: !17430)
!17437 = distinct !DISubprogram(name: "nrf_gpiote_event_enable", scope: !1704, file: !1704, line: 537, type: !15907, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17438 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17437, file: !1704, line: 537, type: !1746)
!17439 = !DILocation(line: 537, column: 66, scope: !17437)
!17440 = !DILocalVariable(name: "idx", arg: 2, scope: !17437, file: !1704, line: 537, type: !173)
!17441 = !DILocation(line: 537, column: 82, scope: !17437)
!17442 = !DILocation(line: 539, column: 4, scope: !17437)
!17443 = !DILocation(line: 539, column: 11, scope: !17437)
!17444 = !DILocation(line: 539, column: 18, scope: !17437)
!17445 = !DILocation(line: 539, column: 23, scope: !17437)
!17446 = !DILocation(line: 540, column: 1, scope: !17437)
!17447 = distinct !DISubprogram(name: "get_initial_sense", scope: !1800, file: !1800, line: 393, type: !17448, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17448 = !DISubroutineType(types: !17449)
!17449 = !{!1797, !1796}
!17450 = !DILocalVariable(name: "pin", arg: 1, scope: !17447, file: !1800, line: 393, type: !1796)
!17451 = !DILocation(line: 393, column: 72, scope: !17447)
!17452 = !DILocalVariable(name: "trigger", scope: !17447, file: !1800, line: 395, type: !1790)
!17453 = !DILocation(line: 395, column: 27, scope: !17447)
!17454 = !DILocation(line: 395, column: 37, scope: !17447)
!17455 = !DILocalVariable(name: "sense", scope: !17447, file: !1800, line: 396, type: !1797)
!17456 = !DILocation(line: 396, column: 26, scope: !17447)
!17457 = !DILocation(line: 398, column: 9, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17447, file: !1800, line: 398, column: 9)
!17459 = !DILocation(line: 398, column: 17, scope: !17458)
!17460 = !DILocation(line: 398, column: 9, scope: !17447)
!17461 = !DILocation(line: 400, column: 15, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !17458, file: !1800, line: 399, column: 5)
!17463 = !DILocation(line: 401, column: 5, scope: !17462)
!17464 = !DILocation(line: 402, column: 14, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17458, file: !1800, line: 402, column: 14)
!17466 = !DILocation(line: 402, column: 22, scope: !17465)
!17467 = !DILocation(line: 402, column: 14, scope: !17458)
!17468 = !DILocation(line: 404, column: 15, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17465, file: !1800, line: 403, column: 5)
!17470 = !DILocation(line: 405, column: 5, scope: !17469)
!17471 = !DILocation(line: 409, column: 35, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17465, file: !1800, line: 407, column: 5)
!17473 = !DILocation(line: 409, column: 17, scope: !17472)
!17474 = !DILocation(line: 409, column: 15, scope: !17472)
!17475 = !DILocation(line: 412, column: 12, scope: !17447)
!17476 = !DILocation(line: 412, column: 5, scope: !17447)
!17477 = distinct !DISubprogram(name: "nrf_gpio_pin_read", scope: !1054, file: !1054, line: 803, type: !7340, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17478 = !DILocalVariable(name: "pin_number", arg: 1, scope: !17477, file: !1054, line: 803, type: !173)
!17479 = !DILocation(line: 803, column: 55, scope: !17477)
!17480 = !DILocalVariable(name: "reg", scope: !17477, file: !1054, line: 805, type: !1775)
!17481 = !DILocation(line: 805, column: 21, scope: !17477)
!17482 = !DILocation(line: 805, column: 27, scope: !17477)
!17483 = !DILocation(line: 807, column: 36, scope: !17477)
!17484 = !DILocation(line: 807, column: 14, scope: !17477)
!17485 = !DILocation(line: 807, column: 44, scope: !17477)
!17486 = !DILocation(line: 807, column: 41, scope: !17477)
!17487 = !DILocation(line: 807, column: 56, scope: !17477)
!17488 = !DILocation(line: 807, column: 5, scope: !17477)
!17489 = distinct !DISubprogram(name: "nrf_gpio_port_in_read", scope: !1054, file: !1054, line: 877, type: !17490, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17490 = !DISubroutineType(types: !17491)
!17491 = !{!173, !17492}
!17492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17493, size: 32)
!17493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!17494 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17489, file: !1054, line: 877, type: !17492)
!17495 = !DILocation(line: 877, column: 72, scope: !17489)
!17496 = !DILocation(line: 879, column: 12, scope: !17489)
!17497 = !DILocation(line: 879, column: 19, scope: !17489)
!17498 = !DILocation(line: 879, column: 5, scope: !17489)
!17499 = distinct !DISubprogram(name: "nrfx_gpiote_in_is_set", scope: !1800, file: !1800, line: 1060, type: !17500, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17500 = !DISubroutineType(types: !17501)
!17501 = !{!717, !1796}
!17502 = !DILocalVariable(name: "pin", arg: 1, scope: !17499, file: !1800, line: 1060, type: !1796)
!17503 = !DILocation(line: 1060, column: 46, scope: !17499)
!17504 = !DILocation(line: 1063, column: 30, scope: !17499)
!17505 = !DILocation(line: 1063, column: 12, scope: !17499)
!17506 = !DILocation(line: 1063, column: 5, scope: !17499)
!17507 = distinct !DISubprogram(name: "nrfx_gpiote_in_event_get", scope: !1800, file: !1800, line: 1067, type: !17508, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17508 = !DISubroutineType(types: !17509)
!17509 = !{!1774, !1796}
!17510 = !DILocalVariable(name: "pin", arg: 1, scope: !17507, file: !1800, line: 1067, type: !1796)
!17511 = !DILocation(line: 1067, column: 63, scope: !17507)
!17512 = !DILocation(line: 1073, column: 26, scope: !17513)
!17513 = distinct !DILexicalBlock(scope: !17507, file: !1800, line: 1073, column: 9)
!17514 = !DILocation(line: 1073, column: 9, scope: !17513)
!17515 = !DILocation(line: 1073, column: 9, scope: !17507)
!17516 = !DILocation(line: 1075, column: 60, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17513, file: !1800, line: 1074, column: 5)
!17518 = !DILocation(line: 1075, column: 49, scope: !17517)
!17519 = !DILocation(line: 1075, column: 16, scope: !17517)
!17520 = !DILocation(line: 1075, column: 9, scope: !17517)
!17521 = !DILocation(line: 1078, column: 5, scope: !17507)
!17522 = !DILocation(line: 1079, column: 1, scope: !17507)
!17523 = distinct !DISubprogram(name: "nrfx_gpiote_in_event_addr_get", scope: !1800, file: !1800, line: 1082, type: !17145, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17524 = !DILocalVariable(name: "pin", arg: 1, scope: !17523, file: !1800, line: 1082, type: !1796)
!17525 = !DILocation(line: 1082, column: 58, scope: !17523)
!17526 = !DILocalVariable(name: "event", scope: !17523, file: !1800, line: 1084, type: !1774)
!17527 = !DILocation(line: 1084, column: 24, scope: !17523)
!17528 = !DILocation(line: 1084, column: 57, scope: !17523)
!17529 = !DILocation(line: 1084, column: 32, scope: !17523)
!17530 = !DILocation(line: 1085, column: 53, scope: !17523)
!17531 = !DILocation(line: 1085, column: 12, scope: !17523)
!17532 = !DILocation(line: 1085, column: 5, scope: !17523)
!17533 = distinct !DISubprogram(name: "nrfx_gpiote_irq_handler", scope: !1800, file: !1800, line: 1316, type: !253, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17534 = !DILocalVariable(name: "status", scope: !17533, file: !1800, line: 1318, type: !173)
!17535 = !DILocation(line: 1318, column: 14, scope: !17533)
!17536 = !DILocalVariable(name: "i", scope: !17533, file: !1800, line: 1319, type: !173)
!17537 = !DILocation(line: 1319, column: 14, scope: !17533)
!17538 = !DILocalVariable(name: "event", scope: !17533, file: !1800, line: 1320, type: !1774)
!17539 = !DILocation(line: 1320, column: 24, scope: !17533)
!17540 = !DILocalVariable(name: "mask", scope: !17533, file: !1800, line: 1321, type: !173)
!17541 = !DILocation(line: 1321, column: 14, scope: !17533)
!17542 = !DILocation(line: 1324, column: 12, scope: !17543)
!17543 = distinct !DILexicalBlock(scope: !17533, file: !1800, line: 1324, column: 5)
!17544 = !DILocation(line: 1324, column: 10, scope: !17543)
!17545 = !DILocation(line: 1324, column: 17, scope: !17546)
!17546 = distinct !DILexicalBlock(scope: !17543, file: !1800, line: 1324, column: 5)
!17547 = !DILocation(line: 1324, column: 19, scope: !17546)
!17548 = !DILocation(line: 1324, column: 5, scope: !17543)
!17549 = !DILocation(line: 1326, column: 48, scope: !17550)
!17550 = distinct !DILexicalBlock(scope: !17551, file: !1800, line: 1326, column: 13)
!17551 = distinct !DILexicalBlock(scope: !17546, file: !1800, line: 1325, column: 5)
!17552 = !DILocation(line: 1326, column: 13, scope: !17550)
!17553 = !DILocation(line: 1326, column: 55, scope: !17550)
!17554 = !DILocation(line: 1327, column: 53, scope: !17550)
!17555 = !DILocation(line: 1327, column: 13, scope: !17550)
!17556 = !DILocation(line: 1326, column: 13, scope: !17551)
!17557 = !DILocation(line: 1329, column: 48, scope: !17558)
!17558 = distinct !DILexicalBlock(scope: !17550, file: !1800, line: 1328, column: 9)
!17559 = !DILocation(line: 1329, column: 13, scope: !17558)
!17560 = !DILocation(line: 1330, column: 23, scope: !17558)
!17561 = !DILocation(line: 1330, column: 20, scope: !17558)
!17562 = !DILocation(line: 1331, column: 9, scope: !17558)
!17563 = !DILocation(line: 1332, column: 14, scope: !17551)
!17564 = !DILocation(line: 1335, column: 48, scope: !17551)
!17565 = !DILocation(line: 1335, column: 54, scope: !17551)
!17566 = !DILocation(line: 1335, column: 15, scope: !17551)
!17567 = !DILocation(line: 1336, column: 5, scope: !17551)
!17568 = !DILocation(line: 1324, column: 37, scope: !17546)
!17569 = !DILocation(line: 1324, column: 5, scope: !17546)
!17570 = distinct !{!17570, !17548, !17571}
!17571 = !DILocation(line: 1336, column: 5, scope: !17543)
!17572 = !DILocation(line: 1339, column: 9, scope: !17573)
!17573 = distinct !DILexicalBlock(scope: !17533, file: !1800, line: 1339, column: 9)
!17574 = !DILocation(line: 1339, column: 9, scope: !17533)
!17575 = !DILocation(line: 1341, column: 9, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17573, file: !1800, line: 1340, column: 5)
!17577 = !DILocation(line: 1342, column: 5, scope: !17576)
!17578 = !DILocation(line: 1345, column: 23, scope: !17533)
!17579 = !DILocation(line: 1345, column: 5, scope: !17533)
!17580 = !DILocation(line: 1346, column: 1, scope: !17533)
!17581 = distinct !DISubprogram(name: "nrf_gpiote_event_check", scope: !1704, file: !1704, line: 476, type: !17582, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17582 = !DISubroutineType(types: !17583)
!17583 = !{!717, !16685, !1774}
!17584 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17581, file: !1704, line: 476, type: !16685)
!17585 = !DILocation(line: 476, column: 71, scope: !17581)
!17586 = !DILocalVariable(name: "event", arg: 2, scope: !17581, file: !1704, line: 477, type: !1774)
!17587 = !DILocation(line: 477, column: 71, scope: !17581)
!17588 = !DILocation(line: 479, column: 52, scope: !17581)
!17589 = !DILocation(line: 479, column: 41, scope: !17581)
!17590 = !DILocation(line: 479, column: 70, scope: !17581)
!17591 = !DILocation(line: 479, column: 58, scope: !17581)
!17592 = !DILocation(line: 479, column: 18, scope: !17581)
!17593 = !DILocation(line: 479, column: 12, scope: !17581)
!17594 = !DILocation(line: 479, column: 5, scope: !17581)
!17595 = distinct !DISubprogram(name: "nrf_gpiote_int_enable_check", scope: !1704, file: !1704, line: 504, type: !17596, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17596 = !DISubroutineType(types: !17597)
!17597 = !{!173, !16685, !173}
!17598 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17595, file: !1704, line: 504, type: !16685)
!17599 = !DILocation(line: 504, column: 80, scope: !17595)
!17600 = !DILocalVariable(name: "mask", arg: 2, scope: !17595, file: !1704, line: 504, type: !173)
!17601 = !DILocation(line: 504, column: 96, scope: !17595)
!17602 = !DILocation(line: 506, column: 12, scope: !17595)
!17603 = !DILocation(line: 506, column: 19, scope: !17595)
!17604 = !DILocation(line: 506, column: 30, scope: !17595)
!17605 = !DILocation(line: 506, column: 28, scope: !17595)
!17606 = !DILocation(line: 506, column: 5, scope: !17595)
!17607 = distinct !DISubprogram(name: "port_event_handle", scope: !1800, file: !1800, line: 1223, type: !253, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17608 = !DILocalVariable(name: "pins_to_check", scope: !17607, file: !1800, line: 1225, type: !1821)
!17609 = !DILocation(line: 1225, column: 14, scope: !17607)
!17610 = !DILocalVariable(name: "input", scope: !17607, file: !1800, line: 1226, type: !1821)
!17611 = !DILocation(line: 1226, column: 14, scope: !17607)
!17612 = !DILocalVariable(name: "rel_pin", scope: !17607, file: !1800, line: 1227, type: !156)
!17613 = !DILocation(line: 1227, column: 13, scope: !17607)
!17614 = !DILocalVariable(name: "pin", scope: !17607, file: !1800, line: 1228, type: !156)
!17615 = !DILocation(line: 1228, column: 13, scope: !17607)
!17616 = !DILocalVariable(name: "trigger", scope: !17607, file: !1800, line: 1229, type: !1790)
!17617 = !DILocation(line: 1229, column: 27, scope: !17607)
!17618 = !DILocation(line: 1231, column: 40, scope: !17607)
!17619 = !DILocation(line: 1231, column: 5, scope: !17607)
!17620 = !DILocalVariable(name: "port_idx", scope: !17621, file: !1800, line: 1233, type: !173)
!17621 = distinct !DILexicalBlock(scope: !17607, file: !1800, line: 1233, column: 5)
!17622 = !DILocation(line: 1233, column: 19, scope: !17621)
!17623 = !DILocation(line: 1233, column: 10, scope: !17621)
!17624 = !DILocation(line: 1233, column: 33, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17621, file: !1800, line: 1233, column: 5)
!17626 = !DILocation(line: 1233, column: 42, scope: !17625)
!17627 = !DILocation(line: 1233, column: 5, scope: !17621)
!17628 = !DILocation(line: 1235, column: 50, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17625, file: !1800, line: 1234, column: 5)
!17630 = !DILocation(line: 1235, column: 35, scope: !17629)
!17631 = !DILocation(line: 1235, column: 23, scope: !17629)
!17632 = !DILocation(line: 1235, column: 9, scope: !17629)
!17633 = !DILocation(line: 1235, column: 33, scope: !17629)
!17634 = !DILocation(line: 1236, column: 5, scope: !17629)
!17635 = !DILocation(line: 1233, column: 64, scope: !17625)
!17636 = !DILocation(line: 1233, column: 5, scope: !17625)
!17637 = distinct !{!17637, !17627, !17638}
!17638 = !DILocation(line: 1236, column: 5, scope: !17621)
!17639 = !DILocation(line: 1238, column: 5, scope: !17607)
!17640 = !DILocalVariable(name: "i", scope: !17641, file: !1800, line: 1239, type: !173)
!17641 = distinct !DILexicalBlock(scope: !17642, file: !1800, line: 1239, column: 9)
!17642 = distinct !DILexicalBlock(scope: !17607, file: !1800, line: 1238, column: 8)
!17643 = !DILocation(line: 1239, column: 23, scope: !17641)
!17644 = !DILocation(line: 1239, column: 14, scope: !17641)
!17645 = !DILocation(line: 1239, column: 30, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17641, file: !1800, line: 1239, column: 9)
!17647 = !DILocation(line: 1239, column: 32, scope: !17646)
!17648 = !DILocation(line: 1239, column: 9, scope: !17641)
!17649 = !DILocation(line: 1241, column: 13, scope: !17650)
!17650 = distinct !DILexicalBlock(scope: !17646, file: !1800, line: 1240, column: 9)
!17651 = !DILocation(line: 1241, column: 34, scope: !17650)
!17652 = !DILocation(line: 1241, column: 20, scope: !17650)
!17653 = !DILocalVariable(name: "sense", scope: !17654, file: !1800, line: 1243, type: !1797)
!17654 = distinct !DILexicalBlock(scope: !17650, file: !1800, line: 1242, column: 13)
!17655 = !DILocation(line: 1243, column: 38, scope: !17654)
!17656 = !DILocalVariable(name: "pin_state", scope: !17654, file: !1800, line: 1244, type: !717)
!17657 = !DILocation(line: 1244, column: 22, scope: !17654)
!17658 = !DILocation(line: 1246, column: 27, scope: !17654)
!17659 = !DILocation(line: 1246, column: 25, scope: !17654)
!17660 = !DILocation(line: 1247, column: 38, scope: !17654)
!17661 = !DILocation(line: 1247, column: 37, scope: !17654)
!17662 = !DILocation(line: 1247, column: 31, scope: !17654)
!17663 = !DILocation(line: 1247, column: 17, scope: !17654)
!17664 = !DILocation(line: 1247, column: 34, scope: !17654)
!17665 = !DILocation(line: 1249, column: 23, scope: !17654)
!17666 = !DILocation(line: 1249, column: 38, scope: !17654)
!17667 = !DILocation(line: 1249, column: 36, scope: !17654)
!17668 = !DILocation(line: 1249, column: 31, scope: !17654)
!17669 = !DILocation(line: 1249, column: 21, scope: !17654)
!17670 = !DILocation(line: 1251, column: 27, scope: !17654)
!17671 = !DILocation(line: 1251, column: 25, scope: !17654)
!17672 = !DILocation(line: 1252, column: 48, scope: !17654)
!17673 = !DILocation(line: 1252, column: 25, scope: !17654)
!17674 = !DILocation(line: 1252, column: 23, scope: !17654)
!17675 = !DILocation(line: 1253, column: 52, scope: !17654)
!17676 = !DILocation(line: 1253, column: 57, scope: !17654)
!17677 = !DILocation(line: 1253, column: 29, scope: !17654)
!17678 = !DILocation(line: 1253, column: 27, scope: !17654)
!17679 = !DILocation(line: 1256, column: 22, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17654, file: !1800, line: 1256, column: 21)
!17681 = !DILocation(line: 1256, column: 32, scope: !17680)
!17682 = !DILocation(line: 1256, column: 36, scope: !17680)
!17683 = !DILocation(line: 1256, column: 42, scope: !17680)
!17684 = !DILocation(line: 1256, column: 71, scope: !17680)
!17685 = !DILocation(line: 1257, column: 23, scope: !17680)
!17686 = !DILocation(line: 1257, column: 33, scope: !17680)
!17687 = !DILocation(line: 1257, column: 37, scope: !17680)
!17688 = !DILocation(line: 1257, column: 43, scope: !17680)
!17689 = !DILocation(line: 1256, column: 21, scope: !17654)
!17690 = !DILocation(line: 1259, column: 50, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17680, file: !1800, line: 1258, column: 17)
!17692 = !DILocation(line: 1259, column: 55, scope: !17691)
!17693 = !DILocation(line: 1259, column: 64, scope: !17691)
!17694 = !DILocation(line: 1259, column: 21, scope: !17691)
!17695 = !DILocation(line: 1260, column: 17, scope: !17691)
!17696 = distinct !{!17696, !17649, !17697}
!17697 = !DILocation(line: 1261, column: 13, scope: !17650)
!17698 = !DILocation(line: 1262, column: 9, scope: !17650)
!17699 = !DILocation(line: 1239, column: 47, scope: !17646)
!17700 = !DILocation(line: 1239, column: 9, scope: !17646)
!17701 = distinct !{!17701, !17648, !17702}
!17702 = !DILocation(line: 1262, column: 9, scope: !17641)
!17703 = !DILocalVariable(name: "port_idx", scope: !17704, file: !1800, line: 1266, type: !173)
!17704 = distinct !DILexicalBlock(scope: !17642, file: !1800, line: 1266, column: 9)
!17705 = !DILocation(line: 1266, column: 23, scope: !17704)
!17706 = !DILocation(line: 1266, column: 14, scope: !17704)
!17707 = !DILocation(line: 1266, column: 37, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17704, file: !1800, line: 1266, column: 9)
!17709 = !DILocation(line: 1266, column: 46, scope: !17708)
!17710 = !DILocation(line: 1266, column: 9, scope: !17704)
!17711 = !DILocation(line: 1268, column: 54, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17708, file: !1800, line: 1267, column: 9)
!17713 = !DILocation(line: 1268, column: 39, scope: !17712)
!17714 = !DILocation(line: 1268, column: 27, scope: !17712)
!17715 = !DILocation(line: 1268, column: 13, scope: !17712)
!17716 = !DILocation(line: 1268, column: 37, scope: !17712)
!17717 = !DILocation(line: 1269, column: 9, scope: !17712)
!17718 = !DILocation(line: 1266, column: 68, scope: !17708)
!17719 = !DILocation(line: 1266, column: 9, scope: !17708)
!17720 = distinct !{!17720, !17710, !17721}
!17721 = !DILocation(line: 1269, column: 9, scope: !17704)
!17722 = !DILocalVariable(name: "i", scope: !17723, file: !1800, line: 1274, type: !173)
!17723 = distinct !DILexicalBlock(scope: !17642, file: !1800, line: 1274, column: 9)
!17724 = !DILocation(line: 1274, column: 23, scope: !17723)
!17725 = !DILocation(line: 1274, column: 14, scope: !17723)
!17726 = !DILocation(line: 1274, column: 30, scope: !17727)
!17727 = distinct !DILexicalBlock(scope: !17723, file: !1800, line: 1274, column: 9)
!17728 = !DILocation(line: 1274, column: 32, scope: !17727)
!17729 = !DILocation(line: 1274, column: 9, scope: !17723)
!17730 = !DILocalVariable(name: "pin_mask", scope: !17731, file: !1800, line: 1276, type: !173)
!17731 = distinct !DILexicalBlock(scope: !17727, file: !1800, line: 1275, column: 9)
!17732 = !DILocation(line: 1276, column: 22, scope: !17731)
!17733 = !DILocation(line: 1276, column: 47, scope: !17731)
!17734 = !DILocation(line: 1276, column: 33, scope: !17731)
!17735 = !DILocation(line: 1278, column: 13, scope: !17731)
!17736 = !DILocation(line: 1278, column: 20, scope: !17731)
!17737 = !DILocation(line: 1280, column: 27, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17731, file: !1800, line: 1279, column: 13)
!17739 = !DILocation(line: 1280, column: 25, scope: !17738)
!17740 = !DILocation(line: 1281, column: 30, scope: !17738)
!17741 = !DILocation(line: 1281, column: 29, scope: !17738)
!17742 = !DILocation(line: 1281, column: 26, scope: !17738)
!17743 = !DILocation(line: 1282, column: 23, scope: !17738)
!17744 = !DILocation(line: 1282, column: 38, scope: !17738)
!17745 = !DILocation(line: 1282, column: 36, scope: !17738)
!17746 = !DILocation(line: 1282, column: 31, scope: !17738)
!17747 = !DILocation(line: 1282, column: 21, scope: !17738)
!17748 = !DILocation(line: 1283, column: 44, scope: !17749)
!17749 = distinct !DILexicalBlock(scope: !17738, file: !1800, line: 1283, column: 21)
!17750 = !DILocation(line: 1283, column: 21, scope: !17749)
!17751 = !DILocation(line: 1283, column: 49, scope: !17749)
!17752 = !DILocation(line: 1283, column: 21, scope: !17738)
!17753 = !DILocation(line: 1285, column: 31, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17749, file: !1800, line: 1284, column: 17)
!17755 = !DILocation(line: 1285, column: 29, scope: !17754)
!17756 = !DILocation(line: 1286, column: 25, scope: !17757)
!17757 = distinct !DILexicalBlock(scope: !17754, file: !1800, line: 1286, column: 25)
!17758 = !DILocation(line: 1286, column: 33, scope: !17757)
!17759 = !DILocation(line: 1286, column: 25, scope: !17754)
!17760 = !DILocation(line: 1288, column: 38, scope: !17761)
!17761 = distinct !DILexicalBlock(scope: !17757, file: !1800, line: 1287, column: 21)
!17762 = !DILocation(line: 1288, column: 37, scope: !17761)
!17763 = !DILocation(line: 1288, column: 31, scope: !17761)
!17764 = !DILocation(line: 1288, column: 25, scope: !17761)
!17765 = !DILocation(line: 1288, column: 34, scope: !17761)
!17766 = !DILocation(line: 1289, column: 21, scope: !17761)
!17767 = !DILocation(line: 1290, column: 30, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17757, file: !1800, line: 1290, column: 30)
!17769 = !DILocation(line: 1290, column: 38, scope: !17768)
!17770 = !DILocation(line: 1290, column: 30, scope: !17757)
!17771 = !DILocation(line: 1292, column: 37, scope: !17772)
!17772 = distinct !DILexicalBlock(scope: !17768, file: !1800, line: 1291, column: 21)
!17773 = !DILocation(line: 1292, column: 31, scope: !17772)
!17774 = !DILocation(line: 1292, column: 25, scope: !17772)
!17775 = !DILocation(line: 1292, column: 34, scope: !17772)
!17776 = !DILocation(line: 1293, column: 21, scope: !17772)
!17777 = !DILocation(line: 1294, column: 17, scope: !17754)
!17778 = distinct !{!17778, !17735, !17779}
!17779 = !DILocation(line: 1295, column: 13, scope: !17731)
!17780 = !DILocation(line: 1296, column: 9, scope: !17731)
!17781 = !DILocation(line: 1274, column: 47, scope: !17727)
!17782 = !DILocation(line: 1274, column: 9, scope: !17727)
!17783 = distinct !{!17783, !17729, !17784}
!17784 = !DILocation(line: 1296, column: 9, scope: !17723)
!17785 = !DILocation(line: 1298, column: 9, scope: !17642)
!17786 = !DILocation(line: 1299, column: 5, scope: !17642)
!17787 = !DILocation(line: 1299, column: 35, scope: !17607)
!17788 = !DILocation(line: 1299, column: 42, scope: !17607)
!17789 = !DILocation(line: 1299, column: 14, scope: !17607)
!17790 = distinct !{!17790, !17639, !17791}
!17791 = !DILocation(line: 1299, column: 56, scope: !17607)
!17792 = !DILocation(line: 1300, column: 1, scope: !17607)
!17793 = distinct !DISubprogram(name: "gpiote_evt_handle", scope: !1800, file: !1800, line: 1303, type: !524, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17794 = !DILocalVariable(name: "mask", arg: 1, scope: !17793, file: !1800, line: 1303, type: !173)
!17795 = !DILocation(line: 1303, column: 40, scope: !17793)
!17796 = !DILocation(line: 1305, column: 5, scope: !17793)
!17797 = !DILocation(line: 1305, column: 12, scope: !17793)
!17798 = !DILocalVariable(name: "ch", scope: !17799, file: !1800, line: 1307, type: !173)
!17799 = distinct !DILexicalBlock(scope: !17793, file: !1800, line: 1306, column: 5)
!17800 = !DILocation(line: 1307, column: 18, scope: !17799)
!17801 = !DILocation(line: 1307, column: 23, scope: !17799)
!17802 = !DILocation(line: 1308, column: 18, scope: !17799)
!17803 = !DILocation(line: 1308, column: 17, scope: !17799)
!17804 = !DILocation(line: 1308, column: 14, scope: !17799)
!17805 = !DILocalVariable(name: "pin", scope: !17799, file: !1800, line: 1309, type: !1796)
!17806 = !DILocation(line: 1309, column: 27, scope: !17799)
!17807 = !DILocation(line: 1309, column: 70, scope: !17799)
!17808 = !DILocation(line: 1309, column: 33, scope: !17799)
!17809 = !DILocalVariable(name: "polarity", scope: !17799, file: !1800, line: 1310, type: !1789)
!17810 = !DILocation(line: 1310, column: 31, scope: !17799)
!17811 = !DILocation(line: 1310, column: 84, scope: !17799)
!17812 = !DILocation(line: 1310, column: 42, scope: !17799)
!17813 = !DILocation(line: 1312, column: 22, scope: !17799)
!17814 = !DILocation(line: 1312, column: 54, scope: !17799)
!17815 = !DILocation(line: 1312, column: 27, scope: !17799)
!17816 = !DILocation(line: 1312, column: 9, scope: !17799)
!17817 = distinct !{!17817, !17796, !17818}
!17818 = !DILocation(line: 1313, column: 5, scope: !17793)
!17819 = !DILocation(line: 1314, column: 1, scope: !17793)
!17820 = distinct !DISubprogram(name: "nrf_gpiote_event_pin_get", scope: !1704, file: !1704, line: 557, type: !17596, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17821 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17820, file: !1704, line: 557, type: !16685)
!17822 = !DILocation(line: 557, column: 77, scope: !17820)
!17823 = !DILocalVariable(name: "idx", arg: 2, scope: !17820, file: !1704, line: 557, type: !173)
!17824 = !DILocation(line: 557, column: 93, scope: !17820)
!17825 = !DILocation(line: 559, column: 14, scope: !17820)
!17826 = !DILocation(line: 559, column: 21, scope: !17820)
!17827 = !DILocation(line: 559, column: 28, scope: !17820)
!17828 = !DILocation(line: 559, column: 33, scope: !17820)
!17829 = !DILocation(line: 559, column: 63, scope: !17820)
!17830 = !DILocation(line: 559, column: 5, scope: !17820)
!17831 = distinct !DISubprogram(name: "nrf_gpiote_event_polarity_get", scope: !1704, file: !1704, line: 562, type: !17832, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17832 = !DISubroutineType(types: !17833)
!17833 = !{!1789, !16685, !173}
!17834 = !DILocalVariable(name: "p_reg", arg: 1, scope: !17831, file: !1704, line: 562, type: !16685)
!17835 = !DILocation(line: 562, column: 95, scope: !17831)
!17836 = !DILocalVariable(name: "idx", arg: 2, scope: !17831, file: !1704, line: 563, type: !173)
!17837 = !DILocation(line: 563, column: 95, scope: !17831)
!17838 = !DILocation(line: 565, column: 37, scope: !17831)
!17839 = !DILocation(line: 565, column: 44, scope: !17831)
!17840 = !DILocation(line: 565, column: 51, scope: !17831)
!17841 = !DILocation(line: 565, column: 56, scope: !17831)
!17842 = !DILocation(line: 565, column: 86, scope: !17831)
!17843 = !DILocation(line: 565, column: 5, scope: !17831)
!17844 = distinct !DISubprogram(name: "call_handler", scope: !1800, file: !1800, line: 1088, type: !17845, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17845 = !DISubroutineType(types: !17846)
!17846 = !{null, !1796, !1790}
!17847 = !DILocalVariable(name: "pin", arg: 1, scope: !17844, file: !1800, line: 1088, type: !1796)
!17848 = !DILocation(line: 1088, column: 44, scope: !17844)
!17849 = !DILocalVariable(name: "trigger", arg: 2, scope: !17844, file: !1800, line: 1088, type: !1790)
!17850 = !DILocation(line: 1088, column: 71, scope: !17844)
!17851 = !DILocalVariable(name: "handler", scope: !17844, file: !1800, line: 1090, type: !16134)
!17852 = !DILocation(line: 1090, column: 42, scope: !17844)
!17853 = !DILocation(line: 1090, column: 72, scope: !17844)
!17854 = !DILocation(line: 1090, column: 52, scope: !17844)
!17855 = !DILocation(line: 1092, column: 9, scope: !17856)
!17856 = distinct !DILexicalBlock(scope: !17844, file: !1800, line: 1092, column: 9)
!17857 = !DILocation(line: 1092, column: 9, scope: !17844)
!17858 = !DILocation(line: 1094, column: 9, scope: !17859)
!17859 = distinct !DILexicalBlock(scope: !17856, file: !1800, line: 1093, column: 5)
!17860 = !DILocation(line: 1094, column: 18, scope: !17859)
!17861 = !DILocation(line: 1094, column: 26, scope: !17859)
!17862 = !DILocation(line: 1094, column: 31, scope: !17859)
!17863 = !DILocation(line: 1094, column: 40, scope: !17859)
!17864 = !DILocation(line: 1094, column: 49, scope: !17859)
!17865 = !DILocation(line: 1095, column: 5, scope: !17859)
!17866 = !DILocation(line: 1096, column: 29, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17844, file: !1800, line: 1096, column: 9)
!17868 = !DILocation(line: 1096, column: 9, scope: !17867)
!17869 = !DILocation(line: 1096, column: 9, scope: !17844)
!17870 = !DILocation(line: 1098, column: 29, scope: !17871)
!17871 = distinct !DILexicalBlock(scope: !17867, file: !1800, line: 1097, column: 5)
!17872 = !DILocation(line: 1098, column: 37, scope: !17871)
!17873 = !DILocation(line: 1098, column: 42, scope: !17871)
!17874 = !DILocation(line: 1098, column: 71, scope: !17871)
!17875 = !DILocation(line: 1098, column: 9, scope: !17871)
!17876 = !DILocation(line: 1099, column: 5, scope: !17871)
!17877 = !DILocation(line: 1100, column: 1, scope: !17844)
!17878 = distinct !DISubprogram(name: "channel_handler_get", scope: !1800, file: !1800, line: 579, type: !17879, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17879 = !DISubroutineType(types: !17880)
!17880 = !{!16134, !1796}
!17881 = !DILocalVariable(name: "pin", arg: 1, scope: !17878, file: !1800, line: 579, type: !1796)
!17882 = !DILocation(line: 579, column: 83, scope: !17878)
!17883 = !DILocalVariable(name: "handler_id", scope: !17878, file: !1800, line: 581, type: !250)
!17884 = !DILocation(line: 581, column: 13, scope: !17878)
!17885 = !DILocation(line: 581, column: 26, scope: !17878)
!17886 = !DILocation(line: 583, column: 9, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17878, file: !1800, line: 583, column: 9)
!17888 = !DILocation(line: 583, column: 20, scope: !17887)
!17889 = !DILocation(line: 583, column: 9, scope: !17878)
!17890 = !DILocation(line: 585, column: 9, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17887, file: !1800, line: 584, column: 5)
!17892 = !DILocation(line: 588, column: 27, scope: !17878)
!17893 = !DILocation(line: 588, column: 13, scope: !17878)
!17894 = !DILocation(line: 588, column: 5, scope: !17878)
!17895 = !DILocation(line: 589, column: 1, scope: !17878)
!17896 = distinct !DISubprogram(name: "nrf_gpio_ports_read", scope: !1054, file: !1054, line: 907, type: !17897, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17897 = !DISubroutineType(types: !17898)
!17898 = !{null, !173, !173, !922}
!17899 = !DILocalVariable(name: "start_port", arg: 1, scope: !17896, file: !1054, line: 907, type: !173)
!17900 = !DILocation(line: 907, column: 55, scope: !17896)
!17901 = !DILocalVariable(name: "length", arg: 2, scope: !17896, file: !1054, line: 908, type: !173)
!17902 = !DILocation(line: 908, column: 55, scope: !17896)
!17903 = !DILocalVariable(name: "p_masks", arg: 3, scope: !17896, file: !1054, line: 909, type: !922)
!17904 = !DILocation(line: 909, column: 55, scope: !17896)
!17905 = !DILocalVariable(name: "gpio_regs", scope: !17896, file: !1054, line: 911, type: !17906)
!17906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1775, size: 32, elements: !330)
!17907 = !DILocation(line: 911, column: 21, scope: !17896)
!17908 = !DILocalVariable(name: "i", scope: !17896, file: !1054, line: 914, type: !173)
!17909 = !DILocation(line: 914, column: 14, scope: !17896)
!17910 = !DILocation(line: 916, column: 14, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17896, file: !1054, line: 916, column: 5)
!17912 = !DILocation(line: 916, column: 12, scope: !17911)
!17913 = !DILocation(line: 916, column: 10, scope: !17911)
!17914 = !DILocation(line: 916, column: 26, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17911, file: !1054, line: 916, column: 5)
!17916 = !DILocation(line: 916, column: 31, scope: !17915)
!17917 = !DILocation(line: 916, column: 44, scope: !17915)
!17918 = !DILocation(line: 916, column: 42, scope: !17915)
!17919 = !DILocation(line: 916, column: 28, scope: !17915)
!17920 = !DILocation(line: 916, column: 5, scope: !17911)
!17921 = !DILocation(line: 918, column: 52, scope: !17922)
!17922 = distinct !DILexicalBlock(scope: !17915, file: !1054, line: 917, column: 5)
!17923 = !DILocation(line: 918, column: 42, scope: !17922)
!17924 = !DILocation(line: 918, column: 20, scope: !17922)
!17925 = !DILocation(line: 918, column: 10, scope: !17922)
!17926 = !DILocation(line: 918, column: 18, scope: !17922)
!17927 = !DILocation(line: 919, column: 16, scope: !17922)
!17928 = !DILocation(line: 920, column: 5, scope: !17922)
!17929 = !DILocation(line: 916, column: 54, scope: !17915)
!17930 = !DILocation(line: 916, column: 5, scope: !17915)
!17931 = distinct !{!17931, !17920, !17932}
!17932 = !DILocation(line: 920, column: 5, scope: !17911)
!17933 = !DILocation(line: 921, column: 1, scope: !17896)
!17934 = distinct !DISubprogram(name: "nrf_gpio_pin_sense_get", scope: !1054, file: !1054, line: 819, type: !17935, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17935 = !DISubroutineType(types: !17936)
!17936 = !{!1797, !173}
!17937 = !DILocalVariable(name: "pin_number", arg: 1, scope: !17934, file: !1054, line: 819, type: !173)
!17938 = !DILocation(line: 819, column: 72, scope: !17934)
!17939 = !DILocalVariable(name: "reg", scope: !17934, file: !1054, line: 821, type: !1775)
!17940 = !DILocation(line: 821, column: 21, scope: !17934)
!17941 = !DILocation(line: 821, column: 27, scope: !17934)
!17942 = !DILocation(line: 823, column: 36, scope: !17934)
!17943 = !DILocation(line: 823, column: 41, scope: !17934)
!17944 = !DILocation(line: 823, column: 49, scope: !17934)
!17945 = !DILocation(line: 823, column: 61, scope: !17934)
!17946 = !DILocation(line: 824, column: 60, scope: !17934)
!17947 = !DILocation(line: 823, column: 5, scope: !17934)
!17948 = distinct !DISubprogram(name: "nrf_bitmask_bit_is_set", scope: !15919, file: !15919, line: 74, type: !17949, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17949 = !DISubroutineType(types: !17950)
!17950 = !{!717, !173, !13}
!17951 = !DILocalVariable(name: "bit", arg: 1, scope: !17948, file: !15919, line: 74, type: !173)
!17952 = !DILocation(line: 74, column: 54, scope: !17948)
!17953 = !DILocalVariable(name: "p_mask", arg: 2, scope: !17948, file: !15919, line: 74, type: !13)
!17954 = !DILocation(line: 74, column: 72, scope: !17948)
!17955 = !DILocalVariable(name: "p_mask8", scope: !17948, file: !15919, line: 76, type: !1798)
!17956 = !DILocation(line: 76, column: 21, scope: !17948)
!17957 = !DILocation(line: 76, column: 48, scope: !17948)
!17958 = !DILocalVariable(name: "byte_idx", scope: !17948, file: !15919, line: 77, type: !173)
!17959 = !DILocation(line: 77, column: 14, scope: !17948)
!17960 = !DILocation(line: 77, column: 25, scope: !17948)
!17961 = !DILocation(line: 78, column: 11, scope: !17948)
!17962 = !DILocation(line: 78, column: 9, scope: !17948)
!17963 = !DILocation(line: 79, column: 20, scope: !17948)
!17964 = !DILocation(line: 79, column: 17, scope: !17948)
!17965 = !DILocation(line: 79, column: 27, scope: !17948)
!17966 = !DILocation(line: 79, column: 35, scope: !17948)
!17967 = !DILocation(line: 79, column: 25, scope: !17948)
!17968 = !DILocation(line: 79, column: 46, scope: !17948)
!17969 = !DILocation(line: 79, column: 5, scope: !17948)
!17970 = distinct !DISubprogram(name: "next_sense_cond_call_handler", scope: !1800, file: !1800, line: 1102, type: !17971, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!17971 = !DISubroutineType(types: !17972)
!17972 = !{null, !1796, !1790, !1797}
!17973 = !DILocalVariable(name: "pin", arg: 1, scope: !17970, file: !1800, line: 1102, type: !1796)
!17974 = !DILocation(line: 1102, column: 64, scope: !17970)
!17975 = !DILocalVariable(name: "trigger", arg: 2, scope: !17970, file: !1800, line: 1103, type: !1790)
!17976 = !DILocation(line: 1103, column: 64, scope: !17970)
!17977 = !DILocalVariable(name: "sense", arg: 3, scope: !17970, file: !1800, line: 1104, type: !1797)
!17978 = !DILocation(line: 1104, column: 64, scope: !17970)
!17979 = !DILocation(line: 1106, column: 18, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17970, file: !1800, line: 1106, column: 9)
!17981 = !DILocation(line: 1106, column: 9, scope: !17980)
!17982 = !DILocation(line: 1106, column: 9, scope: !17970)
!17983 = !DILocation(line: 1108, column: 22, scope: !17984)
!17984 = distinct !DILexicalBlock(scope: !17980, file: !1800, line: 1107, column: 5)
!17985 = !DILocation(line: 1108, column: 27, scope: !17984)
!17986 = !DILocation(line: 1108, column: 9, scope: !17984)
!17987 = !DILocation(line: 1109, column: 36, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17984, file: !1800, line: 1109, column: 13)
!17989 = !DILocation(line: 1109, column: 13, scope: !17988)
!17990 = !DILocation(line: 1109, column: 44, scope: !17988)
!17991 = !DILocation(line: 1109, column: 41, scope: !17988)
!17992 = !DILocation(line: 1109, column: 13, scope: !17984)
!17993 = !DILocation(line: 1113, column: 36, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17988, file: !1800, line: 1110, column: 9)
!17995 = !DILocation(line: 1113, column: 13, scope: !17994)
!17996 = !DILocation(line: 1114, column: 36, scope: !17994)
!17997 = !DILocation(line: 1114, column: 41, scope: !17994)
!17998 = !DILocation(line: 1114, column: 13, scope: !17994)
!17999 = !DILocation(line: 1115, column: 9, scope: !17994)
!18000 = !DILocation(line: 1116, column: 5, scope: !17984)
!18001 = !DILocalVariable(name: "next_sense", scope: !18002, file: !1800, line: 1122, type: !1797)
!18002 = distinct !DILexicalBlock(scope: !17980, file: !1800, line: 1118, column: 5)
!18003 = !DILocation(line: 1122, column: 30, scope: !18002)
!18004 = !DILocation(line: 1122, column: 44, scope: !18002)
!18005 = !DILocation(line: 1122, column: 50, scope: !18002)
!18006 = !DILocation(line: 1122, column: 43, scope: !18002)
!18007 = !DILocation(line: 1125, column: 32, scope: !18002)
!18008 = !DILocation(line: 1125, column: 37, scope: !18002)
!18009 = !DILocation(line: 1125, column: 9, scope: !18002)
!18010 = !DILocation(line: 1130, column: 14, scope: !18011)
!18011 = distinct !DILexicalBlock(scope: !18002, file: !1800, line: 1130, column: 13)
!18012 = !DILocation(line: 1130, column: 22, scope: !18011)
!18013 = !DILocation(line: 1130, column: 53, scope: !18011)
!18014 = !DILocation(line: 1131, column: 14, scope: !18011)
!18015 = !DILocation(line: 1131, column: 20, scope: !18011)
!18016 = !DILocation(line: 1131, column: 47, scope: !18011)
!18017 = !DILocation(line: 1131, column: 50, scope: !18011)
!18018 = !DILocation(line: 1131, column: 58, scope: !18011)
!18019 = !DILocation(line: 1131, column: 89, scope: !18011)
!18020 = !DILocation(line: 1132, column: 14, scope: !18011)
!18021 = !DILocation(line: 1132, column: 20, scope: !18011)
!18022 = !DILocation(line: 1132, column: 46, scope: !18011)
!18023 = !DILocation(line: 1132, column: 49, scope: !18011)
!18024 = !DILocation(line: 1132, column: 57, scope: !18011)
!18025 = !DILocation(line: 1130, column: 13, scope: !18002)
!18026 = !DILocation(line: 1134, column: 26, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18011, file: !1800, line: 1133, column: 9)
!18028 = !DILocation(line: 1134, column: 31, scope: !18027)
!18029 = !DILocation(line: 1134, column: 13, scope: !18027)
!18030 = !DILocation(line: 1135, column: 9, scope: !18027)
!18031 = !DILocation(line: 1137, column: 1, scope: !17970)
!18032 = distinct !DISubprogram(name: "input_read_and_check", scope: !1800, file: !1800, line: 1195, type: !18033, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!18033 = !DISubroutineType(types: !18034)
!18034 = !{!717, !922, !922}
!18035 = !DILocalVariable(name: "input", arg: 1, scope: !18032, file: !1800, line: 1195, type: !922)
!18036 = !DILocation(line: 1195, column: 45, scope: !18032)
!18037 = !DILocalVariable(name: "pins_to_check", arg: 2, scope: !18032, file: !1800, line: 1195, type: !922)
!18038 = !DILocation(line: 1195, column: 63, scope: !18032)
!18039 = !DILocalVariable(name: "process_inputs_again", scope: !18032, file: !1800, line: 1197, type: !717)
!18040 = !DILocation(line: 1197, column: 10, scope: !18032)
!18041 = !DILocalVariable(name: "new_input", scope: !18032, file: !1800, line: 1198, type: !1821)
!18042 = !DILocation(line: 1198, column: 14, scope: !18032)
!18043 = !DILocation(line: 1200, column: 40, scope: !18032)
!18044 = !DILocation(line: 1200, column: 5, scope: !18032)
!18045 = !DILocation(line: 1202, column: 26, scope: !18032)
!18046 = !DILocalVariable(name: "port_idx", scope: !18047, file: !1800, line: 1203, type: !173)
!18047 = distinct !DILexicalBlock(scope: !18032, file: !1800, line: 1203, column: 5)
!18048 = !DILocation(line: 1203, column: 19, scope: !18047)
!18049 = !DILocation(line: 1203, column: 10, scope: !18047)
!18050 = !DILocation(line: 1203, column: 33, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !18047, file: !1800, line: 1203, column: 5)
!18052 = !DILocation(line: 1203, column: 42, scope: !18051)
!18053 = !DILocation(line: 1203, column: 5, scope: !18047)
!18054 = !DILocalVariable(name: "input_diff", scope: !18055, file: !1800, line: 1206, type: !173)
!18055 = distinct !DILexicalBlock(scope: !18051, file: !1800, line: 1204, column: 5)
!18056 = !DILocation(line: 1206, column: 18, scope: !18055)
!18057 = !DILocation(line: 1206, column: 31, scope: !18055)
!18058 = !DILocation(line: 1206, column: 37, scope: !18055)
!18059 = !DILocation(line: 1206, column: 59, scope: !18055)
!18060 = !DILocation(line: 1206, column: 49, scope: !18055)
!18061 = !DILocation(line: 1206, column: 47, scope: !18055)
!18062 = !DILocation(line: 1207, column: 37, scope: !18055)
!18063 = !DILocation(line: 1207, column: 27, scope: !18055)
!18064 = !DILocation(line: 1207, column: 9, scope: !18055)
!18065 = !DILocation(line: 1207, column: 15, scope: !18055)
!18066 = !DILocation(line: 1207, column: 25, scope: !18055)
!18067 = !DILocation(line: 1208, column: 13, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18055, file: !1800, line: 1208, column: 13)
!18069 = !DILocation(line: 1208, column: 13, scope: !18055)
!18070 = !DILocation(line: 1212, column: 40, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !18068, file: !1800, line: 1209, column: 9)
!18072 = !DILocation(line: 1212, column: 13, scope: !18071)
!18073 = !DILocation(line: 1212, column: 27, scope: !18071)
!18074 = !DILocation(line: 1212, column: 37, scope: !18071)
!18075 = !DILocation(line: 1213, column: 34, scope: !18071)
!18076 = !DILocation(line: 1214, column: 9, scope: !18071)
!18077 = !DILocation(line: 1217, column: 13, scope: !18078)
!18078 = distinct !DILexicalBlock(scope: !18068, file: !1800, line: 1216, column: 9)
!18079 = !DILocation(line: 1217, column: 27, scope: !18078)
!18080 = !DILocation(line: 1217, column: 37, scope: !18078)
!18081 = !DILocation(line: 1219, column: 5, scope: !18055)
!18082 = !DILocation(line: 1203, column: 64, scope: !18051)
!18083 = !DILocation(line: 1203, column: 5, scope: !18051)
!18084 = distinct !{!18084, !18053, !18085}
!18085 = !DILocation(line: 1219, column: 5, scope: !18047)
!18086 = !DILocation(line: 1220, column: 12, scope: !18032)
!18087 = !DILocation(line: 1220, column: 5, scope: !18032)
!18088 = distinct !DISubprogram(name: "is_level", scope: !1800, file: !1800, line: 266, type: !18089, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1700, retainedNodes: !223)
!18089 = !DISubroutineType(types: !18090)
!18090 = !{!717, !1790}
!18091 = !DILocalVariable(name: "trigger", arg: 1, scope: !18088, file: !1800, line: 266, type: !1790)
!18092 = !DILocation(line: 266, column: 44, scope: !18088)
!18093 = !DILocation(line: 268, column: 16, scope: !18088)
!18094 = !DILocation(line: 268, column: 24, scope: !18088)
!18095 = !DILocation(line: 268, column: 9, scope: !18088)
!18096 = distinct !DISubprogram(name: "z_device_state_init", scope: !18097, file: !18097, line: 23, type: !253, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18097 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18098 = !DILocalVariable(name: "dev", scope: !18096, file: !18097, line: 25, type: !18099)
!18099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18100, size: 32)
!18100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18101)
!18101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 378, size: 192, elements: !18102)
!18102 = !{!18103, !18104, !18105, !18106, !18112, !18113}
!18103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !18101, file: !801, line: 380, baseType: !256, size: 32)
!18104 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !18101, file: !801, line: 382, baseType: !13, size: 32, offset: 32)
!18105 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !18101, file: !801, line: 384, baseType: !13, size: 32, offset: 64)
!18106 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !18101, file: !801, line: 386, baseType: !18107, size: 32, offset: 96)
!18107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18108, size: 32)
!18108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !801, line: 351, size: 16, elements: !18109)
!18109 = !{!18110, !18111}
!18110 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !18108, file: !801, line: 359, baseType: !156, size: 8)
!18111 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !18108, file: !801, line: 364, baseType: !717, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!18112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !18101, file: !801, line: 388, baseType: !102, size: 32, offset: 128)
!18113 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !18101, file: !801, line: 396, baseType: !826, size: 32, offset: 160)
!18114 = !DILocation(line: 25, column: 23, scope: !18096)
!18115 = !DILocation(line: 27, column: 2, scope: !18096)
!18116 = !DILocation(line: 27, column: 9, scope: !18096)
!18117 = !DILocation(line: 27, column: 13, scope: !18096)
!18118 = !DILocation(line: 28, column: 17, scope: !18119)
!18119 = distinct !DILexicalBlock(scope: !18096, file: !18097, line: 27, column: 29)
!18120 = !DILocation(line: 28, column: 3, scope: !18119)
!18121 = !DILocation(line: 29, column: 3, scope: !18119)
!18122 = distinct !{!18122, !18115, !18123}
!18123 = !DILocation(line: 30, column: 2, scope: !18096)
!18124 = !DILocation(line: 31, column: 1, scope: !18096)
!18125 = distinct !DISubprogram(name: "z_object_init", scope: !31, file: !31, line: 200, type: !17, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18126 = !DILocalVariable(name: "obj", arg: 1, scope: !18125, file: !31, line: 200, type: !13)
!18127 = !DILocation(line: 200, column: 46, scope: !18125)
!18128 = !DILocation(line: 202, column: 2, scope: !18125)
!18129 = !DILocation(line: 203, column: 1, scope: !18125)
!18130 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !18097, file: !18097, line: 33, type: !18131, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18131 = !DISubroutineType(types: !18132)
!18132 = !{!18099, !256}
!18133 = !DILocalVariable(name: "name", arg: 1, scope: !18130, file: !18097, line: 33, type: !256)
!18134 = !DILocation(line: 33, column: 60, scope: !18130)
!18135 = !DILocalVariable(name: "dev", scope: !18130, file: !18097, line: 35, type: !18099)
!18136 = !DILocation(line: 35, column: 23, scope: !18130)
!18137 = !DILocation(line: 40, column: 7, scope: !18138)
!18138 = distinct !DILexicalBlock(scope: !18130, file: !18097, line: 40, column: 6)
!18139 = !DILocation(line: 40, column: 12, scope: !18138)
!18140 = !DILocation(line: 40, column: 21, scope: !18138)
!18141 = !DILocation(line: 40, column: 25, scope: !18138)
!18142 = !DILocation(line: 40, column: 33, scope: !18138)
!18143 = !DILocation(line: 40, column: 6, scope: !18130)
!18144 = !DILocation(line: 41, column: 3, scope: !18145)
!18145 = distinct !DILexicalBlock(scope: !18138, file: !18097, line: 40, column: 43)
!18146 = !DILocation(line: 49, column: 11, scope: !18147)
!18147 = distinct !DILexicalBlock(scope: !18130, file: !18097, line: 49, column: 2)
!18148 = !DILocation(line: 49, column: 7, scope: !18147)
!18149 = !DILocation(line: 49, column: 29, scope: !18150)
!18150 = distinct !DILexicalBlock(scope: !18147, file: !18097, line: 49, column: 2)
!18151 = !DILocation(line: 49, column: 33, scope: !18150)
!18152 = !DILocation(line: 49, column: 2, scope: !18147)
!18153 = !DILocation(line: 50, column: 25, scope: !18154)
!18154 = distinct !DILexicalBlock(scope: !18155, file: !18097, line: 50, column: 7)
!18155 = distinct !DILexicalBlock(scope: !18150, file: !18097, line: 49, column: 57)
!18156 = !DILocation(line: 50, column: 7, scope: !18154)
!18157 = !DILocation(line: 50, column: 30, scope: !18154)
!18158 = !DILocation(line: 50, column: 34, scope: !18154)
!18159 = !DILocation(line: 50, column: 39, scope: !18154)
!18160 = !DILocation(line: 50, column: 47, scope: !18154)
!18161 = !DILocation(line: 50, column: 44, scope: !18154)
!18162 = !DILocation(line: 50, column: 7, scope: !18155)
!18163 = !DILocation(line: 51, column: 11, scope: !18164)
!18164 = distinct !DILexicalBlock(scope: !18154, file: !18097, line: 50, column: 54)
!18165 = !DILocation(line: 51, column: 4, scope: !18164)
!18166 = !DILocation(line: 53, column: 2, scope: !18155)
!18167 = !DILocation(line: 49, column: 53, scope: !18150)
!18168 = !DILocation(line: 49, column: 2, scope: !18150)
!18169 = distinct !{!18169, !18152, !18170}
!18170 = !DILocation(line: 53, column: 2, scope: !18147)
!18171 = !DILocation(line: 55, column: 11, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18130, file: !18097, line: 55, column: 2)
!18173 = !DILocation(line: 55, column: 7, scope: !18172)
!18174 = !DILocation(line: 55, column: 29, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !18172, file: !18097, line: 55, column: 2)
!18176 = !DILocation(line: 55, column: 33, scope: !18175)
!18177 = !DILocation(line: 55, column: 2, scope: !18172)
!18178 = !DILocation(line: 56, column: 25, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18180, file: !18097, line: 56, column: 7)
!18180 = distinct !DILexicalBlock(scope: !18175, file: !18097, line: 55, column: 57)
!18181 = !DILocation(line: 56, column: 7, scope: !18179)
!18182 = !DILocation(line: 56, column: 30, scope: !18179)
!18183 = !DILocation(line: 56, column: 41, scope: !18179)
!18184 = !DILocation(line: 56, column: 47, scope: !18179)
!18185 = !DILocation(line: 56, column: 52, scope: !18179)
!18186 = !DILocation(line: 56, column: 34, scope: !18179)
!18187 = !DILocation(line: 56, column: 58, scope: !18179)
!18188 = !DILocation(line: 56, column: 7, scope: !18180)
!18189 = !DILocation(line: 57, column: 11, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18179, file: !18097, line: 56, column: 65)
!18191 = !DILocation(line: 57, column: 4, scope: !18190)
!18192 = !DILocation(line: 59, column: 2, scope: !18180)
!18193 = !DILocation(line: 55, column: 53, scope: !18175)
!18194 = !DILocation(line: 55, column: 2, scope: !18175)
!18195 = distinct !{!18195, !18177, !18196}
!18196 = !DILocation(line: 59, column: 2, scope: !18172)
!18197 = !DILocation(line: 61, column: 2, scope: !18130)
!18198 = !DILocation(line: 62, column: 1, scope: !18130)
!18199 = distinct !DISubprogram(name: "z_device_is_ready", scope: !18097, file: !18097, line: 93, type: !18200, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18200 = !DISubroutineType(types: !18201)
!18201 = !{!717, !18099}
!18202 = !DILocalVariable(name: "dev", arg: 1, scope: !18199, file: !18097, line: 93, type: !18099)
!18203 = !DILocation(line: 93, column: 45, scope: !18199)
!18204 = !DILocation(line: 99, column: 6, scope: !18205)
!18205 = distinct !DILexicalBlock(scope: !18199, file: !18097, line: 99, column: 6)
!18206 = !DILocation(line: 99, column: 10, scope: !18205)
!18207 = !DILocation(line: 99, column: 6, scope: !18199)
!18208 = !DILocation(line: 100, column: 3, scope: !18209)
!18209 = distinct !DILexicalBlock(scope: !18205, file: !18097, line: 99, column: 19)
!18210 = !DILocation(line: 103, column: 9, scope: !18199)
!18211 = !DILocation(line: 103, column: 14, scope: !18199)
!18212 = !DILocation(line: 103, column: 21, scope: !18199)
!18213 = !DILocation(line: 103, column: 33, scope: !18199)
!18214 = !DILocation(line: 103, column: 37, scope: !18199)
!18215 = !DILocation(line: 103, column: 42, scope: !18199)
!18216 = !DILocation(line: 103, column: 49, scope: !18199)
!18217 = !DILocation(line: 103, column: 58, scope: !18199)
!18218 = !DILocation(line: 0, scope: !18199)
!18219 = !DILocation(line: 103, column: 2, scope: !18199)
!18220 = !DILocation(line: 104, column: 1, scope: !18199)
!18221 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !18097, file: !18097, line: 87, type: !18222, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18222 = !DISubroutineType(types: !18223)
!18223 = !{!217, !18224}
!18224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18099, size: 32)
!18225 = !DILocalVariable(name: "devices", arg: 1, scope: !18221, file: !18097, line: 87, type: !18224)
!18226 = !DILocation(line: 87, column: 54, scope: !18221)
!18227 = !DILocation(line: 89, column: 3, scope: !18221)
!18228 = !DILocation(line: 89, column: 11, scope: !18221)
!18229 = !DILocation(line: 90, column: 2, scope: !18221)
!18230 = distinct !DISubprogram(name: "device_required_foreach", scope: !18097, file: !18097, line: 125, type: !18231, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18231 = !DISubroutineType(types: !18232)
!18232 = !{!103, !18099, !18233, !102}
!18233 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !801, line: 471, baseType: !18234)
!18234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18235, size: 32)
!18235 = !DISubroutineType(types: !18236)
!18236 = !{!103, !18099, !102}
!18237 = !DILocalVariable(name: "dev", arg: 1, scope: !18230, file: !18097, line: 125, type: !18099)
!18238 = !DILocation(line: 125, column: 50, scope: !18230)
!18239 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !18230, file: !18097, line: 126, type: !18233)
!18240 = !DILocation(line: 126, column: 34, scope: !18230)
!18241 = !DILocalVariable(name: "context", arg: 3, scope: !18230, file: !18097, line: 127, type: !102)
!18242 = !DILocation(line: 127, column: 14, scope: !18230)
!18243 = !DILocalVariable(name: "handle_count", scope: !18230, file: !18097, line: 129, type: !217)
!18244 = !DILocation(line: 129, column: 9, scope: !18230)
!18245 = !DILocalVariable(name: "handles", scope: !18230, file: !18097, line: 130, type: !826)
!18246 = !DILocation(line: 130, column: 25, scope: !18230)
!18247 = !DILocation(line: 130, column: 63, scope: !18230)
!18248 = !DILocation(line: 130, column: 35, scope: !18230)
!18249 = !DILocation(line: 132, column: 24, scope: !18230)
!18250 = !DILocation(line: 132, column: 33, scope: !18230)
!18251 = !DILocation(line: 132, column: 47, scope: !18230)
!18252 = !DILocation(line: 132, column: 59, scope: !18230)
!18253 = !DILocation(line: 132, column: 9, scope: !18230)
!18254 = !DILocation(line: 132, column: 2, scope: !18230)
!18255 = distinct !DISubprogram(name: "device_required_handles_get", scope: !801, file: !801, line: 493, type: !18256, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18256 = !DISubroutineType(types: !18257)
!18257 = !{!826, !18099, !2495}
!18258 = !DILocalVariable(name: "dev", arg: 1, scope: !18255, file: !801, line: 493, type: !18099)
!18259 = !DILocation(line: 493, column: 50, scope: !18255)
!18260 = !DILocalVariable(name: "count", arg: 2, scope: !18255, file: !801, line: 493, type: !2495)
!18261 = !DILocation(line: 493, column: 63, scope: !18255)
!18262 = !DILocalVariable(name: "rv", scope: !18255, file: !801, line: 495, type: !826)
!18263 = !DILocation(line: 495, column: 25, scope: !18255)
!18264 = !DILocation(line: 495, column: 30, scope: !18255)
!18265 = !DILocation(line: 495, column: 35, scope: !18255)
!18266 = !DILocation(line: 497, column: 6, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18255, file: !801, line: 497, column: 6)
!18268 = !DILocation(line: 497, column: 9, scope: !18267)
!18269 = !DILocation(line: 497, column: 6, scope: !18255)
!18270 = !DILocalVariable(name: "i", scope: !18271, file: !801, line: 498, type: !217)
!18271 = distinct !DILexicalBlock(scope: !18267, file: !801, line: 497, column: 18)
!18272 = !DILocation(line: 498, column: 10, scope: !18271)
!18273 = !DILocation(line: 500, column: 3, scope: !18271)
!18274 = !DILocation(line: 500, column: 11, scope: !18271)
!18275 = !DILocation(line: 500, column: 14, scope: !18271)
!18276 = !DILocation(line: 500, column: 17, scope: !18271)
!18277 = !DILocation(line: 500, column: 40, scope: !18271)
!18278 = !DILocation(line: 501, column: 11, scope: !18271)
!18279 = !DILocation(line: 501, column: 14, scope: !18271)
!18280 = !DILocation(line: 501, column: 17, scope: !18271)
!18281 = !DILocation(line: 0, scope: !18271)
!18282 = !DILocation(line: 502, column: 4, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18271, file: !801, line: 501, column: 40)
!18284 = distinct !{!18284, !18273, !18285}
!18285 = !DILocation(line: 503, column: 3, scope: !18271)
!18286 = !DILocation(line: 504, column: 12, scope: !18271)
!18287 = !DILocation(line: 504, column: 4, scope: !18271)
!18288 = !DILocation(line: 504, column: 10, scope: !18271)
!18289 = !DILocation(line: 505, column: 2, scope: !18271)
!18290 = !DILocation(line: 507, column: 9, scope: !18255)
!18291 = !DILocation(line: 507, column: 2, scope: !18255)
!18292 = distinct !DISubprogram(name: "device_visitor", scope: !18097, file: !18097, line: 106, type: !18293, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18293 = !DISubroutineType(types: !18294)
!18294 = !{!103, !826, !217, !18233, !102}
!18295 = !DILocalVariable(name: "handles", arg: 1, scope: !18292, file: !18097, line: 106, type: !826)
!18296 = !DILocation(line: 106, column: 50, scope: !18292)
!18297 = !DILocalVariable(name: "handle_count", arg: 2, scope: !18292, file: !18097, line: 107, type: !217)
!18298 = !DILocation(line: 107, column: 14, scope: !18292)
!18299 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !18292, file: !18097, line: 108, type: !18233)
!18300 = !DILocation(line: 108, column: 33, scope: !18292)
!18301 = !DILocalVariable(name: "context", arg: 4, scope: !18292, file: !18097, line: 109, type: !102)
!18302 = !DILocation(line: 109, column: 13, scope: !18292)
!18303 = !DILocalVariable(name: "i", scope: !18304, file: !18097, line: 112, type: !217)
!18304 = distinct !DILexicalBlock(scope: !18292, file: !18097, line: 112, column: 2)
!18305 = !DILocation(line: 112, column: 14, scope: !18304)
!18306 = !DILocation(line: 112, column: 7, scope: !18304)
!18307 = !DILocation(line: 112, column: 21, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18304, file: !18097, line: 112, column: 2)
!18309 = !DILocation(line: 112, column: 25, scope: !18308)
!18310 = !DILocation(line: 112, column: 23, scope: !18308)
!18311 = !DILocation(line: 112, column: 2, scope: !18304)
!18312 = !DILocalVariable(name: "dh", scope: !18313, file: !18097, line: 113, type: !800)
!18313 = distinct !DILexicalBlock(scope: !18308, file: !18097, line: 112, column: 44)
!18314 = !DILocation(line: 113, column: 19, scope: !18313)
!18315 = !DILocation(line: 113, column: 24, scope: !18313)
!18316 = !DILocation(line: 113, column: 32, scope: !18313)
!18317 = !DILocalVariable(name: "rdev", scope: !18313, file: !18097, line: 114, type: !18099)
!18318 = !DILocation(line: 114, column: 24, scope: !18313)
!18319 = !DILocation(line: 114, column: 50, scope: !18313)
!18320 = !DILocation(line: 114, column: 31, scope: !18313)
!18321 = !DILocalVariable(name: "rc", scope: !18313, file: !18097, line: 115, type: !103)
!18322 = !DILocation(line: 115, column: 7, scope: !18313)
!18323 = !DILocation(line: 115, column: 12, scope: !18313)
!18324 = !DILocation(line: 115, column: 23, scope: !18313)
!18325 = !DILocation(line: 115, column: 29, scope: !18313)
!18326 = !DILocation(line: 117, column: 7, scope: !18327)
!18327 = distinct !DILexicalBlock(scope: !18313, file: !18097, line: 117, column: 7)
!18328 = !DILocation(line: 117, column: 10, scope: !18327)
!18329 = !DILocation(line: 117, column: 7, scope: !18313)
!18330 = !DILocation(line: 118, column: 11, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18327, file: !18097, line: 117, column: 15)
!18332 = !DILocation(line: 118, column: 4, scope: !18331)
!18333 = !DILocation(line: 120, column: 2, scope: !18313)
!18334 = !DILocation(line: 112, column: 39, scope: !18308)
!18335 = !DILocation(line: 112, column: 2, scope: !18308)
!18336 = distinct !{!18336, !18311, !18337}
!18337 = !DILocation(line: 120, column: 2, scope: !18304)
!18338 = !DILocation(line: 122, column: 9, scope: !18292)
!18339 = !DILocation(line: 122, column: 2, scope: !18292)
!18340 = !DILocation(line: 123, column: 1, scope: !18292)
!18341 = distinct !DISubprogram(name: "device_from_handle", scope: !801, file: !801, line: 439, type: !18342, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18342 = !DISubroutineType(types: !18343)
!18343 = !{!18099, !800}
!18344 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !18341, file: !801, line: 439, type: !800)
!18345 = !DILocation(line: 439, column: 36, scope: !18341)
!18346 = !DILocalVariable(name: "dev", scope: !18341, file: !801, line: 443, type: !18099)
!18347 = !DILocation(line: 443, column: 23, scope: !18341)
!18348 = !DILocalVariable(name: "numdev", scope: !18341, file: !801, line: 444, type: !217)
!18349 = !DILocation(line: 444, column: 9, scope: !18341)
!18350 = !DILocation(line: 446, column: 7, scope: !18351)
!18351 = distinct !DILexicalBlock(scope: !18341, file: !801, line: 446, column: 6)
!18352 = !DILocation(line: 446, column: 18, scope: !18351)
!18353 = !DILocation(line: 446, column: 23, scope: !18351)
!18354 = !DILocation(line: 446, column: 35, scope: !18351)
!18355 = !DILocation(line: 446, column: 27, scope: !18351)
!18356 = !DILocation(line: 446, column: 49, scope: !18351)
!18357 = !DILocation(line: 446, column: 46, scope: !18351)
!18358 = !DILocation(line: 446, column: 6, scope: !18341)
!18359 = !DILocation(line: 447, column: 25, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !18351, file: !801, line: 446, column: 58)
!18361 = !DILocation(line: 447, column: 36, scope: !18360)
!18362 = !DILocation(line: 447, column: 10, scope: !18360)
!18363 = !DILocation(line: 447, column: 7, scope: !18360)
!18364 = !DILocation(line: 448, column: 2, scope: !18360)
!18365 = !DILocation(line: 450, column: 9, scope: !18341)
!18366 = !DILocation(line: 450, column: 2, scope: !18341)
!18367 = distinct !DISubprogram(name: "device_supported_foreach", scope: !18097, file: !18097, line: 135, type: !18231, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18368 = !DILocalVariable(name: "dev", arg: 1, scope: !18367, file: !18097, line: 135, type: !18099)
!18369 = !DILocation(line: 135, column: 51, scope: !18367)
!18370 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !18367, file: !18097, line: 136, type: !18233)
!18371 = !DILocation(line: 136, column: 35, scope: !18367)
!18372 = !DILocalVariable(name: "context", arg: 3, scope: !18367, file: !18097, line: 137, type: !102)
!18373 = !DILocation(line: 137, column: 15, scope: !18367)
!18374 = !DILocalVariable(name: "handle_count", scope: !18367, file: !18097, line: 139, type: !217)
!18375 = !DILocation(line: 139, column: 9, scope: !18367)
!18376 = !DILocalVariable(name: "handles", scope: !18367, file: !18097, line: 140, type: !826)
!18377 = !DILocation(line: 140, column: 25, scope: !18367)
!18378 = !DILocation(line: 140, column: 64, scope: !18367)
!18379 = !DILocation(line: 140, column: 35, scope: !18367)
!18380 = !DILocation(line: 142, column: 24, scope: !18367)
!18381 = !DILocation(line: 142, column: 33, scope: !18367)
!18382 = !DILocation(line: 142, column: 47, scope: !18367)
!18383 = !DILocation(line: 142, column: 59, scope: !18367)
!18384 = !DILocation(line: 142, column: 9, scope: !18367)
!18385 = !DILocation(line: 142, column: 2, scope: !18367)
!18386 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !801, file: !801, line: 573, type: !18256, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2930, retainedNodes: !223)
!18387 = !DILocalVariable(name: "dev", arg: 1, scope: !18386, file: !801, line: 573, type: !18099)
!18388 = !DILocation(line: 573, column: 51, scope: !18386)
!18389 = !DILocalVariable(name: "count", arg: 2, scope: !18386, file: !801, line: 573, type: !2495)
!18390 = !DILocation(line: 573, column: 64, scope: !18386)
!18391 = !DILocalVariable(name: "rv", scope: !18386, file: !801, line: 575, type: !826)
!18392 = !DILocation(line: 575, column: 25, scope: !18386)
!18393 = !DILocation(line: 575, column: 30, scope: !18386)
!18394 = !DILocation(line: 575, column: 35, scope: !18386)
!18395 = !DILocalVariable(name: "region", scope: !18386, file: !801, line: 576, type: !217)
!18396 = !DILocation(line: 576, column: 9, scope: !18386)
!18397 = !DILocalVariable(name: "i", scope: !18386, file: !801, line: 577, type: !217)
!18398 = !DILocation(line: 577, column: 9, scope: !18386)
!18399 = !DILocation(line: 579, column: 6, scope: !18400)
!18400 = distinct !DILexicalBlock(scope: !18386, file: !801, line: 579, column: 6)
!18401 = !DILocation(line: 579, column: 9, scope: !18400)
!18402 = !DILocation(line: 579, column: 6, scope: !18386)
!18403 = !DILocation(line: 581, column: 3, scope: !18404)
!18404 = distinct !DILexicalBlock(scope: !18400, file: !801, line: 579, column: 18)
!18405 = !DILocation(line: 581, column: 10, scope: !18404)
!18406 = !DILocation(line: 581, column: 17, scope: !18404)
!18407 = !DILocation(line: 582, column: 9, scope: !18408)
!18408 = distinct !DILexicalBlock(scope: !18409, file: !801, line: 582, column: 8)
!18409 = distinct !DILexicalBlock(scope: !18404, file: !801, line: 581, column: 23)
!18410 = !DILocation(line: 582, column: 8, scope: !18408)
!18411 = !DILocation(line: 582, column: 12, scope: !18408)
!18412 = !DILocation(line: 582, column: 8, scope: !18409)
!18413 = !DILocation(line: 583, column: 11, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18408, file: !801, line: 582, column: 34)
!18415 = !DILocation(line: 584, column: 4, scope: !18414)
!18416 = !DILocation(line: 585, column: 6, scope: !18409)
!18417 = distinct !{!18417, !18403, !18418}
!18418 = !DILocation(line: 586, column: 3, scope: !18404)
!18419 = !DILocation(line: 588, column: 3, scope: !18404)
!18420 = !DILocation(line: 588, column: 10, scope: !18404)
!18421 = !DILocation(line: 588, column: 13, scope: !18404)
!18422 = !DILocation(line: 588, column: 16, scope: !18404)
!18423 = !DILocation(line: 589, column: 4, scope: !18424)
!18424 = distinct !DILexicalBlock(scope: !18404, file: !801, line: 588, column: 39)
!18425 = distinct !{!18425, !18419, !18426}
!18426 = !DILocation(line: 590, column: 3, scope: !18404)
!18427 = !DILocation(line: 591, column: 12, scope: !18404)
!18428 = !DILocation(line: 591, column: 4, scope: !18404)
!18429 = !DILocation(line: 591, column: 10, scope: !18404)
!18430 = !DILocation(line: 592, column: 2, scope: !18404)
!18431 = !DILocation(line: 594, column: 9, scope: !18386)
!18432 = !DILocation(line: 594, column: 2, scope: !18386)
!18433 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1829, file: !1829, line: 49, type: !18434, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1826, retainedNodes: !223)
!18434 = !DISubroutineType(types: !18435)
!18435 = !{!2489}
!18436 = !DILocation(line: 51, column: 10, scope: !18433)
!18437 = !DILocation(line: 51, column: 20, scope: !18433)
!18438 = !DILocation(line: 51, column: 2, scope: !18433)
!18439 = distinct !DISubprogram(name: "coredump", scope: !2937, file: !2937, line: 209, type: !18440, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18440 = !DISubroutineType(types: !18441)
!18441 = !{null, !32, !18442, !18486}
!18442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18443, size: 32)
!18443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18444)
!18444 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2558, line: 141, baseType: !18445)
!18445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2558, line: 97, size: 256, elements: !18446)
!18446 = !{!18447}
!18447 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !18445, file: !2558, line: 107, baseType: !18448, size: 256)
!18448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2558, line: 98, size: 256, elements: !18449)
!18449 = !{!18450, !18455, !18460, !18465, !18470, !18475, !18480, !18485}
!18450 = !DIDerivedType(tag: DW_TAG_member, scope: !18448, file: !2558, line: 99, baseType: !18451, size: 32)
!18451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18448, file: !2558, line: 99, size: 32, elements: !18452)
!18452 = !{!18453, !18454}
!18453 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !18451, file: !2558, line: 99, baseType: !173, size: 32)
!18454 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !18451, file: !2558, line: 99, baseType: !173, size: 32)
!18455 = !DIDerivedType(tag: DW_TAG_member, scope: !18448, file: !2558, line: 100, baseType: !18456, size: 32, offset: 32)
!18456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18448, file: !2558, line: 100, size: 32, elements: !18457)
!18457 = !{!18458, !18459}
!18458 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !18456, file: !2558, line: 100, baseType: !173, size: 32)
!18459 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !18456, file: !2558, line: 100, baseType: !173, size: 32)
!18460 = !DIDerivedType(tag: DW_TAG_member, scope: !18448, file: !2558, line: 101, baseType: !18461, size: 32, offset: 64)
!18461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18448, file: !2558, line: 101, size: 32, elements: !18462)
!18462 = !{!18463, !18464}
!18463 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !18461, file: !2558, line: 101, baseType: !173, size: 32)
!18464 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !18461, file: !2558, line: 101, baseType: !173, size: 32)
!18465 = !DIDerivedType(tag: DW_TAG_member, scope: !18448, file: !2558, line: 102, baseType: !18466, size: 32, offset: 96)
!18466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18448, file: !2558, line: 102, size: 32, elements: !18467)
!18467 = !{!18468, !18469}
!18468 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !18466, file: !2558, line: 102, baseType: !173, size: 32)
!18469 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !18466, file: !2558, line: 102, baseType: !173, size: 32)
!18470 = !DIDerivedType(tag: DW_TAG_member, scope: !18448, file: !2558, line: 103, baseType: !18471, size: 32, offset: 128)
!18471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18448, file: !2558, line: 103, size: 32, elements: !18472)
!18472 = !{!18473, !18474}
!18473 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !18471, file: !2558, line: 103, baseType: !173, size: 32)
!18474 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !18471, file: !2558, line: 103, baseType: !173, size: 32)
!18475 = !DIDerivedType(tag: DW_TAG_member, scope: !18448, file: !2558, line: 104, baseType: !18476, size: 32, offset: 160)
!18476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18448, file: !2558, line: 104, size: 32, elements: !18477)
!18477 = !{!18478, !18479}
!18478 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !18476, file: !2558, line: 104, baseType: !173, size: 32)
!18479 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !18476, file: !2558, line: 104, baseType: !173, size: 32)
!18480 = !DIDerivedType(tag: DW_TAG_member, scope: !18448, file: !2558, line: 105, baseType: !18481, size: 32, offset: 192)
!18481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18448, file: !2558, line: 105, size: 32, elements: !18482)
!18482 = !{!18483, !18484}
!18483 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !18481, file: !2558, line: 105, baseType: !173, size: 32)
!18484 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !18481, file: !2558, line: 105, baseType: !173, size: 32)
!18485 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !18448, file: !2558, line: 106, baseType: !173, size: 32, offset: 224)
!18486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18487, size: 32)
!18487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !18488)
!18488 = !{!18489, !18547, !18559, !18560, !18561, !18562, !18575}
!18489 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18487, file: !114, line: 247, baseType: !18490, size: 384)
!18490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !18491)
!18491 = !{!18492, !18516, !18523, !18524, !18525, !18534, !18535, !18536}
!18492 = !DIDerivedType(tag: DW_TAG_member, scope: !18490, file: !114, line: 60, baseType: !18493, size: 64)
!18493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18490, file: !114, line: 60, size: 64, elements: !18494)
!18494 = !{!18495, !18510}
!18495 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !18493, file: !114, line: 61, baseType: !18496, size: 64)
!18496 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !18497)
!18497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !18498)
!18498 = !{!18499, !18505}
!18499 = !DIDerivedType(tag: DW_TAG_member, scope: !18497, file: !124, line: 38, baseType: !18500, size: 32)
!18500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18497, file: !124, line: 38, size: 32, elements: !18501)
!18501 = !{!18502, !18504}
!18502 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !18500, file: !124, line: 39, baseType: !18503, size: 32)
!18503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18497, size: 32)
!18504 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !18500, file: !124, line: 40, baseType: !18503, size: 32)
!18505 = !DIDerivedType(tag: DW_TAG_member, scope: !18497, file: !124, line: 42, baseType: !18506, size: 32, offset: 32)
!18506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18497, file: !124, line: 42, size: 32, elements: !18507)
!18507 = !{!18508, !18509}
!18508 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !18506, file: !124, line: 43, baseType: !18503, size: 32)
!18509 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !18506, file: !124, line: 44, baseType: !18503, size: 32)
!18510 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !18493, file: !114, line: 62, baseType: !18511, size: 64)
!18511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !18512)
!18512 = !{!18513}
!18513 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !18511, file: !140, line: 50, baseType: !18514, size: 64)
!18514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18515, size: 64, elements: !145)
!18515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18511, size: 32)
!18516 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !18490, file: !114, line: 68, baseType: !18517, size: 32, offset: 64)
!18517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18518, size: 32)
!18518 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !18519)
!18519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !18520)
!18520 = !{!18521}
!18521 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18519, file: !150, line: 232, baseType: !18522, size: 64)
!18522 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !18497)
!18523 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !18490, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!18524 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !18490, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!18525 = !DIDerivedType(tag: DW_TAG_member, scope: !18490, file: !114, line: 90, baseType: !18526, size: 16, offset: 112)
!18526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18490, file: !114, line: 90, size: 16, elements: !18527)
!18527 = !{!18528, !18533}
!18528 = !DIDerivedType(tag: DW_TAG_member, scope: !18526, file: !114, line: 91, baseType: !18529, size: 16)
!18529 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18526, file: !114, line: 91, size: 16, elements: !18530)
!18530 = !{!18531, !18532}
!18531 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18529, file: !114, line: 96, baseType: !166, size: 8)
!18532 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !18529, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!18533 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !18526, file: !114, line: 100, baseType: !170, size: 16)
!18534 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !18490, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!18535 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !18490, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!18536 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !18490, file: !114, line: 131, baseType: !18537, size: 192, offset: 192)
!18537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !18538)
!18538 = !{!18539, !18540, !18546}
!18539 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !18537, file: !150, line: 245, baseType: !18496, size: 64)
!18540 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !18537, file: !150, line: 246, baseType: !18541, size: 32, offset: 64)
!18541 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !18542)
!18542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18543, size: 32)
!18543 = !DISubroutineType(types: !18544)
!18544 = !{null, !18545}
!18545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18537, size: 32)
!18546 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !18537, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!18547 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !18487, file: !114, line: 250, baseType: !18548, size: 288, offset: 384)
!18548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !18549)
!18549 = !{!18550, !18551, !18552, !18553, !18554, !18555, !18556, !18557, !18558}
!18550 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !18548, file: !190, line: 26, baseType: !173, size: 32)
!18551 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !18548, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!18552 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !18548, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!18553 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !18548, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!18554 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !18548, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!18555 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !18548, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!18556 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !18548, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!18557 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !18548, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!18558 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !18548, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!18559 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !18487, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!18560 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !18487, file: !114, line: 256, baseType: !18518, size: 64, offset: 704)
!18561 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !18487, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!18562 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !18487, file: !114, line: 325, baseType: !18563, size: 32, offset: 800)
!18563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18564, size: 32)
!18564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !18565)
!18565 = !{!18566, !18572, !18573}
!18566 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18564, file: !109, line: 5074, baseType: !18567, size: 96)
!18567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !18568)
!18568 = !{!18569, !18570, !18571}
!18569 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18567, file: !210, line: 57, baseType: !213, size: 32)
!18570 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18567, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!18571 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18567, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!18572 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18564, file: !109, line: 5075, baseType: !18518, size: 64, offset: 96)
!18573 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18564, file: !109, line: 5076, baseType: !18574, offset: 160)
!18574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!18575 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !18487, file: !114, line: 343, baseType: !18576, size: 64, offset: 832)
!18576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !18577)
!18577 = !{!18578, !18579}
!18578 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !18576, file: !190, line: 63, baseType: !173, size: 32)
!18579 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !18576, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!18580 = !DILocalVariable(name: "reason", arg: 1, scope: !18439, file: !2937, line: 209, type: !32)
!18581 = !DILocation(line: 209, column: 28, scope: !18439)
!18582 = !DILocalVariable(name: "esf", arg: 2, scope: !18439, file: !2937, line: 209, type: !18442)
!18583 = !DILocation(line: 209, column: 56, scope: !18439)
!18584 = !DILocalVariable(name: "thread", arg: 3, scope: !18439, file: !2937, line: 210, type: !18486)
!18585 = !DILocation(line: 210, column: 25, scope: !18439)
!18586 = !DILocation(line: 212, column: 1, scope: !18439)
!18587 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2937, file: !2937, line: 214, type: !18588, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18588 = !DISubroutineType(types: !18589)
!18589 = !{null, !22, !22}
!18590 = !DILocalVariable(name: "start_addr", arg: 1, scope: !18587, file: !2937, line: 214, type: !22)
!18591 = !DILocation(line: 214, column: 37, scope: !18587)
!18592 = !DILocalVariable(name: "end_addr", arg: 2, scope: !18587, file: !2937, line: 214, type: !22)
!18593 = !DILocation(line: 214, column: 59, scope: !18587)
!18594 = !DILocation(line: 216, column: 1, scope: !18587)
!18595 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2937, file: !2937, line: 218, type: !18596, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18596 = !DISubroutineType(types: !18597)
!18597 = !{null, !718, !217}
!18598 = !DILocalVariable(name: "buf", arg: 1, scope: !18595, file: !2937, line: 218, type: !718)
!18599 = !DILocation(line: 218, column: 38, scope: !18595)
!18600 = !DILocalVariable(name: "buflen", arg: 2, scope: !18595, file: !2937, line: 218, type: !217)
!18601 = !DILocation(line: 218, column: 50, scope: !18595)
!18602 = !DILocation(line: 220, column: 1, scope: !18595)
!18603 = distinct !DISubprogram(name: "coredump_query", scope: !2937, file: !2937, line: 222, type: !18604, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18604 = !DISubroutineType(types: !18605)
!18605 = !{!103, !2936, !102}
!18606 = !DILocalVariable(name: "query_id", arg: 1, scope: !18603, file: !2937, line: 222, type: !2936)
!18607 = !DILocation(line: 222, column: 43, scope: !18603)
!18608 = !DILocalVariable(name: "arg", arg: 2, scope: !18603, file: !2937, line: 222, type: !102)
!18609 = !DILocation(line: 222, column: 59, scope: !18603)
!18610 = !DILocation(line: 224, column: 2, scope: !18603)
!18611 = distinct !DISubprogram(name: "coredump_cmd", scope: !2937, file: !2937, line: 227, type: !18612, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18612 = !DISubroutineType(types: !18613)
!18613 = !{!103, !2943, !102}
!18614 = !DILocalVariable(name: "query_id", arg: 1, scope: !18611, file: !2937, line: 227, type: !2943)
!18615 = !DILocation(line: 227, column: 39, scope: !18611)
!18616 = !DILocalVariable(name: "arg", arg: 2, scope: !18611, file: !2937, line: 227, type: !102)
!18617 = !DILocation(line: 227, column: 55, scope: !18611)
!18618 = !DILocation(line: 229, column: 2, scope: !18611)
!18619 = distinct !DISubprogram(name: "arch_system_halt", scope: !18620, file: !18620, line: 23, type: !3712, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18620 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18621 = !DILocalVariable(name: "reason", arg: 1, scope: !18619, file: !18620, line: 23, type: !32)
!18622 = !DILocation(line: 23, column: 57, scope: !18619)
!18623 = !DILocation(line: 25, column: 2, scope: !18619)
!18624 = !DILocalVariable(name: "key", scope: !18625, file: !3614, line: 44, type: !32)
!18625 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18626 = !DILocation(line: 44, column: 15, scope: !18625, inlinedAt: !18627)
!18627 = distinct !DILocation(line: 31, column: 8, scope: !18619)
!18628 = !DILocation(line: 47, column: 2, scope: !18625, inlinedAt: !18627)
!18629 = !{i64 1443792}
!18630 = !DILocation(line: 76, column: 9, scope: !18625, inlinedAt: !18627)
!18631 = !DILocation(line: 32, column: 2, scope: !18619)
!18632 = !DILocation(line: 32, column: 2, scope: !18633)
!18633 = distinct !DILexicalBlock(scope: !18634, file: !18620, line: 32, column: 2)
!18634 = distinct !DILexicalBlock(scope: !18619, file: !18620, line: 32, column: 2)
!18635 = distinct !{!18635, !18636, !18637}
!18636 = !DILocation(line: 32, column: 2, scope: !18634)
!18637 = !DILocation(line: 34, column: 2, scope: !18634)
!18638 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !18620, file: !18620, line: 39, type: !18639, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18639 = !DISubroutineType(types: !18640)
!18640 = !{null, !32, !18442}
!18641 = !DILocalVariable(name: "reason", arg: 1, scope: !18638, file: !18620, line: 39, type: !32)
!18642 = !DILocation(line: 39, column: 52, scope: !18638)
!18643 = !DILocalVariable(name: "esf", arg: 2, scope: !18638, file: !18620, line: 40, type: !18442)
!18644 = !DILocation(line: 40, column: 31, scope: !18638)
!18645 = !DILocation(line: 42, column: 2, scope: !18638)
!18646 = !DILocation(line: 45, column: 2, scope: !18638)
!18647 = !DILocation(line: 45, column: 2, scope: !18648)
!18648 = distinct !DILexicalBlock(scope: !18649, file: !18620, line: 45, column: 2)
!18649 = distinct !DILexicalBlock(scope: !18650, file: !18620, line: 45, column: 2)
!18650 = distinct !DILexicalBlock(scope: !18638, file: !18620, line: 45, column: 2)
!18651 = !DILocation(line: 46, column: 19, scope: !18638)
!18652 = !DILocation(line: 46, column: 2, scope: !18638)
!18653 = distinct !DISubprogram(name: "k_fatal_halt", scope: !18620, file: !18620, line: 81, type: !3712, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18654 = !DILocalVariable(name: "reason", arg: 1, scope: !18653, file: !18620, line: 81, type: !32)
!18655 = !DILocation(line: 81, column: 46, scope: !18653)
!18656 = !DILocation(line: 83, column: 19, scope: !18653)
!18657 = !DILocation(line: 83, column: 2, scope: !18653)
!18658 = distinct !DISubprogram(name: "z_fatal_error", scope: !18620, file: !18620, line: 96, type: !18639, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18659 = !DILocalVariable(name: "reason", arg: 1, scope: !18658, file: !18620, line: 96, type: !32)
!18660 = !DILocation(line: 96, column: 33, scope: !18658)
!18661 = !DILocalVariable(name: "esf", arg: 2, scope: !18658, file: !18620, line: 96, type: !18442)
!18662 = !DILocation(line: 96, column: 61, scope: !18658)
!18663 = !DILocalVariable(name: "key", scope: !18658, file: !18620, line: 102, type: !32)
!18664 = !DILocation(line: 102, column: 15, scope: !18658)
!18665 = !DILocation(line: 44, column: 15, scope: !18625, inlinedAt: !18666)
!18666 = distinct !DILocation(line: 102, column: 21, scope: !18658)
!18667 = !DILocation(line: 47, column: 2, scope: !18625, inlinedAt: !18666)
!18668 = !DILocation(line: 76, column: 9, scope: !18625, inlinedAt: !18666)
!18669 = !DILocalVariable(name: "thread", scope: !18658, file: !18620, line: 103, type: !18486)
!18670 = !DILocation(line: 103, column: 19, scope: !18658)
!18671 = !DILocation(line: 104, column: 4, scope: !18658)
!18672 = !DILocation(line: 109, column: 2, scope: !18658)
!18673 = !DILocation(line: 109, column: 2, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18675, file: !18620, line: 109, column: 2)
!18675 = distinct !DILexicalBlock(scope: !18676, file: !18620, line: 109, column: 2)
!18676 = distinct !DILexicalBlock(scope: !18658, file: !18620, line: 109, column: 2)
!18677 = !DILocation(line: 119, column: 7, scope: !18678)
!18678 = distinct !DILexicalBlock(scope: !18658, file: !18620, line: 119, column: 6)
!18679 = !DILocation(line: 119, column: 11, scope: !18678)
!18680 = !DILocation(line: 119, column: 20, scope: !18678)
!18681 = !DILocation(line: 119, column: 51, scope: !18678)
!18682 = !DILocalVariable(name: "esf", arg: 1, scope: !18683, file: !9630, line: 71, type: !18442)
!18683 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9630, file: !9630, line: 71, type: !18684, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18684 = !DISubroutineType(types: !18685)
!18685 = !{!717, !18442}
!18686 = !DILocation(line: 71, column: 75, scope: !18683, inlinedAt: !18687)
!18687 = distinct !DILocation(line: 119, column: 23, scope: !18678)
!18688 = !DILocation(line: 73, column: 10, scope: !18683, inlinedAt: !18687)
!18689 = !DILocation(line: 73, column: 15, scope: !18683, inlinedAt: !18687)
!18690 = !DILocation(line: 73, column: 21, scope: !18683, inlinedAt: !18687)
!18691 = !DILocation(line: 73, column: 26, scope: !18683, inlinedAt: !18687)
!18692 = !DILocation(line: 73, column: 9, scope: !18683, inlinedAt: !18687)
!18693 = !DILocation(line: 119, column: 6, scope: !18658)
!18694 = !DILocation(line: 120, column: 3, scope: !18695)
!18695 = distinct !DILexicalBlock(scope: !18678, file: !18620, line: 119, column: 57)
!18696 = !DILocation(line: 120, column: 3, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18698, file: !18620, line: 120, column: 3)
!18698 = distinct !DILexicalBlock(scope: !18699, file: !18620, line: 120, column: 3)
!18699 = distinct !DILexicalBlock(scope: !18695, file: !18620, line: 120, column: 3)
!18700 = !DILocation(line: 121, column: 2, scope: !18695)
!18701 = !DILocation(line: 124, column: 2, scope: !18658)
!18702 = !DILocation(line: 124, column: 2, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18704, file: !18620, line: 124, column: 2)
!18704 = distinct !DILexicalBlock(scope: !18705, file: !18620, line: 124, column: 2)
!18705 = distinct !DILexicalBlock(scope: !18658, file: !18620, line: 124, column: 2)
!18706 = !DILocation(line: 128, column: 11, scope: !18658)
!18707 = !DILocation(line: 128, column: 19, scope: !18658)
!18708 = !DILocation(line: 128, column: 24, scope: !18658)
!18709 = !DILocation(line: 128, column: 2, scope: !18658)
!18710 = !DILocation(line: 131, column: 28, scope: !18658)
!18711 = !DILocation(line: 131, column: 36, scope: !18658)
!18712 = !DILocation(line: 131, column: 2, scope: !18658)
!18713 = !DILocation(line: 151, column: 8, scope: !18714)
!18714 = distinct !DILexicalBlock(scope: !18715, file: !18620, line: 151, column: 7)
!18715 = distinct !DILexicalBlock(scope: !18716, file: !18620, line: 146, column: 32)
!18716 = distinct !DILexicalBlock(scope: !18658, file: !18620, line: 146, column: 6)
!18717 = !DILocation(line: 151, column: 12, scope: !18714)
!18718 = !DILocation(line: 151, column: 21, scope: !18714)
!18719 = !DILocation(line: 151, column: 52, scope: !18714)
!18720 = !DILocation(line: 71, column: 75, scope: !18683, inlinedAt: !18721)
!18721 = distinct !DILocation(line: 151, column: 24, scope: !18714)
!18722 = !DILocation(line: 73, column: 10, scope: !18683, inlinedAt: !18721)
!18723 = !DILocation(line: 73, column: 15, scope: !18683, inlinedAt: !18721)
!18724 = !DILocation(line: 73, column: 21, scope: !18683, inlinedAt: !18721)
!18725 = !DILocation(line: 73, column: 26, scope: !18683, inlinedAt: !18721)
!18726 = !DILocation(line: 73, column: 9, scope: !18683, inlinedAt: !18721)
!18727 = !DILocation(line: 151, column: 7, scope: !18715)
!18728 = !DILocation(line: 158, column: 3, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18714, file: !18620, line: 151, column: 58)
!18730 = !DILocation(line: 186, column: 18, scope: !18658)
!18731 = !DILocalVariable(name: "key", arg: 1, scope: !18732, file: !3614, line: 84, type: !32)
!18732 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18733 = !DILocation(line: 84, column: 56, scope: !18732, inlinedAt: !18734)
!18734 = distinct !DILocation(line: 186, column: 2, scope: !18658)
!18735 = !DILocation(line: 87, column: 6, scope: !18736, inlinedAt: !18734)
!18736 = distinct !DILexicalBlock(scope: !18732, file: !3614, line: 87, column: 6)
!18737 = !DILocation(line: 87, column: 10, scope: !18736, inlinedAt: !18734)
!18738 = !DILocation(line: 87, column: 6, scope: !18732, inlinedAt: !18734)
!18739 = !DILocation(line: 88, column: 3, scope: !18740, inlinedAt: !18734)
!18740 = distinct !DILexicalBlock(scope: !18736, file: !3614, line: 87, column: 17)
!18741 = !DILocation(line: 90, column: 2, scope: !18732, inlinedAt: !18734)
!18742 = !{i64 1444656}
!18743 = !DILocation(line: 110, column: 1, scope: !18732, inlinedAt: !18734)
!18744 = !DILocation(line: 189, column: 18, scope: !18745)
!18745 = distinct !DILexicalBlock(scope: !18746, file: !18620, line: 188, column: 41)
!18746 = distinct !DILexicalBlock(scope: !18658, file: !18620, line: 188, column: 6)
!18747 = !DILocation(line: 189, column: 3, scope: !18745)
!18748 = !DILocation(line: 191, column: 1, scope: !18658)
!18749 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !18750, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18750 = !DISubroutineType(types: !18751)
!18751 = !{!18752}
!18752 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !18486)
!18753 = !DILocation(line: 535, column: 9, scope: !18749)
!18754 = !DILocation(line: 535, column: 2, scope: !18749)
!18755 = distinct !DISubprogram(name: "k_thread_abort", scope: !3240, file: !3240, line: 188, type: !18756, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18756 = !DISubroutineType(types: !18757)
!18757 = !{null, !18752}
!18758 = !DILocalVariable(name: "thread", arg: 1, scope: !18755, file: !3240, line: 188, type: !18752)
!18759 = !DILocation(line: 188, column: 43, scope: !18755)
!18760 = !DILocation(line: 197, column: 2, scope: !18755)
!18761 = !DILocation(line: 197, column: 2, scope: !18762)
!18762 = distinct !DILexicalBlock(scope: !18755, file: !3240, line: 197, column: 2)
!18763 = !{i64 2149630946}
!18764 = !DILocation(line: 198, column: 24, scope: !18755)
!18765 = !DILocation(line: 198, column: 2, scope: !18755)
!18766 = !DILocation(line: 199, column: 1, scope: !18755)
!18767 = distinct !DISubprogram(name: "z_current_get", scope: !3240, file: !3240, line: 173, type: !18750, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2933, retainedNodes: !223)
!18768 = !DILocation(line: 180, column: 2, scope: !18767)
!18769 = !DILocation(line: 180, column: 2, scope: !18770)
!18770 = distinct !DILexicalBlock(scope: !18767, file: !3240, line: 180, column: 2)
!18771 = !{i64 2149630878}
!18772 = !DILocation(line: 181, column: 9, scope: !18767)
!18773 = !DILocation(line: 181, column: 2, scope: !18767)
!18774 = distinct !DISubprogram(name: "z_early_memset", scope: !1837, file: !1837, line: 108, type: !18775, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18775 = !DISubroutineType(types: !18776)
!18776 = !{null, !102, !103, !217}
!18777 = !DILocalVariable(name: "dst", arg: 1, scope: !18774, file: !1837, line: 108, type: !102)
!18778 = !DILocation(line: 108, column: 34, scope: !18774)
!18779 = !DILocalVariable(name: "c", arg: 2, scope: !18774, file: !1837, line: 108, type: !103)
!18780 = !DILocation(line: 108, column: 43, scope: !18774)
!18781 = !DILocalVariable(name: "n", arg: 3, scope: !18774, file: !1837, line: 108, type: !217)
!18782 = !DILocation(line: 108, column: 53, scope: !18774)
!18783 = !DILocation(line: 110, column: 16, scope: !18774)
!18784 = !DILocation(line: 110, column: 21, scope: !18774)
!18785 = !DILocation(line: 110, column: 24, scope: !18774)
!18786 = !DILocation(line: 110, column: 9, scope: !18774)
!18787 = !DILocation(line: 111, column: 1, scope: !18774)
!18788 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1837, file: !1837, line: 121, type: !18789, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18789 = !DISubroutineType(types: !18790)
!18790 = !{null, !102, !13, !217}
!18791 = !DILocalVariable(name: "dst", arg: 1, scope: !18788, file: !1837, line: 121, type: !102)
!18792 = !DILocation(line: 121, column: 34, scope: !18788)
!18793 = !DILocalVariable(name: "src", arg: 2, scope: !18788, file: !1837, line: 121, type: !13)
!18794 = !DILocation(line: 121, column: 51, scope: !18788)
!18795 = !DILocalVariable(name: "n", arg: 3, scope: !18788, file: !1837, line: 121, type: !217)
!18796 = !DILocation(line: 121, column: 63, scope: !18788)
!18797 = !DILocation(line: 123, column: 16, scope: !18788)
!18798 = !DILocation(line: 123, column: 21, scope: !18788)
!18799 = !DILocation(line: 123, column: 26, scope: !18788)
!18800 = !DILocation(line: 123, column: 9, scope: !18788)
!18801 = !DILocation(line: 124, column: 1, scope: !18788)
!18802 = distinct !DISubprogram(name: "z_bss_zero", scope: !1837, file: !1837, line: 132, type: !253, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18803 = !DILocation(line: 143, column: 2, scope: !18802)
!18804 = !DILocation(line: 168, column: 1, scope: !18802)
!18805 = distinct !DISubprogram(name: "z_init_cpu", scope: !1837, file: !1837, line: 372, type: !10531, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18806 = !DILocalVariable(name: "id", arg: 1, scope: !18805, file: !1837, line: 372, type: !103)
!18807 = !DILocation(line: 372, column: 21, scope: !18805)
!18808 = !DILocation(line: 374, column: 19, scope: !18805)
!18809 = !DILocation(line: 374, column: 2, scope: !18805)
!18810 = !DILocation(line: 375, column: 49, scope: !18805)
!18811 = !DILocation(line: 375, column: 34, scope: !18805)
!18812 = !DILocation(line: 375, column: 15, scope: !18805)
!18813 = !DILocation(line: 375, column: 2, scope: !18805)
!18814 = !DILocation(line: 375, column: 19, scope: !18805)
!18815 = !DILocation(line: 375, column: 31, scope: !18805)
!18816 = !DILocation(line: 376, column: 24, scope: !18805)
!18817 = !DILocation(line: 376, column: 15, scope: !18805)
!18818 = !DILocation(line: 376, column: 2, scope: !18805)
!18819 = !DILocation(line: 376, column: 19, scope: !18805)
!18820 = !DILocation(line: 376, column: 22, scope: !18805)
!18821 = !DILocation(line: 378, column: 45, scope: !18805)
!18822 = !DILocation(line: 378, column: 26, scope: !18805)
!18823 = !DILocation(line: 378, column: 4, scope: !18805)
!18824 = !DILocation(line: 378, column: 50, scope: !18805)
!18825 = !DILocation(line: 377, column: 15, scope: !18805)
!18826 = !DILocation(line: 377, column: 2, scope: !18805)
!18827 = !DILocation(line: 377, column: 19, scope: !18805)
!18828 = !DILocation(line: 377, column: 29, scope: !18805)
!18829 = !DILocation(line: 384, column: 1, scope: !18805)
!18830 = distinct !DISubprogram(name: "init_idle_thread", scope: !1837, file: !1837, line: 343, type: !10531, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18831 = !DILocalVariable(name: "i", arg: 1, scope: !18830, file: !1837, line: 343, type: !103)
!18832 = !DILocation(line: 343, column: 34, scope: !18830)
!18833 = !DILocalVariable(name: "thread", scope: !18830, file: !1837, line: 345, type: !1914)
!18834 = !DILocation(line: 345, column: 19, scope: !18830)
!18835 = !DILocation(line: 345, column: 44, scope: !18830)
!18836 = !DILocation(line: 345, column: 29, scope: !18830)
!18837 = !DILocalVariable(name: "stack", scope: !18830, file: !1837, line: 346, type: !18838)
!18838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18839, size: 32)
!18839 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !2023)
!18840 = !DILocation(line: 346, column: 20, scope: !18830)
!18841 = !DILocation(line: 346, column: 42, scope: !18830)
!18842 = !DILocation(line: 346, column: 28, scope: !18830)
!18843 = !DILocalVariable(name: "tname", scope: !18830, file: !1837, line: 358, type: !311)
!18844 = !DILocation(line: 358, column: 8, scope: !18830)
!18845 = !DILocation(line: 361, column: 21, scope: !18830)
!18846 = !DILocation(line: 361, column: 29, scope: !18830)
!18847 = !DILocation(line: 362, column: 50, scope: !18830)
!18848 = !DILocation(line: 362, column: 37, scope: !18830)
!18849 = !DILocation(line: 362, column: 36, scope: !18830)
!18850 = !DILocation(line: 364, column: 6, scope: !18830)
!18851 = !DILocation(line: 361, column: 2, scope: !18830)
!18852 = !DILocation(line: 365, column: 27, scope: !18830)
!18853 = !DILocation(line: 365, column: 2, scope: !18830)
!18854 = !DILocation(line: 370, column: 1, scope: !18830)
!18855 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !18856, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18856 = !DISubroutineType(types: !18857)
!18857 = !{!311, !18838}
!18858 = !DILocalVariable(name: "sym", arg: 1, scope: !18855, file: !234, line: 331, type: !18838)
!18859 = !DILocation(line: 331, column: 61, scope: !18855)
!18860 = !DILocation(line: 333, column: 17, scope: !18855)
!18861 = !DILocation(line: 333, column: 9, scope: !18855)
!18862 = !DILocation(line: 333, column: 21, scope: !18855)
!18863 = !DILocation(line: 333, column: 2, scope: !18855)
!18864 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !18865, file: !18865, line: 155, type: !18866, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18865 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18866 = !DISubroutineType(types: !18867)
!18867 = !{null, !1914}
!18868 = !DILocalVariable(name: "thread", arg: 1, scope: !18864, file: !18865, line: 155, type: !1914)
!18869 = !DILocation(line: 155, column: 62, scope: !18864)
!18870 = !DILocation(line: 157, column: 2, scope: !18864)
!18871 = !DILocation(line: 157, column: 10, scope: !18864)
!18872 = !DILocation(line: 157, column: 15, scope: !18864)
!18873 = !DILocation(line: 157, column: 28, scope: !18864)
!18874 = !DILocation(line: 158, column: 1, scope: !18864)
!18875 = distinct !DISubprogram(name: "z_cstart", scope: !1837, file: !1837, line: 501, type: !253, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18876 = !DILocation(line: 504, column: 2, scope: !18875)
!18877 = !DILocation(line: 507, column: 2, scope: !18875)
!18878 = !DILocalVariable(name: "msp", scope: !18879, file: !18880, line: 42, type: !173)
!18879 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !18880, file: !18880, line: 40, type: !253, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18880 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18881 = !DILocation(line: 42, column: 11, scope: !18879, inlinedAt: !18882)
!18882 = distinct !DILocation(line: 44, column: 2, scope: !18883, inlinedAt: !18885)
!18883 = distinct !DISubprogram(name: "arch_kernel_init", scope: !18884, file: !18884, line: 42, type: !253, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18884 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18885 = distinct !DILocation(line: 510, column: 2, scope: !18875)
!18886 = !DILocation(line: 43, column: 14, scope: !18879, inlinedAt: !18882)
!18887 = !DILocation(line: 43, column: 3, scope: !18879, inlinedAt: !18882)
!18888 = !DILocation(line: 43, column: 60, scope: !18879, inlinedAt: !18882)
!18889 = !DILocation(line: 46, column: 12, scope: !18879, inlinedAt: !18882)
!18890 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !18891, file: !8818, line: 1153, type: !173)
!18891 = distinct !DISubprogram(name: "__set_MSP", scope: !8818, file: !8818, line: 1153, type: !524, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18892 = !DILocation(line: 1153, column: 46, scope: !18891, inlinedAt: !18893)
!18893 = distinct !DILocation(line: 46, column: 2, scope: !18879, inlinedAt: !18882)
!18894 = !DILocation(line: 1155, column: 42, scope: !18891, inlinedAt: !18893)
!18895 = !DILocation(line: 1155, column: 3, scope: !18891, inlinedAt: !18893)
!18896 = !{i64 2868434}
!18897 = !DILocation(line: 102, column: 2, scope: !18898, inlinedAt: !18899)
!18898 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9630, file: !9630, line: 97, type: !253, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18899 = distinct !DILocation(line: 45, column: 2, scope: !18883, inlinedAt: !18885)
!18900 = !DILocation(line: 46, column: 2, scope: !18883, inlinedAt: !18885)
!18901 = !DILocation(line: 47, column: 2, scope: !18883, inlinedAt: !18885)
!18902 = !DILocation(line: 512, column: 2, scope: !18875)
!18903 = !DILocation(line: 512, column: 2, scope: !18904)
!18904 = distinct !DILexicalBlock(scope: !18875, file: !1837, line: 512, column: 2)
!18905 = !DILocalVariable(name: "dummy_thread", scope: !18875, file: !1837, line: 518, type: !1915)
!18906 = !DILocation(line: 518, column: 18, scope: !18875)
!18907 = !DILocation(line: 520, column: 2, scope: !18875)
!18908 = !DILocation(line: 523, column: 2, scope: !18875)
!18909 = !DILocation(line: 526, column: 2, scope: !18875)
!18910 = !DILocation(line: 527, column: 2, scope: !18875)
!18911 = !DILocation(line: 543, column: 24, scope: !18875)
!18912 = !DILocation(line: 543, column: 2, scope: !18875)
!18913 = distinct !DISubprogram(name: "gcov_static_init", scope: !18914, file: !18914, line: 15, type: !253, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18914 = !DIFile(filename: "zephyr/include/zephyr/debug/gcov.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18915 = !DILocation(line: 15, column: 45, scope: !18913)
!18916 = !DILocalVariable(name: "level", arg: 1, scope: !2042, file: !1837, line: 230, type: !1836)
!18917 = !DILocation(line: 230, column: 50, scope: !2042)
!18918 = !DILocalVariable(name: "entry", scope: !2042, file: !1837, line: 244, type: !2046)
!18919 = !DILocation(line: 244, column: 27, scope: !2042)
!18920 = !DILocation(line: 246, column: 22, scope: !18921)
!18921 = distinct !DILexicalBlock(scope: !2042, file: !1837, line: 246, column: 2)
!18922 = !DILocation(line: 246, column: 15, scope: !18921)
!18923 = !DILocation(line: 246, column: 13, scope: !18921)
!18924 = !DILocation(line: 246, column: 7, scope: !18921)
!18925 = !DILocation(line: 246, column: 30, scope: !18926)
!18926 = distinct !DILexicalBlock(scope: !18921, file: !1837, line: 246, column: 2)
!18927 = !DILocation(line: 246, column: 45, scope: !18926)
!18928 = !DILocation(line: 246, column: 50, scope: !18926)
!18929 = !DILocation(line: 246, column: 38, scope: !18926)
!18930 = !DILocation(line: 246, column: 36, scope: !18926)
!18931 = !DILocation(line: 246, column: 2, scope: !18921)
!18932 = !DILocalVariable(name: "dev", scope: !18933, file: !1837, line: 247, type: !1855)
!18933 = distinct !DILexicalBlock(scope: !18926, file: !1837, line: 246, column: 64)
!18934 = !DILocation(line: 247, column: 24, scope: !18933)
!18935 = !DILocation(line: 247, column: 30, scope: !18933)
!18936 = !DILocation(line: 247, column: 37, scope: !18933)
!18937 = !DILocalVariable(name: "rc", scope: !18933, file: !1837, line: 248, type: !103)
!18938 = !DILocation(line: 248, column: 7, scope: !18933)
!18939 = !DILocation(line: 248, column: 12, scope: !18933)
!18940 = !DILocation(line: 248, column: 19, scope: !18933)
!18941 = !DILocation(line: 248, column: 24, scope: !18933)
!18942 = !DILocation(line: 250, column: 7, scope: !18943)
!18943 = distinct !DILexicalBlock(scope: !18933, file: !1837, line: 250, column: 7)
!18944 = !DILocation(line: 250, column: 11, scope: !18943)
!18945 = !DILocation(line: 250, column: 7, scope: !18933)
!18946 = !DILocation(line: 254, column: 8, scope: !18947)
!18947 = distinct !DILexicalBlock(scope: !18948, file: !1837, line: 254, column: 8)
!18948 = distinct !DILexicalBlock(scope: !18943, file: !1837, line: 250, column: 20)
!18949 = !DILocation(line: 254, column: 11, scope: !18947)
!18950 = !DILocation(line: 254, column: 8, scope: !18948)
!18951 = !DILocation(line: 255, column: 9, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18953, file: !1837, line: 255, column: 9)
!18953 = distinct !DILexicalBlock(scope: !18947, file: !1837, line: 254, column: 17)
!18954 = !DILocation(line: 255, column: 12, scope: !18952)
!18955 = !DILocation(line: 255, column: 9, scope: !18953)
!18956 = !DILocation(line: 256, column: 12, scope: !18957)
!18957 = distinct !DILexicalBlock(scope: !18952, file: !1837, line: 255, column: 17)
!18958 = !DILocation(line: 256, column: 11, scope: !18957)
!18959 = !DILocation(line: 256, column: 9, scope: !18957)
!18960 = !DILocation(line: 257, column: 5, scope: !18957)
!18961 = !DILocation(line: 258, column: 9, scope: !18962)
!18962 = distinct !DILexicalBlock(scope: !18953, file: !1837, line: 258, column: 9)
!18963 = !DILocation(line: 258, column: 12, scope: !18962)
!18964 = !DILocation(line: 258, column: 9, scope: !18953)
!18965 = !DILocation(line: 259, column: 9, scope: !18966)
!18966 = distinct !DILexicalBlock(scope: !18962, file: !1837, line: 258, column: 25)
!18967 = !DILocation(line: 260, column: 5, scope: !18966)
!18968 = !DILocation(line: 261, column: 28, scope: !18953)
!18969 = !DILocation(line: 261, column: 5, scope: !18953)
!18970 = !DILocation(line: 261, column: 10, scope: !18953)
!18971 = !DILocation(line: 261, column: 17, scope: !18953)
!18972 = !DILocation(line: 261, column: 26, scope: !18953)
!18973 = !DILocation(line: 262, column: 4, scope: !18953)
!18974 = !DILocation(line: 263, column: 4, scope: !18948)
!18975 = !DILocation(line: 263, column: 9, scope: !18948)
!18976 = !DILocation(line: 263, column: 16, scope: !18948)
!18977 = !DILocation(line: 263, column: 28, scope: !18948)
!18978 = !DILocation(line: 264, column: 3, scope: !18948)
!18979 = !DILocation(line: 265, column: 2, scope: !18933)
!18980 = !DILocation(line: 246, column: 60, scope: !18926)
!18981 = !DILocation(line: 246, column: 2, scope: !18926)
!18982 = distinct !{!18982, !18931, !18983}
!18983 = !DILocation(line: 265, column: 2, scope: !18921)
!18984 = !DILocation(line: 266, column: 1, scope: !2042)
!18985 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 732, type: !8854, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!18986 = !DILocalVariable(name: "IRQn", arg: 1, scope: !18985, file: !508, line: 732, type: !1685)
!18987 = !DILocation(line: 732, column: 51, scope: !18985)
!18988 = !DILocalVariable(name: "priority", arg: 2, scope: !18985, file: !508, line: 732, type: !173)
!18989 = !DILocation(line: 732, column: 66, scope: !18985)
!18990 = !DILocation(line: 734, column: 17, scope: !18991)
!18991 = distinct !DILexicalBlock(scope: !18985, file: !508, line: 734, column: 7)
!18992 = !DILocation(line: 734, column: 23, scope: !18991)
!18993 = !DILocation(line: 734, column: 7, scope: !18985)
!18994 = !DILocation(line: 736, column: 53, scope: !18995)
!18995 = distinct !DILexicalBlock(scope: !18991, file: !508, line: 735, column: 3)
!18996 = !DILocation(line: 736, column: 44, scope: !18995)
!18997 = !DILocation(line: 736, column: 83, scope: !18995)
!18998 = !DILocation(line: 736, column: 80, scope: !18995)
!18999 = !DILocation(line: 736, column: 71, scope: !18995)
!19000 = !DILocation(line: 736, column: 69, scope: !18995)
!19001 = !DILocation(line: 737, column: 11, scope: !18995)
!19002 = !DILocation(line: 737, column: 20, scope: !18995)
!19003 = !DILocation(line: 737, column: 48, scope: !18995)
!19004 = !DILocation(line: 737, column: 71, scope: !18995)
!19005 = !DILocation(line: 737, column: 68, scope: !18995)
!19006 = !DILocation(line: 736, column: 102, scope: !18995)
!19007 = !DILocation(line: 736, column: 14, scope: !18995)
!19008 = !DILocation(line: 736, column: 5, scope: !18995)
!19009 = !DILocation(line: 736, column: 30, scope: !18995)
!19010 = !DILocation(line: 738, column: 3, scope: !18995)
!19011 = !DILocation(line: 741, column: 53, scope: !19012)
!19012 = distinct !DILexicalBlock(scope: !18991, file: !508, line: 740, column: 3)
!19013 = !DILocation(line: 741, column: 44, scope: !19012)
!19014 = !DILocation(line: 741, column: 83, scope: !19012)
!19015 = !DILocation(line: 741, column: 80, scope: !19012)
!19016 = !DILocation(line: 741, column: 71, scope: !19012)
!19017 = !DILocation(line: 741, column: 69, scope: !19012)
!19018 = !DILocation(line: 742, column: 11, scope: !19012)
!19019 = !DILocation(line: 742, column: 20, scope: !19012)
!19020 = !DILocation(line: 742, column: 48, scope: !19012)
!19021 = !DILocation(line: 742, column: 71, scope: !19012)
!19022 = !DILocation(line: 742, column: 68, scope: !19012)
!19023 = !DILocation(line: 741, column: 102, scope: !19012)
!19024 = !DILocation(line: 741, column: 14, scope: !19012)
!19025 = !DILocation(line: 741, column: 5, scope: !19012)
!19026 = !DILocation(line: 741, column: 30, scope: !19012)
!19027 = !DILocation(line: 744, column: 1, scope: !18985)
!19028 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !19029, file: !19029, line: 215, type: !18866, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!19029 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19030 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !19028, file: !19029, line: 215, type: !1914)
!19031 = !DILocation(line: 215, column: 57, scope: !19028)
!19032 = !DILocation(line: 217, column: 2, scope: !19028)
!19033 = !DILocation(line: 217, column: 16, scope: !19028)
!19034 = !DILocation(line: 217, column: 21, scope: !19028)
!19035 = !DILocation(line: 217, column: 34, scope: !19028)
!19036 = !DILocation(line: 221, column: 2, scope: !19028)
!19037 = !DILocation(line: 221, column: 16, scope: !19028)
!19038 = !DILocation(line: 221, column: 21, scope: !19028)
!19039 = !DILocation(line: 221, column: 34, scope: !19028)
!19040 = !DILocation(line: 232, column: 2, scope: !19028)
!19041 = !DILocation(line: 232, column: 16, scope: !19028)
!19042 = !DILocation(line: 232, column: 30, scope: !19028)
!19043 = !DILocation(line: 239, column: 26, scope: !19028)
!19044 = !DILocation(line: 239, column: 24, scope: !19028)
!19045 = !DILocation(line: 240, column: 1, scope: !19028)
!19046 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1837, file: !1837, line: 399, type: !19047, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!19047 = !DISubroutineType(types: !19048)
!19048 = !{!311}
!19049 = !DILocalVariable(name: "stack_ptr", scope: !19046, file: !1837, line: 401, type: !311)
!19050 = !DILocation(line: 401, column: 8, scope: !19046)
!19051 = !DILocation(line: 404, column: 2, scope: !19046)
!19052 = !DILocation(line: 416, column: 24, scope: !19046)
!19053 = !DILocation(line: 418, column: 14, scope: !19046)
!19054 = !DILocation(line: 418, column: 12, scope: !19046)
!19055 = !DILocation(line: 423, column: 2, scope: !19046)
!19056 = !DILocation(line: 424, column: 2, scope: !19046)
!19057 = !DILocation(line: 426, column: 2, scope: !19046)
!19058 = !DILocation(line: 428, column: 9, scope: !19046)
!19059 = !DILocation(line: 428, column: 2, scope: !19046)
!19060 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1837, file: !1837, line: 432, type: !19061, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!19061 = !DISubroutineType(types: !19062)
!19062 = !{null, !311}
!19063 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !19060, file: !1837, line: 432, type: !311)
!19064 = !DILocation(line: 432, column: 55, scope: !19060)
!19065 = !DILocation(line: 435, column: 45, scope: !19060)
!19066 = !DILocation(line: 435, column: 2, scope: !19060)
!19067 = !DILocation(line: 445, column: 2, scope: !19060)
!19068 = distinct !DISubprogram(name: "bg_thread_main", scope: !1837, file: !1837, line: 277, type: !242, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1833, retainedNodes: !223)
!19069 = !DILocalVariable(name: "unused1", arg: 1, scope: !19068, file: !1837, line: 277, type: !102)
!19070 = !DILocation(line: 277, column: 34, scope: !19068)
!19071 = !DILocalVariable(name: "unused2", arg: 2, scope: !19068, file: !1837, line: 277, type: !102)
!19072 = !DILocation(line: 277, column: 49, scope: !19068)
!19073 = !DILocalVariable(name: "unused3", arg: 3, scope: !19068, file: !1837, line: 277, type: !102)
!19074 = !DILocation(line: 277, column: 64, scope: !19068)
!19075 = !DILocation(line: 279, column: 2, scope: !19068)
!19076 = !DILocation(line: 280, column: 2, scope: !19068)
!19077 = !DILocation(line: 281, column: 2, scope: !19068)
!19078 = !DILocation(line: 291, column: 20, scope: !19068)
!19079 = !DILocation(line: 293, column: 2, scope: !19068)
!19080 = !DILocation(line: 297, column: 2, scope: !19068)
!19081 = !DILocation(line: 305, column: 2, scope: !19068)
!19082 = !DILocation(line: 307, column: 2, scope: !19068)
!19083 = !DILocation(line: 330, column: 8, scope: !19068)
!19084 = !DILocation(line: 333, column: 34, scope: !19068)
!19085 = !DILocation(line: 339, column: 1, scope: !19068)
!19086 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2063, file: !2063, line: 45, type: !19087, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19087 = !DISubroutineType(types: !19088)
!19088 = !{null, !19089, !102}
!19089 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !109, line: 103, baseType: !19090)
!19090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19091, size: 32)
!19091 = !DISubroutineType(types: !19092)
!19092 = !{null, !19093, !102}
!19093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19094, size: 32)
!19094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2068)
!19095 = !DILocalVariable(name: "user_cb", arg: 1, scope: !19086, file: !2063, line: 45, type: !19089)
!19096 = !DILocation(line: 45, column: 42, scope: !19086)
!19097 = !DILocalVariable(name: "user_data", arg: 2, scope: !19086, file: !2063, line: 45, type: !102)
!19098 = !DILocation(line: 45, column: 57, scope: !19086)
!19099 = !DILocation(line: 71, column: 1, scope: !19086)
!19100 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2063, file: !2063, line: 73, type: !19087, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19101 = !DILocalVariable(name: "user_cb", arg: 1, scope: !19100, file: !2063, line: 73, type: !19089)
!19102 = !DILocation(line: 73, column: 51, scope: !19100)
!19103 = !DILocalVariable(name: "user_data", arg: 2, scope: !19100, file: !2063, line: 73, type: !102)
!19104 = !DILocation(line: 73, column: 66, scope: !19100)
!19105 = !DILocation(line: 95, column: 1, scope: !19100)
!19106 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2063, file: !2063, line: 97, type: !3163, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19107 = !DILocalVariable(name: "result", scope: !19108, file: !8818, line: 1029, type: !173)
!19108 = distinct !DISubprogram(name: "__get_IPSR", scope: !8818, file: !8818, line: 1027, type: !9625, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19109 = !DILocation(line: 1029, column: 12, scope: !19108, inlinedAt: !19110)
!19110 = distinct !DILocation(line: 48, column: 10, scope: !19111, inlinedAt: !19112)
!19111 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9630, file: !9630, line: 46, type: !3163, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19112 = distinct !DILocation(line: 99, column: 9, scope: !19106)
!19113 = !DILocation(line: 1031, column: 3, scope: !19108, inlinedAt: !19110)
!19114 = !{i64 2516699}
!19115 = !DILocation(line: 1032, column: 10, scope: !19108, inlinedAt: !19110)
!19116 = !DILocation(line: 48, column: 9, scope: !19111, inlinedAt: !19112)
!19117 = !DILocation(line: 99, column: 2, scope: !19106)
!19118 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2063, file: !2063, line: 106, type: !253, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19119 = !DILocation(line: 108, column: 2, scope: !19118)
!19120 = !DILocation(line: 108, column: 12, scope: !19118)
!19121 = !DILocation(line: 108, column: 17, scope: !19118)
!19122 = !DILocation(line: 108, column: 30, scope: !19118)
!19123 = !DILocation(line: 109, column: 1, scope: !19118)
!19124 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2063, file: !2063, line: 116, type: !253, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19125 = !DILocation(line: 118, column: 2, scope: !19124)
!19126 = !DILocation(line: 118, column: 12, scope: !19124)
!19127 = !DILocation(line: 118, column: 17, scope: !19124)
!19128 = !DILocation(line: 118, column: 30, scope: !19124)
!19129 = !DILocation(line: 119, column: 1, scope: !19124)
!19130 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2063, file: !2063, line: 126, type: !3163, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19131 = !DILocation(line: 128, column: 10, scope: !19130)
!19132 = !DILocation(line: 128, column: 20, scope: !19130)
!19133 = !DILocation(line: 128, column: 25, scope: !19130)
!19134 = !DILocation(line: 128, column: 38, scope: !19130)
!19135 = !DILocation(line: 128, column: 53, scope: !19130)
!19136 = !DILocation(line: 128, column: 2, scope: !19130)
!19137 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2063, file: !2063, line: 187, type: !19138, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19138 = !DISubroutineType(types: !19139)
!19139 = !{!103, !2067, !256}
!19140 = !DILocalVariable(name: "thread", arg: 1, scope: !19137, file: !2063, line: 187, type: !2067)
!19141 = !DILocation(line: 187, column: 47, scope: !19137)
!19142 = !DILocalVariable(name: "value", arg: 2, scope: !19137, file: !2063, line: 187, type: !256)
!19143 = !DILocation(line: 187, column: 67, scope: !19137)
!19144 = !DILocation(line: 201, column: 2, scope: !19137)
!19145 = !DILocation(line: 202, column: 2, scope: !19137)
!19146 = !DILocation(line: 204, column: 2, scope: !19137)
!19147 = !DILocation(line: 204, column: 2, scope: !19148)
!19148 = distinct !DILexicalBlock(scope: !19137, file: !2063, line: 204, column: 2)
!19149 = !DILocation(line: 206, column: 2, scope: !19137)
!19150 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2063, file: !2063, line: 238, type: !19151, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19151 = !DISubroutineType(types: !19152)
!19152 = !{!256, !2067}
!19153 = !DILocalVariable(name: "thread", arg: 1, scope: !19150, file: !2063, line: 238, type: !2067)
!19154 = !DILocation(line: 238, column: 48, scope: !19150)
!19155 = !DILocation(line: 243, column: 2, scope: !19150)
!19156 = !DILocation(line: 244, column: 2, scope: !19150)
!19157 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2063, file: !2063, line: 248, type: !19158, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19158 = !DISubroutineType(types: !19159)
!19159 = !{!103, !2066, !311, !217}
!19160 = !DILocalVariable(name: "thread", arg: 1, scope: !19157, file: !2063, line: 248, type: !2066)
!19161 = !DILocation(line: 248, column: 39, scope: !19157)
!19162 = !DILocalVariable(name: "buf", arg: 2, scope: !19157, file: !2063, line: 248, type: !311)
!19163 = !DILocation(line: 248, column: 53, scope: !19157)
!19164 = !DILocalVariable(name: "size", arg: 3, scope: !19157, file: !2063, line: 248, type: !217)
!19165 = !DILocation(line: 248, column: 65, scope: !19157)
!19166 = !DILocation(line: 254, column: 2, scope: !19157)
!19167 = !DILocation(line: 255, column: 2, scope: !19157)
!19168 = !DILocation(line: 256, column: 2, scope: !19157)
!19169 = !DILocation(line: 257, column: 2, scope: !19157)
!19170 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2062, file: !2063, line: 271, type: !2066)
!19171 = !DILocation(line: 271, column: 40, scope: !2062)
!19172 = !DILocalVariable(name: "buf", arg: 2, scope: !2062, file: !2063, line: 271, type: !311)
!19173 = !DILocation(line: 271, column: 57, scope: !2062)
!19174 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2062, file: !2063, line: 271, type: !217)
!19175 = !DILocation(line: 271, column: 69, scope: !2062)
!19176 = !DILocalVariable(name: "off", scope: !2062, file: !2063, line: 273, type: !217)
!19177 = !DILocation(line: 273, column: 14, scope: !2062)
!19178 = !DILocalVariable(name: "bit", scope: !2062, file: !2063, line: 274, type: !156)
!19179 = !DILocation(line: 274, column: 14, scope: !2062)
!19180 = !DILocalVariable(name: "thread_state", scope: !2062, file: !2063, line: 275, type: !156)
!19181 = !DILocation(line: 275, column: 14, scope: !2062)
!19182 = !DILocation(line: 275, column: 29, scope: !2062)
!19183 = !DILocation(line: 275, column: 40, scope: !2062)
!19184 = !DILocation(line: 275, column: 45, scope: !2062)
!19185 = !DILocation(line: 281, column: 7, scope: !19186)
!19186 = distinct !DILexicalBlock(scope: !2062, file: !2063, line: 281, column: 6)
!19187 = !DILocation(line: 281, column: 11, scope: !19186)
!19188 = !DILocation(line: 281, column: 20, scope: !19186)
!19189 = !DILocation(line: 281, column: 24, scope: !19186)
!19190 = !DILocation(line: 281, column: 33, scope: !19186)
!19191 = !DILocation(line: 281, column: 6, scope: !2062)
!19192 = !DILocation(line: 282, column: 3, scope: !19193)
!19193 = distinct !DILexicalBlock(scope: !19186, file: !2063, line: 281, column: 40)
!19194 = !DILocation(line: 285, column: 10, scope: !2062)
!19195 = !DILocalVariable(name: "index", scope: !19196, file: !2063, line: 293, type: !156)
!19196 = distinct !DILexicalBlock(scope: !2062, file: !2063, line: 293, column: 2)
!19197 = !DILocation(line: 293, column: 15, scope: !19196)
!19198 = !DILocation(line: 293, column: 7, scope: !19196)
!19199 = !DILocation(line: 293, column: 26, scope: !19200)
!19200 = distinct !DILexicalBlock(scope: !19196, file: !2063, line: 293, column: 2)
!19201 = !DILocation(line: 293, column: 39, scope: !19200)
!19202 = !DILocation(line: 293, column: 2, scope: !19196)
!19203 = !DILocation(line: 294, column: 9, scope: !19204)
!19204 = distinct !DILexicalBlock(scope: !19200, file: !2063, line: 293, column: 54)
!19205 = !DILocation(line: 294, column: 7, scope: !19204)
!19206 = !DILocation(line: 295, column: 8, scope: !19207)
!19207 = distinct !DILexicalBlock(scope: !19204, file: !2063, line: 295, column: 7)
!19208 = !DILocation(line: 295, column: 23, scope: !19207)
!19209 = !DILocation(line: 295, column: 21, scope: !19207)
!19210 = !DILocation(line: 295, column: 28, scope: !19207)
!19211 = !DILocation(line: 295, column: 7, scope: !19204)
!19212 = !DILocation(line: 296, column: 4, scope: !19213)
!19213 = distinct !DILexicalBlock(scope: !19207, file: !2063, line: 295, column: 34)
!19214 = !DILocation(line: 299, column: 21, scope: !19204)
!19215 = !DILocation(line: 299, column: 27, scope: !19204)
!19216 = !DILocation(line: 299, column: 25, scope: !19204)
!19217 = !DILocation(line: 299, column: 32, scope: !19204)
!19218 = !DILocation(line: 299, column: 43, scope: !19204)
!19219 = !DILocation(line: 299, column: 41, scope: !19204)
!19220 = !DILocation(line: 300, column: 18, scope: !19204)
!19221 = !DILocation(line: 300, column: 7, scope: !19204)
!19222 = !DILocation(line: 300, column: 36, scope: !19204)
!19223 = !DILocation(line: 300, column: 26, scope: !19204)
!19224 = !DILocation(line: 299, column: 10, scope: !19204)
!19225 = !DILocation(line: 299, column: 7, scope: !19204)
!19226 = !DILocation(line: 302, column: 20, scope: !19204)
!19227 = !DILocation(line: 302, column: 19, scope: !19204)
!19228 = !DILocation(line: 302, column: 16, scope: !19204)
!19229 = !DILocation(line: 304, column: 7, scope: !19230)
!19230 = distinct !DILexicalBlock(scope: !19204, file: !2063, line: 304, column: 7)
!19231 = !DILocation(line: 304, column: 20, scope: !19230)
!19232 = !DILocation(line: 304, column: 7, scope: !19204)
!19233 = !DILocation(line: 305, column: 22, scope: !19234)
!19234 = distinct !DILexicalBlock(scope: !19230, file: !2063, line: 304, column: 26)
!19235 = !DILocation(line: 305, column: 28, scope: !19234)
!19236 = !DILocation(line: 305, column: 26, scope: !19234)
!19237 = !DILocation(line: 305, column: 33, scope: !19234)
!19238 = !DILocation(line: 305, column: 44, scope: !19234)
!19239 = !DILocation(line: 305, column: 42, scope: !19234)
!19240 = !DILocation(line: 305, column: 11, scope: !19234)
!19241 = !DILocation(line: 305, column: 8, scope: !19234)
!19242 = !DILocation(line: 306, column: 3, scope: !19234)
!19243 = !DILocation(line: 307, column: 2, scope: !19204)
!19244 = !DILocation(line: 293, column: 50, scope: !19200)
!19245 = !DILocation(line: 293, column: 2, scope: !19200)
!19246 = distinct !{!19246, !19202, !19247}
!19247 = !DILocation(line: 307, column: 2, scope: !19196)
!19248 = !DILocation(line: 309, column: 2, scope: !2062)
!19249 = !DILocation(line: 309, column: 6, scope: !2062)
!19250 = !DILocation(line: 309, column: 11, scope: !2062)
!19251 = !DILocation(line: 311, column: 23, scope: !2062)
!19252 = !DILocation(line: 311, column: 2, scope: !2062)
!19253 = !DILocation(line: 312, column: 1, scope: !2062)
!19254 = distinct !DISubprogram(name: "copy_bytes", scope: !2063, file: !2063, line: 261, type: !19255, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19255 = !DISubroutineType(types: !19256)
!19256 = !{!217, !311, !217, !256, !217}
!19257 = !DILocalVariable(name: "dest", arg: 1, scope: !19254, file: !2063, line: 261, type: !311)
!19258 = !DILocation(line: 261, column: 32, scope: !19254)
!19259 = !DILocalVariable(name: "dest_size", arg: 2, scope: !19254, file: !2063, line: 261, type: !217)
!19260 = !DILocation(line: 261, column: 45, scope: !19254)
!19261 = !DILocalVariable(name: "src", arg: 3, scope: !19254, file: !2063, line: 261, type: !256)
!19262 = !DILocation(line: 261, column: 68, scope: !19254)
!19263 = !DILocalVariable(name: "src_size", arg: 4, scope: !19254, file: !2063, line: 261, type: !217)
!19264 = !DILocation(line: 261, column: 80, scope: !19254)
!19265 = !DILocalVariable(name: "bytes_to_copy", scope: !19254, file: !2063, line: 263, type: !217)
!19266 = !DILocation(line: 263, column: 10, scope: !19254)
!19267 = !DILocation(line: 265, column: 18, scope: !19254)
!19268 = !DILocation(line: 265, column: 16, scope: !19254)
!19269 = !DILocation(line: 266, column: 9, scope: !19254)
!19270 = !DILocation(line: 266, column: 15, scope: !19254)
!19271 = !DILocation(line: 266, column: 20, scope: !19254)
!19272 = !DILocation(line: 266, column: 2, scope: !19254)
!19273 = !DILocation(line: 268, column: 9, scope: !19254)
!19274 = !DILocation(line: 268, column: 2, scope: !19254)
!19275 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2063, file: !2063, line: 383, type: !19276, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19276 = !DISubroutineType(types: !19277)
!19277 = !{null, !2067}
!19278 = !DILocalVariable(name: "thread", arg: 1, scope: !19275, file: !2063, line: 383, type: !2067)
!19279 = !DILocation(line: 383, column: 45, scope: !19275)
!19280 = !DILocation(line: 385, column: 2, scope: !19275)
!19281 = !DILocation(line: 385, column: 2, scope: !19282)
!19282 = distinct !DILexicalBlock(scope: !19275, file: !2063, line: 385, column: 2)
!19283 = !DILocation(line: 387, column: 16, scope: !19275)
!19284 = !DILocation(line: 387, column: 2, scope: !19275)
!19285 = !DILocation(line: 388, column: 1, scope: !19275)
!19286 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2063, file: !2063, line: 528, type: !19287, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19287 = !DISubroutineType(types: !19288)
!19288 = !{!311, !2067, !19289, !217, !240, !102, !102, !102, !103, !173, !256}
!19289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19290, size: 32)
!19290 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !19291)
!19291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !19292)
!19292 = !{!19293}
!19293 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !19291, file: !234, line: 48, baseType: !237, size: 8)
!19294 = !DILocalVariable(name: "new_thread", arg: 1, scope: !19286, file: !2063, line: 528, type: !2067)
!19295 = !DILocation(line: 528, column: 43, scope: !19286)
!19296 = !DILocalVariable(name: "stack", arg: 2, scope: !19286, file: !2063, line: 529, type: !19289)
!19297 = !DILocation(line: 529, column: 23, scope: !19286)
!19298 = !DILocalVariable(name: "stack_size", arg: 3, scope: !19286, file: !2063, line: 529, type: !217)
!19299 = !DILocation(line: 529, column: 37, scope: !19286)
!19300 = !DILocalVariable(name: "entry", arg: 4, scope: !19286, file: !2063, line: 530, type: !240)
!19301 = !DILocation(line: 530, column: 22, scope: !19286)
!19302 = !DILocalVariable(name: "p1", arg: 5, scope: !19286, file: !2063, line: 531, type: !102)
!19303 = !DILocation(line: 531, column: 11, scope: !19286)
!19304 = !DILocalVariable(name: "p2", arg: 6, scope: !19286, file: !2063, line: 531, type: !102)
!19305 = !DILocation(line: 531, column: 21, scope: !19286)
!19306 = !DILocalVariable(name: "p3", arg: 7, scope: !19286, file: !2063, line: 531, type: !102)
!19307 = !DILocation(line: 531, column: 31, scope: !19286)
!19308 = !DILocalVariable(name: "prio", arg: 8, scope: !19286, file: !2063, line: 532, type: !103)
!19309 = !DILocation(line: 532, column: 9, scope: !19286)
!19310 = !DILocalVariable(name: "options", arg: 9, scope: !19286, file: !2063, line: 532, type: !173)
!19311 = !DILocation(line: 532, column: 24, scope: !19286)
!19312 = !DILocalVariable(name: "name", arg: 10, scope: !19286, file: !2063, line: 532, type: !256)
!19313 = !DILocation(line: 532, column: 45, scope: !19286)
!19314 = !DILocalVariable(name: "stack_ptr", scope: !19286, file: !2063, line: 534, type: !311)
!19315 = !DILocation(line: 534, column: 8, scope: !19286)
!19316 = !DILocation(line: 536, column: 2, scope: !19286)
!19317 = !DILocation(line: 536, column: 2, scope: !19318)
!19318 = distinct !DILexicalBlock(scope: !19286, file: !2063, line: 536, column: 2)
!19319 = !DILocation(line: 550, column: 16, scope: !19286)
!19320 = !DILocation(line: 550, column: 28, scope: !19286)
!19321 = !DILocation(line: 550, column: 2, scope: !19286)
!19322 = !DILocation(line: 553, column: 22, scope: !19286)
!19323 = !DILocation(line: 553, column: 34, scope: !19286)
!19324 = !DILocation(line: 553, column: 40, scope: !19286)
!19325 = !DILocation(line: 553, column: 64, scope: !19286)
!19326 = !DILocation(line: 553, column: 2, scope: !19286)
!19327 = !DILocation(line: 554, column: 33, scope: !19286)
!19328 = !DILocation(line: 554, column: 45, scope: !19286)
!19329 = !DILocation(line: 554, column: 52, scope: !19286)
!19330 = !DILocation(line: 554, column: 14, scope: !19286)
!19331 = !DILocation(line: 554, column: 12, scope: !19286)
!19332 = !DILocation(line: 564, column: 18, scope: !19286)
!19333 = !DILocation(line: 564, column: 30, scope: !19286)
!19334 = !DILocation(line: 564, column: 37, scope: !19286)
!19335 = !DILocation(line: 564, column: 48, scope: !19286)
!19336 = !DILocation(line: 564, column: 55, scope: !19286)
!19337 = !DILocation(line: 564, column: 59, scope: !19286)
!19338 = !DILocation(line: 564, column: 63, scope: !19286)
!19339 = !DILocation(line: 564, column: 2, scope: !19286)
!19340 = !DILocation(line: 567, column: 2, scope: !19286)
!19341 = !DILocation(line: 567, column: 14, scope: !19286)
!19342 = !DILocation(line: 567, column: 24, scope: !19286)
!19343 = !DILocation(line: 612, column: 7, scope: !19344)
!19344 = distinct !DILexicalBlock(scope: !19286, file: !2063, line: 612, column: 6)
!19345 = !DILocation(line: 612, column: 6, scope: !19286)
!19346 = !DILocation(line: 613, column: 3, scope: !19347)
!19347 = distinct !DILexicalBlock(scope: !19344, file: !2063, line: 612, column: 17)
!19348 = !DILocation(line: 613, column: 15, scope: !19347)
!19349 = !DILocation(line: 613, column: 29, scope: !19347)
!19350 = !DILocation(line: 614, column: 10, scope: !19347)
!19351 = !DILocation(line: 614, column: 3, scope: !19347)
!19352 = !DILocation(line: 627, column: 30, scope: !19286)
!19353 = !DILocation(line: 627, column: 40, scope: !19286)
!19354 = !DILocation(line: 627, column: 2, scope: !19286)
!19355 = !DILocation(line: 627, column: 14, scope: !19286)
!19356 = !DILocation(line: 627, column: 28, scope: !19286)
!19357 = !DILocation(line: 635, column: 2, scope: !19286)
!19358 = !DILocation(line: 635, column: 2, scope: !19359)
!19359 = distinct !DILexicalBlock(scope: !19286, file: !2063, line: 635, column: 2)
!19360 = !DILocation(line: 637, column: 9, scope: !19286)
!19361 = !DILocation(line: 637, column: 2, scope: !19286)
!19362 = !DILocation(line: 638, column: 1, scope: !19286)
!19363 = distinct !DISubprogram(name: "z_waitq_init", scope: !19364, file: !19364, line: 47, type: !19365, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19364 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19365 = !DISubroutineType(types: !19366)
!19366 = !{null, !2098}
!19367 = !DILocalVariable(name: "w", arg: 1, scope: !19363, file: !19364, line: 47, type: !2098)
!19368 = !DILocation(line: 47, column: 44, scope: !19363)
!19369 = !DILocation(line: 49, column: 18, scope: !19363)
!19370 = !DILocation(line: 49, column: 21, scope: !19363)
!19371 = !DILocation(line: 49, column: 2, scope: !19363)
!19372 = !DILocation(line: 50, column: 1, scope: !19363)
!19373 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2063, file: !2063, line: 791, type: !19374, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19374 = !DISubroutineType(types: !19375)
!19375 = !{null, !19376, !103, !173, !32}
!19376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 32)
!19377 = !DILocalVariable(name: "thread_base", arg: 1, scope: !19373, file: !2063, line: 791, type: !19376)
!19378 = !DILocation(line: 791, column: 46, scope: !19373)
!19379 = !DILocalVariable(name: "priority", arg: 2, scope: !19373, file: !2063, line: 791, type: !103)
!19380 = !DILocation(line: 791, column: 63, scope: !19373)
!19381 = !DILocalVariable(name: "initial_state", arg: 3, scope: !19373, file: !2063, line: 792, type: !173)
!19382 = !DILocation(line: 792, column: 19, scope: !19373)
!19383 = !DILocalVariable(name: "options", arg: 4, scope: !19373, file: !2063, line: 792, type: !32)
!19384 = !DILocation(line: 792, column: 47, scope: !19373)
!19385 = !DILocation(line: 795, column: 2, scope: !19373)
!19386 = !DILocation(line: 795, column: 15, scope: !19373)
!19387 = !DILocation(line: 795, column: 25, scope: !19373)
!19388 = !DILocation(line: 796, column: 39, scope: !19373)
!19389 = !DILocation(line: 796, column: 30, scope: !19373)
!19390 = !DILocation(line: 796, column: 2, scope: !19373)
!19391 = !DILocation(line: 796, column: 15, scope: !19373)
!19392 = !DILocation(line: 796, column: 28, scope: !19373)
!19393 = !DILocation(line: 797, column: 39, scope: !19373)
!19394 = !DILocation(line: 797, column: 30, scope: !19373)
!19395 = !DILocation(line: 797, column: 2, scope: !19373)
!19396 = !DILocation(line: 797, column: 15, scope: !19373)
!19397 = !DILocation(line: 797, column: 28, scope: !19373)
!19398 = !DILocation(line: 799, column: 22, scope: !19373)
!19399 = !DILocation(line: 799, column: 2, scope: !19373)
!19400 = !DILocation(line: 799, column: 15, scope: !19373)
!19401 = !DILocation(line: 799, column: 20, scope: !19373)
!19402 = !DILocation(line: 801, column: 2, scope: !19373)
!19403 = !DILocation(line: 801, column: 15, scope: !19373)
!19404 = !DILocation(line: 801, column: 28, scope: !19373)
!19405 = !DILocation(line: 814, column: 24, scope: !19373)
!19406 = !DILocation(line: 814, column: 2, scope: !19373)
!19407 = !DILocation(line: 815, column: 1, scope: !19373)
!19408 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2063, file: !2063, line: 449, type: !19409, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19409 = !DISubroutineType(types: !19410)
!19410 = !{!311, !2067, !19289, !217}
!19411 = !DILocalVariable(name: "new_thread", arg: 1, scope: !19408, file: !2063, line: 449, type: !2067)
!19412 = !DILocation(line: 449, column: 50, scope: !19408)
!19413 = !DILocalVariable(name: "stack", arg: 2, scope: !19408, file: !2063, line: 450, type: !19289)
!19414 = !DILocation(line: 450, column: 23, scope: !19408)
!19415 = !DILocalVariable(name: "stack_size", arg: 3, scope: !19408, file: !2063, line: 450, type: !217)
!19416 = !DILocation(line: 450, column: 37, scope: !19408)
!19417 = !DILocalVariable(name: "stack_obj_size", scope: !19408, file: !2063, line: 452, type: !217)
!19418 = !DILocation(line: 452, column: 9, scope: !19408)
!19419 = !DILocalVariable(name: "stack_buf_size", scope: !19408, file: !2063, line: 452, type: !217)
!19420 = !DILocation(line: 452, column: 25, scope: !19408)
!19421 = !DILocalVariable(name: "stack_ptr", scope: !19408, file: !2063, line: 453, type: !311)
!19422 = !DILocation(line: 453, column: 8, scope: !19408)
!19423 = !DILocalVariable(name: "stack_buf_start", scope: !19408, file: !2063, line: 453, type: !311)
!19424 = !DILocation(line: 453, column: 20, scope: !19408)
!19425 = !DILocalVariable(name: "delta", scope: !19408, file: !2063, line: 454, type: !217)
!19426 = !DILocation(line: 454, column: 9, scope: !19408)
!19427 = !DILocation(line: 465, column: 20, scope: !19428)
!19428 = distinct !DILexicalBlock(scope: !19408, file: !2063, line: 463, column: 2)
!19429 = !DILocation(line: 465, column: 18, scope: !19428)
!19430 = !DILocation(line: 466, column: 43, scope: !19428)
!19431 = !DILocation(line: 466, column: 21, scope: !19428)
!19432 = !DILocation(line: 466, column: 19, scope: !19428)
!19433 = !DILocation(line: 467, column: 20, scope: !19428)
!19434 = !DILocation(line: 467, column: 35, scope: !19428)
!19435 = !DILocation(line: 467, column: 18, scope: !19428)
!19436 = !DILocation(line: 473, column: 22, scope: !19408)
!19437 = !DILocation(line: 473, column: 14, scope: !19408)
!19438 = !DILocation(line: 473, column: 30, scope: !19408)
!19439 = !DILocation(line: 473, column: 28, scope: !19408)
!19440 = !DILocation(line: 473, column: 12, scope: !19408)
!19441 = !DILocation(line: 475, column: 2, scope: !19408)
!19442 = !DILocation(line: 475, column: 2, scope: !19443)
!19443 = distinct !DILexicalBlock(scope: !19444, file: !2063, line: 475, column: 2)
!19444 = distinct !DILexicalBlock(scope: !19445, file: !2063, line: 475, column: 2)
!19445 = distinct !DILexicalBlock(scope: !19408, file: !2063, line: 475, column: 2)
!19446 = !DILocation(line: 505, column: 10, scope: !19408)
!19447 = !DILocation(line: 505, column: 8, scope: !19408)
!19448 = !DILocation(line: 518, column: 15, scope: !19408)
!19449 = !DILocation(line: 518, column: 12, scope: !19408)
!19450 = !DILocation(line: 520, column: 9, scope: !19408)
!19451 = !DILocation(line: 520, column: 2, scope: !19408)
!19452 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !19453, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19453 = !DISubroutineType(types: !19454)
!19454 = !{!311, !19289}
!19455 = !DILocalVariable(name: "sym", arg: 1, scope: !19452, file: !234, line: 331, type: !19289)
!19456 = !DILocation(line: 331, column: 61, scope: !19452)
!19457 = !DILocation(line: 333, column: 17, scope: !19452)
!19458 = !DILocation(line: 333, column: 9, scope: !19452)
!19459 = !DILocation(line: 333, column: 21, scope: !19452)
!19460 = !DILocation(line: 333, column: 2, scope: !19452)
!19461 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !19462, file: !19462, line: 40, type: !19463, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19462 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19463 = !DISubroutineType(types: !19464)
!19464 = !{null, !19376}
!19465 = !DILocalVariable(name: "thread_base", arg: 1, scope: !19461, file: !19462, line: 40, type: !19376)
!19466 = !DILocation(line: 40, column: 63, scope: !19461)
!19467 = !DILocation(line: 42, column: 18, scope: !19461)
!19468 = !DILocation(line: 42, column: 31, scope: !19461)
!19469 = !DILocation(line: 42, column: 2, scope: !19461)
!19470 = !DILocation(line: 43, column: 1, scope: !19461)
!19471 = distinct !DISubprogram(name: "z_init_timeout", scope: !19462, file: !19462, line: 25, type: !2124, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19472 = !DILocalVariable(name: "to", arg: 1, scope: !19471, file: !19462, line: 25, type: !2126)
!19473 = !DILocation(line: 25, column: 52, scope: !19471)
!19474 = !DILocation(line: 27, column: 18, scope: !19471)
!19475 = !DILocation(line: 27, column: 22, scope: !19471)
!19476 = !DILocation(line: 27, column: 2, scope: !19471)
!19477 = !DILocation(line: 28, column: 1, scope: !19471)
!19478 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !19479, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19479 = !DISubroutineType(types: !19480)
!19480 = !{null, !2164}
!19481 = !DILocalVariable(name: "node", arg: 1, scope: !19478, file: !124, line: 211, type: !2164)
!19482 = !DILocation(line: 211, column: 48, scope: !19478)
!19483 = !DILocation(line: 213, column: 2, scope: !19478)
!19484 = !DILocation(line: 213, column: 8, scope: !19478)
!19485 = !DILocation(line: 213, column: 13, scope: !19478)
!19486 = !DILocation(line: 214, column: 2, scope: !19478)
!19487 = !DILocation(line: 214, column: 8, scope: !19478)
!19488 = !DILocation(line: 214, column: 13, scope: !19478)
!19489 = !DILocation(line: 215, column: 1, scope: !19478)
!19490 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !19491, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19491 = !DISubroutineType(types: !19492)
!19492 = !{null, !19493}
!19493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!19494 = !DILocalVariable(name: "list", arg: 1, scope: !19490, file: !124, line: 197, type: !19493)
!19495 = !DILocation(line: 197, column: 48, scope: !19490)
!19496 = !DILocation(line: 199, column: 30, scope: !19490)
!19497 = !DILocation(line: 199, column: 2, scope: !19490)
!19498 = !DILocation(line: 199, column: 8, scope: !19490)
!19499 = !DILocation(line: 199, column: 13, scope: !19490)
!19500 = !DILocation(line: 200, column: 30, scope: !19490)
!19501 = !DILocation(line: 200, column: 2, scope: !19490)
!19502 = !DILocation(line: 200, column: 8, scope: !19490)
!19503 = !DILocation(line: 200, column: 13, scope: !19490)
!19504 = !DILocation(line: 201, column: 1, scope: !19490)
!19505 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2063, file: !2063, line: 641, type: !19506, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19506 = !DISubroutineType(types: !19507)
!19507 = !{!2066, !2067, !19289, !217, !240, !102, !102, !102, !103, !173, !19508}
!19508 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !294, line: 67, baseType: !19509)
!19509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !294, line: 65, size: 64, elements: !19510)
!19510 = !{!19511}
!19511 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19509, file: !294, line: 66, baseType: !293, size: 64)
!19512 = !DILocalVariable(name: "new_thread", arg: 1, scope: !19505, file: !2063, line: 641, type: !2067)
!19513 = !DILocation(line: 641, column: 49, scope: !19505)
!19514 = !DILocalVariable(name: "stack", arg: 2, scope: !19505, file: !2063, line: 642, type: !19289)
!19515 = !DILocation(line: 642, column: 28, scope: !19505)
!19516 = !DILocalVariable(name: "stack_size", arg: 3, scope: !19505, file: !2063, line: 643, type: !217)
!19517 = !DILocation(line: 643, column: 17, scope: !19505)
!19518 = !DILocalVariable(name: "entry", arg: 4, scope: !19505, file: !2063, line: 643, type: !240)
!19519 = !DILocation(line: 643, column: 46, scope: !19505)
!19520 = !DILocalVariable(name: "p1", arg: 5, scope: !19505, file: !2063, line: 644, type: !102)
!19521 = !DILocation(line: 644, column: 16, scope: !19505)
!19522 = !DILocalVariable(name: "p2", arg: 6, scope: !19505, file: !2063, line: 644, type: !102)
!19523 = !DILocation(line: 644, column: 26, scope: !19505)
!19524 = !DILocalVariable(name: "p3", arg: 7, scope: !19505, file: !2063, line: 644, type: !102)
!19525 = !DILocation(line: 644, column: 36, scope: !19505)
!19526 = !DILocalVariable(name: "prio", arg: 8, scope: !19505, file: !2063, line: 645, type: !103)
!19527 = !DILocation(line: 645, column: 14, scope: !19505)
!19528 = !DILocalVariable(name: "options", arg: 9, scope: !19505, file: !2063, line: 645, type: !173)
!19529 = !DILocation(line: 645, column: 29, scope: !19505)
!19530 = !DILocalVariable(name: "delay", arg: 10, scope: !19505, file: !2063, line: 645, type: !19508)
!19531 = !DILocation(line: 645, column: 50, scope: !19505)
!19532 = !DILocation(line: 649, column: 21, scope: !19505)
!19533 = !DILocation(line: 649, column: 33, scope: !19505)
!19534 = !DILocation(line: 649, column: 40, scope: !19505)
!19535 = !DILocation(line: 649, column: 52, scope: !19505)
!19536 = !DILocation(line: 649, column: 59, scope: !19505)
!19537 = !DILocation(line: 649, column: 63, scope: !19505)
!19538 = !DILocation(line: 649, column: 67, scope: !19505)
!19539 = !DILocation(line: 650, column: 6, scope: !19505)
!19540 = !DILocation(line: 650, column: 12, scope: !19505)
!19541 = !DILocation(line: 649, column: 2, scope: !19505)
!19542 = !DILocation(line: 652, column: 7, scope: !19543)
!19543 = distinct !DILexicalBlock(scope: !19505, file: !2063, line: 652, column: 6)
!19544 = !DILocation(line: 652, column: 6, scope: !19505)
!19545 = !DILocation(line: 653, column: 23, scope: !19546)
!19546 = distinct !DILexicalBlock(scope: !19543, file: !2063, line: 652, column: 39)
!19547 = !DILocation(line: 653, column: 3, scope: !19546)
!19548 = !DILocation(line: 654, column: 2, scope: !19546)
!19549 = !DILocation(line: 656, column: 9, scope: !19505)
!19550 = !DILocation(line: 656, column: 2, scope: !19505)
!19551 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2063, file: !2063, line: 401, type: !19552, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19552 = !DISubroutineType(types: !19553)
!19553 = !{null, !2067, !19508}
!19554 = !DILocalVariable(name: "thread", arg: 1, scope: !19551, file: !2063, line: 401, type: !2067)
!19555 = !DILocation(line: 401, column: 50, scope: !19551)
!19556 = !DILocalVariable(name: "delay", arg: 2, scope: !19551, file: !2063, line: 401, type: !19508)
!19557 = !DILocation(line: 401, column: 70, scope: !19551)
!19558 = !DILocation(line: 404, column: 6, scope: !19559)
!19559 = distinct !DILexicalBlock(scope: !19551, file: !2063, line: 404, column: 6)
!19560 = !DILocation(line: 404, column: 6, scope: !19551)
!19561 = !DILocation(line: 405, column: 18, scope: !19562)
!19562 = distinct !DILexicalBlock(scope: !19559, file: !2063, line: 404, column: 38)
!19563 = !DILocation(line: 405, column: 3, scope: !19562)
!19564 = !DILocation(line: 406, column: 2, scope: !19562)
!19565 = !DILocation(line: 407, column: 24, scope: !19566)
!19566 = distinct !DILexicalBlock(scope: !19559, file: !2063, line: 406, column: 9)
!19567 = !DILocation(line: 407, column: 3, scope: !19566)
!19568 = !DILocation(line: 413, column: 1, scope: !19551)
!19569 = distinct !DISubprogram(name: "k_thread_start", scope: !3240, file: !3240, line: 205, type: !19570, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19570 = !DISubroutineType(types: !19571)
!19571 = !{null, !2066}
!19572 = !DILocalVariable(name: "thread", arg: 1, scope: !19569, file: !3240, line: 205, type: !2066)
!19573 = !DILocation(line: 205, column: 43, scope: !19569)
!19574 = !DILocation(line: 214, column: 2, scope: !19569)
!19575 = !DILocation(line: 214, column: 2, scope: !19576)
!19576 = distinct !DILexicalBlock(scope: !19569, file: !3240, line: 214, column: 2)
!19577 = !{i64 2149656170}
!19578 = !DILocation(line: 215, column: 24, scope: !19569)
!19579 = !DILocation(line: 215, column: 2, scope: !19569)
!19580 = !DILocation(line: 216, column: 1, scope: !19569)
!19581 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !19462, file: !19462, line: 47, type: !19552, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19582 = !DILocalVariable(name: "thread", arg: 1, scope: !19581, file: !19462, line: 47, type: !2067)
!19583 = !DILocation(line: 47, column: 58, scope: !19581)
!19584 = !DILocalVariable(name: "ticks", arg: 2, scope: !19581, file: !19462, line: 47, type: !19508)
!19585 = !DILocation(line: 47, column: 78, scope: !19581)
!19586 = !DILocation(line: 49, column: 17, scope: !19581)
!19587 = !DILocation(line: 49, column: 25, scope: !19581)
!19588 = !DILocation(line: 49, column: 30, scope: !19581)
!19589 = !DILocation(line: 49, column: 2, scope: !19581)
!19590 = !DILocation(line: 50, column: 1, scope: !19581)
!19591 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2063, file: !2063, line: 748, type: !253, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19592 = !DILocalVariable(name: "thread_data", scope: !19593, file: !2063, line: 750, type: !19594)
!19593 = distinct !DILexicalBlock(scope: !19591, file: !2063, line: 750, column: 2)
!19594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19595, size: 32)
!19595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !19596)
!19596 = !{!19597, !19598, !19599, !19600, !19601, !19602, !19603, !19604, !19605, !19606, !19607, !19608}
!19597 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !19595, file: !109, line: 621, baseType: !2067, size: 32)
!19598 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !19595, file: !109, line: 622, baseType: !19289, size: 32, offset: 32)
!19599 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !19595, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!19600 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !19595, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!19601 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !19595, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!19602 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !19595, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!19603 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !19595, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!19604 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !19595, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!19605 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !19595, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!19606 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !19595, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!19607 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !19595, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!19608 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !19595, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!19609 = !DILocation(line: 750, column: 2, scope: !19593)
!19610 = !DILocation(line: 750, column: 2, scope: !19611)
!19611 = distinct !DILexicalBlock(scope: !19612, file: !2063, line: 750, column: 2)
!19612 = distinct !DILexicalBlock(scope: !19593, file: !2063, line: 750, column: 2)
!19613 = !DILocation(line: 750, column: 2, scope: !19614)
!19614 = distinct !DILexicalBlock(scope: !19611, file: !2063, line: 750, column: 2)
!19615 = !DILocation(line: 752, column: 4, scope: !19616)
!19616 = distinct !DILexicalBlock(scope: !19612, file: !2063, line: 750, column: 38)
!19617 = !DILocation(line: 752, column: 17, scope: !19616)
!19618 = !DILocation(line: 753, column: 4, scope: !19616)
!19619 = !DILocation(line: 753, column: 17, scope: !19616)
!19620 = !DILocation(line: 754, column: 4, scope: !19616)
!19621 = !DILocation(line: 754, column: 17, scope: !19616)
!19622 = !DILocation(line: 755, column: 4, scope: !19616)
!19623 = !DILocation(line: 755, column: 17, scope: !19616)
!19624 = !DILocation(line: 756, column: 4, scope: !19616)
!19625 = !DILocation(line: 756, column: 17, scope: !19616)
!19626 = !DILocation(line: 757, column: 4, scope: !19616)
!19627 = !DILocation(line: 757, column: 17, scope: !19616)
!19628 = !DILocation(line: 758, column: 4, scope: !19616)
!19629 = !DILocation(line: 758, column: 17, scope: !19616)
!19630 = !DILocation(line: 759, column: 4, scope: !19616)
!19631 = !DILocation(line: 759, column: 17, scope: !19616)
!19632 = !DILocation(line: 760, column: 4, scope: !19616)
!19633 = !DILocation(line: 760, column: 17, scope: !19616)
!19634 = !DILocation(line: 761, column: 4, scope: !19616)
!19635 = !DILocation(line: 761, column: 17, scope: !19616)
!19636 = !DILocation(line: 751, column: 3, scope: !19616)
!19637 = !DILocation(line: 763, column: 41, scope: !19616)
!19638 = !DILocation(line: 763, column: 3, scope: !19616)
!19639 = !DILocation(line: 763, column: 16, scope: !19616)
!19640 = !DILocation(line: 763, column: 29, scope: !19616)
!19641 = !DILocation(line: 763, column: 39, scope: !19616)
!19642 = !DILocation(line: 764, column: 2, scope: !19616)
!19643 = !DILocation(line: 750, column: 2, scope: !19612)
!19644 = distinct !{!19644, !19609, !19645}
!19645 = !DILocation(line: 764, column: 2, scope: !19593)
!19646 = !DILocation(line: 780, column: 2, scope: !19591)
!19647 = !DILocalVariable(name: "thread_data", scope: !19648, file: !2063, line: 781, type: !19594)
!19648 = distinct !DILexicalBlock(scope: !19591, file: !2063, line: 781, column: 2)
!19649 = !DILocation(line: 781, column: 2, scope: !19648)
!19650 = !DILocation(line: 781, column: 2, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19652, file: !2063, line: 781, column: 2)
!19652 = distinct !DILexicalBlock(scope: !19648, file: !2063, line: 781, column: 2)
!19653 = !DILocation(line: 781, column: 2, scope: !19654)
!19654 = distinct !DILexicalBlock(scope: !19651, file: !2063, line: 781, column: 2)
!19655 = !DILocation(line: 782, column: 7, scope: !19656)
!19656 = distinct !DILexicalBlock(scope: !19657, file: !2063, line: 782, column: 7)
!19657 = distinct !DILexicalBlock(scope: !19652, file: !2063, line: 781, column: 38)
!19658 = !DILocation(line: 782, column: 20, scope: !19656)
!19659 = !DILocation(line: 782, column: 31, scope: !19656)
!19660 = !DILocation(line: 782, column: 7, scope: !19657)
!19661 = !DILocation(line: 783, column: 24, scope: !19662)
!19662 = distinct !DILexicalBlock(scope: !19656, file: !2063, line: 782, column: 51)
!19663 = !DILocation(line: 783, column: 37, scope: !19662)
!19664 = !DILocation(line: 784, column: 10, scope: !19662)
!19665 = !DILocation(line: 783, column: 4, scope: !19662)
!19666 = !DILocation(line: 785, column: 3, scope: !19662)
!19667 = !DILocation(line: 786, column: 2, scope: !19657)
!19668 = !DILocation(line: 781, column: 2, scope: !19652)
!19669 = distinct !{!19669, !19649, !19670}
!19670 = !DILocation(line: 786, column: 2, scope: !19648)
!19671 = !DILocation(line: 787, column: 2, scope: !19591)
!19672 = !DILocation(line: 788, column: 1, scope: !19591)
!19673 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !7339, file: !7339, line: 403, type: !10983, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19674 = !DILocalVariable(name: "t", arg: 1, scope: !19673, file: !7339, line: 403, type: !312)
!19675 = !DILocation(line: 403, column: 69, scope: !19673)
!19676 = !DILocation(line: 406, column: 17, scope: !19673)
!19677 = !DILocalVariable(name: "t", arg: 1, scope: !19678, file: !7339, line: 102, type: !312)
!19678 = distinct !DISubprogram(name: "z_tmcvt", scope: !7339, file: !7339, line: 102, type: !7347, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19679 = !DILocation(line: 102, column: 63, scope: !19678, inlinedAt: !19680)
!19680 = distinct !DILocation(line: 406, column: 9, scope: !19673)
!19681 = !DILocalVariable(name: "from_hz", arg: 2, scope: !19678, file: !7339, line: 102, type: !173)
!19682 = !DILocation(line: 102, column: 75, scope: !19678, inlinedAt: !19680)
!19683 = !DILocalVariable(name: "to_hz", arg: 3, scope: !19678, file: !7339, line: 103, type: !173)
!19684 = !DILocation(line: 103, column: 18, scope: !19678, inlinedAt: !19680)
!19685 = !DILocalVariable(name: "const_hz", arg: 4, scope: !19678, file: !7339, line: 103, type: !717)
!19686 = !DILocation(line: 103, column: 30, scope: !19678, inlinedAt: !19680)
!19687 = !DILocalVariable(name: "result32", arg: 5, scope: !19678, file: !7339, line: 104, type: !717)
!19688 = !DILocation(line: 104, column: 14, scope: !19678, inlinedAt: !19680)
!19689 = !DILocalVariable(name: "round_up", arg: 6, scope: !19678, file: !7339, line: 104, type: !717)
!19690 = !DILocation(line: 104, column: 29, scope: !19678, inlinedAt: !19680)
!19691 = !DILocalVariable(name: "round_off", arg: 7, scope: !19678, file: !7339, line: 105, type: !717)
!19692 = !DILocation(line: 105, column: 14, scope: !19678, inlinedAt: !19680)
!19693 = !DILocalVariable(name: "mul_ratio", scope: !19678, file: !7339, line: 107, type: !717)
!19694 = !DILocation(line: 107, column: 7, scope: !19678, inlinedAt: !19680)
!19695 = !DILocation(line: 107, column: 19, scope: !19678, inlinedAt: !19680)
!19696 = !DILocation(line: 107, column: 28, scope: !19678, inlinedAt: !19680)
!19697 = !DILocation(line: 108, column: 4, scope: !19678, inlinedAt: !19680)
!19698 = !DILocation(line: 108, column: 12, scope: !19678, inlinedAt: !19680)
!19699 = !DILocation(line: 108, column: 10, scope: !19678, inlinedAt: !19680)
!19700 = !DILocation(line: 108, column: 21, scope: !19678, inlinedAt: !19680)
!19701 = !DILocation(line: 108, column: 26, scope: !19678, inlinedAt: !19680)
!19702 = !DILocation(line: 108, column: 34, scope: !19678, inlinedAt: !19680)
!19703 = !DILocation(line: 108, column: 32, scope: !19678, inlinedAt: !19680)
!19704 = !DILocation(line: 108, column: 43, scope: !19678, inlinedAt: !19680)
!19705 = !DILocation(line: 0, scope: !19678, inlinedAt: !19680)
!19706 = !DILocalVariable(name: "div_ratio", scope: !19678, file: !7339, line: 109, type: !717)
!19707 = !DILocation(line: 109, column: 7, scope: !19678, inlinedAt: !19680)
!19708 = !DILocation(line: 109, column: 19, scope: !19678, inlinedAt: !19680)
!19709 = !DILocation(line: 109, column: 28, scope: !19678, inlinedAt: !19680)
!19710 = !DILocation(line: 110, column: 4, scope: !19678, inlinedAt: !19680)
!19711 = !DILocation(line: 110, column: 14, scope: !19678, inlinedAt: !19680)
!19712 = !DILocation(line: 110, column: 12, scope: !19678, inlinedAt: !19680)
!19713 = !DILocation(line: 110, column: 21, scope: !19678, inlinedAt: !19680)
!19714 = !DILocation(line: 110, column: 26, scope: !19678, inlinedAt: !19680)
!19715 = !DILocation(line: 110, column: 36, scope: !19678, inlinedAt: !19680)
!19716 = !DILocation(line: 110, column: 34, scope: !19678, inlinedAt: !19680)
!19717 = !DILocation(line: 110, column: 43, scope: !19678, inlinedAt: !19680)
!19718 = !DILocation(line: 112, column: 6, scope: !19719, inlinedAt: !19680)
!19719 = distinct !DILexicalBlock(scope: !19678, file: !7339, line: 112, column: 6)
!19720 = !DILocation(line: 112, column: 17, scope: !19719, inlinedAt: !19680)
!19721 = !DILocation(line: 112, column: 14, scope: !19719, inlinedAt: !19680)
!19722 = !DILocation(line: 112, column: 6, scope: !19678, inlinedAt: !19680)
!19723 = !DILocation(line: 113, column: 10, scope: !19724, inlinedAt: !19680)
!19724 = distinct !DILexicalBlock(scope: !19719, file: !7339, line: 112, column: 24)
!19725 = !DILocation(line: 113, column: 32, scope: !19724, inlinedAt: !19680)
!19726 = !DILocation(line: 113, column: 22, scope: !19724, inlinedAt: !19680)
!19727 = !DILocation(line: 113, column: 21, scope: !19724, inlinedAt: !19680)
!19728 = !DILocation(line: 113, column: 37, scope: !19724, inlinedAt: !19680)
!19729 = !DILocation(line: 113, column: 3, scope: !19724, inlinedAt: !19680)
!19730 = !DILocalVariable(name: "off", scope: !19678, file: !7339, line: 116, type: !312)
!19731 = !DILocation(line: 116, column: 11, scope: !19678, inlinedAt: !19680)
!19732 = !DILocation(line: 118, column: 7, scope: !19733, inlinedAt: !19680)
!19733 = distinct !DILexicalBlock(scope: !19678, file: !7339, line: 118, column: 6)
!19734 = !DILocation(line: 118, column: 6, scope: !19678, inlinedAt: !19680)
!19735 = !DILocalVariable(name: "rdivisor", scope: !19736, file: !7339, line: 119, type: !173)
!19736 = distinct !DILexicalBlock(scope: !19733, file: !7339, line: 118, column: 18)
!19737 = !DILocation(line: 119, column: 12, scope: !19736, inlinedAt: !19680)
!19738 = !DILocation(line: 119, column: 23, scope: !19736, inlinedAt: !19680)
!19739 = !DILocation(line: 119, column: 36, scope: !19736, inlinedAt: !19680)
!19740 = !DILocation(line: 119, column: 46, scope: !19736, inlinedAt: !19680)
!19741 = !DILocation(line: 119, column: 44, scope: !19736, inlinedAt: !19680)
!19742 = !DILocation(line: 119, column: 55, scope: !19736, inlinedAt: !19680)
!19743 = !DILocation(line: 121, column: 7, scope: !19744, inlinedAt: !19680)
!19744 = distinct !DILexicalBlock(scope: !19736, file: !7339, line: 121, column: 7)
!19745 = !DILocation(line: 121, column: 7, scope: !19736, inlinedAt: !19680)
!19746 = !DILocation(line: 122, column: 10, scope: !19747, inlinedAt: !19680)
!19747 = distinct !DILexicalBlock(scope: !19744, file: !7339, line: 121, column: 17)
!19748 = !DILocation(line: 122, column: 19, scope: !19747, inlinedAt: !19680)
!19749 = !DILocation(line: 122, column: 8, scope: !19747, inlinedAt: !19680)
!19750 = !DILocation(line: 123, column: 3, scope: !19747, inlinedAt: !19680)
!19751 = !DILocation(line: 124, column: 7, scope: !19752, inlinedAt: !19680)
!19752 = distinct !DILexicalBlock(scope: !19736, file: !7339, line: 124, column: 7)
!19753 = !DILocation(line: 124, column: 7, scope: !19736, inlinedAt: !19680)
!19754 = !DILocation(line: 125, column: 10, scope: !19755, inlinedAt: !19680)
!19755 = distinct !DILexicalBlock(scope: !19752, file: !7339, line: 124, column: 18)
!19756 = !DILocation(line: 125, column: 19, scope: !19755, inlinedAt: !19680)
!19757 = !DILocation(line: 125, column: 8, scope: !19755, inlinedAt: !19680)
!19758 = !DILocation(line: 126, column: 3, scope: !19755, inlinedAt: !19680)
!19759 = !DILocation(line: 127, column: 2, scope: !19736, inlinedAt: !19680)
!19760 = !DILocation(line: 134, column: 6, scope: !19761, inlinedAt: !19680)
!19761 = distinct !DILexicalBlock(scope: !19678, file: !7339, line: 134, column: 6)
!19762 = !DILocation(line: 134, column: 6, scope: !19678, inlinedAt: !19680)
!19763 = !DILocation(line: 135, column: 8, scope: !19764, inlinedAt: !19680)
!19764 = distinct !DILexicalBlock(scope: !19761, file: !7339, line: 134, column: 17)
!19765 = !DILocation(line: 135, column: 5, scope: !19764, inlinedAt: !19680)
!19766 = !DILocation(line: 136, column: 7, scope: !19767, inlinedAt: !19680)
!19767 = distinct !DILexicalBlock(scope: !19764, file: !7339, line: 136, column: 7)
!19768 = !DILocation(line: 136, column: 16, scope: !19767, inlinedAt: !19680)
!19769 = !DILocation(line: 136, column: 20, scope: !19767, inlinedAt: !19680)
!19770 = !DILocation(line: 136, column: 22, scope: !19767, inlinedAt: !19680)
!19771 = !DILocation(line: 136, column: 7, scope: !19764, inlinedAt: !19680)
!19772 = !DILocation(line: 137, column: 22, scope: !19773, inlinedAt: !19680)
!19773 = distinct !DILexicalBlock(scope: !19767, file: !7339, line: 136, column: 36)
!19774 = !DILocation(line: 137, column: 12, scope: !19773, inlinedAt: !19680)
!19775 = !DILocation(line: 137, column: 28, scope: !19773, inlinedAt: !19680)
!19776 = !DILocation(line: 137, column: 38, scope: !19773, inlinedAt: !19680)
!19777 = !DILocation(line: 137, column: 36, scope: !19773, inlinedAt: !19680)
!19778 = !DILocation(line: 137, column: 25, scope: !19773, inlinedAt: !19680)
!19779 = !DILocation(line: 137, column: 11, scope: !19773, inlinedAt: !19680)
!19780 = !DILocation(line: 137, column: 4, scope: !19773, inlinedAt: !19680)
!19781 = !DILocation(line: 139, column: 11, scope: !19782, inlinedAt: !19680)
!19782 = distinct !DILexicalBlock(scope: !19767, file: !7339, line: 138, column: 10)
!19783 = !DILocation(line: 139, column: 26, scope: !19782, inlinedAt: !19680)
!19784 = !DILocation(line: 139, column: 16, scope: !19782, inlinedAt: !19680)
!19785 = !DILocation(line: 139, column: 36, scope: !19782, inlinedAt: !19680)
!19786 = !DILocation(line: 139, column: 34, scope: !19782, inlinedAt: !19680)
!19787 = !DILocation(line: 139, column: 13, scope: !19782, inlinedAt: !19680)
!19788 = !DILocation(line: 139, column: 4, scope: !19782, inlinedAt: !19680)
!19789 = !DILocation(line: 141, column: 13, scope: !19790, inlinedAt: !19680)
!19790 = distinct !DILexicalBlock(scope: !19761, file: !7339, line: 141, column: 13)
!19791 = !DILocation(line: 141, column: 13, scope: !19761, inlinedAt: !19680)
!19792 = !DILocation(line: 142, column: 7, scope: !19793, inlinedAt: !19680)
!19793 = distinct !DILexicalBlock(scope: !19794, file: !7339, line: 142, column: 7)
!19794 = distinct !DILexicalBlock(scope: !19790, file: !7339, line: 141, column: 24)
!19795 = !DILocation(line: 142, column: 7, scope: !19794, inlinedAt: !19680)
!19796 = !DILocation(line: 143, column: 22, scope: !19797, inlinedAt: !19680)
!19797 = distinct !DILexicalBlock(scope: !19793, file: !7339, line: 142, column: 17)
!19798 = !DILocation(line: 143, column: 12, scope: !19797, inlinedAt: !19680)
!19799 = !DILocation(line: 143, column: 28, scope: !19797, inlinedAt: !19680)
!19800 = !DILocation(line: 143, column: 36, scope: !19797, inlinedAt: !19680)
!19801 = !DILocation(line: 143, column: 34, scope: !19797, inlinedAt: !19680)
!19802 = !DILocation(line: 143, column: 25, scope: !19797, inlinedAt: !19680)
!19803 = !DILocation(line: 143, column: 11, scope: !19797, inlinedAt: !19680)
!19804 = !DILocation(line: 143, column: 4, scope: !19797, inlinedAt: !19680)
!19805 = !DILocation(line: 145, column: 11, scope: !19806, inlinedAt: !19680)
!19806 = distinct !DILexicalBlock(scope: !19793, file: !7339, line: 144, column: 10)
!19807 = !DILocation(line: 145, column: 26, scope: !19806, inlinedAt: !19680)
!19808 = !DILocation(line: 145, column: 16, scope: !19806, inlinedAt: !19680)
!19809 = !DILocation(line: 145, column: 34, scope: !19806, inlinedAt: !19680)
!19810 = !DILocation(line: 145, column: 32, scope: !19806, inlinedAt: !19680)
!19811 = !DILocation(line: 145, column: 13, scope: !19806, inlinedAt: !19680)
!19812 = !DILocation(line: 145, column: 4, scope: !19806, inlinedAt: !19680)
!19813 = !DILocation(line: 148, column: 7, scope: !19814, inlinedAt: !19680)
!19814 = distinct !DILexicalBlock(scope: !19815, file: !7339, line: 148, column: 7)
!19815 = distinct !DILexicalBlock(scope: !19790, file: !7339, line: 147, column: 9)
!19816 = !DILocation(line: 148, column: 7, scope: !19815, inlinedAt: !19680)
!19817 = !DILocation(line: 149, column: 23, scope: !19818, inlinedAt: !19680)
!19818 = distinct !DILexicalBlock(scope: !19814, file: !7339, line: 148, column: 17)
!19819 = !DILocation(line: 149, column: 27, scope: !19818, inlinedAt: !19680)
!19820 = !DILocation(line: 149, column: 25, scope: !19818, inlinedAt: !19680)
!19821 = !DILocation(line: 149, column: 35, scope: !19818, inlinedAt: !19680)
!19822 = !DILocation(line: 149, column: 33, scope: !19818, inlinedAt: !19680)
!19823 = !DILocation(line: 149, column: 42, scope: !19818, inlinedAt: !19680)
!19824 = !DILocation(line: 149, column: 40, scope: !19818, inlinedAt: !19680)
!19825 = !DILocation(line: 149, column: 11, scope: !19818, inlinedAt: !19680)
!19826 = !DILocation(line: 149, column: 4, scope: !19818, inlinedAt: !19680)
!19827 = !DILocation(line: 150, column: 14, scope: !19828, inlinedAt: !19680)
!19828 = distinct !DILexicalBlock(scope: !19814, file: !7339, line: 150, column: 14)
!19829 = !DILocation(line: 150, column: 23, scope: !19828, inlinedAt: !19680)
!19830 = !DILocation(line: 150, column: 26, scope: !19828, inlinedAt: !19680)
!19831 = !DILocation(line: 150, column: 14, scope: !19814, inlinedAt: !19680)
!19832 = !DILocation(line: 156, column: 13, scope: !19833, inlinedAt: !19680)
!19833 = distinct !DILexicalBlock(scope: !19828, file: !7339, line: 150, column: 65)
!19834 = !DILocation(line: 156, column: 17, scope: !19833, inlinedAt: !19680)
!19835 = !DILocation(line: 156, column: 15, scope: !19833, inlinedAt: !19680)
!19836 = !DILocation(line: 156, column: 25, scope: !19833, inlinedAt: !19680)
!19837 = !DILocation(line: 156, column: 23, scope: !19833, inlinedAt: !19680)
!19838 = !DILocation(line: 156, column: 32, scope: !19833, inlinedAt: !19680)
!19839 = !DILocation(line: 156, column: 30, scope: !19833, inlinedAt: !19680)
!19840 = !DILocation(line: 156, column: 4, scope: !19833, inlinedAt: !19680)
!19841 = !DILocation(line: 161, column: 12, scope: !19842, inlinedAt: !19680)
!19842 = distinct !DILexicalBlock(scope: !19828, file: !7339, line: 157, column: 10)
!19843 = !DILocation(line: 161, column: 16, scope: !19842, inlinedAt: !19680)
!19844 = !DILocation(line: 161, column: 14, scope: !19842, inlinedAt: !19680)
!19845 = !DILocation(line: 161, column: 27, scope: !19842, inlinedAt: !19680)
!19846 = !DILocation(line: 161, column: 25, scope: !19842, inlinedAt: !19680)
!19847 = !DILocation(line: 161, column: 37, scope: !19842, inlinedAt: !19680)
!19848 = !DILocation(line: 161, column: 41, scope: !19842, inlinedAt: !19680)
!19849 = !DILocation(line: 161, column: 39, scope: !19842, inlinedAt: !19680)
!19850 = !DILocation(line: 161, column: 52, scope: !19842, inlinedAt: !19680)
!19851 = !DILocation(line: 161, column: 50, scope: !19842, inlinedAt: !19680)
!19852 = !DILocation(line: 161, column: 60, scope: !19842, inlinedAt: !19680)
!19853 = !DILocation(line: 161, column: 58, scope: !19842, inlinedAt: !19680)
!19854 = !DILocation(line: 161, column: 67, scope: !19842, inlinedAt: !19680)
!19855 = !DILocation(line: 161, column: 65, scope: !19842, inlinedAt: !19680)
!19856 = !DILocation(line: 161, column: 33, scope: !19842, inlinedAt: !19680)
!19857 = !DILocation(line: 161, column: 4, scope: !19842, inlinedAt: !19680)
!19858 = !DILocation(line: 164, column: 1, scope: !19678, inlinedAt: !19680)
!19859 = !DILocation(line: 406, column: 2, scope: !19673)
!19860 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2063, file: !2063, line: 817, type: !3404, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19861 = !DILocalVariable(name: "entry", arg: 1, scope: !19860, file: !2063, line: 817, type: !240)
!19862 = !DILocation(line: 817, column: 62, scope: !19860)
!19863 = !DILocalVariable(name: "p1", arg: 2, scope: !19860, file: !2063, line: 818, type: !102)
!19864 = !DILocation(line: 818, column: 16, scope: !19860)
!19865 = !DILocalVariable(name: "p2", arg: 3, scope: !19860, file: !2063, line: 818, type: !102)
!19866 = !DILocation(line: 818, column: 26, scope: !19860)
!19867 = !DILocalVariable(name: "p3", arg: 4, scope: !19860, file: !2063, line: 818, type: !102)
!19868 = !DILocation(line: 818, column: 36, scope: !19860)
!19869 = !DILocation(line: 820, column: 2, scope: !19860)
!19870 = !DILocation(line: 820, column: 2, scope: !19871)
!19871 = distinct !DILexicalBlock(scope: !19860, file: !2063, line: 820, column: 2)
!19872 = !DILocation(line: 822, column: 2, scope: !19860)
!19873 = !DILocation(line: 822, column: 12, scope: !19860)
!19874 = !DILocation(line: 822, column: 17, scope: !19860)
!19875 = !DILocation(line: 822, column: 30, scope: !19860)
!19876 = !DILocation(line: 823, column: 2, scope: !19860)
!19877 = !DILocation(line: 845, column: 17, scope: !19860)
!19878 = !DILocation(line: 845, column: 24, scope: !19860)
!19879 = !DILocation(line: 845, column: 28, scope: !19860)
!19880 = !DILocation(line: 845, column: 32, scope: !19860)
!19881 = !DILocation(line: 845, column: 2, scope: !19860)
!19882 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2063, file: !2063, line: 888, type: !19883, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19883 = !DISubroutineType(types: !19884)
!19884 = !{!103, !2067}
!19885 = !DILocalVariable(name: "thread", arg: 1, scope: !19882, file: !2063, line: 888, type: !2067)
!19886 = !DILocation(line: 888, column: 45, scope: !19882)
!19887 = !DILocation(line: 893, column: 2, scope: !19882)
!19888 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2063, file: !2063, line: 897, type: !19889, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19889 = !DISubroutineType(types: !19890)
!19890 = !{!103, !2067, !32}
!19891 = !DILocalVariable(name: "thread", arg: 1, scope: !19888, file: !2063, line: 897, type: !2067)
!19892 = !DILocation(line: 897, column: 44, scope: !19888)
!19893 = !DILocalVariable(name: "options", arg: 2, scope: !19888, file: !2063, line: 897, type: !32)
!19894 = !DILocation(line: 897, column: 65, scope: !19888)
!19895 = !DILocation(line: 902, column: 2, scope: !19888)
!19896 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2063, file: !2063, line: 1072, type: !19897, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19897 = !DISubroutineType(types: !19898)
!19898 = !{!103, !2066, !19899}
!19899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19900, size: 32)
!19900 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !114, line: 234, baseType: !19901)
!19901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !114, line: 192, elements: !223)
!19902 = !DILocalVariable(name: "thread", arg: 1, scope: !19896, file: !2063, line: 1072, type: !2066)
!19903 = !DILocation(line: 1072, column: 40, scope: !19896)
!19904 = !DILocalVariable(name: "stats", arg: 2, scope: !19896, file: !2063, line: 1073, type: !19899)
!19905 = !DILocation(line: 1073, column: 37, scope: !19896)
!19906 = !DILocation(line: 1075, column: 7, scope: !19907)
!19907 = distinct !DILexicalBlock(scope: !19896, file: !2063, line: 1075, column: 6)
!19908 = !DILocation(line: 1075, column: 14, scope: !19907)
!19909 = !DILocation(line: 1075, column: 23, scope: !19907)
!19910 = !DILocation(line: 1075, column: 27, scope: !19907)
!19911 = !DILocation(line: 1075, column: 33, scope: !19907)
!19912 = !DILocation(line: 1075, column: 6, scope: !19896)
!19913 = !DILocation(line: 1076, column: 3, scope: !19914)
!19914 = distinct !DILexicalBlock(scope: !19907, file: !2063, line: 1075, column: 43)
!19915 = !DILocation(line: 1082, column: 3, scope: !19896)
!19916 = !DILocation(line: 1082, column: 11, scope: !19896)
!19917 = !DILocation(line: 1085, column: 2, scope: !19896)
!19918 = !DILocation(line: 1086, column: 1, scope: !19896)
!19919 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2063, file: !2063, line: 1088, type: !19920, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !223)
!19920 = !DISubroutineType(types: !19921)
!19921 = !{!103, !19899}
!19922 = !DILocalVariable(name: "stats", arg: 1, scope: !19919, file: !2063, line: 1088, type: !19899)
!19923 = !DILocation(line: 1088, column: 62, scope: !19919)
!19924 = !DILocation(line: 1094, column: 6, scope: !19925)
!19925 = distinct !DILexicalBlock(scope: !19919, file: !2063, line: 1094, column: 6)
!19926 = !DILocation(line: 1094, column: 12, scope: !19925)
!19927 = !DILocation(line: 1094, column: 6, scope: !19919)
!19928 = !DILocation(line: 1095, column: 3, scope: !19929)
!19929 = distinct !DILexicalBlock(scope: !19925, file: !2063, line: 1094, column: 21)
!19930 = !DILocation(line: 1098, column: 3, scope: !19919)
!19931 = !DILocation(line: 1098, column: 11, scope: !19919)
!19932 = !DILocation(line: 1119, column: 2, scope: !19919)
!19933 = !DILocation(line: 1120, column: 1, scope: !19919)
!19934 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !19935, file: !19935, line: 20, type: !253, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2951, retainedNodes: !223)
!19935 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19936 = !DILocation(line: 28, column: 2, scope: !19934)
!19937 = !DILocation(line: 30, column: 2, scope: !19934)
!19938 = !DILocation(line: 31, column: 1, scope: !19934)
!19939 = distinct !DISubprogram(name: "idle", scope: !19935, file: !19935, line: 33, type: !242, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2951, retainedNodes: !223)
!19940 = !DILocalVariable(name: "unused1", arg: 1, scope: !19939, file: !19935, line: 33, type: !102)
!19941 = !DILocation(line: 33, column: 17, scope: !19939)
!19942 = !DILocalVariable(name: "unused2", arg: 2, scope: !19939, file: !19935, line: 33, type: !102)
!19943 = !DILocation(line: 33, column: 32, scope: !19939)
!19944 = !DILocalVariable(name: "unused3", arg: 3, scope: !19939, file: !19935, line: 33, type: !102)
!19945 = !DILocation(line: 33, column: 47, scope: !19939)
!19946 = !DILocation(line: 35, column: 2, scope: !19939)
!19947 = !DILocation(line: 36, column: 2, scope: !19939)
!19948 = !DILocation(line: 37, column: 2, scope: !19939)
!19949 = !DILocation(line: 41, column: 2, scope: !19939)
!19950 = !DILocalVariable(name: "key", scope: !19951, file: !3614, line: 44, type: !32)
!19951 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2951, retainedNodes: !223)
!19952 = !DILocation(line: 44, column: 15, scope: !19951, inlinedAt: !19953)
!19953 = distinct !DILocation(line: 62, column: 10, scope: !19954)
!19954 = distinct !DILexicalBlock(scope: !19939, file: !19935, line: 41, column: 15)
!19955 = !DILocation(line: 47, column: 2, scope: !19951, inlinedAt: !19953)
!19956 = !{i64 1442134}
!19957 = !DILocation(line: 76, column: 9, scope: !19951, inlinedAt: !19953)
!19958 = !DILocation(line: 65, column: 18, scope: !19954)
!19959 = !DILocation(line: 65, column: 16, scope: !19954)
!19960 = !DILocation(line: 82, column: 7, scope: !19961)
!19961 = distinct !DILexicalBlock(scope: !19954, file: !19935, line: 82, column: 7)
!19962 = !DILocation(line: 82, column: 25, scope: !19961)
!19963 = !DILocation(line: 82, column: 55, scope: !19961)
!19964 = !DILocation(line: 82, column: 29, scope: !19961)
!19965 = !DILocation(line: 82, column: 7, scope: !19954)
!19966 = !DILocation(line: 83, column: 4, scope: !19967)
!19967 = distinct !DILexicalBlock(scope: !19961, file: !19935, line: 82, column: 62)
!19968 = !DILocation(line: 84, column: 3, scope: !19967)
!19969 = distinct !{!19969, !19949, !19970}
!19970 = !DILocation(line: 105, column: 2, scope: !19939)
!19971 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !109, file: !109, line: 989, type: !3163, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2951, retainedNodes: !223)
!19972 = !DILocation(line: 993, column: 10, scope: !19971)
!19973 = !DILocation(line: 993, column: 9, scope: !19971)
!19974 = !DILocation(line: 993, column: 2, scope: !19971)
!19975 = distinct !DISubprogram(name: "k_cpu_idle", scope: !109, file: !109, line: 5627, type: !253, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2951, retainedNodes: !223)
!19976 = !DILocation(line: 5629, column: 2, scope: !19975)
!19977 = !DILocation(line: 5630, column: 1, scope: !19975)
!19978 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2192, file: !2192, line: 41, type: !19979, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!19979 = !DISubroutineType(types: !19980)
!19980 = !{!103, !19981, !32, !32}
!19981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19982, size: 32)
!19982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !109, line: 2909, size: 128, elements: !19983)
!19983 = !{!19984, !19990, !19991}
!19984 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !19982, file: !109, line: 2910, baseType: !19985, size: 64)
!19985 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !19986)
!19986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !19987)
!19987 = !{!19988}
!19988 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !19986, file: !150, line: 232, baseType: !19989, size: 64)
!19989 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2178)
!19990 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !19982, file: !109, line: 2911, baseType: !32, size: 32, offset: 64)
!19991 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !19982, file: !109, line: 2912, baseType: !32, size: 32, offset: 96)
!19992 = !DILocalVariable(name: "sem", arg: 1, scope: !19978, file: !2192, line: 41, type: !19981)
!19993 = !DILocation(line: 41, column: 37, scope: !19978)
!19994 = !DILocalVariable(name: "initial_count", arg: 2, scope: !19978, file: !2192, line: 41, type: !32)
!19995 = !DILocation(line: 41, column: 55, scope: !19978)
!19996 = !DILocalVariable(name: "limit", arg: 3, scope: !19978, file: !2192, line: 42, type: !32)
!19997 = !DILocation(line: 42, column: 22, scope: !19978)
!19998 = !DILocation(line: 47, column: 2, scope: !19999)
!19999 = distinct !DILexicalBlock(scope: !19978, file: !2192, line: 47, column: 2)
!20000 = !DILocation(line: 47, column: 2, scope: !19978)
!20001 = !DILocation(line: 48, column: 3, scope: !20002)
!20002 = distinct !DILexicalBlock(scope: !19999, file: !2192, line: 47, column: 75)
!20003 = !DILocation(line: 48, column: 3, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !20002, file: !2192, line: 48, column: 3)
!20005 = !DILocation(line: 50, column: 3, scope: !20002)
!20006 = !DILocation(line: 53, column: 15, scope: !19978)
!20007 = !DILocation(line: 53, column: 2, scope: !19978)
!20008 = !DILocation(line: 53, column: 7, scope: !19978)
!20009 = !DILocation(line: 53, column: 13, scope: !19978)
!20010 = !DILocation(line: 54, column: 15, scope: !19978)
!20011 = !DILocation(line: 54, column: 2, scope: !19978)
!20012 = !DILocation(line: 54, column: 7, scope: !19978)
!20013 = !DILocation(line: 54, column: 13, scope: !19978)
!20014 = !DILocation(line: 56, column: 2, scope: !19978)
!20015 = !DILocation(line: 56, column: 2, scope: !20016)
!20016 = distinct !DILexicalBlock(scope: !19978, file: !2192, line: 56, column: 2)
!20017 = !DILocation(line: 58, column: 16, scope: !19978)
!20018 = !DILocation(line: 58, column: 21, scope: !19978)
!20019 = !DILocation(line: 58, column: 2, scope: !19978)
!20020 = !DILocation(line: 62, column: 16, scope: !19978)
!20021 = !DILocation(line: 62, column: 2, scope: !19978)
!20022 = !DILocation(line: 64, column: 2, scope: !19978)
!20023 = !DILocation(line: 65, column: 1, scope: !19978)
!20024 = distinct !DISubprogram(name: "z_waitq_init", scope: !19364, file: !19364, line: 47, type: !20025, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20025 = !DISubroutineType(types: !20026)
!20026 = !{null, !20027}
!20027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19985, size: 32)
!20028 = !DILocalVariable(name: "w", arg: 1, scope: !20024, file: !19364, line: 47, type: !20027)
!20029 = !DILocation(line: 47, column: 44, scope: !20024)
!20030 = !DILocation(line: 49, column: 18, scope: !20024)
!20031 = !DILocation(line: 49, column: 21, scope: !20024)
!20032 = !DILocation(line: 49, column: 2, scope: !20024)
!20033 = !DILocation(line: 50, column: 1, scope: !20024)
!20034 = distinct !DISubprogram(name: "z_object_init", scope: !31, file: !31, line: 200, type: !17, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20035 = !DILocalVariable(name: "obj", arg: 1, scope: !20034, file: !31, line: 200, type: !13)
!20036 = !DILocation(line: 200, column: 46, scope: !20034)
!20037 = !DILocation(line: 202, column: 2, scope: !20034)
!20038 = !DILocation(line: 203, column: 1, scope: !20034)
!20039 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !20040, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20040 = !DISubroutineType(types: !20041)
!20041 = !{null, !20042}
!20042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19989, size: 32)
!20043 = !DILocalVariable(name: "list", arg: 1, scope: !20039, file: !124, line: 197, type: !20042)
!20044 = !DILocation(line: 197, column: 48, scope: !20039)
!20045 = !DILocation(line: 199, column: 30, scope: !20039)
!20046 = !DILocation(line: 199, column: 2, scope: !20039)
!20047 = !DILocation(line: 199, column: 8, scope: !20039)
!20048 = !DILocation(line: 199, column: 13, scope: !20039)
!20049 = !DILocation(line: 200, column: 30, scope: !20039)
!20050 = !DILocation(line: 200, column: 2, scope: !20039)
!20051 = !DILocation(line: 200, column: 8, scope: !20039)
!20052 = !DILocation(line: 200, column: 13, scope: !20039)
!20053 = !DILocation(line: 201, column: 1, scope: !20039)
!20054 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2192, file: !2192, line: 86, type: !20055, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20055 = !DISubroutineType(types: !20056)
!20056 = !{null, !19981}
!20057 = !DILocalVariable(name: "sem", arg: 1, scope: !20054, file: !2192, line: 86, type: !19981)
!20058 = !DILocation(line: 86, column: 38, scope: !20054)
!20059 = !DILocalVariable(name: "key", scope: !20054, file: !2192, line: 88, type: !20060)
!20060 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !20061)
!20061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !20062)
!20062 = !{!20063}
!20063 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !20061, file: !222, line: 33, baseType: !103, size: 32)
!20064 = !DILocation(line: 88, column: 19, scope: !20054)
!20065 = !DILocalVariable(name: "l", arg: 1, scope: !20066, file: !222, line: 136, type: !20069)
!20066 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !20067, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20067 = !DISubroutineType(types: !20068)
!20068 = !{!20060, !20069}
!20069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!20070 = !DILocation(line: 136, column: 70, scope: !20066, inlinedAt: !20071)
!20071 = distinct !DILocation(line: 88, column: 25, scope: !20054)
!20072 = !DILocation(line: 138, column: 2, scope: !20066, inlinedAt: !20071)
!20073 = !DILocalVariable(name: "k", scope: !20066, file: !222, line: 139, type: !20060)
!20074 = !DILocation(line: 139, column: 19, scope: !20066, inlinedAt: !20071)
!20075 = !DILocalVariable(name: "key", scope: !20076, file: !3614, line: 44, type: !32)
!20076 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20077 = !DILocation(line: 44, column: 15, scope: !20076, inlinedAt: !20078)
!20078 = distinct !DILocation(line: 145, column: 10, scope: !20066, inlinedAt: !20071)
!20079 = !DILocation(line: 47, column: 2, scope: !20076, inlinedAt: !20078)
!20080 = !{i64 1443696}
!20081 = !DILocation(line: 76, column: 9, scope: !20076, inlinedAt: !20078)
!20082 = !DILocation(line: 145, column: 4, scope: !20066, inlinedAt: !20071)
!20083 = !DILocation(line: 145, column: 8, scope: !20066, inlinedAt: !20071)
!20084 = !DILocation(line: 165, column: 2, scope: !20066, inlinedAt: !20071)
!20085 = !DILocation(line: 88, column: 25, scope: !20054)
!20086 = !DILocalVariable(name: "thread", scope: !20054, file: !2192, line: 89, type: !20087)
!20087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20088, size: 32)
!20088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !20089)
!20089 = !{!20090, !20128, !20140, !20141, !20142, !20143, !20155}
!20090 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !20088, file: !114, line: 247, baseType: !20091, size: 384)
!20091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !20092)
!20092 = !{!20093, !20103, !20104, !20105, !20106, !20115, !20116, !20117}
!20093 = !DIDerivedType(tag: DW_TAG_member, scope: !20091, file: !114, line: 60, baseType: !20094, size: 64)
!20094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !20091, file: !114, line: 60, size: 64, elements: !20095)
!20095 = !{!20096, !20097}
!20096 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !20094, file: !114, line: 61, baseType: !2177, size: 64)
!20097 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !20094, file: !114, line: 62, baseType: !20098, size: 64)
!20098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !20099)
!20099 = !{!20100}
!20100 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !20098, file: !140, line: 50, baseType: !20101, size: 64)
!20101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20102, size: 64, elements: !145)
!20102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20098, size: 32)
!20103 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !20091, file: !114, line: 68, baseType: !20027, size: 32, offset: 64)
!20104 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !20091, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!20105 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !20091, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!20106 = !DIDerivedType(tag: DW_TAG_member, scope: !20091, file: !114, line: 90, baseType: !20107, size: 16, offset: 112)
!20107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !20091, file: !114, line: 90, size: 16, elements: !20108)
!20108 = !{!20109, !20114}
!20109 = !DIDerivedType(tag: DW_TAG_member, scope: !20107, file: !114, line: 91, baseType: !20110, size: 16)
!20110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !20107, file: !114, line: 91, size: 16, elements: !20111)
!20111 = !{!20112, !20113}
!20112 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !20110, file: !114, line: 96, baseType: !166, size: 8)
!20113 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !20110, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!20114 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !20107, file: !114, line: 100, baseType: !170, size: 16)
!20115 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !20091, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!20116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !20091, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!20117 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !20091, file: !114, line: 131, baseType: !20118, size: 192, offset: 192)
!20118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !20119)
!20119 = !{!20120, !20121, !20127}
!20120 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !20118, file: !150, line: 245, baseType: !2177, size: 64)
!20121 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !20118, file: !150, line: 246, baseType: !20122, size: 32, offset: 64)
!20122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !20123)
!20123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20124, size: 32)
!20124 = !DISubroutineType(types: !20125)
!20125 = !{null, !20126}
!20126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20118, size: 32)
!20127 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !20118, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!20128 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !20088, file: !114, line: 250, baseType: !20129, size: 288, offset: 384)
!20129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !20130)
!20130 = !{!20131, !20132, !20133, !20134, !20135, !20136, !20137, !20138, !20139}
!20131 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !20129, file: !190, line: 26, baseType: !173, size: 32)
!20132 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !20129, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!20133 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !20129, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!20134 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !20129, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!20135 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !20129, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!20136 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !20129, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!20137 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !20129, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!20138 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !20129, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!20139 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !20129, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!20140 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !20088, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!20141 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !20088, file: !114, line: 256, baseType: !19985, size: 64, offset: 704)
!20142 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !20088, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!20143 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !20088, file: !114, line: 325, baseType: !20144, size: 32, offset: 800)
!20144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20145, size: 32)
!20145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !20146)
!20146 = !{!20147, !20153, !20154}
!20147 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !20145, file: !109, line: 5074, baseType: !20148, size: 96)
!20148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !20149)
!20149 = !{!20150, !20151, !20152}
!20150 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !20148, file: !210, line: 57, baseType: !213, size: 32)
!20151 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !20148, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!20152 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !20148, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!20153 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !20145, file: !109, line: 5075, baseType: !19985, size: 64, offset: 96)
!20154 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !20145, file: !109, line: 5076, baseType: !2193, offset: 160)
!20155 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !20088, file: !114, line: 343, baseType: !20156, size: 64, offset: 832)
!20156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !20157)
!20157 = !{!20158, !20159}
!20158 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !20156, file: !190, line: 63, baseType: !173, size: 32)
!20159 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !20156, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!20160 = !DILocation(line: 89, column: 19, scope: !20054)
!20161 = !DILocation(line: 91, column: 2, scope: !20054)
!20162 = !DILocation(line: 91, column: 2, scope: !20163)
!20163 = distinct !DILexicalBlock(scope: !20054, file: !2192, line: 91, column: 2)
!20164 = !DILocation(line: 93, column: 34, scope: !20054)
!20165 = !DILocation(line: 93, column: 39, scope: !20054)
!20166 = !DILocation(line: 93, column: 11, scope: !20054)
!20167 = !DILocation(line: 93, column: 9, scope: !20054)
!20168 = !DILocation(line: 95, column: 6, scope: !20169)
!20169 = distinct !DILexicalBlock(scope: !20054, file: !2192, line: 95, column: 6)
!20170 = !DILocation(line: 95, column: 13, scope: !20169)
!20171 = !DILocation(line: 95, column: 6, scope: !20054)
!20172 = !DILocation(line: 96, column: 32, scope: !20173)
!20173 = distinct !DILexicalBlock(scope: !20169, file: !2192, line: 95, column: 22)
!20174 = !DILocalVariable(name: "thread", arg: 1, scope: !20175, file: !18884, line: 65, type: !20087)
!20175 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !18884, file: !18884, line: 65, type: !20176, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20176 = !DISubroutineType(types: !20177)
!20177 = !{null, !20087, !32}
!20178 = !DILocation(line: 65, column: 47, scope: !20175, inlinedAt: !20179)
!20179 = distinct !DILocation(line: 96, column: 3, scope: !20173)
!20180 = !DILocalVariable(name: "value", arg: 2, scope: !20175, file: !18884, line: 65, type: !32)
!20181 = !DILocation(line: 65, column: 68, scope: !20175, inlinedAt: !20179)
!20182 = !DILocation(line: 67, column: 35, scope: !20175, inlinedAt: !20179)
!20183 = !DILocation(line: 67, column: 2, scope: !20175, inlinedAt: !20179)
!20184 = !DILocation(line: 67, column: 10, scope: !20175, inlinedAt: !20179)
!20185 = !DILocation(line: 67, column: 15, scope: !20175, inlinedAt: !20179)
!20186 = !DILocation(line: 67, column: 33, scope: !20175, inlinedAt: !20179)
!20187 = !DILocation(line: 97, column: 18, scope: !20173)
!20188 = !DILocation(line: 97, column: 3, scope: !20173)
!20189 = !DILocation(line: 98, column: 2, scope: !20173)
!20190 = !DILocation(line: 99, column: 18, scope: !20191)
!20191 = distinct !DILexicalBlock(scope: !20169, file: !2192, line: 98, column: 9)
!20192 = !DILocation(line: 99, column: 23, scope: !20191)
!20193 = !DILocation(line: 99, column: 32, scope: !20191)
!20194 = !DILocation(line: 99, column: 37, scope: !20191)
!20195 = !DILocation(line: 99, column: 29, scope: !20191)
!20196 = !DILocation(line: 99, column: 17, scope: !20191)
!20197 = !DILocation(line: 99, column: 3, scope: !20191)
!20198 = !DILocation(line: 99, column: 8, scope: !20191)
!20199 = !DILocation(line: 99, column: 14, scope: !20191)
!20200 = !DILocation(line: 100, column: 22, scope: !20191)
!20201 = !DILocation(line: 100, column: 3, scope: !20191)
!20202 = !DILocation(line: 103, column: 2, scope: !20054)
!20203 = !DILocation(line: 105, column: 2, scope: !20054)
!20204 = !DILocation(line: 105, column: 2, scope: !20205)
!20205 = distinct !DILexicalBlock(scope: !20054, file: !2192, line: 105, column: 2)
!20206 = !DILocation(line: 106, column: 1, scope: !20054)
!20207 = distinct !DISubprogram(name: "handle_poll_events", scope: !2192, file: !2192, line: 77, type: !20055, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20208 = !DILocalVariable(name: "sem", arg: 1, scope: !20207, file: !2192, line: 77, type: !19981)
!20209 = !DILocation(line: 77, column: 53, scope: !20207)
!20210 = !DILocation(line: 82, column: 2, scope: !20207)
!20211 = !DILocation(line: 84, column: 1, scope: !20207)
!20212 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2192, file: !2192, line: 117, type: !20213, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20213 = !DISubroutineType(types: !20214)
!20214 = !{!103, !19981, !20215}
!20215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !294, line: 67, baseType: !20216)
!20216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !294, line: 65, size: 64, elements: !20217)
!20217 = !{!20218}
!20218 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !20216, file: !294, line: 66, baseType: !293, size: 64)
!20219 = !DILocalVariable(name: "sem", arg: 1, scope: !20212, file: !2192, line: 117, type: !19981)
!20220 = !DILocation(line: 117, column: 37, scope: !20212)
!20221 = !DILocalVariable(name: "timeout", arg: 2, scope: !20212, file: !2192, line: 117, type: !20215)
!20222 = !DILocation(line: 117, column: 54, scope: !20212)
!20223 = !DILocalVariable(name: "ret", scope: !20212, file: !2192, line: 119, type: !103)
!20224 = !DILocation(line: 119, column: 6, scope: !20212)
!20225 = !DILocalVariable(name: "key", scope: !20212, file: !2192, line: 124, type: !20060)
!20226 = !DILocation(line: 124, column: 19, scope: !20212)
!20227 = !DILocation(line: 136, column: 70, scope: !20066, inlinedAt: !20228)
!20228 = distinct !DILocation(line: 124, column: 25, scope: !20212)
!20229 = !DILocation(line: 138, column: 2, scope: !20066, inlinedAt: !20228)
!20230 = !DILocation(line: 139, column: 19, scope: !20066, inlinedAt: !20228)
!20231 = !DILocation(line: 44, column: 15, scope: !20076, inlinedAt: !20232)
!20232 = distinct !DILocation(line: 145, column: 10, scope: !20066, inlinedAt: !20228)
!20233 = !DILocation(line: 47, column: 2, scope: !20076, inlinedAt: !20232)
!20234 = !DILocation(line: 76, column: 9, scope: !20076, inlinedAt: !20232)
!20235 = !DILocation(line: 145, column: 4, scope: !20066, inlinedAt: !20228)
!20236 = !DILocation(line: 145, column: 8, scope: !20066, inlinedAt: !20228)
!20237 = !DILocation(line: 165, column: 2, scope: !20066, inlinedAt: !20228)
!20238 = !DILocation(line: 124, column: 25, scope: !20212)
!20239 = !DILocation(line: 126, column: 2, scope: !20212)
!20240 = !DILocation(line: 126, column: 2, scope: !20241)
!20241 = distinct !DILexicalBlock(scope: !20212, file: !2192, line: 126, column: 2)
!20242 = !DILocation(line: 128, column: 6, scope: !20243)
!20243 = distinct !DILexicalBlock(scope: !20212, file: !2192, line: 128, column: 6)
!20244 = !DILocation(line: 128, column: 6, scope: !20212)
!20245 = !DILocation(line: 129, column: 3, scope: !20246)
!20246 = distinct !DILexicalBlock(scope: !20243, file: !2192, line: 128, column: 31)
!20247 = !DILocation(line: 129, column: 8, scope: !20246)
!20248 = !DILocation(line: 129, column: 13, scope: !20246)
!20249 = !DILocation(line: 130, column: 3, scope: !20246)
!20250 = !DILocalVariable(name: "l", arg: 1, scope: !20251, file: !222, line: 189, type: !20069)
!20251 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !20252, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20252 = !DISubroutineType(types: !20253)
!20253 = !{null, !20069, !20060}
!20254 = !DILocation(line: 189, column: 60, scope: !20251, inlinedAt: !20255)
!20255 = distinct !DILocation(line: 130, column: 3, scope: !20246)
!20256 = !DILocalVariable(name: "key", arg: 2, scope: !20251, file: !222, line: 190, type: !20060)
!20257 = !DILocation(line: 190, column: 23, scope: !20251, inlinedAt: !20255)
!20258 = !DILocation(line: 192, column: 2, scope: !20251, inlinedAt: !20255)
!20259 = !DILocation(line: 215, column: 22, scope: !20251, inlinedAt: !20255)
!20260 = !DILocalVariable(name: "key", arg: 1, scope: !20261, file: !3614, line: 84, type: !32)
!20261 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20262 = !DILocation(line: 84, column: 56, scope: !20261, inlinedAt: !20263)
!20263 = distinct !DILocation(line: 215, column: 2, scope: !20251, inlinedAt: !20255)
!20264 = !DILocation(line: 87, column: 6, scope: !20265, inlinedAt: !20263)
!20265 = distinct !DILexicalBlock(scope: !20261, file: !3614, line: 87, column: 6)
!20266 = !DILocation(line: 87, column: 10, scope: !20265, inlinedAt: !20263)
!20267 = !DILocation(line: 87, column: 6, scope: !20261, inlinedAt: !20263)
!20268 = !DILocation(line: 88, column: 3, scope: !20269, inlinedAt: !20263)
!20269 = distinct !DILexicalBlock(scope: !20265, file: !3614, line: 87, column: 17)
!20270 = !DILocation(line: 90, column: 2, scope: !20261, inlinedAt: !20263)
!20271 = !{i64 1444560}
!20272 = !DILocation(line: 110, column: 1, scope: !20261, inlinedAt: !20263)
!20273 = !DILocation(line: 131, column: 7, scope: !20246)
!20274 = !DILocation(line: 132, column: 3, scope: !20246)
!20275 = !DILocation(line: 135, column: 6, scope: !20276)
!20276 = distinct !DILexicalBlock(scope: !20212, file: !2192, line: 135, column: 6)
!20277 = !DILocation(line: 135, column: 6, scope: !20212)
!20278 = !DILocation(line: 136, column: 3, scope: !20279)
!20279 = distinct !DILexicalBlock(scope: !20276, file: !2192, line: 135, column: 40)
!20280 = !DILocation(line: 189, column: 60, scope: !20251, inlinedAt: !20281)
!20281 = distinct !DILocation(line: 136, column: 3, scope: !20279)
!20282 = !DILocation(line: 190, column: 23, scope: !20251, inlinedAt: !20281)
!20283 = !DILocation(line: 192, column: 2, scope: !20251, inlinedAt: !20281)
!20284 = !DILocation(line: 215, column: 22, scope: !20251, inlinedAt: !20281)
!20285 = !DILocation(line: 84, column: 56, scope: !20261, inlinedAt: !20286)
!20286 = distinct !DILocation(line: 215, column: 2, scope: !20251, inlinedAt: !20281)
!20287 = !DILocation(line: 87, column: 6, scope: !20265, inlinedAt: !20286)
!20288 = !DILocation(line: 87, column: 10, scope: !20265, inlinedAt: !20286)
!20289 = !DILocation(line: 87, column: 6, scope: !20261, inlinedAt: !20286)
!20290 = !DILocation(line: 88, column: 3, scope: !20269, inlinedAt: !20286)
!20291 = !DILocation(line: 90, column: 2, scope: !20261, inlinedAt: !20286)
!20292 = !DILocation(line: 110, column: 1, scope: !20261, inlinedAt: !20286)
!20293 = !DILocation(line: 137, column: 7, scope: !20279)
!20294 = !DILocation(line: 138, column: 3, scope: !20279)
!20295 = !DILocation(line: 141, column: 2, scope: !20212)
!20296 = !DILocation(line: 141, column: 2, scope: !20297)
!20297 = distinct !DILexicalBlock(scope: !20212, file: !2192, line: 141, column: 2)
!20298 = !DILocation(line: 143, column: 33, scope: !20212)
!20299 = !DILocation(line: 143, column: 38, scope: !20212)
!20300 = !DILocation(line: 143, column: 8, scope: !20212)
!20301 = !DILocation(line: 143, column: 6, scope: !20212)
!20302 = !DILocation(line: 143, column: 2, scope: !20212)
!20303 = !DILabel(scope: !20212, name: "out", file: !2192, line: 145)
!20304 = !DILocation(line: 145, column: 1, scope: !20212)
!20305 = !DILocation(line: 146, column: 2, scope: !20212)
!20306 = !DILocation(line: 146, column: 2, scope: !20307)
!20307 = distinct !DILexicalBlock(scope: !20212, file: !2192, line: 146, column: 2)
!20308 = !DILocation(line: 148, column: 9, scope: !20212)
!20309 = !DILocation(line: 148, column: 2, scope: !20212)
!20310 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2192, file: !2192, line: 151, type: !20055, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2173, retainedNodes: !223)
!20311 = !DILocalVariable(name: "sem", arg: 1, scope: !20310, file: !2192, line: 151, type: !19981)
!20312 = !DILocation(line: 151, column: 39, scope: !20310)
!20313 = !DILocalVariable(name: "thread", scope: !20310, file: !2192, line: 153, type: !20087)
!20314 = !DILocation(line: 153, column: 19, scope: !20310)
!20315 = !DILocalVariable(name: "key", scope: !20310, file: !2192, line: 154, type: !20060)
!20316 = !DILocation(line: 154, column: 19, scope: !20310)
!20317 = !DILocation(line: 136, column: 70, scope: !20066, inlinedAt: !20318)
!20318 = distinct !DILocation(line: 154, column: 25, scope: !20310)
!20319 = !DILocation(line: 138, column: 2, scope: !20066, inlinedAt: !20318)
!20320 = !DILocation(line: 139, column: 19, scope: !20066, inlinedAt: !20318)
!20321 = !DILocation(line: 44, column: 15, scope: !20076, inlinedAt: !20322)
!20322 = distinct !DILocation(line: 145, column: 10, scope: !20066, inlinedAt: !20318)
!20323 = !DILocation(line: 47, column: 2, scope: !20076, inlinedAt: !20322)
!20324 = !DILocation(line: 76, column: 9, scope: !20076, inlinedAt: !20322)
!20325 = !DILocation(line: 145, column: 4, scope: !20066, inlinedAt: !20318)
!20326 = !DILocation(line: 145, column: 8, scope: !20066, inlinedAt: !20318)
!20327 = !DILocation(line: 165, column: 2, scope: !20066, inlinedAt: !20318)
!20328 = !DILocation(line: 154, column: 25, scope: !20310)
!20329 = !DILocation(line: 156, column: 2, scope: !20310)
!20330 = !DILocation(line: 157, column: 35, scope: !20331)
!20331 = distinct !DILexicalBlock(scope: !20310, file: !2192, line: 156, column: 15)
!20332 = !DILocation(line: 157, column: 40, scope: !20331)
!20333 = !DILocation(line: 157, column: 12, scope: !20331)
!20334 = !DILocation(line: 157, column: 10, scope: !20331)
!20335 = !DILocation(line: 158, column: 7, scope: !20336)
!20336 = distinct !DILexicalBlock(scope: !20331, file: !2192, line: 158, column: 7)
!20337 = !DILocation(line: 158, column: 14, scope: !20336)
!20338 = !DILocation(line: 158, column: 7, scope: !20331)
!20339 = !DILocation(line: 159, column: 4, scope: !20340)
!20340 = distinct !DILexicalBlock(scope: !20336, file: !2192, line: 158, column: 23)
!20341 = !DILocation(line: 161, column: 32, scope: !20331)
!20342 = !DILocation(line: 65, column: 47, scope: !20175, inlinedAt: !20343)
!20343 = distinct !DILocation(line: 161, column: 3, scope: !20331)
!20344 = !DILocation(line: 65, column: 68, scope: !20175, inlinedAt: !20343)
!20345 = !DILocation(line: 67, column: 35, scope: !20175, inlinedAt: !20343)
!20346 = !DILocation(line: 67, column: 2, scope: !20175, inlinedAt: !20343)
!20347 = !DILocation(line: 67, column: 10, scope: !20175, inlinedAt: !20343)
!20348 = !DILocation(line: 67, column: 15, scope: !20175, inlinedAt: !20343)
!20349 = !DILocation(line: 67, column: 33, scope: !20175, inlinedAt: !20343)
!20350 = !DILocation(line: 162, column: 18, scope: !20331)
!20351 = !DILocation(line: 162, column: 3, scope: !20331)
!20352 = distinct !{!20352, !20329, !20353}
!20353 = !DILocation(line: 163, column: 2, scope: !20310)
!20354 = !DILocation(line: 164, column: 2, scope: !20310)
!20355 = !DILocation(line: 164, column: 7, scope: !20310)
!20356 = !DILocation(line: 164, column: 13, scope: !20310)
!20357 = !DILocation(line: 166, column: 2, scope: !20310)
!20358 = !DILocation(line: 166, column: 2, scope: !20359)
!20359 = distinct !DILexicalBlock(scope: !20310, file: !2192, line: 166, column: 2)
!20360 = !DILocation(line: 168, column: 21, scope: !20310)
!20361 = !DILocation(line: 168, column: 2, scope: !20310)
!20362 = !DILocation(line: 170, column: 2, scope: !20310)
!20363 = !DILocation(line: 171, column: 1, scope: !20310)
!20364 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2307, file: !2307, line: 93, type: !20365, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20365 = !DISubroutineType(types: !20366)
!20366 = !{!250, !2208, !2208}
!20367 = !DILocalVariable(name: "thread_1", arg: 1, scope: !20364, file: !2307, line: 93, type: !2208)
!20368 = !DILocation(line: 93, column: 43, scope: !20364)
!20369 = !DILocalVariable(name: "thread_2", arg: 2, scope: !20364, file: !2307, line: 94, type: !2208)
!20370 = !DILocation(line: 94, column: 19, scope: !20364)
!20371 = !DILocalVariable(name: "b1", scope: !20364, file: !2307, line: 97, type: !250)
!20372 = !DILocation(line: 97, column: 10, scope: !20364)
!20373 = !DILocation(line: 97, column: 15, scope: !20364)
!20374 = !DILocation(line: 97, column: 25, scope: !20364)
!20375 = !DILocation(line: 97, column: 30, scope: !20364)
!20376 = !DILocalVariable(name: "b2", scope: !20364, file: !2307, line: 98, type: !250)
!20377 = !DILocation(line: 98, column: 10, scope: !20364)
!20378 = !DILocation(line: 98, column: 15, scope: !20364)
!20379 = !DILocation(line: 98, column: 25, scope: !20364)
!20380 = !DILocation(line: 98, column: 30, scope: !20364)
!20381 = !DILocation(line: 100, column: 6, scope: !20382)
!20382 = distinct !DILexicalBlock(scope: !20364, file: !2307, line: 100, column: 6)
!20383 = !DILocation(line: 100, column: 12, scope: !20382)
!20384 = !DILocation(line: 100, column: 9, scope: !20382)
!20385 = !DILocation(line: 100, column: 6, scope: !20364)
!20386 = !DILocation(line: 101, column: 10, scope: !20387)
!20387 = distinct !DILexicalBlock(scope: !20382, file: !2307, line: 100, column: 16)
!20388 = !DILocation(line: 101, column: 15, scope: !20387)
!20389 = !DILocation(line: 101, column: 13, scope: !20387)
!20390 = !DILocation(line: 101, column: 3, scope: !20387)
!20391 = !DILocation(line: 124, column: 2, scope: !20364)
!20392 = !DILocation(line: 125, column: 1, scope: !20364)
!20393 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2307, file: !2307, line: 428, type: !20394, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20394 = !DISubroutineType(types: !20395)
!20395 = !{null, !2208}
!20396 = !DILocalVariable(name: "curr", arg: 1, scope: !20393, file: !2307, line: 428, type: !2208)
!20397 = !DILocation(line: 428, column: 42, scope: !20393)
!20398 = !DILocation(line: 434, column: 17, scope: !20399)
!20399 = distinct !DILexicalBlock(scope: !20393, file: !2307, line: 434, column: 6)
!20400 = !DILocation(line: 434, column: 6, scope: !20399)
!20401 = !DILocation(line: 434, column: 23, scope: !20399)
!20402 = !DILocation(line: 434, column: 6, scope: !20393)
!20403 = !DILocation(line: 435, column: 42, scope: !20404)
!20404 = distinct !DILexicalBlock(scope: !20399, file: !2307, line: 434, column: 29)
!20405 = !DILocation(line: 435, column: 31, scope: !20404)
!20406 = !DILocation(line: 435, column: 50, scope: !20404)
!20407 = !DILocation(line: 435, column: 48, scope: !20404)
!20408 = !DILocation(line: 435, column: 29, scope: !20404)
!20409 = !DILocation(line: 436, column: 35, scope: !20404)
!20410 = !DILocation(line: 436, column: 24, scope: !20404)
!20411 = !DILocation(line: 436, column: 3, scope: !20404)
!20412 = !DILocation(line: 437, column: 2, scope: !20404)
!20413 = !DILocation(line: 438, column: 1, scope: !20393)
!20414 = distinct !DISubprogram(name: "slice_time", scope: !2307, file: !2307, line: 407, type: !20415, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20415 = !DISubroutineType(types: !20416)
!20416 = !{!103, !2208}
!20417 = !DILocalVariable(name: "curr", arg: 1, scope: !20414, file: !2307, line: 407, type: !2208)
!20418 = !DILocation(line: 407, column: 47, scope: !20414)
!20419 = !DILocalVariable(name: "ret", scope: !20414, file: !2307, line: 409, type: !103)
!20420 = !DILocation(line: 409, column: 6, scope: !20414)
!20421 = !DILocation(line: 409, column: 12, scope: !20414)
!20422 = !DILocation(line: 416, column: 9, scope: !20414)
!20423 = !DILocation(line: 416, column: 2, scope: !20414)
!20424 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2307, file: !2307, line: 440, type: !20425, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20425 = !DISubroutineType(types: !20426)
!20426 = !{null, !250, !103}
!20427 = !DILocalVariable(name: "slice", arg: 1, scope: !20424, file: !2307, line: 440, type: !250)
!20428 = !DILocation(line: 440, column: 37, scope: !20424)
!20429 = !DILocalVariable(name: "prio", arg: 2, scope: !20424, file: !2307, line: 440, type: !103)
!20430 = !DILocation(line: 440, column: 48, scope: !20424)
!20431 = !DILocalVariable(name: "__i", scope: !20432, file: !2307, line: 442, type: !20433)
!20432 = distinct !DILexicalBlock(scope: !20424, file: !2307, line: 442, column: 2)
!20433 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !20434)
!20434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !20435)
!20435 = !{!20436}
!20436 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !20434, file: !222, line: 33, baseType: !103, size: 32)
!20437 = !DILocation(line: 442, column: 2, scope: !20432)
!20438 = !DILocalVariable(name: "__key", scope: !20432, file: !2307, line: 442, type: !20433)
!20439 = !DILocalVariable(name: "l", arg: 1, scope: !20440, file: !222, line: 136, type: !20443)
!20440 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !20441, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20441 = !DISubroutineType(types: !20442)
!20442 = !{!20433, !20443}
!20443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!20444 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !20445)
!20445 = distinct !DILocation(line: 442, column: 2, scope: !20432)
!20446 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !20445)
!20447 = !DILocalVariable(name: "k", scope: !20440, file: !222, line: 139, type: !20433)
!20448 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !20445)
!20449 = !DILocalVariable(name: "key", scope: !20450, file: !3614, line: 44, type: !32)
!20450 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20451 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !20452)
!20452 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !20445)
!20453 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !20452)
!20454 = !{i64 1486105}
!20455 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !20452)
!20456 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !20445)
!20457 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !20445)
!20458 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !20445)
!20459 = !DILocation(line: 442, column: 2, scope: !20460)
!20460 = distinct !DILexicalBlock(scope: !20432, file: !2307, line: 442, column: 2)
!20461 = !DILocation(line: 443, column: 29, scope: !20462)
!20462 = distinct !DILexicalBlock(scope: !20460, file: !2307, line: 442, column: 26)
!20463 = !DILocation(line: 444, column: 38, scope: !20462)
!20464 = !DILocation(line: 444, column: 17, scope: !20462)
!20465 = !DILocation(line: 444, column: 15, scope: !20462)
!20466 = !DILocation(line: 445, column: 45, scope: !20467)
!20467 = distinct !DILexicalBlock(scope: !20462, file: !2307, line: 445, column: 7)
!20468 = !DILocation(line: 445, column: 51, scope: !20467)
!20469 = !DILocation(line: 445, column: 7, scope: !20462)
!20470 = !DILocation(line: 449, column: 18, scope: !20471)
!20471 = distinct !DILexicalBlock(scope: !20467, file: !2307, line: 445, column: 56)
!20472 = !DILocation(line: 449, column: 16, scope: !20471)
!20473 = !DILocation(line: 450, column: 3, scope: !20471)
!20474 = !DILocation(line: 451, column: 20, scope: !20462)
!20475 = !DILocation(line: 451, column: 18, scope: !20462)
!20476 = !DILocation(line: 452, column: 22, scope: !20462)
!20477 = !DILocation(line: 452, column: 3, scope: !20462)
!20478 = !DILocation(line: 453, column: 2, scope: !20462)
!20479 = !DILocalVariable(name: "l", arg: 1, scope: !20480, file: !222, line: 189, type: !20443)
!20480 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !20481, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20481 = !DISubroutineType(types: !20482)
!20482 = !{null, !20443, !20433}
!20483 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !20484)
!20484 = distinct !DILocation(line: 442, column: 2, scope: !20460)
!20485 = !DILocalVariable(name: "key", arg: 2, scope: !20480, file: !222, line: 190, type: !20433)
!20486 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !20484)
!20487 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !20484)
!20488 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !20484)
!20489 = !DILocalVariable(name: "key", arg: 1, scope: !20490, file: !3614, line: 84, type: !32)
!20490 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20491 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !20492)
!20492 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !20484)
!20493 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !20492)
!20494 = distinct !DILexicalBlock(scope: !20490, file: !3614, line: 87, column: 6)
!20495 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !20492)
!20496 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !20492)
!20497 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !20492)
!20498 = distinct !DILexicalBlock(scope: !20494, file: !3614, line: 87, column: 17)
!20499 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !20492)
!20500 = !{i64 1486969}
!20501 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !20492)
!20502 = distinct !{!20502, !20437, !20503}
!20503 = !DILocation(line: 453, column: 2, scope: !20432)
!20504 = !DILocation(line: 454, column: 1, scope: !20424)
!20505 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !7339, file: !7339, line: 389, type: !7340, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20506 = !DILocalVariable(name: "t", arg: 1, scope: !20505, file: !7339, line: 389, type: !173)
!20507 = !DILocation(line: 389, column: 69, scope: !20505)
!20508 = !DILocation(line: 392, column: 17, scope: !20505)
!20509 = !DILocalVariable(name: "t", arg: 1, scope: !20510, file: !7339, line: 102, type: !312)
!20510 = distinct !DISubprogram(name: "z_tmcvt", scope: !7339, file: !7339, line: 102, type: !7347, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20511 = !DILocation(line: 102, column: 63, scope: !20510, inlinedAt: !20512)
!20512 = distinct !DILocation(line: 392, column: 9, scope: !20505)
!20513 = !DILocalVariable(name: "from_hz", arg: 2, scope: !20510, file: !7339, line: 102, type: !173)
!20514 = !DILocation(line: 102, column: 75, scope: !20510, inlinedAt: !20512)
!20515 = !DILocalVariable(name: "to_hz", arg: 3, scope: !20510, file: !7339, line: 103, type: !173)
!20516 = !DILocation(line: 103, column: 18, scope: !20510, inlinedAt: !20512)
!20517 = !DILocalVariable(name: "const_hz", arg: 4, scope: !20510, file: !7339, line: 103, type: !717)
!20518 = !DILocation(line: 103, column: 30, scope: !20510, inlinedAt: !20512)
!20519 = !DILocalVariable(name: "result32", arg: 5, scope: !20510, file: !7339, line: 104, type: !717)
!20520 = !DILocation(line: 104, column: 14, scope: !20510, inlinedAt: !20512)
!20521 = !DILocalVariable(name: "round_up", arg: 6, scope: !20510, file: !7339, line: 104, type: !717)
!20522 = !DILocation(line: 104, column: 29, scope: !20510, inlinedAt: !20512)
!20523 = !DILocalVariable(name: "round_off", arg: 7, scope: !20510, file: !7339, line: 105, type: !717)
!20524 = !DILocation(line: 105, column: 14, scope: !20510, inlinedAt: !20512)
!20525 = !DILocalVariable(name: "mul_ratio", scope: !20510, file: !7339, line: 107, type: !717)
!20526 = !DILocation(line: 107, column: 7, scope: !20510, inlinedAt: !20512)
!20527 = !DILocation(line: 107, column: 19, scope: !20510, inlinedAt: !20512)
!20528 = !DILocation(line: 107, column: 28, scope: !20510, inlinedAt: !20512)
!20529 = !DILocation(line: 108, column: 4, scope: !20510, inlinedAt: !20512)
!20530 = !DILocation(line: 108, column: 12, scope: !20510, inlinedAt: !20512)
!20531 = !DILocation(line: 108, column: 10, scope: !20510, inlinedAt: !20512)
!20532 = !DILocation(line: 108, column: 21, scope: !20510, inlinedAt: !20512)
!20533 = !DILocation(line: 108, column: 26, scope: !20510, inlinedAt: !20512)
!20534 = !DILocation(line: 108, column: 34, scope: !20510, inlinedAt: !20512)
!20535 = !DILocation(line: 108, column: 32, scope: !20510, inlinedAt: !20512)
!20536 = !DILocation(line: 108, column: 43, scope: !20510, inlinedAt: !20512)
!20537 = !DILocation(line: 0, scope: !20510, inlinedAt: !20512)
!20538 = !DILocalVariable(name: "div_ratio", scope: !20510, file: !7339, line: 109, type: !717)
!20539 = !DILocation(line: 109, column: 7, scope: !20510, inlinedAt: !20512)
!20540 = !DILocation(line: 109, column: 19, scope: !20510, inlinedAt: !20512)
!20541 = !DILocation(line: 109, column: 28, scope: !20510, inlinedAt: !20512)
!20542 = !DILocation(line: 110, column: 4, scope: !20510, inlinedAt: !20512)
!20543 = !DILocation(line: 110, column: 14, scope: !20510, inlinedAt: !20512)
!20544 = !DILocation(line: 110, column: 12, scope: !20510, inlinedAt: !20512)
!20545 = !DILocation(line: 110, column: 21, scope: !20510, inlinedAt: !20512)
!20546 = !DILocation(line: 110, column: 26, scope: !20510, inlinedAt: !20512)
!20547 = !DILocation(line: 110, column: 36, scope: !20510, inlinedAt: !20512)
!20548 = !DILocation(line: 110, column: 34, scope: !20510, inlinedAt: !20512)
!20549 = !DILocation(line: 110, column: 43, scope: !20510, inlinedAt: !20512)
!20550 = !DILocation(line: 112, column: 6, scope: !20551, inlinedAt: !20512)
!20551 = distinct !DILexicalBlock(scope: !20510, file: !7339, line: 112, column: 6)
!20552 = !DILocation(line: 112, column: 17, scope: !20551, inlinedAt: !20512)
!20553 = !DILocation(line: 112, column: 14, scope: !20551, inlinedAt: !20512)
!20554 = !DILocation(line: 112, column: 6, scope: !20510, inlinedAt: !20512)
!20555 = !DILocation(line: 113, column: 10, scope: !20556, inlinedAt: !20512)
!20556 = distinct !DILexicalBlock(scope: !20551, file: !7339, line: 112, column: 24)
!20557 = !DILocation(line: 113, column: 32, scope: !20556, inlinedAt: !20512)
!20558 = !DILocation(line: 113, column: 22, scope: !20556, inlinedAt: !20512)
!20559 = !DILocation(line: 113, column: 21, scope: !20556, inlinedAt: !20512)
!20560 = !DILocation(line: 113, column: 37, scope: !20556, inlinedAt: !20512)
!20561 = !DILocation(line: 113, column: 3, scope: !20556, inlinedAt: !20512)
!20562 = !DILocalVariable(name: "off", scope: !20510, file: !7339, line: 116, type: !312)
!20563 = !DILocation(line: 116, column: 11, scope: !20510, inlinedAt: !20512)
!20564 = !DILocation(line: 118, column: 7, scope: !20565, inlinedAt: !20512)
!20565 = distinct !DILexicalBlock(scope: !20510, file: !7339, line: 118, column: 6)
!20566 = !DILocation(line: 118, column: 6, scope: !20510, inlinedAt: !20512)
!20567 = !DILocalVariable(name: "rdivisor", scope: !20568, file: !7339, line: 119, type: !173)
!20568 = distinct !DILexicalBlock(scope: !20565, file: !7339, line: 118, column: 18)
!20569 = !DILocation(line: 119, column: 12, scope: !20568, inlinedAt: !20512)
!20570 = !DILocation(line: 119, column: 23, scope: !20568, inlinedAt: !20512)
!20571 = !DILocation(line: 119, column: 36, scope: !20568, inlinedAt: !20512)
!20572 = !DILocation(line: 119, column: 46, scope: !20568, inlinedAt: !20512)
!20573 = !DILocation(line: 119, column: 44, scope: !20568, inlinedAt: !20512)
!20574 = !DILocation(line: 119, column: 55, scope: !20568, inlinedAt: !20512)
!20575 = !DILocation(line: 121, column: 7, scope: !20576, inlinedAt: !20512)
!20576 = distinct !DILexicalBlock(scope: !20568, file: !7339, line: 121, column: 7)
!20577 = !DILocation(line: 121, column: 7, scope: !20568, inlinedAt: !20512)
!20578 = !DILocation(line: 122, column: 10, scope: !20579, inlinedAt: !20512)
!20579 = distinct !DILexicalBlock(scope: !20576, file: !7339, line: 121, column: 17)
!20580 = !DILocation(line: 122, column: 19, scope: !20579, inlinedAt: !20512)
!20581 = !DILocation(line: 122, column: 8, scope: !20579, inlinedAt: !20512)
!20582 = !DILocation(line: 123, column: 3, scope: !20579, inlinedAt: !20512)
!20583 = !DILocation(line: 124, column: 7, scope: !20584, inlinedAt: !20512)
!20584 = distinct !DILexicalBlock(scope: !20568, file: !7339, line: 124, column: 7)
!20585 = !DILocation(line: 124, column: 7, scope: !20568, inlinedAt: !20512)
!20586 = !DILocation(line: 125, column: 10, scope: !20587, inlinedAt: !20512)
!20587 = distinct !DILexicalBlock(scope: !20584, file: !7339, line: 124, column: 18)
!20588 = !DILocation(line: 125, column: 19, scope: !20587, inlinedAt: !20512)
!20589 = !DILocation(line: 125, column: 8, scope: !20587, inlinedAt: !20512)
!20590 = !DILocation(line: 126, column: 3, scope: !20587, inlinedAt: !20512)
!20591 = !DILocation(line: 127, column: 2, scope: !20568, inlinedAt: !20512)
!20592 = !DILocation(line: 134, column: 6, scope: !20593, inlinedAt: !20512)
!20593 = distinct !DILexicalBlock(scope: !20510, file: !7339, line: 134, column: 6)
!20594 = !DILocation(line: 134, column: 6, scope: !20510, inlinedAt: !20512)
!20595 = !DILocation(line: 135, column: 8, scope: !20596, inlinedAt: !20512)
!20596 = distinct !DILexicalBlock(scope: !20593, file: !7339, line: 134, column: 17)
!20597 = !DILocation(line: 135, column: 5, scope: !20596, inlinedAt: !20512)
!20598 = !DILocation(line: 136, column: 7, scope: !20599, inlinedAt: !20512)
!20599 = distinct !DILexicalBlock(scope: !20596, file: !7339, line: 136, column: 7)
!20600 = !DILocation(line: 136, column: 16, scope: !20599, inlinedAt: !20512)
!20601 = !DILocation(line: 136, column: 20, scope: !20599, inlinedAt: !20512)
!20602 = !DILocation(line: 136, column: 22, scope: !20599, inlinedAt: !20512)
!20603 = !DILocation(line: 136, column: 7, scope: !20596, inlinedAt: !20512)
!20604 = !DILocation(line: 137, column: 22, scope: !20605, inlinedAt: !20512)
!20605 = distinct !DILexicalBlock(scope: !20599, file: !7339, line: 136, column: 36)
!20606 = !DILocation(line: 137, column: 12, scope: !20605, inlinedAt: !20512)
!20607 = !DILocation(line: 137, column: 28, scope: !20605, inlinedAt: !20512)
!20608 = !DILocation(line: 137, column: 38, scope: !20605, inlinedAt: !20512)
!20609 = !DILocation(line: 137, column: 36, scope: !20605, inlinedAt: !20512)
!20610 = !DILocation(line: 137, column: 25, scope: !20605, inlinedAt: !20512)
!20611 = !DILocation(line: 137, column: 11, scope: !20605, inlinedAt: !20512)
!20612 = !DILocation(line: 137, column: 4, scope: !20605, inlinedAt: !20512)
!20613 = !DILocation(line: 139, column: 11, scope: !20614, inlinedAt: !20512)
!20614 = distinct !DILexicalBlock(scope: !20599, file: !7339, line: 138, column: 10)
!20615 = !DILocation(line: 139, column: 26, scope: !20614, inlinedAt: !20512)
!20616 = !DILocation(line: 139, column: 16, scope: !20614, inlinedAt: !20512)
!20617 = !DILocation(line: 139, column: 36, scope: !20614, inlinedAt: !20512)
!20618 = !DILocation(line: 139, column: 34, scope: !20614, inlinedAt: !20512)
!20619 = !DILocation(line: 139, column: 13, scope: !20614, inlinedAt: !20512)
!20620 = !DILocation(line: 139, column: 4, scope: !20614, inlinedAt: !20512)
!20621 = !DILocation(line: 141, column: 13, scope: !20622, inlinedAt: !20512)
!20622 = distinct !DILexicalBlock(scope: !20593, file: !7339, line: 141, column: 13)
!20623 = !DILocation(line: 141, column: 13, scope: !20593, inlinedAt: !20512)
!20624 = !DILocation(line: 142, column: 7, scope: !20625, inlinedAt: !20512)
!20625 = distinct !DILexicalBlock(scope: !20626, file: !7339, line: 142, column: 7)
!20626 = distinct !DILexicalBlock(scope: !20622, file: !7339, line: 141, column: 24)
!20627 = !DILocation(line: 142, column: 7, scope: !20626, inlinedAt: !20512)
!20628 = !DILocation(line: 143, column: 22, scope: !20629, inlinedAt: !20512)
!20629 = distinct !DILexicalBlock(scope: !20625, file: !7339, line: 142, column: 17)
!20630 = !DILocation(line: 143, column: 12, scope: !20629, inlinedAt: !20512)
!20631 = !DILocation(line: 143, column: 28, scope: !20629, inlinedAt: !20512)
!20632 = !DILocation(line: 143, column: 36, scope: !20629, inlinedAt: !20512)
!20633 = !DILocation(line: 143, column: 34, scope: !20629, inlinedAt: !20512)
!20634 = !DILocation(line: 143, column: 25, scope: !20629, inlinedAt: !20512)
!20635 = !DILocation(line: 143, column: 11, scope: !20629, inlinedAt: !20512)
!20636 = !DILocation(line: 143, column: 4, scope: !20629, inlinedAt: !20512)
!20637 = !DILocation(line: 145, column: 11, scope: !20638, inlinedAt: !20512)
!20638 = distinct !DILexicalBlock(scope: !20625, file: !7339, line: 144, column: 10)
!20639 = !DILocation(line: 145, column: 26, scope: !20638, inlinedAt: !20512)
!20640 = !DILocation(line: 145, column: 16, scope: !20638, inlinedAt: !20512)
!20641 = !DILocation(line: 145, column: 34, scope: !20638, inlinedAt: !20512)
!20642 = !DILocation(line: 145, column: 32, scope: !20638, inlinedAt: !20512)
!20643 = !DILocation(line: 145, column: 13, scope: !20638, inlinedAt: !20512)
!20644 = !DILocation(line: 145, column: 4, scope: !20638, inlinedAt: !20512)
!20645 = !DILocation(line: 148, column: 7, scope: !20646, inlinedAt: !20512)
!20646 = distinct !DILexicalBlock(scope: !20647, file: !7339, line: 148, column: 7)
!20647 = distinct !DILexicalBlock(scope: !20622, file: !7339, line: 147, column: 9)
!20648 = !DILocation(line: 148, column: 7, scope: !20647, inlinedAt: !20512)
!20649 = !DILocation(line: 149, column: 23, scope: !20650, inlinedAt: !20512)
!20650 = distinct !DILexicalBlock(scope: !20646, file: !7339, line: 148, column: 17)
!20651 = !DILocation(line: 149, column: 27, scope: !20650, inlinedAt: !20512)
!20652 = !DILocation(line: 149, column: 25, scope: !20650, inlinedAt: !20512)
!20653 = !DILocation(line: 149, column: 35, scope: !20650, inlinedAt: !20512)
!20654 = !DILocation(line: 149, column: 33, scope: !20650, inlinedAt: !20512)
!20655 = !DILocation(line: 149, column: 42, scope: !20650, inlinedAt: !20512)
!20656 = !DILocation(line: 149, column: 40, scope: !20650, inlinedAt: !20512)
!20657 = !DILocation(line: 149, column: 11, scope: !20650, inlinedAt: !20512)
!20658 = !DILocation(line: 149, column: 4, scope: !20650, inlinedAt: !20512)
!20659 = !DILocation(line: 150, column: 14, scope: !20660, inlinedAt: !20512)
!20660 = distinct !DILexicalBlock(scope: !20646, file: !7339, line: 150, column: 14)
!20661 = !DILocation(line: 150, column: 23, scope: !20660, inlinedAt: !20512)
!20662 = !DILocation(line: 150, column: 26, scope: !20660, inlinedAt: !20512)
!20663 = !DILocation(line: 150, column: 14, scope: !20646, inlinedAt: !20512)
!20664 = !DILocation(line: 156, column: 13, scope: !20665, inlinedAt: !20512)
!20665 = distinct !DILexicalBlock(scope: !20660, file: !7339, line: 150, column: 65)
!20666 = !DILocation(line: 156, column: 17, scope: !20665, inlinedAt: !20512)
!20667 = !DILocation(line: 156, column: 15, scope: !20665, inlinedAt: !20512)
!20668 = !DILocation(line: 156, column: 25, scope: !20665, inlinedAt: !20512)
!20669 = !DILocation(line: 156, column: 23, scope: !20665, inlinedAt: !20512)
!20670 = !DILocation(line: 156, column: 32, scope: !20665, inlinedAt: !20512)
!20671 = !DILocation(line: 156, column: 30, scope: !20665, inlinedAt: !20512)
!20672 = !DILocation(line: 156, column: 4, scope: !20665, inlinedAt: !20512)
!20673 = !DILocation(line: 161, column: 12, scope: !20674, inlinedAt: !20512)
!20674 = distinct !DILexicalBlock(scope: !20660, file: !7339, line: 157, column: 10)
!20675 = !DILocation(line: 161, column: 16, scope: !20674, inlinedAt: !20512)
!20676 = !DILocation(line: 161, column: 14, scope: !20674, inlinedAt: !20512)
!20677 = !DILocation(line: 161, column: 27, scope: !20674, inlinedAt: !20512)
!20678 = !DILocation(line: 161, column: 25, scope: !20674, inlinedAt: !20512)
!20679 = !DILocation(line: 161, column: 37, scope: !20674, inlinedAt: !20512)
!20680 = !DILocation(line: 161, column: 41, scope: !20674, inlinedAt: !20512)
!20681 = !DILocation(line: 161, column: 39, scope: !20674, inlinedAt: !20512)
!20682 = !DILocation(line: 161, column: 52, scope: !20674, inlinedAt: !20512)
!20683 = !DILocation(line: 161, column: 50, scope: !20674, inlinedAt: !20512)
!20684 = !DILocation(line: 161, column: 60, scope: !20674, inlinedAt: !20512)
!20685 = !DILocation(line: 161, column: 58, scope: !20674, inlinedAt: !20512)
!20686 = !DILocation(line: 161, column: 67, scope: !20674, inlinedAt: !20512)
!20687 = !DILocation(line: 161, column: 65, scope: !20674, inlinedAt: !20512)
!20688 = !DILocation(line: 161, column: 33, scope: !20674, inlinedAt: !20512)
!20689 = !DILocation(line: 161, column: 4, scope: !20674, inlinedAt: !20512)
!20690 = !DILocation(line: 164, column: 1, scope: !20510, inlinedAt: !20512)
!20691 = !DILocation(line: 392, column: 9, scope: !20505)
!20692 = !DILocation(line: 392, column: 2, scope: !20505)
!20693 = distinct !DISubprogram(name: "z_time_slice", scope: !2307, file: !2307, line: 502, type: !10531, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20694 = !DILocalVariable(name: "ticks", arg: 1, scope: !20693, file: !2307, line: 502, type: !103)
!20695 = !DILocation(line: 502, column: 23, scope: !20693)
!20696 = !DILocalVariable(name: "key", scope: !20693, file: !2307, line: 511, type: !20433)
!20697 = !DILocation(line: 511, column: 19, scope: !20693)
!20698 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !20699)
!20699 = distinct !DILocation(line: 511, column: 25, scope: !20693)
!20700 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !20699)
!20701 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !20699)
!20702 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !20703)
!20703 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !20699)
!20704 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !20703)
!20705 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !20703)
!20706 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !20699)
!20707 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !20699)
!20708 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !20699)
!20709 = !DILocation(line: 511, column: 25, scope: !20693)
!20710 = !DILocation(line: 514, column: 6, scope: !20711)
!20711 = distinct !DILexicalBlock(scope: !20693, file: !2307, line: 514, column: 6)
!20712 = !DILocation(line: 514, column: 25, scope: !20711)
!20713 = !DILocation(line: 514, column: 22, scope: !20711)
!20714 = !DILocation(line: 514, column: 6, scope: !20693)
!20715 = !DILocation(line: 515, column: 22, scope: !20716)
!20716 = distinct !DILexicalBlock(scope: !20711, file: !2307, line: 514, column: 35)
!20717 = !DILocation(line: 515, column: 3, scope: !20716)
!20718 = !DILocation(line: 516, column: 3, scope: !20716)
!20719 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !20720)
!20720 = distinct !DILocation(line: 516, column: 3, scope: !20716)
!20721 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !20720)
!20722 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !20720)
!20723 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !20720)
!20724 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !20725)
!20725 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !20720)
!20726 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !20725)
!20727 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !20725)
!20728 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !20725)
!20729 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !20725)
!20730 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !20725)
!20731 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !20725)
!20732 = !DILocation(line: 517, column: 3, scope: !20716)
!20733 = !DILocation(line: 519, column: 18, scope: !20693)
!20734 = !DILocation(line: 522, column: 17, scope: !20735)
!20735 = distinct !DILexicalBlock(scope: !20693, file: !2307, line: 522, column: 6)
!20736 = !DILocation(line: 522, column: 6, scope: !20735)
!20737 = !DILocation(line: 522, column: 27, scope: !20735)
!20738 = !DILocation(line: 522, column: 40, scope: !20735)
!20739 = !DILocation(line: 522, column: 30, scope: !20735)
!20740 = !DILocation(line: 522, column: 6, scope: !20693)
!20741 = !DILocation(line: 523, column: 7, scope: !20742)
!20742 = distinct !DILexicalBlock(scope: !20743, file: !2307, line: 523, column: 7)
!20743 = distinct !DILexicalBlock(scope: !20735, file: !2307, line: 522, column: 51)
!20744 = !DILocation(line: 523, column: 30, scope: !20742)
!20745 = !DILocation(line: 523, column: 13, scope: !20742)
!20746 = !DILocation(line: 523, column: 7, scope: !20743)
!20747 = !DILocation(line: 530, column: 10, scope: !20748)
!20748 = distinct !DILexicalBlock(scope: !20742, file: !2307, line: 523, column: 43)
!20749 = !DILocation(line: 531, column: 3, scope: !20748)
!20750 = !DILocation(line: 532, column: 33, scope: !20751)
!20751 = distinct !DILexicalBlock(scope: !20742, file: !2307, line: 531, column: 10)
!20752 = !DILocation(line: 532, column: 30, scope: !20751)
!20753 = !DILocation(line: 534, column: 2, scope: !20743)
!20754 = !DILocation(line: 535, column: 29, scope: !20755)
!20755 = distinct !DILexicalBlock(scope: !20735, file: !2307, line: 534, column: 9)
!20756 = !DILocation(line: 537, column: 2, scope: !20693)
!20757 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !20758)
!20758 = distinct !DILocation(line: 537, column: 2, scope: !20693)
!20759 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !20758)
!20760 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !20758)
!20761 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !20758)
!20762 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !20763)
!20763 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !20758)
!20764 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !20763)
!20765 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !20763)
!20766 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !20763)
!20767 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !20763)
!20768 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !20763)
!20769 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !20763)
!20770 = !DILocation(line: 538, column: 1, scope: !20693)
!20771 = distinct !DISubprogram(name: "sliceable", scope: !2307, file: !2307, line: 468, type: !20772, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20772 = !DISubroutineType(types: !20773)
!20773 = !{!717, !2208}
!20774 = !DILocalVariable(name: "thread", arg: 1, scope: !20771, file: !2307, line: 468, type: !2208)
!20775 = !DILocation(line: 468, column: 47, scope: !20771)
!20776 = !DILocalVariable(name: "ret", scope: !20771, file: !2307, line: 470, type: !717)
!20777 = !DILocation(line: 470, column: 7, scope: !20771)
!20778 = !DILocation(line: 470, column: 24, scope: !20771)
!20779 = !DILocation(line: 470, column: 13, scope: !20771)
!20780 = !DILocation(line: 471, column: 3, scope: !20771)
!20781 = !DILocation(line: 471, column: 42, scope: !20771)
!20782 = !DILocation(line: 471, column: 7, scope: !20771)
!20783 = !DILocation(line: 472, column: 3, scope: !20771)
!20784 = !DILocation(line: 472, column: 24, scope: !20771)
!20785 = !DILocation(line: 472, column: 32, scope: !20771)
!20786 = !DILocation(line: 472, column: 37, scope: !20771)
!20787 = !DILocation(line: 472, column: 43, scope: !20771)
!20788 = !DILocation(line: 472, column: 7, scope: !20771)
!20789 = !DILocation(line: 473, column: 3, scope: !20771)
!20790 = !DILocation(line: 473, column: 31, scope: !20771)
!20791 = !DILocation(line: 473, column: 7, scope: !20771)
!20792 = !DILocation(line: 473, column: 6, scope: !20771)
!20793 = !DILocation(line: 0, scope: !20771)
!20794 = !DILocation(line: 479, column: 9, scope: !20771)
!20795 = !DILocation(line: 479, column: 2, scope: !20771)
!20796 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2307, file: !2307, line: 482, type: !20797, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20797 = !DISubroutineType(types: !20798)
!20798 = !{!20433, !20433}
!20799 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !20796, file: !2307, line: 482, type: !20433)
!20800 = !DILocation(line: 482, column: 63, scope: !20796)
!20801 = !DILocalVariable(name: "curr", scope: !20796, file: !2307, line: 484, type: !2208)
!20802 = !DILocation(line: 484, column: 19, scope: !20796)
!20803 = !DILocation(line: 484, column: 26, scope: !20796)
!20804 = !DILocation(line: 493, column: 42, scope: !20805)
!20805 = distinct !DILexicalBlock(scope: !20796, file: !2307, line: 493, column: 6)
!20806 = !DILocation(line: 493, column: 7, scope: !20805)
!20807 = !DILocation(line: 493, column: 6, scope: !20796)
!20808 = !DILocation(line: 494, column: 32, scope: !20809)
!20809 = distinct !DILexicalBlock(scope: !20805, file: !2307, line: 493, column: 49)
!20810 = !DILocation(line: 494, column: 3, scope: !20809)
!20811 = !DILocation(line: 495, column: 2, scope: !20809)
!20812 = !DILocation(line: 496, column: 21, scope: !20796)
!20813 = !DILocation(line: 496, column: 2, scope: !20796)
!20814 = !DILocation(line: 498, column: 9, scope: !20796)
!20815 = !DILocation(line: 498, column: 2, scope: !20796)
!20816 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !18865, file: !18865, line: 106, type: !20772, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20817 = !DILocalVariable(name: "thread", arg: 1, scope: !20816, file: !18865, line: 106, type: !2208)
!20818 = !DILocation(line: 106, column: 72, scope: !20816)
!20819 = !DILocalVariable(name: "state", scope: !20816, file: !18865, line: 108, type: !156)
!20820 = !DILocation(line: 108, column: 10, scope: !20816)
!20821 = !DILocation(line: 108, column: 18, scope: !20816)
!20822 = !DILocation(line: 108, column: 26, scope: !20816)
!20823 = !DILocation(line: 108, column: 31, scope: !20816)
!20824 = !DILocation(line: 110, column: 10, scope: !20816)
!20825 = !DILocation(line: 110, column: 16, scope: !20816)
!20826 = !DILocation(line: 111, column: 41, scope: !20816)
!20827 = !DILocation(line: 110, column: 2, scope: !20816)
!20828 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2307, file: !2307, line: 393, type: !20394, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20829 = !DILocalVariable(name: "thread", arg: 1, scope: !20828, file: !2307, line: 393, type: !2208)
!20830 = !DILocation(line: 393, column: 59, scope: !20828)
!20831 = !DILocation(line: 395, column: 25, scope: !20832)
!20832 = distinct !DILexicalBlock(scope: !20828, file: !2307, line: 395, column: 6)
!20833 = !DILocation(line: 395, column: 6, scope: !20832)
!20834 = !DILocation(line: 395, column: 6, scope: !20828)
!20835 = !DILocation(line: 396, column: 18, scope: !20836)
!20836 = distinct !DILexicalBlock(scope: !20832, file: !2307, line: 395, column: 34)
!20837 = !DILocalVariable(name: "thread", arg: 1, scope: !20838, file: !2307, line: 264, type: !2208)
!20838 = distinct !DISubprogram(name: "dequeue_thread", scope: !2307, file: !2307, line: 264, type: !20394, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20839 = !DILocation(line: 264, column: 59, scope: !20838, inlinedAt: !20840)
!20840 = distinct !DILocation(line: 396, column: 3, scope: !20836)
!20841 = !DILocation(line: 266, column: 2, scope: !20838, inlinedAt: !20840)
!20842 = !DILocation(line: 266, column: 10, scope: !20838, inlinedAt: !20840)
!20843 = !DILocation(line: 266, column: 15, scope: !20838, inlinedAt: !20840)
!20844 = !DILocation(line: 266, column: 28, scope: !20838, inlinedAt: !20840)
!20845 = !DILocation(line: 267, column: 26, scope: !20846, inlinedAt: !20840)
!20846 = distinct !DILexicalBlock(scope: !20838, file: !2307, line: 267, column: 6)
!20847 = !DILocation(line: 267, column: 6, scope: !20846, inlinedAt: !20840)
!20848 = !DILocation(line: 267, column: 6, scope: !20838, inlinedAt: !20840)
!20849 = !DILocation(line: 268, column: 15, scope: !20850, inlinedAt: !20840)
!20850 = distinct !DILexicalBlock(scope: !20846, file: !2307, line: 267, column: 35)
!20851 = !DILocalVariable(name: "thread", arg: 1, scope: !20852, file: !2307, line: 232, type: !2208)
!20852 = distinct !DISubprogram(name: "runq_remove", scope: !2307, file: !2307, line: 232, type: !20394, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20853 = !DILocation(line: 232, column: 56, scope: !20852, inlinedAt: !20854)
!20854 = distinct !DILocation(line: 268, column: 3, scope: !20850, inlinedAt: !20840)
!20855 = !DILocation(line: 234, column: 31, scope: !20852, inlinedAt: !20854)
!20856 = !DILocalVariable(name: "thread", arg: 1, scope: !20857, file: !2307, line: 199, type: !2208)
!20857 = distinct !DISubprogram(name: "thread_runq", scope: !2307, file: !2307, line: 199, type: !20858, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20858 = !DISubroutineType(types: !20859)
!20859 = !{!102, !2208}
!20860 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !20861)
!20861 = distinct !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !20854)
!20862 = !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !20854)
!20863 = !DILocation(line: 234, column: 40, scope: !20852, inlinedAt: !20854)
!20864 = !DILocation(line: 234, column: 2, scope: !20852, inlinedAt: !20854)
!20865 = !DILocation(line: 269, column: 2, scope: !20850, inlinedAt: !20840)
!20866 = !DILocation(line: 397, column: 2, scope: !20836)
!20867 = !DILocation(line: 398, column: 15, scope: !20828)
!20868 = !DILocalVariable(name: "thread", arg: 1, scope: !20869, file: !2307, line: 250, type: !2208)
!20869 = distinct !DISubprogram(name: "queue_thread", scope: !2307, file: !2307, line: 250, type: !20394, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20870 = !DILocation(line: 250, column: 57, scope: !20869, inlinedAt: !20871)
!20871 = distinct !DILocation(line: 398, column: 2, scope: !20828)
!20872 = !DILocation(line: 252, column: 2, scope: !20869, inlinedAt: !20871)
!20873 = !DILocation(line: 252, column: 10, scope: !20869, inlinedAt: !20871)
!20874 = !DILocation(line: 252, column: 15, scope: !20869, inlinedAt: !20871)
!20875 = !DILocation(line: 252, column: 28, scope: !20869, inlinedAt: !20871)
!20876 = !DILocation(line: 253, column: 26, scope: !20877, inlinedAt: !20871)
!20877 = distinct !DILexicalBlock(scope: !20869, file: !2307, line: 253, column: 6)
!20878 = !DILocation(line: 253, column: 6, scope: !20877, inlinedAt: !20871)
!20879 = !DILocation(line: 253, column: 6, scope: !20869, inlinedAt: !20871)
!20880 = !DILocation(line: 254, column: 12, scope: !20881, inlinedAt: !20871)
!20881 = distinct !DILexicalBlock(scope: !20877, file: !2307, line: 253, column: 35)
!20882 = !DILocalVariable(name: "thread", arg: 1, scope: !20883, file: !2307, line: 227, type: !2208)
!20883 = distinct !DISubprogram(name: "runq_add", scope: !2307, file: !2307, line: 227, type: !20394, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20884 = !DILocation(line: 227, column: 53, scope: !20883, inlinedAt: !20885)
!20885 = distinct !DILocation(line: 254, column: 3, scope: !20881, inlinedAt: !20871)
!20886 = !DILocation(line: 229, column: 28, scope: !20883, inlinedAt: !20885)
!20887 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !20888)
!20888 = distinct !DILocation(line: 229, column: 16, scope: !20883, inlinedAt: !20885)
!20889 = !DILocation(line: 229, column: 37, scope: !20883, inlinedAt: !20885)
!20890 = !DILocalVariable(name: "pq", arg: 1, scope: !20891, file: !2307, line: 181, type: !20894)
!20891 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2307, file: !2307, line: 181, type: !20892, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20892 = !DISubroutineType(types: !20893)
!20893 = !{null, !20894, !2208}
!20894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!20895 = !DILocation(line: 181, column: 56, scope: !20891, inlinedAt: !20896)
!20896 = distinct !DILocation(line: 229, column: 2, scope: !20883, inlinedAt: !20885)
!20897 = !DILocalVariable(name: "thread", arg: 2, scope: !20891, file: !2307, line: 182, type: !2208)
!20898 = !DILocation(line: 182, column: 25, scope: !20891, inlinedAt: !20896)
!20899 = !DILocalVariable(name: "t", scope: !20891, file: !2307, line: 184, type: !2208)
!20900 = !DILocation(line: 184, column: 19, scope: !20891, inlinedAt: !20896)
!20901 = !DILocation(line: 188, column: 2, scope: !20902, inlinedAt: !20896)
!20902 = distinct !DILexicalBlock(scope: !20891, file: !2307, line: 188, column: 2)
!20903 = !DILocation(line: 188, column: 2, scope: !20904, inlinedAt: !20896)
!20904 = distinct !DILexicalBlock(scope: !20902, file: !2307, line: 188, column: 2)
!20905 = !DILocation(line: 189, column: 24, scope: !20906, inlinedAt: !20896)
!20906 = distinct !DILexicalBlock(scope: !20907, file: !2307, line: 189, column: 7)
!20907 = distinct !DILexicalBlock(scope: !20904, file: !2307, line: 188, column: 56)
!20908 = !DILocation(line: 189, column: 32, scope: !20906, inlinedAt: !20896)
!20909 = !DILocation(line: 189, column: 7, scope: !20906, inlinedAt: !20896)
!20910 = !DILocation(line: 189, column: 35, scope: !20906, inlinedAt: !20896)
!20911 = !DILocation(line: 189, column: 7, scope: !20907, inlinedAt: !20896)
!20912 = !DILocation(line: 190, column: 22, scope: !20913, inlinedAt: !20896)
!20913 = distinct !DILexicalBlock(scope: !20906, file: !2307, line: 189, column: 40)
!20914 = !DILocation(line: 190, column: 25, scope: !20913, inlinedAt: !20896)
!20915 = !DILocation(line: 190, column: 30, scope: !20913, inlinedAt: !20896)
!20916 = !DILocation(line: 191, column: 8, scope: !20913, inlinedAt: !20896)
!20917 = !DILocation(line: 191, column: 16, scope: !20913, inlinedAt: !20896)
!20918 = !DILocation(line: 191, column: 21, scope: !20913, inlinedAt: !20896)
!20919 = !DILocation(line: 190, column: 4, scope: !20913, inlinedAt: !20896)
!20920 = !DILocation(line: 192, column: 4, scope: !20913, inlinedAt: !20896)
!20921 = distinct !{!20921, !20901, !20922}
!20922 = !DILocation(line: 194, column: 2, scope: !20902, inlinedAt: !20896)
!20923 = !DILocation(line: 196, column: 19, scope: !20891, inlinedAt: !20896)
!20924 = !DILocation(line: 196, column: 24, scope: !20891, inlinedAt: !20896)
!20925 = !DILocation(line: 196, column: 32, scope: !20891, inlinedAt: !20896)
!20926 = !DILocation(line: 196, column: 37, scope: !20891, inlinedAt: !20896)
!20927 = !DILocation(line: 196, column: 2, scope: !20891, inlinedAt: !20896)
!20928 = !DILocation(line: 197, column: 1, scope: !20891, inlinedAt: !20896)
!20929 = !DILocation(line: 255, column: 2, scope: !20881, inlinedAt: !20871)
!20930 = !DILocation(line: 399, column: 15, scope: !20828)
!20931 = !DILocation(line: 399, column: 25, scope: !20828)
!20932 = !DILocation(line: 399, column: 22, scope: !20828)
!20933 = !DILocation(line: 399, column: 2, scope: !20828)
!20934 = !DILocation(line: 400, column: 1, scope: !20828)
!20935 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !18865, file: !18865, line: 136, type: !20772, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20936 = !DILocalVariable(name: "thread", arg: 1, scope: !20935, file: !18865, line: 136, type: !2208)
!20937 = !DILocation(line: 136, column: 56, scope: !20935)
!20938 = !DILocation(line: 138, column: 31, scope: !20935)
!20939 = !DILocation(line: 138, column: 9, scope: !20935)
!20940 = !DILocation(line: 138, column: 2, scope: !20935)
!20941 = distinct !DISubprogram(name: "should_queue_thread", scope: !2307, file: !2307, line: 245, type: !20772, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20942 = !DILocalVariable(name: "th", arg: 1, scope: !20941, file: !2307, line: 245, type: !2208)
!20943 = !DILocation(line: 245, column: 57, scope: !20941)
!20944 = !DILocation(line: 247, column: 2, scope: !20941)
!20945 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2307, file: !2307, line: 1137, type: !20892, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20946 = !DILocalVariable(name: "pq", arg: 1, scope: !20945, file: !2307, line: 1137, type: !20894)
!20947 = !DILocation(line: 1137, column: 38, scope: !20945)
!20948 = !DILocalVariable(name: "thread", arg: 2, scope: !20945, file: !2307, line: 1137, type: !2208)
!20949 = !DILocation(line: 1137, column: 59, scope: !20945)
!20950 = !DILocation(line: 1141, column: 20, scope: !20945)
!20951 = !DILocation(line: 1141, column: 28, scope: !20945)
!20952 = !DILocation(line: 1141, column: 33, scope: !20945)
!20953 = !DILocation(line: 1141, column: 2, scope: !20945)
!20954 = !DILocation(line: 1142, column: 1, scope: !20945)
!20955 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !20956, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20956 = !DISubroutineType(types: !20957)
!20957 = !{!2303, !20894}
!20958 = !DILocalVariable(name: "list", arg: 1, scope: !20955, file: !124, line: 294, type: !20894)
!20959 = !DILocation(line: 294, column: 61, scope: !20955)
!20960 = !DILocation(line: 296, column: 28, scope: !20955)
!20961 = !DILocation(line: 296, column: 9, scope: !20955)
!20962 = !DILocation(line: 296, column: 43, scope: !20955)
!20963 = !DILocation(line: 296, column: 49, scope: !20955)
!20964 = !DILocation(line: 296, column: 2, scope: !20955)
!20965 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !20966, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20966 = !DISubroutineType(types: !20967)
!20967 = !{null, !2303, !2303}
!20968 = !DILocalVariable(name: "successor", arg: 1, scope: !20965, file: !124, line: 443, type: !2303)
!20969 = !DILocation(line: 443, column: 50, scope: !20965)
!20970 = !DILocalVariable(name: "node", arg: 2, scope: !20965, file: !124, line: 443, type: !2303)
!20971 = !DILocation(line: 443, column: 74, scope: !20965)
!20972 = !DILocalVariable(name: "prev", scope: !20965, file: !124, line: 445, type: !20973)
!20973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2303)
!20974 = !DILocation(line: 445, column: 21, scope: !20965)
!20975 = !DILocation(line: 445, column: 28, scope: !20965)
!20976 = !DILocation(line: 445, column: 39, scope: !20965)
!20977 = !DILocation(line: 447, column: 15, scope: !20965)
!20978 = !DILocation(line: 447, column: 2, scope: !20965)
!20979 = !DILocation(line: 447, column: 8, scope: !20965)
!20980 = !DILocation(line: 447, column: 13, scope: !20965)
!20981 = !DILocation(line: 448, column: 15, scope: !20965)
!20982 = !DILocation(line: 448, column: 2, scope: !20965)
!20983 = !DILocation(line: 448, column: 8, scope: !20965)
!20984 = !DILocation(line: 448, column: 13, scope: !20965)
!20985 = !DILocation(line: 449, column: 15, scope: !20965)
!20986 = !DILocation(line: 449, column: 2, scope: !20965)
!20987 = !DILocation(line: 449, column: 8, scope: !20965)
!20988 = !DILocation(line: 449, column: 13, scope: !20965)
!20989 = !DILocation(line: 450, column: 20, scope: !20965)
!20990 = !DILocation(line: 450, column: 2, scope: !20965)
!20991 = !DILocation(line: 450, column: 13, scope: !20965)
!20992 = !DILocation(line: 450, column: 18, scope: !20965)
!20993 = !DILocation(line: 451, column: 1, scope: !20965)
!20994 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !20995, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!20995 = !DISubroutineType(types: !20996)
!20996 = !{!2303, !20894, !2303}
!20997 = !DILocalVariable(name: "list", arg: 1, scope: !20994, file: !124, line: 341, type: !20894)
!20998 = !DILocation(line: 341, column: 61, scope: !20994)
!20999 = !DILocalVariable(name: "node", arg: 2, scope: !20994, file: !124, line: 342, type: !2303)
!21000 = !DILocation(line: 342, column: 26, scope: !20994)
!21001 = !DILocation(line: 344, column: 10, scope: !20994)
!21002 = !DILocation(line: 344, column: 15, scope: !20994)
!21003 = !DILocation(line: 344, column: 9, scope: !20994)
!21004 = !DILocation(line: 344, column: 55, scope: !20994)
!21005 = !DILocation(line: 344, column: 61, scope: !20994)
!21006 = !DILocation(line: 344, column: 26, scope: !20994)
!21007 = !DILocation(line: 344, column: 2, scope: !20994)
!21008 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !21009, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21009 = !DISubroutineType(types: !21010)
!21010 = !{null, !20894, !2303}
!21011 = !DILocalVariable(name: "list", arg: 1, scope: !21008, file: !124, line: 404, type: !20894)
!21012 = !DILocation(line: 404, column: 50, scope: !21008)
!21013 = !DILocalVariable(name: "node", arg: 2, scope: !21008, file: !124, line: 404, type: !2303)
!21014 = !DILocation(line: 404, column: 69, scope: !21008)
!21015 = !DILocalVariable(name: "tail", scope: !21008, file: !124, line: 406, type: !20973)
!21016 = !DILocation(line: 406, column: 21, scope: !21008)
!21017 = !DILocation(line: 406, column: 28, scope: !21008)
!21018 = !DILocation(line: 406, column: 34, scope: !21008)
!21019 = !DILocation(line: 408, column: 15, scope: !21008)
!21020 = !DILocation(line: 408, column: 2, scope: !21008)
!21021 = !DILocation(line: 408, column: 8, scope: !21008)
!21022 = !DILocation(line: 408, column: 13, scope: !21008)
!21023 = !DILocation(line: 409, column: 15, scope: !21008)
!21024 = !DILocation(line: 409, column: 2, scope: !21008)
!21025 = !DILocation(line: 409, column: 8, scope: !21008)
!21026 = !DILocation(line: 409, column: 13, scope: !21008)
!21027 = !DILocation(line: 411, column: 15, scope: !21008)
!21028 = !DILocation(line: 411, column: 2, scope: !21008)
!21029 = !DILocation(line: 411, column: 8, scope: !21008)
!21030 = !DILocation(line: 411, column: 13, scope: !21008)
!21031 = !DILocation(line: 412, column: 15, scope: !21008)
!21032 = !DILocation(line: 412, column: 2, scope: !21008)
!21033 = !DILocation(line: 412, column: 8, scope: !21008)
!21034 = !DILocation(line: 412, column: 13, scope: !21008)
!21035 = !DILocation(line: 413, column: 1, scope: !21008)
!21036 = distinct !DISubprogram(name: "update_cache", scope: !2307, file: !2307, line: 559, type: !10531, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21037 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !21036, file: !2307, line: 559, type: !103)
!21038 = !DILocation(line: 559, column: 30, scope: !21036)
!21039 = !DILocalVariable(name: "thread", scope: !21036, file: !2307, line: 562, type: !2208)
!21040 = !DILocation(line: 562, column: 19, scope: !21036)
!21041 = !DILocalVariable(name: "thread", scope: !21042, file: !2307, line: 314, type: !2208)
!21042 = distinct !DISubprogram(name: "next_up", scope: !2307, file: !2307, line: 312, type: !21043, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21043 = !DISubroutineType(types: !21044)
!21044 = !{!2208}
!21045 = !DILocation(line: 314, column: 19, scope: !21042, inlinedAt: !21046)
!21046 = distinct !DILocation(line: 562, column: 28, scope: !21036)
!21047 = !DILocation(line: 239, column: 24, scope: !21048, inlinedAt: !21049)
!21048 = distinct !DISubprogram(name: "runq_best", scope: !2307, file: !2307, line: 237, type: !21043, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21049 = distinct !DILocation(line: 314, column: 28, scope: !21042, inlinedAt: !21046)
!21050 = !DILocation(line: 239, column: 9, scope: !21048, inlinedAt: !21049)
!21051 = !DILocation(line: 340, column: 10, scope: !21042, inlinedAt: !21046)
!21052 = !DILocation(line: 340, column: 17, scope: !21042, inlinedAt: !21046)
!21053 = !DILocation(line: 340, column: 9, scope: !21042, inlinedAt: !21046)
!21054 = !DILocation(line: 340, column: 28, scope: !21042, inlinedAt: !21046)
!21055 = !DILocation(line: 340, column: 51, scope: !21042, inlinedAt: !21046)
!21056 = !DILocation(line: 564, column: 21, scope: !21057)
!21057 = distinct !DILexicalBlock(scope: !21036, file: !2307, line: 564, column: 6)
!21058 = !DILocation(line: 564, column: 29, scope: !21057)
!21059 = !DILocalVariable(name: "thread", arg: 1, scope: !21060, file: !2307, line: 127, type: !2208)
!21060 = distinct !DISubprogram(name: "should_preempt", scope: !2307, file: !2307, line: 127, type: !21061, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21061 = !DISubroutineType(types: !21062)
!21062 = !{!717, !2208, !103}
!21063 = !DILocation(line: 127, column: 59, scope: !21060, inlinedAt: !21064)
!21064 = distinct !DILocation(line: 564, column: 6, scope: !21057)
!21065 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !21060, file: !2307, line: 128, type: !103)
!21066 = !DILocation(line: 128, column: 11, scope: !21060, inlinedAt: !21064)
!21067 = !DILocation(line: 133, column: 6, scope: !21068, inlinedAt: !21064)
!21068 = distinct !DILexicalBlock(scope: !21060, file: !2307, line: 133, column: 6)
!21069 = !DILocation(line: 133, column: 17, scope: !21068, inlinedAt: !21064)
!21070 = !DILocation(line: 133, column: 6, scope: !21060, inlinedAt: !21064)
!21071 = !DILocation(line: 134, column: 3, scope: !21072, inlinedAt: !21064)
!21072 = distinct !DILexicalBlock(scope: !21068, file: !2307, line: 133, column: 23)
!21073 = !DILocation(line: 140, column: 41, scope: !21074, inlinedAt: !21064)
!21074 = distinct !DILexicalBlock(scope: !21060, file: !2307, line: 140, column: 6)
!21075 = !DILocation(line: 140, column: 6, scope: !21074, inlinedAt: !21064)
!21076 = !DILocation(line: 140, column: 6, scope: !21060, inlinedAt: !21064)
!21077 = !DILocation(line: 141, column: 3, scope: !21078, inlinedAt: !21064)
!21078 = distinct !DILexicalBlock(scope: !21074, file: !2307, line: 140, column: 52)
!21079 = !DILocation(line: 150, column: 36, scope: !21080, inlinedAt: !21064)
!21080 = distinct !DILexicalBlock(scope: !21060, file: !2307, line: 149, column: 6)
!21081 = !DILocation(line: 150, column: 9, scope: !21080, inlinedAt: !21064)
!21082 = !DILocation(line: 149, column: 6, scope: !21060, inlinedAt: !21064)
!21083 = !DILocation(line: 151, column: 3, scope: !21084, inlinedAt: !21064)
!21084 = distinct !DILexicalBlock(scope: !21080, file: !2307, line: 150, column: 45)
!21085 = !DILocation(line: 157, column: 17, scope: !21086, inlinedAt: !21064)
!21086 = distinct !DILexicalBlock(scope: !21060, file: !2307, line: 157, column: 6)
!21087 = !DILocation(line: 157, column: 6, scope: !21086, inlinedAt: !21064)
!21088 = !DILocation(line: 157, column: 27, scope: !21086, inlinedAt: !21064)
!21089 = !DILocation(line: 157, column: 41, scope: !21086, inlinedAt: !21064)
!21090 = !DILocation(line: 157, column: 30, scope: !21086, inlinedAt: !21064)
!21091 = !DILocation(line: 157, column: 6, scope: !21060, inlinedAt: !21064)
!21092 = !DILocation(line: 158, column: 3, scope: !21093, inlinedAt: !21064)
!21093 = distinct !DILexicalBlock(scope: !21086, file: !2307, line: 157, column: 50)
!21094 = !DILocation(line: 161, column: 2, scope: !21060, inlinedAt: !21064)
!21095 = !DILocation(line: 162, column: 1, scope: !21060, inlinedAt: !21064)
!21096 = !DILocation(line: 564, column: 6, scope: !21036)
!21097 = !DILocation(line: 566, column: 7, scope: !21098)
!21098 = distinct !DILexicalBlock(scope: !21099, file: !2307, line: 566, column: 7)
!21099 = distinct !DILexicalBlock(scope: !21057, file: !2307, line: 564, column: 42)
!21100 = !DILocation(line: 566, column: 17, scope: !21098)
!21101 = !DILocation(line: 566, column: 14, scope: !21098)
!21102 = !DILocation(line: 566, column: 7, scope: !21099)
!21103 = !DILocation(line: 567, column: 23, scope: !21104)
!21104 = distinct !DILexicalBlock(scope: !21098, file: !2307, line: 566, column: 27)
!21105 = !DILocation(line: 567, column: 4, scope: !21104)
!21106 = !DILocation(line: 568, column: 3, scope: !21104)
!21107 = !DILocation(line: 570, column: 26, scope: !21099)
!21108 = !DILocation(line: 570, column: 3, scope: !21099)
!21109 = !DILocation(line: 571, column: 27, scope: !21099)
!21110 = !DILocation(line: 571, column: 25, scope: !21099)
!21111 = !DILocation(line: 572, column: 2, scope: !21099)
!21112 = !DILocation(line: 573, column: 27, scope: !21113)
!21113 = distinct !DILexicalBlock(scope: !21057, file: !2307, line: 572, column: 9)
!21114 = !DILocation(line: 573, column: 25, scope: !21113)
!21115 = !DILocation(line: 585, column: 1, scope: !21036)
!21116 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2307, file: !2307, line: 1144, type: !21117, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21117 = !DISubroutineType(types: !21118)
!21118 = !{!2208, !20894}
!21119 = !DILocalVariable(name: "pq", arg: 1, scope: !21116, file: !2307, line: 1144, type: !20894)
!21120 = !DILocation(line: 1144, column: 48, scope: !21116)
!21121 = !DILocalVariable(name: "thread", scope: !21116, file: !2307, line: 1146, type: !2208)
!21122 = !DILocation(line: 1146, column: 19, scope: !21116)
!21123 = !DILocalVariable(name: "n", scope: !21116, file: !2307, line: 1147, type: !2303)
!21124 = !DILocation(line: 1147, column: 15, scope: !21116)
!21125 = !DILocation(line: 1147, column: 39, scope: !21116)
!21126 = !DILocation(line: 1147, column: 19, scope: !21116)
!21127 = !DILocation(line: 1149, column: 6, scope: !21128)
!21128 = distinct !DILexicalBlock(scope: !21116, file: !2307, line: 1149, column: 6)
!21129 = !DILocation(line: 1149, column: 8, scope: !21128)
!21130 = !DILocation(line: 1149, column: 6, scope: !21116)
!21131 = !DILocation(line: 1150, column: 12, scope: !21132)
!21132 = distinct !DILexicalBlock(scope: !21128, file: !2307, line: 1149, column: 17)
!21133 = !DILocation(line: 1150, column: 10, scope: !21132)
!21134 = !DILocation(line: 1151, column: 2, scope: !21132)
!21135 = !DILocation(line: 1152, column: 9, scope: !21116)
!21136 = !DILocation(line: 1152, column: 2, scope: !21116)
!21137 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !18865, file: !18865, line: 115, type: !20772, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21138 = !DILocalVariable(name: "thread", arg: 1, scope: !21137, file: !18865, line: 115, type: !2208)
!21139 = !DILocation(line: 115, column: 64, scope: !21137)
!21140 = !DILocation(line: 117, column: 33, scope: !21137)
!21141 = !DILocation(line: 117, column: 41, scope: !21137)
!21142 = !DILocation(line: 117, column: 46, scope: !21137)
!21143 = !DILocation(line: 117, column: 10, scope: !21137)
!21144 = !DILocation(line: 117, column: 9, scope: !21137)
!21145 = !DILocation(line: 117, column: 2, scope: !21137)
!21146 = distinct !DISubprogram(name: "is_preempt", scope: !2307, file: !2307, line: 62, type: !20415, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21147 = !DILocalVariable(name: "thread", arg: 1, scope: !21146, file: !2307, line: 62, type: !2208)
!21148 = !DILocation(line: 62, column: 47, scope: !21146)
!21149 = !DILocation(line: 65, column: 9, scope: !21146)
!21150 = !DILocation(line: 65, column: 17, scope: !21146)
!21151 = !DILocation(line: 65, column: 22, scope: !21146)
!21152 = !DILocation(line: 65, column: 30, scope: !21146)
!21153 = !DILocation(line: 65, column: 2, scope: !21146)
!21154 = distinct !DISubprogram(name: "is_metairq", scope: !2307, file: !2307, line: 68, type: !20415, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21155 = !DILocalVariable(name: "thread", arg: 1, scope: !21154, file: !2307, line: 68, type: !2208)
!21156 = !DILocation(line: 68, column: 47, scope: !21154)
!21157 = !DILocation(line: 74, column: 2, scope: !21154)
!21158 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2307, file: !2307, line: 545, type: !20394, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21159 = !DILocalVariable(name: "thread", arg: 1, scope: !21158, file: !2307, line: 545, type: !2208)
!21160 = !DILocation(line: 545, column: 53, scope: !21158)
!21161 = !DILocation(line: 557, column: 1, scope: !21158)
!21162 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !19462, file: !19462, line: 35, type: !21163, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21163 = !DISubroutineType(types: !21164)
!21164 = !{!717, !21165}
!21165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21166, size: 32)
!21166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!21167 = !DILocalVariable(name: "to", arg: 1, scope: !21162, file: !19462, line: 35, type: !21165)
!21168 = !DILocation(line: 35, column: 65, scope: !21162)
!21169 = !DILocation(line: 37, column: 31, scope: !21162)
!21170 = !DILocation(line: 37, column: 35, scope: !21162)
!21171 = !DILocation(line: 37, column: 10, scope: !21162)
!21172 = !DILocation(line: 37, column: 9, scope: !21162)
!21173 = !DILocation(line: 37, column: 2, scope: !21162)
!21174 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !21175, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21175 = !DISubroutineType(types: !21176)
!21176 = !{!717, !21177}
!21177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21178, size: 32)
!21178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2218)
!21179 = !DILocalVariable(name: "node", arg: 1, scope: !21174, file: !124, line: 225, type: !21177)
!21180 = !DILocation(line: 225, column: 59, scope: !21174)
!21181 = !DILocation(line: 227, column: 9, scope: !21174)
!21182 = !DILocation(line: 227, column: 15, scope: !21174)
!21183 = !DILocation(line: 227, column: 20, scope: !21174)
!21184 = !DILocation(line: 227, column: 2, scope: !21174)
!21185 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !20995, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21186 = !DILocalVariable(name: "list", arg: 1, scope: !21185, file: !124, line: 325, type: !20894)
!21187 = !DILocation(line: 325, column: 70, scope: !21185)
!21188 = !DILocalVariable(name: "node", arg: 2, scope: !21185, file: !124, line: 326, type: !2303)
!21189 = !DILocation(line: 326, column: 21, scope: !21185)
!21190 = !DILocation(line: 328, column: 10, scope: !21185)
!21191 = !DILocation(line: 328, column: 18, scope: !21185)
!21192 = !DILocation(line: 328, column: 24, scope: !21185)
!21193 = !DILocation(line: 328, column: 15, scope: !21185)
!21194 = !DILocation(line: 328, column: 9, scope: !21185)
!21195 = !DILocation(line: 328, column: 39, scope: !21185)
!21196 = !DILocation(line: 328, column: 45, scope: !21185)
!21197 = !DILocation(line: 328, column: 2, scope: !21185)
!21198 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !21199, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21199 = !DISubroutineType(types: !21200)
!21200 = !{!717, !20894}
!21201 = !DILocalVariable(name: "list", arg: 1, scope: !21198, file: !124, line: 266, type: !20894)
!21202 = !DILocation(line: 266, column: 52, scope: !21198)
!21203 = !DILocation(line: 268, column: 9, scope: !21198)
!21204 = !DILocation(line: 268, column: 15, scope: !21198)
!21205 = !DILocation(line: 268, column: 23, scope: !21198)
!21206 = !DILocation(line: 268, column: 20, scope: !21198)
!21207 = !DILocation(line: 268, column: 2, scope: !21198)
!21208 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !21209, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21209 = !DISubroutineType(types: !21210)
!21210 = !{null, !2303}
!21211 = !DILocalVariable(name: "node", arg: 1, scope: !21208, file: !124, line: 496, type: !2303)
!21212 = !DILocation(line: 496, column: 50, scope: !21208)
!21213 = !DILocalVariable(name: "prev", scope: !21208, file: !124, line: 498, type: !20973)
!21214 = !DILocation(line: 498, column: 21, scope: !21208)
!21215 = !DILocation(line: 498, column: 28, scope: !21208)
!21216 = !DILocation(line: 498, column: 34, scope: !21208)
!21217 = !DILocalVariable(name: "next", scope: !21208, file: !124, line: 499, type: !20973)
!21218 = !DILocation(line: 499, column: 21, scope: !21208)
!21219 = !DILocation(line: 499, column: 28, scope: !21208)
!21220 = !DILocation(line: 499, column: 34, scope: !21208)
!21221 = !DILocation(line: 501, column: 15, scope: !21208)
!21222 = !DILocation(line: 501, column: 2, scope: !21208)
!21223 = !DILocation(line: 501, column: 8, scope: !21208)
!21224 = !DILocation(line: 501, column: 13, scope: !21208)
!21225 = !DILocation(line: 502, column: 15, scope: !21208)
!21226 = !DILocation(line: 502, column: 2, scope: !21208)
!21227 = !DILocation(line: 502, column: 8, scope: !21208)
!21228 = !DILocation(line: 502, column: 13, scope: !21208)
!21229 = !DILocation(line: 503, column: 17, scope: !21208)
!21230 = !DILocation(line: 503, column: 2, scope: !21208)
!21231 = !DILocation(line: 504, column: 1, scope: !21208)
!21232 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !21209, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21233 = !DILocalVariable(name: "node", arg: 1, scope: !21232, file: !124, line: 211, type: !2303)
!21234 = !DILocation(line: 211, column: 48, scope: !21232)
!21235 = !DILocation(line: 213, column: 2, scope: !21232)
!21236 = !DILocation(line: 213, column: 8, scope: !21232)
!21237 = !DILocation(line: 213, column: 13, scope: !21232)
!21238 = !DILocation(line: 214, column: 2, scope: !21232)
!21239 = !DILocation(line: 214, column: 8, scope: !21232)
!21240 = !DILocation(line: 214, column: 13, scope: !21232)
!21241 = !DILocation(line: 215, column: 1, scope: !21232)
!21242 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !18865, file: !18865, line: 131, type: !21243, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21243 = !DISubroutineType(types: !21244)
!21244 = !{!717, !2208, !173}
!21245 = !DILocalVariable(name: "thread", arg: 1, scope: !21242, file: !18865, line: 131, type: !2208)
!21246 = !DILocation(line: 131, column: 59, scope: !21242)
!21247 = !DILocalVariable(name: "state", arg: 2, scope: !21242, file: !18865, line: 131, type: !173)
!21248 = !DILocation(line: 131, column: 76, scope: !21242)
!21249 = !DILocation(line: 133, column: 10, scope: !21242)
!21250 = !DILocation(line: 133, column: 18, scope: !21242)
!21251 = !DILocation(line: 133, column: 23, scope: !21242)
!21252 = !DILocation(line: 133, column: 38, scope: !21242)
!21253 = !DILocation(line: 133, column: 36, scope: !21242)
!21254 = !DILocation(line: 133, column: 45, scope: !21242)
!21255 = !DILocation(line: 133, column: 2, scope: !21242)
!21256 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !18865, file: !18865, line: 211, type: !21257, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21257 = !DISubroutineType(types: !21258)
!21258 = !{!717, !103, !103}
!21259 = !DILocalVariable(name: "prio", arg: 1, scope: !21256, file: !18865, line: 211, type: !103)
!21260 = !DILocation(line: 211, column: 41, scope: !21256)
!21261 = !DILocalVariable(name: "test_prio", arg: 2, scope: !21256, file: !18865, line: 211, type: !103)
!21262 = !DILocation(line: 211, column: 51, scope: !21256)
!21263 = !DILocation(line: 213, column: 38, scope: !21256)
!21264 = !DILocation(line: 213, column: 44, scope: !21256)
!21265 = !DILocation(line: 213, column: 9, scope: !21256)
!21266 = !DILocation(line: 213, column: 2, scope: !21256)
!21267 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !18865, file: !18865, line: 83, type: !20772, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21268 = !DILocalVariable(name: "thread", arg: 1, scope: !21267, file: !18865, line: 83, type: !2208)
!21269 = !DILocation(line: 83, column: 61, scope: !21267)
!21270 = !DILocation(line: 89, column: 9, scope: !21267)
!21271 = !DILocation(line: 89, column: 16, scope: !21267)
!21272 = !DILocation(line: 89, column: 2, scope: !21267)
!21273 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !18865, file: !18865, line: 206, type: !21257, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21274 = !DILocalVariable(name: "prio1", arg: 1, scope: !21273, file: !18865, line: 206, type: !103)
!21275 = !DILocation(line: 206, column: 53, scope: !21273)
!21276 = !DILocalVariable(name: "prio2", arg: 2, scope: !21273, file: !18865, line: 206, type: !103)
!21277 = !DILocation(line: 206, column: 64, scope: !21273)
!21278 = !DILocation(line: 208, column: 9, scope: !21273)
!21279 = !DILocation(line: 208, column: 17, scope: !21273)
!21280 = !DILocation(line: 208, column: 15, scope: !21273)
!21281 = !DILocation(line: 208, column: 2, scope: !21273)
!21282 = distinct !DISubprogram(name: "z_ready_thread", scope: !2307, file: !2307, line: 635, type: !20394, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21283 = !DILocalVariable(name: "thread", arg: 1, scope: !21282, file: !2307, line: 635, type: !2208)
!21284 = !DILocation(line: 635, column: 38, scope: !21282)
!21285 = !DILocalVariable(name: "__i", scope: !21286, file: !2307, line: 637, type: !20433)
!21286 = distinct !DILexicalBlock(scope: !21282, file: !2307, line: 637, column: 2)
!21287 = !DILocation(line: 637, column: 2, scope: !21286)
!21288 = !DILocalVariable(name: "__key", scope: !21286, file: !2307, line: 637, type: !20433)
!21289 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !21290)
!21290 = distinct !DILocation(line: 637, column: 2, scope: !21286)
!21291 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !21290)
!21292 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !21290)
!21293 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21294)
!21294 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !21290)
!21295 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21294)
!21296 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21294)
!21297 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !21290)
!21298 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !21290)
!21299 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !21290)
!21300 = !DILocation(line: 637, column: 2, scope: !21301)
!21301 = distinct !DILexicalBlock(scope: !21286, file: !2307, line: 637, column: 2)
!21302 = !DILocation(line: 638, column: 32, scope: !21303)
!21303 = distinct !DILexicalBlock(scope: !21304, file: !2307, line: 638, column: 7)
!21304 = distinct !DILexicalBlock(scope: !21301, file: !2307, line: 637, column: 26)
!21305 = !DILocation(line: 638, column: 8, scope: !21303)
!21306 = !DILocation(line: 638, column: 7, scope: !21304)
!21307 = !DILocation(line: 639, column: 17, scope: !21308)
!21308 = distinct !DILexicalBlock(scope: !21303, file: !2307, line: 638, column: 41)
!21309 = !DILocation(line: 639, column: 4, scope: !21308)
!21310 = !DILocation(line: 640, column: 3, scope: !21308)
!21311 = !DILocation(line: 641, column: 2, scope: !21304)
!21312 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !21313)
!21313 = distinct !DILocation(line: 637, column: 2, scope: !21301)
!21314 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !21313)
!21315 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !21313)
!21316 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !21313)
!21317 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21318)
!21318 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !21313)
!21319 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21318)
!21320 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21318)
!21321 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21318)
!21322 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21318)
!21323 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21318)
!21324 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21318)
!21325 = distinct !{!21325, !21287, !21326}
!21326 = !DILocation(line: 641, column: 2, scope: !21286)
!21327 = !DILocation(line: 642, column: 1, scope: !21282)
!21328 = distinct !DISubprogram(name: "thread_active_elsewhere", scope: !2307, file: !2307, line: 587, type: !20772, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21329 = !DILocalVariable(name: "thread", arg: 1, scope: !21328, file: !2307, line: 587, type: !2208)
!21330 = !DILocation(line: 587, column: 54, scope: !21328)
!21331 = !DILocation(line: 605, column: 2, scope: !21328)
!21332 = distinct !DISubprogram(name: "ready_thread", scope: !2307, file: !2307, line: 617, type: !20394, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21333 = !DILocalVariable(name: "thread", arg: 1, scope: !21332, file: !2307, line: 617, type: !2208)
!21334 = !DILocation(line: 617, column: 43, scope: !21332)
!21335 = !DILocation(line: 626, column: 26, scope: !21336)
!21336 = distinct !DILexicalBlock(scope: !21332, file: !2307, line: 626, column: 6)
!21337 = !DILocation(line: 626, column: 7, scope: !21336)
!21338 = !DILocation(line: 626, column: 34, scope: !21336)
!21339 = !DILocation(line: 626, column: 55, scope: !21336)
!21340 = !DILocation(line: 626, column: 37, scope: !21336)
!21341 = !DILocation(line: 626, column: 6, scope: !21332)
!21342 = !DILocation(line: 627, column: 3, scope: !21343)
!21343 = distinct !DILexicalBlock(scope: !21336, file: !2307, line: 626, column: 64)
!21344 = !DILocation(line: 627, column: 3, scope: !21345)
!21345 = distinct !DILexicalBlock(scope: !21343, file: !2307, line: 627, column: 3)
!21346 = !DILocation(line: 629, column: 16, scope: !21343)
!21347 = !DILocation(line: 250, column: 57, scope: !20869, inlinedAt: !21348)
!21348 = distinct !DILocation(line: 629, column: 3, scope: !21343)
!21349 = !DILocation(line: 252, column: 2, scope: !20869, inlinedAt: !21348)
!21350 = !DILocation(line: 252, column: 10, scope: !20869, inlinedAt: !21348)
!21351 = !DILocation(line: 252, column: 15, scope: !20869, inlinedAt: !21348)
!21352 = !DILocation(line: 252, column: 28, scope: !20869, inlinedAt: !21348)
!21353 = !DILocation(line: 253, column: 26, scope: !20877, inlinedAt: !21348)
!21354 = !DILocation(line: 253, column: 6, scope: !20877, inlinedAt: !21348)
!21355 = !DILocation(line: 253, column: 6, scope: !20869, inlinedAt: !21348)
!21356 = !DILocation(line: 254, column: 12, scope: !20881, inlinedAt: !21348)
!21357 = !DILocation(line: 227, column: 53, scope: !20883, inlinedAt: !21358)
!21358 = distinct !DILocation(line: 254, column: 3, scope: !20881, inlinedAt: !21348)
!21359 = !DILocation(line: 229, column: 28, scope: !20883, inlinedAt: !21358)
!21360 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !21361)
!21361 = distinct !DILocation(line: 229, column: 16, scope: !20883, inlinedAt: !21358)
!21362 = !DILocation(line: 229, column: 37, scope: !20883, inlinedAt: !21358)
!21363 = !DILocation(line: 181, column: 56, scope: !20891, inlinedAt: !21364)
!21364 = distinct !DILocation(line: 229, column: 2, scope: !20883, inlinedAt: !21358)
!21365 = !DILocation(line: 182, column: 25, scope: !20891, inlinedAt: !21364)
!21366 = !DILocation(line: 184, column: 19, scope: !20891, inlinedAt: !21364)
!21367 = !DILocation(line: 188, column: 2, scope: !20902, inlinedAt: !21364)
!21368 = !DILocation(line: 188, column: 2, scope: !20904, inlinedAt: !21364)
!21369 = !DILocation(line: 189, column: 24, scope: !20906, inlinedAt: !21364)
!21370 = !DILocation(line: 189, column: 32, scope: !20906, inlinedAt: !21364)
!21371 = !DILocation(line: 189, column: 7, scope: !20906, inlinedAt: !21364)
!21372 = !DILocation(line: 189, column: 35, scope: !20906, inlinedAt: !21364)
!21373 = !DILocation(line: 189, column: 7, scope: !20907, inlinedAt: !21364)
!21374 = !DILocation(line: 190, column: 22, scope: !20913, inlinedAt: !21364)
!21375 = !DILocation(line: 190, column: 25, scope: !20913, inlinedAt: !21364)
!21376 = !DILocation(line: 190, column: 30, scope: !20913, inlinedAt: !21364)
!21377 = !DILocation(line: 191, column: 8, scope: !20913, inlinedAt: !21364)
!21378 = !DILocation(line: 191, column: 16, scope: !20913, inlinedAt: !21364)
!21379 = !DILocation(line: 191, column: 21, scope: !20913, inlinedAt: !21364)
!21380 = !DILocation(line: 190, column: 4, scope: !20913, inlinedAt: !21364)
!21381 = !DILocation(line: 192, column: 4, scope: !20913, inlinedAt: !21364)
!21382 = distinct !{!21382, !21367, !21383}
!21383 = !DILocation(line: 194, column: 2, scope: !20902, inlinedAt: !21364)
!21384 = !DILocation(line: 196, column: 19, scope: !20891, inlinedAt: !21364)
!21385 = !DILocation(line: 196, column: 24, scope: !20891, inlinedAt: !21364)
!21386 = !DILocation(line: 196, column: 32, scope: !20891, inlinedAt: !21364)
!21387 = !DILocation(line: 196, column: 37, scope: !20891, inlinedAt: !21364)
!21388 = !DILocation(line: 196, column: 2, scope: !20891, inlinedAt: !21364)
!21389 = !DILocation(line: 197, column: 1, scope: !20891, inlinedAt: !21364)
!21390 = !DILocation(line: 255, column: 2, scope: !20881, inlinedAt: !21348)
!21391 = !DILocation(line: 630, column: 3, scope: !21343)
!21392 = !DILocation(line: 631, column: 3, scope: !21343)
!21393 = !DILocation(line: 632, column: 2, scope: !21343)
!21394 = !DILocation(line: 633, column: 1, scope: !21332)
!21395 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !18865, file: !18865, line: 120, type: !20772, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21396 = !DILocalVariable(name: "thread", arg: 1, scope: !21395, file: !18865, line: 120, type: !2208)
!21397 = !DILocation(line: 120, column: 55, scope: !21395)
!21398 = !DILocation(line: 122, column: 47, scope: !21395)
!21399 = !DILocation(line: 122, column: 12, scope: !21395)
!21400 = !DILocation(line: 122, column: 11, scope: !21395)
!21401 = !DILocation(line: 122, column: 56, scope: !21395)
!21402 = !DILocation(line: 122, column: 62, scope: !21395)
!21403 = !DILocation(line: 123, column: 31, scope: !21395)
!21404 = !DILocation(line: 123, column: 4, scope: !21395)
!21405 = !DILocation(line: 122, column: 9, scope: !21395)
!21406 = !DILocation(line: 122, column: 2, scope: !21395)
!21407 = distinct !DISubprogram(name: "flag_ipi", scope: !2307, file: !2307, line: 608, type: !253, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21408 = !DILocation(line: 615, column: 1, scope: !21407)
!21409 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2307, file: !2307, line: 644, type: !20394, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21410 = !DILocalVariable(name: "thread", arg: 1, scope: !21409, file: !2307, line: 644, type: !2208)
!21411 = !DILocation(line: 644, column: 54, scope: !21409)
!21412 = !DILocalVariable(name: "__i", scope: !21413, file: !2307, line: 646, type: !20433)
!21413 = distinct !DILexicalBlock(scope: !21409, file: !2307, line: 646, column: 2)
!21414 = !DILocation(line: 646, column: 2, scope: !21413)
!21415 = !DILocalVariable(name: "__key", scope: !21413, file: !2307, line: 646, type: !20433)
!21416 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !21417)
!21417 = distinct !DILocation(line: 646, column: 2, scope: !21413)
!21418 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !21417)
!21419 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !21417)
!21420 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21421)
!21421 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !21417)
!21422 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21421)
!21423 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21421)
!21424 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !21417)
!21425 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !21417)
!21426 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !21417)
!21427 = !DILocation(line: 646, column: 2, scope: !21428)
!21428 = distinct !DILexicalBlock(scope: !21413, file: !2307, line: 646, column: 2)
!21429 = !DILocation(line: 647, column: 32, scope: !21430)
!21430 = distinct !DILexicalBlock(scope: !21428, file: !2307, line: 646, column: 26)
!21431 = !DILocation(line: 647, column: 3, scope: !21430)
!21432 = !DILocation(line: 648, column: 2, scope: !21430)
!21433 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !21434)
!21434 = distinct !DILocation(line: 646, column: 2, scope: !21428)
!21435 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !21434)
!21436 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !21434)
!21437 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !21434)
!21438 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21439)
!21439 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !21434)
!21440 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21439)
!21441 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21439)
!21442 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21439)
!21443 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21439)
!21444 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21439)
!21445 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21439)
!21446 = distinct !{!21446, !21414, !21447}
!21447 = !DILocation(line: 648, column: 2, scope: !21413)
!21448 = !DILocation(line: 649, column: 1, scope: !21409)
!21449 = distinct !DISubprogram(name: "z_sched_start", scope: !2307, file: !2307, line: 651, type: !20394, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21450 = !DILocalVariable(name: "thread", arg: 1, scope: !21449, file: !2307, line: 651, type: !2208)
!21451 = !DILocation(line: 651, column: 37, scope: !21449)
!21452 = !DILocalVariable(name: "key", scope: !21449, file: !2307, line: 653, type: !20433)
!21453 = !DILocation(line: 653, column: 19, scope: !21449)
!21454 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !21455)
!21455 = distinct !DILocation(line: 653, column: 25, scope: !21449)
!21456 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !21455)
!21457 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !21455)
!21458 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21459)
!21459 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !21455)
!21460 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21459)
!21461 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21459)
!21462 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !21455)
!21463 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !21455)
!21464 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !21455)
!21465 = !DILocation(line: 653, column: 25, scope: !21449)
!21466 = !DILocation(line: 655, column: 27, scope: !21467)
!21467 = distinct !DILexicalBlock(scope: !21449, file: !2307, line: 655, column: 6)
!21468 = !DILocation(line: 655, column: 6, scope: !21467)
!21469 = !DILocation(line: 655, column: 6, scope: !21449)
!21470 = !DILocation(line: 656, column: 3, scope: !21471)
!21471 = distinct !DILexicalBlock(scope: !21467, file: !2307, line: 655, column: 36)
!21472 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !21473)
!21473 = distinct !DILocation(line: 656, column: 3, scope: !21471)
!21474 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !21473)
!21475 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !21473)
!21476 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !21473)
!21477 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21478)
!21478 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !21473)
!21479 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21478)
!21480 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21478)
!21481 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21478)
!21482 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21478)
!21483 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21478)
!21484 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21478)
!21485 = !DILocation(line: 657, column: 3, scope: !21471)
!21486 = !DILocation(line: 660, column: 27, scope: !21449)
!21487 = !DILocation(line: 660, column: 2, scope: !21449)
!21488 = !DILocation(line: 661, column: 15, scope: !21449)
!21489 = !DILocation(line: 661, column: 2, scope: !21449)
!21490 = !DILocation(line: 662, column: 2, scope: !21449)
!21491 = !DILocation(line: 663, column: 1, scope: !21449)
!21492 = distinct !DISubprogram(name: "z_has_thread_started", scope: !18865, file: !18865, line: 126, type: !20772, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21493 = !DILocalVariable(name: "thread", arg: 1, scope: !21492, file: !18865, line: 126, type: !2208)
!21494 = !DILocation(line: 126, column: 58, scope: !21492)
!21495 = !DILocation(line: 128, column: 10, scope: !21492)
!21496 = !DILocation(line: 128, column: 18, scope: !21492)
!21497 = !DILocation(line: 128, column: 23, scope: !21492)
!21498 = !DILocation(line: 128, column: 36, scope: !21492)
!21499 = !DILocation(line: 128, column: 56, scope: !21492)
!21500 = !DILocation(line: 128, column: 2, scope: !21492)
!21501 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !18865, file: !18865, line: 155, type: !20394, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21502 = !DILocalVariable(name: "thread", arg: 1, scope: !21501, file: !18865, line: 155, type: !2208)
!21503 = !DILocation(line: 155, column: 62, scope: !21501)
!21504 = !DILocation(line: 157, column: 2, scope: !21501)
!21505 = !DILocation(line: 157, column: 10, scope: !21501)
!21506 = !DILocation(line: 157, column: 15, scope: !21501)
!21507 = !DILocation(line: 157, column: 28, scope: !21501)
!21508 = !DILocation(line: 158, column: 1, scope: !21501)
!21509 = distinct !DISubprogram(name: "z_reschedule", scope: !2307, file: !2307, line: 967, type: !20481, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21510 = !DILocalVariable(name: "lock", arg: 1, scope: !21509, file: !2307, line: 967, type: !20443)
!21511 = !DILocation(line: 967, column: 38, scope: !21509)
!21512 = !DILocalVariable(name: "key", arg: 2, scope: !21509, file: !2307, line: 967, type: !20433)
!21513 = !DILocation(line: 967, column: 61, scope: !21509)
!21514 = !DILocation(line: 969, column: 18, scope: !21515)
!21515 = distinct !DILexicalBlock(scope: !21509, file: !2307, line: 969, column: 6)
!21516 = !DILocation(line: 969, column: 6, scope: !21515)
!21517 = !DILocation(line: 969, column: 23, scope: !21515)
!21518 = !DILocation(line: 969, column: 26, scope: !21515)
!21519 = !DILocation(line: 969, column: 6, scope: !21509)
!21520 = !DILocation(line: 970, column: 10, scope: !21521)
!21521 = distinct !DILexicalBlock(scope: !21515, file: !2307, line: 969, column: 39)
!21522 = !DILocation(line: 970, column: 3, scope: !21521)
!21523 = !DILocalVariable(name: "lock", arg: 1, scope: !21524, file: !19029, line: 193, type: !20443)
!21524 = distinct !DISubprogram(name: "z_swap", scope: !19029, file: !19029, line: 193, type: !21525, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21525 = !DISubroutineType(types: !21526)
!21526 = !{!103, !20443, !20433}
!21527 = !DILocation(line: 193, column: 52, scope: !21524, inlinedAt: !21528)
!21528 = distinct !DILocation(line: 970, column: 3, scope: !21521)
!21529 = !DILocalVariable(name: "key", arg: 2, scope: !21524, file: !19029, line: 193, type: !20433)
!21530 = !DILocation(line: 193, column: 75, scope: !21524, inlinedAt: !21528)
!21531 = !DILocation(line: 195, column: 17, scope: !21524, inlinedAt: !21528)
!21532 = !DILocalVariable(name: "l", arg: 1, scope: !21533, file: !222, line: 221, type: !20443)
!21533 = distinct !DISubprogram(name: "k_spin_release", scope: !222, file: !222, line: 221, type: !21534, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21534 = !DISubroutineType(types: !21535)
!21535 = !{null, !20443}
!21536 = !DILocation(line: 221, column: 61, scope: !21533, inlinedAt: !21537)
!21537 = distinct !DILocation(line: 195, column: 2, scope: !21524, inlinedAt: !21528)
!21538 = !DILocation(line: 223, column: 2, scope: !21533, inlinedAt: !21537)
!21539 = !DILocation(line: 196, column: 28, scope: !21524, inlinedAt: !21528)
!21540 = !DILocation(line: 196, column: 9, scope: !21524, inlinedAt: !21528)
!21541 = !DILocation(line: 971, column: 2, scope: !21521)
!21542 = !DILocation(line: 972, column: 17, scope: !21543)
!21543 = distinct !DILexicalBlock(scope: !21515, file: !2307, line: 971, column: 9)
!21544 = !DILocation(line: 972, column: 3, scope: !21543)
!21545 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !21546)
!21546 = distinct !DILocation(line: 972, column: 3, scope: !21543)
!21547 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !21546)
!21548 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !21546)
!21549 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !21546)
!21550 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21551)
!21551 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !21546)
!21552 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21551)
!21553 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21551)
!21554 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21551)
!21555 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21551)
!21556 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21551)
!21557 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21551)
!21558 = !DILocation(line: 973, column: 3, scope: !21543)
!21559 = !DILocation(line: 975, column: 1, scope: !21509)
!21560 = distinct !DISubprogram(name: "resched", scope: !2307, file: !2307, line: 940, type: !14346, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21561 = !DILocalVariable(name: "key", arg: 1, scope: !21560, file: !2307, line: 940, type: !173)
!21562 = !DILocation(line: 940, column: 37, scope: !21560)
!21563 = !DILocation(line: 946, column: 27, scope: !21560)
!21564 = !DILocalVariable(name: "key", arg: 1, scope: !21565, file: !3614, line: 112, type: !32)
!21565 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !3614, file: !3614, line: 112, type: !21566, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21566 = !DISubroutineType(types: !21567)
!21567 = !{!717, !32}
!21568 = !DILocation(line: 112, column: 58, scope: !21565, inlinedAt: !21569)
!21569 = distinct !DILocation(line: 946, column: 9, scope: !21560)
!21570 = !DILocation(line: 115, column: 9, scope: !21565, inlinedAt: !21569)
!21571 = !DILocation(line: 115, column: 13, scope: !21565, inlinedAt: !21569)
!21572 = !DILocation(line: 946, column: 32, scope: !21560)
!21573 = !DILocalVariable(name: "result", scope: !21574, file: !8818, line: 1029, type: !173)
!21574 = distinct !DISubprogram(name: "__get_IPSR", scope: !8818, file: !8818, line: 1027, type: !9625, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21575 = !DILocation(line: 1029, column: 12, scope: !21574, inlinedAt: !21576)
!21576 = distinct !DILocation(line: 48, column: 10, scope: !21577, inlinedAt: !21578)
!21577 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9630, file: !9630, line: 46, type: !3163, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21578 = distinct !DILocation(line: 946, column: 36, scope: !21560)
!21579 = !DILocation(line: 1031, column: 3, scope: !21574, inlinedAt: !21576)
!21580 = !{i64 2511815}
!21581 = !DILocation(line: 1032, column: 10, scope: !21574, inlinedAt: !21576)
!21582 = !DILocation(line: 48, column: 9, scope: !21577, inlinedAt: !21578)
!21583 = !DILocation(line: 946, column: 35, scope: !21560)
!21584 = !DILocation(line: 0, scope: !21560)
!21585 = !DILocation(line: 946, column: 2, scope: !21560)
!21586 = distinct !DISubprogram(name: "need_swap", scope: !2307, file: !2307, line: 953, type: !3163, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21587 = !DILocalVariable(name: "new_thread", scope: !21586, file: !2307, line: 959, type: !2208)
!21588 = !DILocation(line: 959, column: 19, scope: !21586)
!21589 = !DILocation(line: 962, column: 31, scope: !21586)
!21590 = !DILocation(line: 962, column: 13, scope: !21586)
!21591 = !DILocation(line: 963, column: 9, scope: !21586)
!21592 = !DILocation(line: 963, column: 23, scope: !21586)
!21593 = !DILocation(line: 963, column: 20, scope: !21586)
!21594 = !DILocation(line: 963, column: 2, scope: !21586)
!21595 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !19029, file: !19029, line: 181, type: !8828, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21596 = !DILocalVariable(name: "key", arg: 1, scope: !21595, file: !19029, line: 181, type: !32)
!21597 = !DILocation(line: 181, column: 47, scope: !21595)
!21598 = !DILocalVariable(name: "ret", scope: !21595, file: !19029, line: 183, type: !103)
!21599 = !DILocation(line: 183, column: 6, scope: !21595)
!21600 = !DILocation(line: 185, column: 18, scope: !21595)
!21601 = !DILocation(line: 185, column: 8, scope: !21595)
!21602 = !DILocation(line: 185, column: 6, scope: !21595)
!21603 = !DILocation(line: 186, column: 9, scope: !21595)
!21604 = !DILocation(line: 186, column: 2, scope: !21595)
!21605 = distinct !DISubprogram(name: "signal_pending_ipi", scope: !2307, file: !2307, line: 272, type: !253, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21606 = !DILocation(line: 289, column: 1, scope: !21605)
!21607 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2307, file: !2307, line: 665, type: !20394, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21608 = !DILocalVariable(name: "thread", arg: 1, scope: !21607, file: !2307, line: 665, type: !2208)
!21609 = !DILocation(line: 665, column: 47, scope: !21607)
!21610 = !DILocation(line: 667, column: 2, scope: !21607)
!21611 = !DILocation(line: 667, column: 2, scope: !21612)
!21612 = distinct !DILexicalBlock(scope: !21607, file: !2307, line: 667, column: 2)
!21613 = !DILocation(line: 669, column: 31, scope: !21607)
!21614 = !DILocation(line: 669, column: 8, scope: !21607)
!21615 = !DILocalVariable(name: "__i", scope: !21616, file: !2307, line: 671, type: !20433)
!21616 = distinct !DILexicalBlock(scope: !21607, file: !2307, line: 671, column: 2)
!21617 = !DILocation(line: 671, column: 2, scope: !21616)
!21618 = !DILocalVariable(name: "__key", scope: !21616, file: !2307, line: 671, type: !20433)
!21619 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !21620)
!21620 = distinct !DILocation(line: 671, column: 2, scope: !21616)
!21621 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !21620)
!21622 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !21620)
!21623 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21624)
!21624 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !21620)
!21625 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21624)
!21626 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21624)
!21627 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !21620)
!21628 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !21620)
!21629 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !21620)
!21630 = !DILocation(line: 671, column: 2, scope: !21631)
!21631 = distinct !DILexicalBlock(scope: !21616, file: !2307, line: 671, column: 2)
!21632 = !DILocation(line: 672, column: 26, scope: !21633)
!21633 = distinct !DILexicalBlock(scope: !21634, file: !2307, line: 672, column: 7)
!21634 = distinct !DILexicalBlock(scope: !21631, file: !2307, line: 671, column: 26)
!21635 = !DILocation(line: 672, column: 7, scope: !21633)
!21636 = !DILocation(line: 672, column: 7, scope: !21634)
!21637 = !DILocation(line: 673, column: 19, scope: !21638)
!21638 = distinct !DILexicalBlock(scope: !21633, file: !2307, line: 672, column: 35)
!21639 = !DILocation(line: 264, column: 59, scope: !20838, inlinedAt: !21640)
!21640 = distinct !DILocation(line: 673, column: 4, scope: !21638)
!21641 = !DILocation(line: 266, column: 2, scope: !20838, inlinedAt: !21640)
!21642 = !DILocation(line: 266, column: 10, scope: !20838, inlinedAt: !21640)
!21643 = !DILocation(line: 266, column: 15, scope: !20838, inlinedAt: !21640)
!21644 = !DILocation(line: 266, column: 28, scope: !20838, inlinedAt: !21640)
!21645 = !DILocation(line: 267, column: 26, scope: !20846, inlinedAt: !21640)
!21646 = !DILocation(line: 267, column: 6, scope: !20846, inlinedAt: !21640)
!21647 = !DILocation(line: 267, column: 6, scope: !20838, inlinedAt: !21640)
!21648 = !DILocation(line: 268, column: 15, scope: !20850, inlinedAt: !21640)
!21649 = !DILocation(line: 232, column: 56, scope: !20852, inlinedAt: !21650)
!21650 = distinct !DILocation(line: 268, column: 3, scope: !20850, inlinedAt: !21640)
!21651 = !DILocation(line: 234, column: 31, scope: !20852, inlinedAt: !21650)
!21652 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !21653)
!21653 = distinct !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !21650)
!21654 = !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !21650)
!21655 = !DILocation(line: 234, column: 40, scope: !20852, inlinedAt: !21650)
!21656 = !DILocation(line: 234, column: 2, scope: !20852, inlinedAt: !21650)
!21657 = !DILocation(line: 269, column: 2, scope: !20850, inlinedAt: !21640)
!21658 = !DILocation(line: 674, column: 3, scope: !21638)
!21659 = !DILocation(line: 675, column: 30, scope: !21634)
!21660 = !DILocation(line: 675, column: 3, scope: !21634)
!21661 = !DILocation(line: 676, column: 16, scope: !21634)
!21662 = !DILocation(line: 676, column: 26, scope: !21634)
!21663 = !DILocation(line: 676, column: 23, scope: !21634)
!21664 = !DILocation(line: 676, column: 3, scope: !21634)
!21665 = !DILocation(line: 677, column: 2, scope: !21634)
!21666 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !21667)
!21667 = distinct !DILocation(line: 671, column: 2, scope: !21631)
!21668 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !21667)
!21669 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !21667)
!21670 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !21667)
!21671 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21672)
!21672 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !21667)
!21673 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21672)
!21674 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21672)
!21675 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21672)
!21676 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21672)
!21677 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21672)
!21678 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21672)
!21679 = distinct !{!21679, !21617, !21680}
!21680 = !DILocation(line: 677, column: 2, scope: !21616)
!21681 = !DILocation(line: 679, column: 6, scope: !21682)
!21682 = distinct !DILexicalBlock(scope: !21607, file: !2307, line: 679, column: 6)
!21683 = !DILocation(line: 679, column: 16, scope: !21682)
!21684 = !DILocation(line: 679, column: 13, scope: !21682)
!21685 = !DILocation(line: 679, column: 6, scope: !21607)
!21686 = !DILocation(line: 680, column: 3, scope: !21687)
!21687 = distinct !DILexicalBlock(scope: !21682, file: !2307, line: 679, column: 26)
!21688 = !DILocation(line: 681, column: 2, scope: !21687)
!21689 = !DILocation(line: 683, column: 2, scope: !21607)
!21690 = !DILocation(line: 683, column: 2, scope: !21691)
!21691 = distinct !DILexicalBlock(scope: !21607, file: !2307, line: 683, column: 2)
!21692 = !DILocation(line: 684, column: 1, scope: !21607)
!21693 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !19462, file: !19462, line: 52, type: !20415, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21694 = !DILocalVariable(name: "thread", arg: 1, scope: !21693, file: !19462, line: 52, type: !2208)
!21695 = !DILocation(line: 52, column: 59, scope: !21693)
!21696 = !DILocation(line: 54, column: 26, scope: !21693)
!21697 = !DILocation(line: 54, column: 34, scope: !21693)
!21698 = !DILocation(line: 54, column: 39, scope: !21693)
!21699 = !DILocation(line: 54, column: 9, scope: !21693)
!21700 = !DILocation(line: 54, column: 2, scope: !21693)
!21701 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !18865, file: !18865, line: 141, type: !20394, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21702 = !DILocalVariable(name: "thread", arg: 1, scope: !21701, file: !18865, line: 141, type: !2208)
!21703 = !DILocation(line: 141, column: 64, scope: !21701)
!21704 = !DILocation(line: 143, column: 2, scope: !21701)
!21705 = !DILocation(line: 143, column: 10, scope: !21701)
!21706 = !DILocation(line: 143, column: 15, scope: !21701)
!21707 = !DILocation(line: 143, column: 28, scope: !21701)
!21708 = !DILocation(line: 145, column: 2, scope: !21701)
!21709 = !DILocation(line: 145, column: 2, scope: !21710)
!21710 = distinct !DILexicalBlock(scope: !21701, file: !18865, line: 145, column: 2)
!21711 = !DILocation(line: 146, column: 1, scope: !21701)
!21712 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !18865, file: !18865, line: 73, type: !253, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21713 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21714)
!21714 = distinct !DILocation(line: 75, column: 30, scope: !21712)
!21715 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21714)
!21716 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21714)
!21717 = !DILocation(line: 75, column: 9, scope: !21712)
!21718 = !DILocation(line: 76, column: 1, scope: !21712)
!21719 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2307, file: !2307, line: 977, type: !524, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21720 = !DILocalVariable(name: "key", arg: 1, scope: !21719, file: !2307, line: 977, type: !173)
!21721 = !DILocation(line: 977, column: 36, scope: !21719)
!21722 = !DILocation(line: 979, column: 14, scope: !21723)
!21723 = distinct !DILexicalBlock(scope: !21719, file: !2307, line: 979, column: 6)
!21724 = !DILocation(line: 979, column: 6, scope: !21723)
!21725 = !DILocation(line: 979, column: 6, scope: !21719)
!21726 = !DILocation(line: 980, column: 18, scope: !21727)
!21727 = distinct !DILexicalBlock(scope: !21723, file: !2307, line: 979, column: 20)
!21728 = !DILocation(line: 980, column: 3, scope: !21727)
!21729 = !DILocation(line: 981, column: 2, scope: !21727)
!21730 = !DILocation(line: 982, column: 3, scope: !21731)
!21731 = distinct !DILexicalBlock(scope: !21723, file: !2307, line: 981, column: 9)
!21732 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21733)
!21733 = distinct !DILocation(line: 982, column: 3, scope: !21731)
!21734 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21733)
!21735 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21733)
!21736 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21733)
!21737 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21733)
!21738 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21733)
!21739 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21733)
!21740 = !DILocation(line: 983, column: 3, scope: !21731)
!21741 = !DILocation(line: 985, column: 1, scope: !21719)
!21742 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2307, file: !2307, line: 695, type: !20394, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21743 = !DILocalVariable(name: "thread", arg: 1, scope: !21742, file: !2307, line: 695, type: !2208)
!21744 = !DILocation(line: 695, column: 46, scope: !21742)
!21745 = !DILocation(line: 697, column: 2, scope: !21742)
!21746 = !DILocation(line: 697, column: 2, scope: !21747)
!21747 = distinct !DILexicalBlock(scope: !21742, file: !2307, line: 697, column: 2)
!21748 = !DILocalVariable(name: "key", scope: !21742, file: !2307, line: 699, type: !20433)
!21749 = !DILocation(line: 699, column: 19, scope: !21742)
!21750 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !21751)
!21751 = distinct !DILocation(line: 699, column: 25, scope: !21742)
!21752 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !21751)
!21753 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !21751)
!21754 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21755)
!21755 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !21751)
!21756 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21755)
!21757 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21755)
!21758 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !21751)
!21759 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !21751)
!21760 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !21751)
!21761 = !DILocation(line: 699, column: 25, scope: !21742)
!21762 = !DILocation(line: 702, column: 29, scope: !21763)
!21763 = distinct !DILexicalBlock(scope: !21742, file: !2307, line: 702, column: 6)
!21764 = !DILocation(line: 702, column: 7, scope: !21763)
!21765 = !DILocation(line: 702, column: 6, scope: !21742)
!21766 = !DILocation(line: 703, column: 3, scope: !21767)
!21767 = distinct !DILexicalBlock(scope: !21763, file: !2307, line: 702, column: 38)
!21768 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !21769)
!21769 = distinct !DILocation(line: 703, column: 3, scope: !21767)
!21770 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !21769)
!21771 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !21769)
!21772 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !21769)
!21773 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21774)
!21774 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !21769)
!21775 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21774)
!21776 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21774)
!21777 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21774)
!21778 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21774)
!21779 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21774)
!21780 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21774)
!21781 = !DILocation(line: 704, column: 3, scope: !21767)
!21782 = !DILocation(line: 707, column: 33, scope: !21742)
!21783 = !DILocation(line: 707, column: 2, scope: !21742)
!21784 = !DILocation(line: 708, column: 15, scope: !21742)
!21785 = !DILocation(line: 708, column: 2, scope: !21742)
!21786 = !DILocation(line: 710, column: 2, scope: !21742)
!21787 = !DILocation(line: 712, column: 2, scope: !21742)
!21788 = !DILocation(line: 712, column: 2, scope: !21789)
!21789 = distinct !DILexicalBlock(scope: !21742, file: !2307, line: 712, column: 2)
!21790 = !DILocation(line: 713, column: 1, scope: !21742)
!21791 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !18865, file: !18865, line: 96, type: !20772, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21792 = !DILocalVariable(name: "thread", arg: 1, scope: !21791, file: !18865, line: 96, type: !2208)
!21793 = !DILocation(line: 96, column: 59, scope: !21791)
!21794 = !DILocation(line: 98, column: 10, scope: !21791)
!21795 = !DILocation(line: 98, column: 18, scope: !21791)
!21796 = !DILocation(line: 98, column: 23, scope: !21791)
!21797 = !DILocation(line: 98, column: 36, scope: !21791)
!21798 = !DILocation(line: 98, column: 57, scope: !21791)
!21799 = !DILocation(line: 98, column: 2, scope: !21791)
!21800 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !18865, file: !18865, line: 148, type: !20394, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21801 = !DILocalVariable(name: "thread", arg: 1, scope: !21800, file: !18865, line: 148, type: !2208)
!21802 = !DILocation(line: 148, column: 68, scope: !21800)
!21803 = !DILocation(line: 150, column: 2, scope: !21800)
!21804 = !DILocation(line: 150, column: 10, scope: !21800)
!21805 = !DILocation(line: 150, column: 15, scope: !21800)
!21806 = !DILocation(line: 150, column: 28, scope: !21800)
!21807 = !DILocation(line: 152, column: 2, scope: !21800)
!21808 = !DILocation(line: 152, column: 2, scope: !21809)
!21809 = distinct !DILexicalBlock(scope: !21800, file: !18865, line: 152, column: 2)
!21810 = !DILocation(line: 153, column: 1, scope: !21800)
!21811 = distinct !DISubprogram(name: "z_pend_thread", scope: !2307, file: !2307, line: 770, type: !21812, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21812 = !DISubroutineType(types: !21813)
!21813 = !{null, !2208, !2239, !21814}
!21814 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !294, line: 67, baseType: !21815)
!21815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !294, line: 65, size: 64, elements: !21816)
!21816 = !{!21817}
!21817 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !21815, file: !294, line: 66, baseType: !293, size: 64)
!21818 = !DILocalVariable(name: "thread", arg: 1, scope: !21811, file: !2307, line: 770, type: !2208)
!21819 = !DILocation(line: 770, column: 37, scope: !21811)
!21820 = !DILocalVariable(name: "wait_q", arg: 2, scope: !21811, file: !2307, line: 770, type: !2239)
!21821 = !DILocation(line: 770, column: 56, scope: !21811)
!21822 = !DILocalVariable(name: "timeout", arg: 3, scope: !21811, file: !2307, line: 771, type: !21814)
!21823 = !DILocation(line: 771, column: 18, scope: !21811)
!21824 = !DILocalVariable(name: "__i", scope: !21825, file: !2307, line: 774, type: !20433)
!21825 = distinct !DILexicalBlock(scope: !21811, file: !2307, line: 774, column: 2)
!21826 = !DILocation(line: 774, column: 2, scope: !21825)
!21827 = !DILocalVariable(name: "__key", scope: !21825, file: !2307, line: 774, type: !20433)
!21828 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !21829)
!21829 = distinct !DILocation(line: 774, column: 2, scope: !21825)
!21830 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !21829)
!21831 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !21829)
!21832 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21833)
!21833 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !21829)
!21834 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21833)
!21835 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21833)
!21836 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !21829)
!21837 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !21829)
!21838 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !21829)
!21839 = !DILocation(line: 774, column: 2, scope: !21840)
!21840 = distinct !DILexicalBlock(scope: !21825, file: !2307, line: 774, column: 2)
!21841 = !DILocation(line: 775, column: 15, scope: !21842)
!21842 = distinct !DILexicalBlock(scope: !21840, file: !2307, line: 774, column: 26)
!21843 = !DILocation(line: 775, column: 23, scope: !21842)
!21844 = !DILocation(line: 775, column: 3, scope: !21842)
!21845 = !DILocation(line: 776, column: 2, scope: !21842)
!21846 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !21847)
!21847 = distinct !DILocation(line: 774, column: 2, scope: !21840)
!21848 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !21847)
!21849 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !21847)
!21850 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !21847)
!21851 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !21852)
!21852 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !21847)
!21853 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !21852)
!21854 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !21852)
!21855 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !21852)
!21856 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !21852)
!21857 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !21852)
!21858 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !21852)
!21859 = distinct !{!21859, !21826, !21860}
!21860 = !DILocation(line: 776, column: 2, scope: !21825)
!21861 = !DILocation(line: 777, column: 1, scope: !21811)
!21862 = distinct !DISubprogram(name: "pend_locked", scope: !2307, file: !2307, line: 760, type: !21812, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21863 = !DILocalVariable(name: "thread", arg: 1, scope: !21862, file: !2307, line: 760, type: !2208)
!21864 = !DILocation(line: 760, column: 42, scope: !21862)
!21865 = !DILocalVariable(name: "wait_q", arg: 2, scope: !21862, file: !2307, line: 760, type: !2239)
!21866 = !DILocation(line: 760, column: 61, scope: !21862)
!21867 = !DILocalVariable(name: "timeout", arg: 3, scope: !21862, file: !2307, line: 761, type: !21814)
!21868 = !DILocation(line: 761, column: 16, scope: !21862)
!21869 = !DILocation(line: 766, column: 22, scope: !21862)
!21870 = !DILocation(line: 766, column: 30, scope: !21862)
!21871 = !DILocation(line: 766, column: 2, scope: !21862)
!21872 = !DILocation(line: 767, column: 21, scope: !21862)
!21873 = !DILocation(line: 767, column: 2, scope: !21862)
!21874 = !DILocation(line: 768, column: 1, scope: !21862)
!21875 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2307, file: !2307, line: 740, type: !21876, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21876 = !DISubroutineType(types: !21877)
!21877 = !{null, !2208, !2239}
!21878 = !DILocalVariable(name: "thread", arg: 1, scope: !21875, file: !2307, line: 740, type: !2208)
!21879 = !DILocation(line: 740, column: 50, scope: !21875)
!21880 = !DILocalVariable(name: "wait_q", arg: 2, scope: !21875, file: !2307, line: 740, type: !2239)
!21881 = !DILocation(line: 740, column: 69, scope: !21875)
!21882 = !DILocation(line: 742, column: 17, scope: !21875)
!21883 = !DILocation(line: 742, column: 2, scope: !21875)
!21884 = !DILocation(line: 743, column: 27, scope: !21875)
!21885 = !DILocation(line: 743, column: 2, scope: !21875)
!21886 = !DILocation(line: 745, column: 2, scope: !21875)
!21887 = !DILocation(line: 745, column: 2, scope: !21888)
!21888 = distinct !DILexicalBlock(scope: !21875, file: !2307, line: 745, column: 2)
!21889 = !DILocation(line: 747, column: 6, scope: !21890)
!21890 = distinct !DILexicalBlock(scope: !21875, file: !2307, line: 747, column: 6)
!21891 = !DILocation(line: 747, column: 13, scope: !21890)
!21892 = !DILocation(line: 747, column: 6, scope: !21875)
!21893 = !DILocation(line: 748, column: 28, scope: !21894)
!21894 = distinct !DILexicalBlock(scope: !21890, file: !2307, line: 747, column: 22)
!21895 = !DILocation(line: 748, column: 3, scope: !21894)
!21896 = !DILocation(line: 748, column: 11, scope: !21894)
!21897 = !DILocation(line: 748, column: 16, scope: !21894)
!21898 = !DILocation(line: 748, column: 26, scope: !21894)
!21899 = !DILocation(line: 749, column: 20, scope: !21894)
!21900 = !DILocation(line: 749, column: 28, scope: !21894)
!21901 = !DILocation(line: 749, column: 35, scope: !21894)
!21902 = !DILocation(line: 181, column: 56, scope: !20891, inlinedAt: !21903)
!21903 = distinct !DILocation(line: 749, column: 3, scope: !21894)
!21904 = !DILocation(line: 182, column: 25, scope: !20891, inlinedAt: !21903)
!21905 = !DILocation(line: 184, column: 19, scope: !20891, inlinedAt: !21903)
!21906 = !DILocation(line: 188, column: 2, scope: !20902, inlinedAt: !21903)
!21907 = !DILocation(line: 188, column: 2, scope: !20904, inlinedAt: !21903)
!21908 = !DILocation(line: 189, column: 24, scope: !20906, inlinedAt: !21903)
!21909 = !DILocation(line: 189, column: 32, scope: !20906, inlinedAt: !21903)
!21910 = !DILocation(line: 189, column: 7, scope: !20906, inlinedAt: !21903)
!21911 = !DILocation(line: 189, column: 35, scope: !20906, inlinedAt: !21903)
!21912 = !DILocation(line: 189, column: 7, scope: !20907, inlinedAt: !21903)
!21913 = !DILocation(line: 190, column: 22, scope: !20913, inlinedAt: !21903)
!21914 = !DILocation(line: 190, column: 25, scope: !20913, inlinedAt: !21903)
!21915 = !DILocation(line: 190, column: 30, scope: !20913, inlinedAt: !21903)
!21916 = !DILocation(line: 191, column: 8, scope: !20913, inlinedAt: !21903)
!21917 = !DILocation(line: 191, column: 16, scope: !20913, inlinedAt: !21903)
!21918 = !DILocation(line: 191, column: 21, scope: !20913, inlinedAt: !21903)
!21919 = !DILocation(line: 190, column: 4, scope: !20913, inlinedAt: !21903)
!21920 = !DILocation(line: 192, column: 4, scope: !20913, inlinedAt: !21903)
!21921 = distinct !{!21921, !21906, !21922}
!21922 = !DILocation(line: 194, column: 2, scope: !20902, inlinedAt: !21903)
!21923 = !DILocation(line: 196, column: 19, scope: !20891, inlinedAt: !21903)
!21924 = !DILocation(line: 196, column: 24, scope: !20891, inlinedAt: !21903)
!21925 = !DILocation(line: 196, column: 32, scope: !20891, inlinedAt: !21903)
!21926 = !DILocation(line: 196, column: 37, scope: !20891, inlinedAt: !21903)
!21927 = !DILocation(line: 196, column: 2, scope: !20891, inlinedAt: !21903)
!21928 = !DILocation(line: 197, column: 1, scope: !20891, inlinedAt: !21903)
!21929 = !DILocation(line: 750, column: 2, scope: !21894)
!21930 = !DILocation(line: 751, column: 1, scope: !21875)
!21931 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2307, file: !2307, line: 753, type: !21932, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21932 = !DISubroutineType(types: !21933)
!21933 = !{null, !2208, !21814}
!21934 = !DILocalVariable(name: "thread", arg: 1, scope: !21931, file: !2307, line: 753, type: !2208)
!21935 = !DILocation(line: 753, column: 49, scope: !21931)
!21936 = !DILocalVariable(name: "timeout", arg: 2, scope: !21931, file: !2307, line: 753, type: !21814)
!21937 = !DILocation(line: 753, column: 69, scope: !21931)
!21938 = !DILocation(line: 755, column: 7, scope: !21939)
!21939 = distinct !DILexicalBlock(scope: !21931, file: !2307, line: 755, column: 6)
!21940 = !DILocation(line: 755, column: 6, scope: !21931)
!21941 = !DILocation(line: 756, column: 24, scope: !21942)
!21942 = distinct !DILexicalBlock(scope: !21939, file: !2307, line: 755, column: 41)
!21943 = !DILocation(line: 756, column: 3, scope: !21942)
!21944 = !DILocation(line: 757, column: 2, scope: !21942)
!21945 = !DILocation(line: 758, column: 1, scope: !21931)
!21946 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !19462, file: !19462, line: 47, type: !21932, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21947 = !DILocalVariable(name: "thread", arg: 1, scope: !21946, file: !19462, line: 47, type: !2208)
!21948 = !DILocation(line: 47, column: 58, scope: !21946)
!21949 = !DILocalVariable(name: "ticks", arg: 2, scope: !21946, file: !19462, line: 47, type: !21814)
!21950 = !DILocation(line: 47, column: 78, scope: !21946)
!21951 = !DILocation(line: 49, column: 17, scope: !21946)
!21952 = !DILocation(line: 49, column: 25, scope: !21946)
!21953 = !DILocation(line: 49, column: 30, scope: !21946)
!21954 = !DILocation(line: 49, column: 2, scope: !21946)
!21955 = !DILocation(line: 50, column: 1, scope: !21946)
!21956 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2307, file: !2307, line: 795, type: !2265, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!21957 = !DILocalVariable(name: "timeout", arg: 1, scope: !21956, file: !2307, line: 795, type: !2267)
!21958 = !DILocation(line: 795, column: 40, scope: !21956)
!21959 = !DILocalVariable(name: "thread", scope: !21956, file: !2307, line: 797, type: !2208)
!21960 = !DILocation(line: 797, column: 19, scope: !21956)
!21961 = !DILocation(line: 797, column: 28, scope: !21956)
!21962 = !DILocalVariable(name: "__i", scope: !21963, file: !2307, line: 800, type: !20433)
!21963 = distinct !DILexicalBlock(scope: !21956, file: !2307, line: 800, column: 2)
!21964 = !DILocation(line: 800, column: 2, scope: !21963)
!21965 = !DILocalVariable(name: "__key", scope: !21963, file: !2307, line: 800, type: !20433)
!21966 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !21967)
!21967 = distinct !DILocation(line: 800, column: 2, scope: !21963)
!21968 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !21967)
!21969 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !21967)
!21970 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !21971)
!21971 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !21967)
!21972 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !21971)
!21973 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !21971)
!21974 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !21967)
!21975 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !21967)
!21976 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !21967)
!21977 = !DILocation(line: 800, column: 2, scope: !21978)
!21978 = distinct !DILexicalBlock(scope: !21963, file: !2307, line: 800, column: 2)
!21979 = !DILocalVariable(name: "killed", scope: !21980, file: !2307, line: 801, type: !717)
!21980 = distinct !DILexicalBlock(scope: !21978, file: !2307, line: 800, column: 26)
!21981 = !DILocation(line: 801, column: 8, scope: !21980)
!21982 = !DILocation(line: 801, column: 19, scope: !21980)
!21983 = !DILocation(line: 801, column: 27, scope: !21980)
!21984 = !DILocation(line: 801, column: 32, scope: !21980)
!21985 = !DILocation(line: 801, column: 45, scope: !21980)
!21986 = !DILocation(line: 801, column: 61, scope: !21980)
!21987 = !DILocation(line: 802, column: 12, scope: !21980)
!21988 = !DILocation(line: 802, column: 20, scope: !21980)
!21989 = !DILocation(line: 802, column: 25, scope: !21980)
!21990 = !DILocation(line: 802, column: 38, scope: !21980)
!21991 = !DILocation(line: 804, column: 8, scope: !21992)
!21992 = distinct !DILexicalBlock(scope: !21980, file: !2307, line: 804, column: 7)
!21993 = !DILocation(line: 804, column: 7, scope: !21980)
!21994 = !DILocation(line: 805, column: 8, scope: !21995)
!21995 = distinct !DILexicalBlock(scope: !21996, file: !2307, line: 805, column: 8)
!21996 = distinct !DILexicalBlock(scope: !21992, file: !2307, line: 804, column: 16)
!21997 = !DILocation(line: 805, column: 16, scope: !21995)
!21998 = !DILocation(line: 805, column: 21, scope: !21995)
!21999 = !DILocation(line: 805, column: 31, scope: !21995)
!22000 = !DILocation(line: 805, column: 8, scope: !21996)
!22001 = !DILocation(line: 806, column: 30, scope: !22002)
!22002 = distinct !DILexicalBlock(scope: !21995, file: !2307, line: 805, column: 40)
!22003 = !DILocation(line: 806, column: 5, scope: !22002)
!22004 = !DILocation(line: 807, column: 4, scope: !22002)
!22005 = !DILocation(line: 808, column: 29, scope: !21996)
!22006 = !DILocation(line: 808, column: 4, scope: !21996)
!22007 = !DILocation(line: 809, column: 35, scope: !21996)
!22008 = !DILocation(line: 809, column: 4, scope: !21996)
!22009 = !DILocation(line: 810, column: 17, scope: !21996)
!22010 = !DILocation(line: 810, column: 4, scope: !21996)
!22011 = !DILocation(line: 811, column: 3, scope: !21996)
!22012 = !DILocation(line: 812, column: 2, scope: !21980)
!22013 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22014)
!22014 = distinct !DILocation(line: 800, column: 2, scope: !21978)
!22015 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22014)
!22016 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22014)
!22017 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22014)
!22018 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22019)
!22019 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22014)
!22020 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22019)
!22021 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22019)
!22022 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22019)
!22023 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22019)
!22024 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22019)
!22025 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22019)
!22026 = distinct !{!22026, !21964, !22027}
!22027 = !DILocation(line: 812, column: 2, scope: !21963)
!22028 = !DILocation(line: 813, column: 1, scope: !21956)
!22029 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2307, file: !2307, line: 779, type: !20394, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22030 = !DILocalVariable(name: "thread", arg: 1, scope: !22029, file: !2307, line: 779, type: !2208)
!22031 = !DILocation(line: 779, column: 62, scope: !22029)
!22032 = !DILocation(line: 781, column: 38, scope: !22029)
!22033 = !DILocation(line: 781, column: 21, scope: !22029)
!22034 = !DILocation(line: 781, column: 47, scope: !22029)
!22035 = !DILocation(line: 781, column: 54, scope: !22029)
!22036 = !DILocation(line: 781, column: 2, scope: !22029)
!22037 = !DILocation(line: 782, column: 31, scope: !22029)
!22038 = !DILocation(line: 782, column: 2, scope: !22029)
!22039 = !DILocation(line: 783, column: 2, scope: !22029)
!22040 = !DILocation(line: 783, column: 10, scope: !22029)
!22041 = !DILocation(line: 783, column: 15, scope: !22029)
!22042 = !DILocation(line: 783, column: 25, scope: !22029)
!22043 = !DILocation(line: 784, column: 1, scope: !22029)
!22044 = distinct !DISubprogram(name: "pended_on_thread", scope: !2307, file: !2307, line: 724, type: !22045, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22045 = !DISubroutineType(types: !22046)
!22046 = !{!2239, !2208}
!22047 = !DILocalVariable(name: "thread", arg: 1, scope: !22044, file: !2307, line: 724, type: !2208)
!22048 = !DILocation(line: 724, column: 53, scope: !22044)
!22049 = !DILocation(line: 728, column: 9, scope: !22044)
!22050 = !DILocation(line: 728, column: 17, scope: !22044)
!22051 = !DILocation(line: 728, column: 22, scope: !22044)
!22052 = !DILocation(line: 728, column: 2, scope: !22044)
!22053 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !18865, file: !18865, line: 165, type: !20394, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22054 = !DILocalVariable(name: "thread", arg: 1, scope: !22053, file: !18865, line: 165, type: !2208)
!22055 = !DILocation(line: 165, column: 66, scope: !22053)
!22056 = !DILocation(line: 167, column: 2, scope: !22053)
!22057 = !DILocation(line: 167, column: 10, scope: !22053)
!22058 = !DILocation(line: 167, column: 15, scope: !22053)
!22059 = !DILocation(line: 167, column: 28, scope: !22053)
!22060 = !DILocation(line: 168, column: 1, scope: !22053)
!22061 = distinct !DISubprogram(name: "unready_thread", scope: !2307, file: !2307, line: 731, type: !20394, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22062 = !DILocalVariable(name: "thread", arg: 1, scope: !22061, file: !2307, line: 731, type: !2208)
!22063 = !DILocation(line: 731, column: 45, scope: !22061)
!22064 = !DILocation(line: 733, column: 25, scope: !22065)
!22065 = distinct !DILexicalBlock(scope: !22061, file: !2307, line: 733, column: 6)
!22066 = !DILocation(line: 733, column: 6, scope: !22065)
!22067 = !DILocation(line: 733, column: 6, scope: !22061)
!22068 = !DILocation(line: 734, column: 18, scope: !22069)
!22069 = distinct !DILexicalBlock(scope: !22065, file: !2307, line: 733, column: 34)
!22070 = !DILocation(line: 264, column: 59, scope: !20838, inlinedAt: !22071)
!22071 = distinct !DILocation(line: 734, column: 3, scope: !22069)
!22072 = !DILocation(line: 266, column: 2, scope: !20838, inlinedAt: !22071)
!22073 = !DILocation(line: 266, column: 10, scope: !20838, inlinedAt: !22071)
!22074 = !DILocation(line: 266, column: 15, scope: !20838, inlinedAt: !22071)
!22075 = !DILocation(line: 266, column: 28, scope: !20838, inlinedAt: !22071)
!22076 = !DILocation(line: 267, column: 26, scope: !20846, inlinedAt: !22071)
!22077 = !DILocation(line: 267, column: 6, scope: !20846, inlinedAt: !22071)
!22078 = !DILocation(line: 267, column: 6, scope: !20838, inlinedAt: !22071)
!22079 = !DILocation(line: 268, column: 15, scope: !20850, inlinedAt: !22071)
!22080 = !DILocation(line: 232, column: 56, scope: !20852, inlinedAt: !22081)
!22081 = distinct !DILocation(line: 268, column: 3, scope: !20850, inlinedAt: !22071)
!22082 = !DILocation(line: 234, column: 31, scope: !20852, inlinedAt: !22081)
!22083 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !22084)
!22084 = distinct !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !22081)
!22085 = !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !22081)
!22086 = !DILocation(line: 234, column: 40, scope: !20852, inlinedAt: !22081)
!22087 = !DILocation(line: 234, column: 2, scope: !20852, inlinedAt: !22081)
!22088 = !DILocation(line: 269, column: 2, scope: !20850, inlinedAt: !22071)
!22089 = !DILocation(line: 735, column: 2, scope: !22069)
!22090 = !DILocation(line: 736, column: 15, scope: !22061)
!22091 = !DILocation(line: 736, column: 25, scope: !22061)
!22092 = !DILocation(line: 736, column: 22, scope: !22061)
!22093 = !DILocation(line: 736, column: 2, scope: !22061)
!22094 = !DILocation(line: 737, column: 1, scope: !22061)
!22095 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !18865, file: !18865, line: 160, type: !20394, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22096 = !DILocalVariable(name: "thread", arg: 1, scope: !22095, file: !18865, line: 160, type: !2208)
!22097 = !DILocation(line: 160, column: 62, scope: !22095)
!22098 = !DILocation(line: 162, column: 2, scope: !22095)
!22099 = !DILocation(line: 162, column: 10, scope: !22095)
!22100 = !DILocation(line: 162, column: 15, scope: !22095)
!22101 = !DILocation(line: 162, column: 28, scope: !22095)
!22102 = !DILocation(line: 163, column: 1, scope: !22095)
!22103 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2307, file: !2307, line: 786, type: !20394, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22104 = !DILocalVariable(name: "thread", arg: 1, scope: !22103, file: !2307, line: 786, type: !2208)
!22105 = !DILocation(line: 786, column: 64, scope: !22103)
!22106 = !DILocalVariable(name: "__i", scope: !22107, file: !2307, line: 788, type: !20433)
!22107 = distinct !DILexicalBlock(scope: !22103, file: !2307, line: 788, column: 2)
!22108 = !DILocation(line: 788, column: 2, scope: !22107)
!22109 = !DILocalVariable(name: "__key", scope: !22107, file: !2307, line: 788, type: !20433)
!22110 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22111)
!22111 = distinct !DILocation(line: 788, column: 2, scope: !22107)
!22112 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22111)
!22113 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22111)
!22114 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22115)
!22115 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22111)
!22116 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22115)
!22117 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22115)
!22118 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22111)
!22119 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22111)
!22120 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22111)
!22121 = !DILocation(line: 788, column: 2, scope: !22122)
!22122 = distinct !DILexicalBlock(scope: !22107, file: !2307, line: 788, column: 2)
!22123 = !DILocation(line: 789, column: 28, scope: !22124)
!22124 = distinct !DILexicalBlock(scope: !22122, file: !2307, line: 788, column: 26)
!22125 = !DILocation(line: 789, column: 3, scope: !22124)
!22126 = !DILocation(line: 790, column: 2, scope: !22124)
!22127 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22128)
!22128 = distinct !DILocation(line: 788, column: 2, scope: !22122)
!22129 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22128)
!22130 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22128)
!22131 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22128)
!22132 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22133)
!22133 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22128)
!22134 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22133)
!22135 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22133)
!22136 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22133)
!22137 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22133)
!22138 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22133)
!22139 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22133)
!22140 = distinct !{!22140, !22108, !22141}
!22141 = !DILocation(line: 790, column: 2, scope: !22107)
!22142 = !DILocation(line: 791, column: 1, scope: !22103)
!22143 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2307, file: !2307, line: 816, type: !22144, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22144 = !DISubroutineType(types: !22145)
!22145 = !{!103, !173, !2239, !21814}
!22146 = !DILocalVariable(name: "key", arg: 1, scope: !22143, file: !2307, line: 816, type: !173)
!22147 = !DILocation(line: 816, column: 34, scope: !22143)
!22148 = !DILocalVariable(name: "wait_q", arg: 2, scope: !22143, file: !2307, line: 816, type: !2239)
!22149 = !DILocation(line: 816, column: 50, scope: !22143)
!22150 = !DILocalVariable(name: "timeout", arg: 3, scope: !22143, file: !2307, line: 816, type: !21814)
!22151 = !DILocation(line: 816, column: 70, scope: !22143)
!22152 = !DILocation(line: 823, column: 14, scope: !22143)
!22153 = !DILocation(line: 823, column: 24, scope: !22143)
!22154 = !DILocation(line: 823, column: 2, scope: !22143)
!22155 = !DILocation(line: 826, column: 20, scope: !22143)
!22156 = !DILocation(line: 826, column: 18, scope: !22143)
!22157 = !DILocalVariable(name: "ret", scope: !22143, file: !2307, line: 828, type: !103)
!22158 = !DILocation(line: 828, column: 6, scope: !22143)
!22159 = !DILocation(line: 828, column: 27, scope: !22143)
!22160 = !DILocation(line: 828, column: 12, scope: !22143)
!22161 = !DILocalVariable(name: "__i", scope: !22162, file: !2307, line: 829, type: !20433)
!22162 = distinct !DILexicalBlock(scope: !22143, file: !2307, line: 829, column: 2)
!22163 = !DILocation(line: 829, column: 2, scope: !22162)
!22164 = !DILocalVariable(name: "__key", scope: !22162, file: !2307, line: 829, type: !20433)
!22165 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22166)
!22166 = distinct !DILocation(line: 829, column: 2, scope: !22162)
!22167 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22166)
!22168 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22166)
!22169 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22170)
!22170 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22166)
!22171 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22170)
!22172 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22170)
!22173 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22166)
!22174 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22166)
!22175 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22166)
!22176 = !DILocation(line: 829, column: 2, scope: !22177)
!22177 = distinct !DILexicalBlock(scope: !22162, file: !2307, line: 829, column: 2)
!22178 = !DILocation(line: 830, column: 7, scope: !22179)
!22179 = distinct !DILexicalBlock(scope: !22180, file: !2307, line: 830, column: 7)
!22180 = distinct !DILexicalBlock(scope: !22177, file: !2307, line: 829, column: 26)
!22181 = !DILocation(line: 830, column: 26, scope: !22179)
!22182 = !DILocation(line: 830, column: 23, scope: !22179)
!22183 = !DILocation(line: 830, column: 7, scope: !22180)
!22184 = !DILocation(line: 831, column: 20, scope: !22185)
!22185 = distinct !DILexicalBlock(scope: !22179, file: !2307, line: 830, column: 36)
!22186 = !DILocation(line: 832, column: 3, scope: !22185)
!22187 = !DILocation(line: 833, column: 2, scope: !22180)
!22188 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22189)
!22189 = distinct !DILocation(line: 829, column: 2, scope: !22177)
!22190 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22189)
!22191 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22189)
!22192 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22189)
!22193 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22194)
!22194 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22189)
!22195 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22194)
!22196 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22194)
!22197 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22194)
!22198 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22194)
!22199 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22194)
!22200 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22194)
!22201 = distinct !{!22201, !22163, !22202}
!22202 = !DILocation(line: 833, column: 2, scope: !22162)
!22203 = !DILocation(line: 834, column: 9, scope: !22143)
!22204 = !DILocation(line: 834, column: 2, scope: !22143)
!22205 = distinct !DISubprogram(name: "z_pend_curr", scope: !2307, file: !2307, line: 840, type: !22206, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22206 = !DISubroutineType(types: !22207)
!22207 = !{!103, !20443, !20433, !2239, !21814}
!22208 = !DILocalVariable(name: "lock", arg: 1, scope: !22205, file: !2307, line: 840, type: !20443)
!22209 = !DILocation(line: 840, column: 36, scope: !22205)
!22210 = !DILocalVariable(name: "key", arg: 2, scope: !22205, file: !2307, line: 840, type: !20433)
!22211 = !DILocation(line: 840, column: 59, scope: !22205)
!22212 = !DILocalVariable(name: "wait_q", arg: 3, scope: !22205, file: !2307, line: 841, type: !2239)
!22213 = !DILocation(line: 841, column: 20, scope: !22205)
!22214 = !DILocalVariable(name: "timeout", arg: 4, scope: !22205, file: !2307, line: 841, type: !21814)
!22215 = !DILocation(line: 841, column: 40, scope: !22205)
!22216 = !DILocation(line: 844, column: 20, scope: !22205)
!22217 = !DILocation(line: 844, column: 18, scope: !22205)
!22218 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22219)
!22219 = distinct !DILocation(line: 856, column: 9, scope: !22205)
!22220 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22219)
!22221 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22219)
!22222 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22223)
!22223 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22219)
!22224 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22223)
!22225 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22223)
!22226 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22219)
!22227 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22219)
!22228 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22219)
!22229 = !DILocation(line: 856, column: 9, scope: !22205)
!22230 = !DILocation(line: 857, column: 14, scope: !22205)
!22231 = !DILocation(line: 857, column: 24, scope: !22205)
!22232 = !DILocation(line: 857, column: 2, scope: !22205)
!22233 = !DILocation(line: 858, column: 17, scope: !22205)
!22234 = !DILocation(line: 221, column: 61, scope: !21533, inlinedAt: !22235)
!22235 = distinct !DILocation(line: 858, column: 2, scope: !22205)
!22236 = !DILocation(line: 223, column: 2, scope: !21533, inlinedAt: !22235)
!22237 = !DILocation(line: 859, column: 9, scope: !22205)
!22238 = !DILocation(line: 193, column: 52, scope: !21524, inlinedAt: !22239)
!22239 = distinct !DILocation(line: 859, column: 9, scope: !22205)
!22240 = !DILocation(line: 193, column: 75, scope: !21524, inlinedAt: !22239)
!22241 = !DILocation(line: 195, column: 17, scope: !21524, inlinedAt: !22239)
!22242 = !DILocation(line: 221, column: 61, scope: !21533, inlinedAt: !22243)
!22243 = distinct !DILocation(line: 195, column: 2, scope: !21524, inlinedAt: !22239)
!22244 = !DILocation(line: 223, column: 2, scope: !21533, inlinedAt: !22243)
!22245 = !DILocation(line: 196, column: 28, scope: !21524, inlinedAt: !22239)
!22246 = !DILocation(line: 196, column: 9, scope: !21524, inlinedAt: !22239)
!22247 = !DILocation(line: 859, column: 2, scope: !22205)
!22248 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2307, file: !2307, line: 862, type: !22249, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22249 = !DISubroutineType(types: !22250)
!22250 = !{!2208, !2239}
!22251 = !DILocalVariable(name: "wait_q", arg: 1, scope: !22248, file: !2307, line: 862, type: !2239)
!22252 = !DILocation(line: 862, column: 50, scope: !22248)
!22253 = !DILocalVariable(name: "thread", scope: !22248, file: !2307, line: 864, type: !2208)
!22254 = !DILocation(line: 864, column: 19, scope: !22248)
!22255 = !DILocalVariable(name: "__i", scope: !22256, file: !2307, line: 866, type: !20433)
!22256 = distinct !DILexicalBlock(scope: !22248, file: !2307, line: 866, column: 2)
!22257 = !DILocation(line: 866, column: 2, scope: !22256)
!22258 = !DILocalVariable(name: "__key", scope: !22256, file: !2307, line: 866, type: !20433)
!22259 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22260)
!22260 = distinct !DILocation(line: 866, column: 2, scope: !22256)
!22261 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22260)
!22262 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22260)
!22263 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22264)
!22264 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22260)
!22265 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22264)
!22266 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22264)
!22267 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22260)
!22268 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22260)
!22269 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22260)
!22270 = !DILocation(line: 866, column: 2, scope: !22271)
!22271 = distinct !DILexicalBlock(scope: !22256, file: !2307, line: 866, column: 2)
!22272 = !DILocation(line: 867, column: 29, scope: !22273)
!22273 = distinct !DILexicalBlock(scope: !22271, file: !2307, line: 866, column: 26)
!22274 = !DILocation(line: 867, column: 37, scope: !22273)
!22275 = !DILocation(line: 867, column: 12, scope: !22273)
!22276 = !DILocation(line: 867, column: 10, scope: !22273)
!22277 = !DILocation(line: 869, column: 7, scope: !22278)
!22278 = distinct !DILexicalBlock(scope: !22273, file: !2307, line: 869, column: 7)
!22279 = !DILocation(line: 869, column: 14, scope: !22278)
!22280 = !DILocation(line: 869, column: 7, scope: !22273)
!22281 = !DILocation(line: 870, column: 29, scope: !22282)
!22282 = distinct !DILexicalBlock(scope: !22278, file: !2307, line: 869, column: 23)
!22283 = !DILocation(line: 870, column: 4, scope: !22282)
!22284 = !DILocation(line: 871, column: 3, scope: !22282)
!22285 = !DILocation(line: 872, column: 2, scope: !22273)
!22286 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22287)
!22287 = distinct !DILocation(line: 866, column: 2, scope: !22271)
!22288 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22287)
!22289 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22287)
!22290 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22287)
!22291 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22292)
!22292 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22287)
!22293 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22292)
!22294 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22292)
!22295 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22292)
!22296 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22292)
!22297 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22292)
!22298 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22292)
!22299 = distinct !{!22299, !22257, !22300}
!22300 = !DILocation(line: 872, column: 2, scope: !22256)
!22301 = !DILocation(line: 874, column: 9, scope: !22248)
!22302 = !DILocation(line: 874, column: 2, scope: !22248)
!22303 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2307, file: !2307, line: 877, type: !22249, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22304 = !DILocalVariable(name: "wait_q", arg: 1, scope: !22303, file: !2307, line: 877, type: !2239)
!22305 = !DILocation(line: 877, column: 51, scope: !22303)
!22306 = !DILocalVariable(name: "thread", scope: !22303, file: !2307, line: 879, type: !2208)
!22307 = !DILocation(line: 879, column: 19, scope: !22303)
!22308 = !DILocalVariable(name: "__i", scope: !22309, file: !2307, line: 881, type: !20433)
!22309 = distinct !DILexicalBlock(scope: !22303, file: !2307, line: 881, column: 2)
!22310 = !DILocation(line: 881, column: 2, scope: !22309)
!22311 = !DILocalVariable(name: "__key", scope: !22309, file: !2307, line: 881, type: !20433)
!22312 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22313)
!22313 = distinct !DILocation(line: 881, column: 2, scope: !22309)
!22314 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22313)
!22315 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22313)
!22316 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22317)
!22317 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22313)
!22318 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22317)
!22319 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22317)
!22320 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22313)
!22321 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22313)
!22322 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22313)
!22323 = !DILocation(line: 881, column: 2, scope: !22324)
!22324 = distinct !DILexicalBlock(scope: !22309, file: !2307, line: 881, column: 2)
!22325 = !DILocation(line: 882, column: 29, scope: !22326)
!22326 = distinct !DILexicalBlock(scope: !22324, file: !2307, line: 881, column: 26)
!22327 = !DILocation(line: 882, column: 37, scope: !22326)
!22328 = !DILocation(line: 882, column: 12, scope: !22326)
!22329 = !DILocation(line: 882, column: 10, scope: !22326)
!22330 = !DILocation(line: 884, column: 7, scope: !22331)
!22331 = distinct !DILexicalBlock(scope: !22326, file: !2307, line: 884, column: 7)
!22332 = !DILocation(line: 884, column: 14, scope: !22331)
!22333 = !DILocation(line: 884, column: 7, scope: !22326)
!22334 = !DILocation(line: 885, column: 29, scope: !22335)
!22335 = distinct !DILexicalBlock(scope: !22331, file: !2307, line: 884, column: 23)
!22336 = !DILocation(line: 885, column: 4, scope: !22335)
!22337 = !DILocation(line: 886, column: 33, scope: !22335)
!22338 = !DILocation(line: 886, column: 10, scope: !22335)
!22339 = !DILocation(line: 887, column: 3, scope: !22335)
!22340 = !DILocation(line: 888, column: 2, scope: !22326)
!22341 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22342)
!22342 = distinct !DILocation(line: 881, column: 2, scope: !22324)
!22343 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22342)
!22344 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22342)
!22345 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22342)
!22346 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22347)
!22347 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22342)
!22348 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22347)
!22349 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22347)
!22350 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22347)
!22351 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22347)
!22352 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22347)
!22353 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22347)
!22354 = distinct !{!22354, !22310, !22355}
!22355 = !DILocation(line: 888, column: 2, scope: !22309)
!22356 = !DILocation(line: 890, column: 9, scope: !22303)
!22357 = !DILocation(line: 890, column: 2, scope: !22303)
!22358 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2307, file: !2307, line: 893, type: !20394, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22359 = !DILocalVariable(name: "thread", arg: 1, scope: !22358, file: !2307, line: 893, type: !2208)
!22360 = !DILocation(line: 893, column: 39, scope: !22358)
!22361 = !DILocation(line: 895, column: 29, scope: !22358)
!22362 = !DILocation(line: 786, column: 64, scope: !22103, inlinedAt: !22363)
!22363 = distinct !DILocation(line: 895, column: 2, scope: !22358)
!22364 = !DILocation(line: 788, column: 2, scope: !22107, inlinedAt: !22363)
!22365 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22366)
!22366 = distinct !DILocation(line: 788, column: 2, scope: !22107, inlinedAt: !22363)
!22367 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22366)
!22368 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22366)
!22369 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22370)
!22370 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22366)
!22371 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22370)
!22372 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22370)
!22373 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22366)
!22374 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22366)
!22375 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22366)
!22376 = !DILocation(line: 788, column: 2, scope: !22122, inlinedAt: !22363)
!22377 = !DILocation(line: 789, column: 28, scope: !22124, inlinedAt: !22363)
!22378 = !DILocation(line: 789, column: 3, scope: !22124, inlinedAt: !22363)
!22379 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22380)
!22380 = distinct !DILocation(line: 788, column: 2, scope: !22122, inlinedAt: !22363)
!22381 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22380)
!22382 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22380)
!22383 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22380)
!22384 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22385)
!22385 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22380)
!22386 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22385)
!22387 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22385)
!22388 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22385)
!22389 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22385)
!22390 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22385)
!22391 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22385)
!22392 = distinct !{!22392, !22364, !22393}
!22393 = !DILocation(line: 790, column: 2, scope: !22107, inlinedAt: !22363)
!22394 = !DILocation(line: 896, column: 31, scope: !22358)
!22395 = !DILocation(line: 896, column: 8, scope: !22358)
!22396 = !DILocation(line: 897, column: 1, scope: !22358)
!22397 = distinct !DISubprogram(name: "z_set_prio", scope: !2307, file: !2307, line: 902, type: !21061, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22398 = !DILocalVariable(name: "thread", arg: 1, scope: !22397, file: !2307, line: 902, type: !2208)
!22399 = !DILocation(line: 902, column: 34, scope: !22397)
!22400 = !DILocalVariable(name: "prio", arg: 2, scope: !22397, file: !2307, line: 902, type: !103)
!22401 = !DILocation(line: 902, column: 46, scope: !22397)
!22402 = !DILocalVariable(name: "need_sched", scope: !22397, file: !2307, line: 904, type: !717)
!22403 = !DILocation(line: 904, column: 7, scope: !22397)
!22404 = !DILocalVariable(name: "__i", scope: !22405, file: !2307, line: 906, type: !20433)
!22405 = distinct !DILexicalBlock(scope: !22397, file: !2307, line: 906, column: 2)
!22406 = !DILocation(line: 906, column: 2, scope: !22405)
!22407 = !DILocalVariable(name: "__key", scope: !22405, file: !2307, line: 906, type: !20433)
!22408 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22409)
!22409 = distinct !DILocation(line: 906, column: 2, scope: !22405)
!22410 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22409)
!22411 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22409)
!22412 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22413)
!22413 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22409)
!22414 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22413)
!22415 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22413)
!22416 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22409)
!22417 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22409)
!22418 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22409)
!22419 = !DILocation(line: 906, column: 2, scope: !22420)
!22420 = distinct !DILexicalBlock(scope: !22405, file: !2307, line: 906, column: 2)
!22421 = !DILocation(line: 907, column: 34, scope: !22422)
!22422 = distinct !DILexicalBlock(scope: !22420, file: !2307, line: 906, column: 26)
!22423 = !DILocation(line: 907, column: 16, scope: !22422)
!22424 = !DILocation(line: 907, column: 14, scope: !22422)
!22425 = !DILocation(line: 909, column: 7, scope: !22426)
!22426 = distinct !DILexicalBlock(scope: !22422, file: !2307, line: 909, column: 7)
!22427 = !DILocation(line: 909, column: 7, scope: !22422)
!22428 = !DILocation(line: 912, column: 20, scope: !22429)
!22429 = distinct !DILexicalBlock(scope: !22430, file: !2307, line: 911, column: 63)
!22430 = distinct !DILexicalBlock(scope: !22431, file: !2307, line: 911, column: 8)
!22431 = distinct !DILexicalBlock(scope: !22426, file: !2307, line: 909, column: 19)
!22432 = !DILocation(line: 264, column: 59, scope: !20838, inlinedAt: !22433)
!22433 = distinct !DILocation(line: 912, column: 5, scope: !22429)
!22434 = !DILocation(line: 266, column: 2, scope: !20838, inlinedAt: !22433)
!22435 = !DILocation(line: 266, column: 10, scope: !20838, inlinedAt: !22433)
!22436 = !DILocation(line: 266, column: 15, scope: !20838, inlinedAt: !22433)
!22437 = !DILocation(line: 266, column: 28, scope: !20838, inlinedAt: !22433)
!22438 = !DILocation(line: 267, column: 26, scope: !20846, inlinedAt: !22433)
!22439 = !DILocation(line: 267, column: 6, scope: !20846, inlinedAt: !22433)
!22440 = !DILocation(line: 267, column: 6, scope: !20838, inlinedAt: !22433)
!22441 = !DILocation(line: 268, column: 15, scope: !20850, inlinedAt: !22433)
!22442 = !DILocation(line: 232, column: 56, scope: !20852, inlinedAt: !22443)
!22443 = distinct !DILocation(line: 268, column: 3, scope: !20850, inlinedAt: !22433)
!22444 = !DILocation(line: 234, column: 31, scope: !20852, inlinedAt: !22443)
!22445 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !22446)
!22446 = distinct !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !22443)
!22447 = !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !22443)
!22448 = !DILocation(line: 234, column: 40, scope: !20852, inlinedAt: !22443)
!22449 = !DILocation(line: 234, column: 2, scope: !20852, inlinedAt: !22443)
!22450 = !DILocation(line: 269, column: 2, scope: !20850, inlinedAt: !22433)
!22451 = !DILocation(line: 913, column: 25, scope: !22429)
!22452 = !DILocation(line: 913, column: 5, scope: !22429)
!22453 = !DILocation(line: 913, column: 13, scope: !22429)
!22454 = !DILocation(line: 913, column: 18, scope: !22429)
!22455 = !DILocation(line: 913, column: 23, scope: !22429)
!22456 = !DILocation(line: 914, column: 18, scope: !22429)
!22457 = !DILocation(line: 250, column: 57, scope: !20869, inlinedAt: !22458)
!22458 = distinct !DILocation(line: 914, column: 5, scope: !22429)
!22459 = !DILocation(line: 252, column: 2, scope: !20869, inlinedAt: !22458)
!22460 = !DILocation(line: 252, column: 10, scope: !20869, inlinedAt: !22458)
!22461 = !DILocation(line: 252, column: 15, scope: !20869, inlinedAt: !22458)
!22462 = !DILocation(line: 252, column: 28, scope: !20869, inlinedAt: !22458)
!22463 = !DILocation(line: 253, column: 26, scope: !20877, inlinedAt: !22458)
!22464 = !DILocation(line: 253, column: 6, scope: !20877, inlinedAt: !22458)
!22465 = !DILocation(line: 253, column: 6, scope: !20869, inlinedAt: !22458)
!22466 = !DILocation(line: 254, column: 12, scope: !20881, inlinedAt: !22458)
!22467 = !DILocation(line: 227, column: 53, scope: !20883, inlinedAt: !22468)
!22468 = distinct !DILocation(line: 254, column: 3, scope: !20881, inlinedAt: !22458)
!22469 = !DILocation(line: 229, column: 28, scope: !20883, inlinedAt: !22468)
!22470 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !22471)
!22471 = distinct !DILocation(line: 229, column: 16, scope: !20883, inlinedAt: !22468)
!22472 = !DILocation(line: 229, column: 37, scope: !20883, inlinedAt: !22468)
!22473 = !DILocation(line: 181, column: 56, scope: !20891, inlinedAt: !22474)
!22474 = distinct !DILocation(line: 229, column: 2, scope: !20883, inlinedAt: !22468)
!22475 = !DILocation(line: 182, column: 25, scope: !20891, inlinedAt: !22474)
!22476 = !DILocation(line: 184, column: 19, scope: !20891, inlinedAt: !22474)
!22477 = !DILocation(line: 188, column: 2, scope: !20902, inlinedAt: !22474)
!22478 = !DILocation(line: 188, column: 2, scope: !20904, inlinedAt: !22474)
!22479 = !DILocation(line: 189, column: 24, scope: !20906, inlinedAt: !22474)
!22480 = !DILocation(line: 189, column: 32, scope: !20906, inlinedAt: !22474)
!22481 = !DILocation(line: 189, column: 7, scope: !20906, inlinedAt: !22474)
!22482 = !DILocation(line: 189, column: 35, scope: !20906, inlinedAt: !22474)
!22483 = !DILocation(line: 189, column: 7, scope: !20907, inlinedAt: !22474)
!22484 = !DILocation(line: 190, column: 22, scope: !20913, inlinedAt: !22474)
!22485 = !DILocation(line: 190, column: 25, scope: !20913, inlinedAt: !22474)
!22486 = !DILocation(line: 190, column: 30, scope: !20913, inlinedAt: !22474)
!22487 = !DILocation(line: 191, column: 8, scope: !20913, inlinedAt: !22474)
!22488 = !DILocation(line: 191, column: 16, scope: !20913, inlinedAt: !22474)
!22489 = !DILocation(line: 191, column: 21, scope: !20913, inlinedAt: !22474)
!22490 = !DILocation(line: 190, column: 4, scope: !20913, inlinedAt: !22474)
!22491 = !DILocation(line: 192, column: 4, scope: !20913, inlinedAt: !22474)
!22492 = distinct !{!22492, !22477, !22493}
!22493 = !DILocation(line: 194, column: 2, scope: !20902, inlinedAt: !22474)
!22494 = !DILocation(line: 196, column: 19, scope: !20891, inlinedAt: !22474)
!22495 = !DILocation(line: 196, column: 24, scope: !20891, inlinedAt: !22474)
!22496 = !DILocation(line: 196, column: 32, scope: !20891, inlinedAt: !22474)
!22497 = !DILocation(line: 196, column: 37, scope: !20891, inlinedAt: !22474)
!22498 = !DILocation(line: 196, column: 2, scope: !20891, inlinedAt: !22474)
!22499 = !DILocation(line: 197, column: 1, scope: !20891, inlinedAt: !22474)
!22500 = !DILocation(line: 255, column: 2, scope: !20881, inlinedAt: !22458)
!22501 = !DILocation(line: 918, column: 4, scope: !22431)
!22502 = !DILocation(line: 919, column: 3, scope: !22431)
!22503 = !DILocation(line: 920, column: 24, scope: !22504)
!22504 = distinct !DILexicalBlock(scope: !22426, file: !2307, line: 919, column: 10)
!22505 = !DILocation(line: 920, column: 4, scope: !22504)
!22506 = !DILocation(line: 920, column: 12, scope: !22504)
!22507 = !DILocation(line: 920, column: 17, scope: !22504)
!22508 = !DILocation(line: 920, column: 22, scope: !22504)
!22509 = !DILocation(line: 922, column: 2, scope: !22422)
!22510 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22511)
!22511 = distinct !DILocation(line: 906, column: 2, scope: !22420)
!22512 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22511)
!22513 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22511)
!22514 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22511)
!22515 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22516)
!22516 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22511)
!22517 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22516)
!22518 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22516)
!22519 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22516)
!22520 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22516)
!22521 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22516)
!22522 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22516)
!22523 = distinct !{!22523, !22406, !22524}
!22524 = !DILocation(line: 922, column: 2, scope: !22405)
!22525 = !DILocation(line: 924, column: 2, scope: !22397)
!22526 = !DILocation(line: 924, column: 2, scope: !22527)
!22527 = distinct !DILexicalBlock(scope: !22397, file: !2307, line: 924, column: 2)
!22528 = !DILocation(line: 926, column: 9, scope: !22397)
!22529 = !DILocation(line: 926, column: 2, scope: !22397)
!22530 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2307, file: !2307, line: 929, type: !22531, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22531 = !DISubroutineType(types: !22532)
!22532 = !{null, !2208, !103}
!22533 = !DILocalVariable(name: "thread", arg: 1, scope: !22530, file: !2307, line: 929, type: !2208)
!22534 = !DILocation(line: 929, column: 45, scope: !22530)
!22535 = !DILocalVariable(name: "prio", arg: 2, scope: !22530, file: !2307, line: 929, type: !103)
!22536 = !DILocation(line: 929, column: 57, scope: !22530)
!22537 = !DILocalVariable(name: "need_sched", scope: !22530, file: !2307, line: 931, type: !717)
!22538 = !DILocation(line: 931, column: 7, scope: !22530)
!22539 = !DILocation(line: 931, column: 31, scope: !22530)
!22540 = !DILocation(line: 931, column: 39, scope: !22530)
!22541 = !DILocation(line: 931, column: 20, scope: !22530)
!22542 = !DILocation(line: 933, column: 2, scope: !22530)
!22543 = !DILocation(line: 935, column: 6, scope: !22544)
!22544 = distinct !DILexicalBlock(scope: !22530, file: !2307, line: 935, column: 6)
!22545 = !DILocation(line: 935, column: 17, scope: !22544)
!22546 = !DILocation(line: 935, column: 20, scope: !22544)
!22547 = !DILocation(line: 935, column: 30, scope: !22544)
!22548 = !DILocation(line: 935, column: 35, scope: !22544)
!22549 = !DILocation(line: 935, column: 48, scope: !22544)
!22550 = !DILocation(line: 935, column: 6, scope: !22530)
!22551 = !DILocation(line: 936, column: 3, scope: !22552)
!22552 = distinct !DILexicalBlock(scope: !22544, file: !2307, line: 935, column: 55)
!22553 = !DILocation(line: 937, column: 2, scope: !22552)
!22554 = !DILocation(line: 938, column: 1, scope: !22530)
!22555 = distinct !DISubprogram(name: "k_sched_lock", scope: !2307, file: !2307, line: 987, type: !253, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22556 = !DILocalVariable(name: "__i", scope: !22557, file: !2307, line: 989, type: !20433)
!22557 = distinct !DILexicalBlock(scope: !22555, file: !2307, line: 989, column: 2)
!22558 = !DILocation(line: 989, column: 2, scope: !22557)
!22559 = !DILocalVariable(name: "__key", scope: !22557, file: !2307, line: 989, type: !20433)
!22560 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22561)
!22561 = distinct !DILocation(line: 989, column: 2, scope: !22557)
!22562 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22561)
!22563 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22561)
!22564 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22565)
!22565 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22561)
!22566 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22565)
!22567 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22565)
!22568 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22561)
!22569 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22561)
!22570 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22561)
!22571 = !DILocation(line: 989, column: 2, scope: !22572)
!22572 = distinct !DILexicalBlock(scope: !22557, file: !2307, line: 989, column: 2)
!22573 = !DILocation(line: 990, column: 3, scope: !22574)
!22574 = distinct !DILexicalBlock(scope: !22572, file: !2307, line: 989, column: 26)
!22575 = !DILocation(line: 990, column: 3, scope: !22576)
!22576 = distinct !DILexicalBlock(scope: !22574, file: !2307, line: 990, column: 3)
!22577 = !DILocation(line: 992, column: 3, scope: !22574)
!22578 = !DILocation(line: 993, column: 2, scope: !22574)
!22579 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22580)
!22580 = distinct !DILocation(line: 989, column: 2, scope: !22572)
!22581 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22580)
!22582 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22580)
!22583 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22580)
!22584 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22585)
!22585 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22580)
!22586 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22585)
!22587 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22585)
!22588 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22585)
!22589 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22585)
!22590 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22585)
!22591 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22585)
!22592 = distinct !{!22592, !22558, !22593}
!22593 = !DILocation(line: 993, column: 2, scope: !22557)
!22594 = !DILocation(line: 994, column: 1, scope: !22555)
!22595 = distinct !DISubprogram(name: "z_sched_lock", scope: !18865, file: !18865, line: 251, type: !253, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22596 = !DILocation(line: 256, column: 4, scope: !22595)
!22597 = !DILocation(line: 256, column: 14, scope: !22595)
!22598 = !DILocation(line: 256, column: 19, scope: !22595)
!22599 = !DILocation(line: 256, column: 2, scope: !22595)
!22600 = !DILocation(line: 258, column: 2, scope: !22595)
!22601 = !DILocation(line: 258, column: 2, scope: !22602)
!22602 = distinct !DILexicalBlock(scope: !22595, file: !18865, line: 258, column: 2)
!22603 = !{i64 2150511925}
!22604 = !DILocation(line: 259, column: 1, scope: !22595)
!22605 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2307, file: !2307, line: 996, type: !253, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22606 = !DILocalVariable(name: "__i", scope: !22607, file: !2307, line: 998, type: !20433)
!22607 = distinct !DILexicalBlock(scope: !22605, file: !2307, line: 998, column: 2)
!22608 = !DILocation(line: 998, column: 2, scope: !22607)
!22609 = !DILocalVariable(name: "__key", scope: !22607, file: !2307, line: 998, type: !20433)
!22610 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22611)
!22611 = distinct !DILocation(line: 998, column: 2, scope: !22607)
!22612 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22611)
!22613 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22611)
!22614 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22615)
!22615 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22611)
!22616 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22615)
!22617 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22615)
!22618 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22611)
!22619 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22611)
!22620 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22611)
!22621 = !DILocation(line: 998, column: 2, scope: !22622)
!22622 = distinct !DILexicalBlock(scope: !22607, file: !2307, line: 998, column: 2)
!22623 = !DILocation(line: 1002, column: 5, scope: !22624)
!22624 = distinct !DILexicalBlock(scope: !22622, file: !2307, line: 998, column: 26)
!22625 = !DILocation(line: 1002, column: 15, scope: !22624)
!22626 = !DILocation(line: 1002, column: 20, scope: !22624)
!22627 = !DILocation(line: 1002, column: 3, scope: !22624)
!22628 = !DILocation(line: 1003, column: 3, scope: !22624)
!22629 = !DILocation(line: 1004, column: 2, scope: !22624)
!22630 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !22631)
!22631 = distinct !DILocation(line: 998, column: 2, scope: !22622)
!22632 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !22631)
!22633 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !22631)
!22634 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !22631)
!22635 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !22636)
!22636 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !22631)
!22637 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !22636)
!22638 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !22636)
!22639 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !22636)
!22640 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !22636)
!22641 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !22636)
!22642 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !22636)
!22643 = distinct !{!22643, !22608, !22644}
!22644 = !DILocation(line: 1004, column: 2, scope: !22607)
!22645 = !DILocation(line: 1006, column: 2, scope: !22605)
!22646 = !DILocation(line: 1006, column: 2, scope: !22647)
!22647 = distinct !DILexicalBlock(scope: !22648, file: !2307, line: 1006, column: 2)
!22648 = distinct !DILexicalBlock(scope: !22649, file: !2307, line: 1006, column: 2)
!22649 = distinct !DILexicalBlock(scope: !22605, file: !2307, line: 1006, column: 2)
!22650 = !DILocation(line: 1009, column: 2, scope: !22605)
!22651 = !DILocation(line: 1009, column: 2, scope: !22652)
!22652 = distinct !DILexicalBlock(scope: !22605, file: !2307, line: 1009, column: 2)
!22653 = !DILocation(line: 1011, column: 2, scope: !22605)
!22654 = !DILocation(line: 1012, column: 1, scope: !22605)
!22655 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2307, file: !2307, line: 1014, type: !21043, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22656 = !DILocation(line: 1028, column: 25, scope: !22655)
!22657 = !DILocation(line: 1028, column: 2, scope: !22655)
!22658 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2307, file: !2307, line: 1155, type: !22659, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22659 = !DISubroutineType(types: !22660)
!22660 = !{!717, !2237, !2237}
!22661 = !DILocalVariable(name: "a", arg: 1, scope: !22658, file: !2307, line: 1155, type: !2237)
!22662 = !DILocation(line: 1155, column: 40, scope: !22658)
!22663 = !DILocalVariable(name: "b", arg: 2, scope: !22658, file: !2307, line: 1155, type: !2237)
!22664 = !DILocation(line: 1155, column: 58, scope: !22658)
!22665 = !DILocalVariable(name: "thread_a", scope: !22658, file: !2307, line: 1157, type: !2208)
!22666 = !DILocation(line: 1157, column: 19, scope: !22658)
!22667 = !DILocalVariable(name: "thread_b", scope: !22658, file: !2307, line: 1157, type: !2208)
!22668 = !DILocation(line: 1157, column: 30, scope: !22658)
!22669 = !DILocalVariable(name: "cmp", scope: !22658, file: !2307, line: 1158, type: !250)
!22670 = !DILocation(line: 1158, column: 10, scope: !22658)
!22671 = !DILocation(line: 1160, column: 13, scope: !22658)
!22672 = !DILocation(line: 1160, column: 11, scope: !22658)
!22673 = !DILocation(line: 1161, column: 13, scope: !22658)
!22674 = !DILocation(line: 1161, column: 11, scope: !22658)
!22675 = !DILocation(line: 1163, column: 25, scope: !22658)
!22676 = !DILocation(line: 1163, column: 35, scope: !22658)
!22677 = !DILocation(line: 1163, column: 8, scope: !22658)
!22678 = !DILocation(line: 1163, column: 6, scope: !22658)
!22679 = !DILocation(line: 1165, column: 6, scope: !22680)
!22680 = distinct !DILexicalBlock(scope: !22658, file: !2307, line: 1165, column: 6)
!22681 = !DILocation(line: 1165, column: 10, scope: !22680)
!22682 = !DILocation(line: 1165, column: 6, scope: !22658)
!22683 = !DILocation(line: 1166, column: 3, scope: !22684)
!22684 = distinct !DILexicalBlock(scope: !22680, file: !2307, line: 1165, column: 15)
!22685 = !DILocation(line: 1167, column: 13, scope: !22686)
!22686 = distinct !DILexicalBlock(scope: !22680, file: !2307, line: 1167, column: 13)
!22687 = !DILocation(line: 1167, column: 17, scope: !22686)
!22688 = !DILocation(line: 1167, column: 13, scope: !22680)
!22689 = !DILocation(line: 1168, column: 3, scope: !22690)
!22690 = distinct !DILexicalBlock(scope: !22686, file: !2307, line: 1167, column: 22)
!22691 = !DILocation(line: 1170, column: 10, scope: !22692)
!22692 = distinct !DILexicalBlock(scope: !22686, file: !2307, line: 1169, column: 9)
!22693 = !DILocation(line: 1170, column: 20, scope: !22692)
!22694 = !DILocation(line: 1170, column: 25, scope: !22692)
!22695 = !DILocation(line: 1170, column: 37, scope: !22692)
!22696 = !DILocation(line: 1170, column: 47, scope: !22692)
!22697 = !DILocation(line: 1170, column: 52, scope: !22692)
!22698 = !DILocation(line: 1170, column: 35, scope: !22692)
!22699 = !DILocation(line: 1170, column: 3, scope: !22692)
!22700 = !DILocation(line: 1173, column: 1, scope: !22658)
!22701 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2307, file: !2307, line: 1175, type: !22702, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22702 = !DISubroutineType(types: !22703)
!22703 = !{null, !22704, !2208}
!22704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22705, size: 32)
!22705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !22706, line: 37, size: 128, elements: !22707)
!22706 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!22707 = !{!22708, !22716}
!22708 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !22705, file: !22706, line: 38, baseType: !22709, size: 96)
!22709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !140, line: 83, size: 96, elements: !22710)
!22710 = !{!22711, !22712, !22715}
!22711 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !22709, file: !140, line: 84, baseType: !2237, size: 32)
!22712 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !22709, file: !140, line: 85, baseType: !22713, size: 32, offset: 32)
!22713 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !140, line: 81, baseType: !22714)
!22714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22659, size: 32)
!22715 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !22709, file: !140, line: 86, baseType: !103, size: 32, offset: 64)
!22716 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !22705, file: !22706, line: 39, baseType: !103, size: 32, offset: 96)
!22717 = !DILocalVariable(name: "pq", arg: 1, scope: !22701, file: !2307, line: 1175, type: !22704)
!22718 = !DILocation(line: 1175, column: 37, scope: !22701)
!22719 = !DILocalVariable(name: "thread", arg: 2, scope: !22701, file: !2307, line: 1175, type: !2208)
!22720 = !DILocation(line: 1175, column: 58, scope: !22701)
!22721 = !DILocalVariable(name: "t", scope: !22701, file: !2307, line: 1177, type: !2208)
!22722 = !DILocation(line: 1177, column: 19, scope: !22701)
!22723 = !DILocation(line: 1181, column: 27, scope: !22701)
!22724 = !DILocation(line: 1181, column: 31, scope: !22701)
!22725 = !DILocation(line: 1181, column: 45, scope: !22701)
!22726 = !DILocation(line: 1181, column: 2, scope: !22701)
!22727 = !DILocation(line: 1181, column: 10, scope: !22701)
!22728 = !DILocation(line: 1181, column: 15, scope: !22701)
!22729 = !DILocation(line: 1181, column: 25, scope: !22701)
!22730 = !DILocation(line: 1189, column: 7, scope: !22731)
!22731 = distinct !DILexicalBlock(scope: !22701, file: !2307, line: 1189, column: 6)
!22732 = !DILocation(line: 1189, column: 11, scope: !22731)
!22733 = !DILocation(line: 1189, column: 6, scope: !22701)
!22734 = !DILocalVariable(name: "__f", scope: !22735, file: !2307, line: 1190, type: !22737)
!22735 = distinct !DILexicalBlock(scope: !22736, file: !2307, line: 1190, column: 3)
!22736 = distinct !DILexicalBlock(scope: !22731, file: !2307, line: 1189, column: 27)
!22737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !140, line: 155, size: 96, elements: !22738)
!22738 = !{!22739, !22740, !22741}
!22739 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !22737, file: !140, line: 156, baseType: !2302, size: 32)
!22740 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !22737, file: !140, line: 157, baseType: !718, size: 32, offset: 32)
!22741 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !22737, file: !140, line: 158, baseType: !250, size: 32, offset: 64)
!22742 = !DILocation(line: 1190, column: 3, scope: !22735)
!22743 = !DILocalVariable(name: "n", scope: !22744, file: !2307, line: 1190, type: !2237)
!22744 = distinct !DILexicalBlock(scope: !22745, file: !2307, line: 1190, column: 3)
!22745 = distinct !DILexicalBlock(scope: !22735, file: !2307, line: 1190, column: 3)
!22746 = !DILocation(line: 1190, column: 3, scope: !22744)
!22747 = !DILocation(line: 1190, column: 3, scope: !22745)
!22748 = !DILocation(line: 1191, column: 24, scope: !22749)
!22749 = distinct !DILexicalBlock(scope: !22745, file: !2307, line: 1190, column: 54)
!22750 = !DILocation(line: 1191, column: 28, scope: !22749)
!22751 = !DILocation(line: 1191, column: 42, scope: !22749)
!22752 = !DILocation(line: 1191, column: 4, scope: !22749)
!22753 = !DILocation(line: 1191, column: 7, scope: !22749)
!22754 = !DILocation(line: 1191, column: 12, scope: !22749)
!22755 = !DILocation(line: 1191, column: 22, scope: !22749)
!22756 = distinct !{!22756, !22742, !22757}
!22757 = !DILocation(line: 1192, column: 3, scope: !22735)
!22758 = !DILocation(line: 1193, column: 2, scope: !22736)
!22759 = !DILocation(line: 1195, column: 13, scope: !22701)
!22760 = !DILocation(line: 1195, column: 17, scope: !22701)
!22761 = !DILocation(line: 1195, column: 24, scope: !22701)
!22762 = !DILocation(line: 1195, column: 32, scope: !22701)
!22763 = !DILocation(line: 1195, column: 37, scope: !22701)
!22764 = !DILocation(line: 1195, column: 2, scope: !22701)
!22765 = !DILocation(line: 1196, column: 1, scope: !22701)
!22766 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2307, file: !2307, line: 1198, type: !22702, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22767 = !DILocalVariable(name: "pq", arg: 1, scope: !22766, file: !2307, line: 1198, type: !22704)
!22768 = !DILocation(line: 1198, column: 40, scope: !22766)
!22769 = !DILocalVariable(name: "thread", arg: 2, scope: !22766, file: !2307, line: 1198, type: !2208)
!22770 = !DILocation(line: 1198, column: 61, scope: !22766)
!22771 = !DILocation(line: 1202, column: 13, scope: !22766)
!22772 = !DILocation(line: 1202, column: 17, scope: !22766)
!22773 = !DILocation(line: 1202, column: 24, scope: !22766)
!22774 = !DILocation(line: 1202, column: 32, scope: !22766)
!22775 = !DILocation(line: 1202, column: 37, scope: !22766)
!22776 = !DILocation(line: 1202, column: 2, scope: !22766)
!22777 = !DILocation(line: 1204, column: 7, scope: !22778)
!22778 = distinct !DILexicalBlock(scope: !22766, file: !2307, line: 1204, column: 6)
!22779 = !DILocation(line: 1204, column: 11, scope: !22778)
!22780 = !DILocation(line: 1204, column: 16, scope: !22778)
!22781 = !DILocation(line: 1204, column: 6, scope: !22766)
!22782 = !DILocation(line: 1205, column: 3, scope: !22783)
!22783 = distinct !DILexicalBlock(scope: !22778, file: !2307, line: 1204, column: 22)
!22784 = !DILocation(line: 1205, column: 7, scope: !22783)
!22785 = !DILocation(line: 1205, column: 22, scope: !22783)
!22786 = !DILocation(line: 1206, column: 2, scope: !22783)
!22787 = !DILocation(line: 1207, column: 1, scope: !22766)
!22788 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2307, file: !2307, line: 1209, type: !22789, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22789 = !DISubroutineType(types: !22790)
!22790 = !{!2208, !22704}
!22791 = !DILocalVariable(name: "pq", arg: 1, scope: !22788, file: !2307, line: 1209, type: !22704)
!22792 = !DILocation(line: 1209, column: 50, scope: !22788)
!22793 = !DILocalVariable(name: "thread", scope: !22788, file: !2307, line: 1211, type: !2208)
!22794 = !DILocation(line: 1211, column: 19, scope: !22788)
!22795 = !DILocalVariable(name: "n", scope: !22788, file: !2307, line: 1212, type: !2237)
!22796 = !DILocation(line: 1212, column: 17, scope: !22788)
!22797 = !DILocation(line: 1212, column: 33, scope: !22788)
!22798 = !DILocation(line: 1212, column: 37, scope: !22788)
!22799 = !DILocation(line: 1212, column: 21, scope: !22788)
!22800 = !DILocation(line: 1214, column: 6, scope: !22801)
!22801 = distinct !DILexicalBlock(scope: !22788, file: !2307, line: 1214, column: 6)
!22802 = !DILocation(line: 1214, column: 8, scope: !22801)
!22803 = !DILocation(line: 1214, column: 6, scope: !22788)
!22804 = !DILocation(line: 1215, column: 12, scope: !22805)
!22805 = distinct !DILexicalBlock(scope: !22801, file: !2307, line: 1214, column: 17)
!22806 = !DILocation(line: 1215, column: 10, scope: !22805)
!22807 = !DILocation(line: 1216, column: 2, scope: !22805)
!22808 = !DILocation(line: 1217, column: 9, scope: !22788)
!22809 = !DILocation(line: 1217, column: 2, scope: !22788)
!22810 = distinct !DISubprogram(name: "rb_get_min", scope: !140, file: !140, line: 115, type: !22811, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22811 = !DISubroutineType(types: !22812)
!22812 = !{!2237, !22813}
!22813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22709, size: 32)
!22814 = !DILocalVariable(name: "tree", arg: 1, scope: !22810, file: !140, line: 115, type: !22813)
!22815 = !DILocation(line: 115, column: 56, scope: !22810)
!22816 = !DILocation(line: 117, column: 25, scope: !22810)
!22817 = !DILocation(line: 117, column: 9, scope: !22810)
!22818 = !DILocation(line: 117, column: 2, scope: !22810)
!22819 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2307, file: !2307, line: 1246, type: !22820, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22820 = !DISubroutineType(types: !22821)
!22821 = !{!2208, !22822}
!22822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22823, size: 32)
!22823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !22706, line: 53, size: 2080, elements: !22824)
!22824 = !{!22825, !22827}
!22825 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !22823, file: !22706, line: 54, baseType: !22826, size: 2048)
!22826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2244, size: 2048, elements: !1180)
!22827 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !22823, file: !22706, line: 55, baseType: !32, size: 32, offset: 2048)
!22828 = !DILocalVariable(name: "pq", arg: 1, scope: !22819, file: !2307, line: 1246, type: !22822)
!22829 = !DILocation(line: 1246, column: 50, scope: !22819)
!22830 = !DILocation(line: 1248, column: 7, scope: !22831)
!22831 = distinct !DILexicalBlock(scope: !22819, file: !2307, line: 1248, column: 6)
!22832 = !DILocation(line: 1248, column: 11, scope: !22831)
!22833 = !DILocation(line: 1248, column: 6, scope: !22819)
!22834 = !DILocation(line: 1249, column: 3, scope: !22835)
!22835 = distinct !DILexicalBlock(scope: !22831, file: !2307, line: 1248, column: 20)
!22836 = !DILocalVariable(name: "thread", scope: !22819, file: !2307, line: 1252, type: !2208)
!22837 = !DILocation(line: 1252, column: 19, scope: !22819)
!22838 = !DILocalVariable(name: "l", scope: !22819, file: !2307, line: 1253, type: !20894)
!22839 = !DILocation(line: 1253, column: 15, scope: !22819)
!22840 = !DILocation(line: 1253, column: 20, scope: !22819)
!22841 = !DILocation(line: 1253, column: 24, scope: !22819)
!22842 = !DILocation(line: 1253, column: 45, scope: !22819)
!22843 = !DILocation(line: 1253, column: 49, scope: !22819)
!22844 = !DILocation(line: 1253, column: 31, scope: !22819)
!22845 = !DILocalVariable(name: "n", scope: !22819, file: !2307, line: 1254, type: !2303)
!22846 = !DILocation(line: 1254, column: 15, scope: !22819)
!22847 = !DILocation(line: 1254, column: 39, scope: !22819)
!22848 = !DILocation(line: 1254, column: 19, scope: !22819)
!22849 = !DILocation(line: 1256, column: 6, scope: !22850)
!22850 = distinct !DILexicalBlock(scope: !22819, file: !2307, line: 1256, column: 6)
!22851 = !DILocation(line: 1256, column: 8, scope: !22850)
!22852 = !DILocation(line: 1256, column: 6, scope: !22819)
!22853 = !DILocation(line: 1257, column: 12, scope: !22854)
!22854 = distinct !DILexicalBlock(scope: !22850, file: !2307, line: 1256, column: 17)
!22855 = !DILocation(line: 1257, column: 10, scope: !22854)
!22856 = !DILocation(line: 1258, column: 2, scope: !22854)
!22857 = !DILocation(line: 1259, column: 9, scope: !22819)
!22858 = !DILocation(line: 1259, column: 2, scope: !22819)
!22859 = !DILocation(line: 1260, column: 1, scope: !22819)
!22860 = distinct !DISubprogram(name: "z_unpend_all", scope: !2307, file: !2307, line: 1262, type: !22861, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22861 = !DISubroutineType(types: !22862)
!22862 = !{!103, !2239}
!22863 = !DILocalVariable(name: "wait_q", arg: 1, scope: !22860, file: !2307, line: 1262, type: !2239)
!22864 = !DILocation(line: 1262, column: 29, scope: !22860)
!22865 = !DILocalVariable(name: "need_sched", scope: !22860, file: !2307, line: 1264, type: !103)
!22866 = !DILocation(line: 1264, column: 6, scope: !22860)
!22867 = !DILocalVariable(name: "thread", scope: !22860, file: !2307, line: 1265, type: !2208)
!22868 = !DILocation(line: 1265, column: 19, scope: !22860)
!22869 = !DILocation(line: 1267, column: 2, scope: !22860)
!22870 = !DILocation(line: 1267, column: 32, scope: !22860)
!22871 = !DILocation(line: 1267, column: 19, scope: !22860)
!22872 = !DILocation(line: 1267, column: 17, scope: !22860)
!22873 = !DILocation(line: 1267, column: 41, scope: !22860)
!22874 = !DILocation(line: 1268, column: 19, scope: !22875)
!22875 = distinct !DILexicalBlock(scope: !22860, file: !2307, line: 1267, column: 50)
!22876 = !DILocation(line: 1268, column: 3, scope: !22875)
!22877 = !DILocation(line: 1269, column: 18, scope: !22875)
!22878 = !DILocation(line: 1269, column: 3, scope: !22875)
!22879 = !DILocation(line: 1270, column: 14, scope: !22875)
!22880 = distinct !{!22880, !22869, !22881}
!22881 = !DILocation(line: 1271, column: 2, scope: !22860)
!22882 = !DILocation(line: 1273, column: 9, scope: !22860)
!22883 = !DILocation(line: 1273, column: 2, scope: !22860)
!22884 = distinct !DISubprogram(name: "z_waitq_head", scope: !19364, file: !19364, line: 52, type: !22249, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22885 = !DILocalVariable(name: "w", arg: 1, scope: !22884, file: !19364, line: 52, type: !2239)
!22886 = !DILocation(line: 52, column: 56, scope: !22884)
!22887 = !DILocation(line: 54, column: 49, scope: !22884)
!22888 = !DILocation(line: 54, column: 52, scope: !22884)
!22889 = !DILocation(line: 54, column: 28, scope: !22884)
!22890 = !DILocation(line: 54, column: 9, scope: !22884)
!22891 = !DILocation(line: 54, column: 2, scope: !22884)
!22892 = distinct !DISubprogram(name: "init_ready_q", scope: !2307, file: !2307, line: 1276, type: !22893, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22893 = !DISubroutineType(types: !22894)
!22894 = !{null, !22895}
!22895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22896, size: 32)
!22896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !22897)
!22897 = !{!22898, !22899}
!22898 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !22896, file: !150, line: 86, baseType: !2208, size: 32)
!22899 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !22896, file: !150, line: 90, baseType: !2244, size: 64, offset: 32)
!22900 = !DILocalVariable(name: "rq", arg: 1, scope: !22892, file: !2307, line: 1276, type: !22895)
!22901 = !DILocation(line: 1276, column: 36, scope: !22892)
!22902 = !DILocation(line: 1289, column: 18, scope: !22892)
!22903 = !DILocation(line: 1289, column: 22, scope: !22892)
!22904 = !DILocation(line: 1289, column: 2, scope: !22892)
!22905 = !DILocation(line: 1291, column: 1, scope: !22892)
!22906 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !22907, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22907 = !DISubroutineType(types: !22908)
!22908 = !{null, !20894}
!22909 = !DILocalVariable(name: "list", arg: 1, scope: !22906, file: !124, line: 197, type: !20894)
!22910 = !DILocation(line: 197, column: 48, scope: !22906)
!22911 = !DILocation(line: 199, column: 30, scope: !22906)
!22912 = !DILocation(line: 199, column: 2, scope: !22906)
!22913 = !DILocation(line: 199, column: 8, scope: !22906)
!22914 = !DILocation(line: 199, column: 13, scope: !22906)
!22915 = !DILocation(line: 200, column: 30, scope: !22906)
!22916 = !DILocation(line: 200, column: 2, scope: !22906)
!22917 = !DILocation(line: 200, column: 8, scope: !22906)
!22918 = !DILocation(line: 200, column: 13, scope: !22906)
!22919 = !DILocation(line: 201, column: 1, scope: !22906)
!22920 = distinct !DISubprogram(name: "z_sched_init", scope: !2307, file: !2307, line: 1293, type: !253, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22921 = !DILocation(line: 1302, column: 2, scope: !22920)
!22922 = !DILocation(line: 1306, column: 2, scope: !22920)
!22923 = !DILocation(line: 1309, column: 1, scope: !22920)
!22924 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2307, file: !2307, line: 1311, type: !22925, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22925 = !DISubroutineType(types: !22926)
!22926 = !{!103, !22927}
!22927 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !2208)
!22928 = !DILocalVariable(name: "thread", arg: 1, scope: !22924, file: !2307, line: 1311, type: !22927)
!22929 = !DILocation(line: 1311, column: 42, scope: !22924)
!22930 = !DILocation(line: 1313, column: 9, scope: !22924)
!22931 = !DILocation(line: 1313, column: 17, scope: !22924)
!22932 = !DILocation(line: 1313, column: 22, scope: !22924)
!22933 = !DILocation(line: 1313, column: 2, scope: !22924)
!22934 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2307, file: !2307, line: 1325, type: !22935, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22935 = !DISubroutineType(types: !22936)
!22936 = !{null, !22927, !103}
!22937 = !DILocalVariable(name: "thread", arg: 1, scope: !22934, file: !2307, line: 1325, type: !22927)
!22938 = !DILocation(line: 1325, column: 43, scope: !22934)
!22939 = !DILocalVariable(name: "prio", arg: 2, scope: !22934, file: !2307, line: 1325, type: !103)
!22940 = !DILocation(line: 1325, column: 55, scope: !22934)
!22941 = !DILocation(line: 1331, column: 2, scope: !22934)
!22942 = !DILocation(line: 1331, column: 2, scope: !22943)
!22943 = distinct !DILexicalBlock(scope: !22934, file: !2307, line: 1331, column: 2)
!22944 = !DILocalVariable(name: "th", scope: !22934, file: !2307, line: 1334, type: !2208)
!22945 = !DILocation(line: 1334, column: 19, scope: !22934)
!22946 = !DILocation(line: 1334, column: 43, scope: !22934)
!22947 = !DILocation(line: 1336, column: 24, scope: !22934)
!22948 = !DILocation(line: 1336, column: 28, scope: !22934)
!22949 = !DILocation(line: 1336, column: 2, scope: !22934)
!22950 = !DILocation(line: 1337, column: 1, scope: !22934)
!22951 = distinct !DISubprogram(name: "k_can_yield", scope: !2307, file: !2307, line: 1384, type: !3163, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22952 = !DILocation(line: 1386, column: 11, scope: !22951)
!22953 = !DILocation(line: 1386, column: 29, scope: !22951)
!22954 = !DILocation(line: 1386, column: 32, scope: !22951)
!22955 = !DILocation(line: 1386, column: 46, scope: !22951)
!22956 = !DILocation(line: 1387, column: 28, scope: !22951)
!22957 = !DILocation(line: 1387, column: 4, scope: !22951)
!22958 = !DILocation(line: 1386, column: 9, scope: !22951)
!22959 = !DILocation(line: 1386, column: 2, scope: !22951)
!22960 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !109, file: !109, line: 989, type: !3163, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22961 = !DILocation(line: 993, column: 10, scope: !22960)
!22962 = !DILocation(line: 993, column: 9, scope: !22960)
!22963 = !DILocation(line: 993, column: 2, scope: !22960)
!22964 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2307, file: !2307, line: 1390, type: !253, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!22965 = !DILocation(line: 1394, column: 2, scope: !22964)
!22966 = !DILocation(line: 1394, column: 2, scope: !22967)
!22967 = distinct !DILexicalBlock(scope: !22964, file: !2307, line: 1394, column: 2)
!22968 = !DILocalVariable(name: "key", scope: !22964, file: !2307, line: 1396, type: !20433)
!22969 = !DILocation(line: 1396, column: 19, scope: !22964)
!22970 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !22971)
!22971 = distinct !DILocation(line: 1396, column: 25, scope: !22964)
!22972 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !22971)
!22973 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !22971)
!22974 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !22975)
!22975 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !22971)
!22976 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !22975)
!22977 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !22975)
!22978 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !22971)
!22979 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !22971)
!22980 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !22971)
!22981 = !DILocation(line: 1396, column: 25, scope: !22964)
!22982 = !DILocation(line: 1400, column: 18, scope: !22983)
!22983 = distinct !DILexicalBlock(scope: !22984, file: !2307, line: 1399, column: 36)
!22984 = distinct !DILexicalBlock(scope: !22964, file: !2307, line: 1398, column: 6)
!22985 = !DILocation(line: 264, column: 59, scope: !20838, inlinedAt: !22986)
!22986 = distinct !DILocation(line: 1400, column: 3, scope: !22983)
!22987 = !DILocation(line: 266, column: 2, scope: !20838, inlinedAt: !22986)
!22988 = !DILocation(line: 266, column: 10, scope: !20838, inlinedAt: !22986)
!22989 = !DILocation(line: 266, column: 15, scope: !20838, inlinedAt: !22986)
!22990 = !DILocation(line: 266, column: 28, scope: !20838, inlinedAt: !22986)
!22991 = !DILocation(line: 267, column: 26, scope: !20846, inlinedAt: !22986)
!22992 = !DILocation(line: 267, column: 6, scope: !20846, inlinedAt: !22986)
!22993 = !DILocation(line: 267, column: 6, scope: !20838, inlinedAt: !22986)
!22994 = !DILocation(line: 268, column: 15, scope: !20850, inlinedAt: !22986)
!22995 = !DILocation(line: 232, column: 56, scope: !20852, inlinedAt: !22996)
!22996 = distinct !DILocation(line: 268, column: 3, scope: !20850, inlinedAt: !22986)
!22997 = !DILocation(line: 234, column: 31, scope: !20852, inlinedAt: !22996)
!22998 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !22999)
!22999 = distinct !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !22996)
!23000 = !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !22996)
!23001 = !DILocation(line: 234, column: 40, scope: !20852, inlinedAt: !22996)
!23002 = !DILocation(line: 234, column: 2, scope: !20852, inlinedAt: !22996)
!23003 = !DILocation(line: 269, column: 2, scope: !20850, inlinedAt: !22986)
!23004 = !DILocation(line: 1402, column: 15, scope: !22964)
!23005 = !DILocation(line: 250, column: 57, scope: !20869, inlinedAt: !23006)
!23006 = distinct !DILocation(line: 1402, column: 2, scope: !22964)
!23007 = !DILocation(line: 252, column: 2, scope: !20869, inlinedAt: !23006)
!23008 = !DILocation(line: 252, column: 10, scope: !20869, inlinedAt: !23006)
!23009 = !DILocation(line: 252, column: 15, scope: !20869, inlinedAt: !23006)
!23010 = !DILocation(line: 252, column: 28, scope: !20869, inlinedAt: !23006)
!23011 = !DILocation(line: 253, column: 26, scope: !20877, inlinedAt: !23006)
!23012 = !DILocation(line: 253, column: 6, scope: !20877, inlinedAt: !23006)
!23013 = !DILocation(line: 253, column: 6, scope: !20869, inlinedAt: !23006)
!23014 = !DILocation(line: 254, column: 12, scope: !20881, inlinedAt: !23006)
!23015 = !DILocation(line: 227, column: 53, scope: !20883, inlinedAt: !23016)
!23016 = distinct !DILocation(line: 254, column: 3, scope: !20881, inlinedAt: !23006)
!23017 = !DILocation(line: 229, column: 28, scope: !20883, inlinedAt: !23016)
!23018 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !23019)
!23019 = distinct !DILocation(line: 229, column: 16, scope: !20883, inlinedAt: !23016)
!23020 = !DILocation(line: 229, column: 37, scope: !20883, inlinedAt: !23016)
!23021 = !DILocation(line: 181, column: 56, scope: !20891, inlinedAt: !23022)
!23022 = distinct !DILocation(line: 229, column: 2, scope: !20883, inlinedAt: !23016)
!23023 = !DILocation(line: 182, column: 25, scope: !20891, inlinedAt: !23022)
!23024 = !DILocation(line: 184, column: 19, scope: !20891, inlinedAt: !23022)
!23025 = !DILocation(line: 188, column: 2, scope: !20902, inlinedAt: !23022)
!23026 = !DILocation(line: 188, column: 2, scope: !20904, inlinedAt: !23022)
!23027 = !DILocation(line: 189, column: 24, scope: !20906, inlinedAt: !23022)
!23028 = !DILocation(line: 189, column: 32, scope: !20906, inlinedAt: !23022)
!23029 = !DILocation(line: 189, column: 7, scope: !20906, inlinedAt: !23022)
!23030 = !DILocation(line: 189, column: 35, scope: !20906, inlinedAt: !23022)
!23031 = !DILocation(line: 189, column: 7, scope: !20907, inlinedAt: !23022)
!23032 = !DILocation(line: 190, column: 22, scope: !20913, inlinedAt: !23022)
!23033 = !DILocation(line: 190, column: 25, scope: !20913, inlinedAt: !23022)
!23034 = !DILocation(line: 190, column: 30, scope: !20913, inlinedAt: !23022)
!23035 = !DILocation(line: 191, column: 8, scope: !20913, inlinedAt: !23022)
!23036 = !DILocation(line: 191, column: 16, scope: !20913, inlinedAt: !23022)
!23037 = !DILocation(line: 191, column: 21, scope: !20913, inlinedAt: !23022)
!23038 = !DILocation(line: 190, column: 4, scope: !20913, inlinedAt: !23022)
!23039 = !DILocation(line: 192, column: 4, scope: !20913, inlinedAt: !23022)
!23040 = distinct !{!23040, !23025, !23041}
!23041 = !DILocation(line: 194, column: 2, scope: !20902, inlinedAt: !23022)
!23042 = !DILocation(line: 196, column: 19, scope: !20891, inlinedAt: !23022)
!23043 = !DILocation(line: 196, column: 24, scope: !20891, inlinedAt: !23022)
!23044 = !DILocation(line: 196, column: 32, scope: !20891, inlinedAt: !23022)
!23045 = !DILocation(line: 196, column: 37, scope: !20891, inlinedAt: !23022)
!23046 = !DILocation(line: 196, column: 2, scope: !20891, inlinedAt: !23022)
!23047 = !DILocation(line: 197, column: 1, scope: !20891, inlinedAt: !23022)
!23048 = !DILocation(line: 255, column: 2, scope: !20881, inlinedAt: !23006)
!23049 = !DILocation(line: 1403, column: 2, scope: !22964)
!23050 = !DILocation(line: 1404, column: 2, scope: !22964)
!23051 = !DILocation(line: 193, column: 52, scope: !21524, inlinedAt: !23052)
!23052 = distinct !DILocation(line: 1404, column: 2, scope: !22964)
!23053 = !DILocation(line: 193, column: 75, scope: !21524, inlinedAt: !23052)
!23054 = !DILocation(line: 195, column: 17, scope: !21524, inlinedAt: !23052)
!23055 = !DILocation(line: 221, column: 61, scope: !21533, inlinedAt: !23056)
!23056 = distinct !DILocation(line: 195, column: 2, scope: !21524, inlinedAt: !23052)
!23057 = !DILocation(line: 223, column: 2, scope: !21533, inlinedAt: !23056)
!23058 = !DILocation(line: 196, column: 28, scope: !21524, inlinedAt: !23052)
!23059 = !DILocation(line: 196, column: 9, scope: !21524, inlinedAt: !23052)
!23060 = !DILocation(line: 1405, column: 1, scope: !22964)
!23061 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2307, file: !2307, line: 1459, type: !23062, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23062 = !DISubroutineType(types: !23063)
!23063 = !{!250, !21814}
!23064 = !DILocalVariable(name: "timeout", arg: 1, scope: !23061, file: !2307, line: 1459, type: !21814)
!23065 = !DILocation(line: 1459, column: 36, scope: !23061)
!23066 = !DILocalVariable(name: "ticks", scope: !23061, file: !2307, line: 1461, type: !293)
!23067 = !DILocation(line: 1461, column: 12, scope: !23061)
!23068 = !DILocation(line: 1465, column: 2, scope: !23061)
!23069 = !DILocation(line: 1465, column: 2, scope: !23070)
!23070 = distinct !DILexicalBlock(scope: !23061, file: !2307, line: 1465, column: 2)
!23071 = !DILocation(line: 1468, column: 6, scope: !23072)
!23072 = distinct !DILexicalBlock(scope: !23061, file: !2307, line: 1468, column: 6)
!23073 = !DILocation(line: 1468, column: 6, scope: !23061)
!23074 = !DILocation(line: 1469, column: 20, scope: !23075)
!23075 = distinct !DILexicalBlock(scope: !23072, file: !2307, line: 1468, column: 40)
!23076 = !DILocation(line: 1469, column: 3, scope: !23075)
!23077 = !DILocation(line: 1471, column: 3, scope: !23075)
!23078 = !DILocation(line: 1471, column: 3, scope: !23079)
!23079 = distinct !DILexicalBlock(scope: !23075, file: !2307, line: 1471, column: 3)
!23080 = !DILocation(line: 1473, column: 3, scope: !23075)
!23081 = !DILocation(line: 1476, column: 18, scope: !23061)
!23082 = !DILocation(line: 1476, column: 8, scope: !23061)
!23083 = !DILocation(line: 1478, column: 23, scope: !23061)
!23084 = !DILocation(line: 1478, column: 10, scope: !23061)
!23085 = !DILocation(line: 1478, column: 8, scope: !23061)
!23086 = !DILocalVariable(name: "ret", scope: !23061, file: !2307, line: 1480, type: !250)
!23087 = !DILocation(line: 1480, column: 10, scope: !23061)
!23088 = !DILocation(line: 1480, column: 38, scope: !23061)
!23089 = !DILocation(line: 1480, column: 16, scope: !23061)
!23090 = !DILocation(line: 1482, column: 2, scope: !23061)
!23091 = !DILocation(line: 1482, column: 2, scope: !23092)
!23092 = distinct !DILexicalBlock(scope: !23061, file: !2307, line: 1482, column: 2)
!23093 = !DILocation(line: 1484, column: 9, scope: !23061)
!23094 = !DILocation(line: 1484, column: 2, scope: !23061)
!23095 = !DILocation(line: 1485, column: 1, scope: !23061)
!23096 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3240, file: !3240, line: 310, type: !23097, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23097 = !DISubroutineType(types: !23098)
!23098 = !{null, !22927}
!23099 = !DILocalVariable(name: "thread", arg: 1, scope: !23096, file: !3240, line: 310, type: !22927)
!23100 = !DILocation(line: 310, column: 45, scope: !23096)
!23101 = !DILocation(line: 319, column: 2, scope: !23096)
!23102 = !DILocation(line: 319, column: 2, scope: !23103)
!23103 = distinct !DILexicalBlock(scope: !23096, file: !3240, line: 319, column: 2)
!23104 = !{i64 2149673735}
!23105 = !DILocation(line: 320, column: 26, scope: !23096)
!23106 = !DILocation(line: 320, column: 2, scope: !23096)
!23107 = !DILocation(line: 321, column: 1, scope: !23096)
!23108 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2307, file: !2307, line: 1415, type: !23109, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23109 = !DISubroutineType(types: !23110)
!23110 = !{!250, !293}
!23111 = !DILocalVariable(name: "ticks", arg: 1, scope: !23108, file: !2307, line: 1415, type: !293)
!23112 = !DILocation(line: 1415, column: 39, scope: !23108)
!23113 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !23108, file: !2307, line: 1418, type: !173)
!23114 = !DILocation(line: 1418, column: 11, scope: !23108)
!23115 = !DILocation(line: 1422, column: 2, scope: !23108)
!23116 = !DILocation(line: 1422, column: 2, scope: !23117)
!23117 = distinct !DILexicalBlock(scope: !23118, file: !2307, line: 1422, column: 2)
!23118 = distinct !DILexicalBlock(scope: !23119, file: !2307, line: 1422, column: 2)
!23119 = distinct !DILexicalBlock(scope: !23108, file: !2307, line: 1422, column: 2)
!23120 = !DILocation(line: 1425, column: 6, scope: !23121)
!23121 = distinct !DILexicalBlock(scope: !23108, file: !2307, line: 1425, column: 6)
!23122 = !DILocation(line: 1425, column: 12, scope: !23121)
!23123 = !DILocation(line: 1425, column: 6, scope: !23108)
!23124 = !DILocation(line: 1426, column: 3, scope: !23125)
!23125 = distinct !DILexicalBlock(scope: !23121, file: !2307, line: 1425, column: 18)
!23126 = !DILocation(line: 1427, column: 3, scope: !23125)
!23127 = !DILocalVariable(name: "timeout", scope: !23108, file: !2307, line: 1430, type: !21814)
!23128 = !DILocation(line: 1430, column: 14, scope: !23108)
!23129 = !DILocation(line: 1430, column: 24, scope: !23108)
!23130 = !DILocation(line: 1431, column: 6, scope: !23131)
!23131 = distinct !DILexicalBlock(scope: !23108, file: !2307, line: 1431, column: 6)
!23132 = !DILocation(line: 1431, column: 24, scope: !23131)
!23133 = !DILocation(line: 1431, column: 6, scope: !23108)
!23134 = !DILocation(line: 1432, column: 27, scope: !23135)
!23135 = distinct !DILexicalBlock(scope: !23131, file: !2307, line: 1431, column: 30)
!23136 = !DILocation(line: 1432, column: 35, scope: !23135)
!23137 = !DILocation(line: 1432, column: 33, scope: !23135)
!23138 = !DILocation(line: 1432, column: 25, scope: !23135)
!23139 = !DILocation(line: 1433, column: 2, scope: !23135)
!23140 = !DILocation(line: 1434, column: 27, scope: !23141)
!23141 = distinct !DILexicalBlock(scope: !23131, file: !2307, line: 1433, column: 9)
!23142 = !DILocation(line: 1434, column: 25, scope: !23141)
!23143 = !DILocalVariable(name: "key", scope: !23108, file: !2307, line: 1437, type: !20433)
!23144 = !DILocation(line: 1437, column: 19, scope: !23108)
!23145 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !23146)
!23146 = distinct !DILocation(line: 1437, column: 25, scope: !23108)
!23147 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !23146)
!23148 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !23146)
!23149 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !23150)
!23150 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !23146)
!23151 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !23150)
!23152 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !23150)
!23153 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !23146)
!23154 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !23146)
!23155 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !23146)
!23156 = !DILocation(line: 1437, column: 25, scope: !23108)
!23157 = !DILocation(line: 1440, column: 20, scope: !23108)
!23158 = !DILocation(line: 1440, column: 18, scope: !23108)
!23159 = !DILocation(line: 1442, column: 17, scope: !23108)
!23160 = !DILocation(line: 1442, column: 2, scope: !23108)
!23161 = !DILocation(line: 1443, column: 23, scope: !23108)
!23162 = !DILocation(line: 1443, column: 2, scope: !23108)
!23163 = !DILocation(line: 1444, column: 29, scope: !23108)
!23164 = !DILocation(line: 1444, column: 2, scope: !23108)
!23165 = !DILocation(line: 1446, column: 8, scope: !23108)
!23166 = !DILocation(line: 193, column: 52, scope: !21524, inlinedAt: !23167)
!23167 = distinct !DILocation(line: 1446, column: 8, scope: !23108)
!23168 = !DILocation(line: 193, column: 75, scope: !21524, inlinedAt: !23167)
!23169 = !DILocation(line: 195, column: 17, scope: !21524, inlinedAt: !23167)
!23170 = !DILocation(line: 221, column: 61, scope: !21533, inlinedAt: !23171)
!23171 = distinct !DILocation(line: 195, column: 2, scope: !21524, inlinedAt: !23167)
!23172 = !DILocation(line: 223, column: 2, scope: !21533, inlinedAt: !23171)
!23173 = !DILocation(line: 196, column: 28, scope: !21524, inlinedAt: !23167)
!23174 = !DILocation(line: 196, column: 9, scope: !21524, inlinedAt: !23167)
!23175 = !DILocation(line: 1450, column: 21, scope: !23108)
!23176 = !DILocation(line: 1450, column: 10, scope: !23108)
!23177 = !DILocation(line: 1450, column: 45, scope: !23108)
!23178 = !DILocation(line: 1450, column: 43, scope: !23108)
!23179 = !DILocation(line: 1450, column: 8, scope: !23108)
!23180 = !DILocation(line: 1451, column: 6, scope: !23181)
!23181 = distinct !DILexicalBlock(scope: !23108, file: !2307, line: 1451, column: 6)
!23182 = !DILocation(line: 1451, column: 12, scope: !23181)
!23183 = !DILocation(line: 1451, column: 6, scope: !23108)
!23184 = !DILocation(line: 1452, column: 10, scope: !23185)
!23185 = distinct !DILexicalBlock(scope: !23181, file: !2307, line: 1451, column: 17)
!23186 = !DILocation(line: 1452, column: 3, scope: !23185)
!23187 = !DILocation(line: 1456, column: 2, scope: !23108)
!23188 = !DILocation(line: 1457, column: 1, scope: !23108)
!23189 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !7339, file: !7339, line: 1103, type: !10983, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23190 = !DILocalVariable(name: "t", arg: 1, scope: !23189, file: !7339, line: 1103, type: !312)
!23191 = !DILocation(line: 1103, column: 70, scope: !23189)
!23192 = !DILocation(line: 1106, column: 17, scope: !23189)
!23193 = !DILocation(line: 102, column: 63, scope: !20510, inlinedAt: !23194)
!23194 = distinct !DILocation(line: 1106, column: 9, scope: !23189)
!23195 = !DILocation(line: 102, column: 75, scope: !20510, inlinedAt: !23194)
!23196 = !DILocation(line: 103, column: 18, scope: !20510, inlinedAt: !23194)
!23197 = !DILocation(line: 103, column: 30, scope: !20510, inlinedAt: !23194)
!23198 = !DILocation(line: 104, column: 14, scope: !20510, inlinedAt: !23194)
!23199 = !DILocation(line: 104, column: 29, scope: !20510, inlinedAt: !23194)
!23200 = !DILocation(line: 105, column: 14, scope: !20510, inlinedAt: !23194)
!23201 = !DILocation(line: 107, column: 7, scope: !20510, inlinedAt: !23194)
!23202 = !DILocation(line: 107, column: 19, scope: !20510, inlinedAt: !23194)
!23203 = !DILocation(line: 107, column: 28, scope: !20510, inlinedAt: !23194)
!23204 = !DILocation(line: 108, column: 4, scope: !20510, inlinedAt: !23194)
!23205 = !DILocation(line: 108, column: 12, scope: !20510, inlinedAt: !23194)
!23206 = !DILocation(line: 108, column: 10, scope: !20510, inlinedAt: !23194)
!23207 = !DILocation(line: 108, column: 21, scope: !20510, inlinedAt: !23194)
!23208 = !DILocation(line: 108, column: 26, scope: !20510, inlinedAt: !23194)
!23209 = !DILocation(line: 108, column: 34, scope: !20510, inlinedAt: !23194)
!23210 = !DILocation(line: 108, column: 32, scope: !20510, inlinedAt: !23194)
!23211 = !DILocation(line: 108, column: 43, scope: !20510, inlinedAt: !23194)
!23212 = !DILocation(line: 0, scope: !20510, inlinedAt: !23194)
!23213 = !DILocation(line: 109, column: 7, scope: !20510, inlinedAt: !23194)
!23214 = !DILocation(line: 109, column: 19, scope: !20510, inlinedAt: !23194)
!23215 = !DILocation(line: 109, column: 28, scope: !20510, inlinedAt: !23194)
!23216 = !DILocation(line: 110, column: 4, scope: !20510, inlinedAt: !23194)
!23217 = !DILocation(line: 110, column: 14, scope: !20510, inlinedAt: !23194)
!23218 = !DILocation(line: 110, column: 12, scope: !20510, inlinedAt: !23194)
!23219 = !DILocation(line: 110, column: 21, scope: !20510, inlinedAt: !23194)
!23220 = !DILocation(line: 110, column: 26, scope: !20510, inlinedAt: !23194)
!23221 = !DILocation(line: 110, column: 36, scope: !20510, inlinedAt: !23194)
!23222 = !DILocation(line: 110, column: 34, scope: !20510, inlinedAt: !23194)
!23223 = !DILocation(line: 110, column: 43, scope: !20510, inlinedAt: !23194)
!23224 = !DILocation(line: 112, column: 6, scope: !20551, inlinedAt: !23194)
!23225 = !DILocation(line: 112, column: 17, scope: !20551, inlinedAt: !23194)
!23226 = !DILocation(line: 112, column: 14, scope: !20551, inlinedAt: !23194)
!23227 = !DILocation(line: 112, column: 6, scope: !20510, inlinedAt: !23194)
!23228 = !DILocation(line: 113, column: 10, scope: !20556, inlinedAt: !23194)
!23229 = !DILocation(line: 113, column: 32, scope: !20556, inlinedAt: !23194)
!23230 = !DILocation(line: 113, column: 22, scope: !20556, inlinedAt: !23194)
!23231 = !DILocation(line: 113, column: 21, scope: !20556, inlinedAt: !23194)
!23232 = !DILocation(line: 113, column: 37, scope: !20556, inlinedAt: !23194)
!23233 = !DILocation(line: 113, column: 3, scope: !20556, inlinedAt: !23194)
!23234 = !DILocation(line: 116, column: 11, scope: !20510, inlinedAt: !23194)
!23235 = !DILocation(line: 118, column: 7, scope: !20565, inlinedAt: !23194)
!23236 = !DILocation(line: 118, column: 6, scope: !20510, inlinedAt: !23194)
!23237 = !DILocation(line: 119, column: 12, scope: !20568, inlinedAt: !23194)
!23238 = !DILocation(line: 119, column: 23, scope: !20568, inlinedAt: !23194)
!23239 = !DILocation(line: 119, column: 36, scope: !20568, inlinedAt: !23194)
!23240 = !DILocation(line: 119, column: 46, scope: !20568, inlinedAt: !23194)
!23241 = !DILocation(line: 119, column: 44, scope: !20568, inlinedAt: !23194)
!23242 = !DILocation(line: 119, column: 55, scope: !20568, inlinedAt: !23194)
!23243 = !DILocation(line: 121, column: 7, scope: !20576, inlinedAt: !23194)
!23244 = !DILocation(line: 121, column: 7, scope: !20568, inlinedAt: !23194)
!23245 = !DILocation(line: 122, column: 10, scope: !20579, inlinedAt: !23194)
!23246 = !DILocation(line: 122, column: 19, scope: !20579, inlinedAt: !23194)
!23247 = !DILocation(line: 122, column: 8, scope: !20579, inlinedAt: !23194)
!23248 = !DILocation(line: 123, column: 3, scope: !20579, inlinedAt: !23194)
!23249 = !DILocation(line: 124, column: 7, scope: !20584, inlinedAt: !23194)
!23250 = !DILocation(line: 124, column: 7, scope: !20568, inlinedAt: !23194)
!23251 = !DILocation(line: 125, column: 10, scope: !20587, inlinedAt: !23194)
!23252 = !DILocation(line: 125, column: 19, scope: !20587, inlinedAt: !23194)
!23253 = !DILocation(line: 125, column: 8, scope: !20587, inlinedAt: !23194)
!23254 = !DILocation(line: 126, column: 3, scope: !20587, inlinedAt: !23194)
!23255 = !DILocation(line: 127, column: 2, scope: !20568, inlinedAt: !23194)
!23256 = !DILocation(line: 134, column: 6, scope: !20593, inlinedAt: !23194)
!23257 = !DILocation(line: 134, column: 6, scope: !20510, inlinedAt: !23194)
!23258 = !DILocation(line: 135, column: 8, scope: !20596, inlinedAt: !23194)
!23259 = !DILocation(line: 135, column: 5, scope: !20596, inlinedAt: !23194)
!23260 = !DILocation(line: 136, column: 7, scope: !20599, inlinedAt: !23194)
!23261 = !DILocation(line: 136, column: 16, scope: !20599, inlinedAt: !23194)
!23262 = !DILocation(line: 136, column: 20, scope: !20599, inlinedAt: !23194)
!23263 = !DILocation(line: 136, column: 22, scope: !20599, inlinedAt: !23194)
!23264 = !DILocation(line: 136, column: 7, scope: !20596, inlinedAt: !23194)
!23265 = !DILocation(line: 137, column: 22, scope: !20605, inlinedAt: !23194)
!23266 = !DILocation(line: 137, column: 12, scope: !20605, inlinedAt: !23194)
!23267 = !DILocation(line: 137, column: 28, scope: !20605, inlinedAt: !23194)
!23268 = !DILocation(line: 137, column: 38, scope: !20605, inlinedAt: !23194)
!23269 = !DILocation(line: 137, column: 36, scope: !20605, inlinedAt: !23194)
!23270 = !DILocation(line: 137, column: 25, scope: !20605, inlinedAt: !23194)
!23271 = !DILocation(line: 137, column: 11, scope: !20605, inlinedAt: !23194)
!23272 = !DILocation(line: 137, column: 4, scope: !20605, inlinedAt: !23194)
!23273 = !DILocation(line: 139, column: 11, scope: !20614, inlinedAt: !23194)
!23274 = !DILocation(line: 139, column: 26, scope: !20614, inlinedAt: !23194)
!23275 = !DILocation(line: 139, column: 16, scope: !20614, inlinedAt: !23194)
!23276 = !DILocation(line: 139, column: 36, scope: !20614, inlinedAt: !23194)
!23277 = !DILocation(line: 139, column: 34, scope: !20614, inlinedAt: !23194)
!23278 = !DILocation(line: 139, column: 13, scope: !20614, inlinedAt: !23194)
!23279 = !DILocation(line: 139, column: 4, scope: !20614, inlinedAt: !23194)
!23280 = !DILocation(line: 141, column: 13, scope: !20622, inlinedAt: !23194)
!23281 = !DILocation(line: 141, column: 13, scope: !20593, inlinedAt: !23194)
!23282 = !DILocation(line: 142, column: 7, scope: !20625, inlinedAt: !23194)
!23283 = !DILocation(line: 142, column: 7, scope: !20626, inlinedAt: !23194)
!23284 = !DILocation(line: 143, column: 22, scope: !20629, inlinedAt: !23194)
!23285 = !DILocation(line: 143, column: 12, scope: !20629, inlinedAt: !23194)
!23286 = !DILocation(line: 143, column: 28, scope: !20629, inlinedAt: !23194)
!23287 = !DILocation(line: 143, column: 36, scope: !20629, inlinedAt: !23194)
!23288 = !DILocation(line: 143, column: 34, scope: !20629, inlinedAt: !23194)
!23289 = !DILocation(line: 143, column: 25, scope: !20629, inlinedAt: !23194)
!23290 = !DILocation(line: 143, column: 11, scope: !20629, inlinedAt: !23194)
!23291 = !DILocation(line: 143, column: 4, scope: !20629, inlinedAt: !23194)
!23292 = !DILocation(line: 145, column: 11, scope: !20638, inlinedAt: !23194)
!23293 = !DILocation(line: 145, column: 26, scope: !20638, inlinedAt: !23194)
!23294 = !DILocation(line: 145, column: 16, scope: !20638, inlinedAt: !23194)
!23295 = !DILocation(line: 145, column: 34, scope: !20638, inlinedAt: !23194)
!23296 = !DILocation(line: 145, column: 32, scope: !20638, inlinedAt: !23194)
!23297 = !DILocation(line: 145, column: 13, scope: !20638, inlinedAt: !23194)
!23298 = !DILocation(line: 145, column: 4, scope: !20638, inlinedAt: !23194)
!23299 = !DILocation(line: 148, column: 7, scope: !20646, inlinedAt: !23194)
!23300 = !DILocation(line: 148, column: 7, scope: !20647, inlinedAt: !23194)
!23301 = !DILocation(line: 149, column: 23, scope: !20650, inlinedAt: !23194)
!23302 = !DILocation(line: 149, column: 27, scope: !20650, inlinedAt: !23194)
!23303 = !DILocation(line: 149, column: 25, scope: !20650, inlinedAt: !23194)
!23304 = !DILocation(line: 149, column: 35, scope: !20650, inlinedAt: !23194)
!23305 = !DILocation(line: 149, column: 33, scope: !20650, inlinedAt: !23194)
!23306 = !DILocation(line: 149, column: 42, scope: !20650, inlinedAt: !23194)
!23307 = !DILocation(line: 149, column: 40, scope: !20650, inlinedAt: !23194)
!23308 = !DILocation(line: 149, column: 11, scope: !20650, inlinedAt: !23194)
!23309 = !DILocation(line: 149, column: 4, scope: !20650, inlinedAt: !23194)
!23310 = !DILocation(line: 150, column: 14, scope: !20660, inlinedAt: !23194)
!23311 = !DILocation(line: 150, column: 23, scope: !20660, inlinedAt: !23194)
!23312 = !DILocation(line: 150, column: 26, scope: !20660, inlinedAt: !23194)
!23313 = !DILocation(line: 150, column: 14, scope: !20646, inlinedAt: !23194)
!23314 = !DILocation(line: 156, column: 13, scope: !20665, inlinedAt: !23194)
!23315 = !DILocation(line: 156, column: 17, scope: !20665, inlinedAt: !23194)
!23316 = !DILocation(line: 156, column: 15, scope: !20665, inlinedAt: !23194)
!23317 = !DILocation(line: 156, column: 25, scope: !20665, inlinedAt: !23194)
!23318 = !DILocation(line: 156, column: 23, scope: !20665, inlinedAt: !23194)
!23319 = !DILocation(line: 156, column: 32, scope: !20665, inlinedAt: !23194)
!23320 = !DILocation(line: 156, column: 30, scope: !20665, inlinedAt: !23194)
!23321 = !DILocation(line: 156, column: 4, scope: !20665, inlinedAt: !23194)
!23322 = !DILocation(line: 161, column: 12, scope: !20674, inlinedAt: !23194)
!23323 = !DILocation(line: 161, column: 16, scope: !20674, inlinedAt: !23194)
!23324 = !DILocation(line: 161, column: 14, scope: !20674, inlinedAt: !23194)
!23325 = !DILocation(line: 161, column: 27, scope: !20674, inlinedAt: !23194)
!23326 = !DILocation(line: 161, column: 25, scope: !20674, inlinedAt: !23194)
!23327 = !DILocation(line: 161, column: 37, scope: !20674, inlinedAt: !23194)
!23328 = !DILocation(line: 161, column: 41, scope: !20674, inlinedAt: !23194)
!23329 = !DILocation(line: 161, column: 39, scope: !20674, inlinedAt: !23194)
!23330 = !DILocation(line: 161, column: 52, scope: !20674, inlinedAt: !23194)
!23331 = !DILocation(line: 161, column: 50, scope: !20674, inlinedAt: !23194)
!23332 = !DILocation(line: 161, column: 60, scope: !20674, inlinedAt: !23194)
!23333 = !DILocation(line: 161, column: 58, scope: !20674, inlinedAt: !23194)
!23334 = !DILocation(line: 161, column: 67, scope: !20674, inlinedAt: !23194)
!23335 = !DILocation(line: 161, column: 65, scope: !20674, inlinedAt: !23194)
!23336 = !DILocation(line: 161, column: 33, scope: !20674, inlinedAt: !23194)
!23337 = !DILocation(line: 161, column: 4, scope: !20674, inlinedAt: !23194)
!23338 = !DILocation(line: 164, column: 1, scope: !20510, inlinedAt: !23194)
!23339 = !DILocation(line: 1106, column: 2, scope: !23189)
!23340 = distinct !DISubprogram(name: "k_yield", scope: !3240, file: !3240, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23341 = !DILocation(line: 148, column: 2, scope: !23340)
!23342 = !DILocation(line: 148, column: 2, scope: !23343)
!23343 = distinct !DILexicalBlock(scope: !23340, file: !3240, line: 148, column: 2)
!23344 = !{i64 2149673055}
!23345 = !DILocation(line: 149, column: 2, scope: !23340)
!23346 = !DILocation(line: 150, column: 1, scope: !23340)
!23347 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2307, file: !2307, line: 1495, type: !23348, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23348 = !DISubroutineType(types: !23349)
!23349 = !{!250, !103}
!23350 = !DILocalVariable(name: "us", arg: 1, scope: !23347, file: !2307, line: 1495, type: !103)
!23351 = !DILocation(line: 1495, column: 29, scope: !23347)
!23352 = !DILocalVariable(name: "ticks", scope: !23347, file: !2307, line: 1497, type: !250)
!23353 = !DILocation(line: 1497, column: 10, scope: !23347)
!23354 = !DILocation(line: 1499, column: 2, scope: !23347)
!23355 = !DILocation(line: 1499, column: 2, scope: !23356)
!23356 = distinct !DILexicalBlock(scope: !23347, file: !2307, line: 1499, column: 2)
!23357 = !DILocation(line: 1501, column: 31, scope: !23347)
!23358 = !DILocation(line: 1501, column: 10, scope: !23347)
!23359 = !DILocation(line: 1501, column: 8, scope: !23347)
!23360 = !DILocation(line: 1502, column: 23, scope: !23347)
!23361 = !DILocation(line: 1502, column: 10, scope: !23347)
!23362 = !DILocation(line: 1502, column: 8, scope: !23347)
!23363 = !DILocation(line: 1504, column: 2, scope: !23347)
!23364 = !DILocation(line: 1504, column: 2, scope: !23365)
!23365 = distinct !DILexicalBlock(scope: !23347, file: !2307, line: 1504, column: 2)
!23366 = !DILocation(line: 1506, column: 31, scope: !23347)
!23367 = !DILocation(line: 1506, column: 9, scope: !23347)
!23368 = !DILocation(line: 1506, column: 2, scope: !23347)
!23369 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !7339, file: !7339, line: 571, type: !10983, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23370 = !DILocalVariable(name: "t", arg: 1, scope: !23369, file: !7339, line: 571, type: !312)
!23371 = !DILocation(line: 571, column: 69, scope: !23369)
!23372 = !DILocation(line: 574, column: 17, scope: !23369)
!23373 = !DILocation(line: 102, column: 63, scope: !20510, inlinedAt: !23374)
!23374 = distinct !DILocation(line: 574, column: 9, scope: !23369)
!23375 = !DILocation(line: 102, column: 75, scope: !20510, inlinedAt: !23374)
!23376 = !DILocation(line: 103, column: 18, scope: !20510, inlinedAt: !23374)
!23377 = !DILocation(line: 103, column: 30, scope: !20510, inlinedAt: !23374)
!23378 = !DILocation(line: 104, column: 14, scope: !20510, inlinedAt: !23374)
!23379 = !DILocation(line: 104, column: 29, scope: !20510, inlinedAt: !23374)
!23380 = !DILocation(line: 105, column: 14, scope: !20510, inlinedAt: !23374)
!23381 = !DILocation(line: 107, column: 7, scope: !20510, inlinedAt: !23374)
!23382 = !DILocation(line: 107, column: 19, scope: !20510, inlinedAt: !23374)
!23383 = !DILocation(line: 107, column: 28, scope: !20510, inlinedAt: !23374)
!23384 = !DILocation(line: 108, column: 4, scope: !20510, inlinedAt: !23374)
!23385 = !DILocation(line: 108, column: 12, scope: !20510, inlinedAt: !23374)
!23386 = !DILocation(line: 108, column: 10, scope: !20510, inlinedAt: !23374)
!23387 = !DILocation(line: 108, column: 21, scope: !20510, inlinedAt: !23374)
!23388 = !DILocation(line: 108, column: 26, scope: !20510, inlinedAt: !23374)
!23389 = !DILocation(line: 108, column: 34, scope: !20510, inlinedAt: !23374)
!23390 = !DILocation(line: 108, column: 32, scope: !20510, inlinedAt: !23374)
!23391 = !DILocation(line: 108, column: 43, scope: !20510, inlinedAt: !23374)
!23392 = !DILocation(line: 0, scope: !20510, inlinedAt: !23374)
!23393 = !DILocation(line: 109, column: 7, scope: !20510, inlinedAt: !23374)
!23394 = !DILocation(line: 109, column: 19, scope: !20510, inlinedAt: !23374)
!23395 = !DILocation(line: 109, column: 28, scope: !20510, inlinedAt: !23374)
!23396 = !DILocation(line: 110, column: 4, scope: !20510, inlinedAt: !23374)
!23397 = !DILocation(line: 110, column: 14, scope: !20510, inlinedAt: !23374)
!23398 = !DILocation(line: 110, column: 12, scope: !20510, inlinedAt: !23374)
!23399 = !DILocation(line: 110, column: 21, scope: !20510, inlinedAt: !23374)
!23400 = !DILocation(line: 110, column: 26, scope: !20510, inlinedAt: !23374)
!23401 = !DILocation(line: 110, column: 36, scope: !20510, inlinedAt: !23374)
!23402 = !DILocation(line: 110, column: 34, scope: !20510, inlinedAt: !23374)
!23403 = !DILocation(line: 110, column: 43, scope: !20510, inlinedAt: !23374)
!23404 = !DILocation(line: 112, column: 6, scope: !20551, inlinedAt: !23374)
!23405 = !DILocation(line: 112, column: 17, scope: !20551, inlinedAt: !23374)
!23406 = !DILocation(line: 112, column: 14, scope: !20551, inlinedAt: !23374)
!23407 = !DILocation(line: 112, column: 6, scope: !20510, inlinedAt: !23374)
!23408 = !DILocation(line: 113, column: 10, scope: !20556, inlinedAt: !23374)
!23409 = !DILocation(line: 113, column: 32, scope: !20556, inlinedAt: !23374)
!23410 = !DILocation(line: 113, column: 22, scope: !20556, inlinedAt: !23374)
!23411 = !DILocation(line: 113, column: 21, scope: !20556, inlinedAt: !23374)
!23412 = !DILocation(line: 113, column: 37, scope: !20556, inlinedAt: !23374)
!23413 = !DILocation(line: 113, column: 3, scope: !20556, inlinedAt: !23374)
!23414 = !DILocation(line: 116, column: 11, scope: !20510, inlinedAt: !23374)
!23415 = !DILocation(line: 118, column: 7, scope: !20565, inlinedAt: !23374)
!23416 = !DILocation(line: 118, column: 6, scope: !20510, inlinedAt: !23374)
!23417 = !DILocation(line: 119, column: 12, scope: !20568, inlinedAt: !23374)
!23418 = !DILocation(line: 119, column: 23, scope: !20568, inlinedAt: !23374)
!23419 = !DILocation(line: 119, column: 36, scope: !20568, inlinedAt: !23374)
!23420 = !DILocation(line: 119, column: 46, scope: !20568, inlinedAt: !23374)
!23421 = !DILocation(line: 119, column: 44, scope: !20568, inlinedAt: !23374)
!23422 = !DILocation(line: 119, column: 55, scope: !20568, inlinedAt: !23374)
!23423 = !DILocation(line: 121, column: 7, scope: !20576, inlinedAt: !23374)
!23424 = !DILocation(line: 121, column: 7, scope: !20568, inlinedAt: !23374)
!23425 = !DILocation(line: 122, column: 10, scope: !20579, inlinedAt: !23374)
!23426 = !DILocation(line: 122, column: 19, scope: !20579, inlinedAt: !23374)
!23427 = !DILocation(line: 122, column: 8, scope: !20579, inlinedAt: !23374)
!23428 = !DILocation(line: 123, column: 3, scope: !20579, inlinedAt: !23374)
!23429 = !DILocation(line: 124, column: 7, scope: !20584, inlinedAt: !23374)
!23430 = !DILocation(line: 124, column: 7, scope: !20568, inlinedAt: !23374)
!23431 = !DILocation(line: 125, column: 10, scope: !20587, inlinedAt: !23374)
!23432 = !DILocation(line: 125, column: 19, scope: !20587, inlinedAt: !23374)
!23433 = !DILocation(line: 125, column: 8, scope: !20587, inlinedAt: !23374)
!23434 = !DILocation(line: 126, column: 3, scope: !20587, inlinedAt: !23374)
!23435 = !DILocation(line: 127, column: 2, scope: !20568, inlinedAt: !23374)
!23436 = !DILocation(line: 134, column: 6, scope: !20593, inlinedAt: !23374)
!23437 = !DILocation(line: 134, column: 6, scope: !20510, inlinedAt: !23374)
!23438 = !DILocation(line: 135, column: 8, scope: !20596, inlinedAt: !23374)
!23439 = !DILocation(line: 135, column: 5, scope: !20596, inlinedAt: !23374)
!23440 = !DILocation(line: 136, column: 7, scope: !20599, inlinedAt: !23374)
!23441 = !DILocation(line: 136, column: 16, scope: !20599, inlinedAt: !23374)
!23442 = !DILocation(line: 136, column: 20, scope: !20599, inlinedAt: !23374)
!23443 = !DILocation(line: 136, column: 22, scope: !20599, inlinedAt: !23374)
!23444 = !DILocation(line: 136, column: 7, scope: !20596, inlinedAt: !23374)
!23445 = !DILocation(line: 137, column: 22, scope: !20605, inlinedAt: !23374)
!23446 = !DILocation(line: 137, column: 12, scope: !20605, inlinedAt: !23374)
!23447 = !DILocation(line: 137, column: 28, scope: !20605, inlinedAt: !23374)
!23448 = !DILocation(line: 137, column: 38, scope: !20605, inlinedAt: !23374)
!23449 = !DILocation(line: 137, column: 36, scope: !20605, inlinedAt: !23374)
!23450 = !DILocation(line: 137, column: 25, scope: !20605, inlinedAt: !23374)
!23451 = !DILocation(line: 137, column: 11, scope: !20605, inlinedAt: !23374)
!23452 = !DILocation(line: 137, column: 4, scope: !20605, inlinedAt: !23374)
!23453 = !DILocation(line: 139, column: 11, scope: !20614, inlinedAt: !23374)
!23454 = !DILocation(line: 139, column: 26, scope: !20614, inlinedAt: !23374)
!23455 = !DILocation(line: 139, column: 16, scope: !20614, inlinedAt: !23374)
!23456 = !DILocation(line: 139, column: 36, scope: !20614, inlinedAt: !23374)
!23457 = !DILocation(line: 139, column: 34, scope: !20614, inlinedAt: !23374)
!23458 = !DILocation(line: 139, column: 13, scope: !20614, inlinedAt: !23374)
!23459 = !DILocation(line: 139, column: 4, scope: !20614, inlinedAt: !23374)
!23460 = !DILocation(line: 141, column: 13, scope: !20622, inlinedAt: !23374)
!23461 = !DILocation(line: 141, column: 13, scope: !20593, inlinedAt: !23374)
!23462 = !DILocation(line: 142, column: 7, scope: !20625, inlinedAt: !23374)
!23463 = !DILocation(line: 142, column: 7, scope: !20626, inlinedAt: !23374)
!23464 = !DILocation(line: 143, column: 22, scope: !20629, inlinedAt: !23374)
!23465 = !DILocation(line: 143, column: 12, scope: !20629, inlinedAt: !23374)
!23466 = !DILocation(line: 143, column: 28, scope: !20629, inlinedAt: !23374)
!23467 = !DILocation(line: 143, column: 36, scope: !20629, inlinedAt: !23374)
!23468 = !DILocation(line: 143, column: 34, scope: !20629, inlinedAt: !23374)
!23469 = !DILocation(line: 143, column: 25, scope: !20629, inlinedAt: !23374)
!23470 = !DILocation(line: 143, column: 11, scope: !20629, inlinedAt: !23374)
!23471 = !DILocation(line: 143, column: 4, scope: !20629, inlinedAt: !23374)
!23472 = !DILocation(line: 145, column: 11, scope: !20638, inlinedAt: !23374)
!23473 = !DILocation(line: 145, column: 26, scope: !20638, inlinedAt: !23374)
!23474 = !DILocation(line: 145, column: 16, scope: !20638, inlinedAt: !23374)
!23475 = !DILocation(line: 145, column: 34, scope: !20638, inlinedAt: !23374)
!23476 = !DILocation(line: 145, column: 32, scope: !20638, inlinedAt: !23374)
!23477 = !DILocation(line: 145, column: 13, scope: !20638, inlinedAt: !23374)
!23478 = !DILocation(line: 145, column: 4, scope: !20638, inlinedAt: !23374)
!23479 = !DILocation(line: 148, column: 7, scope: !20646, inlinedAt: !23374)
!23480 = !DILocation(line: 148, column: 7, scope: !20647, inlinedAt: !23374)
!23481 = !DILocation(line: 149, column: 23, scope: !20650, inlinedAt: !23374)
!23482 = !DILocation(line: 149, column: 27, scope: !20650, inlinedAt: !23374)
!23483 = !DILocation(line: 149, column: 25, scope: !20650, inlinedAt: !23374)
!23484 = !DILocation(line: 149, column: 35, scope: !20650, inlinedAt: !23374)
!23485 = !DILocation(line: 149, column: 33, scope: !20650, inlinedAt: !23374)
!23486 = !DILocation(line: 149, column: 42, scope: !20650, inlinedAt: !23374)
!23487 = !DILocation(line: 149, column: 40, scope: !20650, inlinedAt: !23374)
!23488 = !DILocation(line: 149, column: 11, scope: !20650, inlinedAt: !23374)
!23489 = !DILocation(line: 149, column: 4, scope: !20650, inlinedAt: !23374)
!23490 = !DILocation(line: 150, column: 14, scope: !20660, inlinedAt: !23374)
!23491 = !DILocation(line: 150, column: 23, scope: !20660, inlinedAt: !23374)
!23492 = !DILocation(line: 150, column: 26, scope: !20660, inlinedAt: !23374)
!23493 = !DILocation(line: 150, column: 14, scope: !20646, inlinedAt: !23374)
!23494 = !DILocation(line: 156, column: 13, scope: !20665, inlinedAt: !23374)
!23495 = !DILocation(line: 156, column: 17, scope: !20665, inlinedAt: !23374)
!23496 = !DILocation(line: 156, column: 15, scope: !20665, inlinedAt: !23374)
!23497 = !DILocation(line: 156, column: 25, scope: !20665, inlinedAt: !23374)
!23498 = !DILocation(line: 156, column: 23, scope: !20665, inlinedAt: !23374)
!23499 = !DILocation(line: 156, column: 32, scope: !20665, inlinedAt: !23374)
!23500 = !DILocation(line: 156, column: 30, scope: !20665, inlinedAt: !23374)
!23501 = !DILocation(line: 156, column: 4, scope: !20665, inlinedAt: !23374)
!23502 = !DILocation(line: 161, column: 12, scope: !20674, inlinedAt: !23374)
!23503 = !DILocation(line: 161, column: 16, scope: !20674, inlinedAt: !23374)
!23504 = !DILocation(line: 161, column: 14, scope: !20674, inlinedAt: !23374)
!23505 = !DILocation(line: 161, column: 27, scope: !20674, inlinedAt: !23374)
!23506 = !DILocation(line: 161, column: 25, scope: !20674, inlinedAt: !23374)
!23507 = !DILocation(line: 161, column: 37, scope: !20674, inlinedAt: !23374)
!23508 = !DILocation(line: 161, column: 41, scope: !20674, inlinedAt: !23374)
!23509 = !DILocation(line: 161, column: 39, scope: !20674, inlinedAt: !23374)
!23510 = !DILocation(line: 161, column: 52, scope: !20674, inlinedAt: !23374)
!23511 = !DILocation(line: 161, column: 50, scope: !20674, inlinedAt: !23374)
!23512 = !DILocation(line: 161, column: 60, scope: !20674, inlinedAt: !23374)
!23513 = !DILocation(line: 161, column: 58, scope: !20674, inlinedAt: !23374)
!23514 = !DILocation(line: 161, column: 67, scope: !20674, inlinedAt: !23374)
!23515 = !DILocation(line: 161, column: 65, scope: !20674, inlinedAt: !23374)
!23516 = !DILocation(line: 161, column: 33, scope: !20674, inlinedAt: !23374)
!23517 = !DILocation(line: 161, column: 4, scope: !20674, inlinedAt: !23374)
!23518 = !DILocation(line: 164, column: 1, scope: !20510, inlinedAt: !23374)
!23519 = !DILocation(line: 574, column: 2, scope: !23369)
!23520 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !7339, file: !7339, line: 1187, type: !10983, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23521 = !DILocalVariable(name: "t", arg: 1, scope: !23520, file: !7339, line: 1187, type: !312)
!23522 = !DILocation(line: 1187, column: 70, scope: !23520)
!23523 = !DILocation(line: 1190, column: 17, scope: !23520)
!23524 = !DILocation(line: 102, column: 63, scope: !20510, inlinedAt: !23525)
!23525 = distinct !DILocation(line: 1190, column: 9, scope: !23520)
!23526 = !DILocation(line: 102, column: 75, scope: !20510, inlinedAt: !23525)
!23527 = !DILocation(line: 103, column: 18, scope: !20510, inlinedAt: !23525)
!23528 = !DILocation(line: 103, column: 30, scope: !20510, inlinedAt: !23525)
!23529 = !DILocation(line: 104, column: 14, scope: !20510, inlinedAt: !23525)
!23530 = !DILocation(line: 104, column: 29, scope: !20510, inlinedAt: !23525)
!23531 = !DILocation(line: 105, column: 14, scope: !20510, inlinedAt: !23525)
!23532 = !DILocation(line: 107, column: 7, scope: !20510, inlinedAt: !23525)
!23533 = !DILocation(line: 107, column: 19, scope: !20510, inlinedAt: !23525)
!23534 = !DILocation(line: 107, column: 28, scope: !20510, inlinedAt: !23525)
!23535 = !DILocation(line: 108, column: 4, scope: !20510, inlinedAt: !23525)
!23536 = !DILocation(line: 108, column: 12, scope: !20510, inlinedAt: !23525)
!23537 = !DILocation(line: 108, column: 10, scope: !20510, inlinedAt: !23525)
!23538 = !DILocation(line: 108, column: 21, scope: !20510, inlinedAt: !23525)
!23539 = !DILocation(line: 108, column: 26, scope: !20510, inlinedAt: !23525)
!23540 = !DILocation(line: 108, column: 34, scope: !20510, inlinedAt: !23525)
!23541 = !DILocation(line: 108, column: 32, scope: !20510, inlinedAt: !23525)
!23542 = !DILocation(line: 108, column: 43, scope: !20510, inlinedAt: !23525)
!23543 = !DILocation(line: 0, scope: !20510, inlinedAt: !23525)
!23544 = !DILocation(line: 109, column: 7, scope: !20510, inlinedAt: !23525)
!23545 = !DILocation(line: 109, column: 19, scope: !20510, inlinedAt: !23525)
!23546 = !DILocation(line: 109, column: 28, scope: !20510, inlinedAt: !23525)
!23547 = !DILocation(line: 110, column: 4, scope: !20510, inlinedAt: !23525)
!23548 = !DILocation(line: 110, column: 14, scope: !20510, inlinedAt: !23525)
!23549 = !DILocation(line: 110, column: 12, scope: !20510, inlinedAt: !23525)
!23550 = !DILocation(line: 110, column: 21, scope: !20510, inlinedAt: !23525)
!23551 = !DILocation(line: 110, column: 26, scope: !20510, inlinedAt: !23525)
!23552 = !DILocation(line: 110, column: 36, scope: !20510, inlinedAt: !23525)
!23553 = !DILocation(line: 110, column: 34, scope: !20510, inlinedAt: !23525)
!23554 = !DILocation(line: 110, column: 43, scope: !20510, inlinedAt: !23525)
!23555 = !DILocation(line: 112, column: 6, scope: !20551, inlinedAt: !23525)
!23556 = !DILocation(line: 112, column: 17, scope: !20551, inlinedAt: !23525)
!23557 = !DILocation(line: 112, column: 14, scope: !20551, inlinedAt: !23525)
!23558 = !DILocation(line: 112, column: 6, scope: !20510, inlinedAt: !23525)
!23559 = !DILocation(line: 113, column: 10, scope: !20556, inlinedAt: !23525)
!23560 = !DILocation(line: 113, column: 32, scope: !20556, inlinedAt: !23525)
!23561 = !DILocation(line: 113, column: 22, scope: !20556, inlinedAt: !23525)
!23562 = !DILocation(line: 113, column: 21, scope: !20556, inlinedAt: !23525)
!23563 = !DILocation(line: 113, column: 37, scope: !20556, inlinedAt: !23525)
!23564 = !DILocation(line: 113, column: 3, scope: !20556, inlinedAt: !23525)
!23565 = !DILocation(line: 116, column: 11, scope: !20510, inlinedAt: !23525)
!23566 = !DILocation(line: 118, column: 7, scope: !20565, inlinedAt: !23525)
!23567 = !DILocation(line: 118, column: 6, scope: !20510, inlinedAt: !23525)
!23568 = !DILocation(line: 119, column: 12, scope: !20568, inlinedAt: !23525)
!23569 = !DILocation(line: 119, column: 23, scope: !20568, inlinedAt: !23525)
!23570 = !DILocation(line: 119, column: 36, scope: !20568, inlinedAt: !23525)
!23571 = !DILocation(line: 119, column: 46, scope: !20568, inlinedAt: !23525)
!23572 = !DILocation(line: 119, column: 44, scope: !20568, inlinedAt: !23525)
!23573 = !DILocation(line: 119, column: 55, scope: !20568, inlinedAt: !23525)
!23574 = !DILocation(line: 121, column: 7, scope: !20576, inlinedAt: !23525)
!23575 = !DILocation(line: 121, column: 7, scope: !20568, inlinedAt: !23525)
!23576 = !DILocation(line: 122, column: 10, scope: !20579, inlinedAt: !23525)
!23577 = !DILocation(line: 122, column: 19, scope: !20579, inlinedAt: !23525)
!23578 = !DILocation(line: 122, column: 8, scope: !20579, inlinedAt: !23525)
!23579 = !DILocation(line: 123, column: 3, scope: !20579, inlinedAt: !23525)
!23580 = !DILocation(line: 124, column: 7, scope: !20584, inlinedAt: !23525)
!23581 = !DILocation(line: 124, column: 7, scope: !20568, inlinedAt: !23525)
!23582 = !DILocation(line: 125, column: 10, scope: !20587, inlinedAt: !23525)
!23583 = !DILocation(line: 125, column: 19, scope: !20587, inlinedAt: !23525)
!23584 = !DILocation(line: 125, column: 8, scope: !20587, inlinedAt: !23525)
!23585 = !DILocation(line: 126, column: 3, scope: !20587, inlinedAt: !23525)
!23586 = !DILocation(line: 127, column: 2, scope: !20568, inlinedAt: !23525)
!23587 = !DILocation(line: 134, column: 6, scope: !20593, inlinedAt: !23525)
!23588 = !DILocation(line: 134, column: 6, scope: !20510, inlinedAt: !23525)
!23589 = !DILocation(line: 135, column: 8, scope: !20596, inlinedAt: !23525)
!23590 = !DILocation(line: 135, column: 5, scope: !20596, inlinedAt: !23525)
!23591 = !DILocation(line: 136, column: 7, scope: !20599, inlinedAt: !23525)
!23592 = !DILocation(line: 136, column: 16, scope: !20599, inlinedAt: !23525)
!23593 = !DILocation(line: 136, column: 20, scope: !20599, inlinedAt: !23525)
!23594 = !DILocation(line: 136, column: 22, scope: !20599, inlinedAt: !23525)
!23595 = !DILocation(line: 136, column: 7, scope: !20596, inlinedAt: !23525)
!23596 = !DILocation(line: 137, column: 22, scope: !20605, inlinedAt: !23525)
!23597 = !DILocation(line: 137, column: 12, scope: !20605, inlinedAt: !23525)
!23598 = !DILocation(line: 137, column: 28, scope: !20605, inlinedAt: !23525)
!23599 = !DILocation(line: 137, column: 38, scope: !20605, inlinedAt: !23525)
!23600 = !DILocation(line: 137, column: 36, scope: !20605, inlinedAt: !23525)
!23601 = !DILocation(line: 137, column: 25, scope: !20605, inlinedAt: !23525)
!23602 = !DILocation(line: 137, column: 11, scope: !20605, inlinedAt: !23525)
!23603 = !DILocation(line: 137, column: 4, scope: !20605, inlinedAt: !23525)
!23604 = !DILocation(line: 139, column: 11, scope: !20614, inlinedAt: !23525)
!23605 = !DILocation(line: 139, column: 26, scope: !20614, inlinedAt: !23525)
!23606 = !DILocation(line: 139, column: 16, scope: !20614, inlinedAt: !23525)
!23607 = !DILocation(line: 139, column: 36, scope: !20614, inlinedAt: !23525)
!23608 = !DILocation(line: 139, column: 34, scope: !20614, inlinedAt: !23525)
!23609 = !DILocation(line: 139, column: 13, scope: !20614, inlinedAt: !23525)
!23610 = !DILocation(line: 139, column: 4, scope: !20614, inlinedAt: !23525)
!23611 = !DILocation(line: 141, column: 13, scope: !20622, inlinedAt: !23525)
!23612 = !DILocation(line: 141, column: 13, scope: !20593, inlinedAt: !23525)
!23613 = !DILocation(line: 142, column: 7, scope: !20625, inlinedAt: !23525)
!23614 = !DILocation(line: 142, column: 7, scope: !20626, inlinedAt: !23525)
!23615 = !DILocation(line: 143, column: 22, scope: !20629, inlinedAt: !23525)
!23616 = !DILocation(line: 143, column: 12, scope: !20629, inlinedAt: !23525)
!23617 = !DILocation(line: 143, column: 28, scope: !20629, inlinedAt: !23525)
!23618 = !DILocation(line: 143, column: 36, scope: !20629, inlinedAt: !23525)
!23619 = !DILocation(line: 143, column: 34, scope: !20629, inlinedAt: !23525)
!23620 = !DILocation(line: 143, column: 25, scope: !20629, inlinedAt: !23525)
!23621 = !DILocation(line: 143, column: 11, scope: !20629, inlinedAt: !23525)
!23622 = !DILocation(line: 143, column: 4, scope: !20629, inlinedAt: !23525)
!23623 = !DILocation(line: 145, column: 11, scope: !20638, inlinedAt: !23525)
!23624 = !DILocation(line: 145, column: 26, scope: !20638, inlinedAt: !23525)
!23625 = !DILocation(line: 145, column: 16, scope: !20638, inlinedAt: !23525)
!23626 = !DILocation(line: 145, column: 34, scope: !20638, inlinedAt: !23525)
!23627 = !DILocation(line: 145, column: 32, scope: !20638, inlinedAt: !23525)
!23628 = !DILocation(line: 145, column: 13, scope: !20638, inlinedAt: !23525)
!23629 = !DILocation(line: 145, column: 4, scope: !20638, inlinedAt: !23525)
!23630 = !DILocation(line: 148, column: 7, scope: !20646, inlinedAt: !23525)
!23631 = !DILocation(line: 148, column: 7, scope: !20647, inlinedAt: !23525)
!23632 = !DILocation(line: 149, column: 23, scope: !20650, inlinedAt: !23525)
!23633 = !DILocation(line: 149, column: 27, scope: !20650, inlinedAt: !23525)
!23634 = !DILocation(line: 149, column: 25, scope: !20650, inlinedAt: !23525)
!23635 = !DILocation(line: 149, column: 35, scope: !20650, inlinedAt: !23525)
!23636 = !DILocation(line: 149, column: 33, scope: !20650, inlinedAt: !23525)
!23637 = !DILocation(line: 149, column: 42, scope: !20650, inlinedAt: !23525)
!23638 = !DILocation(line: 149, column: 40, scope: !20650, inlinedAt: !23525)
!23639 = !DILocation(line: 149, column: 11, scope: !20650, inlinedAt: !23525)
!23640 = !DILocation(line: 149, column: 4, scope: !20650, inlinedAt: !23525)
!23641 = !DILocation(line: 150, column: 14, scope: !20660, inlinedAt: !23525)
!23642 = !DILocation(line: 150, column: 23, scope: !20660, inlinedAt: !23525)
!23643 = !DILocation(line: 150, column: 26, scope: !20660, inlinedAt: !23525)
!23644 = !DILocation(line: 150, column: 14, scope: !20646, inlinedAt: !23525)
!23645 = !DILocation(line: 156, column: 13, scope: !20665, inlinedAt: !23525)
!23646 = !DILocation(line: 156, column: 17, scope: !20665, inlinedAt: !23525)
!23647 = !DILocation(line: 156, column: 15, scope: !20665, inlinedAt: !23525)
!23648 = !DILocation(line: 156, column: 25, scope: !20665, inlinedAt: !23525)
!23649 = !DILocation(line: 156, column: 23, scope: !20665, inlinedAt: !23525)
!23650 = !DILocation(line: 156, column: 32, scope: !20665, inlinedAt: !23525)
!23651 = !DILocation(line: 156, column: 30, scope: !20665, inlinedAt: !23525)
!23652 = !DILocation(line: 156, column: 4, scope: !20665, inlinedAt: !23525)
!23653 = !DILocation(line: 161, column: 12, scope: !20674, inlinedAt: !23525)
!23654 = !DILocation(line: 161, column: 16, scope: !20674, inlinedAt: !23525)
!23655 = !DILocation(line: 161, column: 14, scope: !20674, inlinedAt: !23525)
!23656 = !DILocation(line: 161, column: 27, scope: !20674, inlinedAt: !23525)
!23657 = !DILocation(line: 161, column: 25, scope: !20674, inlinedAt: !23525)
!23658 = !DILocation(line: 161, column: 37, scope: !20674, inlinedAt: !23525)
!23659 = !DILocation(line: 161, column: 41, scope: !20674, inlinedAt: !23525)
!23660 = !DILocation(line: 161, column: 39, scope: !20674, inlinedAt: !23525)
!23661 = !DILocation(line: 161, column: 52, scope: !20674, inlinedAt: !23525)
!23662 = !DILocation(line: 161, column: 50, scope: !20674, inlinedAt: !23525)
!23663 = !DILocation(line: 161, column: 60, scope: !20674, inlinedAt: !23525)
!23664 = !DILocation(line: 161, column: 58, scope: !20674, inlinedAt: !23525)
!23665 = !DILocation(line: 161, column: 67, scope: !20674, inlinedAt: !23525)
!23666 = !DILocation(line: 161, column: 65, scope: !20674, inlinedAt: !23525)
!23667 = !DILocation(line: 161, column: 33, scope: !20674, inlinedAt: !23525)
!23668 = !DILocation(line: 161, column: 4, scope: !20674, inlinedAt: !23525)
!23669 = !DILocation(line: 164, column: 1, scope: !20510, inlinedAt: !23525)
!23670 = !DILocation(line: 1190, column: 2, scope: !23520)
!23671 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2307, file: !2307, line: 1517, type: !23097, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23672 = !DILocalVariable(name: "thread", arg: 1, scope: !23671, file: !2307, line: 1517, type: !22927)
!23673 = !DILocation(line: 1517, column: 30, scope: !23671)
!23674 = !DILocation(line: 1519, column: 2, scope: !23671)
!23675 = !DILocation(line: 1519, column: 2, scope: !23676)
!23676 = distinct !DILexicalBlock(scope: !23671, file: !2307, line: 1519, column: 2)
!23677 = !DILocation(line: 1521, column: 26, scope: !23678)
!23678 = distinct !DILexicalBlock(scope: !23671, file: !2307, line: 1521, column: 6)
!23679 = !DILocation(line: 1521, column: 6, scope: !23678)
!23680 = !DILocation(line: 1521, column: 6, scope: !23671)
!23681 = !DILocation(line: 1522, column: 3, scope: !23682)
!23682 = distinct !DILexicalBlock(scope: !23678, file: !2307, line: 1521, column: 35)
!23683 = !DILocation(line: 1525, column: 29, scope: !23684)
!23684 = distinct !DILexicalBlock(scope: !23671, file: !2307, line: 1525, column: 6)
!23685 = !DILocation(line: 1525, column: 6, scope: !23684)
!23686 = !DILocation(line: 1525, column: 37, scope: !23684)
!23687 = !DILocation(line: 1525, column: 6, scope: !23671)
!23688 = !DILocation(line: 1527, column: 7, scope: !23689)
!23689 = distinct !DILexicalBlock(scope: !23690, file: !2307, line: 1527, column: 7)
!23690 = distinct !DILexicalBlock(scope: !23684, file: !2307, line: 1525, column: 42)
!23691 = !DILocation(line: 1527, column: 15, scope: !23689)
!23692 = !DILocation(line: 1527, column: 20, scope: !23689)
!23693 = !DILocation(line: 1527, column: 33, scope: !23689)
!23694 = !DILocation(line: 1527, column: 7, scope: !23690)
!23695 = !DILocation(line: 1528, column: 4, scope: !23696)
!23696 = distinct !DILexicalBlock(scope: !23689, file: !2307, line: 1527, column: 55)
!23697 = !DILocation(line: 1530, column: 2, scope: !23690)
!23698 = !DILocation(line: 1532, column: 33, scope: !23671)
!23699 = !DILocation(line: 1532, column: 2, scope: !23671)
!23700 = !DILocation(line: 1533, column: 17, scope: !23671)
!23701 = !DILocation(line: 1533, column: 2, scope: !23671)
!23702 = !DILocation(line: 1535, column: 2, scope: !23671)
!23703 = !DILocation(line: 1029, column: 12, scope: !21574, inlinedAt: !23704)
!23704 = distinct !DILocation(line: 48, column: 10, scope: !21577, inlinedAt: !23705)
!23705 = distinct !DILocation(line: 1537, column: 7, scope: !23706)
!23706 = distinct !DILexicalBlock(scope: !23671, file: !2307, line: 1537, column: 6)
!23707 = !DILocation(line: 1031, column: 3, scope: !21574, inlinedAt: !23704)
!23708 = !DILocation(line: 1032, column: 10, scope: !21574, inlinedAt: !23704)
!23709 = !DILocation(line: 48, column: 9, scope: !21577, inlinedAt: !23705)
!23710 = !DILocation(line: 1537, column: 6, scope: !23671)
!23711 = !DILocation(line: 1538, column: 3, scope: !23712)
!23712 = distinct !DILexicalBlock(scope: !23706, file: !2307, line: 1537, column: 25)
!23713 = !DILocation(line: 1539, column: 2, scope: !23712)
!23714 = !DILocation(line: 1540, column: 1, scope: !23671)
!23715 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !18865, file: !18865, line: 101, type: !20772, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23716 = !DILocalVariable(name: "thread", arg: 1, scope: !23715, file: !18865, line: 101, type: !2208)
!23717 = !DILocation(line: 101, column: 57, scope: !23715)
!23718 = !DILocation(line: 103, column: 10, scope: !23715)
!23719 = !DILocation(line: 103, column: 18, scope: !23715)
!23720 = !DILocation(line: 103, column: 23, scope: !23715)
!23721 = !DILocation(line: 103, column: 36, scope: !23715)
!23722 = !DILocation(line: 103, column: 55, scope: !23715)
!23723 = !DILocation(line: 103, column: 2, scope: !23715)
!23724 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2307, file: !2307, line: 1567, type: !23725, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23725 = !DISubroutineType(types: !23726)
!23726 = !{!22927}
!23727 = !DILocalVariable(name: "ret", scope: !23724, file: !2307, line: 1577, type: !22927)
!23728 = !DILocation(line: 1577, column: 10, scope: !23724)
!23729 = !DILocation(line: 1577, column: 30, scope: !23724)
!23730 = !DILocation(line: 1582, column: 9, scope: !23724)
!23731 = !DILocation(line: 1582, column: 2, scope: !23724)
!23732 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2307, file: !2307, line: 1593, type: !3089, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23733 = !DILocation(line: 1029, column: 12, scope: !21574, inlinedAt: !23734)
!23734 = distinct !DILocation(line: 48, column: 10, scope: !21577, inlinedAt: !23735)
!23735 = distinct !DILocation(line: 1595, column: 10, scope: !23732)
!23736 = !DILocation(line: 1031, column: 3, scope: !21574, inlinedAt: !23734)
!23737 = !DILocation(line: 1032, column: 10, scope: !21574, inlinedAt: !23734)
!23738 = !DILocation(line: 48, column: 9, scope: !21577, inlinedAt: !23735)
!23739 = !DILocation(line: 1595, column: 27, scope: !23732)
!23740 = !DILocation(line: 1595, column: 41, scope: !23732)
!23741 = !DILocation(line: 1595, column: 30, scope: !23732)
!23742 = !DILocation(line: 0, scope: !23732)
!23743 = !DILocation(line: 1595, column: 2, scope: !23732)
!23744 = distinct !DISubprogram(name: "z_thread_abort", scope: !2307, file: !2307, line: 1725, type: !20394, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23745 = !DILocalVariable(name: "thread", arg: 1, scope: !23744, file: !2307, line: 1725, type: !2208)
!23746 = !DILocation(line: 1725, column: 38, scope: !23744)
!23747 = !DILocalVariable(name: "key", scope: !23744, file: !2307, line: 1727, type: !20433)
!23748 = !DILocation(line: 1727, column: 19, scope: !23744)
!23749 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !23750)
!23750 = distinct !DILocation(line: 1727, column: 25, scope: !23744)
!23751 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !23750)
!23752 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !23750)
!23753 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !23754)
!23754 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !23750)
!23755 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !23754)
!23756 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !23754)
!23757 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !23750)
!23758 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !23750)
!23759 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !23750)
!23760 = !DILocation(line: 1727, column: 25, scope: !23744)
!23761 = !DILocation(line: 1729, column: 7, scope: !23762)
!23762 = distinct !DILexicalBlock(scope: !23744, file: !2307, line: 1729, column: 6)
!23763 = !DILocation(line: 1729, column: 15, scope: !23762)
!23764 = !DILocation(line: 1729, column: 20, scope: !23762)
!23765 = !DILocation(line: 1729, column: 33, scope: !23762)
!23766 = !DILocation(line: 1729, column: 48, scope: !23762)
!23767 = !DILocation(line: 1729, column: 6, scope: !23744)
!23768 = !DILocation(line: 1730, column: 3, scope: !23769)
!23769 = distinct !DILexicalBlock(scope: !23762, file: !2307, line: 1729, column: 54)
!23770 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !23771)
!23771 = distinct !DILocation(line: 1730, column: 3, scope: !23769)
!23772 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !23771)
!23773 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !23771)
!23774 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !23771)
!23775 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !23776)
!23776 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !23771)
!23777 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !23776)
!23778 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !23776)
!23779 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !23776)
!23780 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !23776)
!23781 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !23776)
!23782 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !23776)
!23783 = !DILocalVariable(name: "r0", scope: !23769, file: !2307, line: 1732, type: !173)
!23784 = !DILocation(line: 1732, column: 3, scope: !23769)
!23785 = !DILocation(line: 1732, column: 3, scope: !23786)
!23786 = distinct !DILexicalBlock(scope: !23769, file: !2307, line: 1732, column: 3)
!23787 = !{i64 2151162719, i64 2151162729, i64 2151162749}
!23788 = !DILocation(line: 1733, column: 3, scope: !23769)
!23789 = !DILocation(line: 1736, column: 7, scope: !23790)
!23790 = distinct !DILexicalBlock(scope: !23744, file: !2307, line: 1736, column: 6)
!23791 = !DILocation(line: 1736, column: 15, scope: !23790)
!23792 = !DILocation(line: 1736, column: 20, scope: !23790)
!23793 = !DILocation(line: 1736, column: 33, scope: !23790)
!23794 = !DILocation(line: 1736, column: 49, scope: !23790)
!23795 = !DILocation(line: 1736, column: 6, scope: !23744)
!23796 = !DILocation(line: 1737, column: 3, scope: !23797)
!23797 = distinct !DILexicalBlock(scope: !23790, file: !2307, line: 1736, column: 56)
!23798 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !23799)
!23799 = distinct !DILocation(line: 1737, column: 3, scope: !23797)
!23800 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !23799)
!23801 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !23799)
!23802 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !23799)
!23803 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !23804)
!23804 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !23799)
!23805 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !23804)
!23806 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !23804)
!23807 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !23804)
!23808 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !23804)
!23809 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !23804)
!23810 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !23804)
!23811 = !DILocation(line: 1738, column: 3, scope: !23797)
!23812 = !DILocation(line: 1775, column: 13, scope: !23744)
!23813 = !DILocation(line: 1775, column: 2, scope: !23744)
!23814 = !DILocation(line: 1776, column: 6, scope: !23815)
!23815 = distinct !DILexicalBlock(scope: !23744, file: !2307, line: 1776, column: 6)
!23816 = !DILocation(line: 1776, column: 16, scope: !23815)
!23817 = !DILocation(line: 1776, column: 13, scope: !23815)
!23818 = !DILocation(line: 1776, column: 25, scope: !23815)
!23819 = !DILocation(line: 1029, column: 12, scope: !21574, inlinedAt: !23820)
!23820 = distinct !DILocation(line: 48, column: 10, scope: !21577, inlinedAt: !23821)
!23821 = distinct !DILocation(line: 1776, column: 29, scope: !23815)
!23822 = !DILocation(line: 1031, column: 3, scope: !21574, inlinedAt: !23820)
!23823 = !DILocation(line: 1032, column: 10, scope: !21574, inlinedAt: !23820)
!23824 = !DILocation(line: 48, column: 9, scope: !21577, inlinedAt: !23821)
!23825 = !DILocation(line: 1776, column: 6, scope: !23744)
!23826 = !DILocation(line: 1777, column: 3, scope: !23827)
!23827 = distinct !DILexicalBlock(scope: !23815, file: !2307, line: 1776, column: 47)
!23828 = !DILocation(line: 193, column: 52, scope: !21524, inlinedAt: !23829)
!23829 = distinct !DILocation(line: 1777, column: 3, scope: !23827)
!23830 = !DILocation(line: 193, column: 75, scope: !21524, inlinedAt: !23829)
!23831 = !DILocation(line: 195, column: 17, scope: !21524, inlinedAt: !23829)
!23832 = !DILocation(line: 221, column: 61, scope: !21533, inlinedAt: !23833)
!23833 = distinct !DILocation(line: 195, column: 2, scope: !21524, inlinedAt: !23829)
!23834 = !DILocation(line: 223, column: 2, scope: !21533, inlinedAt: !23833)
!23835 = !DILocation(line: 196, column: 28, scope: !21524, inlinedAt: !23829)
!23836 = !DILocation(line: 196, column: 9, scope: !21524, inlinedAt: !23829)
!23837 = !DILocation(line: 1779, column: 2, scope: !23827)
!23838 = !DILocation(line: 1780, column: 2, scope: !23744)
!23839 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !23840)
!23840 = distinct !DILocation(line: 1780, column: 2, scope: !23744)
!23841 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !23840)
!23842 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !23840)
!23843 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !23840)
!23844 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !23845)
!23845 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !23840)
!23846 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !23845)
!23847 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !23845)
!23848 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !23845)
!23849 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !23845)
!23850 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !23845)
!23851 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !23845)
!23852 = !DILocation(line: 1781, column: 1, scope: !23744)
!23853 = distinct !DISubprogram(name: "end_thread", scope: !2307, file: !2307, line: 1690, type: !20394, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23854 = !DILocalVariable(name: "thread", arg: 1, scope: !23853, file: !2307, line: 1690, type: !2208)
!23855 = !DILocation(line: 1690, column: 41, scope: !23853)
!23856 = !DILocation(line: 1695, column: 7, scope: !23857)
!23857 = distinct !DILexicalBlock(scope: !23853, file: !2307, line: 1695, column: 6)
!23858 = !DILocation(line: 1695, column: 15, scope: !23857)
!23859 = !DILocation(line: 1695, column: 20, scope: !23857)
!23860 = !DILocation(line: 1695, column: 33, scope: !23857)
!23861 = !DILocation(line: 1695, column: 49, scope: !23857)
!23862 = !DILocation(line: 1695, column: 6, scope: !23853)
!23863 = !DILocation(line: 1696, column: 3, scope: !23864)
!23864 = distinct !DILexicalBlock(scope: !23857, file: !2307, line: 1695, column: 56)
!23865 = !DILocation(line: 1696, column: 11, scope: !23864)
!23866 = !DILocation(line: 1696, column: 16, scope: !23864)
!23867 = !DILocation(line: 1696, column: 29, scope: !23864)
!23868 = !DILocation(line: 1697, column: 3, scope: !23864)
!23869 = !DILocation(line: 1697, column: 11, scope: !23864)
!23870 = !DILocation(line: 1697, column: 16, scope: !23864)
!23871 = !DILocation(line: 1697, column: 29, scope: !23864)
!23872 = !DILocation(line: 1698, column: 26, scope: !23873)
!23873 = distinct !DILexicalBlock(scope: !23864, file: !2307, line: 1698, column: 7)
!23874 = !DILocation(line: 1698, column: 7, scope: !23873)
!23875 = !DILocation(line: 1698, column: 7, scope: !23864)
!23876 = !DILocation(line: 1699, column: 19, scope: !23877)
!23877 = distinct !DILexicalBlock(scope: !23873, file: !2307, line: 1698, column: 35)
!23878 = !DILocation(line: 264, column: 59, scope: !20838, inlinedAt: !23879)
!23879 = distinct !DILocation(line: 1699, column: 4, scope: !23877)
!23880 = !DILocation(line: 266, column: 2, scope: !20838, inlinedAt: !23879)
!23881 = !DILocation(line: 266, column: 10, scope: !20838, inlinedAt: !23879)
!23882 = !DILocation(line: 266, column: 15, scope: !20838, inlinedAt: !23879)
!23883 = !DILocation(line: 266, column: 28, scope: !20838, inlinedAt: !23879)
!23884 = !DILocation(line: 267, column: 26, scope: !20846, inlinedAt: !23879)
!23885 = !DILocation(line: 267, column: 6, scope: !20846, inlinedAt: !23879)
!23886 = !DILocation(line: 267, column: 6, scope: !20838, inlinedAt: !23879)
!23887 = !DILocation(line: 268, column: 15, scope: !20850, inlinedAt: !23879)
!23888 = !DILocation(line: 232, column: 56, scope: !20852, inlinedAt: !23889)
!23889 = distinct !DILocation(line: 268, column: 3, scope: !20850, inlinedAt: !23879)
!23890 = !DILocation(line: 234, column: 31, scope: !20852, inlinedAt: !23889)
!23891 = !DILocation(line: 199, column: 57, scope: !20857, inlinedAt: !23892)
!23892 = distinct !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !23889)
!23893 = !DILocation(line: 234, column: 19, scope: !20852, inlinedAt: !23889)
!23894 = !DILocation(line: 234, column: 40, scope: !20852, inlinedAt: !23889)
!23895 = !DILocation(line: 234, column: 2, scope: !20852, inlinedAt: !23889)
!23896 = !DILocation(line: 269, column: 2, scope: !20850, inlinedAt: !23879)
!23897 = !DILocation(line: 1700, column: 3, scope: !23877)
!23898 = !DILocation(line: 1701, column: 7, scope: !23899)
!23899 = distinct !DILexicalBlock(scope: !23864, file: !2307, line: 1701, column: 7)
!23900 = !DILocation(line: 1701, column: 15, scope: !23899)
!23901 = !DILocation(line: 1701, column: 20, scope: !23899)
!23902 = !DILocation(line: 1701, column: 30, scope: !23899)
!23903 = !DILocation(line: 1701, column: 7, scope: !23864)
!23904 = !DILocation(line: 1702, column: 29, scope: !23905)
!23905 = distinct !DILexicalBlock(scope: !23899, file: !2307, line: 1701, column: 39)
!23906 = !DILocation(line: 1702, column: 4, scope: !23905)
!23907 = !DILocation(line: 1703, column: 3, scope: !23905)
!23908 = !DILocation(line: 1704, column: 32, scope: !23864)
!23909 = !DILocation(line: 1704, column: 9, scope: !23864)
!23910 = !DILocation(line: 1705, column: 15, scope: !23864)
!23911 = !DILocation(line: 1705, column: 23, scope: !23864)
!23912 = !DILocation(line: 1705, column: 3, scope: !23864)
!23913 = !DILocation(line: 1706, column: 3, scope: !23864)
!23914 = !DILocation(line: 1708, column: 3, scope: !23864)
!23915 = !DILocation(line: 1708, column: 3, scope: !23916)
!23916 = distinct !DILexicalBlock(scope: !23864, file: !2307, line: 1708, column: 3)
!23917 = !DILocation(line: 1710, column: 3, scope: !23864)
!23918 = !DILocation(line: 1710, column: 3, scope: !23919)
!23919 = distinct !DILexicalBlock(scope: !23864, file: !2307, line: 1710, column: 3)
!23920 = !DILocation(line: 1722, column: 2, scope: !23864)
!23921 = !DILocation(line: 1723, column: 1, scope: !23853)
!23922 = distinct !DISubprogram(name: "unpend_all", scope: !2307, file: !2307, line: 1674, type: !23923, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23923 = !DISubroutineType(types: !23924)
!23924 = !{null, !2239}
!23925 = !DILocalVariable(name: "wait_q", arg: 1, scope: !23922, file: !2307, line: 1674, type: !2239)
!23926 = !DILocation(line: 1674, column: 42, scope: !23922)
!23927 = !DILocalVariable(name: "thread", scope: !23922, file: !2307, line: 1676, type: !2208)
!23928 = !DILocation(line: 1676, column: 19, scope: !23922)
!23929 = !DILocation(line: 1678, column: 2, scope: !23922)
!23930 = !DILocation(line: 1678, column: 32, scope: !23922)
!23931 = !DILocation(line: 1678, column: 19, scope: !23922)
!23932 = !DILocation(line: 1678, column: 17, scope: !23922)
!23933 = !DILocation(line: 1678, column: 41, scope: !23922)
!23934 = !DILocation(line: 1679, column: 28, scope: !23935)
!23935 = distinct !DILexicalBlock(scope: !23922, file: !2307, line: 1678, column: 50)
!23936 = !DILocation(line: 1679, column: 3, scope: !23935)
!23937 = !DILocation(line: 1680, column: 32, scope: !23935)
!23938 = !DILocation(line: 1680, column: 9, scope: !23935)
!23939 = !DILocation(line: 1681, column: 32, scope: !23935)
!23940 = !DILocalVariable(name: "thread", arg: 1, scope: !23941, file: !18884, line: 65, type: !2208)
!23941 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !18884, file: !18884, line: 65, type: !23942, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23942 = !DISubroutineType(types: !23943)
!23943 = !{null, !2208, !32}
!23944 = !DILocation(line: 65, column: 47, scope: !23941, inlinedAt: !23945)
!23945 = distinct !DILocation(line: 1681, column: 3, scope: !23935)
!23946 = !DILocalVariable(name: "value", arg: 2, scope: !23941, file: !18884, line: 65, type: !32)
!23947 = !DILocation(line: 65, column: 68, scope: !23941, inlinedAt: !23945)
!23948 = !DILocation(line: 67, column: 35, scope: !23941, inlinedAt: !23945)
!23949 = !DILocation(line: 67, column: 2, scope: !23941, inlinedAt: !23945)
!23950 = !DILocation(line: 67, column: 10, scope: !23941, inlinedAt: !23945)
!23951 = !DILocation(line: 67, column: 15, scope: !23941, inlinedAt: !23945)
!23952 = !DILocation(line: 67, column: 33, scope: !23941, inlinedAt: !23945)
!23953 = !DILocation(line: 1682, column: 16, scope: !23935)
!23954 = !DILocation(line: 1682, column: 3, scope: !23935)
!23955 = distinct !{!23955, !23929, !23956}
!23956 = !DILocation(line: 1683, column: 2, scope: !23922)
!23957 = !DILocation(line: 1684, column: 1, scope: !23922)
!23958 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2307, file: !2307, line: 1794, type: !23959, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!23959 = !DISubroutineType(types: !23960)
!23960 = !{!103, !2208, !21814}
!23961 = !DILocalVariable(name: "thread", arg: 1, scope: !23958, file: !2307, line: 1794, type: !2208)
!23962 = !DILocation(line: 1794, column: 43, scope: !23958)
!23963 = !DILocalVariable(name: "timeout", arg: 2, scope: !23958, file: !2307, line: 1794, type: !21814)
!23964 = !DILocation(line: 1794, column: 63, scope: !23958)
!23965 = !DILocalVariable(name: "key", scope: !23958, file: !2307, line: 1796, type: !20433)
!23966 = !DILocation(line: 1796, column: 19, scope: !23958)
!23967 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !23968)
!23968 = distinct !DILocation(line: 1796, column: 25, scope: !23958)
!23969 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !23968)
!23970 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !23968)
!23971 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !23972)
!23972 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !23968)
!23973 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !23972)
!23974 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !23972)
!23975 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !23968)
!23976 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !23968)
!23977 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !23968)
!23978 = !DILocation(line: 1796, column: 25, scope: !23958)
!23979 = !DILocalVariable(name: "ret", scope: !23958, file: !2307, line: 1797, type: !103)
!23980 = !DILocation(line: 1797, column: 6, scope: !23958)
!23981 = !DILocation(line: 1799, column: 2, scope: !23958)
!23982 = !DILocation(line: 1799, column: 2, scope: !23983)
!23983 = distinct !DILexicalBlock(scope: !23958, file: !2307, line: 1799, column: 2)
!23984 = !DILocation(line: 1801, column: 7, scope: !23985)
!23985 = distinct !DILexicalBlock(scope: !23958, file: !2307, line: 1801, column: 6)
!23986 = !DILocation(line: 1801, column: 15, scope: !23985)
!23987 = !DILocation(line: 1801, column: 20, scope: !23985)
!23988 = !DILocation(line: 1801, column: 33, scope: !23985)
!23989 = !DILocation(line: 1801, column: 49, scope: !23985)
!23990 = !DILocation(line: 1801, column: 6, scope: !23958)
!23991 = !DILocation(line: 1802, column: 7, scope: !23992)
!23992 = distinct !DILexicalBlock(scope: !23985, file: !2307, line: 1801, column: 56)
!23993 = !DILocation(line: 1803, column: 2, scope: !23992)
!23994 = !DILocation(line: 1803, column: 13, scope: !23995)
!23995 = distinct !DILexicalBlock(scope: !23985, file: !2307, line: 1803, column: 13)
!23996 = !DILocation(line: 1803, column: 13, scope: !23985)
!23997 = !DILocation(line: 1804, column: 7, scope: !23998)
!23998 = distinct !DILexicalBlock(scope: !23995, file: !2307, line: 1803, column: 47)
!23999 = !DILocation(line: 1805, column: 2, scope: !23998)
!24000 = !DILocation(line: 1805, column: 14, scope: !24001)
!24001 = distinct !DILexicalBlock(scope: !23995, file: !2307, line: 1805, column: 13)
!24002 = !DILocation(line: 1805, column: 24, scope: !24001)
!24003 = !DILocation(line: 1805, column: 21, scope: !24001)
!24004 = !DILocation(line: 1805, column: 34, scope: !24001)
!24005 = !DILocation(line: 1806, column: 7, scope: !24001)
!24006 = !DILocation(line: 1806, column: 15, scope: !24001)
!24007 = !DILocation(line: 1806, column: 20, scope: !24001)
!24008 = !DILocation(line: 1806, column: 34, scope: !24001)
!24009 = !DILocation(line: 1806, column: 44, scope: !24001)
!24010 = !DILocation(line: 1806, column: 30, scope: !24001)
!24011 = !DILocation(line: 1805, column: 13, scope: !23995)
!24012 = !DILocation(line: 1807, column: 7, scope: !24013)
!24013 = distinct !DILexicalBlock(scope: !24001, file: !2307, line: 1806, column: 57)
!24014 = !DILocation(line: 1808, column: 2, scope: !24013)
!24015 = !DILocation(line: 1810, column: 23, scope: !24016)
!24016 = distinct !DILexicalBlock(scope: !24001, file: !2307, line: 1808, column: 9)
!24017 = !DILocation(line: 1810, column: 34, scope: !24016)
!24018 = !DILocation(line: 1810, column: 42, scope: !24016)
!24019 = !DILocation(line: 1810, column: 3, scope: !24016)
!24020 = !DILocation(line: 1811, column: 22, scope: !24016)
!24021 = !DILocation(line: 1811, column: 3, scope: !24016)
!24022 = !DILocation(line: 1813, column: 3, scope: !24016)
!24023 = !DILocation(line: 1813, column: 3, scope: !24024)
!24024 = distinct !DILexicalBlock(scope: !24016, file: !2307, line: 1813, column: 3)
!24025 = !DILocation(line: 1814, column: 9, scope: !24016)
!24026 = !DILocation(line: 193, column: 52, scope: !21524, inlinedAt: !24027)
!24027 = distinct !DILocation(line: 1814, column: 9, scope: !24016)
!24028 = !DILocation(line: 193, column: 75, scope: !21524, inlinedAt: !24027)
!24029 = !DILocation(line: 195, column: 17, scope: !21524, inlinedAt: !24027)
!24030 = !DILocation(line: 221, column: 61, scope: !21533, inlinedAt: !24031)
!24031 = distinct !DILocation(line: 195, column: 2, scope: !21524, inlinedAt: !24027)
!24032 = !DILocation(line: 223, column: 2, scope: !21533, inlinedAt: !24031)
!24033 = !DILocation(line: 196, column: 28, scope: !21524, inlinedAt: !24027)
!24034 = !DILocation(line: 196, column: 9, scope: !21524, inlinedAt: !24027)
!24035 = !DILocation(line: 1814, column: 7, scope: !24016)
!24036 = !DILocation(line: 1815, column: 3, scope: !24016)
!24037 = !DILocation(line: 1815, column: 3, scope: !24038)
!24038 = distinct !DILexicalBlock(scope: !24016, file: !2307, line: 1815, column: 3)
!24039 = !DILocation(line: 1817, column: 10, scope: !24016)
!24040 = !DILocation(line: 1817, column: 3, scope: !24016)
!24041 = !DILocation(line: 1820, column: 2, scope: !23958)
!24042 = !DILocation(line: 1820, column: 2, scope: !24043)
!24043 = distinct !DILexicalBlock(scope: !23958, file: !2307, line: 1820, column: 2)
!24044 = !DILocation(line: 1822, column: 2, scope: !23958)
!24045 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !24046)
!24046 = distinct !DILocation(line: 1822, column: 2, scope: !23958)
!24047 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !24046)
!24048 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !24046)
!24049 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !24046)
!24050 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !24051)
!24051 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !24046)
!24052 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !24051)
!24053 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !24051)
!24054 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !24051)
!24055 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !24051)
!24056 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !24051)
!24057 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !24051)
!24058 = !DILocation(line: 1823, column: 9, scope: !23958)
!24059 = !DILocation(line: 1823, column: 2, scope: !23958)
!24060 = !DILocation(line: 1824, column: 1, scope: !23958)
!24061 = distinct !DISubprogram(name: "z_sched_wake", scope: !2307, file: !2307, line: 1882, type: !24062, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!24062 = !DISubroutineType(types: !24063)
!24063 = !{!717, !2239, !103, !102}
!24064 = !DILocalVariable(name: "wait_q", arg: 1, scope: !24061, file: !2307, line: 1882, type: !2239)
!24065 = !DILocation(line: 1882, column: 30, scope: !24061)
!24066 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !24061, file: !2307, line: 1882, type: !103)
!24067 = !DILocation(line: 1882, column: 42, scope: !24061)
!24068 = !DILocalVariable(name: "swap_data", arg: 3, scope: !24061, file: !2307, line: 1882, type: !102)
!24069 = !DILocation(line: 1882, column: 61, scope: !24061)
!24070 = !DILocalVariable(name: "thread", scope: !24061, file: !2307, line: 1884, type: !2208)
!24071 = !DILocation(line: 1884, column: 19, scope: !24061)
!24072 = !DILocalVariable(name: "ret", scope: !24061, file: !2307, line: 1885, type: !717)
!24073 = !DILocation(line: 1885, column: 7, scope: !24061)
!24074 = !DILocalVariable(name: "__i", scope: !24075, file: !2307, line: 1887, type: !20433)
!24075 = distinct !DILexicalBlock(scope: !24061, file: !2307, line: 1887, column: 2)
!24076 = !DILocation(line: 1887, column: 2, scope: !24075)
!24077 = !DILocalVariable(name: "__key", scope: !24075, file: !2307, line: 1887, type: !20433)
!24078 = !DILocation(line: 136, column: 70, scope: !20440, inlinedAt: !24079)
!24079 = distinct !DILocation(line: 1887, column: 2, scope: !24075)
!24080 = !DILocation(line: 138, column: 2, scope: !20440, inlinedAt: !24079)
!24081 = !DILocation(line: 139, column: 19, scope: !20440, inlinedAt: !24079)
!24082 = !DILocation(line: 44, column: 15, scope: !20450, inlinedAt: !24083)
!24083 = distinct !DILocation(line: 145, column: 10, scope: !20440, inlinedAt: !24079)
!24084 = !DILocation(line: 47, column: 2, scope: !20450, inlinedAt: !24083)
!24085 = !DILocation(line: 76, column: 9, scope: !20450, inlinedAt: !24083)
!24086 = !DILocation(line: 145, column: 4, scope: !20440, inlinedAt: !24079)
!24087 = !DILocation(line: 145, column: 8, scope: !20440, inlinedAt: !24079)
!24088 = !DILocation(line: 165, column: 2, scope: !20440, inlinedAt: !24079)
!24089 = !DILocation(line: 1887, column: 2, scope: !24090)
!24090 = distinct !DILexicalBlock(scope: !24075, file: !2307, line: 1887, column: 2)
!24091 = !DILocation(line: 1888, column: 29, scope: !24092)
!24092 = distinct !DILexicalBlock(scope: !24090, file: !2307, line: 1887, column: 26)
!24093 = !DILocation(line: 1888, column: 37, scope: !24092)
!24094 = !DILocation(line: 1888, column: 12, scope: !24092)
!24095 = !DILocation(line: 1888, column: 10, scope: !24092)
!24096 = !DILocation(line: 1890, column: 7, scope: !24097)
!24097 = distinct !DILexicalBlock(scope: !24092, file: !2307, line: 1890, column: 7)
!24098 = !DILocation(line: 1890, column: 14, scope: !24097)
!24099 = !DILocation(line: 1890, column: 7, scope: !24092)
!24100 = !DILocation(line: 1891, column: 40, scope: !24101)
!24101 = distinct !DILexicalBlock(scope: !24097, file: !2307, line: 1890, column: 23)
!24102 = !DILocation(line: 1892, column: 12, scope: !24101)
!24103 = !DILocation(line: 1893, column: 12, scope: !24101)
!24104 = !DILocalVariable(name: "thread", arg: 1, scope: !24105, file: !24106, line: 134, type: !2208)
!24105 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !24106, file: !24106, line: 134, type: !24107, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!24106 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24107 = !DISubroutineType(types: !24108)
!24108 = !{null, !2208, !32, !102}
!24109 = !DILocation(line: 134, column: 54, scope: !24105, inlinedAt: !24110)
!24110 = distinct !DILocation(line: 1891, column: 4, scope: !24101)
!24111 = !DILocalVariable(name: "value", arg: 2, scope: !24105, file: !24106, line: 135, type: !32)
!24112 = !DILocation(line: 135, column: 21, scope: !24105, inlinedAt: !24110)
!24113 = !DILocalVariable(name: "data", arg: 3, scope: !24105, file: !24106, line: 136, type: !102)
!24114 = !DILocation(line: 136, column: 14, scope: !24105, inlinedAt: !24110)
!24115 = !DILocation(line: 138, column: 31, scope: !24105, inlinedAt: !24110)
!24116 = !DILocation(line: 138, column: 39, scope: !24105, inlinedAt: !24110)
!24117 = !DILocation(line: 65, column: 47, scope: !23941, inlinedAt: !24118)
!24118 = distinct !DILocation(line: 138, column: 2, scope: !24105, inlinedAt: !24110)
!24119 = !DILocation(line: 65, column: 68, scope: !23941, inlinedAt: !24118)
!24120 = !DILocation(line: 67, column: 35, scope: !23941, inlinedAt: !24118)
!24121 = !DILocation(line: 67, column: 2, scope: !23941, inlinedAt: !24118)
!24122 = !DILocation(line: 67, column: 10, scope: !23941, inlinedAt: !24118)
!24123 = !DILocation(line: 67, column: 15, scope: !23941, inlinedAt: !24118)
!24124 = !DILocation(line: 67, column: 33, scope: !23941, inlinedAt: !24118)
!24125 = !DILocation(line: 139, column: 27, scope: !24105, inlinedAt: !24110)
!24126 = !DILocation(line: 139, column: 2, scope: !24105, inlinedAt: !24110)
!24127 = !DILocation(line: 139, column: 10, scope: !24105, inlinedAt: !24110)
!24128 = !DILocation(line: 139, column: 15, scope: !24105, inlinedAt: !24110)
!24129 = !DILocation(line: 139, column: 25, scope: !24105, inlinedAt: !24110)
!24130 = !DILocation(line: 1894, column: 29, scope: !24101)
!24131 = !DILocation(line: 1894, column: 4, scope: !24101)
!24132 = !DILocation(line: 1895, column: 33, scope: !24101)
!24133 = !DILocation(line: 1895, column: 10, scope: !24101)
!24134 = !DILocation(line: 1896, column: 17, scope: !24101)
!24135 = !DILocation(line: 1896, column: 4, scope: !24101)
!24136 = !DILocation(line: 1897, column: 8, scope: !24101)
!24137 = !DILocation(line: 1898, column: 3, scope: !24101)
!24138 = !DILocation(line: 1899, column: 2, scope: !24092)
!24139 = !DILocation(line: 189, column: 60, scope: !20480, inlinedAt: !24140)
!24140 = distinct !DILocation(line: 1887, column: 2, scope: !24090)
!24141 = !DILocation(line: 190, column: 23, scope: !20480, inlinedAt: !24140)
!24142 = !DILocation(line: 192, column: 2, scope: !20480, inlinedAt: !24140)
!24143 = !DILocation(line: 215, column: 22, scope: !20480, inlinedAt: !24140)
!24144 = !DILocation(line: 84, column: 56, scope: !20490, inlinedAt: !24145)
!24145 = distinct !DILocation(line: 215, column: 2, scope: !20480, inlinedAt: !24140)
!24146 = !DILocation(line: 87, column: 6, scope: !20494, inlinedAt: !24145)
!24147 = !DILocation(line: 87, column: 10, scope: !20494, inlinedAt: !24145)
!24148 = !DILocation(line: 87, column: 6, scope: !20490, inlinedAt: !24145)
!24149 = !DILocation(line: 88, column: 3, scope: !20498, inlinedAt: !24145)
!24150 = !DILocation(line: 90, column: 2, scope: !20490, inlinedAt: !24145)
!24151 = !DILocation(line: 110, column: 1, scope: !20490, inlinedAt: !24145)
!24152 = distinct !{!24152, !24076, !24153}
!24153 = !DILocation(line: 1899, column: 2, scope: !24075)
!24154 = !DILocation(line: 1901, column: 9, scope: !24061)
!24155 = !DILocation(line: 1901, column: 2, scope: !24061)
!24156 = distinct !DISubprogram(name: "z_sched_wait", scope: !2307, file: !2307, line: 1904, type: !24157, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2196, retainedNodes: !223)
!24157 = !DISubroutineType(types: !24158)
!24158 = !{!103, !20443, !20433, !2239, !21814, !24159}
!24159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!24160 = !DILocalVariable(name: "lock", arg: 1, scope: !24156, file: !2307, line: 1904, type: !20443)
!24161 = !DILocation(line: 1904, column: 37, scope: !24156)
!24162 = !DILocalVariable(name: "key", arg: 2, scope: !24156, file: !2307, line: 1904, type: !20433)
!24163 = !DILocation(line: 1904, column: 60, scope: !24156)
!24164 = !DILocalVariable(name: "wait_q", arg: 3, scope: !24156, file: !2307, line: 1905, type: !2239)
!24165 = !DILocation(line: 1905, column: 15, scope: !24156)
!24166 = !DILocalVariable(name: "timeout", arg: 4, scope: !24156, file: !2307, line: 1905, type: !21814)
!24167 = !DILocation(line: 1905, column: 35, scope: !24156)
!24168 = !DILocalVariable(name: "data", arg: 5, scope: !24156, file: !2307, line: 1905, type: !24159)
!24169 = !DILocation(line: 1905, column: 51, scope: !24156)
!24170 = !DILocalVariable(name: "ret", scope: !24156, file: !2307, line: 1907, type: !103)
!24171 = !DILocation(line: 1907, column: 6, scope: !24156)
!24172 = !DILocation(line: 1907, column: 24, scope: !24156)
!24173 = !DILocation(line: 1907, column: 35, scope: !24156)
!24174 = !DILocation(line: 1907, column: 12, scope: !24156)
!24175 = !DILocation(line: 1909, column: 6, scope: !24176)
!24176 = distinct !DILexicalBlock(scope: !24156, file: !2307, line: 1909, column: 6)
!24177 = !DILocation(line: 1909, column: 11, scope: !24176)
!24178 = !DILocation(line: 1909, column: 6, scope: !24156)
!24179 = !DILocation(line: 1910, column: 11, scope: !24180)
!24180 = distinct !DILexicalBlock(scope: !24176, file: !2307, line: 1909, column: 20)
!24181 = !DILocation(line: 1910, column: 21, scope: !24180)
!24182 = !DILocation(line: 1910, column: 26, scope: !24180)
!24183 = !DILocation(line: 1910, column: 4, scope: !24180)
!24184 = !DILocation(line: 1910, column: 9, scope: !24180)
!24185 = !DILocation(line: 1911, column: 2, scope: !24180)
!24186 = !DILocation(line: 1912, column: 9, scope: !24156)
!24187 = !DILocation(line: 1912, column: 2, scope: !24156)
!24188 = distinct !DISubprogram(name: "z_data_copy", scope: !24189, file: !24189, line: 22, type: !253, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2953, retainedNodes: !223)
!24189 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24190 = !DILocation(line: 24, column: 2, scope: !24188)
!24191 = !DILocation(line: 27, column: 2, scope: !24188)
!24192 = !DILocation(line: 71, column: 1, scope: !24188)
!24193 = distinct !DISubprogram(name: "z_add_timeout", scope: !2344, file: !2344, line: 88, type: !24194, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24194 = !DISubroutineType(types: !24195)
!24195 = !{null, !2317, !2336, !24196}
!24196 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !294, line: 67, baseType: !24197)
!24197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !294, line: 65, size: 64, elements: !24198)
!24198 = !{!24199}
!24199 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !24197, file: !294, line: 66, baseType: !293, size: 64)
!24200 = !DILocalVariable(name: "to", arg: 1, scope: !24193, file: !2344, line: 88, type: !2317)
!24201 = !DILocation(line: 88, column: 37, scope: !24193)
!24202 = !DILocalVariable(name: "fn", arg: 2, scope: !24193, file: !2344, line: 88, type: !2336)
!24203 = !DILocation(line: 88, column: 57, scope: !24193)
!24204 = !DILocalVariable(name: "timeout", arg: 3, scope: !24193, file: !2344, line: 89, type: !24196)
!24205 = !DILocation(line: 89, column: 18, scope: !24193)
!24206 = !DILocation(line: 91, column: 6, scope: !24207)
!24207 = distinct !DILexicalBlock(scope: !24193, file: !2344, line: 91, column: 6)
!24208 = !DILocation(line: 91, column: 6, scope: !24193)
!24209 = !DILocation(line: 92, column: 3, scope: !24210)
!24210 = distinct !DILexicalBlock(scope: !24207, file: !2344, line: 91, column: 40)
!24211 = !DILocation(line: 100, column: 11, scope: !24193)
!24212 = !DILocation(line: 100, column: 2, scope: !24193)
!24213 = !DILocation(line: 100, column: 6, scope: !24193)
!24214 = !DILocation(line: 100, column: 9, scope: !24193)
!24215 = !DILocalVariable(name: "__i", scope: !24216, file: !2344, line: 102, type: !24217)
!24216 = distinct !DILexicalBlock(scope: !24193, file: !2344, line: 102, column: 2)
!24217 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !24218)
!24218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !24219)
!24219 = !{!24220}
!24220 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !24218, file: !222, line: 33, baseType: !103, size: 32)
!24221 = !DILocation(line: 102, column: 2, scope: !24216)
!24222 = !DILocalVariable(name: "__key", scope: !24216, file: !2344, line: 102, type: !24217)
!24223 = !DILocalVariable(name: "l", arg: 1, scope: !24224, file: !222, line: 136, type: !24227)
!24224 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !24225, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24225 = !DISubroutineType(types: !24226)
!24226 = !{!24217, !24227}
!24227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!24228 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24229)
!24229 = distinct !DILocation(line: 102, column: 2, scope: !24216)
!24230 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24229)
!24231 = !DILocalVariable(name: "k", scope: !24224, file: !222, line: 139, type: !24217)
!24232 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24229)
!24233 = !DILocalVariable(name: "key", scope: !24234, file: !3614, line: 44, type: !32)
!24234 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24235 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24236)
!24236 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24229)
!24237 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24236)
!24238 = !{i64 1447647}
!24239 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24236)
!24240 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24229)
!24241 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24229)
!24242 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24229)
!24243 = !DILocation(line: 102, column: 2, scope: !24244)
!24244 = distinct !DILexicalBlock(scope: !24216, file: !2344, line: 102, column: 2)
!24245 = !DILocalVariable(name: "t", scope: !24246, file: !2344, line: 103, type: !2317)
!24246 = distinct !DILexicalBlock(scope: !24244, file: !2344, line: 102, column: 24)
!24247 = !DILocation(line: 103, column: 20, scope: !24246)
!24248 = !DILocation(line: 106, column: 7, scope: !24249)
!24249 = distinct !DILexicalBlock(scope: !24246, file: !2344, line: 105, column: 7)
!24250 = !DILocation(line: 106, column: 33, scope: !24249)
!24251 = !DILocation(line: 105, column: 7, scope: !24246)
!24252 = !DILocalVariable(name: "ticks", scope: !24253, file: !2344, line: 107, type: !293)
!24253 = distinct !DILexicalBlock(scope: !24249, file: !2344, line: 106, column: 39)
!24254 = !DILocation(line: 107, column: 14, scope: !24253)
!24255 = !DILocation(line: 107, column: 22, scope: !24253)
!24256 = !DILocation(line: 107, column: 50, scope: !24253)
!24257 = !DILocation(line: 107, column: 48, scope: !24253)
!24258 = !DILocation(line: 109, column: 17, scope: !24253)
!24259 = !DILocation(line: 109, column: 4, scope: !24253)
!24260 = !DILocation(line: 109, column: 8, scope: !24253)
!24261 = !DILocation(line: 109, column: 15, scope: !24253)
!24262 = !DILocation(line: 110, column: 3, scope: !24253)
!24263 = !DILocation(line: 111, column: 25, scope: !24264)
!24264 = distinct !DILexicalBlock(scope: !24249, file: !2344, line: 110, column: 10)
!24265 = !DILocation(line: 111, column: 31, scope: !24264)
!24266 = !DILocation(line: 111, column: 37, scope: !24264)
!24267 = !DILocation(line: 111, column: 35, scope: !24264)
!24268 = !DILocation(line: 111, column: 4, scope: !24264)
!24269 = !DILocation(line: 111, column: 8, scope: !24264)
!24270 = !DILocation(line: 111, column: 15, scope: !24264)
!24271 = !DILocation(line: 114, column: 12, scope: !24272)
!24272 = distinct !DILexicalBlock(scope: !24246, file: !2344, line: 114, column: 3)
!24273 = !DILocation(line: 114, column: 10, scope: !24272)
!24274 = !DILocation(line: 114, column: 8, scope: !24272)
!24275 = !DILocation(line: 114, column: 21, scope: !24276)
!24276 = distinct !DILexicalBlock(scope: !24272, file: !2344, line: 114, column: 3)
!24277 = !DILocation(line: 114, column: 23, scope: !24276)
!24278 = !DILocation(line: 114, column: 3, scope: !24272)
!24279 = !DILocation(line: 115, column: 8, scope: !24280)
!24280 = distinct !DILexicalBlock(scope: !24281, file: !2344, line: 115, column: 8)
!24281 = distinct !DILexicalBlock(scope: !24276, file: !2344, line: 114, column: 45)
!24282 = !DILocation(line: 115, column: 11, scope: !24280)
!24283 = !DILocation(line: 115, column: 20, scope: !24280)
!24284 = !DILocation(line: 115, column: 24, scope: !24280)
!24285 = !DILocation(line: 115, column: 18, scope: !24280)
!24286 = !DILocation(line: 115, column: 8, scope: !24281)
!24287 = !DILocation(line: 116, column: 18, scope: !24288)
!24288 = distinct !DILexicalBlock(scope: !24280, file: !2344, line: 115, column: 32)
!24289 = !DILocation(line: 116, column: 22, scope: !24288)
!24290 = !DILocation(line: 116, column: 5, scope: !24288)
!24291 = !DILocation(line: 116, column: 8, scope: !24288)
!24292 = !DILocation(line: 116, column: 15, scope: !24288)
!24293 = !DILocation(line: 117, column: 23, scope: !24288)
!24294 = !DILocation(line: 117, column: 26, scope: !24288)
!24295 = !DILocation(line: 117, column: 33, scope: !24288)
!24296 = !DILocation(line: 117, column: 37, scope: !24288)
!24297 = !DILocation(line: 117, column: 5, scope: !24288)
!24298 = !DILocation(line: 118, column: 5, scope: !24288)
!24299 = !DILocation(line: 120, column: 18, scope: !24281)
!24300 = !DILocation(line: 120, column: 21, scope: !24281)
!24301 = !DILocation(line: 120, column: 4, scope: !24281)
!24302 = !DILocation(line: 120, column: 8, scope: !24281)
!24303 = !DILocation(line: 120, column: 15, scope: !24281)
!24304 = !DILocation(line: 121, column: 3, scope: !24281)
!24305 = !DILocation(line: 114, column: 41, scope: !24276)
!24306 = !DILocation(line: 114, column: 36, scope: !24276)
!24307 = !DILocation(line: 114, column: 34, scope: !24276)
!24308 = !DILocation(line: 114, column: 3, scope: !24276)
!24309 = distinct !{!24309, !24278, !24310}
!24310 = !DILocation(line: 121, column: 3, scope: !24272)
!24311 = !DILocation(line: 123, column: 7, scope: !24312)
!24312 = distinct !DILexicalBlock(scope: !24246, file: !2344, line: 123, column: 7)
!24313 = !DILocation(line: 123, column: 9, scope: !24312)
!24314 = !DILocation(line: 123, column: 7, scope: !24246)
!24315 = !DILocation(line: 124, column: 37, scope: !24316)
!24316 = distinct !DILexicalBlock(scope: !24312, file: !2344, line: 123, column: 18)
!24317 = !DILocation(line: 124, column: 41, scope: !24316)
!24318 = !DILocation(line: 124, column: 4, scope: !24316)
!24319 = !DILocation(line: 125, column: 3, scope: !24316)
!24320 = !DILocation(line: 127, column: 7, scope: !24321)
!24321 = distinct !DILexicalBlock(scope: !24246, file: !2344, line: 127, column: 7)
!24322 = !DILocation(line: 127, column: 13, scope: !24321)
!24323 = !DILocation(line: 127, column: 10, scope: !24321)
!24324 = !DILocation(line: 127, column: 7, scope: !24246)
!24325 = !DILocalVariable(name: "next_time", scope: !24326, file: !2344, line: 137, type: !250)
!24326 = distinct !DILexicalBlock(scope: !24321, file: !2344, line: 127, column: 22)
!24327 = !DILocation(line: 137, column: 12, scope: !24326)
!24328 = !DILocation(line: 137, column: 24, scope: !24326)
!24329 = !DILocation(line: 139, column: 8, scope: !24330)
!24330 = distinct !DILexicalBlock(scope: !24326, file: !2344, line: 139, column: 8)
!24331 = !DILocation(line: 139, column: 18, scope: !24330)
!24332 = !DILocation(line: 139, column: 23, scope: !24330)
!24333 = !DILocation(line: 140, column: 22, scope: !24330)
!24334 = !DILocation(line: 140, column: 37, scope: !24330)
!24335 = !DILocation(line: 140, column: 34, scope: !24330)
!24336 = !DILocation(line: 139, column: 8, scope: !24326)
!24337 = !DILocation(line: 141, column: 27, scope: !24338)
!24338 = distinct !DILexicalBlock(scope: !24330, file: !2344, line: 140, column: 48)
!24339 = !DILocation(line: 141, column: 5, scope: !24338)
!24340 = !DILocation(line: 142, column: 4, scope: !24338)
!24341 = !DILocation(line: 146, column: 3, scope: !24326)
!24342 = !DILocation(line: 147, column: 2, scope: !24246)
!24343 = !DILocalVariable(name: "l", arg: 1, scope: !24344, file: !222, line: 189, type: !24227)
!24344 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !24345, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24345 = !DISubroutineType(types: !24346)
!24346 = !{null, !24227, !24217}
!24347 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !24348)
!24348 = distinct !DILocation(line: 102, column: 2, scope: !24244)
!24349 = !DILocalVariable(name: "key", arg: 2, scope: !24344, file: !222, line: 190, type: !24217)
!24350 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !24348)
!24351 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !24348)
!24352 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !24348)
!24353 = !DILocalVariable(name: "key", arg: 1, scope: !24354, file: !3614, line: 84, type: !32)
!24354 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24355 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !24356)
!24356 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !24348)
!24357 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !24356)
!24358 = distinct !DILexicalBlock(scope: !24354, file: !3614, line: 87, column: 6)
!24359 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !24356)
!24360 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !24356)
!24361 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !24356)
!24362 = distinct !DILexicalBlock(scope: !24358, file: !3614, line: 87, column: 17)
!24363 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !24356)
!24364 = !{i64 1448511}
!24365 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !24356)
!24366 = distinct !{!24366, !24221, !24367}
!24367 = !DILocation(line: 147, column: 2, scope: !24216)
!24368 = !DILocation(line: 148, column: 1, scope: !24193)
!24369 = distinct !DISubprogram(name: "elapsed", scope: !2344, file: !2344, line: 62, type: !14522, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24370 = !DILocation(line: 64, column: 9, scope: !24369)
!24371 = !DILocation(line: 64, column: 28, scope: !24369)
!24372 = !DILocation(line: 64, column: 35, scope: !24369)
!24373 = !DILocation(line: 64, column: 2, scope: !24369)
!24374 = distinct !DISubprogram(name: "first", scope: !2344, file: !2344, line: 39, type: !24375, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24375 = !DISubroutineType(types: !24376)
!24376 = !{!2317}
!24377 = !DILocalVariable(name: "t", scope: !24374, file: !2344, line: 41, type: !24378)
!24378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!24379 = !DILocation(line: 41, column: 15, scope: !24374)
!24380 = !DILocation(line: 41, column: 19, scope: !24374)
!24381 = !DILocation(line: 43, column: 9, scope: !24374)
!24382 = !DILocation(line: 43, column: 11, scope: !24374)
!24383 = !DILocation(line: 43, column: 28, scope: !24374)
!24384 = !DILocation(line: 43, column: 2, scope: !24374)
!24385 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !24386, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24386 = !DISubroutineType(types: !24387)
!24387 = !{null, !24378, !24378}
!24388 = !DILocalVariable(name: "successor", arg: 1, scope: !24385, file: !124, line: 443, type: !24378)
!24389 = !DILocation(line: 443, column: 50, scope: !24385)
!24390 = !DILocalVariable(name: "node", arg: 2, scope: !24385, file: !124, line: 443, type: !24378)
!24391 = !DILocation(line: 443, column: 74, scope: !24385)
!24392 = !DILocalVariable(name: "prev", scope: !24385, file: !124, line: 445, type: !24393)
!24393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24378)
!24394 = !DILocation(line: 445, column: 21, scope: !24385)
!24395 = !DILocation(line: 445, column: 28, scope: !24385)
!24396 = !DILocation(line: 445, column: 39, scope: !24385)
!24397 = !DILocation(line: 447, column: 15, scope: !24385)
!24398 = !DILocation(line: 447, column: 2, scope: !24385)
!24399 = !DILocation(line: 447, column: 8, scope: !24385)
!24400 = !DILocation(line: 447, column: 13, scope: !24385)
!24401 = !DILocation(line: 448, column: 15, scope: !24385)
!24402 = !DILocation(line: 448, column: 2, scope: !24385)
!24403 = !DILocation(line: 448, column: 8, scope: !24385)
!24404 = !DILocation(line: 448, column: 13, scope: !24385)
!24405 = !DILocation(line: 449, column: 15, scope: !24385)
!24406 = !DILocation(line: 449, column: 2, scope: !24385)
!24407 = !DILocation(line: 449, column: 8, scope: !24385)
!24408 = !DILocation(line: 449, column: 13, scope: !24385)
!24409 = !DILocation(line: 450, column: 20, scope: !24385)
!24410 = !DILocation(line: 450, column: 2, scope: !24385)
!24411 = !DILocation(line: 450, column: 13, scope: !24385)
!24412 = !DILocation(line: 450, column: 18, scope: !24385)
!24413 = !DILocation(line: 451, column: 1, scope: !24385)
!24414 = distinct !DISubprogram(name: "next", scope: !2344, file: !2344, line: 46, type: !24415, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24415 = !DISubroutineType(types: !24416)
!24416 = !{!2317, !2317}
!24417 = !DILocalVariable(name: "t", arg: 1, scope: !24414, file: !2344, line: 46, type: !2317)
!24418 = !DILocation(line: 46, column: 47, scope: !24414)
!24419 = !DILocalVariable(name: "n", scope: !24414, file: !2344, line: 48, type: !24378)
!24420 = !DILocation(line: 48, column: 15, scope: !24414)
!24421 = !DILocation(line: 48, column: 55, scope: !24414)
!24422 = !DILocation(line: 48, column: 58, scope: !24414)
!24423 = !DILocation(line: 48, column: 19, scope: !24414)
!24424 = !DILocation(line: 50, column: 9, scope: !24414)
!24425 = !DILocation(line: 50, column: 11, scope: !24414)
!24426 = !DILocation(line: 50, column: 28, scope: !24414)
!24427 = !DILocation(line: 50, column: 2, scope: !24414)
!24428 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !24429, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24429 = !DISubroutineType(types: !24430)
!24430 = !{null, !24431, !24378}
!24431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!24432 = !DILocalVariable(name: "list", arg: 1, scope: !24428, file: !124, line: 404, type: !24431)
!24433 = !DILocation(line: 404, column: 50, scope: !24428)
!24434 = !DILocalVariable(name: "node", arg: 2, scope: !24428, file: !124, line: 404, type: !24378)
!24435 = !DILocation(line: 404, column: 69, scope: !24428)
!24436 = !DILocalVariable(name: "tail", scope: !24428, file: !124, line: 406, type: !24393)
!24437 = !DILocation(line: 406, column: 21, scope: !24428)
!24438 = !DILocation(line: 406, column: 28, scope: !24428)
!24439 = !DILocation(line: 406, column: 34, scope: !24428)
!24440 = !DILocation(line: 408, column: 15, scope: !24428)
!24441 = !DILocation(line: 408, column: 2, scope: !24428)
!24442 = !DILocation(line: 408, column: 8, scope: !24428)
!24443 = !DILocation(line: 408, column: 13, scope: !24428)
!24444 = !DILocation(line: 409, column: 15, scope: !24428)
!24445 = !DILocation(line: 409, column: 2, scope: !24428)
!24446 = !DILocation(line: 409, column: 8, scope: !24428)
!24447 = !DILocation(line: 409, column: 13, scope: !24428)
!24448 = !DILocation(line: 411, column: 15, scope: !24428)
!24449 = !DILocation(line: 411, column: 2, scope: !24428)
!24450 = !DILocation(line: 411, column: 8, scope: !24428)
!24451 = !DILocation(line: 411, column: 13, scope: !24428)
!24452 = !DILocation(line: 412, column: 15, scope: !24428)
!24453 = !DILocation(line: 412, column: 2, scope: !24428)
!24454 = !DILocation(line: 412, column: 8, scope: !24428)
!24455 = !DILocation(line: 412, column: 13, scope: !24428)
!24456 = !DILocation(line: 413, column: 1, scope: !24428)
!24457 = distinct !DISubprogram(name: "next_timeout", scope: !2344, file: !2344, line: 67, type: !14522, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24458 = !DILocalVariable(name: "to", scope: !24457, file: !2344, line: 69, type: !2317)
!24459 = !DILocation(line: 69, column: 19, scope: !24457)
!24460 = !DILocation(line: 69, column: 24, scope: !24457)
!24461 = !DILocalVariable(name: "ticks_elapsed", scope: !24457, file: !2344, line: 70, type: !250)
!24462 = !DILocation(line: 70, column: 10, scope: !24457)
!24463 = !DILocation(line: 70, column: 26, scope: !24457)
!24464 = !DILocalVariable(name: "ret", scope: !24457, file: !2344, line: 71, type: !250)
!24465 = !DILocation(line: 71, column: 10, scope: !24457)
!24466 = !DILocation(line: 73, column: 7, scope: !24467)
!24467 = distinct !DILexicalBlock(scope: !24457, file: !2344, line: 73, column: 6)
!24468 = !DILocation(line: 73, column: 10, scope: !24467)
!24469 = !DILocation(line: 73, column: 19, scope: !24467)
!24470 = !DILocation(line: 74, column: 17, scope: !24467)
!24471 = !DILocation(line: 74, column: 21, scope: !24467)
!24472 = !DILocation(line: 74, column: 30, scope: !24467)
!24473 = !DILocation(line: 74, column: 28, scope: !24467)
!24474 = !DILocation(line: 74, column: 45, scope: !24467)
!24475 = !DILocation(line: 73, column: 6, scope: !24457)
!24476 = !DILocation(line: 75, column: 7, scope: !24477)
!24477 = distinct !DILexicalBlock(scope: !24467, file: !2344, line: 74, column: 66)
!24478 = !DILocation(line: 76, column: 2, scope: !24477)
!24479 = !DILocation(line: 77, column: 9, scope: !24480)
!24480 = distinct !DILexicalBlock(scope: !24467, file: !2344, line: 76, column: 9)
!24481 = !DILocation(line: 77, column: 7, scope: !24480)
!24482 = !DILocation(line: 81, column: 20, scope: !24483)
!24483 = distinct !DILexicalBlock(scope: !24457, file: !2344, line: 81, column: 6)
!24484 = !DILocation(line: 81, column: 6, scope: !24483)
!24485 = !DILocation(line: 81, column: 32, scope: !24483)
!24486 = !DILocation(line: 81, column: 49, scope: !24483)
!24487 = !DILocation(line: 81, column: 63, scope: !24483)
!24488 = !DILocation(line: 81, column: 61, scope: !24483)
!24489 = !DILocation(line: 81, column: 6, scope: !24457)
!24490 = !DILocation(line: 82, column: 23, scope: !24491)
!24491 = distinct !DILexicalBlock(scope: !24483, file: !2344, line: 81, column: 68)
!24492 = !DILocation(line: 82, column: 7, scope: !24491)
!24493 = !DILocation(line: 83, column: 2, scope: !24491)
!24494 = !DILocation(line: 85, column: 9, scope: !24457)
!24495 = !DILocation(line: 85, column: 2, scope: !24457)
!24496 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !24497, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24497 = !DISubroutineType(types: !24498)
!24498 = !{!24378, !24431, !24378}
!24499 = !DILocalVariable(name: "list", arg: 1, scope: !24496, file: !124, line: 341, type: !24431)
!24500 = !DILocation(line: 341, column: 61, scope: !24496)
!24501 = !DILocalVariable(name: "node", arg: 2, scope: !24496, file: !124, line: 342, type: !24378)
!24502 = !DILocation(line: 342, column: 26, scope: !24496)
!24503 = !DILocation(line: 344, column: 10, scope: !24496)
!24504 = !DILocation(line: 344, column: 15, scope: !24496)
!24505 = !DILocation(line: 344, column: 9, scope: !24496)
!24506 = !DILocation(line: 344, column: 55, scope: !24496)
!24507 = !DILocation(line: 344, column: 61, scope: !24496)
!24508 = !DILocation(line: 344, column: 26, scope: !24496)
!24509 = !DILocation(line: 344, column: 2, scope: !24496)
!24510 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !24497, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24511 = !DILocalVariable(name: "list", arg: 1, scope: !24510, file: !124, line: 325, type: !24431)
!24512 = !DILocation(line: 325, column: 70, scope: !24510)
!24513 = !DILocalVariable(name: "node", arg: 2, scope: !24510, file: !124, line: 326, type: !24378)
!24514 = !DILocation(line: 326, column: 21, scope: !24510)
!24515 = !DILocation(line: 328, column: 10, scope: !24510)
!24516 = !DILocation(line: 328, column: 18, scope: !24510)
!24517 = !DILocation(line: 328, column: 24, scope: !24510)
!24518 = !DILocation(line: 328, column: 15, scope: !24510)
!24519 = !DILocation(line: 328, column: 9, scope: !24510)
!24520 = !DILocation(line: 328, column: 39, scope: !24510)
!24521 = !DILocation(line: 328, column: 45, scope: !24510)
!24522 = !DILocation(line: 328, column: 2, scope: !24510)
!24523 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !24524, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24524 = !DISubroutineType(types: !24525)
!24525 = !{!24378, !24431}
!24526 = !DILocalVariable(name: "list", arg: 1, scope: !24523, file: !124, line: 294, type: !24431)
!24527 = !DILocation(line: 294, column: 61, scope: !24523)
!24528 = !DILocation(line: 296, column: 28, scope: !24523)
!24529 = !DILocation(line: 296, column: 9, scope: !24523)
!24530 = !DILocation(line: 296, column: 43, scope: !24523)
!24531 = !DILocation(line: 296, column: 49, scope: !24523)
!24532 = !DILocation(line: 296, column: 2, scope: !24523)
!24533 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !24534, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24534 = !DISubroutineType(types: !24535)
!24535 = !{!717, !24431}
!24536 = !DILocalVariable(name: "list", arg: 1, scope: !24533, file: !124, line: 266, type: !24431)
!24537 = !DILocation(line: 266, column: 52, scope: !24533)
!24538 = !DILocation(line: 268, column: 9, scope: !24533)
!24539 = !DILocation(line: 268, column: 15, scope: !24533)
!24540 = !DILocation(line: 268, column: 23, scope: !24533)
!24541 = !DILocation(line: 268, column: 20, scope: !24533)
!24542 = !DILocation(line: 268, column: 2, scope: !24533)
!24543 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2344, file: !2344, line: 150, type: !24544, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24544 = !DISubroutineType(types: !24545)
!24545 = !{!103, !2317}
!24546 = !DILocalVariable(name: "to", arg: 1, scope: !24543, file: !2344, line: 150, type: !2317)
!24547 = !DILocation(line: 150, column: 38, scope: !24543)
!24548 = !DILocalVariable(name: "ret", scope: !24543, file: !2344, line: 152, type: !103)
!24549 = !DILocation(line: 152, column: 6, scope: !24543)
!24550 = !DILocalVariable(name: "__i", scope: !24551, file: !2344, line: 154, type: !24217)
!24551 = distinct !DILexicalBlock(scope: !24543, file: !2344, line: 154, column: 2)
!24552 = !DILocation(line: 154, column: 2, scope: !24551)
!24553 = !DILocalVariable(name: "__key", scope: !24551, file: !2344, line: 154, type: !24217)
!24554 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24555)
!24555 = distinct !DILocation(line: 154, column: 2, scope: !24551)
!24556 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24555)
!24557 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24555)
!24558 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24559)
!24559 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24555)
!24560 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24559)
!24561 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24559)
!24562 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24555)
!24563 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24555)
!24564 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24555)
!24565 = !DILocation(line: 154, column: 2, scope: !24566)
!24566 = distinct !DILexicalBlock(scope: !24551, file: !2344, line: 154, column: 2)
!24567 = !DILocation(line: 155, column: 28, scope: !24568)
!24568 = distinct !DILexicalBlock(scope: !24569, file: !2344, line: 155, column: 7)
!24569 = distinct !DILexicalBlock(scope: !24566, file: !2344, line: 154, column: 24)
!24570 = !DILocation(line: 155, column: 32, scope: !24568)
!24571 = !DILocation(line: 155, column: 7, scope: !24568)
!24572 = !DILocation(line: 155, column: 7, scope: !24569)
!24573 = !DILocation(line: 156, column: 19, scope: !24574)
!24574 = distinct !DILexicalBlock(scope: !24568, file: !2344, line: 155, column: 39)
!24575 = !DILocation(line: 156, column: 4, scope: !24574)
!24576 = !DILocation(line: 157, column: 8, scope: !24574)
!24577 = !DILocation(line: 158, column: 3, scope: !24574)
!24578 = !DILocation(line: 159, column: 2, scope: !24569)
!24579 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !24580)
!24580 = distinct !DILocation(line: 154, column: 2, scope: !24566)
!24581 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !24580)
!24582 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !24580)
!24583 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !24580)
!24584 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !24585)
!24585 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !24580)
!24586 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !24585)
!24587 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !24585)
!24588 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !24585)
!24589 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !24585)
!24590 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !24585)
!24591 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !24585)
!24592 = distinct !{!24592, !24552, !24593}
!24593 = !DILocation(line: 159, column: 2, scope: !24551)
!24594 = !DILocation(line: 161, column: 9, scope: !24543)
!24595 = !DILocation(line: 161, column: 2, scope: !24543)
!24596 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !24597, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24597 = !DISubroutineType(types: !24598)
!24598 = !{!717, !24599}
!24599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24600, size: 32)
!24600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2321)
!24601 = !DILocalVariable(name: "node", arg: 1, scope: !24596, file: !124, line: 225, type: !24599)
!24602 = !DILocation(line: 225, column: 59, scope: !24596)
!24603 = !DILocation(line: 227, column: 9, scope: !24596)
!24604 = !DILocation(line: 227, column: 15, scope: !24596)
!24605 = !DILocation(line: 227, column: 20, scope: !24596)
!24606 = !DILocation(line: 227, column: 2, scope: !24596)
!24607 = distinct !DISubprogram(name: "remove_timeout", scope: !2344, file: !2344, line: 53, type: !2338, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24608 = !DILocalVariable(name: "t", arg: 1, scope: !24607, file: !2344, line: 53, type: !2317)
!24609 = !DILocation(line: 53, column: 45, scope: !24607)
!24610 = !DILocation(line: 55, column: 11, scope: !24611)
!24611 = distinct !DILexicalBlock(scope: !24607, file: !2344, line: 55, column: 6)
!24612 = !DILocation(line: 55, column: 6, scope: !24611)
!24613 = !DILocation(line: 55, column: 14, scope: !24611)
!24614 = !DILocation(line: 55, column: 6, scope: !24607)
!24615 = !DILocation(line: 56, column: 22, scope: !24616)
!24616 = distinct !DILexicalBlock(scope: !24611, file: !2344, line: 55, column: 23)
!24617 = !DILocation(line: 56, column: 25, scope: !24616)
!24618 = !DILocation(line: 56, column: 8, scope: !24616)
!24619 = !DILocation(line: 56, column: 3, scope: !24616)
!24620 = !DILocation(line: 56, column: 12, scope: !24616)
!24621 = !DILocation(line: 56, column: 19, scope: !24616)
!24622 = !DILocation(line: 57, column: 2, scope: !24616)
!24623 = !DILocation(line: 59, column: 20, scope: !24607)
!24624 = !DILocation(line: 59, column: 23, scope: !24607)
!24625 = !DILocation(line: 59, column: 2, scope: !24607)
!24626 = !DILocation(line: 60, column: 1, scope: !24607)
!24627 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !24628, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24628 = !DISubroutineType(types: !24629)
!24629 = !{null, !24378}
!24630 = !DILocalVariable(name: "node", arg: 1, scope: !24627, file: !124, line: 496, type: !24378)
!24631 = !DILocation(line: 496, column: 50, scope: !24627)
!24632 = !DILocalVariable(name: "prev", scope: !24627, file: !124, line: 498, type: !24393)
!24633 = !DILocation(line: 498, column: 21, scope: !24627)
!24634 = !DILocation(line: 498, column: 28, scope: !24627)
!24635 = !DILocation(line: 498, column: 34, scope: !24627)
!24636 = !DILocalVariable(name: "next", scope: !24627, file: !124, line: 499, type: !24393)
!24637 = !DILocation(line: 499, column: 21, scope: !24627)
!24638 = !DILocation(line: 499, column: 28, scope: !24627)
!24639 = !DILocation(line: 499, column: 34, scope: !24627)
!24640 = !DILocation(line: 501, column: 15, scope: !24627)
!24641 = !DILocation(line: 501, column: 2, scope: !24627)
!24642 = !DILocation(line: 501, column: 8, scope: !24627)
!24643 = !DILocation(line: 501, column: 13, scope: !24627)
!24644 = !DILocation(line: 502, column: 15, scope: !24627)
!24645 = !DILocation(line: 502, column: 2, scope: !24627)
!24646 = !DILocation(line: 502, column: 8, scope: !24627)
!24647 = !DILocation(line: 502, column: 13, scope: !24627)
!24648 = !DILocation(line: 503, column: 17, scope: !24627)
!24649 = !DILocation(line: 503, column: 2, scope: !24627)
!24650 = !DILocation(line: 504, column: 1, scope: !24627)
!24651 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !24628, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24652 = !DILocalVariable(name: "node", arg: 1, scope: !24651, file: !124, line: 211, type: !24378)
!24653 = !DILocation(line: 211, column: 48, scope: !24651)
!24654 = !DILocation(line: 213, column: 2, scope: !24651)
!24655 = !DILocation(line: 213, column: 8, scope: !24651)
!24656 = !DILocation(line: 213, column: 13, scope: !24651)
!24657 = !DILocation(line: 214, column: 2, scope: !24651)
!24658 = !DILocation(line: 214, column: 8, scope: !24651)
!24659 = !DILocation(line: 214, column: 13, scope: !24651)
!24660 = !DILocation(line: 215, column: 1, scope: !24651)
!24661 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2344, file: !2344, line: 183, type: !24662, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24662 = !DISubroutineType(types: !24663)
!24663 = !{!293, !24664}
!24664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24665, size: 32)
!24665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2318)
!24666 = !DILocalVariable(name: "timeout", arg: 1, scope: !24661, file: !2344, line: 183, type: !24664)
!24667 = !DILocation(line: 183, column: 54, scope: !24661)
!24668 = !DILocalVariable(name: "ticks", scope: !24661, file: !2344, line: 185, type: !293)
!24669 = !DILocation(line: 185, column: 12, scope: !24661)
!24670 = !DILocalVariable(name: "__i", scope: !24671, file: !2344, line: 187, type: !24217)
!24671 = distinct !DILexicalBlock(scope: !24661, file: !2344, line: 187, column: 2)
!24672 = !DILocation(line: 187, column: 2, scope: !24671)
!24673 = !DILocalVariable(name: "__key", scope: !24671, file: !2344, line: 187, type: !24217)
!24674 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24675)
!24675 = distinct !DILocation(line: 187, column: 2, scope: !24671)
!24676 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24675)
!24677 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24675)
!24678 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24679)
!24679 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24675)
!24680 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24679)
!24681 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24679)
!24682 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24675)
!24683 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24675)
!24684 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24675)
!24685 = !DILocation(line: 187, column: 2, scope: !24686)
!24686 = distinct !DILexicalBlock(scope: !24671, file: !2344, line: 187, column: 2)
!24687 = !DILocation(line: 188, column: 23, scope: !24688)
!24688 = distinct !DILexicalBlock(scope: !24686, file: !2344, line: 187, column: 24)
!24689 = !DILocation(line: 188, column: 11, scope: !24688)
!24690 = !DILocation(line: 188, column: 9, scope: !24688)
!24691 = !DILocation(line: 189, column: 2, scope: !24688)
!24692 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !24693)
!24693 = distinct !DILocation(line: 187, column: 2, scope: !24686)
!24694 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !24693)
!24695 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !24693)
!24696 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !24693)
!24697 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !24698)
!24698 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !24693)
!24699 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !24698)
!24700 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !24698)
!24701 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !24698)
!24702 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !24698)
!24703 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !24698)
!24704 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !24698)
!24705 = distinct !{!24705, !24672, !24706}
!24706 = !DILocation(line: 189, column: 2, scope: !24671)
!24707 = !DILocation(line: 191, column: 9, scope: !24661)
!24708 = !DILocation(line: 191, column: 2, scope: !24661)
!24709 = distinct !DISubprogram(name: "timeout_rem", scope: !2344, file: !2344, line: 165, type: !24662, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24710 = !DILocalVariable(name: "timeout", arg: 1, scope: !24709, file: !2344, line: 165, type: !24664)
!24711 = !DILocation(line: 165, column: 53, scope: !24709)
!24712 = !DILocalVariable(name: "ticks", scope: !24709, file: !2344, line: 167, type: !293)
!24713 = !DILocation(line: 167, column: 12, scope: !24709)
!24714 = !DILocation(line: 169, column: 28, scope: !24715)
!24715 = distinct !DILexicalBlock(scope: !24709, file: !2344, line: 169, column: 6)
!24716 = !DILocation(line: 169, column: 6, scope: !24715)
!24717 = !DILocation(line: 169, column: 6, scope: !24709)
!24718 = !DILocation(line: 170, column: 3, scope: !24719)
!24719 = distinct !DILexicalBlock(scope: !24715, file: !2344, line: 169, column: 38)
!24720 = !DILocalVariable(name: "t", scope: !24721, file: !2344, line: 173, type: !2317)
!24721 = distinct !DILexicalBlock(scope: !24709, file: !2344, line: 173, column: 2)
!24722 = !DILocation(line: 173, column: 24, scope: !24721)
!24723 = !DILocation(line: 173, column: 28, scope: !24721)
!24724 = !DILocation(line: 173, column: 7, scope: !24721)
!24725 = !DILocation(line: 173, column: 37, scope: !24726)
!24726 = distinct !DILexicalBlock(scope: !24721, file: !2344, line: 173, column: 2)
!24727 = !DILocation(line: 173, column: 39, scope: !24726)
!24728 = !DILocation(line: 173, column: 2, scope: !24721)
!24729 = !DILocation(line: 174, column: 12, scope: !24730)
!24730 = distinct !DILexicalBlock(scope: !24726, file: !2344, line: 173, column: 61)
!24731 = !DILocation(line: 174, column: 15, scope: !24730)
!24732 = !DILocation(line: 174, column: 9, scope: !24730)
!24733 = !DILocation(line: 175, column: 7, scope: !24734)
!24734 = distinct !DILexicalBlock(scope: !24730, file: !2344, line: 175, column: 7)
!24735 = !DILocation(line: 175, column: 18, scope: !24734)
!24736 = !DILocation(line: 175, column: 15, scope: !24734)
!24737 = !DILocation(line: 175, column: 7, scope: !24730)
!24738 = !DILocation(line: 176, column: 4, scope: !24739)
!24739 = distinct !DILexicalBlock(scope: !24734, file: !2344, line: 175, column: 21)
!24740 = !DILocation(line: 178, column: 2, scope: !24730)
!24741 = !DILocation(line: 173, column: 57, scope: !24726)
!24742 = !DILocation(line: 173, column: 52, scope: !24726)
!24743 = !DILocation(line: 173, column: 50, scope: !24726)
!24744 = !DILocation(line: 173, column: 2, scope: !24726)
!24745 = distinct !{!24745, !24728, !24746}
!24746 = !DILocation(line: 178, column: 2, scope: !24721)
!24747 = !DILocation(line: 180, column: 9, scope: !24709)
!24748 = !DILocation(line: 180, column: 17, scope: !24709)
!24749 = !DILocation(line: 180, column: 15, scope: !24709)
!24750 = !DILocation(line: 180, column: 2, scope: !24709)
!24751 = !DILocation(line: 181, column: 1, scope: !24709)
!24752 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !19462, file: !19462, line: 35, type: !24753, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24753 = !DISubroutineType(types: !24754)
!24754 = !{!717, !24664}
!24755 = !DILocalVariable(name: "to", arg: 1, scope: !24752, file: !19462, line: 35, type: !24664)
!24756 = !DILocation(line: 35, column: 65, scope: !24752)
!24757 = !DILocation(line: 37, column: 31, scope: !24752)
!24758 = !DILocation(line: 37, column: 35, scope: !24752)
!24759 = !DILocation(line: 37, column: 10, scope: !24752)
!24760 = !DILocation(line: 37, column: 9, scope: !24752)
!24761 = !DILocation(line: 37, column: 2, scope: !24752)
!24762 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2344, file: !2344, line: 194, type: !24662, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24763 = !DILocalVariable(name: "timeout", arg: 1, scope: !24762, file: !2344, line: 194, type: !24664)
!24764 = !DILocation(line: 194, column: 52, scope: !24762)
!24765 = !DILocalVariable(name: "ticks", scope: !24762, file: !2344, line: 196, type: !293)
!24766 = !DILocation(line: 196, column: 12, scope: !24762)
!24767 = !DILocalVariable(name: "__i", scope: !24768, file: !2344, line: 198, type: !24217)
!24768 = distinct !DILexicalBlock(scope: !24762, file: !2344, line: 198, column: 2)
!24769 = !DILocation(line: 198, column: 2, scope: !24768)
!24770 = !DILocalVariable(name: "__key", scope: !24768, file: !2344, line: 198, type: !24217)
!24771 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24772)
!24772 = distinct !DILocation(line: 198, column: 2, scope: !24768)
!24773 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24772)
!24774 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24772)
!24775 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24776)
!24776 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24772)
!24777 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24776)
!24778 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24776)
!24779 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24772)
!24780 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24772)
!24781 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24772)
!24782 = !DILocation(line: 198, column: 2, scope: !24783)
!24783 = distinct !DILexicalBlock(scope: !24768, file: !2344, line: 198, column: 2)
!24784 = !DILocation(line: 199, column: 11, scope: !24785)
!24785 = distinct !DILexicalBlock(scope: !24783, file: !2344, line: 198, column: 24)
!24786 = !DILocation(line: 199, column: 35, scope: !24785)
!24787 = !DILocation(line: 199, column: 23, scope: !24785)
!24788 = !DILocation(line: 199, column: 21, scope: !24785)
!24789 = !DILocation(line: 199, column: 9, scope: !24785)
!24790 = !DILocation(line: 200, column: 2, scope: !24785)
!24791 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !24792)
!24792 = distinct !DILocation(line: 198, column: 2, scope: !24783)
!24793 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !24792)
!24794 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !24792)
!24795 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !24792)
!24796 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !24797)
!24797 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !24792)
!24798 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !24797)
!24799 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !24797)
!24800 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !24797)
!24801 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !24797)
!24802 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !24797)
!24803 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !24797)
!24804 = distinct !{!24804, !24769, !24805}
!24805 = !DILocation(line: 200, column: 2, scope: !24768)
!24806 = !DILocation(line: 202, column: 9, scope: !24762)
!24807 = !DILocation(line: 202, column: 2, scope: !24762)
!24808 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2344, file: !2344, line: 205, type: !14522, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24809 = !DILocalVariable(name: "ret", scope: !24808, file: !2344, line: 207, type: !250)
!24810 = !DILocation(line: 207, column: 10, scope: !24808)
!24811 = !DILocalVariable(name: "__i", scope: !24812, file: !2344, line: 209, type: !24217)
!24812 = distinct !DILexicalBlock(scope: !24808, file: !2344, line: 209, column: 2)
!24813 = !DILocation(line: 209, column: 2, scope: !24812)
!24814 = !DILocalVariable(name: "__key", scope: !24812, file: !2344, line: 209, type: !24217)
!24815 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24816)
!24816 = distinct !DILocation(line: 209, column: 2, scope: !24812)
!24817 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24816)
!24818 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24816)
!24819 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24820)
!24820 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24816)
!24821 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24820)
!24822 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24820)
!24823 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24816)
!24824 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24816)
!24825 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24816)
!24826 = !DILocation(line: 209, column: 2, scope: !24827)
!24827 = distinct !DILexicalBlock(scope: !24812, file: !2344, line: 209, column: 2)
!24828 = !DILocation(line: 210, column: 9, scope: !24829)
!24829 = distinct !DILexicalBlock(scope: !24827, file: !2344, line: 209, column: 24)
!24830 = !DILocation(line: 210, column: 7, scope: !24829)
!24831 = !DILocation(line: 211, column: 2, scope: !24829)
!24832 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !24833)
!24833 = distinct !DILocation(line: 209, column: 2, scope: !24827)
!24834 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !24833)
!24835 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !24833)
!24836 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !24833)
!24837 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !24838)
!24838 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !24833)
!24839 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !24838)
!24840 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !24838)
!24841 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !24838)
!24842 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !24838)
!24843 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !24838)
!24844 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !24838)
!24845 = distinct !{!24845, !24813, !24846}
!24846 = !DILocation(line: 211, column: 2, scope: !24812)
!24847 = !DILocation(line: 212, column: 9, scope: !24808)
!24848 = !DILocation(line: 212, column: 2, scope: !24808)
!24849 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2344, file: !2344, line: 215, type: !14117, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24850 = !DILocalVariable(name: "ticks", arg: 1, scope: !24849, file: !2344, line: 215, type: !250)
!24851 = !DILocation(line: 215, column: 35, scope: !24849)
!24852 = !DILocalVariable(name: "is_idle", arg: 2, scope: !24849, file: !2344, line: 215, type: !717)
!24853 = !DILocation(line: 215, column: 47, scope: !24849)
!24854 = !DILocalVariable(name: "__i", scope: !24855, file: !2344, line: 217, type: !24217)
!24855 = distinct !DILexicalBlock(scope: !24849, file: !2344, line: 217, column: 2)
!24856 = !DILocation(line: 217, column: 2, scope: !24855)
!24857 = !DILocalVariable(name: "__key", scope: !24855, file: !2344, line: 217, type: !24217)
!24858 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24859)
!24859 = distinct !DILocation(line: 217, column: 2, scope: !24855)
!24860 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24859)
!24861 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24859)
!24862 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24863)
!24863 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24859)
!24864 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24863)
!24865 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24863)
!24866 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24859)
!24867 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24859)
!24868 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24859)
!24869 = !DILocation(line: 217, column: 2, scope: !24870)
!24870 = distinct !DILexicalBlock(scope: !24855, file: !2344, line: 217, column: 2)
!24871 = !DILocalVariable(name: "next_to", scope: !24872, file: !2344, line: 218, type: !103)
!24872 = distinct !DILexicalBlock(scope: !24870, file: !2344, line: 217, column: 24)
!24873 = !DILocation(line: 218, column: 7, scope: !24872)
!24874 = !DILocation(line: 218, column: 17, scope: !24872)
!24875 = !DILocalVariable(name: "sooner", scope: !24872, file: !2344, line: 219, type: !717)
!24876 = !DILocation(line: 219, column: 8, scope: !24872)
!24877 = !DILocation(line: 219, column: 18, scope: !24872)
!24878 = !DILocation(line: 219, column: 26, scope: !24872)
!24879 = !DILocation(line: 220, column: 10, scope: !24872)
!24880 = !DILocation(line: 220, column: 14, scope: !24872)
!24881 = !DILocation(line: 220, column: 23, scope: !24872)
!24882 = !DILocation(line: 220, column: 20, scope: !24872)
!24883 = !DILocalVariable(name: "imminent", scope: !24872, file: !2344, line: 221, type: !717)
!24884 = !DILocation(line: 221, column: 8, scope: !24872)
!24885 = !DILocation(line: 221, column: 19, scope: !24872)
!24886 = !DILocation(line: 221, column: 27, scope: !24872)
!24887 = !DILocation(line: 233, column: 8, scope: !24888)
!24888 = distinct !DILexicalBlock(scope: !24872, file: !2344, line: 233, column: 7)
!24889 = !DILocation(line: 233, column: 17, scope: !24888)
!24890 = !DILocation(line: 233, column: 21, scope: !24888)
!24891 = !DILocation(line: 233, column: 7, scope: !24872)
!24892 = !DILocation(line: 234, column: 26, scope: !24893)
!24893 = distinct !DILexicalBlock(scope: !24888, file: !2344, line: 233, column: 56)
!24894 = !DILocation(line: 234, column: 47, scope: !24893)
!24895 = !DILocation(line: 234, column: 4, scope: !24893)
!24896 = !DILocation(line: 235, column: 3, scope: !24893)
!24897 = !DILocation(line: 236, column: 2, scope: !24872)
!24898 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !24899)
!24899 = distinct !DILocation(line: 217, column: 2, scope: !24870)
!24900 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !24899)
!24901 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !24899)
!24902 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !24899)
!24903 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !24904)
!24904 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !24899)
!24905 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !24904)
!24906 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !24904)
!24907 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !24904)
!24908 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !24904)
!24909 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !24904)
!24910 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !24904)
!24911 = distinct !{!24911, !24856, !24912}
!24912 = !DILocation(line: 236, column: 2, scope: !24855)
!24913 = !DILocation(line: 237, column: 1, scope: !24849)
!24914 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2344, file: !2344, line: 239, type: !371, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!24915 = !DILocalVariable(name: "ticks", arg: 1, scope: !24914, file: !2344, line: 239, type: !250)
!24916 = !DILocation(line: 239, column: 33, scope: !24914)
!24917 = !DILocation(line: 242, column: 15, scope: !24914)
!24918 = !DILocation(line: 242, column: 2, scope: !24914)
!24919 = !DILocalVariable(name: "key", scope: !24914, file: !2344, line: 245, type: !24217)
!24920 = !DILocation(line: 245, column: 19, scope: !24914)
!24921 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24922)
!24922 = distinct !DILocation(line: 245, column: 25, scope: !24914)
!24923 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24922)
!24924 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24922)
!24925 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24926)
!24926 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24922)
!24927 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24926)
!24928 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24926)
!24929 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24922)
!24930 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24922)
!24931 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24922)
!24932 = !DILocation(line: 245, column: 25, scope: !24914)
!24933 = !DILocation(line: 259, column: 23, scope: !24914)
!24934 = !DILocation(line: 259, column: 21, scope: !24914)
!24935 = !DILocation(line: 261, column: 2, scope: !24914)
!24936 = !DILocation(line: 261, column: 9, scope: !24914)
!24937 = !DILocation(line: 261, column: 17, scope: !24914)
!24938 = !DILocation(line: 261, column: 25, scope: !24914)
!24939 = !DILocation(line: 261, column: 28, scope: !24914)
!24940 = !DILocation(line: 261, column: 37, scope: !24914)
!24941 = !DILocation(line: 261, column: 47, scope: !24914)
!24942 = !DILocation(line: 261, column: 44, scope: !24914)
!24943 = !DILocation(line: 0, scope: !24914)
!24944 = !DILocalVariable(name: "t", scope: !24945, file: !2344, line: 262, type: !2317)
!24945 = distinct !DILexicalBlock(scope: !24914, file: !2344, line: 261, column: 67)
!24946 = !DILocation(line: 262, column: 20, scope: !24945)
!24947 = !DILocation(line: 262, column: 24, scope: !24945)
!24948 = !DILocalVariable(name: "dt", scope: !24945, file: !2344, line: 263, type: !103)
!24949 = !DILocation(line: 263, column: 7, scope: !24945)
!24950 = !DILocation(line: 263, column: 12, scope: !24945)
!24951 = !DILocation(line: 263, column: 15, scope: !24945)
!24952 = !DILocation(line: 265, column: 16, scope: !24945)
!24953 = !DILocation(line: 265, column: 13, scope: !24945)
!24954 = !DILocation(line: 266, column: 3, scope: !24945)
!24955 = !DILocation(line: 266, column: 6, scope: !24945)
!24956 = !DILocation(line: 266, column: 13, scope: !24945)
!24957 = !DILocation(line: 267, column: 18, scope: !24945)
!24958 = !DILocation(line: 267, column: 3, scope: !24945)
!24959 = !DILocation(line: 269, column: 3, scope: !24945)
!24960 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !24961)
!24961 = distinct !DILocation(line: 269, column: 3, scope: !24945)
!24962 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !24961)
!24963 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !24961)
!24964 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !24961)
!24965 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !24966)
!24966 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !24961)
!24967 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !24966)
!24968 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !24966)
!24969 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !24966)
!24970 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !24966)
!24971 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !24966)
!24972 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !24966)
!24973 = !DILocation(line: 270, column: 3, scope: !24945)
!24974 = !DILocation(line: 270, column: 6, scope: !24945)
!24975 = !DILocation(line: 270, column: 9, scope: !24945)
!24976 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !24977)
!24977 = distinct !DILocation(line: 271, column: 9, scope: !24945)
!24978 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !24977)
!24979 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !24977)
!24980 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !24981)
!24981 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !24977)
!24982 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !24981)
!24983 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !24981)
!24984 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !24977)
!24985 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !24977)
!24986 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !24977)
!24987 = !DILocation(line: 271, column: 9, scope: !24945)
!24988 = !DILocation(line: 272, column: 25, scope: !24945)
!24989 = !DILocation(line: 272, column: 22, scope: !24945)
!24990 = distinct !{!24990, !24935, !24991}
!24991 = !DILocation(line: 273, column: 2, scope: !24914)
!24992 = !DILocation(line: 275, column: 6, scope: !24993)
!24993 = distinct !DILexicalBlock(scope: !24914, file: !2344, line: 275, column: 6)
!24994 = !DILocation(line: 275, column: 14, scope: !24993)
!24995 = !DILocation(line: 275, column: 6, scope: !24914)
!24996 = !DILocation(line: 276, column: 22, scope: !24997)
!24997 = distinct !DILexicalBlock(scope: !24993, file: !2344, line: 275, column: 23)
!24998 = !DILocation(line: 276, column: 3, scope: !24997)
!24999 = !DILocation(line: 276, column: 12, scope: !24997)
!25000 = !DILocation(line: 276, column: 19, scope: !24997)
!25001 = !DILocation(line: 277, column: 2, scope: !24997)
!25002 = !DILocation(line: 279, column: 15, scope: !24914)
!25003 = !DILocation(line: 279, column: 12, scope: !24914)
!25004 = !DILocation(line: 280, column: 21, scope: !24914)
!25005 = !DILocation(line: 282, column: 24, scope: !24914)
!25006 = !DILocation(line: 282, column: 2, scope: !24914)
!25007 = !DILocation(line: 284, column: 2, scope: !24914)
!25008 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !25009)
!25009 = distinct !DILocation(line: 284, column: 2, scope: !24914)
!25010 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !25009)
!25011 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !25009)
!25012 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !25009)
!25013 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !25014)
!25014 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !25009)
!25015 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !25014)
!25016 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !25014)
!25017 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !25014)
!25018 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !25014)
!25019 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !25014)
!25020 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !25014)
!25021 = !DILocation(line: 285, column: 1, scope: !24914)
!25022 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2344, file: !2344, line: 287, type: !25023, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!25023 = !DISubroutineType(types: !25024)
!25024 = !{!186}
!25025 = !DILocalVariable(name: "t", scope: !25022, file: !2344, line: 289, type: !312)
!25026 = !DILocation(line: 289, column: 11, scope: !25022)
!25027 = !DILocalVariable(name: "__i", scope: !25028, file: !2344, line: 291, type: !24217)
!25028 = distinct !DILexicalBlock(scope: !25022, file: !2344, line: 291, column: 2)
!25029 = !DILocation(line: 291, column: 2, scope: !25028)
!25030 = !DILocalVariable(name: "__key", scope: !25028, file: !2344, line: 291, type: !24217)
!25031 = !DILocation(line: 136, column: 70, scope: !24224, inlinedAt: !25032)
!25032 = distinct !DILocation(line: 291, column: 2, scope: !25028)
!25033 = !DILocation(line: 138, column: 2, scope: !24224, inlinedAt: !25032)
!25034 = !DILocation(line: 139, column: 19, scope: !24224, inlinedAt: !25032)
!25035 = !DILocation(line: 44, column: 15, scope: !24234, inlinedAt: !25036)
!25036 = distinct !DILocation(line: 145, column: 10, scope: !24224, inlinedAt: !25032)
!25037 = !DILocation(line: 47, column: 2, scope: !24234, inlinedAt: !25036)
!25038 = !DILocation(line: 76, column: 9, scope: !24234, inlinedAt: !25036)
!25039 = !DILocation(line: 145, column: 4, scope: !24224, inlinedAt: !25032)
!25040 = !DILocation(line: 145, column: 8, scope: !24224, inlinedAt: !25032)
!25041 = !DILocation(line: 165, column: 2, scope: !24224, inlinedAt: !25032)
!25042 = !DILocation(line: 291, column: 2, scope: !25043)
!25043 = distinct !DILexicalBlock(scope: !25028, file: !2344, line: 291, column: 2)
!25044 = !DILocation(line: 292, column: 7, scope: !25045)
!25045 = distinct !DILexicalBlock(scope: !25043, file: !2344, line: 291, column: 24)
!25046 = !DILocation(line: 292, column: 19, scope: !25045)
!25047 = !DILocation(line: 292, column: 17, scope: !25045)
!25048 = !DILocation(line: 292, column: 5, scope: !25045)
!25049 = !DILocation(line: 293, column: 2, scope: !25045)
!25050 = !DILocation(line: 189, column: 60, scope: !24344, inlinedAt: !25051)
!25051 = distinct !DILocation(line: 291, column: 2, scope: !25043)
!25052 = !DILocation(line: 190, column: 23, scope: !24344, inlinedAt: !25051)
!25053 = !DILocation(line: 192, column: 2, scope: !24344, inlinedAt: !25051)
!25054 = !DILocation(line: 215, column: 22, scope: !24344, inlinedAt: !25051)
!25055 = !DILocation(line: 84, column: 56, scope: !24354, inlinedAt: !25056)
!25056 = distinct !DILocation(line: 215, column: 2, scope: !24344, inlinedAt: !25051)
!25057 = !DILocation(line: 87, column: 6, scope: !24358, inlinedAt: !25056)
!25058 = !DILocation(line: 87, column: 10, scope: !24358, inlinedAt: !25056)
!25059 = !DILocation(line: 87, column: 6, scope: !24354, inlinedAt: !25056)
!25060 = !DILocation(line: 88, column: 3, scope: !24362, inlinedAt: !25056)
!25061 = !DILocation(line: 90, column: 2, scope: !24354, inlinedAt: !25056)
!25062 = !DILocation(line: 110, column: 1, scope: !24354, inlinedAt: !25056)
!25063 = distinct !{!25063, !25029, !25064}
!25064 = !DILocation(line: 293, column: 2, scope: !25028)
!25065 = !DILocation(line: 294, column: 9, scope: !25022)
!25066 = !DILocation(line: 294, column: 2, scope: !25022)
!25067 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2344, file: !2344, line: 297, type: !9625, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!25068 = !DILocation(line: 300, column: 19, scope: !25067)
!25069 = !DILocation(line: 300, column: 9, scope: !25067)
!25070 = !DILocation(line: 300, column: 2, scope: !25067)
!25071 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2344, file: !2344, line: 306, type: !25023, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!25072 = !DILocation(line: 308, column: 9, scope: !25071)
!25073 = !DILocation(line: 308, column: 2, scope: !25071)
!25074 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2344, file: !2344, line: 319, type: !524, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!25075 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !25074, file: !2344, line: 319, type: !173)
!25076 = !DILocation(line: 319, column: 34, scope: !25074)
!25077 = !DILocation(line: 321, column: 2, scope: !25074)
!25078 = !DILocation(line: 321, column: 2, scope: !25079)
!25079 = distinct !DILexicalBlock(scope: !25074, file: !2344, line: 321, column: 2)
!25080 = !DILocation(line: 322, column: 6, scope: !25081)
!25081 = distinct !DILexicalBlock(scope: !25074, file: !2344, line: 322, column: 6)
!25082 = !DILocation(line: 322, column: 19, scope: !25081)
!25083 = !DILocation(line: 322, column: 6, scope: !25074)
!25084 = !DILocation(line: 323, column: 3, scope: !25085)
!25085 = distinct !DILexicalBlock(scope: !25081, file: !2344, line: 322, column: 26)
!25086 = !DILocation(line: 323, column: 3, scope: !25087)
!25087 = distinct !DILexicalBlock(scope: !25085, file: !2344, line: 323, column: 3)
!25088 = !DILocation(line: 324, column: 3, scope: !25085)
!25089 = !DILocation(line: 346, column: 17, scope: !25074)
!25090 = !DILocation(line: 346, column: 2, scope: !25074)
!25091 = !DILocation(line: 348, column: 2, scope: !25074)
!25092 = !DILocation(line: 348, column: 2, scope: !25093)
!25093 = distinct !DILexicalBlock(scope: !25074, file: !2344, line: 348, column: 2)
!25094 = !DILocation(line: 349, column: 1, scope: !25074)
!25095 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2344, file: !2344, line: 364, type: !25096, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !223)
!25096 = !DISubroutineType(types: !25097)
!25097 = !{!312, !24196}
!25098 = !DILocalVariable(name: "timeout", arg: 1, scope: !25095, file: !2344, line: 364, type: !24196)
!25099 = !DILocation(line: 364, column: 49, scope: !25095)
!25100 = !DILocalVariable(name: "dt", scope: !25095, file: !2344, line: 366, type: !293)
!25101 = !DILocation(line: 366, column: 12, scope: !25095)
!25102 = !DILocation(line: 368, column: 6, scope: !25103)
!25103 = distinct !DILexicalBlock(scope: !25095, file: !2344, line: 368, column: 6)
!25104 = !DILocation(line: 368, column: 6, scope: !25095)
!25105 = !DILocation(line: 369, column: 3, scope: !25106)
!25106 = distinct !DILexicalBlock(scope: !25103, file: !2344, line: 368, column: 40)
!25107 = !DILocation(line: 370, column: 13, scope: !25108)
!25108 = distinct !DILexicalBlock(scope: !25103, file: !2344, line: 370, column: 13)
!25109 = !DILocation(line: 370, column: 13, scope: !25103)
!25110 = !DILocation(line: 371, column: 10, scope: !25111)
!25111 = distinct !DILexicalBlock(scope: !25108, file: !2344, line: 370, column: 47)
!25112 = !DILocation(line: 371, column: 3, scope: !25111)
!25113 = !DILocation(line: 374, column: 16, scope: !25114)
!25114 = distinct !DILexicalBlock(scope: !25108, file: !2344, line: 372, column: 9)
!25115 = !DILocation(line: 374, column: 6, scope: !25114)
!25116 = !DILocation(line: 376, column: 43, scope: !25117)
!25117 = distinct !DILexicalBlock(scope: !25114, file: !2344, line: 376, column: 7)
!25118 = !DILocation(line: 376, column: 58, scope: !25117)
!25119 = !DILocation(line: 376, column: 7, scope: !25114)
!25120 = !DILocation(line: 377, column: 11, scope: !25121)
!25121 = distinct !DILexicalBlock(scope: !25117, file: !2344, line: 376, column: 64)
!25122 = !DILocation(line: 377, column: 4, scope: !25121)
!25123 = !DILocation(line: 379, column: 10, scope: !25114)
!25124 = !DILocation(line: 379, column: 33, scope: !25114)
!25125 = !DILocation(line: 379, column: 31, scope: !25114)
!25126 = !DILocation(line: 379, column: 3, scope: !25114)
!25127 = !DILocation(line: 381, column: 1, scope: !25095)
!25128 = distinct !DISubprogram(name: "z_impl_atomic_cas", scope: !2356, file: !2356, line: 81, type: !13149, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25129 = !DILocalVariable(name: "target", arg: 1, scope: !25128, file: !2356, line: 81, type: !1342)
!25130 = !DILocation(line: 81, column: 34, scope: !25128)
!25131 = !DILocalVariable(name: "old_value", arg: 2, scope: !25128, file: !2356, line: 81, type: !1343)
!25132 = !DILocation(line: 81, column: 55, scope: !25128)
!25133 = !DILocalVariable(name: "new_value", arg: 3, scope: !25128, file: !2356, line: 82, type: !1343)
!25134 = !DILocation(line: 82, column: 23, scope: !25128)
!25135 = !DILocalVariable(name: "key", scope: !25128, file: !2356, line: 84, type: !25136)
!25136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !25137)
!25137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !25138)
!25138 = !{!25139}
!25139 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !25137, file: !222, line: 33, baseType: !103, size: 32)
!25140 = !DILocation(line: 84, column: 19, scope: !25128)
!25141 = !DILocalVariable(name: "ret", scope: !25128, file: !2356, line: 85, type: !103)
!25142 = !DILocation(line: 85, column: 6, scope: !25128)
!25143 = !DILocalVariable(name: "l", arg: 1, scope: !25144, file: !222, line: 136, type: !25147)
!25144 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !25145, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25145 = !DISubroutineType(types: !25146)
!25146 = !{!25136, !25147}
!25147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!25148 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25149)
!25149 = distinct !DILocation(line: 87, column: 8, scope: !25128)
!25150 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25149)
!25151 = !DILocalVariable(name: "k", scope: !25144, file: !222, line: 139, type: !25136)
!25152 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25149)
!25153 = !DILocalVariable(name: "key", scope: !25154, file: !3614, line: 44, type: !32)
!25154 = distinct !DISubprogram(name: "arch_irq_lock", scope: !3614, file: !3614, line: 42, type: !3615, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25155 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25156)
!25156 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25149)
!25157 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25156)
!25158 = !{i64 1124484}
!25159 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25156)
!25160 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25149)
!25161 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25149)
!25162 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25149)
!25163 = !DILocation(line: 87, column: 8, scope: !25128)
!25164 = !DILocation(line: 89, column: 7, scope: !25165)
!25165 = distinct !DILexicalBlock(scope: !25128, file: !2356, line: 89, column: 6)
!25166 = !DILocation(line: 89, column: 6, scope: !25165)
!25167 = !DILocation(line: 89, column: 17, scope: !25165)
!25168 = !DILocation(line: 89, column: 14, scope: !25165)
!25169 = !DILocation(line: 89, column: 6, scope: !25128)
!25170 = !DILocation(line: 90, column: 13, scope: !25171)
!25171 = distinct !DILexicalBlock(scope: !25165, file: !2356, line: 89, column: 28)
!25172 = !DILocation(line: 90, column: 4, scope: !25171)
!25173 = !DILocation(line: 90, column: 11, scope: !25171)
!25174 = !DILocation(line: 91, column: 7, scope: !25171)
!25175 = !DILocation(line: 92, column: 2, scope: !25171)
!25176 = !DILocation(line: 94, column: 2, scope: !25128)
!25177 = !DILocalVariable(name: "l", arg: 1, scope: !25178, file: !222, line: 189, type: !25147)
!25178 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !25179, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25179 = !DISubroutineType(types: !25180)
!25180 = !{null, !25147, !25136}
!25181 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25182)
!25182 = distinct !DILocation(line: 94, column: 2, scope: !25128)
!25183 = !DILocalVariable(name: "key", arg: 2, scope: !25178, file: !222, line: 190, type: !25136)
!25184 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25182)
!25185 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25182)
!25186 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25182)
!25187 = !DILocalVariable(name: "key", arg: 1, scope: !25188, file: !3614, line: 84, type: !32)
!25188 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !3614, file: !3614, line: 84, type: !3712, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25189 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25190)
!25190 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25182)
!25191 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25190)
!25192 = distinct !DILexicalBlock(scope: !25188, file: !3614, line: 87, column: 6)
!25193 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25190)
!25194 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25190)
!25195 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25190)
!25196 = distinct !DILexicalBlock(scope: !25192, file: !3614, line: 87, column: 17)
!25197 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25190)
!25198 = !{i64 1125348}
!25199 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25190)
!25200 = !DILocation(line: 96, column: 9, scope: !25128)
!25201 = !DILocation(line: 96, column: 2, scope: !25128)
!25202 = distinct !DISubprogram(name: "z_impl_atomic_ptr_cas", scope: !2356, file: !2356, line: 110, type: !25203, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25203 = !DISubroutineType(types: !25204)
!25204 = !{!717, !25205, !25207, !25207}
!25205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25206, size: 32)
!25206 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_ptr_t", file: !344, line: 24, baseType: !102)
!25207 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_ptr_val_t", file: !344, line: 25, baseType: !25206)
!25208 = !DILocalVariable(name: "target", arg: 1, scope: !25202, file: !2356, line: 110, type: !25205)
!25209 = !DILocation(line: 110, column: 42, scope: !25202)
!25210 = !DILocalVariable(name: "old_value", arg: 2, scope: !25202, file: !2356, line: 110, type: !25207)
!25211 = !DILocation(line: 110, column: 67, scope: !25202)
!25212 = !DILocalVariable(name: "new_value", arg: 3, scope: !25202, file: !2356, line: 111, type: !25207)
!25213 = !DILocation(line: 111, column: 24, scope: !25202)
!25214 = !DILocalVariable(name: "key", scope: !25202, file: !2356, line: 113, type: !25136)
!25215 = !DILocation(line: 113, column: 19, scope: !25202)
!25216 = !DILocalVariable(name: "ret", scope: !25202, file: !2356, line: 114, type: !103)
!25217 = !DILocation(line: 114, column: 6, scope: !25202)
!25218 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25219)
!25219 = distinct !DILocation(line: 116, column: 8, scope: !25202)
!25220 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25219)
!25221 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25219)
!25222 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25223)
!25223 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25219)
!25224 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25223)
!25225 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25223)
!25226 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25219)
!25227 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25219)
!25228 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25219)
!25229 = !DILocation(line: 116, column: 8, scope: !25202)
!25230 = !DILocation(line: 118, column: 7, scope: !25231)
!25231 = distinct !DILexicalBlock(scope: !25202, file: !2356, line: 118, column: 6)
!25232 = !DILocation(line: 118, column: 6, scope: !25231)
!25233 = !DILocation(line: 118, column: 17, scope: !25231)
!25234 = !DILocation(line: 118, column: 14, scope: !25231)
!25235 = !DILocation(line: 118, column: 6, scope: !25202)
!25236 = !DILocation(line: 119, column: 13, scope: !25237)
!25237 = distinct !DILexicalBlock(scope: !25231, file: !2356, line: 118, column: 28)
!25238 = !DILocation(line: 119, column: 4, scope: !25237)
!25239 = !DILocation(line: 119, column: 11, scope: !25237)
!25240 = !DILocation(line: 120, column: 7, scope: !25237)
!25241 = !DILocation(line: 121, column: 2, scope: !25237)
!25242 = !DILocation(line: 123, column: 2, scope: !25202)
!25243 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25244)
!25244 = distinct !DILocation(line: 123, column: 2, scope: !25202)
!25245 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25244)
!25246 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25244)
!25247 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25244)
!25248 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25249)
!25249 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25244)
!25250 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25249)
!25251 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25249)
!25252 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25249)
!25253 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25249)
!25254 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25249)
!25255 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25249)
!25256 = !DILocation(line: 125, column: 9, scope: !25202)
!25257 = !DILocation(line: 125, column: 2, scope: !25202)
!25258 = distinct !DISubprogram(name: "z_impl_atomic_add", scope: !2356, file: !2356, line: 153, type: !7161, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25259 = !DILocalVariable(name: "target", arg: 1, scope: !25258, file: !2356, line: 153, type: !1342)
!25260 = !DILocation(line: 153, column: 42, scope: !25258)
!25261 = !DILocalVariable(name: "value", arg: 2, scope: !25258, file: !2356, line: 153, type: !1343)
!25262 = !DILocation(line: 153, column: 63, scope: !25258)
!25263 = !DILocalVariable(name: "key", scope: !25258, file: !2356, line: 155, type: !25136)
!25264 = !DILocation(line: 155, column: 19, scope: !25258)
!25265 = !DILocalVariable(name: "ret", scope: !25258, file: !2356, line: 156, type: !1343)
!25266 = !DILocation(line: 156, column: 15, scope: !25258)
!25267 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25268)
!25268 = distinct !DILocation(line: 158, column: 8, scope: !25258)
!25269 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25268)
!25270 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25268)
!25271 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25272)
!25272 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25268)
!25273 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25272)
!25274 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25272)
!25275 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25268)
!25276 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25268)
!25277 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25268)
!25278 = !DILocation(line: 158, column: 8, scope: !25258)
!25279 = !DILocation(line: 160, column: 9, scope: !25258)
!25280 = !DILocation(line: 160, column: 8, scope: !25258)
!25281 = !DILocation(line: 160, column: 6, scope: !25258)
!25282 = !DILocation(line: 161, column: 13, scope: !25258)
!25283 = !DILocation(line: 161, column: 3, scope: !25258)
!25284 = !DILocation(line: 161, column: 10, scope: !25258)
!25285 = !DILocation(line: 163, column: 2, scope: !25258)
!25286 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25287)
!25287 = distinct !DILocation(line: 163, column: 2, scope: !25258)
!25288 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25287)
!25289 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25287)
!25290 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25287)
!25291 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25292)
!25292 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25287)
!25293 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25292)
!25294 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25292)
!25295 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25292)
!25296 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25292)
!25297 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25292)
!25298 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25292)
!25299 = !DILocation(line: 165, column: 9, scope: !25258)
!25300 = !DILocation(line: 165, column: 2, scope: !25258)
!25301 = distinct !DISubprogram(name: "z_impl_atomic_sub", scope: !2356, file: !2356, line: 183, type: !7161, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25302 = !DILocalVariable(name: "target", arg: 1, scope: !25301, file: !2356, line: 183, type: !1342)
!25303 = !DILocation(line: 183, column: 42, scope: !25301)
!25304 = !DILocalVariable(name: "value", arg: 2, scope: !25301, file: !2356, line: 183, type: !1343)
!25305 = !DILocation(line: 183, column: 63, scope: !25301)
!25306 = !DILocalVariable(name: "key", scope: !25301, file: !2356, line: 185, type: !25136)
!25307 = !DILocation(line: 185, column: 19, scope: !25301)
!25308 = !DILocalVariable(name: "ret", scope: !25301, file: !2356, line: 186, type: !1343)
!25309 = !DILocation(line: 186, column: 15, scope: !25301)
!25310 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25311)
!25311 = distinct !DILocation(line: 188, column: 8, scope: !25301)
!25312 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25311)
!25313 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25311)
!25314 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25315)
!25315 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25311)
!25316 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25315)
!25317 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25315)
!25318 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25311)
!25319 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25311)
!25320 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25311)
!25321 = !DILocation(line: 188, column: 8, scope: !25301)
!25322 = !DILocation(line: 190, column: 9, scope: !25301)
!25323 = !DILocation(line: 190, column: 8, scope: !25301)
!25324 = !DILocation(line: 190, column: 6, scope: !25301)
!25325 = !DILocation(line: 191, column: 13, scope: !25301)
!25326 = !DILocation(line: 191, column: 3, scope: !25301)
!25327 = !DILocation(line: 191, column: 10, scope: !25301)
!25328 = !DILocation(line: 193, column: 2, scope: !25301)
!25329 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25330)
!25330 = distinct !DILocation(line: 193, column: 2, scope: !25301)
!25331 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25330)
!25332 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25330)
!25333 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25330)
!25334 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25335)
!25335 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25330)
!25336 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25335)
!25337 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25335)
!25338 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25335)
!25339 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25335)
!25340 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25335)
!25341 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25335)
!25342 = !DILocation(line: 195, column: 9, scope: !25301)
!25343 = !DILocation(line: 195, column: 2, scope: !25301)
!25344 = distinct !DISubprogram(name: "atomic_get", scope: !2356, file: !2356, line: 212, type: !25345, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25345 = !DISubroutineType(types: !25346)
!25346 = !{!1343, !25347}
!25347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25348, size: 32)
!25348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !343)
!25349 = !DILocalVariable(name: "target", arg: 1, scope: !25344, file: !2356, line: 212, type: !25347)
!25350 = !DILocation(line: 212, column: 41, scope: !25344)
!25351 = !DILocation(line: 214, column: 10, scope: !25344)
!25352 = !DILocation(line: 214, column: 9, scope: !25344)
!25353 = !DILocation(line: 214, column: 2, scope: !25344)
!25354 = distinct !DISubprogram(name: "atomic_ptr_get", scope: !2356, file: !2356, line: 217, type: !25355, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25355 = !DISubroutineType(types: !25356)
!25356 = !{!25207, !25357}
!25357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25358, size: 32)
!25358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !25206)
!25359 = !DILocalVariable(name: "target", arg: 1, scope: !25354, file: !2356, line: 217, type: !25357)
!25360 = !DILocation(line: 217, column: 53, scope: !25354)
!25361 = !DILocation(line: 219, column: 10, scope: !25354)
!25362 = !DILocation(line: 219, column: 9, scope: !25354)
!25363 = !DILocation(line: 219, column: 2, scope: !25354)
!25364 = distinct !DISubprogram(name: "z_impl_atomic_set", scope: !2356, file: !2356, line: 234, type: !7161, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25365 = !DILocalVariable(name: "target", arg: 1, scope: !25364, file: !2356, line: 234, type: !1342)
!25366 = !DILocation(line: 234, column: 42, scope: !25364)
!25367 = !DILocalVariable(name: "value", arg: 2, scope: !25364, file: !2356, line: 234, type: !1343)
!25368 = !DILocation(line: 234, column: 63, scope: !25364)
!25369 = !DILocalVariable(name: "key", scope: !25364, file: !2356, line: 236, type: !25136)
!25370 = !DILocation(line: 236, column: 19, scope: !25364)
!25371 = !DILocalVariable(name: "ret", scope: !25364, file: !2356, line: 237, type: !1343)
!25372 = !DILocation(line: 237, column: 15, scope: !25364)
!25373 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25374)
!25374 = distinct !DILocation(line: 239, column: 8, scope: !25364)
!25375 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25374)
!25376 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25374)
!25377 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25378)
!25378 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25374)
!25379 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25378)
!25380 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25378)
!25381 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25374)
!25382 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25374)
!25383 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25374)
!25384 = !DILocation(line: 239, column: 8, scope: !25364)
!25385 = !DILocation(line: 241, column: 9, scope: !25364)
!25386 = !DILocation(line: 241, column: 8, scope: !25364)
!25387 = !DILocation(line: 241, column: 6, scope: !25364)
!25388 = !DILocation(line: 242, column: 12, scope: !25364)
!25389 = !DILocation(line: 242, column: 3, scope: !25364)
!25390 = !DILocation(line: 242, column: 10, scope: !25364)
!25391 = !DILocation(line: 244, column: 2, scope: !25364)
!25392 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25393)
!25393 = distinct !DILocation(line: 244, column: 2, scope: !25364)
!25394 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25393)
!25395 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25393)
!25396 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25393)
!25397 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25398)
!25398 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25393)
!25399 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25398)
!25400 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25398)
!25401 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25398)
!25402 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25398)
!25403 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25398)
!25404 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25398)
!25405 = !DILocation(line: 246, column: 9, scope: !25364)
!25406 = !DILocation(line: 246, column: 2, scope: !25364)
!25407 = distinct !DISubprogram(name: "z_impl_atomic_ptr_set", scope: !2356, file: !2356, line: 251, type: !25408, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25408 = !DISubroutineType(types: !25409)
!25409 = !{!25207, !25205, !25207}
!25410 = !DILocalVariable(name: "target", arg: 1, scope: !25407, file: !2356, line: 251, type: !25205)
!25411 = !DILocation(line: 251, column: 54, scope: !25407)
!25412 = !DILocalVariable(name: "value", arg: 2, scope: !25407, file: !2356, line: 252, type: !25207)
!25413 = !DILocation(line: 252, column: 29, scope: !25407)
!25414 = !DILocalVariable(name: "key", scope: !25407, file: !2356, line: 254, type: !25136)
!25415 = !DILocation(line: 254, column: 19, scope: !25407)
!25416 = !DILocalVariable(name: "ret", scope: !25407, file: !2356, line: 255, type: !25207)
!25417 = !DILocation(line: 255, column: 19, scope: !25407)
!25418 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25419)
!25419 = distinct !DILocation(line: 257, column: 8, scope: !25407)
!25420 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25419)
!25421 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25419)
!25422 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25423)
!25423 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25419)
!25424 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25423)
!25425 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25423)
!25426 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25419)
!25427 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25419)
!25428 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25419)
!25429 = !DILocation(line: 257, column: 8, scope: !25407)
!25430 = !DILocation(line: 259, column: 9, scope: !25407)
!25431 = !DILocation(line: 259, column: 8, scope: !25407)
!25432 = !DILocation(line: 259, column: 6, scope: !25407)
!25433 = !DILocation(line: 260, column: 12, scope: !25407)
!25434 = !DILocation(line: 260, column: 3, scope: !25407)
!25435 = !DILocation(line: 260, column: 10, scope: !25407)
!25436 = !DILocation(line: 262, column: 2, scope: !25407)
!25437 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25438)
!25438 = distinct !DILocation(line: 262, column: 2, scope: !25407)
!25439 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25438)
!25440 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25438)
!25441 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25438)
!25442 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25443)
!25443 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25438)
!25444 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25443)
!25445 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25443)
!25446 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25443)
!25447 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25443)
!25448 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25443)
!25449 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25443)
!25450 = !DILocation(line: 264, column: 9, scope: !25407)
!25451 = !DILocation(line: 264, column: 2, scope: !25407)
!25452 = distinct !DISubprogram(name: "z_impl_atomic_or", scope: !2356, file: !2356, line: 291, type: !7161, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25453 = !DILocalVariable(name: "target", arg: 1, scope: !25452, file: !2356, line: 291, type: !1342)
!25454 = !DILocation(line: 291, column: 41, scope: !25452)
!25455 = !DILocalVariable(name: "value", arg: 2, scope: !25452, file: !2356, line: 291, type: !1343)
!25456 = !DILocation(line: 291, column: 62, scope: !25452)
!25457 = !DILocalVariable(name: "key", scope: !25452, file: !2356, line: 293, type: !25136)
!25458 = !DILocation(line: 293, column: 19, scope: !25452)
!25459 = !DILocalVariable(name: "ret", scope: !25452, file: !2356, line: 294, type: !1343)
!25460 = !DILocation(line: 294, column: 15, scope: !25452)
!25461 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25462)
!25462 = distinct !DILocation(line: 296, column: 8, scope: !25452)
!25463 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25462)
!25464 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25462)
!25465 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25466)
!25466 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25462)
!25467 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25466)
!25468 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25466)
!25469 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25462)
!25470 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25462)
!25471 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25462)
!25472 = !DILocation(line: 296, column: 8, scope: !25452)
!25473 = !DILocation(line: 298, column: 9, scope: !25452)
!25474 = !DILocation(line: 298, column: 8, scope: !25452)
!25475 = !DILocation(line: 298, column: 6, scope: !25452)
!25476 = !DILocation(line: 299, column: 13, scope: !25452)
!25477 = !DILocation(line: 299, column: 3, scope: !25452)
!25478 = !DILocation(line: 299, column: 10, scope: !25452)
!25479 = !DILocation(line: 301, column: 2, scope: !25452)
!25480 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25481)
!25481 = distinct !DILocation(line: 301, column: 2, scope: !25452)
!25482 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25481)
!25483 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25481)
!25484 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25481)
!25485 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25486)
!25486 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25481)
!25487 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25486)
!25488 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25486)
!25489 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25486)
!25490 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25486)
!25491 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25486)
!25492 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25486)
!25493 = !DILocation(line: 303, column: 9, scope: !25452)
!25494 = !DILocation(line: 303, column: 2, scope: !25452)
!25495 = distinct !DISubprogram(name: "z_impl_atomic_xor", scope: !2356, file: !2356, line: 321, type: !7161, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25496 = !DILocalVariable(name: "target", arg: 1, scope: !25495, file: !2356, line: 321, type: !1342)
!25497 = !DILocation(line: 321, column: 42, scope: !25495)
!25498 = !DILocalVariable(name: "value", arg: 2, scope: !25495, file: !2356, line: 321, type: !1343)
!25499 = !DILocation(line: 321, column: 63, scope: !25495)
!25500 = !DILocalVariable(name: "key", scope: !25495, file: !2356, line: 323, type: !25136)
!25501 = !DILocation(line: 323, column: 19, scope: !25495)
!25502 = !DILocalVariable(name: "ret", scope: !25495, file: !2356, line: 324, type: !1343)
!25503 = !DILocation(line: 324, column: 15, scope: !25495)
!25504 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25505)
!25505 = distinct !DILocation(line: 326, column: 8, scope: !25495)
!25506 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25505)
!25507 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25505)
!25508 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25509)
!25509 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25505)
!25510 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25509)
!25511 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25509)
!25512 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25505)
!25513 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25505)
!25514 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25505)
!25515 = !DILocation(line: 326, column: 8, scope: !25495)
!25516 = !DILocation(line: 328, column: 9, scope: !25495)
!25517 = !DILocation(line: 328, column: 8, scope: !25495)
!25518 = !DILocation(line: 328, column: 6, scope: !25495)
!25519 = !DILocation(line: 329, column: 13, scope: !25495)
!25520 = !DILocation(line: 329, column: 3, scope: !25495)
!25521 = !DILocation(line: 329, column: 10, scope: !25495)
!25522 = !DILocation(line: 331, column: 2, scope: !25495)
!25523 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25524)
!25524 = distinct !DILocation(line: 331, column: 2, scope: !25495)
!25525 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25524)
!25526 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25524)
!25527 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25524)
!25528 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25529)
!25529 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25524)
!25530 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25529)
!25531 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25529)
!25532 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25529)
!25533 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25529)
!25534 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25529)
!25535 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25529)
!25536 = !DILocation(line: 333, column: 9, scope: !25495)
!25537 = !DILocation(line: 333, column: 2, scope: !25495)
!25538 = distinct !DISubprogram(name: "z_impl_atomic_and", scope: !2356, file: !2356, line: 351, type: !7161, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25539 = !DILocalVariable(name: "target", arg: 1, scope: !25538, file: !2356, line: 351, type: !1342)
!25540 = !DILocation(line: 351, column: 42, scope: !25538)
!25541 = !DILocalVariable(name: "value", arg: 2, scope: !25538, file: !2356, line: 351, type: !1343)
!25542 = !DILocation(line: 351, column: 63, scope: !25538)
!25543 = !DILocalVariable(name: "key", scope: !25538, file: !2356, line: 353, type: !25136)
!25544 = !DILocation(line: 353, column: 19, scope: !25538)
!25545 = !DILocalVariable(name: "ret", scope: !25538, file: !2356, line: 354, type: !1343)
!25546 = !DILocation(line: 354, column: 15, scope: !25538)
!25547 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25548)
!25548 = distinct !DILocation(line: 356, column: 8, scope: !25538)
!25549 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25548)
!25550 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25548)
!25551 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25552)
!25552 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25548)
!25553 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25552)
!25554 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25552)
!25555 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25548)
!25556 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25548)
!25557 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25548)
!25558 = !DILocation(line: 356, column: 8, scope: !25538)
!25559 = !DILocation(line: 358, column: 9, scope: !25538)
!25560 = !DILocation(line: 358, column: 8, scope: !25538)
!25561 = !DILocation(line: 358, column: 6, scope: !25538)
!25562 = !DILocation(line: 359, column: 13, scope: !25538)
!25563 = !DILocation(line: 359, column: 3, scope: !25538)
!25564 = !DILocation(line: 359, column: 10, scope: !25538)
!25565 = !DILocation(line: 361, column: 2, scope: !25538)
!25566 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25567)
!25567 = distinct !DILocation(line: 361, column: 2, scope: !25538)
!25568 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25567)
!25569 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25567)
!25570 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25567)
!25571 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25572)
!25572 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25567)
!25573 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25572)
!25574 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25572)
!25575 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25572)
!25576 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25572)
!25577 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25572)
!25578 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25572)
!25579 = !DILocation(line: 363, column: 9, scope: !25538)
!25580 = !DILocation(line: 363, column: 2, scope: !25538)
!25581 = distinct !DISubprogram(name: "z_impl_atomic_nand", scope: !2356, file: !2356, line: 381, type: !7161, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2353, retainedNodes: !223)
!25582 = !DILocalVariable(name: "target", arg: 1, scope: !25581, file: !2356, line: 381, type: !1342)
!25583 = !DILocation(line: 381, column: 43, scope: !25581)
!25584 = !DILocalVariable(name: "value", arg: 2, scope: !25581, file: !2356, line: 381, type: !1343)
!25585 = !DILocation(line: 381, column: 64, scope: !25581)
!25586 = !DILocalVariable(name: "key", scope: !25581, file: !2356, line: 383, type: !25136)
!25587 = !DILocation(line: 383, column: 19, scope: !25581)
!25588 = !DILocalVariable(name: "ret", scope: !25581, file: !2356, line: 384, type: !1343)
!25589 = !DILocation(line: 384, column: 15, scope: !25581)
!25590 = !DILocation(line: 136, column: 70, scope: !25144, inlinedAt: !25591)
!25591 = distinct !DILocation(line: 386, column: 8, scope: !25581)
!25592 = !DILocation(line: 138, column: 2, scope: !25144, inlinedAt: !25591)
!25593 = !DILocation(line: 139, column: 19, scope: !25144, inlinedAt: !25591)
!25594 = !DILocation(line: 44, column: 15, scope: !25154, inlinedAt: !25595)
!25595 = distinct !DILocation(line: 145, column: 10, scope: !25144, inlinedAt: !25591)
!25596 = !DILocation(line: 47, column: 2, scope: !25154, inlinedAt: !25595)
!25597 = !DILocation(line: 76, column: 9, scope: !25154, inlinedAt: !25595)
!25598 = !DILocation(line: 145, column: 4, scope: !25144, inlinedAt: !25591)
!25599 = !DILocation(line: 145, column: 8, scope: !25144, inlinedAt: !25591)
!25600 = !DILocation(line: 165, column: 2, scope: !25144, inlinedAt: !25591)
!25601 = !DILocation(line: 386, column: 8, scope: !25581)
!25602 = !DILocation(line: 388, column: 9, scope: !25581)
!25603 = !DILocation(line: 388, column: 8, scope: !25581)
!25604 = !DILocation(line: 388, column: 6, scope: !25581)
!25605 = !DILocation(line: 389, column: 15, scope: !25581)
!25606 = !DILocation(line: 389, column: 14, scope: !25581)
!25607 = !DILocation(line: 389, column: 24, scope: !25581)
!25608 = !DILocation(line: 389, column: 22, scope: !25581)
!25609 = !DILocation(line: 389, column: 12, scope: !25581)
!25610 = !DILocation(line: 389, column: 3, scope: !25581)
!25611 = !DILocation(line: 389, column: 10, scope: !25581)
!25612 = !DILocation(line: 391, column: 2, scope: !25581)
!25613 = !DILocation(line: 189, column: 60, scope: !25178, inlinedAt: !25614)
!25614 = distinct !DILocation(line: 391, column: 2, scope: !25581)
!25615 = !DILocation(line: 190, column: 23, scope: !25178, inlinedAt: !25614)
!25616 = !DILocation(line: 192, column: 2, scope: !25178, inlinedAt: !25614)
!25617 = !DILocation(line: 215, column: 22, scope: !25178, inlinedAt: !25614)
!25618 = !DILocation(line: 84, column: 56, scope: !25188, inlinedAt: !25619)
!25619 = distinct !DILocation(line: 215, column: 2, scope: !25178, inlinedAt: !25614)
!25620 = !DILocation(line: 87, column: 6, scope: !25192, inlinedAt: !25619)
!25621 = !DILocation(line: 87, column: 10, scope: !25192, inlinedAt: !25619)
!25622 = !DILocation(line: 87, column: 6, scope: !25188, inlinedAt: !25619)
!25623 = !DILocation(line: 88, column: 3, scope: !25196, inlinedAt: !25619)
!25624 = !DILocation(line: 90, column: 2, scope: !25188, inlinedAt: !25619)
!25625 = !DILocation(line: 110, column: 1, scope: !25188, inlinedAt: !25619)
!25626 = !DILocation(line: 393, column: 9, scope: !25581)
!25627 = !DILocation(line: 393, column: 2, scope: !25581)
!25628 = distinct !DISubprogram(name: "boot_banner", scope: !25629, file: !25629, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2956, retainedNodes: !223)
!25629 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!25630 = !DILocation(line: 34, column: 2, scope: !25628)
!25631 = !DILocation(line: 36, column: 1, scope: !25628)
