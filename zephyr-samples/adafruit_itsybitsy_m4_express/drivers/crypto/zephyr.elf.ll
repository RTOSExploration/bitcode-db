; ModuleID = 'build/adafruit_itsybitsy_m4_express/drivers/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.sam0_eic_data = type { [2 x %struct.sam0_eic_port_data], [16 x %struct.anon.11] }
%struct.sam0_eic_port_data = type { void (i32, i8*)*, i8* }
%struct.anon.11 = type { i8 }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.uart_sam0_dev_cfg = type { %struct.SercomUsart*, i32, i32, i8, i32*, i32, i16, void (%struct.device*)*, %struct.pinctrl_dev_config* }
%struct.SercomUsart = type { %union.anon.5, %union.anon.5, %union.anon.5, %union.SERCOM_USART_BAUD_Type, %union.PORT_PMUX_Type, [5 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.SERCOM_USART_BAUD_Type, %union.anon.5, %struct.anon.11, [1 x i8], %union.SERCOM_USART_BAUD_Type, [4 x i8], %union.anon.5, [4 x i8], %union.PORT_PMUX_Type }
%union.SERCOM_USART_BAUD_Type = type { %union.anon.2 }
%union.anon.2 = type { i16 }
%union.PORT_PMUX_Type = type { %struct.anon.11 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_sam0_dev_data = type { %struct.uart_config, void (%struct.device*, i8*)*, i8* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.anon.11*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.PortGroup = type { %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, [16 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type], [32 x i8] }
%struct.soc_port_pin = type { %struct.PortGroup*, i32, i32 }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [137 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [137 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33612 to i8*), void (i8*)* inttoptr (i32 25165 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 33636 to i8*), void (i8*)* inttoptr (i32 32831 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33636 to i8*), void (i8*)* inttoptr (i32 32831 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33636 to i8*), void (i8*)* inttoptr (i32 32831 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 33636 to i8*), void (i8*)* inttoptr (i32 32831 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [34 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_atmel_samd_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_10 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_11 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_12 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_13 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_14 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_15 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_3 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_4 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_5 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_6 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_7 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_8 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_3 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_atmel_samd_init = internal constant %struct.init_entry { i32 (%struct.device*)* @atmel_samd_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@.str.62 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.64 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.65 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.63 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.67 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.68 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.66 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !974
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !994
@.str.73 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.74 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.75 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.76 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.108 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.104 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.105 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.106 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.107 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.98 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.99 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.92 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.100 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.101 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.102 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.97 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.90 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.91 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.93 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.94 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.95 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.96 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.83 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.84 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.85 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.86 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.87 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.88 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.89 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.82 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.81 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.79 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.80 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !1006
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !1149
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [0 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !1012
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !1160
@.str.118 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.119 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1195
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.134, i32 0, i32 0), %struct.ctr_params { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.135, i32 0, i32 0), %struct.ctr_params { i32 285933602 } }], align 4, !dbg !1205
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !1210
@.str.134 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.135 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.136, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.sam0_eic_data* @eic_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1230
@__devicehdl_dts_ord_22 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1765
@.str.136 = private unnamed_addr constant [13 x i8] c"eic@40002800\00", align 1
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1715
@eic_data = internal global %struct.sam0_eic_data zeroinitializer, align 4, !dbg !1694
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @sam0_eic_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1669
@sam0_eic_channels = internal unnamed_addr constant [2 x [32 x i8]] [[32 x i8] c"\00\01\02\03\04\05\06\07\FF\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\08\09\FF\0B\FF\FF\0E\0F", [32 x i8] c"\FF\FF\02\03\FF\FF\FF\FF\08\09\0A\0B\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\06\07\FF\FF\FF\FF\FF\FF\FF\FF"], align 1, !dbg !1717
@sam0_eic_init.__isr_sam0_eic_isr_irq_0 = internal global %struct._isr_list { i32 12, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1723
@sam0_eic_init.__isr_sam0_eic_isr_irq_1 = internal global %struct._isr_list { i32 13, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1735
@sam0_eic_init.__isr_sam0_eic_isr_irq_2 = internal global %struct._isr_list { i32 14, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1737
@sam0_eic_init.__isr_sam0_eic_isr_irq_3 = internal global %struct._isr_list { i32 15, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1739
@sam0_eic_init.__isr_sam0_eic_isr_irq_4 = internal global %struct._isr_list { i32 16, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1741
@sam0_eic_init.__isr_sam0_eic_isr_irq_5 = internal global %struct._isr_list { i32 17, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1743
@sam0_eic_init.__isr_sam0_eic_isr_irq_6 = internal global %struct._isr_list { i32 18, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1745
@sam0_eic_init.__isr_sam0_eic_isr_irq_7 = internal global %struct._isr_list { i32 19, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1747
@sam0_eic_init.__isr_sam0_eic_isr_irq_8 = internal global %struct._isr_list { i32 20, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1749
@sam0_eic_init.__isr_sam0_eic_isr_irq_9 = internal global %struct._isr_list { i32 21, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1751
@sam0_eic_init.__isr_sam0_eic_isr_irq_10 = internal global %struct._isr_list { i32 22, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1753
@sam0_eic_init.__isr_sam0_eic_isr_irq_11 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1755
@sam0_eic_init.__isr_sam0_eic_isr_irq_12 = internal global %struct._isr_list { i32 24, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1757
@sam0_eic_init.__isr_sam0_eic_isr_irq_13 = internal global %struct._isr_list { i32 25, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1759
@sam0_eic_init.__isr_sam0_eic_isr_irq_14 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1761
@sam0_eic_init.__isr_sam0_eic_isr_irq_15 = internal global %struct._isr_list { i32 27, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1763
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1776
@.str.139 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.139, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1873
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1774
@.str.1.141 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1911
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1909
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1882
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1898
@.str.2.142 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.143 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.144 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.145 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.146 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.147 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !2039
@.str.8.148 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.157 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.156 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.154 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.155 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.152 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.153 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.149 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.150 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.151 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1770
@.str.160 = private unnamed_addr constant [16 x i8] c"sercom@41014000\00", align 1
@uart_sam0_config_0 = internal constant %struct.uart_sam0_dev_cfg { %struct.SercomUsart* inttoptr (i32 1090600960 to %struct.SercomUsart*), i32 115200, i32 1048576, i8 0, i32* inttoptr (i32 1073743896 to i32*), i32 1024, i16 24, void (%struct.device*)* @uart_sam0_irq_config_0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !2055
@uart_sam0_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_sam0_poll_in, void (%struct.device*, i8)* @uart_sam0_poll_out, i32 (%struct.device*)* @uart_sam0_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_sam0_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_sam0_config_get, i32 (%struct.device*, i8*, i32)* @uart_sam0_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_sam0_fifo_read, void (%struct.device*)* @uart_sam0_irq_tx_enable, void (%struct.device*)* @uart_sam0_irq_tx_disable, i32 (%struct.device*)* @uart_sam0_irq_tx_ready, void (%struct.device*)* @uart_sam0_irq_rx_enable, void (%struct.device*)* @uart_sam0_irq_rx_disable, i32 (%struct.device*)* @uart_sam0_irq_tx_complete, i32 (%struct.device*)* @uart_sam0_irq_rx_ready, void (%struct.device*)* @uart_sam0_irq_err_enable, void (%struct.device*)* @uart_sam0_irq_err_disable, i32 (%struct.device*)* @uart_sam0_irq_is_pending, i32 (%struct.device*)* @uart_sam0_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_sam0_irq_callback_set }, align 4, !dbg !2433
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2389
@uart_sam0_data_0 = internal global %struct.uart_sam0_dev_data zeroinitializer, align 4, !dbg !2382
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* bitcast (%struct.uart_sam0_dev_cfg* @uart_sam0_config_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam0_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_sam0_dev_data* @uart_sam0_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2373
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_sam0_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2375
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !2408
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 = internal global %struct._isr_list { i32 58, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !2391
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_1 = internal global %struct._isr_list { i32 59, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !2402
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_2 = internal global %struct._isr_list { i32 60, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !2404
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_3 = internal global %struct._isr_list { i32 61, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !2406
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2427
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x i32] [i32 855638016, i32 856686592], align 4, !dbg !2430
@overflow_cyc = internal global i32 0, align 4, !dbg !2675
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2904
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2906
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2902
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2873
@sam_port_addrs = internal unnamed_addr constant [4 x i32] [i32 1090551808, i32 1090551936, i32 1090552064, i32 1090552192], align 4, !dbg !2908
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !3091
@.str.175 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.179 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.180 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.181 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.185 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.186 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.187 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.188 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.189 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.184 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.183 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.185, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.186, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.187, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.188, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.189, i32 0, i32 0)], align 4
@.str.191 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !3097
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.anon.11]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !3320
@z_main_stack = dso_local global [1024 x %struct.anon.11] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !3306
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !3315
@z_idle_stacks = internal global [1 x [320 x %struct.anon.11]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !3327
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !3332
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.200 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.206, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.207, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.208, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.204, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.211, i32 0, i32 0)], align 4, !dbg !3362
@.str.205 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.206 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.207 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.208 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.209 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.210 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.204 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.211 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !3474
@.str.8.203 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !3488
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !3596
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !3599
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !3601
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !3325
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !3317
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !3603
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !3639
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !3184
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !3637
@.str.264 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !4070 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !4074, !srcloc !4075
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !4076, !srcloc !4077
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !4078, !srcloc !4079
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !4080, !srcloc !4081
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !4082, !srcloc !4083
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !4084, !srcloc !4085
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !4086, !srcloc !4087
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !4088, !srcloc !4089
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !4090, !srcloc !4091
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !4092, !srcloc !4093
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !4094, !srcloc !4095
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !4096, !srcloc !4097
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !4098, !srcloc !4099
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !4100, !srcloc !4101
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !4102, !srcloc !4103
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !4104, !srcloc !4105
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !4106, !srcloc !4107
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !4108, !srcloc !4109
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !4110, !srcloc !4111
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !4112, !srcloc !4113
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !4114, !srcloc !4115
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !4116, !srcloc !4117
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #24, !dbg !4118, !srcloc !4119
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !4120, !srcloc !4121
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !4122, !srcloc !4123
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !4124, !srcloc !4125
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !4126, !srcloc !4127
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !4128, !srcloc !4131
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !4132, !srcloc !4133
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !4134, !srcloc !4135
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !4136, !srcloc !4137
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !4138, !srcloc !4139
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !4140, !srcloc !4141
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !4142, !srcloc !4143
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !4144, !srcloc !4145
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !4146, !srcloc !4147
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !4148, !srcloc !4149
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !4150, !srcloc !4151
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !4152, !srcloc !4153
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !4154, !srcloc !4155
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !4156, !srcloc !4157
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !4158, !srcloc !4159
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !4160, !srcloc !4161
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !4162, !srcloc !4163
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !4164, !srcloc !4165
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !4166, !srcloc !4167
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !4168, !srcloc !4169
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !4170, !srcloc !4171
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !4172, !srcloc !4173
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !4174, !srcloc !4175
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !4176, !srcloc !4177
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !4178, !srcloc !4179
  ret void, !dbg !4180
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !4183 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4185, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i32 0, metadata !4186, metadata !DIExpression()), !dbg !4187
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #25, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %2, metadata !4186, metadata !DIExpression()), !dbg !4187
  %3 = and i32 %2, 2, !dbg !4189
  %4 = icmp eq i32 %3, 0, !dbg !4191
  br i1 %4, label %5, label %8, !dbg !4192

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #25, !dbg !4193
  %7 = zext i8 %6 to i32, !dbg !4193
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #26, !dbg !4193
  br label %21, !dbg !4199

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !4200
  %10 = icmp eq i32 %9, 0, !dbg !4202
  br i1 %10, label %11, label %14, !dbg !4203

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4204
  %13 = zext i8 %12 to i32, !dbg !4204
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #26, !dbg !4204
  br label %21, !dbg !4210

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !4211
  %16 = icmp eq i32 %15, 0, !dbg !4213
  br i1 %16, label %17, label %20, !dbg !4214

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4215
  %19 = zext i8 %18 to i32, !dbg !4215
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #26, !dbg !4215
  br label %21, !dbg !4221

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !4222
  br label %21, !dbg !4223

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !4187
  ret i32 %22, !dbg !4224
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !4225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4227, metadata !DIExpression()), !dbg !4230
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !4231
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !4231
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !4231
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !4228, metadata !DIExpression()), !dbg !4230
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !4232
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !4232
  %7 = tail call i32 %6(%struct.device* noundef %0) #26, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %7, metadata !4229, metadata !DIExpression()), !dbg !4230
  ret i32 %7, !dbg !4234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !4235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4240, metadata !DIExpression()), !dbg !4241
  %2 = add i32 %0, -1, !dbg !4242
  %3 = icmp ult i32 %2, 3, !dbg !4242
  %4 = trunc i32 %2 to i24, !dbg !4242
  %5 = shl i24 %4, 3, !dbg !4242
  %6 = lshr i24 4806469, %5, !dbg !4242
  %7 = trunc i24 %6 to i8, !dbg !4242
  %8 = select i1 %3, i8 %7, i8 63, !dbg !4242
  ret i8 %8, !dbg !4243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !4244 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4246, metadata !DIExpression()), !dbg !4257
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !4258
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24, !dbg !4258
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !4247, metadata !DIExpression()), !dbg !4259
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !4259
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !4260
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #24, !dbg !4260
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !4248, metadata !DIExpression()), !dbg !4261
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !4261
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !4262
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #24, !dbg !4262
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !4249, metadata !DIExpression()), !dbg !4263
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !4263
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !4264
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #24, !dbg !4264
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !4251, metadata !DIExpression()), !dbg !4265
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !4265
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4266
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #24, !dbg !4266
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4252, metadata !DIExpression()), !dbg !4267
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !4267
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !4268
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #24, !dbg !4268
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !4253, metadata !DIExpression()), !dbg !4269
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !4269
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !4270
  store i8* %10, i8** %16, align 4, !dbg !4270
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !4271
  store i16 16, i16* %17, align 4, !dbg !4271
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !4271
  %19 = load i32, i32* @cap_flags, align 4, !dbg !4272
  %20 = trunc i32 %19 to i16, !dbg !4272
  store i16 %20, i16* %18, align 2, !dbg !4271
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !4273
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #24, !dbg !4273
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !4254, metadata !DIExpression()), !dbg !4274
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !4275
  store i8* %11, i8** %22, align 4, !dbg !4275
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !4275
  store i32 16, i32* %23, align 4, !dbg !4275
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !4275
  store i8* %13, i8** %24, align 4, !dbg !4275
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !4275
  store i32 16, i32* %25, align 4, !dbg !4275
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !4275
  store i32 0, i32* %26, align 4, !dbg !4275
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !4275
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !4275
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !4276
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #24, !dbg !4276
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !4255, metadata !DIExpression()), !dbg !4277
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !4278
  store i8* %13, i8** %29, align 4, !dbg !4278
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !4278
  store i32 16, i32* %30, align 4, !dbg !4278
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !4278
  store i8* %14, i8** %31, align 4, !dbg !4278
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !4278
  store i32 16, i32* %32, align 4, !dbg !4278
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !4278
  store i32 0, i32* %33, align 4, !dbg !4278
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !4278
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !4278
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #25, !dbg !4279
  %36 = icmp eq i32 %35, 0, !dbg !4279
  br i1 %36, label %37, label %74, !dbg !4281

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #25, !dbg !4282
  %39 = icmp eq i32 %38, 0, !dbg !4282
  br i1 %39, label %43, label %40, !dbg !4284

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4285
  %42 = zext i8 %41 to i32, !dbg !4285
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #26, !dbg !4285
  br label %73, !dbg !4291

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #25, !dbg !4292
  %45 = zext i8 %44 to i32, !dbg !4292
  %46 = load i32, i32* %26, align 4, !dbg !4292
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #26, !dbg !4292
  %47 = load i8*, i8** %24, align 4, !dbg !4297
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #26, !dbg !4299
  %49 = icmp eq i32 %48, 0, !dbg !4299
  br i1 %49, label %54, label %50, !dbg !4300

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4301
  %52 = zext i8 %51 to i32, !dbg !4301
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #26, !dbg !4301
  %53 = load i8*, i8** %24, align 4, !dbg !4307
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #25, !dbg !4308
  br label %73, !dbg !4309

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #26, !dbg !4310
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #25, !dbg !4315
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #25, !dbg !4316
  %56 = icmp eq i32 %55, 0, !dbg !4316
  br i1 %56, label %57, label %74, !dbg !4318

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #25, !dbg !4319
  %59 = icmp eq i32 %58, 0, !dbg !4319
  br i1 %59, label %63, label %60, !dbg !4321

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4322
  %62 = zext i8 %61 to i32, !dbg !4322
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #26, !dbg !4322
  br label %73, !dbg !4328

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !4329
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #26, !dbg !4329
  %65 = load i8*, i8** %31, align 4, !dbg !4334
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #26, !dbg !4336
  %67 = icmp eq i32 %66, 0, !dbg !4336
  br i1 %67, label %72, label %68, !dbg !4337

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4338
  %70 = zext i8 %69 to i32, !dbg !4338
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #26, !dbg !4338
  %71 = load i8*, i8** %31, align 4, !dbg !4344
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #25, !dbg !4345
  br label %73, !dbg !4346

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #26, !dbg !4347
  br label %73, !dbg !4352

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !4256), !dbg !4353
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #25, !dbg !4354
  br label %74, !dbg !4355

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #24, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #24, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #24, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #24, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #24, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #24, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #24, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !4355
  ret void, !dbg !4355
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !4356 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4358, metadata !DIExpression()), !dbg !4365
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !4359, metadata !DIExpression()), !dbg !4365
  call void @llvm.dbg.value(metadata i32 1, metadata !4360, metadata !DIExpression()), !dbg !4365
  call void @llvm.dbg.value(metadata i32 %2, metadata !4361, metadata !DIExpression()), !dbg !4365
  call void @llvm.dbg.value(metadata i32 %3, metadata !4362, metadata !DIExpression()), !dbg !4365
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !4366
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !4366
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !4366
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !4363, metadata !DIExpression()), !dbg !4365
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !4367
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !4368
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !4369
  store i32 %2, i32* %9, align 4, !dbg !4370
  call void @llvm.dbg.value(metadata i16 undef, metadata !4364, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !4365
  call void @llvm.dbg.value(metadata i16 undef, metadata !4364, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !4365
  call void @llvm.dbg.value(metadata i16 undef, metadata !4364, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !4365
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !4371
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !4371
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #26, !dbg !4372
  ret i32 %12, !dbg !4373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !4374 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4376, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !4377, metadata !DIExpression()), !dbg !4378
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !4379
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !4380
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !4381
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !4381
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #26, !dbg !4382
  ret i32 %6, !dbg !4383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !4384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4388, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i8* %1, metadata !4389, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %2, metadata !4390, metadata !DIExpression()), !dbg !4393
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #26, !dbg !4394
  call void @llvm.dbg.value(metadata i32 0, metadata !4391, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 1, metadata !4392, metadata !DIExpression()), !dbg !4393
  %4 = icmp eq i32 %2, 0, !dbg !4395
  br i1 %4, label %5, label %6, !dbg !4398

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #26, !dbg !4399
  call void @llvm.dbg.value(metadata i32 0, metadata !4391, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 1, metadata !4392, metadata !DIExpression()), !dbg !4393
  br label %33, !dbg !4400

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !4392, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %8, metadata !4391, metadata !DIExpression()), !dbg !4393
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !4402
  %10 = load i8, i8* %9, align 1, !dbg !4402
  %11 = zext i8 %10 to i32, !dbg !4402
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #26, !dbg !4404
  %12 = icmp eq i32 %7, 10, !dbg !4405
  br i1 %12, label %13, label %14, !dbg !4407

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #26, !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4392, metadata !DIExpression()), !dbg !4393
  br label %14, !dbg !4410

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !4411
  call void @llvm.dbg.value(metadata i32 %15, metadata !4392, metadata !DIExpression()), !dbg !4393
  %16 = add nuw i32 %8, 1, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %16, metadata !4391, metadata !DIExpression()), !dbg !4393
  %17 = add nsw i32 %15, 1, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %17, metadata !4392, metadata !DIExpression()), !dbg !4393
  %18 = icmp eq i32 %16, %2, !dbg !4395
  br i1 %18, label %19, label %6, !dbg !4398, !llvm.loop !4414

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #26, !dbg !4399
  call void @llvm.dbg.value(metadata i32 0, metadata !4391, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 1, metadata !4392, metadata !DIExpression()), !dbg !4393
  br i1 %4, label %33, label %20, !dbg !4400

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !4392, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %22, metadata !4391, metadata !DIExpression()), !dbg !4393
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !4416
  %24 = load i8, i8* %23, align 1, !dbg !4416
  %25 = zext i8 %24 to i32, !dbg !4416
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #26, !dbg !4419
  %26 = icmp eq i32 %21, 10, !dbg !4420
  br i1 %26, label %27, label %28, !dbg !4422

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #26, !dbg !4423
  call void @llvm.dbg.value(metadata i32 0, metadata !4392, metadata !DIExpression()), !dbg !4393
  br label %28, !dbg !4425

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !4426
  call void @llvm.dbg.value(metadata i32 %29, metadata !4392, metadata !DIExpression()), !dbg !4393
  %30 = add nuw i32 %22, 1, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %30, metadata !4391, metadata !DIExpression()), !dbg !4393
  %31 = add nsw i32 %29, 1, !dbg !4428
  call void @llvm.dbg.value(metadata i32 %31, metadata !4392, metadata !DIExpression()), !dbg !4393
  %32 = icmp eq i32 %30, %2, !dbg !4429
  br i1 %32, label %33, label %20, !dbg !4400, !llvm.loop !4430

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #26, !dbg !4432
  ret void, !dbg !4433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !4434 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4436, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !4437, metadata !DIExpression()), !dbg !4439
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !4440
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !4440
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !4440
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !4438, metadata !DIExpression()), !dbg !4439
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !4441
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !4441
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #26, !dbg !4442
  ret void, !dbg !4443
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !4444
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !4445
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #24, !dbg !4445
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !4446
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !4446
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !4447
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #24, !dbg !4447
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !4448
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !4448
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4449
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #24, !dbg !4449
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !4450
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !4450
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4451
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !4451
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4452
  store i16 16, i16* %11, align 4, !dbg !4452
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4452
  %13 = load i32, i32* @cap_flags, align 4, !dbg !4453
  %14 = trunc i32 %13 to i16, !dbg !4453
  store i16 %14, i16* %12, align 2, !dbg !4452
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4454
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #24, !dbg !4454
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !4455
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4456
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !4456
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4456
  store i32 64, i32* %17, align 4, !dbg !4456
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4456
  store i8* %7, i8** %18, align 4, !dbg !4456
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4456
  store i32 80, i32* %19, align 4, !dbg !4456
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4456
  store i32 0, i32* %20, align 4, !dbg !4456
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4456
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !4456
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !4457
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #24, !dbg !4457
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !4458
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !4459
  store i8* %7, i8** %23, align 4, !dbg !4459
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !4459
  store i32 80, i32* %24, align 4, !dbg !4459
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !4459
  store i8* %8, i8** %25, align 4, !dbg !4459
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !4459
  store i32 64, i32* %26, align 4, !dbg !4459
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !4459
  store i32 0, i32* %27, align 4, !dbg !4459
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !4459
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !4459
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #25, !dbg !4460
  %30 = icmp eq i32 %29, 0, !dbg !4460
  br i1 %30, label %31, label %68, !dbg !4462

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #25, !dbg !4463
  %33 = icmp eq i32 %32, 0, !dbg !4463
  br i1 %33, label %37, label %34, !dbg !4465

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4466
  %36 = zext i8 %35 to i32, !dbg !4466
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #26, !dbg !4466
  br label %67, !dbg !4472

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #25, !dbg !4473
  %39 = zext i8 %38 to i32, !dbg !4473
  %40 = load i32, i32* %20, align 4, !dbg !4473
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #26, !dbg !4473
  %41 = load i8*, i8** %18, align 4, !dbg !4478
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #26, !dbg !4480
  %43 = icmp eq i32 %42, 0, !dbg !4480
  br i1 %43, label %48, label %44, !dbg !4481

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4482
  %46 = zext i8 %45 to i32, !dbg !4482
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #26, !dbg !4482
  %47 = load i8*, i8** %18, align 4, !dbg !4488
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #25, !dbg !4489
  br label %67, !dbg !4490

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #26, !dbg !4491
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4496
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #25, !dbg !4497
  %50 = icmp eq i32 %49, 0, !dbg !4497
  br i1 %50, label %51, label %68, !dbg !4499

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #25, !dbg !4500
  %53 = icmp eq i32 %52, 0, !dbg !4500
  br i1 %53, label %57, label %54, !dbg !4502

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4503
  %56 = zext i8 %55 to i32, !dbg !4503
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #26, !dbg !4503
  br label %67, !dbg !4509

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !4510
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #26, !dbg !4510
  %59 = load i8*, i8** %25, align 4, !dbg !4515
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #26, !dbg !4517
  %61 = icmp eq i32 %60, 0, !dbg !4517
  br i1 %61, label %66, label %62, !dbg !4518

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4519
  %64 = zext i8 %63 to i32, !dbg !4519
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #26, !dbg !4519
  %65 = load i8*, i8** %25, align 4, !dbg !4525
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #25, !dbg !4526
  br label %67, !dbg !4527

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #26, !dbg !4528
  br label %67, !dbg !4533

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !4534
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4535
  br label %68, !dbg !4536

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #24, !dbg !4536
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #24, !dbg !4536
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #24, !dbg !4536
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #24, !dbg !4536
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #24, !dbg !4536
  ret void, !dbg !4536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !4537 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4539, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !4540, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8* %2, metadata !4541, metadata !DIExpression()), !dbg !4542
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !4543
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !4544
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4545
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !4545
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !4545
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #26, !dbg !4546
  ret i32 %8, !dbg !4547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !4548 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4550, metadata !DIExpression()), !dbg !4558
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !4559
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #24, !dbg !4559
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !4551, metadata !DIExpression()), !dbg !4560
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !4560
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !4561
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #24, !dbg !4561
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !4552, metadata !DIExpression()), !dbg !4562
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !4562
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4563
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !4563
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4553, metadata !DIExpression()), !dbg !4564
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4565
  store i64 0, i64* %11, align 8, !dbg !4565
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4566
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !4566
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4565
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4565
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4565
  store i8* null, i8** %14, align 8, !dbg !4565
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4565
  store i8* null, i8** %15, align 4, !dbg !4565
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !4567
  store i32 32, i32* %16, align 8, !dbg !4567
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4565
  store i16 16, i16* %17, align 4, !dbg !4565
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4565
  %19 = load i32, i32* @cap_flags, align 4, !dbg !4568
  %20 = trunc i32 %19 to i16, !dbg !4568
  store i16 %20, i16* %18, align 2, !dbg !4565
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4569
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #24, !dbg !4569
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4554, metadata !DIExpression()), !dbg !4570
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4571
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !4571
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4571
  store i32 64, i32* %23, align 4, !dbg !4571
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4571
  store i8* %8, i8** %24, align 4, !dbg !4571
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4571
  store i32 64, i32* %25, align 4, !dbg !4571
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4571
  store i32 0, i32* %26, align 4, !dbg !4571
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4571
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !4571
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !4572
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #24, !dbg !4572
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !4555, metadata !DIExpression()), !dbg !4573
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !4574
  store i8* %8, i8** %29, align 4, !dbg !4574
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !4574
  store i32 64, i32* %30, align 4, !dbg !4574
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !4574
  store i8* %9, i8** %31, align 4, !dbg !4574
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !4574
  store i32 64, i32* %32, align 4, !dbg !4574
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !4574
  store i32 0, i32* %33, align 4, !dbg !4574
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !4574
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !4574
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !4575
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #24, !dbg !4575
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !4556, metadata !DIExpression()), !dbg !4576
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !4576
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #25, !dbg !4577
  %37 = icmp eq i32 %36, 0, !dbg !4577
  br i1 %37, label %38, label %75, !dbg !4579

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #25, !dbg !4580
  %40 = icmp eq i32 %39, 0, !dbg !4580
  br i1 %40, label %44, label %41, !dbg !4582

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4583
  %43 = zext i8 %42 to i32, !dbg !4583
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #26, !dbg !4583
  br label %74, !dbg !4589

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #25, !dbg !4590
  %46 = zext i8 %45 to i32, !dbg !4590
  %47 = load i32, i32* %26, align 4, !dbg !4590
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #26, !dbg !4590
  %48 = load i8*, i8** %24, align 4, !dbg !4595
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #26, !dbg !4597
  %50 = icmp eq i32 %49, 0, !dbg !4597
  br i1 %50, label %55, label %51, !dbg !4598

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4599
  %53 = zext i8 %52 to i32, !dbg !4599
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #26, !dbg !4599
  %54 = load i8*, i8** %24, align 4, !dbg !4605
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #25, !dbg !4606
  br label %74, !dbg !4607

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #26, !dbg !4608
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4613
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #25, !dbg !4614
  %57 = icmp eq i32 %56, 0, !dbg !4614
  br i1 %57, label %58, label %75, !dbg !4616

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #25, !dbg !4617
  %60 = icmp eq i32 %59, 0, !dbg !4617
  br i1 %60, label %64, label %61, !dbg !4619

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4620
  %63 = zext i8 %62 to i32, !dbg !4620
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #26, !dbg !4620
  br label %74, !dbg !4626

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !4627
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #26, !dbg !4627
  %66 = load i8*, i8** %31, align 4, !dbg !4632
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #26, !dbg !4634
  %68 = icmp eq i32 %67, 0, !dbg !4634
  br i1 %68, label %73, label %69, !dbg !4635

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4636
  %71 = zext i8 %70 to i32, !dbg !4636
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #26, !dbg !4636
  %72 = load i8*, i8** %31, align 4, !dbg !4642
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #25, !dbg !4643
  br label %74, !dbg !4644

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #26, !dbg !4645
  br label %74, !dbg !4650

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !4557), !dbg !4651
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4652
  br label %75, !dbg !4653

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #24, !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #24, !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #24, !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #24, !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #24, !dbg !4653
  ret void, !dbg !4653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !4654 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4656, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !4657, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i8* %2, metadata !4658, metadata !DIExpression()), !dbg !4659
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !4660
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !4661
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4662
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !4662
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !4662
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #26, !dbg !4663
  ret i32 %8, !dbg !4664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !4665 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4667, metadata !DIExpression()), !dbg !4681
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !4682
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #24, !dbg !4682
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !4668, metadata !DIExpression()), !dbg !4683
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !4684
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #24, !dbg !4684
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !4672, metadata !DIExpression()), !dbg !4685
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4686
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !4686
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4676, metadata !DIExpression()), !dbg !4687
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4688
  store i64 0, i64* %11, align 8, !dbg !4688
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4689
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4689
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4688
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4688
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4688
  store i8* null, i8** %14, align 8, !dbg !4688
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4688
  store i8* null, i8** %15, align 4, !dbg !4688
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4688
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4690
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4691
  store i16 8, i16* %18, align 8, !dbg !4691
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4691
  store i16 13, i16* %19, align 2, !dbg !4691
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4688
  store i16 16, i16* %20, align 4, !dbg !4688
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4688
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4692
  %23 = trunc i32 %22 to i16, !dbg !4692
  store i16 %23, i16* %21, align 2, !dbg !4688
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4693
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #24, !dbg !4693
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4677, metadata !DIExpression()), !dbg !4694
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4695
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4695
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4695
  store i32 23, i32* %26, align 4, !dbg !4695
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4695
  store i8* %8, i8** %27, align 4, !dbg !4695
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4695
  store i32 50, i32* %28, align 4, !dbg !4695
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4695
  store i32 0, i32* %29, align 4, !dbg !4695
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4695
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4695
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4696
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #24, !dbg !4696
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4678, metadata !DIExpression()), !dbg !4697
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4698
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4698
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4698
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4698
  store i32 8, i32* %34, align 4, !dbg !4698
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4698
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !4699
  store i8* %36, i8** %35, align 4, !dbg !4698
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4700
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #24, !dbg !4700
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4679, metadata !DIExpression()), !dbg !4701
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4702
  store i8* %8, i8** %38, align 4, !dbg !4702
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4702
  store i32 23, i32* %39, align 4, !dbg !4702
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4702
  store i8* %9, i8** %40, align 4, !dbg !4702
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4702
  store i32 25, i32* %41, align 4, !dbg !4702
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4702
  store i32 0, i32* %42, align 4, !dbg !4702
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4702
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4702
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #25, !dbg !4703
  %45 = icmp eq i32 %44, 0, !dbg !4703
  br i1 %45, label %46, label %83, !dbg !4705

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4706
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #25, !dbg !4707
  %48 = icmp eq i32 %47, 0, !dbg !4707
  br i1 %48, label %52, label %49, !dbg !4709

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4710
  %51 = zext i8 %50 to i32, !dbg !4710
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #26, !dbg !4710
  br label %82, !dbg !4716

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #25, !dbg !4717
  %54 = zext i8 %53 to i32, !dbg !4717
  %55 = load i32, i32* %29, align 4, !dbg !4717
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #26, !dbg !4717
  %56 = load i8*, i8** %27, align 4, !dbg !4722
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #26, !dbg !4724
  %58 = icmp eq i32 %57, 0, !dbg !4724
  br i1 %58, label %63, label %59, !dbg !4725

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4726
  %61 = zext i8 %60 to i32, !dbg !4726
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #26, !dbg !4726
  %62 = load i8*, i8** %27, align 4, !dbg !4732
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #25, !dbg !4733
  br label %82, !dbg !4734

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #26, !dbg !4735
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4740
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #25, !dbg !4741
  %65 = icmp eq i32 %64, 0, !dbg !4741
  br i1 %65, label %66, label %83, !dbg !4743

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4744
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #25, !dbg !4745
  %68 = icmp eq i32 %67, 0, !dbg !4745
  br i1 %68, label %72, label %69, !dbg !4747

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4748
  %71 = zext i8 %70 to i32, !dbg !4748
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #26, !dbg !4748
  br label %82, !dbg !4754

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4755
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #26, !dbg !4755
  %74 = load i8*, i8** %40, align 4, !dbg !4760
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #26, !dbg !4762
  %76 = icmp eq i32 %75, 0, !dbg !4762
  br i1 %76, label %81, label %77, !dbg !4763

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4764
  %79 = zext i8 %78 to i32, !dbg !4764
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #26, !dbg !4764
  %80 = load i8*, i8** %40, align 4, !dbg !4770
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #25, !dbg !4771
  br label %82, !dbg !4772

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #26, !dbg !4773
  br label %82, !dbg !4778

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4680), !dbg !4779
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4780
  br label %83, !dbg !4781

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #24, !dbg !4781
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #24, !dbg !4781
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #24, !dbg !4781
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !4781
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #24, !dbg !4781
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #24, !dbg !4781
  ret void, !dbg !4781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4782 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4784, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4785, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !4786, metadata !DIExpression()), !dbg !4787
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4788
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4788
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4789
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4790
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4791
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4791
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4791
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #26, !dbg !4792
  ret i32 %9, !dbg !4793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !4794 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4796, metadata !DIExpression()), !dbg !4808
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4809
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #24, !dbg !4809
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !4797, metadata !DIExpression()), !dbg !4810
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4810
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4811
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #24, !dbg !4811
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4801, metadata !DIExpression()), !dbg !4812
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4812
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4813
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !4813
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4803, metadata !DIExpression()), !dbg !4814
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4815
  store i64 0, i64* %11, align 8, !dbg !4815
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4816
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4816
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4815
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4815
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4815
  store i8* null, i8** %14, align 8, !dbg !4815
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4815
  store i8* null, i8** %15, align 4, !dbg !4815
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4815
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4817
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4818
  store i16 16, i16* %18, align 8, !dbg !4818
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4818
  store i16 12, i16* %19, align 2, !dbg !4818
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4815
  store i16 16, i16* %20, align 4, !dbg !4815
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4815
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4819
  %23 = trunc i32 %22 to i16, !dbg !4819
  store i16 %23, i16* %21, align 2, !dbg !4815
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4820
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #24, !dbg !4820
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4804, metadata !DIExpression()), !dbg !4821
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4822
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4822
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4822
  store i32 42, i32* %26, align 4, !dbg !4822
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4822
  store i8* %8, i8** %27, align 4, !dbg !4822
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4822
  store i32 60, i32* %28, align 4, !dbg !4822
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4822
  store i32 0, i32* %29, align 4, !dbg !4822
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4822
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4822
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4823
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #24, !dbg !4823
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4805, metadata !DIExpression()), !dbg !4824
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4825
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4825
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4825
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4825
  store i32 20, i32* %34, align 4, !dbg !4825
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4825
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4826
  store i8* %36, i8** %35, align 4, !dbg !4825
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4827
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #24, !dbg !4827
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4806, metadata !DIExpression()), !dbg !4828
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4829
  store i8* %8, i8** %38, align 4, !dbg !4829
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4829
  store i32 42, i32* %39, align 4, !dbg !4829
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4829
  store i8* %9, i8** %40, align 4, !dbg !4829
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4829
  store i32 44, i32* %41, align 4, !dbg !4829
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4829
  store i32 0, i32* %42, align 4, !dbg !4829
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4829
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4829
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #25, !dbg !4830
  %45 = icmp eq i32 %44, 0, !dbg !4830
  br i1 %45, label %46, label %83, !dbg !4832

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4833
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #25, !dbg !4834
  %48 = icmp eq i32 %47, 0, !dbg !4834
  br i1 %48, label %52, label %49, !dbg !4836

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4837
  %51 = zext i8 %50 to i32, !dbg !4837
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #26, !dbg !4837
  br label %82, !dbg !4843

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #25, !dbg !4844
  %54 = zext i8 %53 to i32, !dbg !4844
  %55 = load i32, i32* %29, align 4, !dbg !4844
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #26, !dbg !4844
  %56 = load i8*, i8** %27, align 4, !dbg !4849
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #26, !dbg !4851
  %58 = icmp eq i32 %57, 0, !dbg !4851
  br i1 %58, label %63, label %59, !dbg !4852

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4853
  %61 = zext i8 %60 to i32, !dbg !4853
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #26, !dbg !4853
  %62 = load i8*, i8** %27, align 4, !dbg !4859
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #25, !dbg !4860
  br label %82, !dbg !4861

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #26, !dbg !4862
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4867
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #25, !dbg !4868
  %65 = icmp eq i32 %64, 0, !dbg !4868
  br i1 %65, label %66, label %83, !dbg !4870

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4871
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #25, !dbg !4872
  %68 = icmp eq i32 %67, 0, !dbg !4872
  br i1 %68, label %72, label %69, !dbg !4874

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4875
  %71 = zext i8 %70 to i32, !dbg !4875
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #26, !dbg !4875
  br label %82, !dbg !4881

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4882
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #26, !dbg !4882
  %74 = load i8*, i8** %40, align 4, !dbg !4887
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #26, !dbg !4889
  %76 = icmp eq i32 %75, 0, !dbg !4889
  br i1 %76, label %81, label %77, !dbg !4890

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4891
  %79 = zext i8 %78 to i32, !dbg !4891
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #26, !dbg !4891
  %80 = load i8*, i8** %40, align 4, !dbg !4897
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #25, !dbg !4898
  br label %82, !dbg !4899

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #26, !dbg !4900
  br label %82, !dbg !4905

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4807), !dbg !4906
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #25, !dbg !4907
  br label %83, !dbg !4908

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #24, !dbg !4908
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #24, !dbg !4908
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #24, !dbg !4908
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !4908
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #24, !dbg !4908
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #24, !dbg !4908
  ret void, !dbg !4908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4909 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4911, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4912, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4913, metadata !DIExpression()), !dbg !4914
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4915
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4915
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4916
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4917
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4918
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4918
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4918
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #26, !dbg !4919
  ret i32 %9, !dbg !4920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4921 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #25, !dbg !4933
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4923, metadata !DIExpression()), !dbg !4934
  %2 = icmp eq %struct.device* %1, null, !dbg !4935
  br i1 %2, label %3, label %6, !dbg !4937

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4938
  %5 = zext i8 %4 to i32, !dbg !4938
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #26, !dbg !4938
  br label %23, !dbg !4944

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4924, metadata !DIExpression()), !dbg !4945
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #25, !dbg !4946
  %8 = icmp eq i32 %7, 0, !dbg !4946
  br i1 %8, label %12, label %9, !dbg !4948

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #25, !dbg !4949
  %11 = zext i8 %10 to i32, !dbg !4949
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #26, !dbg !4949
  br label %23, !dbg !4955

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #25, !dbg !4956
  %14 = zext i8 %13 to i32, !dbg !4956
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #26, !dbg !4956
  call void @llvm.dbg.value(metadata i32 0, metadata !4932, metadata !DIExpression()), !dbg !4934
  br label %15, !dbg !4961

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4932, metadata !DIExpression()), !dbg !4934
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4963
  %18 = load i8*, i8** %17, align 4, !dbg !4965
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #26, !dbg !4965
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4971
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4971
  tail call void %20(%struct.device* noundef nonnull %1) #26, !dbg !4972
  %21 = add nuw nsw i32 %16, 1, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %21, metadata !4932, metadata !DIExpression()), !dbg !4934
  %22 = icmp eq i32 %21, 5, !dbg !4961
  br i1 %22, label %23, label %15, !dbg !4961, !llvm.loop !4974

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4977 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4982, metadata !DIExpression()), !dbg !4983
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !4984, !srcloc !4986
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #26, !dbg !4987
  ret %struct.device* %1, !dbg !4988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4989 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %0, metadata !5000, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %1, metadata !5001, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %2, metadata !5002, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %3, metadata !5003, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %0, metadata !5005, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %0, metadata !5006, metadata !DIExpression()), !dbg !5066
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !5067
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24, !dbg !5067
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !5009, metadata !DIExpression()), !dbg !5068
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !5069
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #24, !dbg !5069
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !5010, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i32 0, metadata !5011, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 0, metadata !5012, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 -1, metadata !5014, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 0, metadata !5017, metadata !DIExpression()), !dbg !5066
  %12 = and i32 %2, 4, !dbg !5071
  %13 = icmp eq i32 %12, 0, !dbg !5072
  call void @llvm.dbg.value(metadata i1 %13, metadata !5018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5066
  %14 = lshr i32 %2, 3, !dbg !5073
  %15 = and i32 %14, 7, !dbg !5073
  %16 = add nuw nsw i32 %15, 1, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %16, metadata !5019, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 0, metadata !5020, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %0, metadata !5021, metadata !DIExpression()), !dbg !5066
  %17 = ptrtoint i8* %0 to i32, !dbg !5075
  %18 = and i32 %17, 3, !dbg !5077
  %19 = icmp eq i32 %18, 0, !dbg !5077
  br i1 %19, label %20, label %316, !dbg !5078

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5079
  call void @llvm.dbg.value(metadata i8* %21, metadata !5006, metadata !DIExpression()), !dbg !5066
  %22 = icmp eq i8* %0, null, !dbg !5080
  %23 = and i32 %1, 7, !dbg !5082
  %24 = sub nuw nsw i32 8, %23, !dbg !5082
  %25 = select i1 %22, i32 %23, i32 0, !dbg !5082
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !5082
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %27, metadata !5001, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %26, metadata !5006, metadata !DIExpression()), !dbg !5066
  br i1 %22, label %33, label %28, !dbg !5083

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !5085
  %30 = sub i32 4, %17, !dbg !5085
  %31 = add i32 %30, %29, !dbg !5086
  %32 = icmp ugt i32 %31, %27, !dbg !5087
  br i1 %32, label %316, label %33, !dbg !5088

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %34, metadata !5003, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %3, metadata !5016, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 4, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 4, metadata !5007, metadata !DIExpression()), !dbg !5066
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !5090

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %42, metadata !5003, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %43, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %44, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %45, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %72, metadata !5014, metadata !DIExpression()), !dbg !5066
  br i1 %46, label %73, label %47, !dbg !5091

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !5092
  %49 = zext i1 %48 to i32, !dbg !5096
  %50 = add nsw i32 %72, %49, !dbg !5096
  %51 = select i1 %48, i32 4, i32 %45, !dbg !5096
  %52 = select i1 %48, i32 4, i32 %44, !dbg !5096
  call void @llvm.dbg.value(metadata i32 %52, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %51, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %50, metadata !5014, metadata !DIExpression()), !dbg !5066
  br label %53, !dbg !5097

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %40, metadata !5003, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %58, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %57, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %56, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %54, metadata !5014, metadata !DIExpression()), !dbg !5066
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %60, metadata !5003, metadata !DIExpression()), !dbg !5066
  %61 = load i8, i8* %60, align 1, !dbg !5100
  %62 = icmp eq i8 %61, 0, !dbg !5101
  br i1 %62, label %223, label %63, !dbg !5102, !llvm.loop !5103

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !5091

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !5106

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !5017, metadata !DIExpression()), !dbg !5066
  %75 = add nsw i32 %72, -1, !dbg !5107
  call void @llvm.dbg.value(metadata i32 %75, metadata !5014, metadata !DIExpression()), !dbg !5066
  br label %53, !dbg !5108

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !5109

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 4, metadata !5007, metadata !DIExpression()), !dbg !5066
  br label %53, !dbg !5110

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 4, metadata !5007, metadata !DIExpression()), !dbg !5066
  br label %53, !dbg !5111

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !5112
  %81 = icmp eq i8 %80, 108, !dbg !5114
  br i1 %81, label %82, label %109, !dbg !5115

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !5116
  %84 = load i8, i8* %83, align 1, !dbg !5116
  %85 = icmp eq i8 %84, 108, !dbg !5119
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !5120
  %89 = add i32 %88, 7, !dbg !5120
  %90 = and i32 %89, -8, !dbg !5120
  %91 = inttoptr i32 %90 to i8*, !dbg !5120
  %92 = inttoptr i32 %90 to double*, !dbg !5120
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !5120
  %94 = load double, double* %92, align 8, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %93, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 8, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 8, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata double %94, metadata !5034, metadata !DIExpression()), !dbg !5122
  %95 = ptrtoint i8* %43 to i32, !dbg !5123
  %96 = add i32 %95, 7, !dbg !5123
  %97 = and i32 %96, -8, !dbg !5123
  %98 = inttoptr i32 %97 to i8*, !dbg !5124
  call void @llvm.dbg.value(metadata i8* %98, metadata !5006, metadata !DIExpression()), !dbg !5066
  br i1 %22, label %104, label %99, !dbg !5125

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !5126
  %101 = icmp ugt i32 %100, %194, !dbg !5130
  br i1 %101, label %316, label %102, !dbg !5131

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !5132
  store double %94, double* %103, align 8, !dbg !5132
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %105, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5066
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !5017, metadata !DIExpression()), !dbg !5066
  br label %53, !dbg !5136

107:                                              ; preds = %73, %73
  br label %109, !dbg !5137

108:                                              ; preds = %73
  br label %109, !dbg !5137

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !5066
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !5066
  call void @llvm.dbg.value(metadata i32 %113, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %112, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5020, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5066
  %114 = ptrtoint i8* %43 to i32, !dbg !5137
  %115 = add i32 %114, -1, !dbg !5137
  %116 = add i32 %115, %112, !dbg !5137
  %117 = sub i32 0, %112, !dbg !5137
  %118 = and i32 %116, %117, !dbg !5137
  %119 = inttoptr i32 %118 to i8*, !dbg !5138
  call void @llvm.dbg.value(metadata i8* %119, metadata !5006, metadata !DIExpression()), !dbg !5066
  br i1 %22, label %124, label %120, !dbg !5139

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !5141
  %122 = add i32 %121, %118, !dbg !5142
  %123 = icmp ugt i32 %122, %194, !dbg !5143
  br i1 %123, label %316, label %124, !dbg !5144

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !5145

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !5138
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %127, metadata !5004, metadata !DIExpression()), !dbg !5066
  %128 = bitcast i8* %41 to i8**, !dbg !5146
  %129 = load i8*, i8** %128, align 4, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %129, metadata !5016, metadata !DIExpression()), !dbg !5066
  br label %130, !dbg !5147

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !5148
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !5149
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !5066
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !5150
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !5066
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !5151
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !5066
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !5066
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !5066
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !5066
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !5152
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %142, metadata !5001, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %141, metadata !5003, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %140, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %139, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %138, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %137, metadata !5011, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %136, metadata !5019, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %135, metadata !5012, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %133, metadata !5016, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %132, metadata !5014, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %131, metadata !5013, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.label(metadata !5065), !dbg !5154
  br i1 %22, label %146, label %144, !dbg !5155

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !5156
  store i8* %133, i8** %145, align 4, !dbg !5159
  br label %146, !dbg !5160

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !5161
  call void @llvm.dbg.value(metadata i32 %147, metadata !5019, metadata !DIExpression()), !dbg !5066
  %148 = icmp sgt i32 %136, 0, !dbg !5162
  br i1 %148, label %152, label %149, !dbg !5163

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !5164
  %151 = zext i1 %150 to i32, !dbg !5164
  br label %152, !dbg !5163

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !5163
  %154 = icmp eq i32 %153, 0, !dbg !5163
  call void @llvm.dbg.value(metadata i1 %154, metadata !5043, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5165
  call void @llvm.dbg.value(metadata i1 %36, metadata !5046, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5165
  %155 = or i1 %36, %154, !dbg !5166
  br i1 %155, label %156, label %190, !dbg !5166

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !5167
  %158 = sub i32 %157, %17, !dbg !5167
  %159 = lshr i32 %158, 2, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %159, metadata !5047, metadata !DIExpression()), !dbg !5169
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !5170
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !5170
  br i1 %163, label %316, label %164, !dbg !5170

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !5172

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !5173
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !5176
  store i8 %166, i8* %167, align 1, !dbg !5177
  %168 = trunc i32 %132 to i8, !dbg !5178
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !5179
  store i8 %168, i8* %169, align 1, !dbg !5180
  br i1 %154, label %173, label %170, !dbg !5181

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !5182
  store i8 %171, i8* %167, align 1, !dbg !5182
  %172 = add i32 %131, 1, !dbg !5185
  call void @llvm.dbg.value(metadata i32 %172, metadata !5013, metadata !DIExpression()), !dbg !5066
  br label %185, !dbg !5186

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %174, metadata !5012, metadata !DIExpression()), !dbg !5066
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !5189

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !5190
  call void @llvm.dbg.value(metadata i32 %177, metadata !5001, metadata !DIExpression()), !dbg !5066
  br label %185, !dbg !5193

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !5194

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !5195
  call void @llvm.dbg.value(metadata i32 %180, metadata !5001, metadata !DIExpression()), !dbg !5066
  br label %185, !dbg !5198

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #26, !dbg !5199
  %183 = add i32 %142, 2, !dbg !5201
  %184 = add i32 %183, %182, !dbg !5202
  call void @llvm.dbg.value(metadata i32 %184, metadata !5001, metadata !DIExpression()), !dbg !5066
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !5066
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !5066
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !5066
  call void @llvm.dbg.value(metadata i32 %188, metadata !5001, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %187, metadata !5012, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %186, metadata !5013, metadata !DIExpression()), !dbg !5066
  %189 = add nuw nsw i32 %137, 1, !dbg !5203
  call void @llvm.dbg.value(metadata i32 undef, metadata !5001, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 undef, metadata !5011, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 undef, metadata !5012, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 undef, metadata !5013, metadata !DIExpression()), !dbg !5066
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !5148
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !5150
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !5151
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !5152
  call void @llvm.dbg.value(metadata i32 %194, metadata !5001, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %193, metadata !5011, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %192, metadata !5012, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %191, metadata !5013, metadata !DIExpression()), !dbg !5066
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !5204
  call void @llvm.dbg.value(metadata i8* %195, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %143, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %141, metadata !5003, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %139, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %138, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5020, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %132, metadata !5014, metadata !DIExpression()), !dbg !5066
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %196, metadata !5003, metadata !DIExpression()), !dbg !5066
  %197 = load i8, i8* %196, align 1, !dbg !5100
  %198 = icmp eq i8 %197, 0, !dbg !5101
  br i1 %198, label %223, label %63, !dbg !5102

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !5205

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !5206
  call void @llvm.dbg.value(metadata i8* %201, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 undef, metadata !5050, metadata !DIExpression()), !dbg !5207
  br i1 %22, label %216, label %202, !dbg !5208

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !5206
  %204 = load i32, i32* %203, align 4, !dbg !5206
  call void @llvm.dbg.value(metadata i32 %204, metadata !5050, metadata !DIExpression()), !dbg !5207
  %205 = inttoptr i32 %118 to i32*, !dbg !5209
  store i32 %204, i32* %205, align 4, !dbg !5212
  br label %216, !dbg !5213

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !5214
  %208 = add i32 %207, 7, !dbg !5214
  %209 = and i32 %208, -8, !dbg !5214
  %210 = inttoptr i32 %209 to i8*, !dbg !5214
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %211, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i64 undef, metadata !5056, metadata !DIExpression()), !dbg !5215
  br i1 %22, label %216, label %212, !dbg !5216

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !5214
  %214 = load i64, i64* %213, align 8, !dbg !5214
  call void @llvm.dbg.value(metadata i64 %214, metadata !5056, metadata !DIExpression()), !dbg !5215
  %215 = inttoptr i32 %118 to i64*, !dbg !5217
  store i64 %214, i64* %215, align 8, !dbg !5222
  br label %216, !dbg !5223

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !5224
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !5224
  call void @llvm.dbg.value(metadata i8* %218, metadata !5004, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %40, metadata !5003, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %219, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %113, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %112, metadata !5008, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5020, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %72, metadata !5014, metadata !DIExpression()), !dbg !5066
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %220, metadata !5003, metadata !DIExpression()), !dbg !5066
  %221 = load i8, i8* %220, align 1, !dbg !5100
  %222 = icmp eq i8 %221, 0, !dbg !5101
  br i1 %222, label %223, label %38, !dbg !5102

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !5225
  %225 = ptrtoint i8* %224 to i32, !dbg !5226
  %226 = sub i32 %225, %17, !dbg !5226
  %227 = lshr i32 %226, 2, !dbg !5228
  %228 = icmp ugt i32 %226, 1023, !dbg !5229
  br i1 %228, label %316, label %229, !dbg !5230

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !5231

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !5232
  %232 = add i32 %231, %226, !dbg !5235
  br label %316, !dbg !5236

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !5237
  store i8 %234, i8* %0, align 1, !dbg !5238
  %235 = trunc i32 %192 to i8, !dbg !5239
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5241
  store i8 %236, i8* %238, align 1, !dbg !5243
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !5244
  store i8 %237, i8* %239, align 1, !dbg !5245
  %240 = trunc i32 %191 to i8, !dbg !5246
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5247
  store i8 %240, i8* %241, align 1, !dbg !5248
  %242 = icmp eq i32 %191, 0, !dbg !5249
  %243 = xor i1 %242, true, !dbg !5250
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !5250
  call void @llvm.dbg.value(metadata i8* %224, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 0, metadata !5015, metadata !DIExpression()), !dbg !5066
  br i1 %245, label %246, label %265, !dbg !5250

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !5251

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %250, metadata !5015, metadata !DIExpression()), !dbg !5066
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !5252
  %252 = load i8, i8* %251, align 1, !dbg !5252
  %253 = icmp sgt i8 %252, -1, !dbg !5254
  br i1 %253, label %261, label %254, !dbg !5255

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !5059, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5256
  %255 = ptrtoint i8* %249 to i32, !dbg !5257
  %256 = add i32 %247, %255, !dbg !5259
  %257 = icmp ugt i32 %256, %194, !dbg !5260
  br i1 %257, label %316, label %258, !dbg !5261

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !5262
  call void @llvm.dbg.value(metadata i8 %259, metadata !5059, metadata !DIExpression()), !dbg !5256
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !5263
  call void @llvm.dbg.value(metadata i8* %260, metadata !5006, metadata !DIExpression()), !dbg !5066
  store i8 %259, i8* %249, align 1, !dbg !5264
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !5204
  call void @llvm.dbg.value(metadata i8* %262, metadata !5006, metadata !DIExpression()), !dbg !5066
  %263 = add nuw i32 %250, 1, !dbg !5265
  call void @llvm.dbg.value(metadata i32 %263, metadata !5015, metadata !DIExpression()), !dbg !5066
  %264 = icmp eq i32 %263, %193, !dbg !5266
  br i1 %264, label %265, label %248, !dbg !5251, !llvm.loop !5267

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !5204
  call void @llvm.dbg.value(metadata i8* %266, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 0, metadata !5015, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %133, metadata !5016, metadata !DIExpression()), !dbg !5066
  %267 = icmp eq i32 %193, 0, !dbg !5269
  br i1 %267, label %312, label %268, !dbg !5272

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !5272

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %272, metadata !5016, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %273, metadata !5015, metadata !DIExpression()), !dbg !5066
  br i1 %242, label %278, label %274, !dbg !5273

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !5276
  %276 = load i8, i8* %275, align 1, !dbg !5276
  %277 = icmp sgt i8 %276, -1, !dbg !5277
  br i1 %277, label %278, label %307, !dbg !5278

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !5279

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !5007, metadata !DIExpression()), !dbg !5066
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !5280
  %281 = load i8, i8* %280, align 1, !dbg !5280
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %282, metadata !5006, metadata !DIExpression()), !dbg !5066
  store i8 %281, i8* %271, align 1, !dbg !5284
  br label %293, !dbg !5285

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !5286
  %285 = load i8, i8* %284, align 1, !dbg !5286
  %286 = zext i8 %285 to i32, !dbg !5286
  %287 = shl nuw nsw i32 %286, 2, !dbg !5288
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !5289
  %289 = bitcast i8* %288 to i8**, !dbg !5290
  %290 = load i8*, i8** %289, align 4, !dbg !5290
  call void @llvm.dbg.value(metadata i8* %290, metadata !5016, metadata !DIExpression()), !dbg !5066
  store i8* null, i8** %289, align 4, !dbg !5291
  %291 = tail call i32 @strlen(i8* noundef %290) #26, !dbg !5292
  %292 = add i32 %291, 1, !dbg !5293
  call void @llvm.dbg.value(metadata i32 %292, metadata !5007, metadata !DIExpression()), !dbg !5066
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !5066
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !5294
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !5066
  call void @llvm.dbg.value(metadata i8* %296, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %295, metadata !5007, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %294, metadata !5016, metadata !DIExpression()), !dbg !5066
  %297 = ptrtoint i8* %296 to i32, !dbg !5295
  %298 = add i32 %269, %295, !dbg !5297
  %299 = add i32 %298, %297, !dbg !5298
  %300 = icmp ugt i32 %299, %194, !dbg !5299
  br i1 %300, label %316, label %301, !dbg !5300

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !5301
  %303 = load i8, i8* %302, align 1, !dbg !5301
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !5302
  call void @llvm.dbg.value(metadata i8* %304, metadata !5006, metadata !DIExpression()), !dbg !5066
  store i8 %303, i8* %296, align 1, !dbg !5303
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #26, !dbg !5304
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !5305
  call void @llvm.dbg.value(metadata i8* %306, metadata !5006, metadata !DIExpression()), !dbg !5066
  br label %307, !dbg !5306

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !5307
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !5066
  call void @llvm.dbg.value(metadata i8* %309, metadata !5006, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %308, metadata !5016, metadata !DIExpression()), !dbg !5066
  %310 = add nuw i32 %273, 1, !dbg !5308
  call void @llvm.dbg.value(metadata i32 %310, metadata !5015, metadata !DIExpression()), !dbg !5066
  %311 = icmp eq i32 %310, %193, !dbg !5269
  br i1 %311, label %312, label %270, !dbg !5272, !llvm.loop !5309

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !5204
  %314 = ptrtoint i8* %313 to i32, !dbg !5311
  %315 = sub i32 %314, %17, !dbg !5311
  br label %316, !dbg !5312

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !5066
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #24, !dbg !5313
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !5313
  ret i32 %317, !dbg !5313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !5314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5318, metadata !DIExpression()), !dbg !5319
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !5320
  ret i1 %2, !dbg !5321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !5322 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5327, metadata !DIExpression()), !dbg !5328
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !5329
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !5330
  %4 = and i1 %2, %3, !dbg !5330
  ret i1 %4, !dbg !5331
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !5332 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5336, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %1, metadata !5337, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %2, metadata !5338, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i8* %3, metadata !5339, metadata !DIExpression()), !dbg !5342
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !5343
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !5343
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !5340, metadata !DIExpression()), !dbg !5344
  call void @llvm.va_start(i8* nonnull %6), !dbg !5345
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !5346
  %8 = load i32, i32* %7, align 4, !dbg !5346
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !5346
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !5346
  call void @llvm.dbg.value(metadata i32 %10, metadata !5341, metadata !DIExpression()), !dbg !5342
  call void @llvm.va_end(i8* nonnull %6), !dbg !5347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !5348
  ret i32 %10, !dbg !5349
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !5350 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5362, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !5363, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8* %2, metadata !5364, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8* %3, metadata !5365, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8* %3, metadata !5366, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8* %3, metadata !5367, metadata !DIExpression()), !dbg !5381
  %5 = icmp eq i8* %3, null, !dbg !5382
  br i1 %5, label %45, label %6, !dbg !5384

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !5376, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !5381
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !5385
  %8 = load i8, i8* %7, align 1, !dbg !5385
  %9 = zext i8 %8 to i32, !dbg !5386
  call void @llvm.dbg.value(metadata i32 %9, metadata !5377, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8 undef, metadata !5378, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5381
  call void @llvm.dbg.value(metadata i8 undef, metadata !5379, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  call void @llvm.dbg.value(metadata i32 0, metadata !5375, metadata !DIExpression()), !dbg !5381
  %10 = icmp eq i8 %8, 0, !dbg !5387
  br i1 %10, label %39, label %11, !dbg !5390

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !5391
  call void @llvm.dbg.value(metadata i8 %12, metadata !5376, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %13 = zext i8 %12 to i32, !dbg !5392
  call void @llvm.dbg.value(metadata i32 %13, metadata !5376, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %14 = shl nuw nsw i32 %13, 2, !dbg !5393
  call void @llvm.dbg.value(metadata i32 %14, metadata !5376, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !5394
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !5395
  %17 = load i8, i8* %16, align 1, !dbg !5395
  call void @llvm.dbg.value(metadata i8 %17, metadata !5378, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %18 = zext i8 %17 to i32, !dbg !5396
  call void @llvm.dbg.value(metadata i32 %18, metadata !5378, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !5397
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !5398
  %21 = load i8, i8* %20, align 1, !dbg !5398
  call void @llvm.dbg.value(metadata i8 %21, metadata !5379, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %22 = zext i8 %21 to i32, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %22, metadata !5379, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %23 = shl nuw nsw i32 %22, 1, !dbg !5400
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !5373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5381
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !5401
  call void @llvm.dbg.value(metadata i8* %24, metadata !5373, metadata !DIExpression()), !dbg !5381
  br label %25, !dbg !5390

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !5373, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i32 %27, metadata !5375, metadata !DIExpression()), !dbg !5381
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !5402
  call void @llvm.dbg.value(metadata i8* %28, metadata !5373, metadata !DIExpression()), !dbg !5381
  %29 = load i8, i8* %26, align 1, !dbg !5404
  %30 = zext i8 %29 to i32, !dbg !5404
  call void @llvm.dbg.value(metadata i32 %30, metadata !5380, metadata !DIExpression()), !dbg !5381
  %31 = shl nuw nsw i32 %30, 2, !dbg !5405
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !5406
  %33 = bitcast i8* %32 to i8**, !dbg !5407
  call void @llvm.dbg.value(metadata i8** %33, metadata !5374, metadata !DIExpression()), !dbg !5381
  store i8* %28, i8** %33, align 4, !dbg !5408
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #26, !dbg !5409
  %35 = add i32 %34, 1, !dbg !5410
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !5411
  call void @llvm.dbg.value(metadata i8* %36, metadata !5373, metadata !DIExpression()), !dbg !5381
  %37 = add nuw nsw i32 %27, 1, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %37, metadata !5375, metadata !DIExpression()), !dbg !5381
  %38 = icmp eq i32 %37, %9, !dbg !5387
  br i1 %38, label %39, label %25, !dbg !5390, !llvm.loop !5413

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !5415
  call void @llvm.dbg.value(metadata i8* %40, metadata !5366, metadata !DIExpression()), !dbg !5381
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !5416
  %42 = bitcast i8* %41 to i8**, !dbg !5416
  %43 = load i8*, i8** %42, align 1, !dbg !5416
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !5417
  br label %45, !dbg !5418

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !5381
  ret i32 %46, !dbg !5419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !5420 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5424, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !5425, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i8* %2, metadata !5426, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i8* %3, metadata !5427, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i8* %4, metadata !5428, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i8* %4, metadata !5429, metadata !DIExpression()), !dbg !5434
  %6 = ptrtoint i8* %4 to i32, !dbg !5435
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !5435
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #26, !dbg !5435
  ret i32 %8, !dbg !5436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5441, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i32 %1, metadata !5442, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8 0, metadata !5444, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i32 0, metadata !5445, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8 poison, metadata !5444, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8* %0, metadata !5441, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5446
  %3 = load i8, i8* %0, align 1, !dbg !5447
  call void @llvm.dbg.value(metadata i8 %3, metadata !5443, metadata !DIExpression()), !dbg !5446
  %4 = icmp eq i8 %3, 0, !dbg !5448
  br i1 %4, label %29, label %5, !dbg !5449

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %8, metadata !5445, metadata !DIExpression()), !dbg !5446
  br i1 %9, label %11, label %22, !dbg !5451

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !5453
  br i1 %12, label %13, label %17, !dbg !5457

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !5458
  br i1 %14, label %29, label %15, !dbg !5461

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !5462
  br i1 %16, label %29, label %22, !dbg !5464

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !5465
  %19 = xor i1 %18, true, !dbg !5467
  %20 = zext i1 %18 to i32, !dbg !5467
  %21 = add nsw i32 %8, %20, !dbg !5467
  br label %22, !dbg !5467

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !5446
  call void @llvm.dbg.value(metadata i32 %24, metadata !5445, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8 poison, metadata !5444, metadata !DIExpression()), !dbg !5446
  %25 = icmp eq i8 %6, 37, !dbg !5468
  %26 = xor i1 %25, %23, !dbg !5470
  call void @llvm.dbg.value(metadata i8* %10, metadata !5441, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8* %10, metadata !5441, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5446
  %27 = load i8, i8* %10, align 1, !dbg !5447
  call void @llvm.dbg.value(metadata i8 %27, metadata !5443, metadata !DIExpression()), !dbg !5446
  %28 = icmp eq i8 %27, 0, !dbg !5448
  br i1 %28, label %29, label %5, !dbg !5449, !llvm.loop !5471

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !5446
  ret i1 %30, !dbg !5473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5474 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5478, metadata !DIExpression()), !dbg !5479
  %2 = add i8 %0, -64, !dbg !5480
  %3 = icmp ult i8 %2, 59, !dbg !5480
  ret i1 %3, !dbg !5481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !5482 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5490, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %1, metadata !5491, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !5492, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8* %3, metadata !5493, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %4, metadata !5494, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i16* %5, metadata !5495, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %6, metadata !5496, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8* %0, metadata !5497, metadata !DIExpression()), !dbg !5559
  %11 = bitcast i8* %0 to i32*, !dbg !5560
  call void @llvm.dbg.value(metadata i32* %11, metadata !5498, metadata !DIExpression()), !dbg !5559
  %12 = and i32 %4, 8, !dbg !5561
  %13 = icmp eq i32 %12, 0, !dbg !5562
  call void @llvm.dbg.value(metadata i1 %13, metadata !5502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5559
  call void @llvm.dbg.value(metadata i8* %0, metadata !5505, metadata !DIExpression()), !dbg !5559
  %14 = icmp eq i32 %1, 0, !dbg !5563
  br i1 %14, label %15, label %17, !dbg !5564

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #25, !dbg !5565
  br label %17, !dbg !5564

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !5564
  call void @llvm.dbg.value(metadata i32 %18, metadata !5491, metadata !DIExpression()), !dbg !5559
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5566
  %20 = load i8, i8* %19, align 1, !dbg !5566
  %21 = zext i8 %20 to i32, !dbg !5567
  call void @llvm.dbg.value(metadata i32 %21, metadata !5500, metadata !DIExpression()), !dbg !5559
  %22 = icmp ne i8 %20, 0, !dbg !5568
  %23 = and i32 %4, 1, !dbg !5569
  %24 = icmp ne i32 %23, 0, !dbg !5569
  %25 = and i1 %24, %22, !dbg !5569
  call void @llvm.dbg.value(metadata i1 %25, metadata !5504, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5559
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !5570
  %27 = load i8, i8* %26, align 1, !dbg !5570
  %28 = zext i8 %27 to i32, !dbg !5571
  call void @llvm.dbg.value(metadata i32 %28, metadata !5501, metadata !DIExpression()), !dbg !5559
  %29 = icmp ne i8 %27, 0, !dbg !5572
  %30 = and i32 %4, 2, !dbg !5573
  %31 = icmp ne i32 %30, 0, !dbg !5573
  %32 = and i1 %31, %29, !dbg !5573
  call void @llvm.dbg.value(metadata i1 %32, metadata !5503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5559
  %33 = select i1 %32, i1 true, i1 %25, !dbg !5574
  br i1 %33, label %38, label %34, !dbg !5574

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !5576
  br i1 %35, label %267, label %36, !dbg !5579

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #26, !dbg !5580
  br label %267, !dbg !5582

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !5583
  %40 = zext i8 %39 to i32, !dbg !5584
  %41 = shl nuw nsw i32 %40, 2, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %41, metadata !5499, metadata !DIExpression()), !dbg !5559
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5586
  %43 = bitcast i8* %42 to i8**, !dbg !5587
  %44 = load i8*, i8** %43, align 4, !dbg !5587
  call void @llvm.dbg.value(metadata i8* %44, metadata !5508, metadata !DIExpression()), !dbg !5559
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !5588
  call void @llvm.dbg.value(metadata i8* %45, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 0, metadata !5510, metadata !DIExpression()), !dbg !5559
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !5589
  br i1 %46, label %47, label %132, !dbg !5590

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !5507, metadata !DIExpression()), !dbg !5559
  br i1 %25, label %48, label %73, !dbg !5591

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8* %45, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 0, metadata !5510, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 0, metadata !5511, metadata !DIExpression()), !dbg !5592
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !5593

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8* %52, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %53, metadata !5510, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %54, metadata !5511, metadata !DIExpression()), !dbg !5592
  %55 = load i8, i8* %52, align 1, !dbg !5594
  %56 = zext i8 %55 to i32, !dbg !5595
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !5595
  %58 = bitcast i32* %57 to i8**, !dbg !5596
  %59 = load i8*, i8** %58, align 4, !dbg !5596
  call void @llvm.dbg.value(metadata i8* %59, metadata !5517, metadata !DIExpression()), !dbg !5597
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #25, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %60, metadata !5520, metadata !DIExpression()), !dbg !5597
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !5599
  br i1 %62, label %63, label %67, !dbg !5599

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !5601
  %65 = add nuw i32 %53, 1, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %65, metadata !5510, metadata !DIExpression()), !dbg !5559
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !5604
  store i16 %64, i16* %66, align 2, !dbg !5605
  br label %67, !dbg !5606

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !5559
  call void @llvm.dbg.value(metadata i32 %68, metadata !5510, metadata !DIExpression()), !dbg !5559
  %69 = add nsw i32 %60, %51, !dbg !5607
  call void @llvm.dbg.value(metadata i32 %69, metadata !5507, metadata !DIExpression()), !dbg !5559
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !5608
  call void @llvm.dbg.value(metadata i8* %70, metadata !5509, metadata !DIExpression()), !dbg !5559
  %71 = add nuw nsw i32 %54, 1, !dbg !5609
  call void @llvm.dbg.value(metadata i32 %71, metadata !5511, metadata !DIExpression()), !dbg !5592
  %72 = icmp eq i32 %71, %21, !dbg !5610
  br i1 %72, label %79, label %50, !dbg !5593, !llvm.loop !5611

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !5613
  %77 = select i1 %76, i32 %21, i32 0, !dbg !5613
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !5613
  br label %79, !dbg !5613

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !5616
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !5559
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !5617
  call void @llvm.dbg.value(metadata i1 undef, metadata !5521, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5618
  call void @llvm.dbg.value(metadata i32 0, metadata !5522, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.value(metadata i32 %82, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8* %81, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %80, metadata !5510, metadata !DIExpression()), !dbg !5559
  %83 = icmp eq i8 %27, 0, !dbg !5620
  br i1 %83, label %267, label %84, !dbg !5621

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !5622
  %86 = icmp eq i32 %85, 0, !dbg !5623
  call void @llvm.dbg.value(metadata i1 %86, metadata !5521, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5618
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !5621

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8* %93, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %94, metadata !5510, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %95, metadata !5522, metadata !DIExpression()), !dbg !5619
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !5624
  call void @llvm.dbg.value(metadata i8* %96, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8 undef, metadata !5524, metadata !DIExpression()), !dbg !5625
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !5626
  call void @llvm.dbg.value(metadata i8* %97, metadata !5509, metadata !DIExpression()), !dbg !5559
  %98 = load i8, i8* %96, align 1, !dbg !5627
  call void @llvm.dbg.value(metadata i8 %98, metadata !5527, metadata !DIExpression()), !dbg !5625
  %99 = zext i8 %98 to i32, !dbg !5628
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !5628
  %101 = bitcast i32* %100 to i8**, !dbg !5629
  %102 = load i8*, i8** %101, align 4, !dbg !5629
  call void @llvm.dbg.value(metadata i8* %102, metadata !5528, metadata !DIExpression()), !dbg !5625
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #25, !dbg !5630
  call void @llvm.dbg.value(metadata i1 %103, metadata !5529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5625
  br i1 %13, label %110, label %104, !dbg !5631

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !5633
  call void @llvm.dbg.value(metadata i8 %105, metadata !5524, metadata !DIExpression()), !dbg !5625
  %106 = zext i8 %105 to i32, !dbg !5634
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #25, !dbg !5635
  br i1 %107, label %108, label %110, !dbg !5636

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #26, !dbg !5637
  %109 = add nsw i32 %92, -2, !dbg !5643
  call void @llvm.dbg.value(metadata i32 %109, metadata !5507, metadata !DIExpression()), !dbg !5559
  br label %127, !dbg !5644

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !5645

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !5646

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %113, metadata !5507, metadata !DIExpression()), !dbg !5559
  br label %127, !dbg !5651

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !5652

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !5555), !dbg !5653
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #25, !dbg !5654
  call void @llvm.dbg.value(metadata i32 %116, metadata !5530, metadata !DIExpression()), !dbg !5625
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !5655
  br i1 %118, label %119, label %123, !dbg !5655

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !5657
  %121 = add nuw i32 %94, 1, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %121, metadata !5510, metadata !DIExpression()), !dbg !5559
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !5660
  store i16 %120, i16* %122, align 2, !dbg !5661
  br label %123, !dbg !5662

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !5559
  call void @llvm.dbg.value(metadata i32 %124, metadata !5510, metadata !DIExpression()), !dbg !5559
  %125 = add i32 %92, -1, !dbg !5663
  %126 = add i32 %125, %116, !dbg !5664
  call void @llvm.dbg.value(metadata i32 %126, metadata !5507, metadata !DIExpression()), !dbg !5559
  br label %127, !dbg !5665

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !5559
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !5625
  call void @llvm.dbg.value(metadata i32 %129, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %128, metadata !5510, metadata !DIExpression()), !dbg !5559
  %130 = add nuw nsw i32 %95, 1, !dbg !5666
  call void @llvm.dbg.value(metadata i8* %97, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %130, metadata !5522, metadata !DIExpression()), !dbg !5619
  %131 = icmp eq i32 %130, %28, !dbg !5620
  br i1 %131, label %267, label %91, !dbg !5621, !llvm.loop !5667

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !5532, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !5533, metadata !DIExpression()), !dbg !5670
  br i1 %25, label %133, label %135, !dbg !5671

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !5534, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8 0, metadata !5535, metadata !DIExpression()), !dbg !5559
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !5672
  call void @llvm.dbg.value(metadata i8* %134, metadata !5536, metadata !DIExpression()), !dbg !5559
  br label %140, !dbg !5675

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !5676
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !5676

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !5536, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8 undef, metadata !5535, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8 0, metadata !5534, metadata !DIExpression()), !dbg !5559
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #26, !dbg !5678
  br label %145, !dbg !5681

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !5682
  call void @llvm.dbg.value(metadata i8* %148, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 0, metadata !5538, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.value(metadata i8 %146, metadata !5535, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8 %147, metadata !5534, metadata !DIExpression()), !dbg !5559
  %149 = icmp eq i8 %27, 0, !dbg !5684
  br i1 %149, label %150, label %152, !dbg !5685

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !5686
  br label %157, !dbg !5685

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !5685

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !5686
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !5687
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !5688
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !5559
  call void @llvm.dbg.value(metadata i8 undef, metadata !5531, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !5559
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5689
  %163 = load i8, i8* %162, align 1, !dbg !5689
  %164 = zext i8 %159 to i32, !dbg !5690
  %165 = add i8 %163, %159, !dbg !5691
  call void @llvm.dbg.value(metadata i8 %165, metadata !5531, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !5559
  %166 = icmp eq i32 %30, 0, !dbg !5692
  %167 = lshr i8 %160, 1, !dbg !5693
  %168 = select i1 %166, i8 %167, i8 0, !dbg !5693
  call void @llvm.dbg.value(metadata i8 %168, metadata !5531, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !5559
  %169 = icmp eq i32 %23, 0, !dbg !5694
  %170 = icmp eq i32 %158, 0, !dbg !5686
  %171 = select i1 %170, i8 0, i8 %160, !dbg !5686
  %172 = select i1 %169, i8 %171, i8 0, !dbg !5686
  call void @llvm.dbg.value(metadata i8 %172, metadata !5531, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !5559
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !5546, metadata !DIExpression()), !dbg !5695
  %173 = load i32, i32* %11, align 1, !dbg !5696
  store i8 %165, i8* %162, align 1, !dbg !5697
  store i8 %172, i8* %19, align 1, !dbg !5697
  store i8 %168, i8* %26, align 1, !dbg !5697
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #26, !dbg !5698
  call void @llvm.dbg.value(metadata i32 %174, metadata !5537, metadata !DIExpression()), !dbg !5559
  %175 = icmp slt i32 %174, 0, !dbg !5699
  br i1 %175, label %267, label %220, !dbg !5701

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %178, metadata !5538, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.value(metadata i8 %179, metadata !5535, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8 %180, metadata !5534, metadata !DIExpression()), !dbg !5559
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !5702
  call void @llvm.dbg.value(metadata i8* %181, metadata !5509, metadata !DIExpression()), !dbg !5559
  %182 = load i8, i8* %177, align 1, !dbg !5703
  call void @llvm.dbg.value(metadata i8 %182, metadata !5540, metadata !DIExpression()), !dbg !5704
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !5705
  call void @llvm.dbg.value(metadata i8* %183, metadata !5509, metadata !DIExpression()), !dbg !5559
  %184 = load i8, i8* %181, align 1, !dbg !5706
  call void @llvm.dbg.value(metadata i8 %184, metadata !5543, metadata !DIExpression()), !dbg !5704
  %185 = zext i8 %184 to i32, !dbg !5707
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !5707
  %187 = bitcast i32* %186 to i8**, !dbg !5708
  %188 = load i8*, i8** %187, align 4, !dbg !5708
  call void @llvm.dbg.value(metadata i8* %188, metadata !5544, metadata !DIExpression()), !dbg !5704
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #25, !dbg !5709
  call void @llvm.dbg.value(metadata i1 %189, metadata !5545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5704
  br i1 %13, label %193, label %190, !dbg !5710

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !5712
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #25, !dbg !5713
  br i1 %192, label %215, label %193, !dbg !5714

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !5715

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !5716

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !5719
  call void @llvm.dbg.value(metadata i8 %196, metadata !5534, metadata !DIExpression()), !dbg !5559
  br label %208, !dbg !5722

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !5723

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !5724
  call void @llvm.dbg.value(metadata i8 %199, metadata !5535, metadata !DIExpression()), !dbg !5559
  br label %208, !dbg !5727

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !5728

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !5730
  call void @llvm.dbg.value(metadata i8 %202, metadata !5534, metadata !DIExpression()), !dbg !5559
  br label %208, !dbg !5733

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !5734
  call void @llvm.dbg.value(metadata i8 %204, metadata !5535, metadata !DIExpression()), !dbg !5559
  %205 = zext i8 %179 to i32, !dbg !5736
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !5736
  store i8 %182, i8* %206, align 1, !dbg !5737
  %207 = add i8 %179, 2, !dbg !5738
  call void @llvm.dbg.value(metadata i8 %207, metadata !5535, metadata !DIExpression()), !dbg !5559
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !5739
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !5739
  store i8 %184, i8* %214, align 1, !dbg !5739
  br label %215, !dbg !5740

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !5559
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !5688
  call void @llvm.dbg.value(metadata i8 %217, metadata !5535, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i8 %216, metadata !5534, metadata !DIExpression()), !dbg !5559
  %218 = add nuw nsw i32 %178, 1, !dbg !5740
  call void @llvm.dbg.value(metadata i8* %183, metadata !5509, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %218, metadata !5538, metadata !DIExpression()), !dbg !5683
  %219 = icmp eq i32 %218, %28, !dbg !5684
  br i1 %219, label %157, label %176, !dbg !5685, !llvm.loop !5741

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %174, metadata !5507, metadata !DIExpression()), !dbg !5559
  store i32 %173, i32* %11, align 1, !dbg !5743
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !5744
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #26, !dbg !5745
  call void @llvm.dbg.value(metadata i32 %223, metadata !5537, metadata !DIExpression()), !dbg !5559
  %224 = icmp slt i32 %223, 0, !dbg !5746
  br i1 %224, label %267, label %225, !dbg !5748

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !5507, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5559
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !5749
  %228 = add nuw nsw i32 %41, %21, !dbg !5749
  %229 = sub i32 %227, %228, !dbg !5749
  call void @llvm.dbg.value(metadata i32 %229, metadata !5547, metadata !DIExpression()), !dbg !5559
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #26, !dbg !5750
  call void @llvm.dbg.value(metadata i32 %230, metadata !5537, metadata !DIExpression()), !dbg !5559
  %231 = icmp slt i32 %230, 0, !dbg !5751
  br i1 %231, label %267, label %232, !dbg !5753

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %233, metadata !5507, metadata !DIExpression()), !dbg !5559
  %234 = add nuw nsw i32 %233, %230, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %234, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 0, metadata !5548, metadata !DIExpression()), !dbg !5756
  %235 = icmp eq i8 %159, 0, !dbg !5757
  br i1 %235, label %264, label %236, !dbg !5758

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !5758

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !5548, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.value(metadata i32 %240, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #24, !dbg !5759
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !5760
  %242 = load i8, i8* %241, align 1, !dbg !5760
  call void @llvm.dbg.value(metadata i8 %242, metadata !5550, metadata !DIExpression()), !dbg !5761
  store i8 %242, i8* %10, align 1, !dbg !5762
  %243 = zext i8 %242 to i32, !dbg !5763
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !5763
  %245 = bitcast i32* %244 to i8**, !dbg !5764
  %246 = load i8*, i8** %245, align 4, !dbg !5764
  call void @llvm.dbg.value(metadata i8* %246, metadata !5553, metadata !DIExpression()), !dbg !5761
  br i1 %237, label %250, label %247, !dbg !5765

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !5766
  %249 = load i16, i16* %248, align 2, !dbg !5766
  br label %250, !dbg !5765

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 undef, metadata !5554, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %10, metadata !5550, metadata !DIExpression(DW_OP_deref)), !dbg !5761
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #26, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %252, metadata !5537, metadata !DIExpression()), !dbg !5559
  %253 = icmp slt i32 %252, 0, !dbg !5768
  br i1 %253, label %257, label %254, !dbg !5770

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !5554, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !5507, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5559
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #25, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %255, metadata !5537, metadata !DIExpression()), !dbg !5559
  %256 = icmp slt i32 %255, 0, !dbg !5772
  br i1 %256, label %257, label %259, !dbg !5774

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #24, !dbg !5775
  call void @llvm.dbg.value(metadata i32 undef, metadata !5507, metadata !DIExpression()), !dbg !5559
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !5776
  call void @llvm.dbg.value(metadata i32 %260, metadata !5507, metadata !DIExpression()), !dbg !5559
  %261 = add nsw i32 %260, %255, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %261, metadata !5507, metadata !DIExpression()), !dbg !5559
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #24, !dbg !5775
  %262 = add nuw nsw i32 %239, 1, !dbg !5778
  call void @llvm.dbg.value(metadata i32 %262, metadata !5548, metadata !DIExpression()), !dbg !5756
  %263 = icmp eq i32 %262, %164, !dbg !5757
  br i1 %263, label %264, label %238, !dbg !5758, !llvm.loop !5779

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !5755
  call void @llvm.dbg.value(metadata i32 %265, metadata !5507, metadata !DIExpression()), !dbg !5559
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #26, !dbg !5781
  br label %267, !dbg !5782

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !5559
  ret i32 %268, !dbg !5783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5788, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i8* %0, metadata !5789, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i8* %0, metadata !5790, metadata !DIExpression()), !dbg !5796
  %2 = load i8, i8* %0, align 1, !dbg !5797
  %3 = zext i8 %2 to i32, !dbg !5797
  %4 = shl nuw nsw i32 %3, 2, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %4, metadata !5791, metadata !DIExpression()), !dbg !5796
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5799
  %6 = load i8, i8* %5, align 1, !dbg !5799
  %7 = zext i8 %6 to i32, !dbg !5799
  call void @llvm.dbg.value(metadata i32 %7, metadata !5792, metadata !DIExpression()), !dbg !5796
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5800
  %9 = load i8, i8* %8, align 1, !dbg !5800
  %10 = zext i8 %9 to i32, !dbg !5800
  call void @llvm.dbg.value(metadata i32 %10, metadata !5793, metadata !DIExpression()), !dbg !5796
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5801
  call void @llvm.dbg.value(metadata i8* %11, metadata !5789, metadata !DIExpression()), !dbg !5796
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5802
  call void @llvm.dbg.value(metadata i8* %12, metadata !5789, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 0, metadata !5794, metadata !DIExpression()), !dbg !5803
  %13 = icmp eq i8 %6, 0, !dbg !5804
  br i1 %13, label %14, label %19, !dbg !5806

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5796
  %16 = ptrtoint i8* %15 to i32, !dbg !5807
  %17 = ptrtoint i8* %0 to i32, !dbg !5807
  %18 = sub i32 %16, %17, !dbg !5807
  ret i32 %18, !dbg !5808

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5794, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i8* %21, metadata !5789, metadata !DIExpression()), !dbg !5796
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5809
  call void @llvm.dbg.value(metadata i8* %22, metadata !5789, metadata !DIExpression()), !dbg !5796
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #26, !dbg !5811
  %24 = add i32 %23, 1, !dbg !5812
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5813
  call void @llvm.dbg.value(metadata i8* %25, metadata !5789, metadata !DIExpression()), !dbg !5796
  %26 = add nuw nsw i32 %20, 1, !dbg !5814
  call void @llvm.dbg.value(metadata i32 %26, metadata !5794, metadata !DIExpression()), !dbg !5803
  %27 = icmp eq i32 %26, %7, !dbg !5804
  br i1 %27, label %14, label %19, !dbg !5806, !llvm.loop !5815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5817 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5821, metadata !DIExpression()), !dbg !5825
  call void @llvm.dbg.value(metadata i8* %1, metadata !5822, metadata !DIExpression()), !dbg !5825
  call void @llvm.dbg.value(metadata i8* %2, metadata !5823, metadata !DIExpression()), !dbg !5825
  call void @llvm.dbg.value(metadata i16 %3, metadata !5824, metadata !DIExpression()), !dbg !5825
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5826
  br i1 %5, label %6, label %9, !dbg !5828

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5829
  %8 = add i32 %7, 1, !dbg !5831
  br label %20, !dbg !5832

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5833
  br i1 %10, label %13, label %11, !dbg !5834

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5834
  br label %16, !dbg !5834

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5835
  %15 = add i32 %14, 1, !dbg !5836
  br label %16, !dbg !5834

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5834
  %18 = and i32 %17, 65535, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %17, metadata !5824, metadata !DIExpression()), !dbg !5825
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #26, !dbg !5838
  br label %20, !dbg !5839

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5825
  ret i32 %21, !dbg !5840
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5843, metadata !DIExpression()), !dbg !5844
  ret i32 0, !dbg !5845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5846 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5850, metadata !DIExpression()), !dbg !5851
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5852
  ret void, !dbg !5853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5854 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5857
  ret i8* %1, !dbg !5858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5859 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5870, metadata !DIExpression()), !dbg !5879
  call void @llvm.dbg.value(metadata i8* %0, metadata !5869, metadata !DIExpression()), !dbg !5879
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !5880
  ret void, !dbg !5882
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5887, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8* %1, metadata !5888, metadata !DIExpression()), !dbg !5889
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5890
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !5890
  ret i32 %4, !dbg !5891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5892 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5899, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5896, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata i8* %1, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata i8* %2, metadata !5898, metadata !DIExpression()), !dbg !5900
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !5901
  ret void, !dbg !5902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5903 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5907, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i32 %1, metadata !5908, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i32 0, metadata !5909, metadata !DIExpression()), !dbg !5910
  %3 = icmp eq i32 %1, 0, !dbg !5911
  br i1 %3, label %13, label %4, !dbg !5914

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5909, metadata !DIExpression()), !dbg !5910
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5915
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5917
  %8 = load i8, i8* %7, align 1, !dbg !5917
  %9 = zext i8 %8 to i32, !dbg !5917
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !5915
  %11 = add nuw i32 %5, 1, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %11, metadata !5909, metadata !DIExpression()), !dbg !5910
  %12 = icmp eq i32 %11, %1, !dbg !5911
  br i1 %12, label %13, label %4, !dbg !5914, !llvm.loop !5919

13:                                               ; preds = %4, %2
  ret void, !dbg !5921
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5922 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5926, metadata !DIExpression()), !dbg !5928
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5929
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !5929
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5927, metadata !DIExpression()), !dbg !5930
  call void @llvm.va_start(i8* nonnull %3), !dbg !5931
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5932
  %5 = load i32, i32* %4, align 4, !dbg !5932
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5932
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5932
  call void @llvm.va_end(i8* nonnull %3), !dbg !5933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !5934
  ret void, !dbg !5934
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5935 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5939, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.value(metadata i32 %1, metadata !5940, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.value(metadata i8* %2, metadata !5941, metadata !DIExpression()), !dbg !5944
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !5945
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5942, metadata !DIExpression()), !dbg !5946
  call void @llvm.va_start(i8* nonnull %5), !dbg !5947
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5948
  %7 = load i32, i32* %6, align 4, !dbg !5948
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5948
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %9, metadata !5943, metadata !DIExpression()), !dbg !5944
  call void @llvm.va_end(i8* nonnull %5), !dbg !5949
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !5950
  ret i32 %9, !dbg !5951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5952 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5959, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8* %0, metadata !5956, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i32 %1, metadata !5957, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8* %2, metadata !5958, metadata !DIExpression()), !dbg !5966
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5967
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !5967
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5960, metadata !DIExpression()), !dbg !5968
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5969
  store i8* %0, i8** %7, align 4, !dbg !5969
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5969
  store i32 %1, i32* %8, align 4, !dbg !5969
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5969
  store i32 0, i32* %9, align 4, !dbg !5969
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !5970
  %10 = load i32, i32* %9, align 4, !dbg !5971
  %11 = load i32, i32* %8, align 4, !dbg !5973
  %12 = icmp slt i32 %10, %11, !dbg !5974
  br i1 %12, label %13, label %15, !dbg !5975

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5976
  store i8 0, i8* %14, align 1, !dbg !5978
  br label %15, !dbg !5979

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !5980
  ret i32 %10, !dbg !5981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5987, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5988, metadata !DIExpression()), !dbg !5989
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5990
  %4 = load i8*, i8** %3, align 4, !dbg !5990
  %5 = icmp eq i8* %4, null, !dbg !5992
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5993
  br i1 %5, label %12, label %8, !dbg !5994

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5995
  %10 = load i32, i32* %9, align 4, !dbg !5995
  %11 = icmp slt i32 %7, %10, !dbg !5996
  br i1 %11, label %15, label %12, !dbg !5997

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5998
  %14 = add nsw i32 %7, 1, !dbg !6000
  store i32 %14, i32* %13, align 4, !dbg !6000
  br label %25, !dbg !6001

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !6002
  %17 = icmp eq i32 %7, %16, !dbg !6004
  br i1 %17, label %18, label %21, !dbg !6005

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !6006
  store i32 %19, i32* %6, align 4, !dbg !6006
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !6008
  store i8 0, i8* %20, align 1, !dbg !6009
  br label %25, !dbg !6010

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !6011
  %23 = add nsw i32 %7, 1, !dbg !6013
  store i32 %23, i32* %6, align 4, !dbg !6013
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !6014
  store i8 %22, i8* %24, align 1, !dbg !6015
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !6016
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !6017 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !6027, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i8* %1, metadata !6028, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i8* %2, metadata !6029, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i8* %3, metadata !6030, metadata !DIExpression()), !dbg !6031
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !6032
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !6033
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !6034
  unreachable, !dbg !6035
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !6036 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !6140
  ret %struct.k_thread* %1, !dbg !6141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !6142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6147, metadata !DIExpression()), !dbg !6148
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6149, !srcloc !6151
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6152
  ret void, !dbg !6153
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !6154 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6155, !srcloc !6157
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !6158
  ret %struct.k_thread* %1, !dbg !6159
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6160 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6173, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6170, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8* %1, metadata !6171, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8* %2, metadata !6172, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %4, metadata !6174, metadata !DIExpression()), !dbg !6299
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6300
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !6300
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6175, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 0, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i1 undef, metadata !6181, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6299
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6302

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6302

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6303
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6173, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8* %30, metadata !6172, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %29, metadata !6179, metadata !DIExpression()), !dbg !6299
  %31 = load i8, i8* %30, align 1, !dbg !6304
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6302

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6304
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6305
  call void @llvm.dbg.value(metadata i8* %34, metadata !6172, metadata !DIExpression()), !dbg !6299
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !6305
  call void @llvm.dbg.value(metadata i32 %35, metadata !6183, metadata !DIExpression()), !dbg !6306
  %36 = icmp slt i32 %35, 0, !dbg !6307
  %37 = add i32 %29, 1, !dbg !6305
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %36, label %365, label %28, !llvm.loop !6309

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !6311
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6188, metadata !DIExpression()), !dbg !6312
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6312
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6231, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6234, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8* %30, metadata !6237, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i32 -1, metadata !6238, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i32 -1, metadata !6239, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8* null, metadata !6240, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8* %14, metadata !6241, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8 0, metadata !6242, metadata !DIExpression()), !dbg !6313
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !6314
  call void @llvm.dbg.value(metadata i8* %39, metadata !6172, metadata !DIExpression()), !dbg !6299
  %40 = load i24, i24* %15, align 8, !dbg !6315
  %41 = and i24 %40, 256, !dbg !6315
  %42 = icmp eq i24 %41, 0, !dbg !6315
  br i1 %42, label %51, label %43, !dbg !6317

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6318
  call void @llvm.dbg.value(metadata i8* %44, metadata !6173, metadata !DIExpression()), !dbg !6299
  %45 = bitcast i8* %27 to i32*, !dbg !6318
  %46 = load i32, i32* %45, align 4, !dbg !6318
  call void @llvm.dbg.value(metadata i32 %46, metadata !6238, metadata !DIExpression()), !dbg !6313
  %47 = icmp slt i32 %46, 0, !dbg !6320
  br i1 %47, label %48, label %56, !dbg !6322

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6323
  store i24 %49, i24* %15, align 8, !dbg !6323
  %50 = sub nsw i32 0, %46, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %50, metadata !6238, metadata !DIExpression()), !dbg !6313
  br label %56, !dbg !6326

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6327
  %53 = icmp eq i24 %52, 0, !dbg !6327
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6329
  br label %56, !dbg !6329

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6330
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6313
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6173, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %58, metadata !6238, metadata !DIExpression()), !dbg !6313
  %60 = and i24 %57, 1024, !dbg !6330
  %61 = icmp eq i24 %60, 0, !dbg !6330
  br i1 %61, label %69, label %62, !dbg !6331

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6332
  call void @llvm.dbg.value(metadata i8* %63, metadata !6173, metadata !DIExpression()), !dbg !6299
  %64 = bitcast i8* %59 to i32*, !dbg !6332
  %65 = load i32, i32* %64, align 4, !dbg !6332
  call void @llvm.dbg.value(metadata i32 %65, metadata !6243, metadata !DIExpression()), !dbg !6333
  %66 = icmp slt i32 %65, 0, !dbg !6334
  br i1 %66, label %67, label %74, !dbg !6336

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6337
  store i24 %68, i24* %15, align 8, !dbg !6337
  br label %74, !dbg !6339

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6340
  %71 = icmp eq i24 %70, 0, !dbg !6340
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6342
  br label %74, !dbg !6342

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6343
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6313
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6313
  call void @llvm.dbg.value(metadata i8* %77, metadata !6173, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %76, metadata !6239, metadata !DIExpression()), !dbg !6313
  store i32 0, i32* %16, align 4, !dbg !6344
  store i32 0, i32* %17, align 8, !dbg !6345
  %78 = lshr i24 %75, 16, !dbg !6343
  call void @llvm.dbg.value(metadata i24 %78, metadata !6246, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6313
  %79 = lshr i24 %75, 11, !dbg !6346
  %80 = and i24 %79, 15, !dbg !6346
  %81 = zext i24 %80 to i32, !dbg !6346
  call void @llvm.dbg.value(metadata i32 %81, metadata !6247, metadata !DIExpression()), !dbg !6313
  %82 = trunc i24 %78 to i3, !dbg !6347
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6347

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6348

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6351
  call void @llvm.dbg.value(metadata i8* %85, metadata !6173, metadata !DIExpression()), !dbg !6299
  %86 = bitcast i8* %77 to i32*, !dbg !6351
  %87 = load i32, i32* %86, align 4, !dbg !6351
  %88 = sext i32 %87 to i64, !dbg !6351
  store i64 %88, i64* %20, align 8, !dbg !6353
  br label %115, !dbg !6354

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6355
  call void @llvm.dbg.value(metadata i8* %90, metadata !6173, metadata !DIExpression()), !dbg !6299
  %91 = bitcast i8* %77 to i32*, !dbg !6355
  %92 = load i32, i32* %91, align 4, !dbg !6355
  %93 = sext i32 %92 to i64, !dbg !6355
  store i64 %93, i64* %20, align 8, !dbg !6358
  br label %115, !dbg !6359

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6360
  %96 = add i32 %95, 7, !dbg !6360
  %97 = and i32 %96, -8, !dbg !6360
  %98 = inttoptr i32 %97 to i8*, !dbg !6360
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6360
  call void @llvm.dbg.value(metadata i8* %99, metadata !6173, metadata !DIExpression()), !dbg !6299
  %100 = inttoptr i32 %97 to i64*, !dbg !6360
  %101 = load i64, i64* %100, align 8, !dbg !6360
  store i64 %101, i64* %20, align 8, !dbg !6361
  br label %115, !dbg !6362

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6363
  %104 = add i32 %103, 7, !dbg !6363
  %105 = and i32 %104, -8, !dbg !6363
  %106 = inttoptr i32 %105 to i8*, !dbg !6363
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6363
  call void @llvm.dbg.value(metadata i8* %107, metadata !6173, metadata !DIExpression()), !dbg !6299
  %108 = inttoptr i32 %105 to i64*, !dbg !6363
  %109 = load i64, i64* %108, align 8, !dbg !6363
  store i64 %109, i64* %20, align 8, !dbg !6364
  br label %115, !dbg !6365

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6366
  call void @llvm.dbg.value(metadata i8* %111, metadata !6173, metadata !DIExpression()), !dbg !6299
  %112 = bitcast i8* %77 to i32*, !dbg !6366
  %113 = load i32, i32* %112, align 4, !dbg !6366
  %114 = sext i32 %113 to i64, !dbg !6367
  store i64 %114, i64* %20, align 8, !dbg !6368
  br label %115, !dbg !6369

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6370
  call void @llvm.dbg.value(metadata i8* %117, metadata !6173, metadata !DIExpression()), !dbg !6299
  %118 = trunc i24 %79 to i4, !dbg !6371
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6371

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6372
  %121 = ashr exact i64 %120, 56, !dbg !6372
  store i64 %121, i64* %20, align 8, !dbg !6375
  br label %177, !dbg !6376

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6377
  %124 = ashr exact i64 %123, 48, !dbg !6377
  store i64 %124, i64* %20, align 8, !dbg !6380
  br label %177, !dbg !6381

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6382

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6385
  call void @llvm.dbg.value(metadata i8* %127, metadata !6173, metadata !DIExpression()), !dbg !6299
  %128 = bitcast i8* %77 to i32*, !dbg !6385
  %129 = load i32, i32* %128, align 4, !dbg !6385
  %130 = zext i32 %129 to i64, !dbg !6385
  store i64 %130, i64* %20, align 8, !dbg !6387
  br label %157, !dbg !6388

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6389
  call void @llvm.dbg.value(metadata i8* %132, metadata !6173, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8* %132, metadata !6173, metadata !DIExpression()), !dbg !6299
  %133 = bitcast i8* %77 to i32*, !dbg !6389
  %134 = load i32, i32* %133, align 4, !dbg !6389
  %135 = zext i32 %134 to i64, !dbg !6389
  store i64 %135, i64* %20, align 8, !dbg !6389
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6391
  %138 = add i32 %137, 7, !dbg !6391
  %139 = and i32 %138, -8, !dbg !6391
  %140 = inttoptr i32 %139 to i8*, !dbg !6391
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6391
  call void @llvm.dbg.value(metadata i8* %141, metadata !6173, metadata !DIExpression()), !dbg !6299
  %142 = inttoptr i32 %139 to i64*, !dbg !6391
  %143 = load i64, i64* %142, align 8, !dbg !6391
  store i64 %143, i64* %20, align 8, !dbg !6392
  br label %157, !dbg !6393

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6394
  %146 = add i32 %145, 7, !dbg !6394
  %147 = and i32 %146, -8, !dbg !6394
  %148 = inttoptr i32 %147 to i8*, !dbg !6394
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6394
  call void @llvm.dbg.value(metadata i8* %149, metadata !6173, metadata !DIExpression()), !dbg !6299
  %150 = inttoptr i32 %147 to i64*, !dbg !6394
  %151 = load i64, i64* %150, align 8, !dbg !6394
  store i64 %151, i64* %20, align 8, !dbg !6395
  br label %157, !dbg !6396

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6397
  call void @llvm.dbg.value(metadata i8* %153, metadata !6173, metadata !DIExpression()), !dbg !6299
  %154 = bitcast i8* %77 to i32*, !dbg !6397
  %155 = load i32, i32* %154, align 4, !dbg !6397
  %156 = zext i32 %155 to i64, !dbg !6398
  store i64 %156, i64* %20, align 8, !dbg !6399
  br label %157, !dbg !6400

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6401
  call void @llvm.dbg.value(metadata i8* %159, metadata !6173, metadata !DIExpression()), !dbg !6299
  %160 = trunc i24 %79 to i4, !dbg !6402
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6402

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6403
  store i64 %162, i64* %20, align 8, !dbg !6406
  br label %177, !dbg !6407

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6408
  store i64 %164, i64* %20, align 8, !dbg !6411
  br label %177, !dbg !6412

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6413
  %167 = add i32 %166, 7, !dbg !6413
  %168 = and i32 %167, -8, !dbg !6413
  %169 = inttoptr i32 %168 to i8*, !dbg !6413
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6413
  call void @llvm.dbg.value(metadata i8* %170, metadata !6173, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8* %170, metadata !6173, metadata !DIExpression()), !dbg !6299
  %171 = inttoptr i32 %168 to double*, !dbg !6413
  %172 = load double, double* %171, align 8, !dbg !6413
  store double %172, double* %19, align 8, !dbg !6413
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6417
  call void @llvm.dbg.value(metadata i8* %174, metadata !6173, metadata !DIExpression()), !dbg !6299
  %175 = bitcast i8* %77 to i8**, !dbg !6417
  %176 = load i8*, i8** %175, align 4, !dbg !6417
  store i8* %176, i8** %18, align 8, !dbg !6420
  br label %177, !dbg !6421

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6313
  call void @llvm.dbg.value(metadata i8* %178, metadata !6173, metadata !DIExpression()), !dbg !6299
  %179 = and i24 %75, 3, !dbg !6422
  %180 = icmp eq i24 %179, 0, !dbg !6422
  br i1 %180, label %185, label %181, !dbg !6422

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !6423
  call void @llvm.dbg.value(metadata i32 %182, metadata !6248, metadata !DIExpression()), !dbg !6424
  %183 = icmp slt i32 %182, 0, !dbg !6425
  %184 = add i32 %182, %29, !dbg !6423
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6427
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6428

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !6429
  call void @llvm.dbg.value(metadata i32 %188, metadata !6252, metadata !DIExpression()), !dbg !6430
  %189 = icmp slt i32 %188, 0, !dbg !6431
  %190 = add i32 %29, 1, !dbg !6429
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6433
  call void @llvm.dbg.value(metadata i8* %192, metadata !6240, metadata !DIExpression()), !dbg !6313
  %193 = icmp sgt i32 %76, -1, !dbg !6434
  br i1 %193, label %194, label %196, !dbg !6436

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !6437
  call void @llvm.dbg.value(metadata i32 %195, metadata !6255, metadata !DIExpression()), !dbg !6439
  br label %241, !dbg !6440

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !6441
  call void @llvm.dbg.value(metadata i32 %197, metadata !6255, metadata !DIExpression()), !dbg !6439
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6240, metadata !DIExpression()), !dbg !6313
  %199 = load i64, i64* %20, align 8, !dbg !6443
  %200 = trunc i64 %199 to i8, !dbg !6444
  store i8 %200, i8* %10, align 1, !dbg !6445
  call void @llvm.dbg.value(metadata i8* %23, metadata !6241, metadata !DIExpression()), !dbg !6313
  br label %245, !dbg !6446

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6447
  %203 = icmp eq i24 %202, 0, !dbg !6447
  %204 = trunc i24 %75 to i8, !dbg !6449
  %205 = shl i8 %204, 1, !dbg !6449
  %206 = and i8 %205, 32, !dbg !6449
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6449
  call void @llvm.dbg.value(metadata i8 %207, metadata !6242, metadata !DIExpression()), !dbg !6313
  %208 = load i64, i64* %20, align 8, !dbg !6450
  call void @llvm.dbg.value(metadata i64 %208, metadata !6180, metadata !DIExpression()), !dbg !6299
  %209 = icmp slt i64 %208, 0, !dbg !6451
  br i1 %209, label %210, label %212, !dbg !6453

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6242, metadata !DIExpression()), !dbg !6313
  %211 = sub nsw i64 0, %208, !dbg !6454
  store i64 %211, i64* %20, align 8, !dbg !6456
  br label %212, !dbg !6457

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6313
  call void @llvm.dbg.value(metadata i8 %213, metadata !6242, metadata !DIExpression()), !dbg !6313
  %214 = load i64, i64* %20, align 8, !dbg !6458
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6459
  call void @llvm.dbg.value(metadata i8* %215, metadata !6240, metadata !DIExpression()), !dbg !6313
  br label %216, !dbg !6460

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6461
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6462
  call void @llvm.dbg.value(metadata i8* %218, metadata !6240, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8 %217, metadata !6242, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.label(metadata !6298), !dbg !6463
  %219 = icmp sgt i32 %76, -1, !dbg !6464
  br i1 %219, label %222, label %220, !dbg !6465

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6466
  br label %245, !dbg !6465

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6468
  %224 = sub i32 %22, %223, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %224, metadata !6257, metadata !DIExpression()), !dbg !6469
  %225 = load i24, i24* %15, align 8, !dbg !6470
  %226 = and i24 %225, -65, !dbg !6470
  store i24 %226, i24* %15, align 8, !dbg !6470
  %227 = icmp ugt i32 %76, %224, !dbg !6471
  br i1 %227, label %228, label %245, !dbg !6473

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6474
  store i32 %229, i32* %16, align 4, !dbg !6476
  br label %245, !dbg !6477

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6478
  %232 = icmp eq i8* %231, null, !dbg !6480
  br i1 %232, label %245, label %233, !dbg !6481

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6482
  %235 = zext i32 %234 to i64, !dbg !6482
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6484
  call void @llvm.dbg.value(metadata i8* %236, metadata !6240, metadata !DIExpression()), !dbg !6313
  %237 = load i24, i24* %15, align 8, !dbg !6485
  %238 = or i24 %237, 1048576, !dbg !6485
  store i24 %238, i24* %15, align 8, !dbg !6485
  store i8 120, i8* %21, align 1, !dbg !6486
  br label %216, !dbg !6487

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6488
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !6491
  br label %363, !dbg !6492

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6493
  call void @llvm.dbg.value(metadata i32 %242, metadata !6255, metadata !DIExpression()), !dbg !6439
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6494
  call void @llvm.dbg.value(metadata i32 -1, metadata !6239, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i32 %29, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8* %192, metadata !6240, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8* %243, metadata !6241, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8 0, metadata !6242, metadata !DIExpression()), !dbg !6313
  %244 = icmp eq i8* %192, null, !dbg !6495
  br i1 %244, label %363, label %245, !dbg !6497, !llvm.loop !6309

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6466
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6313
  call void @llvm.dbg.value(metadata i32 0, metadata !6261, metadata !DIExpression()), !dbg !6313
  %250 = zext i8 %249 to i32, !dbg !6498
  %251 = icmp eq i8 %249, 0, !dbg !6500
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  call void @llvm.dbg.value(metadata i32 undef, metadata !6260, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  call void @llvm.dbg.value(metadata i32 undef, metadata !6260, metadata !DIExpression()), !dbg !6313
  %252 = icmp sgt i32 %58, 0, !dbg !6501
  br i1 %252, label %253, label %302, !dbg !6502

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6466
  %255 = icmp eq i24 %254, 0, !dbg !6466
  %256 = ptrtoint i8* %248 to i32, !dbg !6503
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  %257 = ptrtoint i8* %247 to i32, !dbg !6503
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  %258 = xor i1 %251, true, !dbg !6504
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  %259 = sext i1 %258 to i32, !dbg !6504
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  %260 = lshr i24 %246, 19, !dbg !6505
  %261 = and i24 %260, 1, !dbg !6505
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6505
  %263 = zext i24 %262 to i32, !dbg !6505
  %264 = add i32 %257, %259, !dbg !6505
  %265 = add i32 %256, %263, !dbg !6505
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  %266 = and i24 %246, 4194304, !dbg !6506
  %267 = icmp eq i24 %266, 0, !dbg !6506
  %268 = load i32, i32* %16, align 4, !dbg !6508
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6313
  call void @llvm.dbg.value(metadata i32 undef, metadata !6260, metadata !DIExpression()), !dbg !6313
  %269 = load i32, i32* %17, align 8, !dbg !6509
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6509
  call void @llvm.dbg.value(metadata i32 undef, metadata !6260, metadata !DIExpression()), !dbg !6313
  %271 = add i32 %264, %58, !dbg !6509
  %272 = add i32 %265, %268, !dbg !6509
  %273 = add i32 %272, %270, !dbg !6510
  %274 = sub i32 %271, %273, !dbg !6510
  call void @llvm.dbg.value(metadata i32 %274, metadata !6238, metadata !DIExpression()), !dbg !6313
  %275 = and i24 %246, 4, !dbg !6511
  %276 = icmp eq i24 %275, 0, !dbg !6511
  br i1 %276, label %277, label %302, !dbg !6512

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6262, metadata !DIExpression()), !dbg !6513
  %278 = and i24 %246, 64, !dbg !6514
  %279 = icmp eq i24 %278, 0, !dbg !6514
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6515
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6515
  %282 = select i1 %279, i32 32, i32 48, !dbg !6515
  br i1 %280, label %287, label %283, !dbg !6515

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !6516
  call void @llvm.dbg.value(metadata i32 %284, metadata !6267, metadata !DIExpression()), !dbg !6517
  %285 = icmp slt i32 %284, 0, !dbg !6518
  %286 = add i32 %29, 1, !dbg !6516
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6313
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %290, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8 undef, metadata !6262, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i8 %288, metadata !6242, metadata !DIExpression()), !dbg !6313
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6520
  %292 = add i32 %291, -1, !dbg !6520
  br label %293, !dbg !6520

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6521
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %295, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %294, metadata !6238, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i32 %294, metadata !6238, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6313
  %296 = icmp sgt i32 %294, 0, !dbg !6522
  br i1 %296, label %297, label %302, !dbg !6520

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6523
  call void @llvm.dbg.value(metadata i32 %298, metadata !6238, metadata !DIExpression()), !dbg !6313
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !6524
  call void @llvm.dbg.value(metadata i32 %299, metadata !6273, metadata !DIExpression()), !dbg !6525
  %300 = icmp slt i32 %299, 0, !dbg !6526
  %301 = add i32 %295, 1, !dbg !6524
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %300, label %361, label %293, !llvm.loop !6528

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6313
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6313
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %305, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %304, metadata !6238, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i8 %303, metadata !6242, metadata !DIExpression()), !dbg !6313
  %306 = icmp eq i8 %303, 0, !dbg !6530
  br i1 %306, label %312, label %307, !dbg !6531

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6532
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !6533
  call void @llvm.dbg.value(metadata i32 %309, metadata !6276, metadata !DIExpression()), !dbg !6534
  %310 = icmp slt i32 %309, 0, !dbg !6535
  %311 = add i32 %305, 1, !dbg !6533
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %313, metadata !6179, metadata !DIExpression()), !dbg !6299
  %314 = lshr i24 %246, 20, !dbg !6537
  %315 = lshr i24 %246, 19, !dbg !6538
  %316 = or i24 %314, %315, !dbg !6539
  %317 = and i24 %316, 1, !dbg !6539
  %318 = icmp eq i24 %317, 0, !dbg !6539
  br i1 %318, label %323, label %319, !dbg !6540

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6541
  call void @llvm.dbg.value(metadata i32 %320, metadata !6280, metadata !DIExpression()), !dbg !6542
  %321 = icmp slt i32 %320, 0, !dbg !6543
  %322 = add i32 %313, 1, !dbg !6541
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %324, metadata !6179, metadata !DIExpression()), !dbg !6299
  %325 = and i24 %246, 1048576, !dbg !6545
  %326 = icmp eq i24 %325, 0, !dbg !6545
  br i1 %326, label %333, label %327, !dbg !6546

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6547
  %329 = zext i8 %328 to i32, !dbg !6547
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !6547
  call void @llvm.dbg.value(metadata i32 %330, metadata !6286, metadata !DIExpression()), !dbg !6548
  %331 = icmp slt i32 %330, 0, !dbg !6549
  %332 = add i32 %324, 1, !dbg !6547
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %334, metadata !6179, metadata !DIExpression()), !dbg !6299
  %335 = load i32, i32* %16, align 4, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %335, metadata !6261, metadata !DIExpression()), !dbg !6313
  br label %336, !dbg !6552

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6553
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %338, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %337, metadata !6261, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6313
  %339 = icmp sgt i32 %337, 0, !dbg !6554
  br i1 %339, label %340, label %345, !dbg !6552

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6555
  call void @llvm.dbg.value(metadata i32 %341, metadata !6261, metadata !DIExpression()), !dbg !6313
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6556
  call void @llvm.dbg.value(metadata i32 %342, metadata !6290, metadata !DIExpression()), !dbg !6557
  %343 = icmp slt i32 %342, 0, !dbg !6558
  %344 = add i32 %338, 1, !dbg !6556
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %343, label %361, label %336, !llvm.loop !6560

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !6562
  call void @llvm.dbg.value(metadata i32 %346, metadata !6293, metadata !DIExpression()), !dbg !6563
  %347 = icmp slt i32 %346, 0, !dbg !6564
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6562
  call void @llvm.dbg.value(metadata i32 %349, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %304, metadata !6238, metadata !DIExpression()), !dbg !6313
  %350 = icmp sgt i32 %304, 0, !dbg !6566
  br i1 %350, label %351, label %363, !dbg !6567

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6567
  %353 = add i32 %352, %338, !dbg !6567
  br label %354, !dbg !6567

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %355, metadata !6238, metadata !DIExpression()), !dbg !6313
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !6568
  call void @llvm.dbg.value(metadata i32 %356, metadata !6295, metadata !DIExpression()), !dbg !6569
  %357 = icmp slt i32 %356, 0, !dbg !6570
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6572
  call void @llvm.dbg.value(metadata i32 undef, metadata !6179, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %359, metadata !6238, metadata !DIExpression()), !dbg !6313
  %360 = icmp sgt i32 %355, 1, !dbg !6566
  br i1 %360, label %354, label %363, !dbg !6567, !llvm.loop !6573

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !6310
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %364, metadata !6179, metadata !DIExpression()), !dbg !6299
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !6310
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6299
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !6575
  ret i32 %366, !dbg !6575
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6576 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6580, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i8* %1, metadata !6581, metadata !DIExpression()), !dbg !6582
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6583
  store i24 0, i24* %3, align 4, !dbg !6583
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6583
  store i8 0, i8* %4, align 1, !dbg !6583
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6583
  store i32 0, i32* %5, align 4, !dbg !6583
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6583
  store i32 0, i32* %6, align 4, !dbg !6583
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6584
  call void @llvm.dbg.value(metadata i8* %7, metadata !6581, metadata !DIExpression()), !dbg !6582
  %8 = load i8, i8* %7, align 1, !dbg !6585
  %9 = icmp eq i8 %8, 37, !dbg !6587
  br i1 %9, label %10, label %12, !dbg !6588

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6589
  call void @llvm.dbg.value(metadata i8* %11, metadata !6581, metadata !DIExpression()), !dbg !6582
  store i8 37, i8* %4, align 1, !dbg !6591
  br label %18, !dbg !6592

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !6593
  call void @llvm.dbg.value(metadata i8* %13, metadata !6581, metadata !DIExpression()), !dbg !6582
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !6594
  call void @llvm.dbg.value(metadata i8* %14, metadata !6581, metadata !DIExpression()), !dbg !6582
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !6595
  call void @llvm.dbg.value(metadata i8* %15, metadata !6581, metadata !DIExpression()), !dbg !6582
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !6596
  call void @llvm.dbg.value(metadata i8* %16, metadata !6581, metadata !DIExpression()), !dbg !6582
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !6597
  call void @llvm.dbg.value(metadata i8* %17, metadata !6581, metadata !DIExpression()), !dbg !6582
  br label %18, !dbg !6598

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6582
  ret i8* %19, !dbg !6599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6600 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6604, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.value(metadata i8* %1, metadata !6605, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.value(metadata i8* %2, metadata !6606, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.value(metadata i8* %3, metadata !6607, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.value(metadata i32 0, metadata !6608, metadata !DIExpression()), !dbg !6611
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6612

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6613
  call void @llvm.dbg.value(metadata i32 %9, metadata !6608, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.value(metadata i8* %8, metadata !6606, metadata !DIExpression()), !dbg !6611
  %10 = icmp ult i8* %8, %3, !dbg !6614
  br i1 %10, label %11, label %13, !dbg !6615

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6616
  br label %17, !dbg !6615

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6617

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6618
  %16 = icmp eq i8 %15, 0, !dbg !6617
  br i1 %16, label %24, label %17, !dbg !6612

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6616
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6619
  call void @llvm.dbg.value(metadata i8* %19, metadata !6606, metadata !DIExpression()), !dbg !6611
  %20 = zext i8 %18 to i32, !dbg !6620
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !6621
  call void @llvm.dbg.value(metadata i32 %21, metadata !6609, metadata !DIExpression()), !dbg !6622
  %22 = icmp slt i32 %21, 0, !dbg !6623
  %23 = add i32 %9, 1, !dbg !6625
  call void @llvm.dbg.value(metadata i32 undef, metadata !6608, metadata !DIExpression()), !dbg !6611
  br i1 %22, label %24, label %7, !llvm.loop !6626

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6611
  ret i32 %25, !dbg !6628
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !6629 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6633, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6634, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %2, metadata !6635, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %3, metadata !6636, metadata !DIExpression()), !dbg !6643
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6644
  %6 = load i8, i8* %5, align 1, !dbg !6644
  %7 = zext i8 %6 to i32, !dbg !6645
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !6646
  %9 = icmp eq i32 %8, 0, !dbg !6646
  call void @llvm.dbg.value(metadata i1 %9, metadata !6637, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6643
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !6647
  call void @llvm.dbg.value(metadata i32 %10, metadata !6638, metadata !DIExpression()), !dbg !6643
  %11 = ptrtoint i8* %3 to i32, !dbg !6648
  %12 = ptrtoint i8* %2 to i32, !dbg !6648
  %13 = sub i32 %11, %12, !dbg !6648
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6649
  call void @llvm.dbg.value(metadata i8* %14, metadata !6640, metadata !DIExpression()), !dbg !6643
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6650

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6643
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6633, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %18, metadata !6640, metadata !DIExpression()), !dbg !6643
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6651
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6652
  call void @llvm.dbg.value(metadata i32 %25, metadata !6641, metadata !DIExpression()), !dbg !6653
  %26 = icmp ult i32 %25, 10, !dbg !6654
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6655
  %28 = add i32 %27, %25, !dbg !6653
  %29 = trunc i32 %28 to i8, !dbg !6655
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6656
  call void @llvm.dbg.value(metadata i8* %30, metadata !6640, metadata !DIExpression()), !dbg !6643
  store i8 %29, i8* %30, align 1, !dbg !6657
  call void @llvm.dbg.value(metadata i64 %22, metadata !6633, metadata !DIExpression()), !dbg !6643
  %31 = icmp uge i64 %19, %15, !dbg !6658
  %32 = icmp ugt i8* %30, %2, !dbg !6659
  %33 = and i1 %31, %32, !dbg !6659
  br i1 %33, label %17, label %34, !dbg !6660, !llvm.loop !6661

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6663
  %36 = load i24, i24* %35, align 4, !dbg !6663
  %37 = and i24 %36, 32, !dbg !6663
  %38 = icmp eq i24 %37, 0, !dbg !6663
  br i1 %38, label %44, label %39, !dbg !6665

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6666

40:                                               ; preds = %39
  br label %41, !dbg !6668

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6672
  store i24 %43, i24* %35, align 4, !dbg !6672
  br label %44, !dbg !6673

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !6674 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6680, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i8* %1, metadata !6681, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 %2, metadata !6682, metadata !DIExpression()), !dbg !6683
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6684
  %5 = load i24, i24* %4, align 4, !dbg !6684
  %6 = lshr i24 %5, 11, !dbg !6684
  %7 = and i24 %6, 15, !dbg !6684
  %8 = zext i24 %7 to i32, !dbg !6684
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6685

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6686
  store i32 %2, i32* %10, align 4, !dbg !6688
  br label %28, !dbg !6689

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6690
  store i8 %12, i8* %1, align 1, !dbg !6691
  br label %28, !dbg !6692

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6693
  %15 = bitcast i8* %1 to i16*, !dbg !6694
  store i16 %14, i16* %15, align 2, !dbg !6695
  br label %28, !dbg !6696

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6697
  store i32 %2, i32* %17, align 4, !dbg !6698
  br label %28, !dbg !6699

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6700
  %20 = bitcast i8* %1 to i64*, !dbg !6701
  store i64 %19, i64* %20, align 8, !dbg !6702
  br label %28, !dbg !6703

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6704
  %23 = bitcast i8* %1 to i64*, !dbg !6705
  store i64 %22, i64* %23, align 8, !dbg !6706
  br label %28, !dbg !6707

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6708
  store i32 %2, i32* %25, align 4, !dbg !6709
  br label %28, !dbg !6710

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6711
  store i32 %2, i32* %27, align 4, !dbg !6712
  br label %28, !dbg !6713

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6714
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !6715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6718, metadata !DIExpression()), !dbg !6719
  %2 = add i32 %0, -65, !dbg !6720
  %3 = icmp ult i32 %2, 26, !dbg !6721
  %4 = zext i1 %3 to i32, !dbg !6721
  ret i32 %4, !dbg !6722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !6723 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6727, metadata !DIExpression()), !dbg !6728
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6729

2:                                                ; preds = %1
  br label %4, !dbg !6730

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6732

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6733
  ret i32 %5, !dbg !6734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6735 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6737, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %1, metadata !6738, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8 1, metadata !6739, metadata !DIExpression()), !dbg !6740
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6741

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6739, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %5, metadata !6738, metadata !DIExpression()), !dbg !6740
  %6 = load i8, i8* %5, align 1, !dbg !6742
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6744

7:                                                ; preds = %4
  br label %11, !dbg !6745

8:                                                ; preds = %4
  br label %11, !dbg !6747

9:                                                ; preds = %4
  br label %11, !dbg !6748

10:                                               ; preds = %4
  br label %11, !dbg !6749

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6750
  %14 = or i24 %13, %12, !dbg !6750
  store i24 %14, i24* %3, align 4, !dbg !6750
  call void @llvm.dbg.value(metadata i8 poison, metadata !6739, metadata !DIExpression()), !dbg !6740
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6738, metadata !DIExpression()), !dbg !6740
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6739, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %15, metadata !6738, metadata !DIExpression()), !dbg !6740
  %17 = load i24, i24* %3, align 4, !dbg !6751
  %18 = and i24 %17, 68, !dbg !6753
  %19 = icmp eq i24 %18, 68, !dbg !6753
  br i1 %19, label %20, label %22, !dbg !6753

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6754
  store i24 %21, i24* %3, align 4, !dbg !6754
  br label %22, !dbg !6756

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6757
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6758 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6760, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i8* %1, metadata !6761, metadata !DIExpression()), !dbg !6764
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6765
  %5 = load i24, i24* %4, align 4, !dbg !6766
  %6 = or i24 %5, 128, !dbg !6766
  store i24 %6, i24* %4, align 4, !dbg !6766
  call void @llvm.dbg.value(metadata i8* %1, metadata !6761, metadata !DIExpression()), !dbg !6764
  %7 = load i8, i8* %1, align 1, !dbg !6767
  %8 = icmp eq i8 %7, 42, !dbg !6769
  br i1 %8, label %9, label %12, !dbg !6770

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6771
  store i24 %10, i24* %4, align 4, !dbg !6771
  call void @llvm.dbg.value(metadata i8* %1, metadata !6761, metadata !DIExpression()), !dbg !6764
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6773
  call void @llvm.dbg.value(metadata i8* %11, metadata !6761, metadata !DIExpression()), !dbg !6764
  store i8* %11, i8** %3, align 4, !dbg !6773
  br label %29, !dbg !6774

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6762, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i8** %3, metadata !6761, metadata !DIExpression(DW_OP_deref)), !dbg !6764
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6775
  call void @llvm.dbg.value(metadata i32 %13, metadata !6763, metadata !DIExpression()), !dbg !6764
  %14 = load i8*, i8** %3, align 4, !dbg !6776
  call void @llvm.dbg.value(metadata i8* %14, metadata !6761, metadata !DIExpression()), !dbg !6764
  %15 = icmp eq i8* %14, %1, !dbg !6778
  br i1 %15, label %29, label %16, !dbg !6779

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6780
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6782
  store i32 %13, i32* %18, align 4, !dbg !6783
  %19 = lshr i32 %13, 31, !dbg !6784
  %20 = lshr i24 %17, 1, !dbg !6785
  %21 = and i24 %20, 1, !dbg !6785
  %22 = zext i24 %21 to i32, !dbg !6785
  %23 = or i32 %19, %22, !dbg !6785
  %24 = trunc i32 %23 to i24, !dbg !6785
  %25 = shl nuw nsw i24 %24, 1, !dbg !6785
  %26 = and i24 %17, -131, !dbg !6785
  %27 = or i24 %26, 128, !dbg !6785
  %28 = or i24 %25, %27, !dbg !6785
  store i24 %28, i24* %4, align 4, !dbg !6785
  br label %29, !dbg !6786

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6764
  ret i8* %30, !dbg !6787
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6788 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6790, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i8* %1, metadata !6791, metadata !DIExpression()), !dbg !6793
  %4 = load i8, i8* %1, align 1, !dbg !6794
  %5 = icmp eq i8 %4, 46, !dbg !6795
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6796
  %7 = load i24, i24* %6, align 4, !dbg !6797
  %8 = select i1 %5, i24 512, i24 0, !dbg !6797
  %9 = and i24 %7, -513, !dbg !6797
  %10 = or i24 %9, %8, !dbg !6797
  store i24 %10, i24* %6, align 4, !dbg !6797
  br i1 %5, label %11, label %32, !dbg !6798

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6791, metadata !DIExpression()), !dbg !6793
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6799
  call void @llvm.dbg.value(metadata i8* %12, metadata !6791, metadata !DIExpression()), !dbg !6793
  store i8* %12, i8** %3, align 4, !dbg !6799
  %13 = load i8, i8* %12, align 1, !dbg !6800
  %14 = icmp eq i8 %13, 42, !dbg !6802
  br i1 %14, label %15, label %18, !dbg !6803

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6804
  store i24 %16, i24* %6, align 4, !dbg !6804
  call void @llvm.dbg.value(metadata i8* %12, metadata !6791, metadata !DIExpression()), !dbg !6793
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6806
  call void @llvm.dbg.value(metadata i8* %17, metadata !6791, metadata !DIExpression()), !dbg !6793
  store i8* %17, i8** %3, align 4, !dbg !6806
  br label %32, !dbg !6807

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6791, metadata !DIExpression(DW_OP_deref)), !dbg !6793
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %19, metadata !6792, metadata !DIExpression()), !dbg !6793
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6809
  store i32 %19, i32* %20, align 4, !dbg !6810
  %21 = lshr i32 %19, 31, !dbg !6811
  %22 = load i24, i24* %6, align 4, !dbg !6812
  %23 = lshr i24 %22, 1, !dbg !6812
  %24 = and i24 %23, 1, !dbg !6812
  %25 = zext i24 %24 to i32, !dbg !6812
  %26 = or i32 %21, %25, !dbg !6812
  %27 = trunc i32 %26 to i24, !dbg !6812
  %28 = shl nuw nsw i24 %27, 1, !dbg !6812
  %29 = and i24 %22, -3, !dbg !6812
  %30 = or i24 %28, %29, !dbg !6812
  store i24 %30, i24* %6, align 4, !dbg !6812
  %31 = load i8*, i8** %3, align 4, !dbg !6813
  call void @llvm.dbg.value(metadata i8* %31, metadata !6791, metadata !DIExpression()), !dbg !6793
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6793
  ret i8* %33, !dbg !6814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6815 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6817, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i8* %1, metadata !6818, metadata !DIExpression()), !dbg !6819
  %3 = load i8, i8* %1, align 1, !dbg !6820
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6821

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6822
  call void @llvm.dbg.value(metadata i8* %5, metadata !6818, metadata !DIExpression()), !dbg !6819
  %6 = load i8, i8* %5, align 1, !dbg !6825
  %7 = icmp eq i8 %6, 104, !dbg !6826
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6827
  %9 = load i24, i24* %8, align 4, !dbg !6827
  %10 = and i24 %9, -30721, !dbg !6827
  br i1 %7, label %11, label %14, !dbg !6828

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6829
  store i24 %12, i24* %8, align 4, !dbg !6829
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6831
  call void @llvm.dbg.value(metadata i8* %13, metadata !6818, metadata !DIExpression()), !dbg !6819
  br label %56, !dbg !6832

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6833
  store i24 %15, i24* %8, align 4, !dbg !6833
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6835
  call void @llvm.dbg.value(metadata i8* %17, metadata !6818, metadata !DIExpression()), !dbg !6819
  %18 = load i8, i8* %17, align 1, !dbg !6837
  %19 = icmp eq i8 %18, 108, !dbg !6838
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6839
  %21 = load i24, i24* %20, align 4, !dbg !6839
  %22 = and i24 %21, -30721, !dbg !6839
  br i1 %19, label %23, label %26, !dbg !6840

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6841
  store i24 %24, i24* %20, align 4, !dbg !6841
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6843
  call void @llvm.dbg.value(metadata i8* %25, metadata !6818, metadata !DIExpression()), !dbg !6819
  br label %56, !dbg !6844

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6845
  store i24 %27, i24* %20, align 4, !dbg !6845
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6847
  %30 = load i24, i24* %29, align 4, !dbg !6848
  %31 = and i24 %30, -30721, !dbg !6848
  %32 = or i24 %31, 10240, !dbg !6848
  store i24 %32, i24* %29, align 4, !dbg !6848
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6849
  call void @llvm.dbg.value(metadata i8* %33, metadata !6818, metadata !DIExpression()), !dbg !6819
  br label %56, !dbg !6850

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6851
  %36 = load i24, i24* %35, align 4, !dbg !6852
  %37 = and i24 %36, -30721, !dbg !6852
  %38 = or i24 %37, 12288, !dbg !6852
  store i24 %38, i24* %35, align 4, !dbg !6852
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6853
  call void @llvm.dbg.value(metadata i8* %39, metadata !6818, metadata !DIExpression()), !dbg !6819
  br label %56, !dbg !6854

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6855
  %42 = load i24, i24* %41, align 4, !dbg !6856
  %43 = and i24 %42, -30721, !dbg !6856
  %44 = or i24 %43, 14336, !dbg !6856
  store i24 %44, i24* %41, align 4, !dbg !6856
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6857
  call void @llvm.dbg.value(metadata i8* %45, metadata !6818, metadata !DIExpression()), !dbg !6819
  br label %56, !dbg !6858

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6859
  %48 = load i24, i24* %47, align 4, !dbg !6860
  %49 = and i24 %48, -30723, !dbg !6860
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6861
  call void @llvm.dbg.value(metadata i8* %50, metadata !6818, metadata !DIExpression()), !dbg !6819
  %51 = or i24 %49, 16386, !dbg !6862
  store i24 %51, i24* %47, align 4, !dbg !6862
  br label %56, !dbg !6863

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6864
  %54 = load i24, i24* %53, align 4, !dbg !6865
  %55 = and i24 %54, -30721, !dbg !6865
  store i24 %55, i24* %53, align 4, !dbg !6865
  br label %56, !dbg !6866

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6818, metadata !DIExpression()), !dbg !6819
  ret i8* %57, !dbg !6867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6868 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6870, metadata !DIExpression()), !dbg !6875
  call void @llvm.dbg.value(metadata i8* %1, metadata !6871, metadata !DIExpression()), !dbg !6875
  call void @llvm.dbg.value(metadata i8 0, metadata !6872, metadata !DIExpression()), !dbg !6875
  call void @llvm.dbg.value(metadata i8* %1, metadata !6871, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6875
  %3 = load i8, i8* %1, align 1, !dbg !6876
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6877
  store i8 %3, i8* %4, align 1, !dbg !6878
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6879

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6880

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6881
  %9 = load i24, i24* %8, align 4, !dbg !6881
  %10 = and i24 %9, -458753, !dbg !6881
  %11 = or i24 %10, %7, !dbg !6881
  call void @llvm.dbg.label(metadata !6873), !dbg !6882
  %12 = and i24 %9, 30720, !dbg !6883
  %13 = icmp eq i24 %12, 16384, !dbg !6883
  %14 = zext i1 %13 to i24, !dbg !6885
  %15 = or i24 %11, %14, !dbg !6885
  %16 = icmp eq i8 %3, 99, !dbg !6886
  br i1 %16, label %17, label %43, !dbg !6888

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6889
  %19 = icmp ne i24 %18, 0, !dbg !6889
  call void @llvm.dbg.value(metadata i1 %19, metadata !6872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6875
  br label %43, !dbg !6891

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6892
  %22 = load i24, i24* %21, align 4, !dbg !6893
  %23 = and i24 %22, -458753, !dbg !6893
  %24 = or i24 %23, 262144, !dbg !6893
  call void @llvm.dbg.value(metadata i8 1, metadata !6872, metadata !DIExpression()), !dbg !6875
  br label %43, !dbg !6894

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6897
  %27 = load i24, i24* %26, align 4, !dbg !6898
  %28 = and i24 %27, -458753, !dbg !6898
  %29 = or i24 %28, 196608, !dbg !6898
  %30 = and i24 %27, 30720, !dbg !6899
  %31 = icmp eq i24 %30, 16384, !dbg !6899
  br label %43, !dbg !6901

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6902
  %34 = load i24, i24* %33, align 4, !dbg !6903
  %35 = and i24 %34, -458753, !dbg !6903
  %36 = or i24 %35, 196608, !dbg !6903
  %37 = and i24 %34, 30720, !dbg !6904
  %38 = icmp ne i24 %37, 0, !dbg !6904
  br label %43, !dbg !6906

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6907
  %41 = load i24, i24* %40, align 4, !dbg !6908
  %42 = or i24 %41, 1, !dbg !6908
  br label %43, !dbg !6909

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6910
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6911
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6912
  call void @llvm.dbg.value(metadata i8* %48, metadata !6871, metadata !DIExpression()), !dbg !6875
  call void @llvm.dbg.value(metadata i8 poison, metadata !6872, metadata !DIExpression()), !dbg !6875
  %49 = lshr i24 %44, 1, !dbg !6910
  %50 = and i24 %49, 1, !dbg !6910
  %51 = zext i24 %50 to i32, !dbg !6910
  %52 = or i32 %51, %47, !dbg !6910
  %53 = trunc i32 %52 to i24, !dbg !6910
  %54 = shl nuw nsw i24 %53, 1, !dbg !6910
  %55 = and i24 %44, -3, !dbg !6910
  %56 = or i24 %54, %55, !dbg !6910
  store i24 %56, i24* %46, align 4, !dbg !6910
  ret i8* %48, !dbg !6913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6914 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6918, metadata !DIExpression()), !dbg !6921
  %2 = load i8*, i8** %0, align 4, !dbg !6922
  call void @llvm.dbg.value(metadata i8* %2, metadata !6919, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i32 0, metadata !6920, metadata !DIExpression()), !dbg !6921
  %3 = load i8, i8* %2, align 1, !dbg !6923
  %4 = zext i8 %3 to i32, !dbg !6924
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !6925
  %6 = icmp eq i32 %5, 0, !dbg !6926
  br i1 %6, label %19, label %7, !dbg !6926

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6920, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i8* %10, metadata !6919, metadata !DIExpression()), !dbg !6921
  %11 = mul i32 %9, 10, !dbg !6927
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6929
  call void @llvm.dbg.value(metadata i8* %12, metadata !6919, metadata !DIExpression()), !dbg !6921
  %13 = add i32 %11, -48, !dbg !6930
  %14 = add i32 %13, %8, !dbg !6931
  call void @llvm.dbg.value(metadata i32 %14, metadata !6920, metadata !DIExpression()), !dbg !6921
  %15 = load i8, i8* %12, align 1, !dbg !6923
  %16 = zext i8 %15 to i32, !dbg !6924
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !6925
  %18 = icmp eq i32 %17, 0, !dbg !6926
  br i1 %18, label %19, label %7, !dbg !6926, !llvm.loop !6932

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6921
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6921
  store i8* %20, i8** %0, align 4, !dbg !6934
  ret i32 %21, !dbg !6935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6938, metadata !DIExpression()), !dbg !6939
  %2 = add i32 %0, -48, !dbg !6940
  %3 = icmp ult i32 %2, 10, !dbg !6941
  %4 = zext i1 %3 to i32, !dbg !6941
  ret i32 %4, !dbg !6942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6943 {
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,137\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,120000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x0\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #24, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #24, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #24, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_MPU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_MPU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_MPU_ENABLED,%object", ""() #24, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_TRNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_TRNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_TRNG_ENABLED,%object", ""() #24, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,%object", ""() #24, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,%object", ""() #24, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,%object", ""() #24, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,%object", ""() #24, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,%object", ""() #24, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,%object", ""() #24, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,%object", ""() #24, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,%object", ""() #24, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,%object", ""() #24, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,%object", ""() #24, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED,%object", ""() #24, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,%object", ""() #24, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,%object", ""() #24, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,%object", ""() #24, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD5X_GCLK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD5X_GCLK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD5X_GCLK_ENABLED,%object", ""() #24, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD5X_MCLK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD5X_MCLK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD5X_MCLK_ENABLED,%object", ""() #24, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #24, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_PWM_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_PWM_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_PWM_LEDS_ENABLED,%object", ""() #24, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #24, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #24, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #24, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #24, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #24, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #24, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #24, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #24, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_ITSYBITSY_M4_EXPRESS\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_ITSYBITSY_M4_EXPRESS,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_ITSYBITSY_M4_EXPRESS,%object", ""() #24, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAMD51\0A\09.equ\09CONFIG_SOC_SERIES_SAMD51,1\0A\09.type\09CONFIG_SOC_SERIES_SAMD51,%object", ""() #24, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM0\0A\09.equ\09CONFIG_SOC_FAMILY_SAM0,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM0,%object", ""() #24, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAMD5X_OSCULP32K_AS_MAIN\0A\09.equ\09CONFIG_SOC_ATMEL_SAMD5X_OSCULP32K_AS_MAIN,1\0A\09.type\09CONFIG_SOC_ATMEL_SAMD5X_OSCULP32K_AS_MAIN,%object", ""() #24, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAMD51G19A\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAMD51G19A,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAMD51G19A,%object", ""() #24, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_REVISION\0A\09.equ\09CONFIG_SOC_SERIES_REVISION,1\0A\09.type\09CONFIG_SOC_SERIES_REVISION,%object", ""() #24, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #24, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #24, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #24, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #24, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !7205, !srcloc !7206
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !7207, !srcloc !7208
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !7209, !srcloc !7210
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !7211, !srcloc !7212
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !7213, !srcloc !7214
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !7215, !srcloc !7216
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !7217, !srcloc !7218
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !7219, !srcloc !7220
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !7221, !srcloc !7222
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !7223, !srcloc !7224
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !7225, !srcloc !7226
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !7227, !srcloc !7228
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !7229, !srcloc !7230
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !7231, !srcloc !7232
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !7233, !srcloc !7234
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !7235, !srcloc !7236
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !7237, !srcloc !7238
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !7239, !srcloc !7240
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !7241, !srcloc !7242
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !7243, !srcloc !7244
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !7245, !srcloc !7246
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !7247, !srcloc !7248
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !7249, !srcloc !7250
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !7251, !srcloc !7252
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !7253, !srcloc !7254
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #24, !dbg !7255, !srcloc !7256
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #24, !dbg !7257, !srcloc !7258
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !7259, !srcloc !7260
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !7261, !srcloc !7262
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !7263, !srcloc !7264
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #24, !dbg !7265, !srcloc !7266
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #24, !dbg !7267, !srcloc !7268
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !7269, !srcloc !7270
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !7271, !srcloc !7272
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !7273, !srcloc !7274
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !7275, !srcloc !7276
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !7277, !srcloc !7278
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !7279, !srcloc !7280
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !7281, !srcloc !7282
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !7283, !srcloc !7284
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !7285, !srcloc !7286
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !7287, !srcloc !7288
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !7289, !srcloc !7290
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !7291, !srcloc !7292
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !7293, !srcloc !7294
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !7295, !srcloc !7296
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !7299, !srcloc !7300
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !7301, !srcloc !7302
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !7303, !srcloc !7304
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !7305, !srcloc !7306
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !7307, !srcloc !7308
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !7309, !srcloc !7310
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !7311, !srcloc !7312
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !7313, !srcloc !7314
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !7315, !srcloc !7316
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !7317, !srcloc !7318
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !7319, !srcloc !7320
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !7321, !srcloc !7322
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !7323, !srcloc !7324
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !7325, !srcloc !7326
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !7327, !srcloc !7328
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !7329, !srcloc !7330
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #24, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #24, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #24, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #24, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #24, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_UART_SAM0\0A\09.equ\09CONFIG_UART_SAM0,1\0A\09.type\09CONFIG_UART_SAM0,%object", ""() #24, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #24, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #24, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_SAM0_EIC\0A\09.equ\09CONFIG_SAM0_EIC,1\0A\09.type\09CONFIG_SAM0_EIC,%object", ""() #24, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #24, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #24, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #24, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #24, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #24, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #24, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #24, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #24, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #24, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM0\0A\09.equ\09CONFIG_PINCTRL_SAM0,1\0A\09.type\09CONFIG_PINCTRL_SAM0,%object", ""() #24, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #24, !dbg !7411, !srcloc !7412
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #24, !dbg !7413, !srcloc !7414
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !7415, !srcloc !7416
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !7417, !srcloc !7418
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !7419, !srcloc !7420
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !7421, !srcloc !7422
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !7423, !srcloc !7424
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !7425, !srcloc !7426
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !7427, !srcloc !7428
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !7429, !srcloc !7430
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !7431, !srcloc !7432
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !7433, !srcloc !7434
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !7435, !srcloc !7436
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !7437, !srcloc !7438
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !7439, !srcloc !7440
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !7441, !srcloc !7442
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !7443, !srcloc !7444
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !7445, !srcloc !7446
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !7447, !srcloc !7448
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #24, !dbg !7449, !srcloc !7450
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #24, !dbg !7451, !srcloc !7452
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !7453, !srcloc !7454
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !7455, !srcloc !7456
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !7457, !srcloc !7458
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !7459, !srcloc !7460
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !7461, !srcloc !7462
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !7463, !srcloc !7464
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !7465, !srcloc !7466
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #24, !dbg !7467, !srcloc !7468
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #24, !dbg !7469, !srcloc !7470
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #24, !dbg !7471, !srcloc !7472
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #24, !dbg !7473, !srcloc !7474
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #24, !dbg !7475, !srcloc !7476
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #24, !dbg !7477, !srcloc !7478
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !7479, !srcloc !7480
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !7481, !srcloc !7482
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !7483, !srcloc !7484
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !7485, !srcloc !7486
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !7487, !srcloc !7488
  tail call void asm sideeffect ".globl\09CONFIG_USE_DT_CODE_PARTITION\0A\09.equ\09CONFIG_USE_DT_CODE_PARTITION,1\0A\09.type\09CONFIG_USE_DT_CODE_PARTITION,%object", ""() #24, !dbg !7489, !srcloc !7490
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x4000\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !7491, !srcloc !7492
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x78000\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !7493, !srcloc !7494
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !7495, !srcloc !7496
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !7497, !srcloc !7498
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !7499, !srcloc !7500
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !7501, !srcloc !7502
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !7503, !srcloc !7504
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !7505, !srcloc !7506
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !7507, !srcloc !7508
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !7509, !srcloc !7510
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !7511, !srcloc !7512
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !7513, !srcloc !7514
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !7515, !srcloc !7516
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !7517, !srcloc !7518
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !7519, !srcloc !7520
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !7521, !srcloc !7522
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !7523, !srcloc !7524
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !7525, !srcloc !7526
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !7527, !srcloc !7528
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !7529, !srcloc !7530
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !7531, !srcloc !7532
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #24, !dbg !7533, !srcloc !7534
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !7535, !srcloc !7536
  tail call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA,%object", ""() #24, !dbg !7537, !srcloc !7538
  tail call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2,%object", ""() #24, !dbg !7539, !srcloc !7540
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !7541, !srcloc !7542
  ret void, !dbg !7543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7544 {
  call void @llvm.dbg.value(metadata %struct.PortGroup* %0, metadata !7720, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.value(metadata i32 %1, metadata !7721, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.value(metadata i32 %2, metadata !7722, metadata !DIExpression()), !dbg !7725
  %4 = and i32 %1, 1, !dbg !7726
  %5 = icmp eq i32 %4, 0, !dbg !7727
  call void @llvm.dbg.value(metadata i1 %5, metadata !7723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7725
  %6 = lshr i32 %1, 1, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %6, metadata !7724, metadata !DIExpression()), !dbg !7725
  %7 = trunc i32 %2 to i8, !dbg !7729
  %8 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %0, i32 0, i32 12, i32 %6, i32 0, i32 0, !dbg !7729
  %9 = load volatile i8, i8* %8, align 1, !dbg !7729
  %10 = and i8 %7, 15, !dbg !7731
  %11 = shl i8 %7, 4, !dbg !7731
  %12 = select i1 %5, i8 -16, i8 15, !dbg !7731
  %13 = select i1 %5, i8 %10, i8 %11, !dbg !7731
  %14 = and i8 %9, %12, !dbg !7729
  %15 = or i8 %14, %13, !dbg !7729
  store volatile i8 %15, i8* %8, align 1, !dbg !7729
  %16 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %0, i32 0, i32 13, i32 %1, i32 0, i32 0, !dbg !7732
  %17 = load volatile i8, i8* %16, align 1, !dbg !7733
  %18 = or i8 %17, 1, !dbg !7733
  store volatile i8 %18, i8* %16, align 1, !dbg !7733
  ret i32 0, !dbg !7734
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @soc_port_configure(%struct.soc_port_pin* nocapture noundef readonly %0) local_unnamed_addr #16 !dbg !7735 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !7751, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata %struct.soc_port_pin* %0, metadata !7747, metadata !DIExpression()), !dbg !7753
  %3 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 0, i32 0, !dbg !7754
  %4 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !7754
  call void @llvm.dbg.value(metadata %struct.PortGroup* %4, metadata !7748, metadata !DIExpression()), !dbg !7753
  %5 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 0, i32 2, !dbg !7755
  %6 = load i32, i32* %5, align 4, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %6, metadata !7749, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %6, metadata !7750, metadata !DIExpression(DW_OP_constu, 983040, DW_OP_and, DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !7753
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !7756
  store i8 0, i8* %2, align 1, !dbg !7752
  %7 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 0, i32 1, !dbg !7757
  %8 = load i32, i32* %7, align 4, !dbg !7757
  %9 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 13, i32 %8, i32 0, i32 0, !dbg !7758
  %10 = load volatile i8, i8* %2, align 1, !dbg !7758
  store volatile i8 %10, i8* %9, align 1, !dbg !7758
  %11 = load i32, i32* %7, align 4, !dbg !7759
  %12 = shl nuw i32 1, %11, !dbg !7760
  %13 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 1, i32 0, i32 0, !dbg !7761
  store volatile i32 %12, i32* %13, align 4, !dbg !7762
  %14 = load i32, i32* %7, align 4, !dbg !7763
  %15 = shl nuw i32 1, %14, !dbg !7764
  %16 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 5, i32 0, i32 0, !dbg !7765
  store volatile i32 %15, i32* %16, align 4, !dbg !7766
  %17 = and i32 %6, 64, !dbg !7767
  %18 = icmp eq i32 %17, 0, !dbg !7767
  br i1 %18, label %24, label %19, !dbg !7769

19:                                               ; preds = %1
  %20 = lshr i32 %6, 16, !dbg !7770
  %21 = and i32 %20, 15, !dbg !7770
  call void @llvm.dbg.value(metadata i32 %21, metadata !7750, metadata !DIExpression()), !dbg !7753
  %22 = load i32, i32* %7, align 4, !dbg !7771
  %23 = tail call i32 @soc_port_pinmux_set(%struct.PortGroup* noundef nonnull %4, i32 noundef %22, i32 noundef %21) #25, !dbg !7773
  br label %60, !dbg !7774

24:                                               ; preds = %1
  %25 = and i32 %6, 3, !dbg !7775
  %26 = icmp eq i32 %25, 0, !dbg !7775
  br i1 %26, label %37, label %27, !dbg !7777

27:                                               ; preds = %24
  %28 = and i32 %6, 1, !dbg !7778
  %29 = icmp eq i32 %28, 0, !dbg !7778
  br i1 %29, label %34, label %30, !dbg !7781

30:                                               ; preds = %27
  %31 = load i32, i32* %7, align 4, !dbg !7782
  %32 = shl nuw i32 1, %31, !dbg !7784
  %33 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 6, i32 0, i32 0, !dbg !7785
  store volatile i32 %32, i32* %33, align 4, !dbg !7786
  br label %34, !dbg !7787

34:                                               ; preds = %30, %27
  %35 = load i8, i8* %2, align 1, !dbg !7788
  %36 = or i8 %35, 4, !dbg !7788
  store i8 %36, i8* %2, align 1, !dbg !7788
  br label %37, !dbg !7789

37:                                               ; preds = %34, %24
  %38 = and i32 %6, 8, !dbg !7790
  %39 = icmp eq i32 %38, 0, !dbg !7790
  br i1 %39, label %43, label %40, !dbg !7792

40:                                               ; preds = %37
  %41 = load i8, i8* %2, align 1, !dbg !7793
  %42 = or i8 %41, 2, !dbg !7793
  store i8 %42, i8* %2, align 1, !dbg !7793
  br label %43, !dbg !7795

43:                                               ; preds = %40, %37
  %44 = and i32 %6, 16, !dbg !7796
  %45 = icmp eq i32 %44, 0, !dbg !7796
  br i1 %45, label %50, label %46, !dbg !7798

46:                                               ; preds = %43
  %47 = load i32, i32* %7, align 4, !dbg !7799
  %48 = shl nuw i32 1, %47, !dbg !7801
  %49 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 2, i32 0, i32 0, !dbg !7802
  store volatile i32 %48, i32* %49, align 4, !dbg !7803
  br label %50, !dbg !7804

50:                                               ; preds = %46, %43
  %51 = and i32 %6, 32, !dbg !7805
  %52 = icmp eq i32 %51, 0, !dbg !7805
  br i1 %52, label %56, label %53, !dbg !7807

53:                                               ; preds = %50
  %54 = load i8, i8* %2, align 1, !dbg !7808
  %55 = or i8 %54, 64, !dbg !7808
  store i8 %55, i8* %2, align 1, !dbg !7808
  br label %56, !dbg !7810

56:                                               ; preds = %53, %50
  %57 = load i32, i32* %7, align 4, !dbg !7811
  %58 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 13, i32 %57, i32 0, i32 0, !dbg !7812
  %59 = load volatile i8, i8* %2, align 1, !dbg !7812
  store volatile i8 %59, i8* %58, align 1, !dbg !7812
  br label %60, !dbg !7813

60:                                               ; preds = %56, %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !7813
  ret void, !dbg !7813
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @soc_port_list_configure(%struct.soc_port_pin* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #16 !dbg !7814 {
  call void @llvm.dbg.value(metadata %struct.soc_port_pin* %0, metadata !7818, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i32 %1, metadata !7819, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i32 0, metadata !7820, metadata !DIExpression()), !dbg !7823
  %3 = icmp eq i32 %1, 0, !dbg !7824
  br i1 %3, label %4, label %5, !dbg !7826

4:                                                ; preds = %5, %2
  ret void, !dbg !7827

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %8, %5 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7820, metadata !DIExpression()), !dbg !7823
  %7 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 %6, !dbg !7828
  tail call void @soc_port_configure(%struct.soc_port_pin* noundef %7) #25, !dbg !7830
  %8 = add nuw i32 %6, 1, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %8, metadata !7820, metadata !DIExpression()), !dbg !7823
  %9 = icmp eq i32 %8, %1, !dbg !7824
  br i1 %9, label %4, label %5, !dbg !7826, !llvm.loop !7832
}

; Function Attrs: noinline nounwind optsize
define internal i32 @atmel_samd_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7836, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8 1, metadata !7838, metadata !DIExpression()), !dbg !7839
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !7840, !srcloc !7849
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7840
  call void @llvm.dbg.value(metadata i32 %3, metadata !7846, metadata !DIExpression()) #24, !dbg !7850
  call void @llvm.dbg.value(metadata i32 undef, metadata !7847, metadata !DIExpression()) #24, !dbg !7850
  call void @llvm.dbg.value(metadata i32 %3, metadata !7837, metadata !DIExpression()), !dbg !7839
  %4 = load volatile i32, i32* inttoptr (i32 1090543624 to i32*), align 8, !dbg !7851
  %5 = or i32 %4, 1, !dbg !7851
  store volatile i32 %5, i32* inttoptr (i32 1090543624 to i32*), align 8, !dbg !7851
  tail call fastcc void @gclk_reset() #25, !dbg !7852
  tail call fastcc void @osc32k_init() #25, !dbg !7853
  tail call fastcc void @dfll_init() #25, !dbg !7854
  tail call fastcc void @dpll_init() #25, !dbg !7855
  tail call fastcc void @gclk_connect(i8 noundef zeroext 0, i8 noundef zeroext 7, i8 noundef zeroext 1) #25, !dbg !7856
  tail call fastcc void @gclk_connect(i8 noundef zeroext 2, i8 noundef zeroext 6, i8 noundef zeroext 0) #25, !dbg !7857
  call void @llvm.dbg.value(metadata i32 %3, metadata !7858, metadata !DIExpression()) #24, !dbg !7863
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !7865, !srcloc !7866
  ret i32 0, !dbg !7867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @gclk_reset() unnamed_addr #15 !dbg !7868 {
  %1 = load volatile i8, i8* inttoptr (i32 1073748992 to i8*), align 1024, !dbg !7869
  %2 = or i8 %1, 1, !dbg !7869
  store volatile i8 %2, i8* inttoptr (i32 1073748992 to i8*), align 1024, !dbg !7869
  br label %3, !dbg !7870

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 1073748996 to i32*), align 4, !dbg !7871
  %5 = and i32 %4, 1, !dbg !7871
  %6 = icmp eq i32 %5, 0, !dbg !7870
  br i1 %6, label %7, label %3, !dbg !7870, !llvm.loop !7872

7:                                                ; preds = %3
  ret void, !dbg !7874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @osc32k_init() unnamed_addr #15 !dbg !7875 {
  store volatile i32 8452, i32* inttoptr (i32 1073749028 to i32*), align 4, !dbg !7876
  ret void, !dbg !7877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @dfll_init() unnamed_addr #15 !dbg !7878 {
  call void @llvm.dbg.value(metadata i32 160, metadata !7880, metadata !DIExpression()), !dbg !7881
  store volatile i8 -96, i8* inttoptr (i32 1073745952 to i8*), align 32, !dbg !7882
  store volatile i8 2, i8* inttoptr (i32 1073745948 to i8*), align 4, !dbg !7883
  br label %1, !dbg !7884

1:                                                ; preds = %1, %0
  %2 = load volatile i32, i32* inttoptr (i32 1073745936 to i32*), align 16, !dbg !7885
  %3 = and i32 %2, 256, !dbg !7886
  %4 = icmp eq i32 %3, 0, !dbg !7886
  br i1 %4, label %1, label %5, !dbg !7884, !llvm.loop !7887

5:                                                ; preds = %1
  ret void, !dbg !7889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @dpll_init() unnamed_addr #15 !dbg !7890 {
  call void @llvm.dbg.value(metadata i8 0, metadata !7894, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 120000000, metadata !7895, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 117187, metadata !7896, metadata !DIExpression()), !dbg !7897
  %1 = load volatile i8, i8* inttoptr (i32 1073745968 to i8*), align 16, !dbg !7898
  %2 = and i8 %1, -3, !dbg !7898
  store volatile i8 %2, i8* inttoptr (i32 1073745968 to i8*), align 16, !dbg !7898
  br label %3, !dbg !7899

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 1073745980 to i32*), align 4, !dbg !7900
  %5 = icmp eq i32 %4, 0, !dbg !7899
  br i1 %5, label %6, label %3, !dbg !7899, !llvm.loop !7901

6:                                                ; preds = %3
  store volatile i32 65, i32* inttoptr (i32 1073749124 to i32*), align 4, !dbg !7903
  br label %7, !dbg !7904

7:                                                ; preds = %7, %6
  %8 = load volatile i32, i32* inttoptr (i32 1073749124 to i32*), align 4, !dbg !7905
  %9 = and i32 %8, 64, !dbg !7906
  %10 = icmp eq i32 %9, 0, !dbg !7907
  br i1 %10, label %7, label %11, !dbg !7904, !llvm.loop !7908

11:                                               ; preds = %7
  store volatile i32 200269, i32* inttoptr (i32 1073745972 to i32*), align 4, !dbg !7910
  store volatile i32 2064, i32* inttoptr (i32 1073745976 to i32*), align 8, !dbg !7911
  store volatile i8 2, i8* inttoptr (i32 1073745968 to i8*), align 16, !dbg !7912
  br label %12, !dbg !7913

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* inttoptr (i32 1073745980 to i32*), align 4, !dbg !7914
  %14 = icmp eq i32 %13, 0, !dbg !7913
  br i1 %14, label %15, label %12, !dbg !7913, !llvm.loop !7915

15:                                               ; preds = %12, %23
  %16 = load volatile i32, i32* inttoptr (i32 1073745984 to i32*), align 64, !dbg !7917
  %17 = and i32 %16, 2, !dbg !7918
  %18 = icmp eq i32 %17, 0, !dbg !7918
  br i1 %18, label %23, label %19, !dbg !7919

19:                                               ; preds = %15
  %20 = load volatile i32, i32* inttoptr (i32 1073745984 to i32*), align 64, !dbg !7920
  %21 = and i32 %20, 1, !dbg !7920
  %22 = icmp eq i32 %21, 0, !dbg !7919
  br i1 %22, label %23, label %24, !dbg !7921

23:                                               ; preds = %19, %15
  br label %15, !dbg !7917, !llvm.loop !7922

24:                                               ; preds = %19
  ret void, !dbg !7924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @gclk_connect(i8 noundef zeroext %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #15 !dbg !7925 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7929, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8 %1, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8 %2, metadata !7931, metadata !DIExpression()), !dbg !7932
  %4 = and i8 %1, 15, !dbg !7933
  %5 = zext i8 %4 to i32, !dbg !7933
  %6 = zext i8 %2 to i32, !dbg !7934
  %7 = shl nuw nsw i32 %6, 16, !dbg !7934
  %8 = or i32 %7, %5, !dbg !7935
  %9 = or i32 %8, 256, !dbg !7936
  %10 = zext i8 %0 to i32, !dbg !7937
  %11 = getelementptr inbounds [12 x %union.anon.5], [12 x %union.anon.5]* inttoptr (i32 1073749024 to [12 x %union.anon.5]*), i32 0, i32 %10, i32 0, i32 0, !dbg !7938
  store volatile i32 %9, i32* %11, align 4, !dbg !7939
  ret void, !dbg !7940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7941 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7944, metadata !DIExpression()), !dbg !7952
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !7953
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !7953
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !7945, metadata !DIExpression()), !dbg !7954
  call void @llvm.va_start(i8* nonnull %3), !dbg !7955
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !7956
  %5 = load i32, i32* %4, align 4, !dbg !7956
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7956
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !7956
  call void @llvm.va_end(i8* nonnull %3), !dbg !7957
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !7958
  ret void, !dbg !7958
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7959 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i8* %0, metadata !7963, metadata !DIExpression()), !dbg !7965
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #26, !dbg !7966
  ret void, !dbg !7967
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7972, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %1, metadata !7973, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %2, metadata !7974, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %1, metadata !7975, metadata !DIExpression()), !dbg !7976
  %4 = icmp eq i32 %2, 0, !dbg !7977
  br i1 %4, label %14, label %5, !dbg !7978

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.61(i32 noundef %0) #25, !dbg !7976
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7978

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %10, metadata !7974, metadata !DIExpression()), !dbg !7976
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i32 noundef %7) #26, !dbg !7979
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !7981
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %11, metadata !7974, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %12, metadata !7975, metadata !DIExpression()), !dbg !7976
  br i1 %13, label %14, label %8, !dbg !7982, !llvm.loop !7983

14:                                               ; preds = %8, %3
  ret void, !dbg !7985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.61(i32 noundef %0) unnamed_addr #3 !dbg !7986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7988, metadata !DIExpression()), !dbg !7989
  %2 = add i32 %0, -1, !dbg !7990
  %3 = icmp ult i32 %2, 4, !dbg !7990
  %4 = shl i32 %2, 3, !dbg !7990
  %5 = lshr i32 1145657157, %4, !dbg !7990
  %6 = trunc i32 %5 to i8, !dbg !7990
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7990
  ret i8 %7, !dbg !7991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7992 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7996, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i32 %1, metadata !7997, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i32 0, metadata !7998, metadata !DIExpression()), !dbg !8008
  br label %4, !dbg !8009

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.63, i32 0, i32 0)) #26, !dbg !8010
  call void @llvm.dbg.value(metadata i32 0, metadata !8000, metadata !DIExpression()), !dbg !8011
  br label %16, !dbg !8012

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7998, metadata !DIExpression()), !dbg !8008
  %6 = icmp ult i32 %5, %1, !dbg !8013
  br i1 %6, label %7, label %11, !dbg !8017

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !8018
  %9 = load i8, i8* %8, align 1, !dbg !8018
  %10 = zext i8 %9 to i32, !dbg !8020
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.64, i32 0, i32 0), i32 noundef %10) #26, !dbg !8021
  br label %12, !dbg !8022

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.65, i32 0, i32 0)) #26, !dbg !8023
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %13, metadata !7998, metadata !DIExpression()), !dbg !8008
  %14 = icmp eq i32 %13, 8, !dbg !8026
  br i1 %14, label %3, label %4, !dbg !8009, !llvm.loop !8027

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.66, i32 0, i32 0)) #26, !dbg !8029
  ret void, !dbg !8030

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !8000, metadata !DIExpression()), !dbg !8011
  %18 = icmp ult i32 %17, %1, !dbg !8031
  br i1 %18, label %19, label %26, !dbg !8032

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !8033
  %21 = load i8, i8* %20, align 1, !dbg !8033
  call void @llvm.dbg.value(metadata i8 %21, metadata !8002, metadata !DIExpression()), !dbg !8034
  %22 = zext i8 %21 to i32, !dbg !8035
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !8036
  %24 = icmp eq i32 %23, 0, !dbg !8037
  %25 = select i1 %24, i32 46, i32 %22, !dbg !8036
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.67, i32 0, i32 0), i32 noundef %25) #26, !dbg !8038
  br label %27, !dbg !8039

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.68, i32 0, i32 0)) #26, !dbg !8040
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %28, metadata !8000, metadata !DIExpression()), !dbg !8011
  %29 = icmp eq i32 %28, 8, !dbg !8043
  br i1 %29, label %15, label %16, !dbg !8012, !llvm.loop !8044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !8046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8048, metadata !DIExpression()), !dbg !8049
  %2 = add i32 %0, -32, !dbg !8050
  %3 = icmp ult i32 %2, 95, !dbg !8050
  %4 = zext i1 %3 to i32, !dbg !8050
  ret i32 %4, !dbg !8051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8052 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8057, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32 %1, metadata !8058, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i8* %2, metadata !8059, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32 %3, metadata !8060, metadata !DIExpression()), !dbg !8061
  %5 = icmp ugt i32 %3, %1, !dbg !8062
  br i1 %5, label %8, label %6, !dbg !8064

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #26, !dbg !8065
  br label %8, !dbg !8067

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !8068
  ret i32 %9, !dbg !8069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8074, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i8 %1, metadata !8075, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %2, metadata !8076, metadata !DIExpression()), !dbg !8077
  %4 = zext i8 %1 to i32, !dbg !8078
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #26, !dbg !8079
  ret void, !dbg !8080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !8081 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8085, metadata !DIExpression()), !dbg !8086
  %2 = shl i8 %0, 1, !dbg !8087
  %3 = icmp slt i8 %0, 0, !dbg !8088
  %4 = select i1 %3, i8 27, i8 0, !dbg !8088
  %5 = xor i8 %4, %2, !dbg !8089
  ret i8 %5, !dbg !8090
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8091 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8095, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8* %1, metadata !8096, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %2, metadata !8097, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8* %0, metadata !8098, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8* %1, metadata !8099, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8 0, metadata !8100, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 0, metadata !8101, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8 undef, metadata !8100, metadata !DIExpression()), !dbg !8103
  %4 = icmp eq i32 %2, 0, !dbg !8105
  br i1 %4, label %5, label %7, !dbg !8107

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !8108

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8101, metadata !DIExpression()), !dbg !8104
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !8109
  %11 = load i8, i8* %10, align 1, !dbg !8109
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !8111
  %13 = load i8, i8* %12, align 1, !dbg !8111
  %14 = xor i8 %13, %11, !dbg !8112
  %15 = zext i8 %14 to i32, !dbg !8112
  %16 = or i32 %9, %15, !dbg !8113
  call void @llvm.dbg.value(metadata i32 %16, metadata !8100, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8103
  %17 = add nuw i32 %8, 1, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %17, metadata !8101, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8 undef, metadata !8100, metadata !DIExpression()), !dbg !8103
  %18 = icmp eq i32 %17, %2, !dbg !8105
  br i1 %18, label %5, label %7, !dbg !8107, !llvm.loop !8115
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !8117 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i8* %1, metadata !8122, metadata !DIExpression()), !dbg !8123
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #26, !dbg !8124
  ret i32 %3, !dbg !8125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !8126 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %1, metadata !8132, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !8133, metadata !DIExpression()), !dbg !8136
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !8137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #24, !dbg !8137
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !8134, metadata !DIExpression()), !dbg !8138
  %6 = icmp eq i8* %0, null, !dbg !8139
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !8141
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !8141
  br i1 %10, label %23, label %11, !dbg !8141

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #26, !dbg !8142
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !8143
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #25, !dbg !8144
  call void @llvm.dbg.value(metadata i32 9, metadata !8135, metadata !DIExpression()), !dbg !8136
  br label %14, !dbg !8145

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8135, metadata !DIExpression()), !dbg !8136
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #25, !dbg !8147
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #25, !dbg !8150
  %16 = shl i32 %15, 2, !dbg !8151
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !8152
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #25, !dbg !8153
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #25, !dbg !8154
  %18 = add nsw i32 %15, -1, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %18, metadata !8135, metadata !DIExpression()), !dbg !8136
  %19 = icmp eq i32 %18, 0, !dbg !8156
  br i1 %19, label %20, label %14, !dbg !8145, !llvm.loop !8157

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !8159
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #25, !dbg !8160
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #25, !dbg !8161
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #25, !dbg !8162
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #26, !dbg !8163
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #26, !dbg !8164
  br label %23, !dbg !8165

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !8136
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !8166
  ret i32 %24, !dbg !8166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !8167 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8172, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32* %1, metadata !8173, metadata !DIExpression()), !dbg !8174
  %3 = load i32, i32* %1, align 4, !dbg !8175
  %4 = lshr i32 %3, 24, !dbg !8176
  %5 = load i8, i8* %0, align 1, !dbg !8177
  %6 = trunc i32 %4 to i8, !dbg !8177
  %7 = xor i8 %5, %6, !dbg !8177
  store i8 %7, i8* %0, align 1, !dbg !8177
  %8 = load i32, i32* %1, align 4, !dbg !8178
  %9 = lshr i32 %8, 16, !dbg !8179
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8180
  %11 = load i8, i8* %10, align 1, !dbg !8181
  %12 = trunc i32 %9 to i8, !dbg !8181
  %13 = xor i8 %11, %12, !dbg !8181
  store i8 %13, i8* %10, align 1, !dbg !8181
  %14 = load i32, i32* %1, align 4, !dbg !8182
  %15 = lshr i32 %14, 8, !dbg !8183
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !8184
  %17 = load i8, i8* %16, align 1, !dbg !8185
  %18 = trunc i32 %15 to i8, !dbg !8185
  %19 = xor i8 %17, %18, !dbg !8185
  store i8 %19, i8* %16, align 1, !dbg !8185
  %20 = load i32, i32* %1, align 4, !dbg !8186
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !8187
  %22 = load i8, i8* %21, align 1, !dbg !8188
  %23 = trunc i32 %20 to i8, !dbg !8188
  %24 = xor i8 %22, %23, !dbg !8188
  store i8 %24, i8* %21, align 1, !dbg !8188
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !8189
  %26 = load i32, i32* %25, align 4, !dbg !8189
  %27 = lshr i32 %26, 24, !dbg !8190
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8191
  %29 = load i8, i8* %28, align 1, !dbg !8192
  %30 = trunc i32 %27 to i8, !dbg !8192
  %31 = xor i8 %29, %30, !dbg !8192
  store i8 %31, i8* %28, align 1, !dbg !8192
  %32 = load i32, i32* %25, align 4, !dbg !8193
  %33 = lshr i32 %32, 16, !dbg !8194
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !8195
  %35 = load i8, i8* %34, align 1, !dbg !8196
  %36 = trunc i32 %33 to i8, !dbg !8196
  %37 = xor i8 %35, %36, !dbg !8196
  store i8 %37, i8* %34, align 1, !dbg !8196
  %38 = load i32, i32* %25, align 4, !dbg !8197
  %39 = lshr i32 %38, 8, !dbg !8198
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !8199
  %41 = load i8, i8* %40, align 1, !dbg !8200
  %42 = trunc i32 %39 to i8, !dbg !8200
  %43 = xor i8 %41, %42, !dbg !8200
  store i8 %43, i8* %40, align 1, !dbg !8200
  %44 = load i32, i32* %25, align 4, !dbg !8201
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !8202
  %46 = load i8, i8* %45, align 1, !dbg !8203
  %47 = trunc i32 %44 to i8, !dbg !8203
  %48 = xor i8 %46, %47, !dbg !8203
  store i8 %48, i8* %45, align 1, !dbg !8203
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !8204
  %50 = load i32, i32* %49, align 4, !dbg !8204
  %51 = lshr i32 %50, 24, !dbg !8205
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8206
  %53 = load i8, i8* %52, align 1, !dbg !8207
  %54 = trunc i32 %51 to i8, !dbg !8207
  %55 = xor i8 %53, %54, !dbg !8207
  store i8 %55, i8* %52, align 1, !dbg !8207
  %56 = load i32, i32* %49, align 4, !dbg !8208
  %57 = lshr i32 %56, 16, !dbg !8209
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !8210
  %59 = load i8, i8* %58, align 1, !dbg !8211
  %60 = trunc i32 %57 to i8, !dbg !8211
  %61 = xor i8 %59, %60, !dbg !8211
  store i8 %61, i8* %58, align 1, !dbg !8211
  %62 = load i32, i32* %49, align 4, !dbg !8212
  %63 = lshr i32 %62, 8, !dbg !8213
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !8214
  %65 = load i8, i8* %64, align 1, !dbg !8215
  %66 = trunc i32 %63 to i8, !dbg !8215
  %67 = xor i8 %65, %66, !dbg !8215
  store i8 %67, i8* %64, align 1, !dbg !8215
  %68 = load i32, i32* %49, align 4, !dbg !8216
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !8217
  %70 = load i8, i8* %69, align 1, !dbg !8218
  %71 = trunc i32 %68 to i8, !dbg !8218
  %72 = xor i8 %70, %71, !dbg !8218
  store i8 %72, i8* %69, align 1, !dbg !8218
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !8219
  %74 = load i32, i32* %73, align 4, !dbg !8219
  %75 = lshr i32 %74, 24, !dbg !8220
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8221
  %77 = load i8, i8* %76, align 1, !dbg !8222
  %78 = trunc i32 %75 to i8, !dbg !8222
  %79 = xor i8 %77, %78, !dbg !8222
  store i8 %79, i8* %76, align 1, !dbg !8222
  %80 = load i32, i32* %73, align 4, !dbg !8223
  %81 = lshr i32 %80, 16, !dbg !8224
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !8225
  %83 = load i8, i8* %82, align 1, !dbg !8226
  %84 = trunc i32 %81 to i8, !dbg !8226
  %85 = xor i8 %83, %84, !dbg !8226
  store i8 %85, i8* %82, align 1, !dbg !8226
  %86 = load i32, i32* %73, align 4, !dbg !8227
  %87 = lshr i32 %86, 8, !dbg !8228
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !8229
  %89 = load i8, i8* %88, align 1, !dbg !8230
  %90 = trunc i32 %87 to i8, !dbg !8230
  %91 = xor i8 %89, %90, !dbg !8230
  store i8 %91, i8* %88, align 1, !dbg !8230
  %92 = load i32, i32* %73, align 4, !dbg !8231
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !8232
  %94 = load i8, i8* %93, align 1, !dbg !8233
  %95 = trunc i32 %92 to i8, !dbg !8233
  %96 = xor i8 %94, %95, !dbg !8233
  store i8 %96, i8* %93, align 1, !dbg !8233
  ret void, !dbg !8234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !8235 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8239, metadata !DIExpression()), !dbg !8241
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !8242
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8242
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !8240, metadata !DIExpression()), !dbg !8243
  %4 = load i8, i8* %0, align 1, !dbg !8244
  store i8 %4, i8* %3, align 1, !dbg !8245
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !8246
  %6 = load i8, i8* %5, align 1, !dbg !8246
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !8247
  store i8 %6, i8* %7, align 1, !dbg !8248
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !8249
  %9 = load i8, i8* %8, align 1, !dbg !8249
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !8250
  store i8 %9, i8* %10, align 1, !dbg !8251
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !8252
  %12 = load i8, i8* %11, align 1, !dbg !8252
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !8253
  store i8 %12, i8* %13, align 1, !dbg !8254
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8255
  %15 = load i8, i8* %14, align 1, !dbg !8255
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !8256
  store i8 %15, i8* %16, align 1, !dbg !8257
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8258
  %18 = load i8, i8* %17, align 1, !dbg !8258
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !8259
  store i8 %18, i8* %19, align 1, !dbg !8260
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !8261
  %21 = load i8, i8* %20, align 1, !dbg !8261
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !8262
  store i8 %21, i8* %22, align 1, !dbg !8263
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !8264
  %24 = load i8, i8* %23, align 1, !dbg !8264
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !8265
  store i8 %24, i8* %25, align 1, !dbg !8266
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8267
  %27 = load i8, i8* %26, align 1, !dbg !8267
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !8268
  store i8 %27, i8* %28, align 1, !dbg !8269
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !8270
  %30 = load i8, i8* %29, align 1, !dbg !8270
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !8271
  store i8 %30, i8* %31, align 1, !dbg !8272
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !8273
  %33 = load i8, i8* %32, align 1, !dbg !8273
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !8274
  store i8 %33, i8* %34, align 1, !dbg !8275
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !8276
  %36 = load i8, i8* %35, align 1, !dbg !8276
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !8277
  store i8 %36, i8* %37, align 1, !dbg !8278
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8279
  %39 = load i8, i8* %38, align 1, !dbg !8279
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !8280
  store i8 %39, i8* %40, align 1, !dbg !8281
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !8282
  %42 = load i8, i8* %41, align 1, !dbg !8282
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !8283
  store i8 %42, i8* %43, align 1, !dbg !8284
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !8285
  %45 = load i8, i8* %44, align 1, !dbg !8285
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !8286
  store i8 %45, i8* %46, align 1, !dbg !8287
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !8288
  %48 = load i8, i8* %47, align 1, !dbg !8288
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !8289
  store i8 %48, i8* %49, align 1, !dbg !8290
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #26, !dbg !8291
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8292
  ret void, !dbg !8292
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !8293 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8295, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 0, metadata !8296, metadata !DIExpression()), !dbg !8297
  br label %2, !dbg !8298

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8296, metadata !DIExpression()), !dbg !8297
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8300
  %5 = load i8, i8* %4, align 1, !dbg !8300
  %6 = zext i8 %5 to i32, !dbg !8303
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !8303
  %8 = load i8, i8* %7, align 1, !dbg !8303
  store i8 %8, i8* %4, align 1, !dbg !8304
  %9 = add nuw nsw i32 %3, 1, !dbg !8305
  call void @llvm.dbg.value(metadata i32 %9, metadata !8296, metadata !DIExpression()), !dbg !8297
  %10 = icmp eq i32 %9, 16, !dbg !8306
  br i1 %10, label %11, label %2, !dbg !8298, !llvm.loop !8307

11:                                               ; preds = %2
  ret void, !dbg !8309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !8310 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8312, metadata !DIExpression()), !dbg !8314
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !8315
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8315
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !8313, metadata !DIExpression()), !dbg !8316
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #25, !dbg !8317
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !8318
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8319
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #25, !dbg !8320
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !8321
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8322
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #25, !dbg !8323
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !8324
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8325
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #25, !dbg !8326
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #26, !dbg !8327
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8328
  ret void, !dbg !8328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8329 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8333, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i8* %1, metadata !8334, metadata !DIExpression()), !dbg !8335
  %3 = load i8, i8* %1, align 1, !dbg !8336
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #26, !dbg !8336
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #26, !dbg !8336
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #26, !dbg !8336
  %7 = load i8, i8* %1, align 1, !dbg !8336
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #26, !dbg !8336
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #26, !dbg !8336
  %10 = load i8, i8* %1, align 1, !dbg !8336
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #26, !dbg !8336
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !8337
  %13 = load i8, i8* %12, align 1, !dbg !8337
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #26, !dbg !8337
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #26, !dbg !8337
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #26, !dbg !8337
  %17 = load i8, i8* %12, align 1, !dbg !8337
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #26, !dbg !8337
  %19 = load i8, i8* %12, align 1, !dbg !8337
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !8338
  %21 = load i8, i8* %20, align 1, !dbg !8338
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #26, !dbg !8338
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #26, !dbg !8338
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #26, !dbg !8338
  %25 = load i8, i8* %20, align 1, !dbg !8338
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #26, !dbg !8338
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #26, !dbg !8338
  %28 = load i8, i8* %20, align 1, !dbg !8338
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !8339
  %30 = load i8, i8* %29, align 1, !dbg !8339
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #26, !dbg !8339
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #26, !dbg !8339
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #26, !dbg !8339
  %34 = load i8, i8* %29, align 1, !dbg !8339
  %35 = xor i8 %9, %6, !dbg !8339
  %36 = xor i8 %35, %11, !dbg !8338
  %37 = xor i8 %36, %16, !dbg !8338
  %38 = xor i8 %37, %18, !dbg !8337
  %39 = xor i8 %38, %19, !dbg !8337
  %40 = xor i8 %39, %24, !dbg !8336
  %41 = xor i8 %40, %27, !dbg !8336
  %42 = xor i8 %41, %28, !dbg !8340
  %43 = xor i8 %42, %33, !dbg !8341
  %44 = xor i8 %43, %34, !dbg !8342
  store i8 %44, i8* %0, align 1, !dbg !8343
  %45 = load i8, i8* %1, align 1, !dbg !8344
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #26, !dbg !8344
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #26, !dbg !8344
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #26, !dbg !8344
  %49 = load i8, i8* %1, align 1, !dbg !8344
  %50 = load i8, i8* %12, align 1, !dbg !8345
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #26, !dbg !8345
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #26, !dbg !8345
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #26, !dbg !8345
  %54 = load i8, i8* %12, align 1, !dbg !8345
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #26, !dbg !8345
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #26, !dbg !8345
  %57 = load i8, i8* %12, align 1, !dbg !8345
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #26, !dbg !8345
  %59 = load i8, i8* %20, align 1, !dbg !8346
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #26, !dbg !8346
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #26, !dbg !8346
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #26, !dbg !8346
  %63 = load i8, i8* %20, align 1, !dbg !8346
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #26, !dbg !8346
  %65 = load i8, i8* %20, align 1, !dbg !8346
  %66 = load i8, i8* %29, align 1, !dbg !8347
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #26, !dbg !8347
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #26, !dbg !8347
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #26, !dbg !8347
  %70 = load i8, i8* %29, align 1, !dbg !8347
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #26, !dbg !8347
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #26, !dbg !8347
  %73 = load i8, i8* %29, align 1, !dbg !8347
  %74 = xor i8 %49, %48, !dbg !8347
  %75 = xor i8 %74, %53, !dbg !8347
  %76 = xor i8 %75, %56, !dbg !8346
  %77 = xor i8 %76, %58, !dbg !8346
  %78 = xor i8 %77, %62, !dbg !8345
  %79 = xor i8 %78, %64, !dbg !8345
  %80 = xor i8 %79, %65, !dbg !8344
  %81 = xor i8 %80, %69, !dbg !8348
  %82 = xor i8 %81, %72, !dbg !8349
  %83 = xor i8 %82, %73, !dbg !8350
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8351
  store i8 %83, i8* %84, align 1, !dbg !8352
  %85 = load i8, i8* %1, align 1, !dbg !8353
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #26, !dbg !8353
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #26, !dbg !8353
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #26, !dbg !8353
  %89 = load i8, i8* %1, align 1, !dbg !8353
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #26, !dbg !8353
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #26, !dbg !8353
  %92 = load i8, i8* %1, align 1, !dbg !8353
  %93 = load i8, i8* %12, align 1, !dbg !8354
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #26, !dbg !8354
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #26, !dbg !8354
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #26, !dbg !8354
  %97 = load i8, i8* %12, align 1, !dbg !8354
  %98 = load i8, i8* %20, align 1, !dbg !8355
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #26, !dbg !8355
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #26, !dbg !8355
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #26, !dbg !8355
  %102 = load i8, i8* %20, align 1, !dbg !8355
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #26, !dbg !8355
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #26, !dbg !8355
  %105 = load i8, i8* %20, align 1, !dbg !8355
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #26, !dbg !8355
  %107 = load i8, i8* %29, align 1, !dbg !8356
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #26, !dbg !8356
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #26, !dbg !8356
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #26, !dbg !8356
  %111 = load i8, i8* %29, align 1, !dbg !8356
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #26, !dbg !8356
  %113 = load i8, i8* %29, align 1, !dbg !8356
  %114 = xor i8 %91, %88, !dbg !8356
  %115 = xor i8 %114, %92, !dbg !8356
  %116 = xor i8 %115, %96, !dbg !8355
  %117 = xor i8 %116, %97, !dbg !8355
  %118 = xor i8 %117, %101, !dbg !8354
  %119 = xor i8 %118, %104, !dbg !8353
  %120 = xor i8 %119, %106, !dbg !8353
  %121 = xor i8 %120, %110, !dbg !8357
  %122 = xor i8 %121, %112, !dbg !8358
  %123 = xor i8 %122, %113, !dbg !8359
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !8360
  store i8 %123, i8* %124, align 1, !dbg !8361
  %125 = load i8, i8* %1, align 1, !dbg !8362
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #26, !dbg !8362
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #26, !dbg !8362
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #26, !dbg !8362
  %129 = load i8, i8* %1, align 1, !dbg !8362
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #26, !dbg !8362
  %131 = load i8, i8* %1, align 1, !dbg !8362
  %132 = load i8, i8* %12, align 1, !dbg !8363
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #26, !dbg !8363
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #26, !dbg !8363
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #26, !dbg !8363
  %136 = load i8, i8* %12, align 1, !dbg !8363
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #26, !dbg !8363
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #26, !dbg !8363
  %139 = load i8, i8* %12, align 1, !dbg !8363
  %140 = load i8, i8* %20, align 1, !dbg !8364
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #26, !dbg !8364
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #26, !dbg !8364
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #26, !dbg !8364
  %144 = load i8, i8* %20, align 1, !dbg !8364
  %145 = load i8, i8* %29, align 1, !dbg !8365
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #26, !dbg !8365
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #26, !dbg !8365
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #26, !dbg !8365
  %149 = load i8, i8* %29, align 1, !dbg !8365
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #26, !dbg !8365
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #26, !dbg !8365
  %152 = load i8, i8* %29, align 1, !dbg !8365
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #26, !dbg !8365
  %154 = xor i8 %130, %128, !dbg !8365
  %155 = xor i8 %154, %131, !dbg !8365
  %156 = xor i8 %155, %135, !dbg !8364
  %157 = xor i8 %156, %138, !dbg !8363
  %158 = xor i8 %157, %139, !dbg !8363
  %159 = xor i8 %158, %143, !dbg !8362
  %160 = xor i8 %159, %144, !dbg !8362
  %161 = xor i8 %160, %148, !dbg !8366
  %162 = xor i8 %161, %151, !dbg !8367
  %163 = xor i8 %162, %153, !dbg !8368
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !8369
  store i8 %163, i8* %164, align 1, !dbg !8370
  ret void, !dbg !8371
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #17 !dbg !8372 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !8376, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.value(metadata i8* %1, metadata !8377, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !8378, metadata !DIExpression()), !dbg !8385
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !8386
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !8388
  br i1 %5, label %80, label %9, !dbg !8388

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !8382, metadata !DIExpression()), !dbg !8384
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !8389
  br label %36, !dbg !8393

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8382, metadata !DIExpression()), !dbg !8384
  %11 = shl nuw nsw i32 %10, 2, !dbg !8394
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !8398
  %13 = load i8, i8* %12, align 1, !dbg !8398
  %14 = zext i8 %13 to i32, !dbg !8398
  %15 = shl nuw i32 %14, 24, !dbg !8399
  %16 = or i32 %11, 1, !dbg !8400
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8401
  %18 = load i8, i8* %17, align 1, !dbg !8401
  %19 = zext i8 %18 to i32, !dbg !8401
  %20 = shl nuw nsw i32 %19, 16, !dbg !8402
  %21 = or i32 %20, %15, !dbg !8403
  %22 = or i32 %11, 2, !dbg !8404
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !8405
  %24 = load i8, i8* %23, align 1, !dbg !8405
  %25 = zext i8 %24 to i32, !dbg !8405
  %26 = shl nuw nsw i32 %25, 8, !dbg !8406
  %27 = or i32 %21, %26, !dbg !8407
  %28 = or i32 %11, 3, !dbg !8408
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !8409
  %30 = load i8, i8* %29, align 1, !dbg !8409
  %31 = zext i8 %30 to i32, !dbg !8410
  %32 = or i32 %27, %31, !dbg !8411
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !8412
  store i32 %32, i32* %33, align 4, !dbg !8413
  %34 = add nuw nsw i32 %10, 1, !dbg !8414
  call void @llvm.dbg.value(metadata i32 %34, metadata !8382, metadata !DIExpression()), !dbg !8384
  %35 = icmp eq i32 %34, 4, !dbg !8415
  br i1 %35, label %6, label %9, !dbg !8416, !llvm.loop !8417

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !8389
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8382, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.value(metadata i32 %37, metadata !8383, metadata !DIExpression()), !dbg !8384
  %39 = and i32 %38, 3, !dbg !8419
  %40 = icmp eq i32 %39, 0, !dbg !8421
  br i1 %40, label %41, label %71, !dbg !8422

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #25, !dbg !8423
  %43 = lshr i32 %42, 24, !dbg !8423
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !8423
  %45 = load i8, i8* %44, align 1, !dbg !8423
  %46 = zext i8 %45 to i32, !dbg !8423
  %47 = shl nuw i32 %46, 24, !dbg !8423
  %48 = lshr i32 %42, 16, !dbg !8423
  %49 = and i32 %48, 255, !dbg !8423
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !8423
  %51 = load i8, i8* %50, align 1, !dbg !8423
  %52 = zext i8 %51 to i32, !dbg !8423
  %53 = shl nuw nsw i32 %52, 16, !dbg !8423
  %54 = or i32 %53, %47, !dbg !8423
  %55 = lshr i32 %42, 8, !dbg !8423
  %56 = and i32 %55, 255, !dbg !8423
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !8423
  %58 = load i8, i8* %57, align 1, !dbg !8423
  %59 = zext i8 %58 to i32, !dbg !8423
  %60 = shl nuw nsw i32 %59, 8, !dbg !8423
  %61 = or i32 %54, %60, !dbg !8423
  %62 = and i32 %42, 255, !dbg !8423
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !8423
  %64 = load i8, i8* %63, align 1, !dbg !8423
  %65 = zext i8 %64 to i32, !dbg !8423
  %66 = or i32 %61, %65, !dbg !8423
  %67 = lshr i32 %38, 2, !dbg !8425
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !8426
  %69 = load i32, i32* %68, align 4, !dbg !8426
  %70 = xor i32 %66, %69, !dbg !8427
  call void @llvm.dbg.value(metadata i32 %70, metadata !8383, metadata !DIExpression()), !dbg !8384
  br label %71, !dbg !8428

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !8429
  call void @llvm.dbg.value(metadata i32 %72, metadata !8383, metadata !DIExpression()), !dbg !8384
  %73 = add nsw i32 %38, -4, !dbg !8430
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !8431
  %75 = load i32, i32* %74, align 4, !dbg !8431
  %76 = xor i32 %75, %72, !dbg !8432
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !8433
  store i32 %76, i32* %77, align 4, !dbg !8434
  %78 = add nuw nsw i32 %38, 1, !dbg !8435
  call void @llvm.dbg.value(metadata i32 %78, metadata !8382, metadata !DIExpression()), !dbg !8384
  %79 = icmp eq i32 %78, 44, !dbg !8436
  br i1 %79, label %80, label %36, !dbg !8393, !llvm.loop !8437

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !8384
  ret i32 %81, !dbg !8439
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !8440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8444, metadata !DIExpression()), !dbg !8445
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !8446
  ret i32 %2, !dbg !8447
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !8448 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8453, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i8* %1, metadata !8454, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !8455, metadata !DIExpression()), !dbg !8458
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !8459
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #24, !dbg !8459
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !8456, metadata !DIExpression()), !dbg !8460
  %6 = icmp eq i8* %0, null, !dbg !8461
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !8463
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !8463
  br i1 %10, label %23, label %11, !dbg !8463

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #26, !dbg !8464
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !8465
  call fastcc void @add_round_key.71(i8* noundef nonnull %5, i32* noundef nonnull %13) #25, !dbg !8466
  call void @llvm.dbg.value(metadata i32 0, metadata !8457, metadata !DIExpression()), !dbg !8458
  br label %14, !dbg !8467

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8457, metadata !DIExpression()), !dbg !8458
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #25, !dbg !8469
  call fastcc void @shift_rows(i8* noundef nonnull %5) #25, !dbg !8472
  call fastcc void @mix_columns(i8* noundef nonnull %5) #25, !dbg !8473
  %16 = add nuw nsw i32 %15, 1, !dbg !8474
  %17 = shl nuw nsw i32 %16, 2, !dbg !8475
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !8476
  call fastcc void @add_round_key.71(i8* noundef nonnull %5, i32* noundef nonnull %18) #25, !dbg !8477
  call void @llvm.dbg.value(metadata i32 %16, metadata !8457, metadata !DIExpression()), !dbg !8458
  %19 = icmp eq i32 %16, 9, !dbg !8478
  br i1 %19, label %20, label %14, !dbg !8467, !llvm.loop !8479

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #25, !dbg !8481
  call fastcc void @shift_rows(i8* noundef nonnull %5) #25, !dbg !8482
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !8483
  call fastcc void @add_round_key.71(i8* noundef nonnull %5, i32* noundef nonnull %21) #25, !dbg !8484
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #26, !dbg !8485
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #26, !dbg !8486
  br label %23, !dbg !8487

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !8458
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !8488
  ret i32 %24, !dbg !8488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.71(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !8489 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8491, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.value(metadata i32* %1, metadata !8492, metadata !DIExpression()), !dbg !8493
  %3 = load i32, i32* %1, align 4, !dbg !8494
  %4 = lshr i32 %3, 24, !dbg !8495
  %5 = load i8, i8* %0, align 1, !dbg !8496
  %6 = trunc i32 %4 to i8, !dbg !8496
  %7 = xor i8 %5, %6, !dbg !8496
  store i8 %7, i8* %0, align 1, !dbg !8496
  %8 = load i32, i32* %1, align 4, !dbg !8497
  %9 = lshr i32 %8, 16, !dbg !8498
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8499
  %11 = load i8, i8* %10, align 1, !dbg !8500
  %12 = trunc i32 %9 to i8, !dbg !8500
  %13 = xor i8 %11, %12, !dbg !8500
  store i8 %13, i8* %10, align 1, !dbg !8500
  %14 = load i32, i32* %1, align 4, !dbg !8501
  %15 = lshr i32 %14, 8, !dbg !8502
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !8503
  %17 = load i8, i8* %16, align 1, !dbg !8504
  %18 = trunc i32 %15 to i8, !dbg !8504
  %19 = xor i8 %17, %18, !dbg !8504
  store i8 %19, i8* %16, align 1, !dbg !8504
  %20 = load i32, i32* %1, align 4, !dbg !8505
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !8506
  %22 = load i8, i8* %21, align 1, !dbg !8507
  %23 = trunc i32 %20 to i8, !dbg !8507
  %24 = xor i8 %22, %23, !dbg !8507
  store i8 %24, i8* %21, align 1, !dbg !8507
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !8508
  %26 = load i32, i32* %25, align 4, !dbg !8508
  %27 = lshr i32 %26, 24, !dbg !8509
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8510
  %29 = load i8, i8* %28, align 1, !dbg !8511
  %30 = trunc i32 %27 to i8, !dbg !8511
  %31 = xor i8 %29, %30, !dbg !8511
  store i8 %31, i8* %28, align 1, !dbg !8511
  %32 = load i32, i32* %25, align 4, !dbg !8512
  %33 = lshr i32 %32, 16, !dbg !8513
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !8514
  %35 = load i8, i8* %34, align 1, !dbg !8515
  %36 = trunc i32 %33 to i8, !dbg !8515
  %37 = xor i8 %35, %36, !dbg !8515
  store i8 %37, i8* %34, align 1, !dbg !8515
  %38 = load i32, i32* %25, align 4, !dbg !8516
  %39 = lshr i32 %38, 8, !dbg !8517
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !8518
  %41 = load i8, i8* %40, align 1, !dbg !8519
  %42 = trunc i32 %39 to i8, !dbg !8519
  %43 = xor i8 %41, %42, !dbg !8519
  store i8 %43, i8* %40, align 1, !dbg !8519
  %44 = load i32, i32* %25, align 4, !dbg !8520
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !8521
  %46 = load i8, i8* %45, align 1, !dbg !8522
  %47 = trunc i32 %44 to i8, !dbg !8522
  %48 = xor i8 %46, %47, !dbg !8522
  store i8 %48, i8* %45, align 1, !dbg !8522
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !8523
  %50 = load i32, i32* %49, align 4, !dbg !8523
  %51 = lshr i32 %50, 24, !dbg !8524
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8525
  %53 = load i8, i8* %52, align 1, !dbg !8526
  %54 = trunc i32 %51 to i8, !dbg !8526
  %55 = xor i8 %53, %54, !dbg !8526
  store i8 %55, i8* %52, align 1, !dbg !8526
  %56 = load i32, i32* %49, align 4, !dbg !8527
  %57 = lshr i32 %56, 16, !dbg !8528
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !8529
  %59 = load i8, i8* %58, align 1, !dbg !8530
  %60 = trunc i32 %57 to i8, !dbg !8530
  %61 = xor i8 %59, %60, !dbg !8530
  store i8 %61, i8* %58, align 1, !dbg !8530
  %62 = load i32, i32* %49, align 4, !dbg !8531
  %63 = lshr i32 %62, 8, !dbg !8532
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !8533
  %65 = load i8, i8* %64, align 1, !dbg !8534
  %66 = trunc i32 %63 to i8, !dbg !8534
  %67 = xor i8 %65, %66, !dbg !8534
  store i8 %67, i8* %64, align 1, !dbg !8534
  %68 = load i32, i32* %49, align 4, !dbg !8535
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !8536
  %70 = load i8, i8* %69, align 1, !dbg !8537
  %71 = trunc i32 %68 to i8, !dbg !8537
  %72 = xor i8 %70, %71, !dbg !8537
  store i8 %72, i8* %69, align 1, !dbg !8537
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !8538
  %74 = load i32, i32* %73, align 4, !dbg !8538
  %75 = lshr i32 %74, 24, !dbg !8539
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8540
  %77 = load i8, i8* %76, align 1, !dbg !8541
  %78 = trunc i32 %75 to i8, !dbg !8541
  %79 = xor i8 %77, %78, !dbg !8541
  store i8 %79, i8* %76, align 1, !dbg !8541
  %80 = load i32, i32* %73, align 4, !dbg !8542
  %81 = lshr i32 %80, 16, !dbg !8543
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !8544
  %83 = load i8, i8* %82, align 1, !dbg !8545
  %84 = trunc i32 %81 to i8, !dbg !8545
  %85 = xor i8 %83, %84, !dbg !8545
  store i8 %85, i8* %82, align 1, !dbg !8545
  %86 = load i32, i32* %73, align 4, !dbg !8546
  %87 = lshr i32 %86, 8, !dbg !8547
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !8548
  %89 = load i8, i8* %88, align 1, !dbg !8549
  %90 = trunc i32 %87 to i8, !dbg !8549
  %91 = xor i8 %89, %90, !dbg !8549
  store i8 %91, i8* %88, align 1, !dbg !8549
  %92 = load i32, i32* %73, align 4, !dbg !8550
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !8551
  %94 = load i8, i8* %93, align 1, !dbg !8552
  %95 = trunc i32 %92 to i8, !dbg !8552
  %96 = xor i8 %94, %95, !dbg !8552
  store i8 %96, i8* %93, align 1, !dbg !8552
  ret void, !dbg !8553
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !8554 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8556, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.value(metadata i32 0, metadata !8557, metadata !DIExpression()), !dbg !8558
  br label %2, !dbg !8559

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8557, metadata !DIExpression()), !dbg !8558
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8561
  %5 = load i8, i8* %4, align 1, !dbg !8561
  %6 = zext i8 %5 to i32, !dbg !8564
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !8564
  %8 = load i8, i8* %7, align 1, !dbg !8564
  store i8 %8, i8* %4, align 1, !dbg !8565
  %9 = add nuw nsw i32 %3, 1, !dbg !8566
  call void @llvm.dbg.value(metadata i32 %9, metadata !8557, metadata !DIExpression()), !dbg !8558
  %10 = icmp eq i32 %9, 16, !dbg !8567
  br i1 %10, label %11, label %2, !dbg !8559, !llvm.loop !8568

11:                                               ; preds = %2
  ret void, !dbg !8570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !8571 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8573, metadata !DIExpression()), !dbg !8575
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !8576
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8576
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !8574, metadata !DIExpression()), !dbg !8577
  %4 = load i8, i8* %0, align 1, !dbg !8578
  store i8 %4, i8* %3, align 1, !dbg !8579
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !8580
  %6 = load i8, i8* %5, align 1, !dbg !8580
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !8581
  store i8 %6, i8* %7, align 1, !dbg !8582
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !8583
  %9 = load i8, i8* %8, align 1, !dbg !8583
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !8584
  store i8 %9, i8* %10, align 1, !dbg !8585
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !8586
  %12 = load i8, i8* %11, align 1, !dbg !8586
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !8587
  store i8 %12, i8* %13, align 1, !dbg !8588
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8589
  %15 = load i8, i8* %14, align 1, !dbg !8589
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !8590
  store i8 %15, i8* %16, align 1, !dbg !8591
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !8592
  %18 = load i8, i8* %17, align 1, !dbg !8592
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !8593
  store i8 %18, i8* %19, align 1, !dbg !8594
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !8595
  %21 = load i8, i8* %20, align 1, !dbg !8595
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !8596
  store i8 %21, i8* %22, align 1, !dbg !8597
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !8598
  %24 = load i8, i8* %23, align 1, !dbg !8598
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !8599
  store i8 %24, i8* %25, align 1, !dbg !8600
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8601
  %27 = load i8, i8* %26, align 1, !dbg !8601
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !8602
  store i8 %27, i8* %28, align 1, !dbg !8603
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !8604
  %30 = load i8, i8* %29, align 1, !dbg !8604
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !8605
  store i8 %30, i8* %31, align 1, !dbg !8606
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !8607
  %33 = load i8, i8* %32, align 1, !dbg !8607
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !8608
  store i8 %33, i8* %34, align 1, !dbg !8609
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !8610
  %36 = load i8, i8* %35, align 1, !dbg !8610
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !8611
  store i8 %36, i8* %37, align 1, !dbg !8612
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8613
  %39 = load i8, i8* %38, align 1, !dbg !8613
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !8614
  store i8 %39, i8* %40, align 1, !dbg !8615
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8616
  %42 = load i8, i8* %41, align 1, !dbg !8616
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !8617
  store i8 %42, i8* %43, align 1, !dbg !8618
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !8619
  %45 = load i8, i8* %44, align 1, !dbg !8619
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !8620
  store i8 %45, i8* %46, align 1, !dbg !8621
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !8622
  %48 = load i8, i8* %47, align 1, !dbg !8622
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !8623
  store i8 %48, i8* %49, align 1, !dbg !8624
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #26, !dbg !8625
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8626
  ret void, !dbg !8626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !8627 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8629, metadata !DIExpression()), !dbg !8631
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !8632
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8632
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !8630, metadata !DIExpression()), !dbg !8633
  call fastcc void @mult_row_column.72(i8* noundef nonnull %3, i8* noundef %0) #25, !dbg !8634
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !8635
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8636
  call fastcc void @mult_row_column.72(i8* noundef nonnull %4, i8* noundef nonnull %5) #25, !dbg !8637
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !8638
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8639
  call fastcc void @mult_row_column.72(i8* noundef nonnull %6, i8* noundef nonnull %7) #25, !dbg !8640
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !8641
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8642
  call fastcc void @mult_row_column.72(i8* noundef nonnull %8, i8* noundef nonnull %9) #25, !dbg !8643
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #26, !dbg !8644
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8645
  ret void, !dbg !8645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.72(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8646 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8648, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i8* %1, metadata !8649, metadata !DIExpression()), !dbg !8650
  %3 = load i8, i8* %1, align 1, !dbg !8651
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #26, !dbg !8652
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !8653
  %6 = load i8, i8* %5, align 1, !dbg !8653
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #26, !dbg !8653
  %8 = load i8, i8* %5, align 1, !dbg !8653
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !8654
  %10 = load i8, i8* %9, align 1, !dbg !8654
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !8655
  %12 = load i8, i8* %11, align 1, !dbg !8655
  %13 = xor i8 %7, %4, !dbg !8653
  %14 = xor i8 %13, %8, !dbg !8656
  %15 = xor i8 %14, %10, !dbg !8657
  %16 = xor i8 %15, %12, !dbg !8658
  store i8 %16, i8* %0, align 1, !dbg !8659
  %17 = load i8, i8* %1, align 1, !dbg !8660
  %18 = load i8, i8* %5, align 1, !dbg !8661
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #26, !dbg !8662
  %20 = load i8, i8* %9, align 1, !dbg !8663
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #26, !dbg !8663
  %22 = load i8, i8* %9, align 1, !dbg !8663
  %23 = load i8, i8* %11, align 1, !dbg !8664
  %24 = xor i8 %19, %17, !dbg !8663
  %25 = xor i8 %24, %21, !dbg !8665
  %26 = xor i8 %25, %22, !dbg !8666
  %27 = xor i8 %26, %23, !dbg !8667
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8668
  store i8 %27, i8* %28, align 1, !dbg !8669
  %29 = load i8, i8* %1, align 1, !dbg !8670
  %30 = load i8, i8* %5, align 1, !dbg !8671
  %31 = load i8, i8* %9, align 1, !dbg !8672
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #26, !dbg !8673
  %33 = load i8, i8* %11, align 1, !dbg !8674
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #26, !dbg !8674
  %35 = load i8, i8* %11, align 1, !dbg !8674
  %36 = xor i8 %30, %29, !dbg !8674
  %37 = xor i8 %36, %32, !dbg !8675
  %38 = xor i8 %37, %34, !dbg !8676
  %39 = xor i8 %38, %35, !dbg !8677
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !8678
  store i8 %39, i8* %40, align 1, !dbg !8679
  %41 = load i8, i8* %1, align 1, !dbg !8680
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #26, !dbg !8680
  %43 = load i8, i8* %1, align 1, !dbg !8680
  %44 = xor i8 %43, %42, !dbg !8680
  %45 = load i8, i8* %5, align 1, !dbg !8681
  %46 = xor i8 %44, %45, !dbg !8682
  %47 = load i8, i8* %9, align 1, !dbg !8683
  %48 = xor i8 %46, %47, !dbg !8684
  %49 = load i8, i8* %11, align 1, !dbg !8685
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #26, !dbg !8686
  %51 = xor i8 %48, %50, !dbg !8687
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !8688
  store i8 %51, i8* %52, align 1, !dbg !8689
  ret void, !dbg !8690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !8691 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8697, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i32 %1, metadata !8698, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %2, metadata !8699, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i32 %3, metadata !8700, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %4, metadata !8701, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !8702, metadata !DIExpression()), !dbg !8706
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !8707
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #24, !dbg !8707
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !8703, metadata !DIExpression()), !dbg !8708
  %9 = icmp eq i8* %0, null, !dbg !8709
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !8711
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !8711
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !8711
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !8711
  %18 = xor i1 %17, true, !dbg !8711
  %19 = or i32 %3, %1, !dbg !8711
  %20 = and i32 %19, 15, !dbg !8711
  %21 = icmp eq i32 %20, 0, !dbg !8711
  %22 = and i1 %21, %18, !dbg !8711
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !8711
  br i1 %25, label %26, label %52, !dbg !8711

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #26, !dbg !8712
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #26, !dbg !8713
  call void @llvm.dbg.value(metadata i8* %0, metadata !8697, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !8706
  call void @llvm.dbg.value(metadata i32 0, metadata !8705, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i32 0, metadata !8704, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %2, metadata !8699, metadata !DIExpression()), !dbg !8706
  br i1 %14, label %52, label %29, !dbg !8714

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !8716
  call void @llvm.dbg.value(metadata i8* %30, metadata !8697, metadata !DIExpression()), !dbg !8706
  br label %31, !dbg !8714

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !8705, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i32 %33, metadata !8704, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %34, metadata !8697, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %35, metadata !8699, metadata !DIExpression()), !dbg !8706
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !8717
  call void @llvm.dbg.value(metadata i8* %36, metadata !8699, metadata !DIExpression()), !dbg !8706
  %37 = load i8, i8* %35, align 1, !dbg !8720
  %38 = add i32 %32, 1, !dbg !8721
  call void @llvm.dbg.value(metadata i32 %38, metadata !8705, metadata !DIExpression()), !dbg !8706
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !8722
  %40 = load i8, i8* %39, align 1, !dbg !8723
  %41 = xor i8 %40, %37, !dbg !8723
  store i8 %41, i8* %39, align 1, !dbg !8723
  %42 = icmp eq i32 %38, 16, !dbg !8724
  br i1 %42, label %43, label %47, !dbg !8726

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #26, !dbg !8727
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #26, !dbg !8729
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !8730
  call void @llvm.dbg.value(metadata i8* %46, metadata !8697, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i32 0, metadata !8705, metadata !DIExpression()), !dbg !8706
  br label %47, !dbg !8731

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !8706
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !8732
  call void @llvm.dbg.value(metadata i32 %49, metadata !8705, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %48, metadata !8697, metadata !DIExpression()), !dbg !8706
  %50 = add nuw i32 %33, 1, !dbg !8733
  call void @llvm.dbg.value(metadata i32 %50, metadata !8704, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %36, metadata !8699, metadata !DIExpression()), !dbg !8706
  %51 = icmp eq i32 %50, %3, !dbg !8734
  br i1 %51, label %52, label %31, !dbg !8714, !llvm.loop !8735

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !8706
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #24, !dbg !8737
  ret i32 %53, !dbg !8737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !8738 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8740, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 %1, metadata !8741, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %2, metadata !8742, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 %3, metadata !8743, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %4, metadata !8744, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !8745, metadata !DIExpression()), !dbg !8750
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !8751
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #24, !dbg !8751
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !8746, metadata !DIExpression()), !dbg !8752
  %9 = icmp eq i8* %0, null, !dbg !8753
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !8755
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !8755
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !8755
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !8755
  %18 = xor i1 %17, true, !dbg !8755
  %19 = or i32 %3, %1, !dbg !8755
  %20 = and i32 %19, 15, !dbg !8755
  %21 = icmp eq i32 %20, 0, !dbg !8755
  %22 = and i1 %21, %18, !dbg !8755
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !8755
  %25 = xor i1 %24, true, !dbg !8755
  %26 = or i1 %14, %25, !dbg !8755
  %27 = zext i1 %24 to i32, !dbg !8755
  br i1 %26, label %51, label %28, !dbg !8755

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !8749, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 %30, metadata !8748, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %31, metadata !8747, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %32, metadata !8740, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %33, metadata !8742, metadata !DIExpression()), !dbg !8750
  %34 = and i32 %30, 15, !dbg !8756
  %35 = icmp eq i32 %34, 0, !dbg !8761
  br i1 %35, label %36, label %39, !dbg !8762

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #26, !dbg !8763
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !8765
  call void @llvm.dbg.value(metadata i8* %38, metadata !8742, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 0, metadata !8749, metadata !DIExpression()), !dbg !8750
  br label %39, !dbg !8766

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !8767
  call void @llvm.dbg.value(metadata i32 %41, metadata !8749, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %40, metadata !8742, metadata !DIExpression()), !dbg !8750
  %42 = add i32 %41, 1, !dbg !8768
  call void @llvm.dbg.value(metadata i32 %42, metadata !8749, metadata !DIExpression()), !dbg !8750
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !8769
  %44 = load i8, i8* %43, align 1, !dbg !8769
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !8770
  call void @llvm.dbg.value(metadata i8* %45, metadata !8747, metadata !DIExpression()), !dbg !8750
  %46 = load i8, i8* %31, align 1, !dbg !8771
  %47 = xor i8 %46, %44, !dbg !8772
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8773
  call void @llvm.dbg.value(metadata i8* %48, metadata !8740, metadata !DIExpression()), !dbg !8750
  store i8 %47, i8* %32, align 1, !dbg !8774
  %49 = add nuw i32 %30, 1, !dbg !8775
  call void @llvm.dbg.value(metadata i32 %49, metadata !8748, metadata !DIExpression()), !dbg !8750
  %50 = icmp eq i32 %49, %3, !dbg !8776
  br i1 %50, label %51, label %28, !dbg !8777, !llvm.loop !8778

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !8750
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #24, !dbg !8780
  ret i32 %52, !dbg !8780
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !8781 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8787, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i8* %2, metadata !8789, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %3, metadata !8790, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i8* %4, metadata !8791, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !8792, metadata !DIExpression()), !dbg !8797
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !8798
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #24, !dbg !8798
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !8793, metadata !DIExpression()), !dbg !8799
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8800
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24, !dbg !8800
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8794, metadata !DIExpression()), !dbg !8801
  %11 = icmp eq i8* %0, null, !dbg !8802
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !8804
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !8804
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !8804
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !8804
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !8804
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !8804
  br i1 %23, label %86, label %24, !dbg !8804

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #26, !dbg !8805
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !8806
  %27 = load i8, i8* %26, align 1, !dbg !8806
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !8807
  %29 = load i8, i8* %28, align 1, !dbg !8807
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8808
  %31 = load i8, i8* %30, align 1, !dbg !8808
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8809
  %33 = load i8, i8* %32, align 1, !dbg !8809
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  call void @llvm.dbg.value(metadata i32 0, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i8* %0, metadata !8787, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i8* %2, metadata !8789, metadata !DIExpression()), !dbg !8797
  %34 = zext i8 %29 to i32, !dbg !8807
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %35 = shl nuw nsw i32 %34, 16, !dbg !8810
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %36 = zext i8 %27 to i32, !dbg !8806
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %37 = shl nuw i32 %36, 24, !dbg !8811
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %38 = or i32 %35, %37, !dbg !8812
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %39 = zext i8 %31 to i32, !dbg !8808
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %40 = shl nuw nsw i32 %39, 8, !dbg !8813
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %41 = or i32 %38, %40, !dbg !8814
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %42 = zext i8 %33 to i32, !dbg !8815
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !8795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8797
  %43 = or i32 %41, %42, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %43, metadata !8795, metadata !DIExpression()), !dbg !8797
  br label %44, !dbg !8817

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %50, metadata !8795, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i8* %51, metadata !8787, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i8* %52, metadata !8789, metadata !DIExpression()), !dbg !8797
  %53 = and i32 %49, 15, !dbg !8819
  %54 = icmp eq i32 %53, 0, !dbg !8823
  br i1 %54, label %55, label %67, !dbg !8824

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #26, !dbg !8825
  %57 = icmp eq i32 %56, 0, !dbg !8825
  br i1 %57, label %86, label %58, !dbg !8828

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %59, metadata !8795, metadata !DIExpression()), !dbg !8797
  %60 = lshr i32 %59, 24, !dbg !8831
  %61 = trunc i32 %60 to i8, !dbg !8832
  store i8 %61, i8* %26, align 1, !dbg !8833
  %62 = lshr i32 %59, 16, !dbg !8834
  %63 = trunc i32 %62 to i8, !dbg !8835
  store i8 %63, i8* %28, align 1, !dbg !8836
  %64 = lshr i32 %59, 8, !dbg !8837
  %65 = trunc i32 %64 to i8, !dbg !8838
  store i8 %65, i8* %30, align 1, !dbg !8839
  %66 = trunc i32 %59 to i8, !dbg !8840
  store i8 %66, i8* %32, align 1, !dbg !8841
  br label %67, !dbg !8842

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !8797
  call void @llvm.dbg.value(metadata i32 %72, metadata !8795, metadata !DIExpression()), !dbg !8797
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !8843
  %74 = load i8, i8* %73, align 1, !dbg !8843
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !8844
  call void @llvm.dbg.value(metadata i8* %75, metadata !8789, metadata !DIExpression()), !dbg !8797
  %76 = load i8, i8* %52, align 1, !dbg !8845
  %77 = xor i8 %76, %74, !dbg !8846
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !8847
  call void @llvm.dbg.value(metadata i8* %78, metadata !8787, metadata !DIExpression()), !dbg !8797
  store i8 %77, i8* %51, align 1, !dbg !8848
  %79 = add nuw i32 %49, 1, !dbg !8849
  call void @llvm.dbg.value(metadata i32 %79, metadata !8796, metadata !DIExpression()), !dbg !8797
  %80 = icmp eq i32 %79, %3, !dbg !8850
  br i1 %80, label %81, label %44, !dbg !8817, !llvm.loop !8851

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !8853
  store i8 %71, i8* %82, align 1, !dbg !8854
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !8855
  store i8 %70, i8* %83, align 1, !dbg !8856
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !8857
  store i8 %69, i8* %84, align 1, !dbg !8858
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !8859
  store i8 %68, i8* %85, align 1, !dbg !8860
  br label %86, !dbg !8861

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !8797
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !8862
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #24, !dbg !8862
  ret i32 %87, !dbg !8862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !8863 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !8868, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !8869, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.value(metadata i8* %2, metadata !8870, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.value(metadata i32 %3, metadata !8871, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.value(metadata i32 %4, metadata !8872, metadata !DIExpression()), !dbg !8873
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !8874
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !8876
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !8876
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !8876
  br i1 %12, label %23, label %13, !dbg !8876

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !8877
  %15 = icmp ult i32 %14, 13, !dbg !8877
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !8877
  br i1 %18, label %19, label %23, !dbg !8877

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !8880
  store i32 %4, i32* %20, align 4, !dbg !8881
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !8882
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !8883
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !8884
  store i8* %2, i8** %22, align 4, !dbg !8885
  br label %23, !dbg !8886

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !8873
  ret i32 %24, !dbg !8887
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !8888 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8892, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %1, metadata !8893, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i8* %2, metadata !8894, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %3, metadata !8895, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i8* %4, metadata !8896, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %5, metadata !8897, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !8898, metadata !DIExpression()), !dbg !8902
  %10 = icmp eq i8* %0, null, !dbg !8903
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !8905
  br i1 %12, label %85, label %13, !dbg !8905

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !8906
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !8907
  br i1 %16, label %85, label %17, !dbg !8907

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8908
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8909
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8909
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8909
  br i1 %24, label %85, label %25, !dbg !8909

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8910
  %27 = load i32, i32* %26, align 4, !dbg !8910
  %28 = add i32 %27, %5, !dbg !8911
  %29 = icmp ugt i32 %28, %1, !dbg !8912
  br i1 %29, label %85, label %30, !dbg !8913

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8914
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #24, !dbg !8914
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8899, metadata !DIExpression()), !dbg !8915
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8916
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #24, !dbg !8916
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !8900, metadata !DIExpression()), !dbg !8917
  %33 = select i1 %18, i32 64, i32 0, !dbg !8918
  %34 = shl i32 %27, 2, !dbg !8919
  %35 = add i32 %34, 248, !dbg !8919
  %36 = and i32 %35, 248, !dbg !8919
  %37 = or i32 %36, %33, !dbg !8920
  %38 = trunc i32 %37 to i8, !dbg !8921
  %39 = or i8 %38, 1, !dbg !8921
  store i8 %39, i8* %31, align 1, !dbg !8922
  call void @llvm.dbg.value(metadata i32 1, metadata !8901, metadata !DIExpression()), !dbg !8902
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8901, metadata !DIExpression()), !dbg !8902
  br label %42, !dbg !8923

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !8901, metadata !DIExpression()), !dbg !8902
  %44 = add nsw i32 %43, -1, !dbg !8925
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !8928
  %46 = load i8, i8* %45, align 1, !dbg !8928
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !8929
  store i8 %46, i8* %47, align 1, !dbg !8930
  %48 = add nuw nsw i32 %43, 1, !dbg !8931
  call void @llvm.dbg.value(metadata i32 %48, metadata !8901, metadata !DIExpression()), !dbg !8902
  %49 = icmp eq i32 %48, 14, !dbg !8932
  br i1 %49, label %50, label %42, !dbg !8923, !llvm.loop !8933

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !8935
  %52 = trunc i32 %51 to i8, !dbg !8936
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8937
  store i8 %52, i8* %53, align 1, !dbg !8938
  %54 = trunc i32 %5 to i8, !dbg !8939
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8940
  store i8 %54, i8* %55, align 1, !dbg !8941
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8942
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8942
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #26, !dbg !8943
  br i1 %18, label %59, label %61, !dbg !8944

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8945
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #25, !dbg !8948
  br label %61, !dbg !8949

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !8950

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8951
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #25, !dbg !8954
  br label %64, !dbg !8955

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !8956
  store i8 0, i8* %55, align 1, !dbg !8957
  store i8 0, i8* %53, align 1, !dbg !8958
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8959
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #25, !dbg !8960
  store i8 0, i8* %55, align 1, !dbg !8961
  store i8 0, i8* %53, align 1, !dbg !8962
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8963
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #26, !dbg !8964
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !8892, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8902
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8902
  %68 = load i32, i32* %26, align 4, !dbg !8965
  %69 = icmp eq i32 %68, 0, !dbg !8968
  br i1 %69, label %84, label %70, !dbg !8969

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !8970
  call void @llvm.dbg.value(metadata i8* %71, metadata !8892, metadata !DIExpression()), !dbg !8902
  br label %72, !dbg !8969

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !8901, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i8* %74, metadata !8892, metadata !DIExpression()), !dbg !8902
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !8971
  %76 = load i8, i8* %75, align 1, !dbg !8971
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !8973
  %78 = load i8, i8* %77, align 1, !dbg !8973
  %79 = xor i8 %78, %76, !dbg !8974
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !8975
  call void @llvm.dbg.value(metadata i8* %80, metadata !8892, metadata !DIExpression()), !dbg !8902
  store i8 %79, i8* %74, align 1, !dbg !8976
  %81 = add nuw i32 %73, 1, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %81, metadata !8901, metadata !DIExpression()), !dbg !8902
  %82 = load i32, i32* %26, align 4, !dbg !8965
  %83 = icmp ult i32 %81, %82, !dbg !8968
  br i1 %83, label %72, label %84, !dbg !8969, !llvm.loop !8978

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #24, !dbg !8980
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #24, !dbg !8980
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !8902
  ret i32 %86, !dbg !8980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !8981 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8985, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8* %1, metadata !8986, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %2, metadata !8987, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %3, metadata !8988, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !8989, metadata !DIExpression()), !dbg !8991
  %6 = icmp eq i32 %3, 0, !dbg !8992
  br i1 %6, label %17, label %7, !dbg !8994

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !8995
  %9 = load i8, i8* %0, align 1, !dbg !8997
  %10 = trunc i32 %8 to i8, !dbg !8997
  %11 = xor i8 %9, %10, !dbg !8997
  store i8 %11, i8* %0, align 1, !dbg !8997
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8998
  %13 = load i8, i8* %12, align 1, !dbg !8999
  %14 = trunc i32 %2 to i8, !dbg !8999
  %15 = xor i8 %13, %14, !dbg !8999
  store i8 %15, i8* %12, align 1, !dbg !8999
  %16 = add i32 %2, 2, !dbg !9000
  call void @llvm.dbg.value(metadata i32 %16, metadata !8987, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 2, metadata !8990, metadata !DIExpression()), !dbg !8991
  br label %17, !dbg !9001

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !9002
  call void @llvm.dbg.value(metadata i32 %19, metadata !8990, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %18, metadata !8987, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8* %1, metadata !8986, metadata !DIExpression()), !dbg !8991
  %20 = icmp ult i32 %19, %18, !dbg !9003
  br i1 %20, label %21, label %39, !dbg !9004

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !8990, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8* %23, metadata !8986, metadata !DIExpression()), !dbg !8991
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9005
  call void @llvm.dbg.value(metadata i8* %24, metadata !8986, metadata !DIExpression()), !dbg !8991
  %25 = load i8, i8* %23, align 1, !dbg !9007
  %26 = add i32 %22, 1, !dbg !9008
  call void @llvm.dbg.value(metadata i32 %26, metadata !8990, metadata !DIExpression()), !dbg !8991
  %27 = and i32 %22, 15, !dbg !9009
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !9010
  %29 = load i8, i8* %28, align 1, !dbg !9011
  %30 = xor i8 %29, %25, !dbg !9011
  store i8 %30, i8* %28, align 1, !dbg !9011
  %31 = and i32 %26, 15, !dbg !9012
  %32 = icmp eq i32 %31, 0, !dbg !9014
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !9015
  br i1 %34, label %35, label %37, !dbg !9015

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #26, !dbg !9016
  br label %37, !dbg !9018

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !8990, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8* %24, metadata !8986, metadata !DIExpression()), !dbg !8991
  %38 = icmp eq i32 %26, %18, !dbg !9003
  br i1 %38, label %39, label %21, !dbg !9004, !llvm.loop !9019

39:                                               ; preds = %37, %17
  ret void, !dbg !9021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !9022 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9027, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i32 %1, metadata !9028, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i8* %2, metadata !9029, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i32 %3, metadata !9030, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i8* %4, metadata !9031, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !9032, metadata !DIExpression()), !dbg !9037
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !9038
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #24, !dbg !9038
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !9033, metadata !DIExpression()), !dbg !9039
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !9040
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24, !dbg !9040
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !9034, metadata !DIExpression()), !dbg !9041
  %11 = icmp eq i8* %0, null, !dbg !9042
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !9044
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !9044
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !9044
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !9044
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !9044
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !9044
  br i1 %23, label %63, label %24, !dbg !9044

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #26, !dbg !9045
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !9046
  %27 = load i8, i8* %26, align 1, !dbg !9046
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !9047
  %29 = load i8, i8* %28, align 1, !dbg !9047
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !9035, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !9037
  call void @llvm.dbg.value(metadata i32 0, metadata !9036, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i8* %0, metadata !9027, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i8* %2, metadata !9029, metadata !DIExpression()), !dbg !9037
  %30 = zext i8 %27 to i16, !dbg !9046
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !9035, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !9037
  %31 = shl nuw i16 %30, 8, !dbg !9048
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !9035, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !9037
  %32 = zext i8 %29 to i16, !dbg !9049
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !9035, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !9037
  %33 = or i16 %31, %32, !dbg !9050
  call void @llvm.dbg.value(metadata i16 %33, metadata !9035, metadata !DIExpression()), !dbg !9037
  br label %34, !dbg !9051

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9036, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i16 %36, metadata !9035, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i8* %37, metadata !9027, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i8* %38, metadata !9029, metadata !DIExpression()), !dbg !9037
  %39 = and i32 %35, 15, !dbg !9053
  %40 = icmp eq i32 %39, 0, !dbg !9057
  br i1 %40, label %41, label %48, !dbg !9058

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !9059
  call void @llvm.dbg.value(metadata i16 %42, metadata !9035, metadata !DIExpression()), !dbg !9037
  %43 = lshr i16 %42, 8, !dbg !9061
  %44 = trunc i16 %43 to i8, !dbg !9062
  store i8 %44, i8* %26, align 1, !dbg !9063
  %45 = trunc i16 %42 to i8, !dbg !9064
  store i8 %45, i8* %28, align 1, !dbg !9065
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #26, !dbg !9066
  %47 = icmp eq i32 %46, 0, !dbg !9066
  br i1 %47, label %63, label %48, !dbg !9068

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !9037
  call void @llvm.dbg.value(metadata i16 %49, metadata !9035, metadata !DIExpression()), !dbg !9037
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !9069
  %51 = load i8, i8* %50, align 1, !dbg !9069
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !9070
  call void @llvm.dbg.value(metadata i8* %52, metadata !9029, metadata !DIExpression()), !dbg !9037
  %53 = load i8, i8* %38, align 1, !dbg !9071
  %54 = xor i8 %53, %51, !dbg !9072
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !9073
  call void @llvm.dbg.value(metadata i8* %55, metadata !9027, metadata !DIExpression()), !dbg !9037
  store i8 %54, i8* %37, align 1, !dbg !9074
  %56 = add nuw i32 %35, 1, !dbg !9075
  call void @llvm.dbg.value(metadata i32 %56, metadata !9036, metadata !DIExpression()), !dbg !9037
  %57 = icmp eq i32 %56, %3, !dbg !9076
  br i1 %57, label %58, label %34, !dbg !9051, !llvm.loop !9077

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !9079
  %60 = load i8, i8* %28, align 1, !dbg !9080
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !9081
  store i8 %59, i8* %61, align 1, !dbg !9082
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !9083
  store i8 %60, i8* %62, align 1, !dbg !9084
  br label %63, !dbg !9085

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !9086
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #24, !dbg !9086
  ret void, !dbg !9086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !9087 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9089, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %1, metadata !9090, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i8* %2, metadata !9091, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %3, metadata !9092, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i8* %4, metadata !9093, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %5, metadata !9094, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !9095, metadata !DIExpression()), !dbg !9099
  %10 = icmp eq i8* %0, null, !dbg !9100
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !9102
  br i1 %12, label %106, label %13, !dbg !9102

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !9103
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !9104
  br i1 %16, label %106, label %17, !dbg !9104

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !9105
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !9106
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !9106
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !9106
  br i1 %24, label %106, label %25, !dbg !9106

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !9107
  %27 = load i32, i32* %26, align 4, !dbg !9107
  %28 = sub i32 %5, %27, !dbg !9108
  %29 = icmp ugt i32 %28, %1, !dbg !9109
  br i1 %29, label %106, label %30, !dbg !9110

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !9111
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #24, !dbg !9111
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !9096, metadata !DIExpression()), !dbg !9112
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !9113
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #24, !dbg !9113
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !9097, metadata !DIExpression()), !dbg !9114
  store i8 1, i8* %31, align 1, !dbg !9115
  call void @llvm.dbg.value(metadata i32 1, metadata !9098, metadata !DIExpression()), !dbg !9099
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !9098, metadata !DIExpression()), !dbg !9099
  br label %35, !dbg !9116

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !9098, metadata !DIExpression()), !dbg !9099
  %37 = add nsw i32 %36, -1, !dbg !9118
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !9121
  %39 = load i8, i8* %38, align 1, !dbg !9121
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !9122
  store i8 %39, i8* %40, align 1, !dbg !9123
  %41 = add nuw nsw i32 %36, 1, !dbg !9124
  call void @llvm.dbg.value(metadata i32 %41, metadata !9098, metadata !DIExpression()), !dbg !9099
  %42 = icmp eq i32 %41, 14, !dbg !9125
  br i1 %42, label %43, label %35, !dbg !9116, !llvm.loop !9126

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !9128
  store i8 0, i8* %44, align 1, !dbg !9129
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !9130
  store i8 0, i8* %45, align 1, !dbg !9131
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !9132
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !9132
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #25, !dbg !9133
  store i8 0, i8* %44, align 1, !dbg !9134
  store i8 0, i8* %45, align 1, !dbg !9135
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !9136
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #26, !dbg !9137
  call void @llvm.dbg.value(metadata i32 0, metadata !9098, metadata !DIExpression()), !dbg !9099
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !9098, metadata !DIExpression()), !dbg !9099
  %51 = icmp eq i32 %50, 0, !dbg !9138
  br i1 %51, label %66, label %52, !dbg !9141

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !9141

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !9098, metadata !DIExpression()), !dbg !9099
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !9142
  %59 = load i8, i8* %58, align 1, !dbg !9144
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !9145
  %61 = load i8, i8* %60, align 1, !dbg !9145
  %62 = xor i8 %61, %59, !dbg !9146
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !9147
  store i8 %62, i8* %63, align 1, !dbg !9148
  %64 = add nuw i32 %57, 1, !dbg !9149
  call void @llvm.dbg.value(metadata i32 %64, metadata !9098, metadata !DIExpression()), !dbg !9099
  %65 = icmp eq i32 %64, %50, !dbg !9138
  br i1 %65, label %66, label %56, !dbg !9141, !llvm.loop !9150

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !9152
  %68 = shl i32 %50, 2, !dbg !9153
  %69 = add i32 %68, 248, !dbg !9153
  %70 = and i32 %69, 248, !dbg !9153
  %71 = or i32 %70, %67, !dbg !9154
  %72 = trunc i32 %71 to i8, !dbg !9155
  %73 = or i8 %72, 1, !dbg !9155
  store i8 %73, i8* %31, align 1, !dbg !9156
  call void @llvm.dbg.value(metadata i32 1, metadata !9098, metadata !DIExpression()), !dbg !9099
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !9157

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !9098, metadata !DIExpression()), !dbg !9099
  %77 = add nsw i32 %76, -1, !dbg !9159
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !9162
  %79 = load i8, i8* %78, align 1, !dbg !9162
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !9163
  store i8 %79, i8* %80, align 1, !dbg !9164
  %81 = add nuw nsw i32 %76, 1, !dbg !9165
  call void @llvm.dbg.value(metadata i32 %81, metadata !9098, metadata !DIExpression()), !dbg !9099
  %82 = icmp eq i32 %81, 14, !dbg !9166
  br i1 %82, label %83, label %75, !dbg !9157, !llvm.loop !9167

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !9169
  %85 = lshr i32 %84, 8, !dbg !9170
  %86 = trunc i32 %85 to i8, !dbg !9171
  store i8 %86, i8* %45, align 1, !dbg !9172
  %87 = trunc i32 %84 to i8, !dbg !9173
  store i8 %87, i8* %44, align 1, !dbg !9174
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !9175
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #26, !dbg !9176
  br i1 %18, label %90, label %92, !dbg !9177

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !9178
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #25, !dbg !9181
  br label %92, !dbg !9182

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !9183

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !9184
  %95 = sub i32 %5, %94, !dbg !9187
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !9188
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #25, !dbg !9189
  br label %97, !dbg !9190

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !9191
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #26, !dbg !9193
  %100 = icmp eq i32 %99, 0, !dbg !9194
  br i1 %100, label %104, label %101, !dbg !9195

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !9196
  %103 = sub i32 %5, %102, !dbg !9198
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #26, !dbg !9199
  br label %104, !dbg !9200

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !9201
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #24, !dbg !9202
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #24, !dbg !9202
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !9099
  ret i32 %107, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9252, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !9253, metadata !DIExpression()), !dbg !9254
  %3 = icmp eq %struct.__esf* %1, null, !dbg !9255
  br i1 %3, label %5, label %4, !dbg !9257

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !9258
  br label %5, !dbg !9260

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !9261
  ret void, !dbg !9262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9263 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9269
  %3 = load i32, i32* %2, align 4, !dbg !9269
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !9269
  %5 = load i32, i32* %4, align 4, !dbg !9269
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !9269
  %7 = load i32, i32* %6, align 4, !dbg !9269
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #26, !dbg !9269
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !9274
  %9 = load i32, i32* %8, align 4, !dbg !9274
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !9274
  %11 = load i32, i32* %10, align 4, !dbg !9274
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !9274
  %13 = load i32, i32* %12, align 4, !dbg !9274
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.74, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #26, !dbg !9274
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !9279
  %15 = load i32, i32* %14, align 4, !dbg !9279
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.75, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #26, !dbg !9279
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9284
  %17 = load i32, i32* %16, align 4, !dbg !9284
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.76, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !9284
  ret void, !dbg !9289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !9290 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9307, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !9308, metadata !DIExpression()), !dbg !9310
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9311
  %4 = load i32, i32* %3, align 4, !dbg !9311
  call void @llvm.dbg.value(metadata i32 %4, metadata !9309, metadata !DIExpression()), !dbg !9310
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !9312
  ret void, !dbg !9313
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9314 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9318, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i8* %0, metadata !9319, metadata !DIExpression()), !dbg !9321
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !9322
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !9322
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !9320, metadata !DIExpression()), !dbg !9323
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !9323
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !9324
  %5 = bitcast i8* %4 to i32*, !dbg !9324
  %6 = load i32, i32* %5, align 4, !dbg !9324
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !9325
  store i32 %6, i32* %7, align 4, !dbg !9326
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !9327
  unreachable, !dbg !9328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9332, metadata !DIExpression()), !dbg !9333
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !9334
  ret void, !dbg !9335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !9336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9340, metadata !DIExpression()), !dbg !9341
  %2 = icmp sgt i32 %0, -1, !dbg !9342
  br i1 %2, label %3, label %8, !dbg !9344

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9345, !srcloc !9347
  %4 = and i32 %0, 31, !dbg !9348
  %5 = shl nuw i32 1, %4, !dbg !9349
  %6 = lshr i32 %0, 5, !dbg !9350
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !9351
  store volatile i32 %5, i32* %7, align 4, !dbg !9352
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9353, !srcloc !9354
  br label %8, !dbg !9355

8:                                                ; preds = %3, %1
  ret void, !dbg !9356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !9357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9359, metadata !DIExpression()), !dbg !9360
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !9361
  ret void, !dbg !9362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !9363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9365, metadata !DIExpression()), !dbg !9366
  %2 = icmp sgt i32 %0, -1, !dbg !9367
  br i1 %2, label %3, label %8, !dbg !9369

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !9370
  %5 = shl nuw i32 1, %4, !dbg !9372
  %6 = lshr i32 %0, 5, !dbg !9373
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !9374
  store volatile i32 %5, i32* %7, align 4, !dbg !9375
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !9376, !srcloc !9380
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !9381, !srcloc !9384
  br label %8, !dbg !9385

8:                                                ; preds = %3, %1
  ret void, !dbg !9386
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !9387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9391, metadata !DIExpression()), !dbg !9392
  %2 = lshr i32 %0, 5, !dbg !9393
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !9394
  %4 = load volatile i32, i32* %3, align 4, !dbg !9394
  %5 = and i32 %0, 31, !dbg !9395
  %6 = shl nuw i32 1, %5, !dbg !9395
  %7 = and i32 %4, %6, !dbg !9396
  ret i32 %7, !dbg !9397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9402, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata i32 %1, metadata !9403, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata i32 %2, metadata !9404, metadata !DIExpression()), !dbg !9405
  %4 = add i32 %1, 1, !dbg !9406
  call void @llvm.dbg.value(metadata i32 %4, metadata !9403, metadata !DIExpression()), !dbg !9405
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !9409
  ret void, !dbg !9410
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %1, metadata !9416, metadata !DIExpression()), !dbg !9417
  %3 = trunc i32 %1 to i8, !dbg !9418
  %4 = shl i8 %3, 5, !dbg !9418
  %5 = and i32 %0, 15, !dbg !9420
  %6 = add nsw i32 %5, -4, !dbg !9420
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !9420
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9420
  %9 = icmp slt i32 %0, 0, !dbg !9420
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !9420
  store volatile i8 %4, i8* %10, align 1, !dbg !9418
  ret void, !dbg !9421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !9422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9424, metadata !DIExpression()), !dbg !9425
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !9426
  ret void, !dbg !9427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !9428 {
  tail call void @z_SysNmiOnReset() #26, !dbg !9430
  tail call void @z_arm_int_exit() #26, !dbg !9431
  ret void, !dbg !9432
}

; Function Attrs: optsize
declare !dbg !9433 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !9434 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !9436 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !9438
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !9439
  tail call void @z_bss_zero() #26, !dbg !9440
  tail call void @z_data_copy() #26, !dbg !9441
  tail call void @z_arm_interrupt_init() #26, !dbg !9442
  tail call void @z_cstart() #28, !dbg !9443
  unreachable, !dbg !9443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !9444 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !9445
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !9446, !srcloc !9449
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !9450, !srcloc !9453
  ret void, !dbg !9454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !9455 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !9456
  %2 = and i32 %1, -15728641, !dbg !9456
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !9456
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !9457, !srcloc !9464
  call void @llvm.dbg.value(metadata i32 %3, metadata !9462, metadata !DIExpression()) #24, !dbg !9465
  %4 = and i32 %3, -5, !dbg !9466
  call void @llvm.dbg.value(metadata i32 %4, metadata !9467, metadata !DIExpression()) #24, !dbg !9472
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !9474, !srcloc !9475
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !9476, !srcloc !9453
  ret void, !dbg !9478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !9479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9482, metadata !DIExpression()), !dbg !9483
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9484
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !9485
  store i32 %0, i32* %3, align 4, !dbg !9486
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !9487
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !9488
  store i32 %4, i32* %5, align 4, !dbg !9489
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9490
  %7 = or i32 %6, 268435456, !dbg !9490
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9490
  call void @llvm.dbg.value(metadata i32 0, metadata !9491, metadata !DIExpression()) #24, !dbg !9494
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !9496, !srcloc !9497
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9498
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !9499
  %10 = load i32, i32* %9, align 4, !dbg !9499
  ret i32 %10, !dbg !9500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.anon.11* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !9501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9611, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata %struct.anon.11* %1, metadata !9612, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i8* %2, metadata !9613, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !9614, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i8* %4, metadata !9615, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i8* %5, metadata !9616, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i8* %6, metadata !9617, metadata !DIExpression()), !dbg !9619
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !9620
  call void @llvm.dbg.value(metadata i8* %8, metadata !9618, metadata !DIExpression()), !dbg !9619
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !9621
  %10 = bitcast i8* %9 to i32*, !dbg !9621
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !9622
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !9623
  %12 = bitcast i8* %8 to i32*, !dbg !9624
  store i32 %11, i32* %12, align 4, !dbg !9625
  %13 = ptrtoint i8* %4 to i32, !dbg !9626
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !9627
  %15 = bitcast i8* %14 to i32*, !dbg !9627
  store i32 %13, i32* %15, align 4, !dbg !9628
  %16 = ptrtoint i8* %5 to i32, !dbg !9629
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !9630
  %18 = bitcast i8* %17 to i32*, !dbg !9630
  store i32 %16, i32* %18, align 4, !dbg !9631
  %19 = ptrtoint i8* %6 to i32, !dbg !9632
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !9633
  %21 = bitcast i8* %20 to i32*, !dbg !9633
  store i32 %19, i32* %21, align 4, !dbg !9634
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !9635
  %23 = bitcast i8* %22 to i32*, !dbg !9635
  store i32 16777216, i32* %23, align 4, !dbg !9636
  %24 = ptrtoint i8* %8 to i32, !dbg !9637
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !9638
  store i32 %24, i32* %25, align 8, !dbg !9639
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !9640
  store i32 0, i32* %26, align 4, !dbg !9641
  ret void, !dbg !9642
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !9643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9647, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.value(metadata i8* %1, metadata !9648, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !9649, metadata !DIExpression()), !dbg !9650
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9651
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !9652, !srcloc !9653
  unreachable, !dbg !9654
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !9655 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9673, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata i32 %1, metadata !9674, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata i32 %2, metadata !9675, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !9676, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata i32 0, metadata !9677, metadata !DIExpression()), !dbg !9683
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9684
  %9 = and i32 %8, 511, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %9, metadata !9678, metadata !DIExpression()), !dbg !9683
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !9686
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !9686
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !9687
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !9687
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !9682, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i32 0, metadata !9689, metadata !DIExpression()) #24, !dbg !9692
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !9694, !srcloc !9695
  call void @llvm.dbg.value(metadata i8* %6, metadata !9680, metadata !DIExpression(DW_OP_deref)), !dbg !9683
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !9696
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !9681, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata i8* %5, metadata !9679, metadata !DIExpression(DW_OP_deref)), !dbg !9683
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %12, metadata !9677, metadata !DIExpression()), !dbg !9683
  %13 = load i8, i8* %5, align 1, !dbg !9698, !range !9700
  call void @llvm.dbg.value(metadata i8 %13, metadata !9679, metadata !DIExpression()), !dbg !9683
  %14 = icmp eq i8 %13, 0, !dbg !9698
  br i1 %14, label %15, label %32, !dbg !9701

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !9702
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !9703
  %18 = load i8, i8* %6, align 1, !dbg !9704, !range !9700
  call void @llvm.dbg.value(metadata i8 %18, metadata !9680, metadata !DIExpression()), !dbg !9683
  %19 = icmp eq i8 %18, 0, !dbg !9704
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !9706
  %21 = load i32, i32* %20, align 4, !dbg !9706
  br i1 %19, label %27, label %22, !dbg !9707

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !9708
  %24 = icmp eq i32 %23, 0, !dbg !9711
  br i1 %24, label %25, label %31, !dbg !9712

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !9713
  br label %29, !dbg !9715

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !9716
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !9706
  br label %31, !dbg !9718

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !9718
  br label %32, !dbg !9719

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !9719
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !9719
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !9719
  ret void, !dbg !9719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !9720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9725, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 %1, metadata !9726, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 %2, metadata !9727, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i8* %3, metadata !9728, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i8 0, metadata !9729, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i8 0, i8* %3, align 1, !dbg !9732
  %5 = icmp ugt i32 %2, -16777217, !dbg !9733
  br i1 %5, label %6, label %17, !dbg !9735

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !9736
  %8 = icmp eq i32 %7, 8, !dbg !9736
  br i1 %8, label %9, label %10, !dbg !9736

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.108, i32 0, i32 0), i32 noundef 69) #26, !dbg !9738
  br label %17, !dbg !9744

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !9745
  %12 = icmp eq i32 %11, 0, !dbg !9745
  br i1 %12, label %13, label %14, !dbg !9746

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i8 1, i8* %3, align 1, !dbg !9749
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !9731
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !9730, metadata !DIExpression()), !dbg !9731
  br label %17, !dbg !9752

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !9731
  ret %struct.__esf* %18, !dbg !9753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9758, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 %1, metadata !9759, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i8* %2, metadata !9760, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 0, metadata !9761, metadata !DIExpression()), !dbg !9762
  store i8 0, i8* %2, align 1, !dbg !9763
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !9764

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %5, metadata !9761, metadata !DIExpression()), !dbg !9762
  br label %11, !dbg !9767

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !9768
  call void @llvm.dbg.value(metadata i32 0, metadata !9761, metadata !DIExpression()), !dbg !9762
  br label %11, !dbg !9769

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !9770
  call void @llvm.dbg.value(metadata i32 0, metadata !9761, metadata !DIExpression()), !dbg !9762
  br label %11, !dbg !9771

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !9772
  call void @llvm.dbg.value(metadata i32 0, metadata !9761, metadata !DIExpression()), !dbg !9762
  br label %11, !dbg !9773

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !9774
  br label %11, !dbg !9775

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !9776
  br label %11, !dbg !9777

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !9762
  call void @llvm.dbg.value(metadata i32 %12, metadata !9761, metadata !DIExpression()), !dbg !9762
  ret i32 %12, !dbg !9778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9783, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i8* %1, metadata !9784, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 0, metadata !9785, metadata !DIExpression()), !dbg !9786
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.103, i32 0, i32 0), i32 noundef 69) #26, !dbg !9787
  store i8 0, i8* %1, align 1, !dbg !9792
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !9793
  %4 = and i32 %3, 2, !dbg !9795
  %5 = icmp eq i32 %4, 0, !dbg !9796
  br i1 %5, label %7, label %6, !dbg !9797

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 69) #26, !dbg !9798
  br label %35, !dbg !9804

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !9805
  %9 = icmp sgt i32 %8, -1, !dbg !9807
  br i1 %9, label %11, label %10, !dbg !9808

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 69) #26, !dbg !9809
  br label %35, !dbg !9815

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !9816
  %13 = and i32 %12, 1073741824, !dbg !9818
  %14 = icmp eq i32 %13, 0, !dbg !9819
  br i1 %14, label %35, label %15, !dbg !9820

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.106, i32 0, i32 0), i32 noundef 69) #26, !dbg !9821
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !9827
  br i1 %16, label %17, label %21, !dbg !9829

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9830
  %19 = load i32, i32* %18, align 4, !dbg !9830
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.107, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #26, !dbg !9830
  %20 = load i32, i32* %18, align 4, !dbg !9836
  call void @llvm.dbg.value(metadata i32 %20, metadata !9785, metadata !DIExpression()), !dbg !9786
  br label %35, !dbg !9837

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9838
  %23 = and i32 %22, 255, !dbg !9840
  %24 = icmp eq i32 %23, 0, !dbg !9841
  br i1 %24, label %26, label %25, !dbg !9842

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !9843
  call void @llvm.dbg.value(metadata i32 0, metadata !9785, metadata !DIExpression()), !dbg !9786
  br label %35, !dbg !9845

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9846
  %28 = and i32 %27, 65280, !dbg !9848
  %29 = icmp eq i32 %28, 0, !dbg !9849
  br i1 %29, label %31, label %30, !dbg !9850

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !9851
  call void @llvm.dbg.value(metadata i32 0, metadata !9785, metadata !DIExpression()), !dbg !9786
  br label %35, !dbg !9853

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9854
  %33 = icmp ult i32 %32, 65536, !dbg !9856
  br i1 %33, label %35, label %34, !dbg !9857

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #25, !dbg !9858
  call void @llvm.dbg.value(metadata i32 0, metadata !9785, metadata !DIExpression()), !dbg !9786
  br label %35, !dbg !9860

35:                                               ; preds = %10, %11, %17, %30, %31, %34, %25, %6
  %36 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], [ 0, %31 ], [ 0, %11 ], !dbg !9786
  call void @llvm.dbg.value(metadata i32 %36, metadata !9785, metadata !DIExpression()), !dbg !9786
  ret i32 %36, !dbg !9861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9864, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i32 %0, metadata !9865, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i8* %1, metadata !9866, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i32 0, metadata !9867, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i32 -22, metadata !9868, metadata !DIExpression()), !dbg !9872
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.98, i32 0, i32 0), i32 noundef 69) #26, !dbg !9873
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9878
  %4 = and i32 %3, 16, !dbg !9880
  %5 = icmp eq i32 %4, 0, !dbg !9881
  br i1 %5, label %7, label %6, !dbg !9882

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.99, i32 0, i32 0), i32 noundef 69) #26, !dbg !9883
  br label %7, !dbg !9889

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9890
  %9 = and i32 %8, 8, !dbg !9892
  %10 = icmp eq i32 %9, 0, !dbg !9893
  br i1 %10, label %12, label %11, !dbg !9894

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.92, i32 0, i32 0), i32 noundef 69) #26, !dbg !9895
  br label %12, !dbg !9901

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9902
  %14 = and i32 %13, 2, !dbg !9903
  %15 = icmp eq i32 %14, 0, !dbg !9904
  br i1 %15, label %26, label %16, !dbg !9905

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.100, i32 0, i32 0), i32 noundef 69) #26, !dbg !9906
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !9911
  call void @llvm.dbg.value(metadata i32 %17, metadata !9869, metadata !DIExpression()), !dbg !9912
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9913
  %19 = and i32 %18, 128, !dbg !9915
  %20 = icmp eq i32 %19, 0, !dbg !9916
  br i1 %20, label %26, label %21, !dbg !9917

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !9868, metadata !DIExpression()), !dbg !9872
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.101, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !9918
  %22 = icmp eq i32 %0, 0, !dbg !9924
  br i1 %22, label %26, label %23, !dbg !9926

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9927
  %25 = and i32 %24, -129, !dbg !9927
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9927
  br label %26, !dbg !9929

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !9868, metadata !DIExpression()), !dbg !9872
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9930
  %28 = and i32 %27, 1, !dbg !9932
  %29 = icmp eq i32 %28, 0, !dbg !9933
  br i1 %29, label %31, label %30, !dbg !9934

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.102, i32 0, i32 0), i32 noundef 69) #26, !dbg !9935
  br label %31, !dbg !9941

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9942
  %33 = and i32 %32, 32, !dbg !9944
  %34 = icmp eq i32 %33, 0, !dbg !9945
  br i1 %34, label %36, label %35, !dbg !9946

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.97, i32 0, i32 0), i32 noundef 69) #26, !dbg !9947
  br label %36, !dbg !9953

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9954
  %38 = and i32 %37, 16, !dbg !9956
  %39 = icmp eq i32 %38, 0, !dbg !9956
  br i1 %39, label %40, label %42, !dbg !9957

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9958
  br label %42, !dbg !9959

42:                                               ; preds = %40, %36
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9960
  %44 = and i32 %43, 32, !dbg !9962
  %45 = icmp eq i32 %44, 0, !dbg !9963
  br i1 %45, label %49, label %46, !dbg !9964

46:                                               ; preds = %42
  %47 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9965
  %48 = and i32 %47, -8193, !dbg !9965
  store volatile i32 %48, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9965
  br label %49, !dbg !9967

49:                                               ; preds = %46, %42
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9968
  %51 = or i32 %50, 255, !dbg !9968
  store volatile i32 %51, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9968
  store i8 0, i8* %1, align 1, !dbg !9969
  ret void, !dbg !9970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9975, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata i32 %0, metadata !9976, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata i8* %1, metadata !9977, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata i32 0, metadata !9978, metadata !DIExpression()), !dbg !9982
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.90, i32 0, i32 0), i32 noundef 69) #26, !dbg !9983
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9988
  %4 = and i32 %3, 4096, !dbg !9990
  %5 = icmp eq i32 %4, 0, !dbg !9990
  br i1 %5, label %7, label %6, !dbg !9991

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.91, i32 0, i32 0), i32 noundef 69) #26, !dbg !9992
  br label %7, !dbg !9998

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9999
  %9 = and i32 %8, 2048, !dbg !10001
  %10 = icmp eq i32 %9, 0, !dbg !10001
  br i1 %10, label %12, label %11, !dbg !10002

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.92, i32 0, i32 0), i32 noundef 69) #26, !dbg !10003
  br label %12, !dbg !10009

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10010
  %14 = and i32 %13, 512, !dbg !10011
  %15 = icmp eq i32 %14, 0, !dbg !10011
  br i1 %15, label %26, label %16, !dbg !10012

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.93, i32 0, i32 0), i32 noundef 69) #26, !dbg !10013
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !10018
  call void @llvm.dbg.value(metadata i32 %17, metadata !9979, metadata !DIExpression()), !dbg !10019
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10020
  %19 = and i32 %18, 32768, !dbg !10022
  %20 = icmp eq i32 %19, 0, !dbg !10023
  br i1 %20, label %26, label %21, !dbg !10024

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.94, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !10025
  %22 = icmp eq i32 %0, 0, !dbg !10031
  br i1 %22, label %26, label %23, !dbg !10033

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10034
  %25 = and i32 %24, -32769, !dbg !10034
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10034
  br label %26, !dbg !10036

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10037
  %28 = and i32 %27, 1024, !dbg !10039
  %29 = icmp eq i32 %28, 0, !dbg !10039
  br i1 %29, label %31, label %30, !dbg !10040

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.95, i32 0, i32 0), i32 noundef 69) #26, !dbg !10041
  br label %31, !dbg !10047

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10048
  %33 = and i32 %32, 256, !dbg !10050
  %34 = icmp eq i32 %33, 0, !dbg !10051
  br i1 %34, label %35, label %39, !dbg !10052

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10053
  %37 = and i32 %36, 8192, !dbg !10055
  %38 = icmp eq i32 %37, 0, !dbg !10055
  br i1 %38, label %41, label %39, !dbg !10056

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.96, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.97, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #26, !dbg !10057
  br label %41, !dbg !10058

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10058
  %43 = or i32 %42, 65280, !dbg !10058
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10058
  store i8 0, i8* %1, align 1, !dbg !10059
  ret void, !dbg !10060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !10061 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10067, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i32 0, metadata !10068, metadata !DIExpression()), !dbg !10069
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.83, i32 0, i32 0), i32 noundef 69) #26, !dbg !10070
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10075
  %2 = and i32 %1, 33554432, !dbg !10077
  %3 = icmp eq i32 %2, 0, !dbg !10078
  br i1 %3, label %5, label %4, !dbg !10079

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.84, i32 0, i32 0), i32 noundef 69) #26, !dbg !10080
  br label %5, !dbg !10086

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10087
  %7 = and i32 %6, 16777216, !dbg !10089
  %8 = icmp eq i32 %7, 0, !dbg !10090
  br i1 %8, label %10, label %9, !dbg !10091

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.85, i32 0, i32 0), i32 noundef 69) #26, !dbg !10092
  br label %10, !dbg !10098

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10099
  %12 = and i32 %11, 524288, !dbg !10101
  %13 = icmp eq i32 %12, 0, !dbg !10102
  br i1 %13, label %15, label %14, !dbg !10103

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.86, i32 0, i32 0), i32 noundef 69) #26, !dbg !10104
  br label %15, !dbg !10110

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10111
  %17 = and i32 %16, 262144, !dbg !10113
  %18 = icmp eq i32 %17, 0, !dbg !10114
  br i1 %18, label %20, label %19, !dbg !10115

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.87, i32 0, i32 0), i32 noundef 69) #26, !dbg !10116
  br label %20, !dbg !10122

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10123
  %22 = and i32 %21, 131072, !dbg !10125
  %23 = icmp eq i32 %22, 0, !dbg !10126
  br i1 %23, label %25, label %24, !dbg !10127

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.88, i32 0, i32 0), i32 noundef 69) #26, !dbg !10128
  br label %25, !dbg !10134

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10135
  %27 = and i32 %26, 65536, !dbg !10137
  %28 = icmp eq i32 %27, 0, !dbg !10138
  br i1 %28, label %30, label %29, !dbg !10139

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.89, i32 0, i32 0), i32 noundef 69) #26, !dbg !10140
  br label %30, !dbg !10146

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10147
  %32 = or i32 %31, -65536, !dbg !10147
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10147
  ret void, !dbg !10148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !10149 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10153, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i8* %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  store i8 0, i8* %0, align 1, !dbg !10156
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.82, i32 0, i32 0), i32 noundef 69) #26, !dbg !10157
  ret void, !dbg !10162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !10163 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 %0, metadata !10168, metadata !DIExpression()), !dbg !10169
  %2 = icmp slt i32 %0, 16, !dbg !10170
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.79, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.80, i32 0, i32 0), !dbg !10170
  %4 = add nsw i32 %0, -16, !dbg !10170
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.81, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #26, !dbg !10170
  ret void, !dbg !10175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10176 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !10180, metadata !DIExpression()), !dbg !10183
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !10184
  %3 = load i32, i32* %2, align 4, !dbg !10184
  %4 = inttoptr i32 %3 to i16*, !dbg !10185
  call void @llvm.dbg.value(metadata i16* %4, metadata !10181, metadata !DIExpression()), !dbg !10183
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10186
  %6 = or i32 %5, 256, !dbg !10186
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10186
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !10187, !srcloc !10190
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !10191, !srcloc !10194
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !10195
  %8 = load i16, i16* %7, align 2, !dbg !10196
  call void @llvm.dbg.value(metadata i16 %8, metadata !10182, metadata !DIExpression()), !dbg !10183
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10197
  %10 = and i32 %9, -257, !dbg !10197
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10197
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !10198, !srcloc !10190
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !10200, !srcloc !10194
  %11 = icmp eq i16 %8, -8446, !dbg !10202
  ret i1 %11, !dbg !10204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !10205 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10206
  %2 = or i32 %1, 16, !dbg !10206
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10206
  ret void, !dbg !10207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !10208 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10211, metadata !DIExpression()), !dbg !10212
  br label %1, !dbg !10213

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !10211, metadata !DIExpression()), !dbg !10212
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef %2) #25, !dbg !10215
  %3 = add nuw nsw i32 %2, 1, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %3, metadata !10211, metadata !DIExpression()), !dbg !10212
  %4 = icmp eq i32 %3, 137, !dbg !10219
  br i1 %4, label %5, label %1, !dbg !10213, !llvm.loop !10220

5:                                                ; preds = %1
  ret void, !dbg !10222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.111(i32 noundef %0) unnamed_addr #15 !dbg !10223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10225, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 1, metadata !10226, metadata !DIExpression()), !dbg !10227
  %2 = and i32 %0, 15, !dbg !10228
  %3 = add nsw i32 %2, -4, !dbg !10228
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !10228
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !10228
  %6 = icmp slt i32 %0, 0, !dbg !10228
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !10228
  store volatile i8 32, i8* %7, align 1, !dbg !10229
  ret void, !dbg !10231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10338, metadata !DIExpression()), !dbg !10339
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10340
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !10342
  br i1 %3, label %4, label %12, !dbg !10343

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !10344, !srcloc !10356
  call void @llvm.dbg.value(metadata i32 %5, metadata !10347, metadata !DIExpression()) #24, !dbg !10357
  %6 = icmp eq i32 %5, 0, !dbg !10358
  br i1 %6, label %12, label %7, !dbg !10359

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10360
  %9 = or i32 %8, 268435456, !dbg !10360
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10360
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10362
  %11 = and i32 %10, -32769, !dbg !10362
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10362
  br label %12, !dbg !10363

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !10364
  ret void, !dbg !10365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !10366 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !10367
  ret void, !dbg !10368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !1014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1133, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i8 0, metadata !1134, metadata !DIExpression()), !dbg !10369
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([0 x %struct.z_arm_mpu_partition], [0 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 0) #26, !dbg !10370
  ret void, !dbg !10371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !10372 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !10373
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !10374, !srcloc !10377
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !10378, !srcloc !10381
  ret void, !dbg !10382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !10383 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !10384, !srcloc !10387
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !10388
  ret void, !dbg !10389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10390 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !10405, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i8 %1, metadata !10406, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 %2, metadata !10407, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 %3, metadata !10408, metadata !DIExpression()), !dbg !10409
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !10410
  ret void, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !10413 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !10418, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i8 %1, metadata !10419, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 undef, metadata !10420, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 undef, metadata !10421, metadata !DIExpression()), !dbg !10423
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !10424
  call void @llvm.dbg.value(metadata i8 %3, metadata !10422, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10423
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %4, metadata !10422, metadata !DIExpression()), !dbg !10423
  %5 = trunc i32 %4 to i8, !dbg !10426
  store i8 %5, i8* @static_regions_num, align 1, !dbg !10427
  ret void, !dbg !10428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !10429 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !10433, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i8 %1, metadata !10434, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i8 %2, metadata !10435, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i1 %3, metadata !10436, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10439
  %5 = zext i8 %2 to i32, !dbg !10440
  call void @llvm.dbg.value(metadata i32 %5, metadata !10438, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 0, metadata !10437, metadata !DIExpression()), !dbg !10439
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !10438, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 0, metadata !10437, metadata !DIExpression()), !dbg !10439
  %7 = icmp eq i8 %1, 0, !dbg !10441
  br i1 %7, label %30, label %8, !dbg !10444

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10438, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 %10, metadata !10437, metadata !DIExpression()), !dbg !10439
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !10445
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !10448
  %13 = load i32, i32* %12, align 4, !dbg !10448
  %14 = icmp eq i32 %13, 0, !dbg !10449
  br i1 %14, label %26, label %15, !dbg !10450

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !10451

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !10453
  %18 = icmp eq i32 %17, 0, !dbg !10453
  br i1 %18, label %19, label %20, !dbg !10454

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.118, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #26, !dbg !10455
  br label %30, !dbg !10461

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !10462
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %22, metadata !10438, metadata !DIExpression()), !dbg !10439
  %23 = icmp eq i32 %22, -22, !dbg !10464
  br i1 %23, label %30, label %24, !dbg !10466

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %25, metadata !10438, metadata !DIExpression()), !dbg !10439
  br label %26, !dbg !10468

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !10439
  call void @llvm.dbg.value(metadata i32 %27, metadata !10438, metadata !DIExpression()), !dbg !10439
  %28 = add nuw nsw i32 %10, 1, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %28, metadata !10437, metadata !DIExpression()), !dbg !10439
  %29 = icmp eq i32 %28, %6, !dbg !10441
  br i1 %29, label %30, label %8, !dbg !10444, !llvm.loop !10470

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !10439
  ret i32 %31, !dbg !10472
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !10473 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !10477, metadata !DIExpression()), !dbg !10479
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !10480
  %3 = load i32, i32* %2, align 4, !dbg !10480
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !10481, !range !10482
  %5 = icmp ult i32 %4, 2, !dbg !10481
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !10483
  br i1 %7, label %8, label %15, !dbg !10483

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !10484
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !10485
  %11 = load i32, i32* %10, align 4, !dbg !10485
  %12 = and i32 %11, %9, !dbg !10486
  %13 = icmp eq i32 %12, 0, !dbg !10487
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !10478, metadata !DIExpression()), !dbg !10479
  ret i32 %16, !dbg !10488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !10489 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !10493, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !10494, metadata !DIExpression()), !dbg !10496
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !10497
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !10497
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !10495, metadata !DIExpression()), !dbg !10498
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !10499
  %6 = load i32, i32* %5, align 4, !dbg !10499
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !10500
  store i32 %6, i32* %7, align 4, !dbg !10501
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !10502
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !10503
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !10504
  %11 = load i32, i32* %10, align 4, !dbg !10504
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #25, !dbg !10505
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !10506
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !10507
  ret i32 %12, !dbg !10508
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #20 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !10516, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !10517, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 undef, metadata !10518, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 %2, metadata !10519, metadata !DIExpression()), !dbg !10520
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !10521
  %5 = load i32, i32* %4, align 4, !dbg !10521
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !10522
  %7 = or i32 %6, %5, !dbg !10523
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !10524
  store i32 %7, i32* %8, align 4, !dbg !10525
  ret void, !dbg !10526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !10527 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10531, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !10532, metadata !DIExpression()), !dbg !10533
  %3 = zext i8 %0 to i32, !dbg !10534
  %4 = icmp ugt i8 %0, 7, !dbg !10536
  br i1 %4, label %5, label %6, !dbg !10537

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.119, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #26, !dbg !10538
  br label %7, !dbg !10544

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !10545
  br label %7, !dbg !10546

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !10533
  ret i32 %8, !dbg !10547
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !10548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !10553, metadata !DIExpression()), !dbg !10554
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !10555
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !10556
  %4 = load i32, i32* %3, align 4, !dbg !10556
  %5 = and i32 %4, -32, !dbg !10557
  %6 = or i32 %5, %0, !dbg !10558
  %7 = or i32 %6, 16, !dbg !10558
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !10559
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !10560
  %9 = load i32, i32* %8, align 4, !dbg !10560
  %10 = or i32 %9, 1, !dbg !10561
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !10562
  ret void, !dbg !10563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !10564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10567, metadata !DIExpression()), !dbg !10568
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !10569
  ret void, !dbg !10570
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !10571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10575, metadata !DIExpression()), !dbg !10576
  %2 = icmp ult i32 %0, 33, !dbg !10577
  br i1 %2, label %11, label %3, !dbg !10579

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !10580
  br i1 %4, label %11, label %5, !dbg !10582

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !10583
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !10584, !range !10482
  %8 = mul nsw i32 %7, -2, !dbg !10585
  %9 = add nsw i32 %8, 62, !dbg !10585
  %10 = and i32 %9, 62, !dbg !10586
  br label %11, !dbg !10587

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !10576
  ret i32 %12, !dbg !10588
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !10589 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !10593, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i8 %1, metadata !10594, metadata !DIExpression()), !dbg !10595
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !10596
  ret void, !dbg !10598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !10603, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata i8 %1, metadata !10604, metadata !DIExpression()), !dbg !10610
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !10611
  call void @llvm.dbg.value(metadata i8 %3, metadata !10605, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10610
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %4, metadata !10605, metadata !DIExpression()), !dbg !10610
  %5 = icmp ne i32 %4, -22, !dbg !10613
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !10614
  call void @llvm.dbg.value(metadata i32 %4, metadata !10606, metadata !DIExpression()), !dbg !10615
  br i1 %7, label %8, label %12, !dbg !10614

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10606, metadata !DIExpression()), !dbg !10615
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !10616
  %10 = add i32 %9, 1, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %10, metadata !10606, metadata !DIExpression()), !dbg !10615
  %11 = icmp eq i32 %10, 8, !dbg !10620
  br i1 %11, label %12, label %8, !dbg !10621, !llvm.loop !10622

12:                                               ; preds = %8, %2
  ret void, !dbg !10624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !10625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10628, metadata !DIExpression()), !dbg !10629
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !10630
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !10631
  ret void, !dbg !10632
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !10633 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !10638
  %2 = icmp ugt i32 %1, 8, !dbg !10640
  br i1 %2, label %14, label %3, !dbg !10641

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !10642
  call void @llvm.dbg.value(metadata i32 0, metadata !10637, metadata !DIExpression()), !dbg !10643
  %4 = icmp eq i32 %1, 0, !dbg !10644
  br i1 %4, label %12, label %5, !dbg !10647

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !10647

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10637, metadata !DIExpression()), !dbg !10643
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !10648
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !10650
  %10 = add nuw i32 %8, 1, !dbg !10651
  call void @llvm.dbg.value(metadata i32 %10, metadata !10637, metadata !DIExpression()), !dbg !10643
  %11 = icmp eq i32 %10, %1, !dbg !10644
  br i1 %11, label %12, label %7, !dbg !10647, !llvm.loop !10652

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !10654
  store i8 %13, i8* @static_regions_num, align 1, !dbg !10655
  tail call void @arm_core_mpu_enable() #25, !dbg !10656
  br label %14, !dbg !10657

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !10643
  ret i32 %15, !dbg !10658
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !10659 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10666, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i8* %1, metadata !10667, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i8* %0, metadata !10668, metadata !DIExpression()), !dbg !10669
  %3 = load i8, i8* %1, align 1, !dbg !10670
  %4 = icmp eq i8 %3, 0, !dbg !10671
  br i1 %4, label %13, label %5, !dbg !10672

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !10666, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i8* %8, metadata !10667, metadata !DIExpression()), !dbg !10669
  store i8 %6, i8* %7, align 1, !dbg !10673
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10675
  call void @llvm.dbg.value(metadata i8* %9, metadata !10666, metadata !DIExpression()), !dbg !10669
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !10676
  call void @llvm.dbg.value(metadata i8* %10, metadata !10667, metadata !DIExpression()), !dbg !10669
  %11 = load i8, i8* %10, align 1, !dbg !10670
  %12 = icmp eq i8 %11, 0, !dbg !10671
  br i1 %12, label %13, label %5, !dbg !10672, !llvm.loop !10677

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !10679
  ret i8* %0, !dbg !10680
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10685, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i8* %1, metadata !10686, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i32 %2, metadata !10687, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i8* %0, metadata !10688, metadata !DIExpression()), !dbg !10689
  %4 = icmp eq i32 %2, 0, !dbg !10690
  br i1 %4, label %22, label %5, !dbg !10691

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !10685, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i32 %7, metadata !10687, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i8* %8, metadata !10686, metadata !DIExpression()), !dbg !10689
  %9 = load i8, i8* %8, align 1, !dbg !10692
  %10 = icmp eq i8 %9, 0, !dbg !10693
  br i1 %10, label %16, label %11, !dbg !10694

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !10695
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !10697
  call void @llvm.dbg.value(metadata i8* %12, metadata !10686, metadata !DIExpression()), !dbg !10689
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !10698
  call void @llvm.dbg.value(metadata i8* %13, metadata !10685, metadata !DIExpression()), !dbg !10689
  %14 = add i32 %7, -1, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %14, metadata !10687, metadata !DIExpression()), !dbg !10689
  %15 = icmp eq i32 %14, 0, !dbg !10690
  br i1 %15, label %22, label %5, !dbg !10691, !llvm.loop !10700

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !10685, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i32 %18, metadata !10687, metadata !DIExpression()), !dbg !10689
  store i8 0, i8* %17, align 1, !dbg !10702
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10704
  call void @llvm.dbg.value(metadata i8* %19, metadata !10685, metadata !DIExpression()), !dbg !10689
  %20 = add i32 %18, -1, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %20, metadata !10687, metadata !DIExpression()), !dbg !10689
  %21 = icmp eq i32 %20, 0, !dbg !10706
  br i1 %21, label %22, label %16, !dbg !10707, !llvm.loop !10708

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !10710
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !10711 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10715, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata i32 %1, metadata !10716, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata i32 %1, metadata !10717, metadata !DIExpression()), !dbg !10718
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !10719

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !10715, metadata !DIExpression()), !dbg !10718
  %6 = load i8, i8* %5, align 1, !dbg !10720
  %7 = icmp eq i8 %6, %3, !dbg !10721
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !10722
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !10723
  call void @llvm.dbg.value(metadata i8* %10, metadata !10715, metadata !DIExpression()), !dbg !10718
  br i1 %9, label %11, label %4, !dbg !10722, !llvm.loop !10725

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !10727
  ret i8* %12, !dbg !10728
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !10729 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10731, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.value(metadata i32 %1, metadata !10732, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.value(metadata i8* null, metadata !10733, metadata !DIExpression()), !dbg !10734
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !10735

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !10734
  call void @llvm.dbg.value(metadata i8* %6, metadata !10733, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.value(metadata i8* %5, metadata !10731, metadata !DIExpression()), !dbg !10734
  %7 = load i8, i8* %5, align 1, !dbg !10736
  %8 = icmp eq i8 %7, %3, !dbg !10739
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !10740
  call void @llvm.dbg.value(metadata i8* %9, metadata !10733, metadata !DIExpression()), !dbg !10734
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !10741
  call void @llvm.dbg.value(metadata i8* %10, metadata !10731, metadata !DIExpression()), !dbg !10734
  %11 = icmp eq i8 %7, 0, !dbg !10742
  br i1 %11, label %12, label %4, !dbg !10742, !llvm.loop !10743

12:                                               ; preds = %4
  ret i8* %9, !dbg !10745
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !10746 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10750, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 0, metadata !10751, metadata !DIExpression()), !dbg !10752
  %2 = load i8, i8* %0, align 1, !dbg !10753
  %3 = icmp eq i8 %2, 0, !dbg !10754
  br i1 %3, label %11, label %4, !dbg !10755

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !10751, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i8* %6, metadata !10750, metadata !DIExpression()), !dbg !10752
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !10756
  call void @llvm.dbg.value(metadata i8* %7, metadata !10750, metadata !DIExpression()), !dbg !10752
  %8 = add i32 %5, 1, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %8, metadata !10751, metadata !DIExpression()), !dbg !10752
  %9 = load i8, i8* %7, align 1, !dbg !10753
  %10 = icmp eq i8 %9, 0, !dbg !10754
  br i1 %10, label %11, label %4, !dbg !10755, !llvm.loop !10759

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !10752
  ret i32 %12, !dbg !10761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !10762 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10766, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 %1, metadata !10767, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 0, metadata !10768, metadata !DIExpression()), !dbg !10769
  %3 = load i8, i8* %0, align 1, !dbg !10770
  %4 = icmp ne i8 %3, 0, !dbg !10771
  %5 = icmp ne i32 %1, 0, !dbg !10772
  %6 = and i1 %4, %5, !dbg !10772
  br i1 %6, label %7, label %16, !dbg !10773

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10768, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i8* %9, metadata !10766, metadata !DIExpression()), !dbg !10769
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !10774
  call void @llvm.dbg.value(metadata i8* %10, metadata !10766, metadata !DIExpression()), !dbg !10769
  %11 = add nuw i32 %8, 1, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %11, metadata !10768, metadata !DIExpression()), !dbg !10769
  %12 = load i8, i8* %10, align 1, !dbg !10770
  %13 = icmp ne i8 %12, 0, !dbg !10771
  %14 = icmp ult i32 %11, %1, !dbg !10772
  %15 = select i1 %13, i1 %14, i1 false, !dbg !10772
  br i1 %15, label %7, label %16, !dbg !10773, !llvm.loop !10777

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !10769
  ret i32 %17, !dbg !10779
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !10780 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10784, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i8* %1, metadata !10785, metadata !DIExpression()), !dbg !10786
  %3 = load i8, i8* %0, align 1, !dbg !10787
  %4 = load i8, i8* %1, align 1, !dbg !10788
  %5 = icmp ne i8 %3, %4, !dbg !10789
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !10790
  br i1 %7, label %18, label %8, !dbg !10790

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !10785, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i8* %10, metadata !10784, metadata !DIExpression()), !dbg !10786
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !10791
  call void @llvm.dbg.value(metadata i8* %11, metadata !10784, metadata !DIExpression()), !dbg !10786
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !10793
  call void @llvm.dbg.value(metadata i8* %12, metadata !10785, metadata !DIExpression()), !dbg !10786
  %13 = load i8, i8* %11, align 1, !dbg !10787
  %14 = load i8, i8* %12, align 1, !dbg !10788
  %15 = icmp ne i8 %13, %14, !dbg !10789
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !10790
  br i1 %17, label %18, label %8, !dbg !10790, !llvm.loop !10794

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !10787
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !10788
  %21 = zext i8 %19 to i32, !dbg !10797
  %22 = zext i8 %20 to i32, !dbg !10798
  %23 = sub nsw i32 %21, %22, !dbg !10799
  ret i32 %23, !dbg !10800
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10801 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10805, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i8* %1, metadata !10806, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i32 %2, metadata !10807, metadata !DIExpression()), !dbg !10808
  %4 = icmp eq i32 %2, 0, !dbg !10809
  br i1 %4, label %23, label %5, !dbg !10809

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i8* %7, metadata !10806, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i8* %8, metadata !10805, metadata !DIExpression()), !dbg !10808
  %9 = load i8, i8* %8, align 1, !dbg !10810
  %10 = load i8, i8* %7, align 1, !dbg !10811
  %11 = icmp ne i8 %9, %10, !dbg !10812
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !10813
  br i1 %13, label %19, label %14, !dbg !10813

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !10814
  call void @llvm.dbg.value(metadata i8* %15, metadata !10805, metadata !DIExpression()), !dbg !10808
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10816
  call void @llvm.dbg.value(metadata i8* %16, metadata !10806, metadata !DIExpression()), !dbg !10808
  %17 = add i32 %6, -1, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %17, metadata !10807, metadata !DIExpression()), !dbg !10808
  %18 = icmp eq i32 %17, 0, !dbg !10809
  br i1 %18, label %23, label %5, !dbg !10809, !llvm.loop !10818

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !10821
  %21 = zext i8 %10 to i32, !dbg !10822
  %22 = sub nsw i32 %20, %21, !dbg !10823
  br label %23, !dbg !10824

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !10824
  ret i32 %24, !dbg !10825
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !10826 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10830, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i8* %1, metadata !10831, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i8** %2, metadata !10832, metadata !DIExpression()), !dbg !10835
  %4 = icmp eq i8* %0, null, !dbg !10836
  br i1 %4, label %5, label %7, !dbg !10836

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !10837
  br label %7, !dbg !10836

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !10836
  call void @llvm.dbg.value(metadata i8* %8, metadata !10833, metadata !DIExpression()), !dbg !10835
  %9 = load i8, i8* %8, align 1, !dbg !10838
  %10 = icmp eq i8 %9, 0, !dbg !10838
  br i1 %10, label %33, label %11, !dbg !10839

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !10833, metadata !DIExpression()), !dbg !10835
  %14 = zext i8 %12 to i32, !dbg !10838
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !10840
  %16 = icmp eq i8* %15, null, !dbg !10839
  br i1 %16, label %21, label %17, !dbg !10841

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !10842
  call void @llvm.dbg.value(metadata i8* %18, metadata !10833, metadata !DIExpression()), !dbg !10835
  %19 = load i8, i8* %18, align 1, !dbg !10838
  %20 = icmp eq i8 %19, 0, !dbg !10838
  br i1 %20, label %33, label %11, !dbg !10839, !llvm.loop !10844

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !10834, metadata !DIExpression()), !dbg !10835
  %24 = zext i8 %22 to i32, !dbg !10846
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !10847
  %26 = icmp eq i8* %25, null, !dbg !10848
  br i1 %26, label %27, label %31, !dbg !10849

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !10850
  call void @llvm.dbg.value(metadata i8* %28, metadata !10834, metadata !DIExpression()), !dbg !10835
  %29 = load i8, i8* %28, align 1, !dbg !10846
  %30 = icmp eq i8 %29, 0, !dbg !10846
  br i1 %30, label %33, label %21, !dbg !10852, !llvm.loop !10853

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !10855
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !10858
  br label %33, !dbg !10859

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !10835
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !10835
  store i8* %34, i8** %2, align 4, !dbg !10835
  ret i8* %35, !dbg !10860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !10861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10863, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i8* %1, metadata !10864, metadata !DIExpression()), !dbg !10865
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !10866
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !10867
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !10868
  ret i8* %0, !dbg !10869
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10870 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10872, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i8* %1, metadata !10873, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 %2, metadata !10874, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i8* %0, metadata !10875, metadata !DIExpression()), !dbg !10877
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %4, metadata !10876, metadata !DIExpression()), !dbg !10877
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !10879
  call void @llvm.dbg.value(metadata i8* %5, metadata !10872, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i8* %1, metadata !10873, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 %2, metadata !10874, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 %2, metadata !10874, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10877
  %6 = icmp eq i32 %2, 0, !dbg !10880
  br i1 %6, label %18, label %7, !dbg !10881

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !10882
  call void @llvm.dbg.value(metadata i8* %9, metadata !10872, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i8* %10, metadata !10873, metadata !DIExpression()), !dbg !10877
  %12 = load i8, i8* %10, align 1, !dbg !10883
  %13 = icmp eq i8 %12, 0, !dbg !10884
  br i1 %13, label %18, label %14, !dbg !10885

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !10886
  call void @llvm.dbg.value(metadata i8* %15, metadata !10873, metadata !DIExpression()), !dbg !10877
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !10888
  call void @llvm.dbg.value(metadata i8* %16, metadata !10872, metadata !DIExpression()), !dbg !10877
  store i8 %12, i8* %9, align 1, !dbg !10889
  call void @llvm.dbg.value(metadata i32 %11, metadata !10874, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 %11, metadata !10874, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10877
  %17 = icmp eq i32 %11, 0, !dbg !10880
  br i1 %17, label %18, label %7, !dbg !10881, !llvm.loop !10890

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !10877
  store i8 0, i8* %19, align 1, !dbg !10892
  ret i8* %0, !dbg !10893
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10894 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10898, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i8* %1, metadata !10899, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i32 %2, metadata !10900, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i8* %0, metadata !10901, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i8* %1, metadata !10902, metadata !DIExpression()), !dbg !10903
  %4 = icmp eq i32 %2, 0, !dbg !10904
  br i1 %4, label %31, label %5, !dbg !10906

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10902, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i8* %0, metadata !10901, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i32 %2, metadata !10900, metadata !DIExpression()), !dbg !10903
  %6 = add i32 %2, -1, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %6, metadata !10900, metadata !DIExpression()), !dbg !10903
  %7 = icmp eq i32 %6, 0, !dbg !10908
  br i1 %7, label %23, label %8, !dbg !10909

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !10910
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !10910
  br label %11, !dbg !10910

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !10902, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i8* %14, metadata !10901, metadata !DIExpression()), !dbg !10903
  %15 = load i8, i8* %14, align 1, !dbg !10911
  %16 = load i8, i8* %13, align 1, !dbg !10912
  %17 = icmp eq i8 %15, %16, !dbg !10913
  br i1 %17, label %18, label %23, !dbg !10910

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !10914
  call void @llvm.dbg.value(metadata i8* %19, metadata !10901, metadata !DIExpression()), !dbg !10903
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !10916
  call void @llvm.dbg.value(metadata i8* %20, metadata !10902, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i32 %12, metadata !10900, metadata !DIExpression()), !dbg !10903
  %21 = add i32 %12, -1, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %21, metadata !10900, metadata !DIExpression()), !dbg !10903
  %22 = icmp eq i32 %21, 0, !dbg !10908
  br i1 %22, label %23, label %11, !dbg !10909, !llvm.loop !10917

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !10903
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !10903
  %26 = load i8, i8* %24, align 1, !dbg !10919
  %27 = zext i8 %26 to i32, !dbg !10919
  %28 = load i8, i8* %25, align 1, !dbg !10920
  %29 = zext i8 %28 to i32, !dbg !10920
  %30 = sub nsw i32 %27, %29, !dbg !10921
  br label %31, !dbg !10922

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !10903
  ret i32 %32, !dbg !10923
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10924 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10928, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i8* %1, metadata !10929, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 %2, metadata !10930, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i8* %0, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i8* %1, metadata !10932, metadata !DIExpression()), !dbg !10933
  %4 = ptrtoint i8* %0 to i32, !dbg !10934
  %5 = ptrtoint i8* %1 to i32, !dbg !10934
  %6 = sub i32 %4, %5, !dbg !10934
  %7 = icmp ult i32 %6, %2, !dbg !10936
  br i1 %7, label %10, label %8, !dbg !10937

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10932, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i8* %0, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 %2, metadata !10930, metadata !DIExpression()), !dbg !10933
  %9 = icmp eq i32 %2, 0, !dbg !10938
  br i1 %9, label %26, label %17, !dbg !10940

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10930, metadata !DIExpression()), !dbg !10933
  %12 = add i32 %11, -1, !dbg !10941
  call void @llvm.dbg.value(metadata i32 %12, metadata !10930, metadata !DIExpression()), !dbg !10933
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !10944
  %14 = load i8, i8* %13, align 1, !dbg !10944
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !10945
  store i8 %14, i8* %15, align 1, !dbg !10946
  %16 = icmp eq i32 %12, 0, !dbg !10947
  br i1 %16, label %26, label %10, !dbg !10948, !llvm.loop !10949

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !10932, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i8* %19, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 %20, metadata !10930, metadata !DIExpression()), !dbg !10933
  %21 = load i8, i8* %18, align 1, !dbg !10951
  store i8 %21, i8* %19, align 1, !dbg !10953
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !10954
  call void @llvm.dbg.value(metadata i8* %22, metadata !10931, metadata !DIExpression()), !dbg !10933
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !10955
  call void @llvm.dbg.value(metadata i8* %23, metadata !10932, metadata !DIExpression()), !dbg !10933
  %24 = add i32 %20, -1, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %24, metadata !10930, metadata !DIExpression()), !dbg !10933
  %25 = icmp eq i32 %24, 0, !dbg !10938
  br i1 %25, label %26, label %17, !dbg !10940, !llvm.loop !10957

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !10959
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10960 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10966, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i8* %1, metadata !10967, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %2, metadata !10968, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i8* %0, metadata !10969, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i8* %1, metadata !10970, metadata !DIExpression()), !dbg !10971
  %4 = icmp eq i32 %2, 0, !dbg !10972
  br i1 %4, label %14, label %5, !dbg !10973

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !10970, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i8* %7, metadata !10969, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %8, metadata !10968, metadata !DIExpression()), !dbg !10971
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !10974
  call void @llvm.dbg.value(metadata i8* %9, metadata !10970, metadata !DIExpression()), !dbg !10971
  %10 = load i8, i8* %6, align 1, !dbg !10976
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10977
  call void @llvm.dbg.value(metadata i8* %11, metadata !10969, metadata !DIExpression()), !dbg !10971
  store i8 %10, i8* %7, align 1, !dbg !10978
  %12 = add i32 %8, -1, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %12, metadata !10968, metadata !DIExpression()), !dbg !10971
  %13 = icmp eq i32 %12, 0, !dbg !10972
  br i1 %13, label %14, label %5, !dbg !10973, !llvm.loop !10980

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !10982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #21 !dbg !10983 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10987, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.value(metadata i32 %1, metadata !10988, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.value(metadata i32 %2, metadata !10989, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.value(metadata i8* %0, metadata !10990, metadata !DIExpression()), !dbg !10992
  %4 = trunc i32 %1 to i8, !dbg !10993
  call void @llvm.dbg.value(metadata i8 %4, metadata !10991, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.value(metadata i32 %2, metadata !10989, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.value(metadata i8* %0, metadata !10990, metadata !DIExpression()), !dbg !10992
  %5 = icmp eq i32 %2, 0, !dbg !10994
  br i1 %5, label %12, label %6, !dbg !10995

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10989, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.value(metadata i8* %8, metadata !10990, metadata !DIExpression()), !dbg !10992
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !10996
  call void @llvm.dbg.value(metadata i8* %9, metadata !10990, metadata !DIExpression()), !dbg !10992
  store i8 %4, i8* %8, align 1, !dbg !10998
  %10 = add i32 %7, -1, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %10, metadata !10989, metadata !DIExpression()), !dbg !10992
  %11 = icmp eq i32 %10, 0, !dbg !10994
  br i1 %11, label %12, label %6, !dbg !10995, !llvm.loop !11000

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !11002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !11003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11007, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i32 %1, metadata !11008, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i32 %2, metadata !11009, metadata !DIExpression()), !dbg !11013
  %4 = icmp eq i32 %2, 0, !dbg !11014
  br i1 %4, label %17, label %5, !dbg !11015

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !11016

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !11017
  call void @llvm.dbg.value(metadata i8* %9, metadata !11010, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 %8, metadata !11009, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i8* %9, metadata !11010, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11017
  %10 = load i8, i8* %9, align 1, !dbg !11018
  %11 = icmp eq i8 %10, %6, !dbg !11021
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !11022
  call void @llvm.dbg.value(metadata i8* %12, metadata !11010, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 %13, metadata !11009, metadata !DIExpression()), !dbg !11013
  br i1 %15, label %16, label %7, !dbg !11022, !llvm.loop !11023

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !11025

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !11013
  ret i8* %19, !dbg !11026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !11027 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !11029, metadata !DIExpression()), !dbg !11030
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !11031
  ret void, !dbg !11032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !11033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11035, metadata !DIExpression()), !dbg !11036
  ret i32 -1, !dbg !11037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !11038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11042, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32* %1, metadata !11043, metadata !DIExpression()), !dbg !11044
  %3 = ptrtoint i32* %1 to i32, !dbg !11045
  %4 = and i32 %3, -2, !dbg !11045
  %5 = icmp eq i32 %4, 2, !dbg !11045
  br i1 %5, label %6, label %9, !dbg !11045

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !11046
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !11046
  br label %9, !dbg !11047

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !11047
  ret i32 %10, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11051, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32* %1, metadata !11052, metadata !DIExpression()), !dbg !11053
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !11054
  ret i32 %3, !dbg !11055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !11056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11059, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32* %1, metadata !11060, metadata !DIExpression()), !dbg !11061
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11062, !srcloc !11064
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !11065
  ret i32 %3, !dbg !11066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !11067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11072, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32* %1, metadata !11073, metadata !DIExpression()), !dbg !11076
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !11077
  call void @llvm.dbg.value(metadata i32 %3, metadata !11074, metadata !DIExpression()), !dbg !11076
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %4, metadata !11075, metadata !DIExpression()), !dbg !11076
  %5 = icmp ne i32 %3, %4, !dbg !11079
  %6 = sext i1 %5 to i32, !dbg !11080
  ret i32 %6, !dbg !11081
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !11082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11086, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i32 %1, metadata !11087, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i32 %2, metadata !11088, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i32* %3, metadata !11089, metadata !DIExpression()), !dbg !11090
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !11091
  ret i32 %5, !dbg !11092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !11093 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11095, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32 %1, metadata !11096, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32 %2, metadata !11097, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32* %3, metadata !11098, metadata !DIExpression()), !dbg !11099
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11100, !srcloc !11102
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !11103
  ret i32 %5, !dbg !11104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !11105 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11107, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %1, metadata !11108, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %2, metadata !11109, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32* %3, metadata !11110, metadata !DIExpression()), !dbg !11115
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !11116
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !11118
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !11118
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !11118
  br i1 %11, label %33, label %12, !dbg !11118

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !11115
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !11115
  call void @llvm.dbg.value(metadata i8* %14, metadata !11113, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %13, metadata !11111, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %1, metadata !11112, metadata !DIExpression()), !dbg !11115
  br label %15, !dbg !11119

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !11121
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !11115
  call void @llvm.dbg.value(metadata i8* %17, metadata !11113, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %16, metadata !11112, metadata !DIExpression()), !dbg !11115
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !11122
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !11125
  call void @llvm.dbg.value(metadata i8* %19, metadata !11113, metadata !DIExpression()), !dbg !11115
  %20 = load i8, i8* %17, align 1, !dbg !11126
  %21 = zext i8 %20 to i32, !dbg !11127
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !11122
  %23 = icmp eq i32 %22, -1, !dbg !11128
  br i1 %23, label %30, label %24, !dbg !11129

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !11130
  call void @llvm.dbg.value(metadata i32 %25, metadata !11112, metadata !DIExpression()), !dbg !11115
  %26 = icmp eq i32 %25, 0, !dbg !11131
  br i1 %26, label %27, label %15, !dbg !11132, !llvm.loop !11133

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !11135
  call void @llvm.dbg.value(metadata i32 %28, metadata !11111, metadata !DIExpression()), !dbg !11115
  %29 = icmp eq i32 %28, 0, !dbg !11136
  br i1 %29, label %30, label %12, !dbg !11137, !llvm.loop !11138

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !11115
  call void @llvm.dbg.value(metadata i32 %31, metadata !11111, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.label(metadata !11114), !dbg !11141
  %32 = sub i32 %2, %31, !dbg !11142
  br label %33, !dbg !11143

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !11115
  ret i32 %34, !dbg !11144
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !11145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11149, metadata !DIExpression()), !dbg !11150
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !11151
  %3 = icmp eq i32 %2, -1, !dbg !11153
  br i1 %3, label %8, label %4, !dbg !11154

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !11155
  %6 = icmp eq i32 %5, -1, !dbg !11156
  %7 = sext i1 %6 to i32, !dbg !11155
  br label %8, !dbg !11157

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !11150
  ret i32 %9, !dbg !11158
}

; Function Attrs: noinline nounwind optsize
define internal void @sam0_eic_isr(%struct.device* nocapture noundef readonly %0) #1 !dbg !11159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11163, metadata !DIExpression()), !dbg !11176
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11177
  %3 = bitcast i8** %2 to %struct.sam0_eic_data**, !dbg !11177
  %4 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !11177
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* %4, metadata !11164, metadata !DIExpression()), !dbg !11176
  %5 = load volatile i32, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !11178
  %6 = and i32 %5, 65535, !dbg !11179
  call void @llvm.dbg.value(metadata i32 %5, metadata !11167, metadata !DIExpression()), !dbg !11176
  store volatile i32 %6, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !11180
  call void @llvm.dbg.value(metadata i32 %6, metadata !11181, metadata !DIExpression()) #24, !dbg !11185
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !11187, !srcloc !11188
  call void @llvm.dbg.value(metadata i32 %7, metadata !11184, metadata !DIExpression()) #24, !dbg !11185
  call void @llvm.dbg.value(metadata i32 %7, metadata !11189, metadata !DIExpression()) #24, !dbg !11194
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !11196, !range !10482
  call void @llvm.dbg.value(metadata i32 %8, metadata !11168, metadata !DIExpression()), !dbg !11176
  %9 = lshr i32 %6, %8, !dbg !11197
  call void @llvm.dbg.value(metadata i32 %9, metadata !11167, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11176
  %10 = trunc i32 %9 to i16, !dbg !11176
  call void @llvm.dbg.value(metadata i16 %10, metadata !11167, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.value(metadata i32 %8, metadata !11168, metadata !DIExpression()), !dbg !11176
  %11 = icmp eq i16 %10, 0, !dbg !11198
  br i1 %11, label %35, label %12, !dbg !11198

12:                                               ; preds = %1, %30
  %13 = phi i32 [ %32, %30 ], [ %9, %1 ]
  %14 = phi i32 [ %33, %30 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11168, metadata !DIExpression()), !dbg !11176
  %15 = and i32 %13, 1, !dbg !11199
  %16 = icmp eq i32 %15, 0, !dbg !11199
  br i1 %16, label %30, label %17, !dbg !11201

17:                                               ; preds = %12
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* %4, i32 %14), metadata !11169, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !11202
  %18 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %4, i32 0, i32 1, i32 %14, i32 0, !dbg !11203
  %19 = load i8, i8* %18, align 1, !dbg !11203
  %20 = lshr i8 %19, 5, !dbg !11203
  %21 = and i8 %20, 3, !dbg !11203
  %22 = zext i8 %21 to i32, !dbg !11204
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* %4, i32 %22), metadata !11174, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !11202
  %23 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %4, i32 0, i32 0, i32 %22, i32 0, !dbg !11205
  %24 = load void (i32, i8*)*, void (i32, i8*)** %23, align 4, !dbg !11205
  %25 = and i8 %19, 31, !dbg !11206
  %26 = zext i8 %25 to i32, !dbg !11206
  %27 = shl nuw i32 1, %26, !dbg !11206
  %28 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %4, i32 0, i32 0, i32 %22, i32 1, !dbg !11207
  %29 = load i8*, i8** %28, align 4, !dbg !11207
  tail call void %24(i32 noundef %27, i8* noundef %29) #26, !dbg !11208
  br label %30, !dbg !11209

30:                                               ; preds = %12, %17
  %31 = lshr i32 %13, 1, !dbg !11210
  %32 = and i32 %31, 32767, !dbg !11210
  call void @llvm.dbg.value(metadata i32 %32, metadata !11167, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11176
  %33 = add i32 %14, 1, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %33, metadata !11168, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.value(metadata i32 %32, metadata !11167, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11176
  %34 = icmp eq i32 %32, 0, !dbg !11198
  br i1 %34, label %35, label %12, !dbg !11198, !llvm.loop !11212

35:                                               ; preds = %30, %1
  ret void, !dbg !11214
}

; Function Attrs: noinline nounwind optsize
define internal i32 @sam0_eic_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1727, metadata !DIExpression()), !dbg !11215
  %2 = load volatile i32, i32* inttoptr (i32 1073743892 to i32*), align 4, !dbg !11216
  %3 = or i32 %2, 1024, !dbg !11216
  store volatile i32 %3, i32* inttoptr (i32 1073743892 to i32*), align 4, !dbg !11216
  store volatile i32 64, i32* inttoptr (i32 1073749136 to i32*), align 16, !dbg !11217
  tail call void @z_arm_irq_priority_set(i32 noundef 12, i32 noundef 0, i32 noundef 0) #26, !dbg !11218
  tail call void @arch_irq_enable(i32 noundef 12) #26, !dbg !11221
  tail call void @z_arm_irq_priority_set(i32 noundef 13, i32 noundef 0, i32 noundef 0) #26, !dbg !11222
  tail call void @arch_irq_enable(i32 noundef 13) #26, !dbg !11225
  tail call void @z_arm_irq_priority_set(i32 noundef 14, i32 noundef 0, i32 noundef 0) #26, !dbg !11226
  tail call void @arch_irq_enable(i32 noundef 14) #26, !dbg !11229
  tail call void @z_arm_irq_priority_set(i32 noundef 15, i32 noundef 0, i32 noundef 0) #26, !dbg !11230
  tail call void @arch_irq_enable(i32 noundef 15) #26, !dbg !11233
  tail call void @z_arm_irq_priority_set(i32 noundef 16, i32 noundef 0, i32 noundef 0) #26, !dbg !11234
  tail call void @arch_irq_enable(i32 noundef 16) #26, !dbg !11237
  tail call void @z_arm_irq_priority_set(i32 noundef 17, i32 noundef 0, i32 noundef 0) #26, !dbg !11238
  tail call void @arch_irq_enable(i32 noundef 17) #26, !dbg !11241
  tail call void @z_arm_irq_priority_set(i32 noundef 18, i32 noundef 0, i32 noundef 0) #26, !dbg !11242
  tail call void @arch_irq_enable(i32 noundef 18) #26, !dbg !11245
  tail call void @z_arm_irq_priority_set(i32 noundef 19, i32 noundef 0, i32 noundef 0) #26, !dbg !11246
  tail call void @arch_irq_enable(i32 noundef 19) #26, !dbg !11249
  tail call void @z_arm_irq_priority_set(i32 noundef 20, i32 noundef 0, i32 noundef 0) #26, !dbg !11250
  tail call void @arch_irq_enable(i32 noundef 20) #26, !dbg !11253
  tail call void @z_arm_irq_priority_set(i32 noundef 21, i32 noundef 0, i32 noundef 0) #26, !dbg !11254
  tail call void @arch_irq_enable(i32 noundef 21) #26, !dbg !11257
  tail call void @z_arm_irq_priority_set(i32 noundef 22, i32 noundef 0, i32 noundef 0) #26, !dbg !11258
  tail call void @arch_irq_enable(i32 noundef 22) #26, !dbg !11261
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !11262
  tail call void @arch_irq_enable(i32 noundef 23) #26, !dbg !11265
  tail call void @z_arm_irq_priority_set(i32 noundef 24, i32 noundef 0, i32 noundef 0) #26, !dbg !11266
  tail call void @arch_irq_enable(i32 noundef 24) #26, !dbg !11269
  tail call void @z_arm_irq_priority_set(i32 noundef 25, i32 noundef 0, i32 noundef 0) #26, !dbg !11270
  tail call void @arch_irq_enable(i32 noundef 25) #26, !dbg !11273
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 0, i32 noundef 0) #26, !dbg !11274
  tail call void @arch_irq_enable(i32 noundef 26) #26, !dbg !11277
  tail call void @z_arm_irq_priority_set(i32 noundef 27, i32 noundef 0, i32 noundef 0) #26, !dbg !11278
  tail call void @arch_irq_enable(i32 noundef 27) #26, !dbg !11281
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !11282
  tail call fastcc void @wait_synchronization() #25, !dbg !11283
  ret i32 0, !dbg !11284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_eic_enable(i1 noundef zeroext %0) unnamed_addr #15 !dbg !11285 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !11289, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11290
  %2 = load volatile i8, i8* inttoptr (i32 1073752064 to i8*), align 2048, !dbg !11291
  %3 = select i1 %0, i8 2, i8 0, !dbg !11291
  %4 = and i8 %2, -3, !dbg !11291
  %5 = or i8 %4, %3, !dbg !11291
  store volatile i8 %5, i8* inttoptr (i32 1073752064 to i8*), align 2048, !dbg !11291
  ret void, !dbg !11292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @wait_synchronization() unnamed_addr #15 !dbg !11293 {
  br label %1, !dbg !11294

1:                                                ; preds = %1, %0
  %2 = load volatile i32, i32* inttoptr (i32 1073752068 to i32*), align 4, !dbg !11295
  %3 = icmp eq i32 %2, 0, !dbg !11294
  br i1 %3, label %4, label %1, !dbg !11294, !llvm.loop !11296

4:                                                ; preds = %1
  ret void, !dbg !11298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sam0_eic_acquire(i32 noundef %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3, void (i32, i8*)* noundef %4, i8* noundef %5) local_unnamed_addr #1 !dbg !11299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11303, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata i32 %1, metadata !11304, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata i32 %2, metadata !11305, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata i1 %3, metadata !11306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11321
  call void @llvm.dbg.value(metadata void (i32, i8*)* %4, metadata !11307, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata i8* %5, metadata !11308, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !11309, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !11311, metadata !DIExpression()), !dbg !11321
  %7 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %7, metadata !11315, metadata !DIExpression()), !dbg !11321
  %8 = icmp slt i32 %7, 0, !dbg !11323
  br i1 %8, label %63, label %9, !dbg !11325

9:                                                ; preds = %6
  %10 = shl nuw i32 1, %7, !dbg !11326
  call void @llvm.dbg.value(metadata i32 %10, metadata !11314, metadata !DIExpression()), !dbg !11321
  %11 = lshr i32 %7, 3, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %11, metadata !11316, metadata !DIExpression()), !dbg !11321
  %12 = shl i32 %7, 2, !dbg !11328
  %13 = and i32 %12, 28, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %13, metadata !11317, metadata !DIExpression()), !dbg !11321
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !11329, !srcloc !11335
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %15, metadata !11332, metadata !DIExpression()) #24, !dbg !11336
  call void @llvm.dbg.value(metadata i32 undef, metadata !11333, metadata !DIExpression()) #24, !dbg !11336
  call void @llvm.dbg.value(metadata i32 %15, metadata !11318, metadata !DIExpression()), !dbg !11321
  tail call fastcc void @set_eic_enable(i1 noundef zeroext false) #25, !dbg !11337
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %7), metadata !11313, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !11321
  %16 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %7, i32 0, !dbg !11338
  %17 = load i8, i8* %16, align 1, !dbg !11338
  %18 = icmp sgt i8 %17, -1, !dbg !11340
  br i1 %18, label %28, label %19, !dbg !11341

19:                                               ; preds = %9
  %20 = lshr i8 %17, 5, !dbg !11342
  %21 = and i8 %20, 3, !dbg !11342
  %22 = zext i8 %21 to i32, !dbg !11345
  %23 = icmp eq i32 %22, %0, !dbg !11346
  br i1 %23, label %24, label %62, !dbg !11347

24:                                               ; preds = %19
  %25 = and i8 %17, 31, !dbg !11348
  %26 = zext i8 %25 to i32, !dbg !11349
  %27 = icmp eq i32 %26, %1, !dbg !11350
  br i1 %27, label %28, label %62, !dbg !11351

28:                                               ; preds = %24, %9
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %0), metadata !11312, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !11321
  %29 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 0, i32 %0, i32 0, !dbg !11352
  store void (i32, i8*)* %4, void (i32, i8*)** %29, align 4, !dbg !11353
  %30 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 0, i32 %0, i32 1, !dbg !11354
  store i8* %5, i8** %30, align 4, !dbg !11355
  %31 = trunc i32 %1 to i8, !dbg !11356
  %32 = and i8 %31, 31, !dbg !11357
  %33 = trunc i32 %0 to i8, !dbg !11358
  %34 = shl i8 %33, 5, !dbg !11359
  %35 = or i8 %32, %34, !dbg !11360
  %36 = or i8 %35, -128, !dbg !11360
  store i8 %36, i8* %16, align 1, !dbg !11360
  %37 = getelementptr inbounds [2 x %union.anon.5], [2 x %union.anon.5]* inttoptr (i32 1073752092 to [2 x %union.anon.5]*), i32 0, i32 %11, i32 0, i32 0, !dbg !11361
  %38 = load volatile i32, i32* %37, align 4, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %38, metadata !11319, metadata !DIExpression()), !dbg !11321
  %39 = shl nuw i32 15, %13, !dbg !11362
  %40 = xor i32 %39, -1, !dbg !11363
  %41 = and i32 %38, %40, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %41, metadata !11319, metadata !DIExpression()), !dbg !11321
  switch i32 %2, label %57 [
    i32 0, label %42
    i32 1, label %45
    i32 2, label %48
    i32 3, label %51
    i32 4, label %54
  ], !dbg !11365

42:                                               ; preds = %28
  %43 = shl nuw nsw i32 1, %13, !dbg !11366
  %44 = or i32 %41, %43, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %44, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %57, !dbg !11369

45:                                               ; preds = %28
  %46 = shl nuw nsw i32 2, %13, !dbg !11370
  %47 = or i32 %41, %46, !dbg !11371
  call void @llvm.dbg.value(metadata i32 %47, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %57, !dbg !11372

48:                                               ; preds = %28
  %49 = shl nuw nsw i32 3, %13, !dbg !11373
  %50 = or i32 %41, %49, !dbg !11374
  call void @llvm.dbg.value(metadata i32 %50, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %57, !dbg !11375

51:                                               ; preds = %28
  %52 = shl nuw nsw i32 4, %13, !dbg !11376
  %53 = or i32 %41, %52, !dbg !11377
  call void @llvm.dbg.value(metadata i32 %53, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %57, !dbg !11378

54:                                               ; preds = %28
  %55 = shl nuw nsw i32 5, %13, !dbg !11379
  %56 = or i32 %41, %55, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %56, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %57, !dbg !11381

57:                                               ; preds = %28, %54, %51, %48, %45, %42
  %58 = phi i32 [ %41, %28 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], !dbg !11321
  call void @llvm.dbg.value(metadata i32 %58, metadata !11319, metadata !DIExpression()), !dbg !11321
  %59 = shl nuw i32 8, %13, !dbg !11382
  %60 = select i1 %3, i32 %59, i32 0, !dbg !11382
  %61 = or i32 %58, %60, !dbg !11382
  call void @llvm.dbg.value(metadata i32 %61, metadata !11319, metadata !DIExpression()), !dbg !11321
  store volatile i32 %61, i32* %37, align 4, !dbg !11383
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !11384
  tail call fastcc void @wait_synchronization() #25, !dbg !11385
  store volatile i32 %10, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !11386
  call void @llvm.dbg.value(metadata i32 %15, metadata !11387, metadata !DIExpression()) #24, !dbg !11390
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #24, !dbg !11392, !srcloc !11393
  br label %63, !dbg !11394

62:                                               ; preds = %19, %24
  call void @llvm.dbg.label(metadata !11320), !dbg !11395
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !11396
  tail call fastcc void @wait_synchronization() #25, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %15, metadata !11387, metadata !DIExpression()) #24, !dbg !11398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #24, !dbg !11400, !srcloc !11393
  br label %63, !dbg !11401

63:                                               ; preds = %6, %62, %57
  %64 = phi i32 [ -16, %62 ], [ 0, %57 ], [ %7, %6 ], !dbg !11321
  ret i32 %64, !dbg !11402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !11403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11407, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.value(metadata i32 %1, metadata !11408, metadata !DIExpression()), !dbg !11410
  %3 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* @sam0_eic_channels, i32 0, i32 %0, i32 %1, !dbg !11411
  %4 = load i8, i8* %3, align 1, !dbg !11411
  call void @llvm.dbg.value(metadata i8 %4, metadata !11409, metadata !DIExpression()), !dbg !11410
  %5 = icmp eq i8 %4, -1, !dbg !11412
  %6 = zext i8 %4 to i32, !dbg !11414
  %7 = select i1 %5, i32 -134, i32 %6, !dbg !11414
  ret i32 %7, !dbg !11415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sam0_eic_release(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11418, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.value(metadata i32 %1, metadata !11419, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !11420, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !11421, metadata !DIExpression()), !dbg !11428
  %3 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !11429
  call void @llvm.dbg.value(metadata i32 %3, metadata !11423, metadata !DIExpression()), !dbg !11428
  %4 = icmp slt i32 %3, 0, !dbg !11430
  br i1 %4, label %23, label %5, !dbg !11432

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %3, !dbg !11433
  call void @llvm.dbg.value(metadata i32 %6, metadata !11422, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.value(metadata i32 %3, metadata !11424, metadata !DIExpression(DW_OP_constu, 8, DW_OP_div, DW_OP_stack_value)), !dbg !11428
  call void @llvm.dbg.value(metadata i32 %3, metadata !11425, metadata !DIExpression(DW_OP_constu, 8, DW_OP_mod, DW_OP_constu, 4, DW_OP_mul, DW_OP_stack_value)), !dbg !11428
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !11434, !srcloc !11335
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !11434
  call void @llvm.dbg.value(metadata i32 %8, metadata !11332, metadata !DIExpression()) #24, !dbg !11436
  call void @llvm.dbg.value(metadata i32 undef, metadata !11333, metadata !DIExpression()) #24, !dbg !11436
  call void @llvm.dbg.value(metadata i32 %8, metadata !11426, metadata !DIExpression()), !dbg !11428
  tail call fastcc void @set_eic_enable(i1 noundef zeroext false) #25, !dbg !11437
  tail call fastcc void @wait_synchronization() #25, !dbg !11438
  %9 = tail call fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %3) #25, !dbg !11439
  br i1 %9, label %10, label %22, !dbg !11441

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !11425, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_constu, 4, DW_OP_mul, DW_OP_stack_value)), !dbg !11428
  %11 = shl i32 %3, 2, !dbg !11442
  %12 = and i32 %11, 28, !dbg !11442
  call void @llvm.dbg.value(metadata i32 %12, metadata !11425, metadata !DIExpression()), !dbg !11428
  %13 = lshr i32 %3, 3, !dbg !11443
  call void @llvm.dbg.value(metadata i32 %13, metadata !11424, metadata !DIExpression()), !dbg !11428
  %14 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %3, i32 0, !dbg !11444
  %15 = load i8, i8* %14, align 1, !dbg !11445
  %16 = and i8 %15, 127, !dbg !11445
  store i8 %16, i8* %14, align 1, !dbg !11445
  %17 = shl nuw i32 15, %12, !dbg !11446
  %18 = xor i32 %17, -1, !dbg !11447
  %19 = getelementptr inbounds [2 x %union.anon.5], [2 x %union.anon.5]* inttoptr (i32 1073752092 to [2 x %union.anon.5]*), i32 0, i32 %13, i32 0, i32 0, !dbg !11448
  %20 = load volatile i32, i32* %19, align 4, !dbg !11449
  %21 = and i32 %20, %18, !dbg !11449
  store volatile i32 %21, i32* %19, align 4, !dbg !11449
  store volatile i32 %6, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !11450
  store volatile i32 %6, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !11451
  br label %22, !dbg !11452

22:                                               ; preds = %5, %10
  call void @llvm.dbg.label(metadata !11427), !dbg !11453
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !11454
  tail call fastcc void @wait_synchronization() #25, !dbg !11455
  call void @llvm.dbg.value(metadata i32 %8, metadata !11387, metadata !DIExpression()) #24, !dbg !11456
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !11458, !srcloc !11393
  br label %23, !dbg !11459

23:                                               ; preds = %2, %22
  %24 = phi i32 [ 0, %22 ], [ %3, %2 ], !dbg !11428
  ret i32 %24, !dbg !11460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !11461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11465, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.value(metadata i32 %1, metadata !11466, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.value(metadata i32 %2, metadata !11467, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !11468, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !11469, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %2), metadata !11470, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !11471
  %4 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %2, i32 0, !dbg !11472
  %5 = load i8, i8* %4, align 1, !dbg !11472
  %6 = icmp sgt i8 %5, -1, !dbg !11474
  br i1 %6, label %16, label %7, !dbg !11475

7:                                                ; preds = %3
  %8 = lshr i8 %5, 5, !dbg !11476
  %9 = and i8 %8, 3, !dbg !11476
  %10 = zext i8 %9 to i32, !dbg !11478
  %11 = icmp eq i32 %10, %0, !dbg !11479
  br i1 %11, label %12, label %16, !dbg !11480

12:                                               ; preds = %7
  %13 = and i8 %5, 31, !dbg !11481
  %14 = zext i8 %13 to i32, !dbg !11482
  %15 = icmp eq i32 %14, %1, !dbg !11483
  br label %16, !dbg !11484

16:                                               ; preds = %12, %7, %3
  %17 = phi i1 [ false, %3 ], [ false, %7 ], [ %15, %12 ], !dbg !11471
  ret i1 %17, !dbg !11485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @sam0_eic_enable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !11486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11488, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.value(metadata i32 %1, metadata !11489, metadata !DIExpression()), !dbg !11492
  %3 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !11493
  call void @llvm.dbg.value(metadata i32 %3, metadata !11491, metadata !DIExpression()), !dbg !11492
  %4 = icmp slt i32 %3, 0, !dbg !11494
  br i1 %4, label %9, label %5, !dbg !11496

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %3) #25, !dbg !11497
  br i1 %6, label %7, label %9, !dbg !11499

7:                                                ; preds = %5
  %8 = shl nuw i32 1, %3, !dbg !11500
  call void @llvm.dbg.value(metadata i32 %8, metadata !11490, metadata !DIExpression()), !dbg !11492
  store volatile i32 %8, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !11501
  store volatile i32 %8, i32* inttoptr (i32 1073752080 to i32*), align 16, !dbg !11502
  br label %9, !dbg !11503

9:                                                ; preds = %5, %2, %7
  %10 = phi i32 [ 0, %7 ], [ %3, %2 ], [ -16, %5 ], !dbg !11492
  ret i32 %10, !dbg !11504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @sam0_eic_disable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !11505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11507, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.value(metadata i32 %1, metadata !11508, metadata !DIExpression()), !dbg !11511
  %3 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %3, metadata !11510, metadata !DIExpression()), !dbg !11511
  %4 = icmp slt i32 %3, 0, !dbg !11513
  br i1 %4, label %9, label %5, !dbg !11515

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %3) #25, !dbg !11516
  br i1 %6, label %7, label %9, !dbg !11518

7:                                                ; preds = %5
  %8 = shl nuw i32 1, %3, !dbg !11519
  call void @llvm.dbg.value(metadata i32 %8, metadata !11509, metadata !DIExpression()), !dbg !11511
  store volatile i32 %8, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !11520
  store volatile i32 %8, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !11521
  br label %9, !dbg !11522

9:                                                ; preds = %5, %2, %7
  %10 = phi i32 [ 0, %7 ], [ %3, %2 ], [ -16, %5 ], !dbg !11511
  ret i32 %10, !dbg !11523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @sam0_eic_interrupt_pending(i32 noundef %0) local_unnamed_addr #15 !dbg !11524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11528, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !11529, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !11530, metadata !DIExpression()), !dbg !11536
  %2 = load volatile i32, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !11537
  call void @llvm.dbg.value(metadata i32 %2, metadata !11532, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i32 0, metadata !11533, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i32 0, metadata !11534, metadata !DIExpression()), !dbg !11538
  br label %4, !dbg !11539

3:                                                ; preds = %24
  ret i32 %25, !dbg !11540

4:                                                ; preds = %1, %24
  %5 = phi i32 [ 0, %1 ], [ %26, %24 ]
  %6 = phi i32 [ 0, %1 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !11534, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata i32 %6, metadata !11533, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %5), metadata !11531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !11536
  %7 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %5, i32 0, !dbg !11541
  %8 = load i8, i8* %7, align 1, !dbg !11541
  %9 = icmp sgt i8 %8, -1, !dbg !11545
  br i1 %9, label %24, label %10, !dbg !11546

10:                                               ; preds = %4
  %11 = lshr i8 %8, 5, !dbg !11547
  %12 = and i8 %11, 3, !dbg !11547
  %13 = zext i8 %12 to i32, !dbg !11549
  %14 = icmp eq i32 %13, %0, !dbg !11550
  br i1 %14, label %15, label %24, !dbg !11551

15:                                               ; preds = %10
  %16 = shl nuw nsw i32 1, %5, !dbg !11552
  %17 = and i32 %16, %2, !dbg !11554
  %18 = icmp eq i32 %17, 0, !dbg !11554
  br i1 %18, label %24, label %19, !dbg !11555

19:                                               ; preds = %15
  %20 = and i8 %8, 31, !dbg !11556
  %21 = zext i8 %20 to i32, !dbg !11556
  %22 = shl nuw i32 1, %21, !dbg !11556
  %23 = or i32 %22, %6, !dbg !11557
  call void @llvm.dbg.value(metadata i32 %23, metadata !11533, metadata !DIExpression()), !dbg !11536
  br label %24, !dbg !11558

24:                                               ; preds = %15, %10, %4, %19
  %25 = phi i32 [ %6, %10 ], [ %23, %19 ], [ %6, %15 ], [ %6, %4 ], !dbg !11536
  call void @llvm.dbg.value(metadata i32 %25, metadata !11533, metadata !DIExpression()), !dbg !11536
  %26 = add nuw nsw i32 %5, 1, !dbg !11559
  call void @llvm.dbg.value(metadata i32 %26, metadata !11534, metadata !DIExpression()), !dbg !11538
  %27 = icmp eq i32 %26, 16, !dbg !11560
  br i1 %27, label %3, label %4, !dbg !11539, !llvm.loop !11561
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !11563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11565, metadata !DIExpression()), !dbg !11566
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !11567
  br i1 %2, label %3, label %4, !dbg !11569

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !11570
  br label %4, !dbg !11571

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !11566
  ret i32 %5, !dbg !11572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !11573 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !11577, metadata !DIExpression()), !dbg !11578
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11579, !srcloc !11581
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !11582
  ret i1 %1, !dbg !11583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !11584 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !11585
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !11586
  ret void, !dbg !11587
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !11588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11590, metadata !DIExpression()), !dbg !11591
  %2 = icmp eq i32 %0, 10, !dbg !11592
  br i1 %2, label %3, label %4, !dbg !11594

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !11595
  br label %4, !dbg !11597

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !11598
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !11599
  ret i32 %0, !dbg !11600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11601 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !11604, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i8 %0, metadata !11605, metadata !DIExpression()), !dbg !11606
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11607, !srcloc !11609
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !11610
  ret void, !dbg !11611
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11612 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !11614, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i8 %0, metadata !11615, metadata !DIExpression()), !dbg !11617
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_36, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !11618
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !11616, metadata !DIExpression()), !dbg !11617
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !11619
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !11619
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_36, i8 noundef zeroext %0) #26, !dbg !11620
  ret void, !dbg !11621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !11622 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !11624, metadata !DIExpression()), !dbg !11625
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_36) #26, !dbg !11626
  ret i1 %1, !dbg !11627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !11628 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !11675, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !11676, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !11677, metadata !DIExpression()), !dbg !11678
  ret void, !dbg !11679
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #21 !dbg !11680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11682, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 0, metadata !11683, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 0, metadata !11683, metadata !DIExpression()), !dbg !11684
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !11685
  call void @llvm.dbg.value(metadata i32 1, metadata !11683, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 1, metadata !11683, metadata !DIExpression()), !dbg !11684
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !11685
  call void @llvm.dbg.value(metadata i32 2, metadata !11683, metadata !DIExpression()), !dbg !11684
  ret i32 0, !dbg !11689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !11690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11692, metadata !DIExpression()), !dbg !11693
  ret i32 50, !dbg !11694
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !11695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11697, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11698, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 %2, metadata !11699, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 %3, metadata !11700, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 %4, metadata !11701, metadata !DIExpression()), !dbg !11705
  %6 = icmp eq i32 %2, 1, !dbg !11706
  br i1 %6, label %8, label %7, !dbg !11708

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 69) #26, !dbg !11709
  br label %70, !dbg !11715

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !11716
  %10 = load i16, i16* %9, align 2, !dbg !11716
  %11 = and i16 %10, 32, !dbg !11718
  %12 = icmp eq i16 %11, 0, !dbg !11718
  br i1 %12, label %13, label %14, !dbg !11719

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.143, i32 0, i32 0), i32 noundef 69) #26, !dbg !11720
  br label %70, !dbg !11726

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !11727
  %16 = load i16, i16* %15, align 4, !dbg !11727
  %17 = icmp eq i16 %16, 16, !dbg !11729
  br i1 %17, label %19, label %18, !dbg !11730

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.144, i32 0, i32 0), i32 noundef 69) #26, !dbg !11731
  br label %70, !dbg !11737

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !11738
  br i1 %20, label %21, label %37, !dbg !11740

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !11741

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11743
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11743
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !11745
  br label %53, !dbg !11746

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !11747
  %27 = load i32, i32* %26, align 4, !dbg !11747
  %28 = icmp eq i32 %27, 32, !dbg !11749
  br i1 %28, label %30, label %29, !dbg !11750

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.145, i32 0, i32 0), i32 noundef 69) #26, !dbg !11751
  br label %70, !dbg !11757

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11758
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11758
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !11759
  br label %53, !dbg !11760

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11761
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !11761
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !11762
  br label %53, !dbg !11763

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.146, i32 0, i32 0), i32 noundef 69) #26, !dbg !11764
  br label %70, !dbg !11769

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !11770

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11772
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11772
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !11774
  br label %53, !dbg !11775

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !11776
  %43 = load i32, i32* %42, align 4, !dbg !11776
  %44 = icmp eq i32 %43, 32, !dbg !11778
  br i1 %44, label %46, label %45, !dbg !11779

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.145, i32 0, i32 0), i32 noundef 69) #26, !dbg !11780
  br label %70, !dbg !11786

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11787
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11787
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !11788
  br label %53, !dbg !11789

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11790
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !11790
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !11791
  br label %53, !dbg !11792

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.146, i32 0, i32 0), i32 noundef 69) #26, !dbg !11793
  br label %70, !dbg !11798

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !11799
  store i32 %3, i32* %54, align 4, !dbg !11800
  %55 = tail call fastcc i32 @get_unused_session() #25, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %55, metadata !11704, metadata !DIExpression()), !dbg !11705
  %56 = icmp eq i32 %55, 2, !dbg !11802
  br i1 %56, label %57, label %58, !dbg !11804

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.147, i32 0, i32 0), i32 noundef 69) #26, !dbg !11805
  br label %70, !dbg !11811

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !11812
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !11702, metadata !DIExpression()), !dbg !11705
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !11813
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !11815
  %62 = load i8*, i8** %61, align 4, !dbg !11815
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #26, !dbg !11816
  %64 = icmp eq i32 %63, 0, !dbg !11817
  br i1 %64, label %65, label %67, !dbg !11818

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.148, i32 0, i32 0), i32 noundef 69) #26, !dbg !11819
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !11825
  store i32 0, i32* %66, align 4, !dbg !11826
  br label %70, !dbg !11827

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11828
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !11829
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !11829
  br label %70, !dbg !11830

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !11705
  ret i32 %71, !dbg !11831
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !11832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11834, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11835, metadata !DIExpression()), !dbg !11837
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11838
  %4 = load i8*, i8** %3, align 4, !dbg !11838
  call void @llvm.dbg.value(metadata i8* %4, metadata !11836, metadata !DIExpression()), !dbg !11837
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #26, !dbg !11839
  %6 = bitcast i8* %4 to i32*, !dbg !11840
  store i32 0, i32* %6, align 4, !dbg !11841
  ret i32 0, !dbg !11842
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11843 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11845, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11846, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i8* %2, metadata !11847, metadata !DIExpression()), !dbg !11849
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11850
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !11850
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !11850
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !11848, metadata !DIExpression()), !dbg !11849
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11851
  %8 = load i8*, i8** %7, align 4, !dbg !11851
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11853
  %10 = load i32, i32* %9, align 4, !dbg !11853
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11854
  %12 = load i8*, i8** %11, align 4, !dbg !11854
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11855
  %14 = load i32, i32* %13, align 4, !dbg !11855
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !11856
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #26, !dbg !11857
  %17 = icmp eq i32 %16, 0, !dbg !11858
  br i1 %17, label %18, label %19, !dbg !11859

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.157, i32 0, i32 0), i32 noundef 69) #26, !dbg !11860
  br label %22, !dbg !11866

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !11867
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11868
  store i32 %20, i32* %21, align 4, !dbg !11869
  br label %22, !dbg !11870

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !11849
  ret i32 %23, !dbg !11871
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11872 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11874, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11875, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i8* %2, metadata !11876, metadata !DIExpression()), !dbg !11880
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11881
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11881
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11881
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11877, metadata !DIExpression()), !dbg !11880
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11882
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #24, !dbg !11882
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11878, metadata !DIExpression()), !dbg !11883
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11883
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11884
  %10 = load i16, i16* %9, align 4, !dbg !11884
  %11 = zext i16 %10 to i32, !dbg !11885
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11886
  %13 = load i32, i32* %12, align 4, !dbg !11886
  %14 = lshr i32 %13, 3, !dbg !11887
  %15 = sub nsw i32 %11, %14, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %15, metadata !11879, metadata !DIExpression()), !dbg !11880
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #26, !dbg !11889
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11890
  %18 = load i8*, i8** %17, align 4, !dbg !11890
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11892
  %20 = load i32, i32* %19, align 4, !dbg !11892
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11893
  %22 = load i8*, i8** %21, align 4, !dbg !11893
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11894
  %24 = load i32, i32* %23, align 4, !dbg !11894
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11895
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #26, !dbg !11896
  %27 = icmp eq i32 %26, 0, !dbg !11897
  br i1 %27, label %28, label %29, !dbg !11898

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.156, i32 0, i32 0), i32 noundef 69) #26, !dbg !11899
  br label %32, !dbg !11905

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11906
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11907
  store i32 %30, i32* %31, align 4, !dbg !11908
  br label %32, !dbg !11909

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11880
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #24, !dbg !11910
  ret i32 %33, !dbg !11910
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11911 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11913, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11914, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i8* %2, metadata !11915, metadata !DIExpression()), !dbg !11928
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11929
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #24, !dbg !11929
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11916, metadata !DIExpression()), !dbg !11930
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11931
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11931
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11931
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11924, metadata !DIExpression()), !dbg !11928
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11932
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11933
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11925, metadata !DIExpression()), !dbg !11928
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11934
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11934
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11927, metadata !DIExpression()), !dbg !11928
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11935
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11937
  %15 = load i16, i16* %14, align 2, !dbg !11937
  %16 = zext i16 %15 to i32, !dbg !11938
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11939
  %18 = load i16, i16* %17, align 2, !dbg !11939
  %19 = zext i16 %18 to i32, !dbg !11940
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #26, !dbg !11941
  %21 = icmp eq i32 %20, 0, !dbg !11942
  br i1 %21, label %22, label %23, !dbg !11943

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.154, i32 0, i32 0), i32 noundef 69) #26, !dbg !11944
  br label %56, !dbg !11950

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11951
  %25 = load i8*, i8** %24, align 4, !dbg !11951
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11953
  %27 = load i32, i32* %26, align 4, !dbg !11953
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11954
  %29 = load i8*, i8** %28, align 4, !dbg !11954
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11955
  %31 = load i32, i32* %30, align 4, !dbg !11955
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11956
  %33 = load i8*, i8** %32, align 4, !dbg !11956
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11957
  %35 = load i32, i32* %34, align 4, !dbg !11957
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #26, !dbg !11958
  %37 = icmp eq i32 %36, 0, !dbg !11959
  br i1 %37, label %38, label %39, !dbg !11960

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.155, i32 0, i32 0), i32 noundef 69) #26, !dbg !11961
  br label %56, !dbg !11967

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11968
  %41 = load i8*, i8** %40, align 4, !dbg !11968
  %42 = icmp eq i8* %41, null, !dbg !11970
  br i1 %42, label %50, label %43, !dbg !11971

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11972
  %45 = load i32, i32* %34, align 4, !dbg !11974
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11975
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11976
  %48 = load i32, i32* %47, align 4, !dbg !11976
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #26, !dbg !11977
  br label %50, !dbg !11978

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11979
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11980
  %53 = load i32, i32* %52, align 4, !dbg !11980
  %54 = add i32 %53, %51, !dbg !11981
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11982
  store i32 %54, i32* %55, align 4, !dbg !11983
  br label %56, !dbg !11984

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11928
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #24, !dbg !11985
  ret i32 %57, !dbg !11985
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11986 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11988, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11989, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata i8* %2, metadata !11990, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11991, metadata !DIExpression()), !dbg !11992
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11993
  %5 = load i8*, i8** %4, align 4, !dbg !11993
  %6 = icmp eq i8* %5, %2, !dbg !11995
  br i1 %6, label %8, label %7, !dbg !11996

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.152, i32 0, i32 0), i32 noundef 69) #26, !dbg !11997
  br label %27, !dbg !12003

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !12004
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !12004
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !12004
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11991, metadata !DIExpression()), !dbg !11992
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !12005
  %13 = load i8*, i8** %12, align 4, !dbg !12005
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !12007
  %15 = load i32, i32* %14, align 4, !dbg !12007
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !12008
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !12009
  %18 = load i32, i32* %17, align 4, !dbg !12009
  %19 = add nsw i32 %18, -16, !dbg !12010
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !12011
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #26, !dbg !12012
  %22 = icmp eq i32 %21, 0, !dbg !12013
  br i1 %22, label %23, label %24, !dbg !12014

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.153, i32 0, i32 0), i32 noundef 69) #26, !dbg !12015
  br label %27, !dbg !12021

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !12022
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !12023
  store i32 %25, i32* %26, align 4, !dbg !12024
  br label %27, !dbg !12025

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11992
  ret i32 %28, !dbg !12026
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !12027 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !12029, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !12030, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i8* %2, metadata !12031, metadata !DIExpression()), !dbg !12036
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !12037
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #24, !dbg !12037
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !12032, metadata !DIExpression()), !dbg !12038
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !12039
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !12039
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !12039
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !12033, metadata !DIExpression()), !dbg !12036
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !12040
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !12041
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !12034, metadata !DIExpression()), !dbg !12036
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !12042
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !12042
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !12035, metadata !DIExpression()), !dbg !12036
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !12043
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !12045
  %15 = load i16, i16* %14, align 2, !dbg !12045
  %16 = zext i16 %15 to i32, !dbg !12046
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !12047
  %18 = load i16, i16* %17, align 2, !dbg !12047
  %19 = zext i16 %18 to i32, !dbg !12048
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #26, !dbg !12049
  %21 = icmp eq i32 %20, 0, !dbg !12050
  br i1 %21, label %22, label %23, !dbg !12051

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.149, i32 0, i32 0), i32 noundef 69) #26, !dbg !12052
  br label %54, !dbg !12058

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !12059
  %25 = load i8*, i8** %24, align 4, !dbg !12059
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !12061
  %27 = load i8*, i8** %26, align 4, !dbg !12061
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !12062
  %29 = load i32, i32* %28, align 4, !dbg !12062
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !12063
  %31 = icmp eq i8* %25, %30, !dbg !12064
  br i1 %31, label %33, label %32, !dbg !12065

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.150, i32 0, i32 0), i32 noundef 69) #26, !dbg !12066
  br label %54, !dbg !12072

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !12073
  %35 = load i8*, i8** %34, align 4, !dbg !12073
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !12075
  %37 = load i32, i32* %36, align 4, !dbg !12075
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !12076
  %39 = load i8*, i8** %38, align 4, !dbg !12076
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !12077
  %41 = load i32, i32* %40, align 4, !dbg !12077
  %42 = load i16, i16* %17, align 2, !dbg !12078
  %43 = zext i16 %42 to i32, !dbg !12079
  %44 = add nsw i32 %29, %43, !dbg !12080
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #26, !dbg !12081
  %46 = icmp eq i32 %45, 0, !dbg !12082
  br i1 %46, label %47, label %48, !dbg !12083

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.151, i32 0, i32 0), i32 noundef 69) #26, !dbg !12084
  br label %54, !dbg !12090

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !12091
  %50 = load i16, i16* %17, align 2, !dbg !12092
  %51 = zext i16 %50 to i32, !dbg !12093
  %52 = add nsw i32 %49, %51, !dbg !12094
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !12095
  store i32 %52, i32* %53, align 4, !dbg !12096
  br label %54, !dbg !12097

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !12036
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #24, !dbg !12098
  ret i32 %55, !dbg !12098
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !12099 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12101, metadata !DIExpression()), !dbg !12102
  br label %1, !dbg !12103

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !12101, metadata !DIExpression()), !dbg !12102
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !12105
  %5 = load i32, i32* %4, align 4, !dbg !12105
  %6 = icmp eq i32 %5, 0, !dbg !12109
  br i1 %6, label %7, label %8, !dbg !12110

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !12111
  br label %9, !dbg !12113

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12101, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12102
  br i1 %2, label %1, label %9, !dbg !12103, !llvm.loop !12114

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !12116
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #18 !dbg !12117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12119, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i8* %1, metadata !12120, metadata !DIExpression()), !dbg !12125
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12126
  %4 = bitcast i8** %3 to %struct.uart_sam0_dev_cfg**, !dbg !12126
  %5 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %4, align 4, !dbg !12126
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %5, metadata !12121, metadata !DIExpression()), !dbg !12125
  %6 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %5, i32 0, i32 0, !dbg !12127
  %7 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !12127
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %7, metadata !12123, metadata !DIExpression()), !dbg !12125
  %8 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 10, i32 0, i32 0, !dbg !12128
  %9 = load volatile i8, i8* %8, align 4, !dbg !12128
  %10 = and i8 %9, 4, !dbg !12130
  %11 = icmp eq i8 %10, 0, !dbg !12130
  br i1 %11, label %16, label %12, !dbg !12131

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 18, i32 0, i32 0, !dbg !12132
  %14 = load volatile i32, i32* %13, align 4, !dbg !12132
  %15 = trunc i32 %14 to i8, !dbg !12133
  store i8 %15, i8* %1, align 1, !dbg !12134
  br label %16, !dbg !12135

16:                                               ; preds = %2, %12
  %17 = phi i32 [ 0, %12 ], [ -16, %2 ], !dbg !12125
  ret i32 %17, !dbg !12136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !12137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12139, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i8 %1, metadata !12140, metadata !DIExpression()), !dbg !12143
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12144
  %4 = bitcast i8** %3 to %struct.uart_sam0_dev_cfg**, !dbg !12144
  %5 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %4, align 4, !dbg !12144
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %5, metadata !12141, metadata !DIExpression()), !dbg !12143
  %6 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %5, i32 0, i32 0, !dbg !12145
  %7 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !12145
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %7, metadata !12142, metadata !DIExpression()), !dbg !12143
  %8 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 10, i32 0, i32 0
  br label %9, !dbg !12146

9:                                                ; preds = %9, %2
  %10 = load volatile i8, i8* %8, align 4, !dbg !12147
  %11 = and i8 %10, 1, !dbg !12147
  %12 = icmp eq i8 %11, 0, !dbg !12148
  br i1 %12, label %9, label %13, !dbg !12146, !llvm.loop !12149

13:                                               ; preds = %9
  %14 = zext i8 %1 to i32, !dbg !12151
  %15 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 18, i32 0, i32 0, !dbg !12152
  store volatile i32 %14, i32* %15, align 4, !dbg !12153
  ret void, !dbg !12154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam0_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !12155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12157, metadata !DIExpression()), !dbg !12161
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12162
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12162
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12162
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12158, metadata !DIExpression()), !dbg !12161
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12163
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12163
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12159, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.value(metadata i32 0, metadata !12160, metadata !DIExpression()), !dbg !12161
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 12, i32 0, i32 0, !dbg !12164
  %8 = load volatile i16, i16* %7, align 2, !dbg !12164
  %9 = lshr i16 %8, 2, !dbg !12166
  %10 = and i16 %9, 1, !dbg !12166
  call void @llvm.dbg.value(metadata i16 %10, metadata !12160, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12161
  %11 = load volatile i16, i16* %7, align 2, !dbg !12167
  %12 = and i16 %11, 2, !dbg !12169
  %13 = or i16 %12, %10, !dbg !12170
  call void @llvm.dbg.value(metadata i16 %13, metadata !12160, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12161
  %14 = load volatile i16, i16* %7, align 2, !dbg !12171
  %15 = shl i16 %14, 2, !dbg !12173
  %16 = and i16 %15, 4, !dbg !12173
  %17 = or i16 %13, %16, !dbg !12173
  call void @llvm.dbg.value(metadata i16 %17, metadata !12160, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12161
  %18 = load volatile i16, i16* %7, align 2, !dbg !12174
  %19 = lshr i16 %18, 1, !dbg !12176
  %20 = and i16 %19, 8, !dbg !12176
  %21 = or i16 %17, %20, !dbg !12176
  call void @llvm.dbg.value(metadata i16 %21, metadata !12160, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12161
  %22 = load volatile i16, i16* %7, align 2, !dbg !12177
  %23 = lshr i16 %22, 1, !dbg !12179
  %24 = and i16 %23, 16, !dbg !12179
  %25 = or i16 %21, %24, !dbg !12179
  %26 = zext i16 %25 to i32, !dbg !12179
  call void @llvm.dbg.value(metadata i32 %26, metadata !12160, metadata !DIExpression()), !dbg !12161
  %27 = load volatile i16, i16* %7, align 2, !dbg !12180
  %28 = or i16 %27, 55, !dbg !12180
  store volatile i16 %28, i16* %7, align 2, !dbg !12180
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %6) #25, !dbg !12181
  ret i32 %26, !dbg !12182
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_sam0_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #16 !dbg !12183 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12194, metadata !DIExpression()), !dbg !12196
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12195, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12185, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12186, metadata !DIExpression()), !dbg !12198
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12199
  %6 = bitcast i8** %5 to %struct.uart_sam0_dev_cfg**, !dbg !12199
  %7 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !12199
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %7, metadata !12188, metadata !DIExpression()), !dbg !12198
  %8 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12200
  %9 = bitcast i8** %8 to %struct.uart_sam0_dev_data**, !dbg !12200
  %10 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %9, align 4, !dbg !12200
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %10, metadata !12190, metadata !DIExpression()), !dbg !12198
  %11 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %7, i32 0, i32 0, !dbg !12201
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %11, align 4, !dbg !12201
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %12, metadata !12193, metadata !DIExpression()), !dbg !12198
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %12) #25, !dbg !12202
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 0, i32 0, i32 0, !dbg !12203
  %14 = load volatile i32, i32* %13, align 4, !dbg !12204
  %15 = and i32 %14, -3, !dbg !12204
  store volatile i32 %15, i32* %13, align 4, !dbg !12204
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %12) #25, !dbg !12205
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12206
  %17 = load i8, i8* %16, align 1, !dbg !12206
  %18 = icmp eq i8 %17, 0, !dbg !12208
  br i1 %18, label %19, label %87, !dbg !12209

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 4, !dbg !12210
  store i8 0, i8* %20, align 1, !dbg !12211
  %21 = bitcast i32* %3 to i8*, !dbg !12212
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !12212
  %22 = load volatile i32, i32* %13, align 4, !dbg !12213
  store volatile i32 %22, i32* %3, align 4, !dbg !12213
  %23 = bitcast i32* %4 to i8*, !dbg !12214
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23), !dbg !12214
  %24 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 1, i32 0, i32 0, !dbg !12215
  %25 = load volatile i32, i32* %24, align 4, !dbg !12215
  store volatile i32 %25, i32* %4, align 4, !dbg !12215
  %26 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12216
  %27 = load i8, i8* %26, align 4, !dbg !12216
  switch i8 %27, label %85 [
    i8 0, label %28
    i8 1, label %30
    i8 2, label %34
  ], !dbg !12217

28:                                               ; preds = %19
  %29 = and i32 %22, -251658241, !dbg !12218
  store i32 %29, i32* %3, align 4, !dbg !12218
  br label %38, !dbg !12220

30:                                               ; preds = %19
  %31 = and i32 %22, -251658241, !dbg !12221
  %32 = or i32 %31, 16777216, !dbg !12221
  store i32 %32, i32* %3, align 4, !dbg !12221
  %33 = or i32 %25, 8192, !dbg !12222
  store i32 %33, i32* %4, align 4, !dbg !12222
  br label %38, !dbg !12223

34:                                               ; preds = %19
  %35 = and i32 %22, -251658241, !dbg !12224
  %36 = or i32 %35, 16777216, !dbg !12224
  store i32 %36, i32* %3, align 4, !dbg !12224
  %37 = and i32 %25, -8193, !dbg !12225
  store i32 %37, i32* %4, align 4, !dbg !12225
  br label %38, !dbg !12226

38:                                               ; preds = %34, %30, %28
  %39 = phi i32 [ %37, %34 ], [ %33, %30 ], [ %25, %28 ]
  %40 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 1, !dbg !12227
  store i8 %27, i8* %40, align 4, !dbg !12228
  %41 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12229
  %42 = load i8, i8* %41, align 1, !dbg !12229
  switch i8 %42, label %85 [
    i8 1, label %43
    i8 3, label %45
  ], !dbg !12230

43:                                               ; preds = %38
  %44 = and i32 %39, -65, !dbg !12231
  br label %47, !dbg !12233

45:                                               ; preds = %38
  %46 = or i32 %39, 64, !dbg !12234
  br label %47, !dbg !12235

47:                                               ; preds = %45, %43
  %48 = phi i32 [ %46, %45 ], [ %44, %43 ], !dbg !12236
  %49 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 2, !dbg !12237
  store i8 %42, i8* %49, align 1, !dbg !12238
  %50 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12239
  %51 = load i8, i8* %50, align 2, !dbg !12239
  switch i8 %51, label %85 [
    i8 0, label %52
    i8 1, label %55
    i8 2, label %58
    i8 3, label %60
    i8 4, label %62
  ], !dbg !12240

52:                                               ; preds = %47
  %53 = and i32 %48, -8, !dbg !12241
  %54 = or i32 %53, 5, !dbg !12241
  br label %65, !dbg !12243

55:                                               ; preds = %47
  %56 = and i32 %48, -8, !dbg !12244
  %57 = or i32 %56, 6, !dbg !12244
  br label %65, !dbg !12245

58:                                               ; preds = %47
  %59 = or i32 %48, 7, !dbg !12246
  br label %65, !dbg !12247

60:                                               ; preds = %47
  %61 = and i32 %48, -8, !dbg !12248
  br label %65, !dbg !12249

62:                                               ; preds = %47
  %63 = and i32 %48, -8, !dbg !12250
  %64 = or i32 %63, 1, !dbg !12250
  br label %65, !dbg !12251

65:                                               ; preds = %62, %60, %58, %55, %52
  %66 = phi i32 [ %64, %62 ], [ %61, %60 ], [ %59, %58 ], [ %57, %55 ], [ %54, %52 ], !dbg !12252
  %67 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 3, !dbg !12253
  store i8 %51, i8* %67, align 2, !dbg !12254
  %68 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %7, i32 0, i32 2, !dbg !12255
  %69 = load i32, i32* %68, align 4, !dbg !12255
  %70 = shl i32 %69, 8, !dbg !12252
  %71 = and i32 %70, 256, !dbg !12252
  %72 = and i32 %66, -257, !dbg !12252
  %73 = or i32 %72, %71, !dbg !12252
  store i32 %73, i32* %4, align 4, !dbg !12252
  %74 = load volatile i32, i32* %3, align 4, !dbg !12256
  store volatile i32 %74, i32* %13, align 4, !dbg !12256
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef nonnull %12) #25, !dbg !12257
  %75 = load volatile i32, i32* %4, align 4, !dbg !12258
  store volatile i32 %75, i32* %24, align 4, !dbg !12258
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef nonnull %12) #25, !dbg !12259
  %76 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12260
  %77 = load i32, i32* %76, align 4, !dbg !12260
  %78 = tail call fastcc i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef nonnull %12, i32 noundef %77) #25, !dbg !12261
  call void @llvm.dbg.value(metadata i32 %78, metadata !12187, metadata !DIExpression()), !dbg !12198
  %79 = icmp eq i32 %78, 0, !dbg !12262
  br i1 %79, label %80, label %85, !dbg !12264

80:                                               ; preds = %65
  %81 = load i32, i32* %76, align 4, !dbg !12265
  %82 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 0, !dbg !12266
  store i32 %81, i32* %82, align 4, !dbg !12267
  %83 = load volatile i32, i32* %13, align 4, !dbg !12268
  %84 = or i32 %83, 2, !dbg !12268
  store volatile i32 %84, i32* %13, align 4, !dbg !12268
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef nonnull %12) #25, !dbg !12269
  br label %85, !dbg !12270

85:                                               ; preds = %65, %47, %38, %19, %80
  %86 = phi i32 [ 0, %80 ], [ -134, %19 ], [ -134, %38 ], [ -134, %47 ], [ %78, %65 ], !dbg !12198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23), !dbg !12271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !12271
  br label %87

87:                                               ; preds = %2, %85
  %88 = phi i32 [ %86, %85 ], [ -134, %2 ], !dbg !12198
  ret i32 %88, !dbg !12271
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam0_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* noundef %1) #1 !dbg !12272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12274, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12275, metadata !DIExpression()), !dbg !12277
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12278
  %4 = load i8*, i8** %3, align 4, !dbg !12278
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* undef, metadata !12276, metadata !DIExpression()), !dbg !12277
  %5 = bitcast %struct.uart_config* %1 to i8*, !dbg !12279
  %6 = tail call i8* @memcpy(i8* noundef %5, i8* noundef %4, i32 noundef 8) #26, !dbg !12280
  ret i32 0, !dbg !12281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam0_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !12282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12284, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i8* %1, metadata !12285, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i32 %2, metadata !12286, metadata !DIExpression()), !dbg !12289
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12290
  %5 = bitcast i8** %4 to %struct.uart_sam0_dev_cfg**, !dbg !12290
  %6 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !12290
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %6, metadata !12287, metadata !DIExpression()), !dbg !12289
  %7 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %6, i32 0, i32 0, !dbg !12291
  %8 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !12291
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %8, metadata !12288, metadata !DIExpression()), !dbg !12289
  %9 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 10, i32 0, i32 0, !dbg !12292
  %10 = load volatile i8, i8* %9, align 4, !dbg !12292
  %11 = and i8 %10, 1, !dbg !12292
  %12 = icmp ne i8 %11, 0, !dbg !12294
  %13 = icmp sgt i32 %2, 0
  %14 = and i1 %13, %12, !dbg !12295
  br i1 %14, label %15, label %19, !dbg !12295

15:                                               ; preds = %3
  %16 = load i8, i8* %1, align 1, !dbg !12296
  %17 = zext i8 %16 to i32, !dbg !12296
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 18, i32 0, i32 0, !dbg !12298
  store volatile i32 %17, i32* %18, align 4, !dbg !12299
  br label %19, !dbg !12300

19:                                               ; preds = %3, %15
  %20 = phi i32 [ 1, %15 ], [ 0, %3 ], !dbg !12301
  ret i32 %20, !dbg !12302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #18 !dbg !12303 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12305, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i8* %1, metadata !12306, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 %2, metadata !12307, metadata !DIExpression()), !dbg !12313
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12314
  %5 = bitcast i8** %4 to %struct.uart_sam0_dev_cfg**, !dbg !12314
  %6 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !12314
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %6, metadata !12308, metadata !DIExpression()), !dbg !12313
  %7 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %6, i32 0, i32 0, !dbg !12315
  %8 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !12315
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %8, metadata !12309, metadata !DIExpression()), !dbg !12313
  %9 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 10, i32 0, i32 0, !dbg !12316
  %10 = load volatile i8, i8* %9, align 4, !dbg !12316
  %11 = and i8 %10, 4, !dbg !12317
  %12 = icmp eq i8 %11, 0, !dbg !12317
  br i1 %12, label %19, label %13, !dbg !12318

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 18, i32 0, i32 0, !dbg !12319
  %15 = load volatile i32, i32* %14, align 4, !dbg !12319
  call void @llvm.dbg.value(metadata i32 %15, metadata !12310, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12320
  %16 = icmp sgt i32 %2, 0, !dbg !12321
  br i1 %16, label %17, label %19, !dbg !12323

17:                                               ; preds = %13
  %18 = trunc i32 %15 to i8, !dbg !12324
  call void @llvm.dbg.value(metadata i8 %18, metadata !12310, metadata !DIExpression()), !dbg !12320
  store i8 %18, i8* %1, align 1, !dbg !12325
  br label %19, !dbg !12327

19:                                               ; preds = %3, %17, %13
  %20 = phi i32 [ 1, %17 ], [ -22, %13 ], [ 0, %3 ], !dbg !12313
  ret i32 %20, !dbg !12328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !12329 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12331, metadata !DIExpression()), !dbg !12334
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12335
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12335
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12335
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12332, metadata !DIExpression()), !dbg !12334
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12336
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12336
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12333, metadata !DIExpression()), !dbg !12334
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !12337
  store volatile i8 3, i8* %7, align 2, !dbg !12338
  ret void, !dbg !12339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !12340 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12342, metadata !DIExpression()), !dbg !12345
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12346
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12346
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12346
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12343, metadata !DIExpression()), !dbg !12345
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12347
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12347
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12344, metadata !DIExpression()), !dbg !12345
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 6, i32 0, i32 0, !dbg !12348
  store volatile i8 3, i8* %7, align 4, !dbg !12349
  ret void, !dbg !12350
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #18 !dbg !12351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12353, metadata !DIExpression()), !dbg !12356
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12357
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12357
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12357
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12354, metadata !DIExpression()), !dbg !12356
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12358
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12358
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12355, metadata !DIExpression()), !dbg !12356
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !12359
  %8 = load volatile i8, i8* %7, align 4, !dbg !12359
  %9 = and i8 %8, 1, !dbg !12359
  %10 = icmp eq i8 %9, 0, !dbg !12360
  br i1 %10, label %16, label %11, !dbg !12361

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !12362
  %13 = load volatile i8, i8* %12, align 2, !dbg !12362
  %14 = and i8 %13, 1, !dbg !12362
  %15 = zext i8 %14 to i32, !dbg !12363
  br label %16

16:                                               ; preds = %11, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %11 ]
  ret i32 %17, !dbg !12364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !12365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12367, metadata !DIExpression()), !dbg !12370
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12371
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12371
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12371
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12368, metadata !DIExpression()), !dbg !12370
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12372
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12372
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12369, metadata !DIExpression()), !dbg !12370
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !12373
  store volatile i8 4, i8* %7, align 2, !dbg !12374
  ret void, !dbg !12375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !12376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12378, metadata !DIExpression()), !dbg !12381
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12382
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12382
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12382
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12379, metadata !DIExpression()), !dbg !12381
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12383
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12383
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12380, metadata !DIExpression()), !dbg !12381
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 6, i32 0, i32 0, !dbg !12384
  store volatile i8 4, i8* %7, align 4, !dbg !12385
  ret void, !dbg !12386
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #18 !dbg !12387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12389, metadata !DIExpression()), !dbg !12392
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12393
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12393
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12393
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12390, metadata !DIExpression()), !dbg !12392
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12394
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12394
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12391, metadata !DIExpression()), !dbg !12392
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !12395
  %8 = load volatile i8, i8* %7, align 4, !dbg !12395
  %9 = and i8 %8, 2, !dbg !12396
  %10 = icmp eq i8 %9, 0, !dbg !12396
  br i1 %10, label %17, label %11, !dbg !12397

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !12398
  %13 = load volatile i8, i8* %12, align 2, !dbg !12398
  %14 = lshr i8 %13, 1, !dbg !12398
  %15 = and i8 %14, 1, !dbg !12398
  %16 = zext i8 %15 to i32, !dbg !12399
  br label %17

17:                                               ; preds = %11, %1
  %18 = phi i32 [ 0, %1 ], [ %16, %11 ]
  ret i32 %18, !dbg !12400
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #18 !dbg !12401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12403, metadata !DIExpression()), !dbg !12406
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12407
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12407
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12407
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12404, metadata !DIExpression()), !dbg !12406
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12408
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12408
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12405, metadata !DIExpression()), !dbg !12406
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !12409
  %8 = load volatile i8, i8* %7, align 4, !dbg !12409
  %9 = lshr i8 %8, 2, !dbg !12410
  %10 = and i8 %9, 1, !dbg !12410
  %11 = zext i8 %10 to i32, !dbg !12410
  ret i32 %11, !dbg !12411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_err_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !12412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12414, metadata !DIExpression()), !dbg !12417
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12418
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12418
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12418
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12415, metadata !DIExpression()), !dbg !12417
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12419
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12419
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12416, metadata !DIExpression()), !dbg !12417
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !12420
  %8 = load volatile i8, i8* %7, align 2, !dbg !12421
  %9 = or i8 %8, -128, !dbg !12421
  store volatile i8 %9, i8* %7, align 2, !dbg !12421
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %6) #25, !dbg !12422
  ret void, !dbg !12423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_err_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !12424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12426, metadata !DIExpression()), !dbg !12429
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12430
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12430
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12430
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12427, metadata !DIExpression()), !dbg !12429
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12431
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12431
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12428, metadata !DIExpression()), !dbg !12429
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 6, i32 0, i32 0, !dbg !12432
  %8 = load volatile i8, i8* %7, align 4, !dbg !12433
  %9 = or i8 %8, -128, !dbg !12433
  store volatile i8 %9, i8* %7, align 4, !dbg !12433
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %6) #25, !dbg !12434
  ret void, !dbg !12435
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_is_pending(%struct.device* nocapture noundef readonly %0) #18 !dbg !12436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12438, metadata !DIExpression()), !dbg !12441
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12442
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12442
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12442
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12439, metadata !DIExpression()), !dbg !12441
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12443
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12443
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12440, metadata !DIExpression()), !dbg !12441
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !12444
  %8 = load volatile i8, i8* %7, align 2, !dbg !12444
  %9 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !12445
  %10 = load volatile i8, i8* %9, align 4, !dbg !12445
  %11 = and i8 %10, %8, !dbg !12446
  %12 = icmp ne i8 %11, 0, !dbg !12447
  %13 = zext i1 %12 to i32, !dbg !12447
  ret i32 %13, !dbg !12448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam0_irq_update(%struct.device* nocapture noundef readonly %0) #15 !dbg !12449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12451, metadata !DIExpression()), !dbg !12454
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12455
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12455
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12455
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12452, metadata !DIExpression()), !dbg !12454
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12456
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !12456
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !12453, metadata !DIExpression()), !dbg !12454
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !12457
  %8 = load volatile i8, i8* %7, align 4, !dbg !12458
  %9 = or i8 %8, -72, !dbg !12458
  store volatile i8 %9, i8* %7, align 4, !dbg !12458
  ret i32 1, !dbg !12459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_sam0_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #11 !dbg !12460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12462, metadata !DIExpression()), !dbg !12466
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !12463, metadata !DIExpression()), !dbg !12466
  call void @llvm.dbg.value(metadata i8* %2, metadata !12464, metadata !DIExpression()), !dbg !12466
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12467
  %5 = bitcast i8** %4 to %struct.uart_sam0_dev_data**, !dbg !12467
  %6 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %5, align 4, !dbg !12467
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %6, metadata !12465, metadata !DIExpression()), !dbg !12466
  %7 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %6, i32 0, i32 1, !dbg !12468
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !12469
  %8 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %6, i32 0, i32 2, !dbg !12470
  store i8* %2, i8** %8, align 4, !dbg !12471
  ret void, !dbg !12472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %0) unnamed_addr #15 !dbg !12473 {
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %0, metadata !12477, metadata !DIExpression()), !dbg !12478
  %2 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %0, i32 0, i32 13, i32 0, i32 0
  br label %3, !dbg !12479

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !12480
  %5 = and i32 %4, 31, !dbg !12481
  %6 = icmp eq i32 %5, 0, !dbg !12482
  br i1 %6, label %7, label %3, !dbg !12479, !llvm.loop !12483

7:                                                ; preds = %3
  ret void, !dbg !12485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12486 {
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %0, metadata !12490, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 %1, metadata !12491, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 120000000, metadata !12492, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 %1, metadata !12493, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !12495
  call void @llvm.dbg.value(metadata i64 undef, metadata !12493, metadata !DIExpression()), !dbg !12495
  %3 = add i32 %1, -7499943, !dbg !12496
  %4 = icmp ult i32 %3, -7499885, !dbg !12496
  br i1 %4, label %13, label %5, !dbg !12496

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64, !dbg !12498
  call void @llvm.dbg.value(metadata i64 %6, metadata !12493, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !12495
  %7 = shl nuw nsw i64 %6, 20, !dbg !12499
  call void @llvm.dbg.value(metadata i64 %7, metadata !12493, metadata !DIExpression()), !dbg !12495
  %8 = add nuw nsw i64 %7, 60000000, !dbg !12500
  %9 = udiv i64 %8, 120000000, !dbg !12501
  call void @llvm.dbg.value(metadata i64 %9, metadata !12493, metadata !DIExpression()), !dbg !12495
  %10 = trunc i64 %9 to i16, !dbg !12502
  %11 = sub i16 0, %10, !dbg !12503
  call void @llvm.dbg.value(metadata i16 %11, metadata !12494, metadata !DIExpression()), !dbg !12495
  %12 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %0, i32 0, i32 3, i32 0, i32 0, !dbg !12504
  store volatile i16 %11, i16* %12, align 4, !dbg !12505
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %0) #25, !dbg !12506
  br label %13, !dbg !12507

13:                                               ; preds = %2, %5
  %14 = phi i32 [ 0, %5 ], [ -34, %2 ], !dbg !12495
  ret i32 %14, !dbg !12508
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_sam0_irq_config_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !2393 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !2395, metadata !DIExpression()), !dbg !12509
  tail call void @z_arm_irq_priority_set(i32 noundef 58, i32 noundef 0, i32 noundef 0) #26, !dbg !12510
  tail call void @arch_irq_enable(i32 noundef 58) #26, !dbg !12513
  tail call void @z_arm_irq_priority_set(i32 noundef 59, i32 noundef 0, i32 noundef 0) #26, !dbg !12514
  tail call void @arch_irq_enable(i32 noundef 59) #26, !dbg !12517
  tail call void @z_arm_irq_priority_set(i32 noundef 60, i32 noundef 0, i32 noundef 0) #26, !dbg !12518
  tail call void @arch_irq_enable(i32 noundef 60) #26, !dbg !12521
  tail call void @z_arm_irq_priority_set(i32 noundef 61, i32 noundef 0, i32 noundef 0) #26, !dbg !12522
  tail call void @arch_irq_enable(i32 noundef 61) #26, !dbg !12525
  ret void, !dbg !12526
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_sam0_isr(%struct.device* noundef %0) #1 !dbg !12527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12529, metadata !DIExpression()), !dbg !12531
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12532
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_data**, !dbg !12532
  %4 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !12532
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %4, metadata !12530, metadata !DIExpression()), !dbg !12531
  %5 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %4, i32 0, i32 1, !dbg !12533
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !12533
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !12535
  br i1 %7, label %11, label %8, !dbg !12536

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %4, i32 0, i32 2, !dbg !12537
  %10 = load i8*, i8** %9, align 4, !dbg !12537
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !12539
  br label %11, !dbg !12540

11:                                               ; preds = %8, %1
  ret void, !dbg !12541
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam0_init(%struct.device* noundef %0) #1 !dbg !12542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12544, metadata !DIExpression()), !dbg !12549
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12550
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !12550
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !12550
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !12546, metadata !DIExpression()), !dbg !12549
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12551
  %6 = bitcast i8** %5 to %struct.uart_sam0_dev_data**, !dbg !12551
  %7 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !12551
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %7, metadata !12547, metadata !DIExpression()), !dbg !12549
  %8 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !12552
  %9 = load %struct.SercomUsart*, %struct.SercomUsart** %8, align 4, !dbg !12552
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %9, metadata !12548, metadata !DIExpression()), !dbg !12549
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 6, !dbg !12553
  %11 = load i16, i16* %10, align 4, !dbg !12553
  %12 = zext i16 %11 to i32, !dbg !12554
  %13 = getelementptr inbounds [48 x %union.anon.5], [48 x %union.anon.5]* inttoptr (i32 1073749120 to [48 x %union.anon.5]*), i32 0, i32 %12, i32 0, i32 0, !dbg !12555
  store volatile i32 64, i32* %13, align 4, !dbg !12556
  %14 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 5, !dbg !12557
  %15 = load i32, i32* %14, align 4, !dbg !12557
  %16 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 4, !dbg !12558
  %17 = load i32*, i32** %16, align 4, !dbg !12558
  %18 = load volatile i32, i32* %17, align 4, !dbg !12559
  %19 = or i32 %18, %15, !dbg !12559
  store volatile i32 %19, i32* %17, align 4, !dbg !12559
  %20 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %9, i32 0, i32 6, i32 0, i32 0, !dbg !12560
  store volatile i8 -65, i8* %20, align 4, !dbg !12561
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %9) #25, !dbg !12562
  %21 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 2, !dbg !12563
  %22 = load i32, i32* %21, align 4, !dbg !12563
  %23 = or i32 %22, 1610612740, !dbg !12564
  %24 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %9, i32 0, i32 0, i32 0, i32 0, !dbg !12565
  store volatile i32 %23, i32* %24, align 4, !dbg !12566
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef %9) #25, !dbg !12567
  %25 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 8, !dbg !12568
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12568
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !12569
  call void @llvm.dbg.value(metadata i32 %27, metadata !12545, metadata !DIExpression()), !dbg !12549
  %28 = icmp slt i32 %27, 0, !dbg !12570
  br i1 %28, label %46, label %29, !dbg !12572

29:                                               ; preds = %1
  %30 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 4, !dbg !12573
  store i8 0, i8* %30, align 1, !dbg !12574
  %31 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 1, !dbg !12575
  store i8 0, i8* %31, align 4, !dbg !12576
  %32 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 2, !dbg !12577
  store i8 1, i8* %32, align 1, !dbg !12578
  %33 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 3, !dbg !12579
  store i8 3, i8* %33, align 2, !dbg !12580
  %34 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %9, i32 0, i32 1, i32 0, i32 0, !dbg !12581
  store volatile i32 196608, i32* %34, align 4, !dbg !12582
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef nonnull %9) #25, !dbg !12583
  %35 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 1, !dbg !12584
  %36 = load i32, i32* %35, align 4, !dbg !12584
  %37 = tail call fastcc i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef nonnull %9, i32 noundef %36) #25, !dbg !12585
  call void @llvm.dbg.value(metadata i32 %37, metadata !12545, metadata !DIExpression()), !dbg !12549
  %38 = icmp eq i32 %37, 0, !dbg !12586
  br i1 %38, label %39, label %46, !dbg !12588

39:                                               ; preds = %29
  %40 = load i32, i32* %35, align 4, !dbg !12589
  %41 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 0, !dbg !12590
  store i32 %40, i32* %41, align 4, !dbg !12591
  %42 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 7, !dbg !12592
  %43 = load void (%struct.device*)*, void (%struct.device*)** %42, align 4, !dbg !12592
  tail call void %43(%struct.device* noundef nonnull %0) #26, !dbg !12593
  %44 = load volatile i32, i32* %24, align 4, !dbg !12594
  %45 = or i32 %44, 2, !dbg !12594
  store volatile i32 %45, i32* %24, align 4, !dbg !12594
  tail call fastcc void @wait_synchronization.161(%struct.SercomUsart* noundef nonnull %9) #25, !dbg !12595
  br label %46, !dbg !12596

46:                                               ; preds = %29, %1, %39
  %47 = phi i32 [ 0, %39 ], [ %27, %1 ], [ %37, %29 ], !dbg !12549
  ret i32 %47, !dbg !12597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12598 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12602, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i8 0, metadata !12603, metadata !DIExpression()), !dbg !12606
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12607
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !12607
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12605, metadata !DIExpression(DW_OP_deref)), !dbg !12606
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %4, metadata !12604, metadata !DIExpression()), !dbg !12606
  %5 = icmp slt i32 %4, 0, !dbg !12609
  br i1 %5, label %9, label %6, !dbg !12611

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12612
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12605, metadata !DIExpression()), !dbg !12606
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !12613
  br label %9, !dbg !12614

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12606
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !12615
  ret i32 %10, !dbg !12615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12616 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12620, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12621, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.value(metadata i32 0, metadata !12622, metadata !DIExpression()), !dbg !12623
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12624
  %3 = load i32*, i32** %2, align 4, !dbg !12624
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12625
  %5 = load i8, i8* %4, align 4, !dbg !12625
  %6 = tail call i32 @pinctrl_configure_pins(i32* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !12626
  ret i32 %6, !dbg !12627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !12628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12630, metadata !DIExpression()), !dbg !12631
  tail call fastcc void @__NVIC_SetPriority.164() #25, !dbg !12632
  store i32 11999, i32* @last_load, align 4, !dbg !12633
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12634
  store volatile i32 11999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12635
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12636
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12637
  %3 = or i32 %2, 7, !dbg !12637
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12637
  ret i32 0, !dbg !12638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.164() unnamed_addr #15 !dbg !12639 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12641, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.value(metadata i32 1, metadata !12642, metadata !DIExpression()), !dbg !12643
  store volatile i8 32, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12644
  ret void, !dbg !12647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12648 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12650, metadata !DIExpression()), !dbg !12652
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !12653
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12654
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12655
  %5 = add i32 %4, %3, !dbg !12655
  store i32 %5, i32* @cycle_count, align 4, !dbg !12655
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12656
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12657
  %7 = sub i32 %5, %6, !dbg !12660
  %8 = udiv i32 %7, 12000, !dbg !12661
  call void @llvm.dbg.value(metadata i32 %8, metadata !12651, metadata !DIExpression()), !dbg !12652
  %9 = mul nuw i32 %8, 12000, !dbg !12662
  %10 = add i32 %9, %6, !dbg !12663
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12663
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !12664
  tail call void @z_arm_int_exit() #26, !dbg !12665
  ret void, !dbg !12666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !12667 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12672
  call void @llvm.dbg.value(metadata i32 %1, metadata !12669, metadata !DIExpression()), !dbg !12673
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12674
  call void @llvm.dbg.value(metadata i32 %2, metadata !12670, metadata !DIExpression()), !dbg !12673
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12675
  call void @llvm.dbg.value(metadata i32 %3, metadata !12671, metadata !DIExpression()), !dbg !12673
  %4 = and i32 %2, 65536, !dbg !12676
  %5 = icmp ne i32 %4, 0, !dbg !12676
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12678
  %8 = load i32, i32* @last_load, align 4, !dbg !12673
  br i1 %7, label %9, label %13, !dbg !12678

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12679
  %11 = add i32 %10, %8, !dbg !12679
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12679
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12681
  br label %13, !dbg !12682

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12683
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12684
  %16 = add i32 %14, %15, !dbg !12685
  ret i32 %16, !dbg !12686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12691, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata i1 %1, metadata !12692, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12704
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12705
  br i1 %4, label %5, label %8, !dbg !12705

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12707
  %7 = and i32 %6, -2, !dbg !12707
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12707
  store i32 -16777216, i32* @last_load, align 4, !dbg !12709
  br label %54, !dbg !12710

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12711
  call void @llvm.dbg.value(metadata i32 %9, metadata !12696, metadata !DIExpression()), !dbg !12704
  br i1 %3, label %18, label %10, !dbg !12712

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12712
  call void @llvm.dbg.value(metadata i32 undef, metadata !12691, metadata !DIExpression()), !dbg !12704
  %12 = icmp slt i32 %11, 1, !dbg !12713
  br i1 %12, label %18, label %13, !dbg !12713

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1397, !dbg !12713
  %15 = select i1 %14, i32 %11, i32 1397, !dbg !12713
  %16 = mul nuw nsw i32 %15, 12000, !dbg !12713
  %17 = add nuw nsw i32 %16, 11999, !dbg !12713
  br label %18, !dbg !12713

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 11999, %10 ], [ 16763999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12691, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12714, metadata !DIExpression()) #24, !dbg !12721
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !12723, !srcloc !12729
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12723
  call void @llvm.dbg.value(metadata i32 %21, metadata !12726, metadata !DIExpression()) #24, !dbg !12730
  call void @llvm.dbg.value(metadata i32 undef, metadata !12727, metadata !DIExpression()) #24, !dbg !12730
  call void @llvm.dbg.value(metadata i32 %21, metadata !12720, metadata !DIExpression()) #24, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %21, metadata !12697, metadata !DIExpression()), !dbg !12704
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !12731
  call void @llvm.dbg.value(metadata i32 %22, metadata !12702, metadata !DIExpression()), !dbg !12704
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12732
  call void @llvm.dbg.value(metadata i32 %23, metadata !12694, metadata !DIExpression()), !dbg !12704
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12733
  %25 = add i32 %24, %22, !dbg !12733
  store i32 %25, i32* @cycle_count, align 4, !dbg !12733
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12734
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12735
  %27 = sub i32 %25, %26, !dbg !12736
  call void @llvm.dbg.value(metadata i32 %27, metadata !12703, metadata !DIExpression()), !dbg !12704
  %28 = icmp slt i32 %27, 0, !dbg !12737
  br i1 %28, label %38, label %29, !dbg !12739

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12693, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata i32 undef, metadata !12693, metadata !DIExpression()), !dbg !12704
  %30 = add nuw i32 %19, %27, !dbg !12740
  %31 = urem i32 %30, 12000, !dbg !12742
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12693, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12704
  %32 = sub nuw nsw i32 %19, %31, !dbg !12743
  call void @llvm.dbg.value(metadata i32 %32, metadata !12693, metadata !DIExpression()), !dbg !12704
  %33 = icmp ugt i32 %32, 1024, !dbg !12744
  br i1 %33, label %34, label %36, !dbg !12744

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12693, metadata !DIExpression()), !dbg !12704
  %35 = icmp ugt i32 %32, 16764000, !dbg !12745
  br i1 %35, label %38, label %36, !dbg !12747

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16764000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12748
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12749
  call void @llvm.dbg.value(metadata i32 %40, metadata !12695, metadata !DIExpression()), !dbg !12704
  %41 = add nsw i32 %39, -1, !dbg !12750
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12751
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12752
  %42 = icmp ult i32 %23, %40, !dbg !12753
  br i1 %42, label %43, label %48, !dbg !12755

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12756
  %45 = add i32 %23, %9, !dbg !12758
  %46 = sub i32 %45, %40, !dbg !12759
  %47 = add i32 %46, %44, !dbg !12756
  br label %52, !dbg !12760

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12761
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12763
  %51 = add i32 %49, %50, !dbg !12763
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12764
  store i32 %53, i32* @cycle_count, align 4, !dbg !12764
  call void @llvm.dbg.value(metadata i32 %21, metadata !12765, metadata !DIExpression()) #24, !dbg !12771
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12770, metadata !DIExpression()) #24, !dbg !12771
  call void @llvm.dbg.value(metadata i32 %21, metadata !12773, metadata !DIExpression()) #24, !dbg !12776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !12778, !srcloc !12779
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12780
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12781 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12714, metadata !DIExpression()) #24, !dbg !12785
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !12787, !srcloc !12729
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %2, metadata !12726, metadata !DIExpression()) #24, !dbg !12789
  call void @llvm.dbg.value(metadata i32 undef, metadata !12727, metadata !DIExpression()) #24, !dbg !12789
  call void @llvm.dbg.value(metadata i32 %2, metadata !12720, metadata !DIExpression()) #24, !dbg !12785
  call void @llvm.dbg.value(metadata i32 %2, metadata !12783, metadata !DIExpression()), !dbg !12790
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !12791
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12792
  %5 = add i32 %4, %3, !dbg !12793
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12794
  %7 = sub i32 %5, %6, !dbg !12795
  call void @llvm.dbg.value(metadata i32 %7, metadata !12784, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i32 %2, metadata !12765, metadata !DIExpression()) #24, !dbg !12796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12770, metadata !DIExpression()) #24, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %2, metadata !12773, metadata !DIExpression()) #24, !dbg !12798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !12800, !srcloc !12779
  %8 = udiv i32 %7, 12000, !dbg !12801
  ret i32 %8, !dbg !12802
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12803 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12714, metadata !DIExpression()) #24, !dbg !12807
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !12809, !srcloc !12729
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12809
  call void @llvm.dbg.value(metadata i32 %2, metadata !12726, metadata !DIExpression()) #24, !dbg !12811
  call void @llvm.dbg.value(metadata i32 undef, metadata !12727, metadata !DIExpression()) #24, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %2, metadata !12720, metadata !DIExpression()) #24, !dbg !12807
  call void @llvm.dbg.value(metadata i32 %2, metadata !12805, metadata !DIExpression()), !dbg !12812
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !12813
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12814
  %5 = add i32 %4, %3, !dbg !12815
  call void @llvm.dbg.value(metadata i32 %5, metadata !12806, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.value(metadata i32 %2, metadata !12765, metadata !DIExpression()) #24, !dbg !12816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12770, metadata !DIExpression()) #24, !dbg !12816
  call void @llvm.dbg.value(metadata i32 %2, metadata !12773, metadata !DIExpression()) #24, !dbg !12818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !12820, !srcloc !12779
  ret i32 %5, !dbg !12821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12822 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12823
  %2 = icmp eq i32 %1, -16777216, !dbg !12825
  br i1 %2, label %3, label %6, !dbg !12826

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12827
  %5 = or i32 %4, 1, !dbg !12827
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12827
  br label %6, !dbg !12829

6:                                                ; preds = %3, %0
  ret void, !dbg !12830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12831 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12832
  %2 = and i32 %1, -2, !dbg !12832
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12832
  ret void, !dbg !12833
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12834 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12853, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i8 %1, metadata !12854, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12855, metadata !DIExpression()), !dbg !12856
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12857
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12857
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12856
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12858
  %8 = load i8, i8* %6, align 4, !dbg !12859
  %9 = zext i8 %8 to i32, !dbg !12860
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12860
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12861
  br i1 %11, label %18, label %24, !dbg !12862

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12856
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12858
  %14 = load i8, i8* %6, align 4, !dbg !12859
  %15 = zext i8 %14 to i32, !dbg !12860
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12860
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12861
  br i1 %17, label %18, label %24, !dbg !12862, !llvm.loop !12863

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12865
  %21 = load i8, i8* %20, align 1, !dbg !12865
  %22 = icmp eq i8 %21, %1, !dbg !12868
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12869
  br i1 %22, label %24, label %12, !dbg !12870

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12856
  ret i32 %25, !dbg !12871
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(i32* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12872 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12876, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.value(metadata i8 %1, metadata !12877, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.value(metadata i32 %2, metadata !12878, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.value(metadata i8 0, metadata !12879, metadata !DIExpression()), !dbg !12882
  %4 = icmp eq i8 %1, 0, !dbg !12883
  br i1 %4, label %5, label %6, !dbg !12885

5:                                                ; preds = %6, %3
  ret i32 0, !dbg !12886

6:                                                ; preds = %3, %6
  %7 = phi i8 [ %11, %6 ], [ 0, %3 ]
  %8 = phi i32* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !12879, metadata !DIExpression()), !dbg !12882
  call void @llvm.dbg.value(metadata i32* %8, metadata !12876, metadata !DIExpression()), !dbg !12881
  %9 = getelementptr inbounds i32, i32* %8, i32 1, !dbg !12887
  call void @llvm.dbg.value(metadata i32* %9, metadata !12876, metadata !DIExpression()), !dbg !12881
  %10 = load i32, i32* %8, align 4, !dbg !12889
  tail call fastcc void @pinctrl_configure_pin(i32 noundef %10) #25, !dbg !12890
  %11 = add nuw i8 %7, 1, !dbg !12891
  call void @llvm.dbg.value(metadata i8 %11, metadata !12879, metadata !DIExpression()), !dbg !12882
  %12 = icmp ult i8 %11, %1, !dbg !12883
  br i1 %12, label %6, label %5, !dbg !12885, !llvm.loop !12892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pinctrl_configure_pin(i32 noundef %0) unnamed_addr #1 !dbg !12894 {
  %2 = alloca %struct.soc_port_pin, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12898, metadata !DIExpression()), !dbg !12907
  %3 = bitcast %struct.soc_port_pin* %2 to i8*, !dbg !12908
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #24, !dbg !12908
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin* %2, metadata !12899, metadata !DIExpression()), !dbg !12909
  %4 = lshr i32 %0, 16, !dbg !12910
  %5 = and i32 %4, 15, !dbg !12910
  call void @llvm.dbg.value(metadata i32 %4, metadata !12905, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !12907
  call void @llvm.dbg.value(metadata i32 %0, metadata !12906, metadata !DIExpression(DW_OP_constu, 25, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !12907
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @sam_port_addrs, i32 0, i32 %5, !dbg !12911
  %7 = load i32, i32* %6, align 4, !dbg !12911
  %8 = inttoptr i32 %7 to %struct.PortGroup*, !dbg !12912
  %9 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %2, i32 0, i32 0, !dbg !12913
  store %struct.PortGroup* %8, %struct.PortGroup** %9, align 4, !dbg !12914
  %10 = lshr i32 %0, 20, !dbg !12915
  %11 = and i32 %10, 31, !dbg !12915
  %12 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %2, i32 0, i32 1, !dbg !12916
  store i32 %11, i32* %12, align 4, !dbg !12917
  %13 = and i32 %0, 63, !dbg !12918
  %14 = and i32 %0, 234881024, !dbg !12919
  %15 = icmp eq i32 %14, 33554432, !dbg !12919
  %16 = lshr i32 %0, 12, !dbg !12921
  %17 = and i32 %16, 983040, !dbg !12921
  %18 = or i32 %17, 64, !dbg !12921
  %19 = select i1 %15, i32 %18, i32 0, !dbg !12921
  %20 = or i32 %19, %13, !dbg !12921
  %21 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %2, i32 0, i32 2, !dbg !12922
  store i32 %20, i32* %21, align 4, !dbg !12907
  call void @soc_port_configure(%struct.soc_port_pin* noundef nonnull %2) #26, !dbg !12923
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #24, !dbg !12924
  ret void, !dbg !12924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12925 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12928, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12928, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12928, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12944
  ret void, !dbg !12945
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12946 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12950, metadata !DIExpression()), !dbg !12952
  %2 = icmp eq i8* %0, null, !dbg !12953
  br i1 %2, label %29, label %3, !dbg !12955

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12956
  %5 = icmp eq i8 %4, 0, !dbg !12957
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12958
  br i1 %6, label %29, label %8, !dbg !12958

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12951, metadata !DIExpression()), !dbg !12952
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12959

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12951, metadata !DIExpression()), !dbg !12952
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12961
  br i1 %10, label %11, label %15, !dbg !12966

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12967
  %13 = load i8*, i8** %12, align 4, !dbg !12967
  %14 = icmp eq i8* %13, %0, !dbg !12968
  br i1 %14, label %29, label %15, !dbg !12969

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12970
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12951, metadata !DIExpression()), !dbg !12952
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12971
  br i1 %17, label %7, label %8, !dbg !12972, !llvm.loop !12973

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12951, metadata !DIExpression()), !dbg !12952
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12975
  br i1 %20, label %21, label %26, !dbg !12979

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12980
  %23 = load i8*, i8** %22, align 4, !dbg !12980
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12981
  %25 = icmp eq i32 %24, 0, !dbg !12982
  br i1 %25, label %29, label %26, !dbg !12983

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12984
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12951, metadata !DIExpression()), !dbg !12952
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12985
  br i1 %28, label %29, label %18, !dbg !12959, !llvm.loop !12986

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12952
  ret %struct.device* %30, !dbg !12988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12989 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12993, metadata !DIExpression()), !dbg !12994
  %2 = icmp eq %struct.device* %0, null, !dbg !12995
  br i1 %2, label %14, label %3, !dbg !12997

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12998
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12998
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12999
  %7 = load i8, i8* %6, align 1, !dbg !12999
  %8 = and i8 %7, 1, !dbg !12999
  %9 = icmp eq i8 %8, 0, !dbg !12999
  br i1 %9, label %14, label %10, !dbg !13000

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13001
  %12 = load i8, i8* %11, align 1, !dbg !13001
  %13 = icmp eq i8 %12, 0, !dbg !13002
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12994
  ret i1 %15, !dbg !13003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13004 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13009, metadata !DIExpression()), !dbg !13010
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13011
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13013 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13021, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13022, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i8* %2, metadata !13023, metadata !DIExpression()), !dbg !13026
  %5 = bitcast i32* %4 to i8*, !dbg !13027
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13027
  call void @llvm.dbg.value(metadata i32 0, metadata !13024, metadata !DIExpression()), !dbg !13026
  store i32 0, i32* %4, align 4, !dbg !13028
  call void @llvm.dbg.value(metadata i32* %4, metadata !13024, metadata !DIExpression(DW_OP_deref)), !dbg !13026
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !13029
  call void @llvm.dbg.value(metadata i16* %6, metadata !13025, metadata !DIExpression()), !dbg !13026
  %7 = load i32, i32* %4, align 4, !dbg !13030
  call void @llvm.dbg.value(metadata i32 %7, metadata !13024, metadata !DIExpression()), !dbg !13026
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !13031
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13032
  ret i32 %8, !dbg !13033
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13038, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32* %1, metadata !13039, metadata !DIExpression()), !dbg !13044
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13045
  %4 = load i16*, i16** %3, align 4, !dbg !13045
  call void @llvm.dbg.value(metadata i16* %4, metadata !13040, metadata !DIExpression()), !dbg !13044
  %5 = icmp eq i16* %4, null, !dbg !13046
  br i1 %5, label %14, label %6, !dbg !13047

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13048
  call void @llvm.dbg.value(metadata i32 %7, metadata !13041, metadata !DIExpression()), !dbg !13048
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13049
  %9 = load i16, i16* %8, align 2, !dbg !13049
  %10 = add i16 %9, -32767, !dbg !13050
  %11 = icmp ult i16 %10, 2, !dbg !13050
  %12 = add i32 %7, 1, !dbg !13051
  call void @llvm.dbg.value(metadata i32 %12, metadata !13041, metadata !DIExpression()), !dbg !13048
  br i1 %11, label %13, label %6, !dbg !13050, !llvm.loop !13053

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13056
  br label %14, !dbg !13057

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13059 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13063, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i32 %1, metadata !13064, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13065, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i8* %3, metadata !13066, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i32 0, metadata !13067, metadata !DIExpression()), !dbg !13075
  %5 = icmp eq i32 %1, 0, !dbg !13076
  br i1 %5, label %16, label %8, !dbg !13077

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13067, metadata !DIExpression()), !dbg !13075
  %7 = icmp eq i32 %15, %1, !dbg !13076
  br i1 %7, label %16, label %8, !dbg !13077, !llvm.loop !13078

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13067, metadata !DIExpression()), !dbg !13075
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13080
  %11 = load i16, i16* %10, align 2, !dbg !13080
  call void @llvm.dbg.value(metadata i16 %11, metadata !13069, metadata !DIExpression()), !dbg !13081
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !13082
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13072, metadata !DIExpression()), !dbg !13081
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %13, metadata !13073, metadata !DIExpression()), !dbg !13081
  %14 = icmp slt i32 %13, 0, !dbg !13084
  %15 = add nuw i32 %9, 1, !dbg !13086
  call void @llvm.dbg.value(metadata i32 %15, metadata !13067, metadata !DIExpression()), !dbg !13075
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !13088 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13092, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13093, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13094, metadata !DIExpression()), !dbg !13095
  %2 = sext i16 %0 to i32, !dbg !13096
  %3 = icmp slt i16 %0, 1, !dbg !13098
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13099
  %6 = add nsw i32 %2, -1, !dbg !13099
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13099
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13099
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13093, metadata !DIExpression()), !dbg !13095
  ret %struct.device* %8, !dbg !13100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13101 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13103, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13104, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %2, metadata !13105, metadata !DIExpression()), !dbg !13108
  %5 = bitcast i32* %4 to i8*, !dbg !13109
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13109
  call void @llvm.dbg.value(metadata i32 0, metadata !13106, metadata !DIExpression()), !dbg !13108
  store i32 0, i32* %4, align 4, !dbg !13110
  call void @llvm.dbg.value(metadata i32* %4, metadata !13106, metadata !DIExpression(DW_OP_deref)), !dbg !13108
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !13111
  call void @llvm.dbg.value(metadata i16* %6, metadata !13107, metadata !DIExpression()), !dbg !13108
  %7 = load i32, i32* %4, align 4, !dbg !13112
  call void @llvm.dbg.value(metadata i32 %7, metadata !13106, metadata !DIExpression()), !dbg !13108
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !13113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13114
  ret i32 %8, !dbg !13115
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13116 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13118, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32* %1, metadata !13119, metadata !DIExpression()), !dbg !13123
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13124
  %4 = load i16*, i16** %3, align 4, !dbg !13124
  call void @llvm.dbg.value(metadata i16* %4, metadata !13120, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 0, metadata !13121, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 0, metadata !13122, metadata !DIExpression()), !dbg !13123
  %5 = icmp eq i16* %4, null, !dbg !13125
  br i1 %5, label %22, label %6, !dbg !13127

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13121, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i16* %8, metadata !13120, metadata !DIExpression()), !dbg !13123
  %9 = load i16, i16* %8, align 2, !dbg !13128
  %10 = icmp eq i16 %9, -32768, !dbg !13132
  call void @llvm.dbg.value(metadata i32 undef, metadata !13121, metadata !DIExpression()), !dbg !13123
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13133
  call void @llvm.dbg.value(metadata i16* %11, metadata !13120, metadata !DIExpression()), !dbg !13123
  %12 = zext i1 %10 to i32, !dbg !13134
  %13 = add i32 %7, %12, !dbg !13134
  call void @llvm.dbg.value(metadata i32 %13, metadata !13121, metadata !DIExpression()), !dbg !13123
  %14 = icmp eq i32 %13, 2, !dbg !13135
  br i1 %14, label %15, label %6, !dbg !13136

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13123
  call void @llvm.dbg.value(metadata i32 %16, metadata !13122, metadata !DIExpression()), !dbg !13123
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13137
  %18 = load i16, i16* %17, align 2, !dbg !13137
  %19 = icmp eq i16 %18, 32767, !dbg !13138
  %20 = add i32 %16, 1, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %20, metadata !13122, metadata !DIExpression()), !dbg !13123
  br i1 %19, label %21, label %15, !dbg !13141, !llvm.loop !13142

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13144
  br label %22, !dbg !13145

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13146
  call void @llvm.dbg.value(metadata i16* %23, metadata !13120, metadata !DIExpression()), !dbg !13123
  ret i16* %23, !dbg !13147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13148 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13151
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13152
  ret i32* %2, !dbg !13153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !13154 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13302, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13303, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13304, metadata !DIExpression()), !dbg !13305
  ret void, !dbg !13306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13311, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i32 %1, metadata !13312, metadata !DIExpression()), !dbg !13313
  ret void, !dbg !13314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13319, metadata !DIExpression()), !dbg !13321
  call void @llvm.dbg.value(metadata i32 %1, metadata !13320, metadata !DIExpression()), !dbg !13321
  ret void, !dbg !13322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !13323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13327, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i8* %1, metadata !13328, metadata !DIExpression()), !dbg !13329
  ret i32 -134, !dbg !13330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !13331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13335, metadata !DIExpression()), !dbg !13337
  call void @llvm.dbg.value(metadata i8* %1, metadata !13336, metadata !DIExpression()), !dbg !13337
  ret i32 -134, !dbg !13338
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !13339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13342, metadata !DIExpression()), !dbg !13343
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !13344, !srcloc !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13347, metadata !DIExpression()) #24, !dbg !13351
  call void @llvm.dbg.value(metadata i32 undef, metadata !13348, metadata !DIExpression()) #24, !dbg !13351
  br label %3, !dbg !13352

3:                                                ; preds = %3, %1
  br label %3, !dbg !13353, !llvm.loop !13356
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13363, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13364, metadata !DIExpression()), !dbg !13365
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.175, i32 0, i32 0), i32 noundef 69) #26, !dbg !13366
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13371
  unreachable, !dbg !13371
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !13372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13374, metadata !DIExpression()), !dbg !13375
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13376
  unreachable, !dbg !13376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13379, metadata !DIExpression()), !dbg !13383
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13380, metadata !DIExpression()), !dbg !13383
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !13384, !srcloc !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13347, metadata !DIExpression()) #24, !dbg !13386
  call void @llvm.dbg.value(metadata i32 undef, metadata !13348, metadata !DIExpression()) #24, !dbg !13386
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()), !dbg !13383
  %4 = tail call fastcc %struct.k_thread* @k_current_get.178() #27, !dbg !13387
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13382, metadata !DIExpression()), !dbg !13383
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !13388
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #26, !dbg !13388
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13393
  br i1 %6, label %15, label %7, !dbg !13395

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13396, metadata !DIExpression()), !dbg !13401
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13403
  %9 = load i32, i32* %8, align 4, !dbg !13403
  %10 = and i32 %9, 511, !dbg !13404
  %11 = icmp eq i32 %10, 0, !dbg !13405
  br i1 %11, label %13, label %12, !dbg !13406

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 69) #26, !dbg !13407
  br label %13, !dbg !13413

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #25, !dbg !13414
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.181, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #26, !dbg !13414
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !13419
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13396, metadata !DIExpression()), !dbg !13420
  br label %17, !dbg !13425

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #25, !dbg !13414
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.181, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #26, !dbg !13414
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !13419
  br label %17, !dbg !13426

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13384
  call void @llvm.dbg.value(metadata i32 %18, metadata !13347, metadata !DIExpression()) #24, !dbg !13386
  call void @llvm.dbg.value(metadata i32 %18, metadata !13381, metadata !DIExpression()), !dbg !13383
  call void @llvm.dbg.value(metadata i32 undef, metadata !13427, metadata !DIExpression()) #24, !dbg !13430
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !13432, !srcloc !13433
  tail call fastcc void @k_thread_abort.182(%struct.k_thread* noundef %4) #25, !dbg !13434
  ret void, !dbg !13437
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.178() unnamed_addr #13 !dbg !13438 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.190() #27, !dbg !13442
  ret %struct.k_thread* %1, !dbg !13443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !13444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13448, metadata !DIExpression()), !dbg !13449
  %2 = icmp ult i32 %0, 5, !dbg !13450
  br i1 %2, label %3, label %6, !dbg !13450

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13450
  %5 = load i8*, i8** %4, align 4, !dbg !13450
  br label %6, !dbg !13450

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.184, i32 0, i32 0), %1 ], !dbg !13451
  ret i8* %7, !dbg !13453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13458, metadata !DIExpression()), !dbg !13460
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13461
  br i1 %2, label %9, label %3, !dbg !13462

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #26, !dbg !13463
  call void @llvm.dbg.value(metadata i8* %4, metadata !13459, metadata !DIExpression()), !dbg !13460
  %5 = icmp eq i8* %4, null, !dbg !13464
  br i1 %5, label %9, label %6, !dbg !13466

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13467
  %8 = icmp eq i8 %7, 0, !dbg !13468
  br i1 %8, label %9, label %10, !dbg !13469

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.183, i32 0, i32 0), metadata !13459, metadata !DIExpression()), !dbg !13460
  br label %10, !dbg !13470

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.183, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13460
  call void @llvm.dbg.value(metadata i8* %11, metadata !13459, metadata !DIExpression()), !dbg !13460
  ret i8* %11, !dbg !13472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.182(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13477, metadata !DIExpression()), !dbg !13478
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13479, !srcloc !13481
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !13482
  ret void, !dbg !13483
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.190() unnamed_addr #13 !dbg !13484 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13485, !srcloc !13487
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !13488
  ret %struct.k_thread* %1, !dbg !13489
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13490 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13494, metadata !DIExpression()), !dbg !13497
  call void @llvm.dbg.value(metadata i32 %1, metadata !13495, metadata !DIExpression()), !dbg !13497
  call void @llvm.dbg.value(metadata i32 %2, metadata !13496, metadata !DIExpression()), !dbg !13497
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !13498
  ret void, !dbg !13499
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13504, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.value(metadata i8* %1, metadata !13505, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.value(metadata i32 %2, metadata !13506, metadata !DIExpression()), !dbg !13507
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !13508
  ret void, !dbg !13509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13510 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !13511
  ret void, !dbg !13512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13517, metadata !DIExpression()), !dbg !13518
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !13519
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13520
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13521
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13522
  %4 = trunc i32 %0 to i8, !dbg !13523
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13524
  store i8 %4, i8* %5, align 4, !dbg !13525
  %6 = getelementptr inbounds [1 x [2048 x %struct.anon.11]], [1 x [2048 x %struct.anon.11]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13526
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.anon.11* noundef nonnull %6) #25, !dbg !13527
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13528
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13529
  store i8* %8, i8** %9, align 4, !dbg !13530
  ret void, !dbg !13531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13534, metadata !DIExpression()), !dbg !13540
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13541
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13535, metadata !DIExpression()), !dbg !13540
  %3 = getelementptr inbounds [1 x [320 x %struct.anon.11]], [1 x [320 x %struct.anon.11]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13542
  call void @llvm.dbg.value(metadata %struct.anon.11* %3, metadata !13536, metadata !DIExpression()), !dbg !13540
  call void @llvm.dbg.value(metadata i8* null, metadata !13539, metadata !DIExpression()), !dbg !13540
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13543
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13544
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.anon.11* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !13545
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !13546
  ret void, !dbg !13547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.anon.11* noundef readnone %0) unnamed_addr #3 !dbg !13548 {
  call void @llvm.dbg.value(metadata %struct.anon.11* %0, metadata !13552, metadata !DIExpression()), !dbg !13553
  %2 = getelementptr %struct.anon.11, %struct.anon.11* %0, i32 0, i32 0, !dbg !13554
  ret i8* %2, !dbg !13555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !13556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13561, metadata !DIExpression()), !dbg !13562
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13563
  %3 = load i8, i8* %2, align 1, !dbg !13564
  %4 = and i8 %3, -5, !dbg !13564
  store i8 %4, i8* %2, align 1, !dbg !13564
  ret void, !dbg !13565
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !13566 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !13569
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.anon.11* noundef getelementptr inbounds ([1 x [2048 x %struct.anon.11]], [1 x [2048 x %struct.anon.11]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !13570
  %3 = ptrtoint i8* %2 to i32, !dbg !13579
  %4 = add i32 %3, 2048, !dbg !13580
  call void @llvm.dbg.value(metadata i32 %4, metadata !13574, metadata !DIExpression()) #24, !dbg !13581
  call void @llvm.dbg.value(metadata i32 %4, metadata !13582, metadata !DIExpression()) #24, !dbg !13585
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13587, !srcloc !13588
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13589
  %6 = or i32 %5, 512, !dbg !13589
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13589
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -2, i32 noundef 255) #26, !dbg !13590
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -5, i32 noundef 0) #26, !dbg !13593
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -12, i32 noundef 0) #26, !dbg !13594
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -11, i32 noundef 0) #26, !dbg !13595
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -10, i32 noundef 0) #26, !dbg !13596
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -4, i32 noundef 0) #26, !dbg !13597
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13598
  %8 = or i32 %7, 458752, !dbg !13598
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13598
  tail call void @z_arm_fault_init() #26, !dbg !13599
  tail call void @z_arm_cpu_idle_init() #26, !dbg !13600
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13601
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13604
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !13605
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !13606
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13607
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13607
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13568, metadata !DIExpression()), !dbg !13608
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !13609
  call void @z_device_state_init() #26, !dbg !13610
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !13611
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !13612
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !13613
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13614
  unreachable, !dbg !13614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !3334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3338, metadata !DIExpression()), !dbg !13615
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13616
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13616
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !3339, metadata !DIExpression()), !dbg !13615
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !3339, metadata !DIExpression()), !dbg !13615
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13617
  br i1 %7, label %8, label %35, !dbg !13618

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !3339, metadata !DIExpression()), !dbg !13615
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13619
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13619
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !3349, metadata !DIExpression()), !dbg !13620
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13621
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13621
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !13622
  call void @llvm.dbg.value(metadata i32 %14, metadata !3353, metadata !DIExpression()), !dbg !13620
  %15 = icmp eq %struct.device* %11, null, !dbg !13623
  br i1 %15, label %32, label %16, !dbg !13625

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13626
  br i1 %17, label %26, label %18, !dbg !13629

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13630
  call void @llvm.dbg.value(metadata i32 %19, metadata !3353, metadata !DIExpression()), !dbg !13620
  %20 = icmp ult i32 %19, 255, !dbg !13632
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %21, metadata !3353, metadata !DIExpression()), !dbg !13620
  %22 = trunc i32 %21 to i8, !dbg !13633
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13634
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13634
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13635
  store i8 %22, i8* %25, align 1, !dbg !13636
  br label %26, !dbg !13637

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13638
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13638
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13639
  %30 = load i8, i8* %29, align 1, !dbg !13640
  %31 = or i8 %30, 1, !dbg !13640
  store i8 %31, i8* %29, align 1, !dbg !13640
  br label %32, !dbg !13641

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13642
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !3339, metadata !DIExpression()), !dbg !13615
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13617
  br i1 %34, label %8, label %35, !dbg !13618, !llvm.loop !13643

35:                                               ; preds = %32, %1
  ret void, !dbg !13645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.199(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13648, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata i32 %1, metadata !13649, metadata !DIExpression()), !dbg !13650
  %3 = trunc i32 %1 to i8, !dbg !13651
  %4 = shl i8 %3, 5, !dbg !13651
  %5 = and i32 %0, 15, !dbg !13654
  %6 = add nsw i32 %5, -4, !dbg !13655
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13656
  store volatile i8 %4, i8* %7, align 1, !dbg !13657
  ret void, !dbg !13658
}

; Function Attrs: optsize
declare !dbg !13659 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !13660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13663, metadata !DIExpression()), !dbg !13664
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13665
  store i8 1, i8* %2, align 1, !dbg !13666
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13667
  store i8 1, i8* %3, align 4, !dbg !13668
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13669
  store i32 0, i32* %4, align 4, !dbg !13670
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13671
  store i32 0, i32* %5, align 4, !dbg !13672
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13673
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13674
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13675
  ret void, !dbg !13676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13677 {
  tail call void @z_sched_init() #26, !dbg !13682
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13683
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.anon.11* noundef getelementptr inbounds ([1024 x %struct.anon.11], [1024 x %struct.anon.11]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.200, i32 0, i32 0)) #26, !dbg !13684
  call void @llvm.dbg.value(metadata i8* %1, metadata !13681, metadata !DIExpression()), !dbg !13685
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13686
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13687
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !13688
  ret i8* %1, !dbg !13689
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !13690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13694, metadata !DIExpression()), !dbg !13695
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !13696
  unreachable, !dbg !13697
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13700, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.value(metadata i8* %1, metadata !13701, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.value(metadata i8* %2, metadata !13702, metadata !DIExpression()), !dbg !13703
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13704
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !13705
  tail call void @boot_banner() #26, !dbg !13706
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !13707
  tail call void @z_init_static_threads() #26, !dbg !13708
  tail call void @main() #26, !dbg !13709
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13710
  %5 = and i8 %4, -2, !dbg !13710
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13710
  ret void, !dbg !13711
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13712 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13722, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i8* %1, metadata !13723, metadata !DIExpression()), !dbg !13724
  ret void, !dbg !13725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13726 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13728, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata i8* %1, metadata !13729, metadata !DIExpression()), !dbg !13730
  ret void, !dbg !13731
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13732 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13733, !srcloc !13740
  call void @llvm.dbg.value(metadata i32 %1, metadata !13736, metadata !DIExpression()) #24, !dbg !13741
  %2 = icmp ne i32 %1, 0, !dbg !13742
  ret i1 %2, !dbg !13743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13744 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13745
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13746
  %3 = load i8, i8* %2, align 4, !dbg !13747
  %4 = or i8 %3, 1, !dbg !13747
  store i8 %4, i8* %2, align 4, !dbg !13747
  ret void, !dbg !13748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13749 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13750
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13751
  %3 = load i8, i8* %2, align 4, !dbg !13752
  %4 = and i8 %3, -2, !dbg !13752
  store i8 %4, i8* %2, align 4, !dbg !13752
  ret void, !dbg !13753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13754 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13755
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13756
  %3 = load i8, i8* %2, align 4, !dbg !13756
  %4 = and i8 %3, 1, !dbg !13757
  %5 = icmp ne i8 %4, 0, !dbg !13758
  ret i1 %5, !dbg !13759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !13760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13764, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.value(metadata i8* %1, metadata !13765, metadata !DIExpression()), !dbg !13766
  ret i32 -88, !dbg !13767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !13768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13772, metadata !DIExpression()), !dbg !13773
  ret i8* null, !dbg !13774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !13775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13779, metadata !DIExpression()), !dbg !13782
  call void @llvm.dbg.value(metadata i8* %1, metadata !13780, metadata !DIExpression()), !dbg !13782
  call void @llvm.dbg.value(metadata i32 %2, metadata !13781, metadata !DIExpression()), !dbg !13782
  ret i32 -88, !dbg !13783
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !3364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3479, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8* %1, metadata !3480, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i32 %2, metadata !3481, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i32 0, metadata !3482, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8 undef, metadata !3484, metadata !DIExpression()), !dbg !13784
  %4 = icmp eq i8* %1, null, !dbg !13785
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13787
  br i1 %6, label %46, label %7, !dbg !13787

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13788
  %9 = load i8, i8* %8, align 1, !dbg !13788
  call void @llvm.dbg.value(metadata i8 %9, metadata !3484, metadata !DIExpression()), !dbg !13784
  %10 = add i32 %2, -1, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %10, metadata !3481, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8 0, metadata !3485, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8 %9, metadata !3484, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i32 0, metadata !3482, metadata !DIExpression()), !dbg !13784
  %11 = icmp eq i8 %9, 0, !dbg !13791
  br i1 %11, label %12, label %15, !dbg !13793

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13794
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13795
  store i8 0, i8* %14, align 1, !dbg !13796
  br label %46, !dbg !13797

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !3485, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8 %17, metadata !3484, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i32 %18, metadata !3482, metadata !DIExpression()), !dbg !13784
  %19 = zext i8 %17 to i32, !dbg !13798
  %20 = zext i8 %16 to i32, !dbg !13799
  %21 = shl nuw i32 1, %20, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %21, metadata !3483, metadata !DIExpression()), !dbg !13784
  %22 = and i32 %21, %19, !dbg !13801
  %23 = icmp eq i32 %22, 0, !dbg !13803
  br i1 %23, label %42, label %24, !dbg !13804

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13805
  %26 = sub i32 %10, %18, !dbg !13806
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13807
  %28 = load i8*, i8** %27, align 4, !dbg !13807
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13808
  %30 = load i32, i32* %29, align 4, !dbg !13808
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13809
  %32 = add i32 %31, %18, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %32, metadata !3482, metadata !DIExpression()), !dbg !13784
  %33 = trunc i32 %21 to i8, !dbg !13811
  %34 = xor i8 %33, -1, !dbg !13811
  %35 = and i8 %17, %34, !dbg !13811
  call void @llvm.dbg.value(metadata i8 %35, metadata !3484, metadata !DIExpression()), !dbg !13784
  %36 = icmp eq i8 %35, 0, !dbg !13812
  br i1 %36, label %12, label %37, !dbg !13814

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13815
  %39 = sub i32 %10, %32, !dbg !13817
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.203, i32 0, i32 0), i32 noundef 1) #25, !dbg !13818
  %41 = add i32 %40, %32, !dbg !13819
  call void @llvm.dbg.value(metadata i32 %41, metadata !3482, metadata !DIExpression()), !dbg !13784
  br label %42, !dbg !13820

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13784
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13784
  call void @llvm.dbg.value(metadata i8 %44, metadata !3484, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i32 %43, metadata !3482, metadata !DIExpression()), !dbg !13784
  %45 = add i8 %16, 1, !dbg !13821
  call void @llvm.dbg.value(metadata i8 %45, metadata !3485, metadata !DIExpression()), !dbg !13790
  br label %15, !dbg !13793

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.204, i32 0, i32 0), %3 ], !dbg !13784
  ret i8* %47, !dbg !13822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13823 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13827, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 %1, metadata !13828, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i8* %2, metadata !13829, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 %3, metadata !13830, metadata !DIExpression()), !dbg !13832
  %5 = icmp ult i32 %1, %3, !dbg !13833
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13833
  call void @llvm.dbg.value(metadata i32 %6, metadata !13831, metadata !DIExpression()), !dbg !13832
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13834
  ret i32 %6, !dbg !13835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13840, metadata !DIExpression()), !dbg !13841
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13842
  ret void, !dbg !13843
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.anon.11* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13853, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata %struct.anon.11* %1, metadata !13854, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i32 %2, metadata !13855, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13856, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i8* %4, metadata !13857, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i8* %5, metadata !13858, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i8* %6, metadata !13859, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i32 %7, metadata !13860, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i32 %8, metadata !13861, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i8* undef, metadata !13862, metadata !DIExpression()), !dbg !13864
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13865
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !13866
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13867
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13868
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.anon.11* noundef %1, i32 noundef %2) #25, !dbg !13869
  call void @llvm.dbg.value(metadata i8* %13, metadata !13863, metadata !DIExpression()), !dbg !13864
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.anon.11* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13870
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13871
  store i8* null, i8** %14, align 4, !dbg !13872
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13873
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13873
  br i1 %16, label %20, label %17, !dbg !13875

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13876
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13876
  br label %20, !dbg !13877

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13864
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13878
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13880
  ret i8* %13, !dbg !13881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13882 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13887, metadata !DIExpression()), !dbg !13888
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13889
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13890
  ret void, !dbg !13891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13892 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13897, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.value(metadata i32 %1, metadata !13898, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.value(metadata i32 %2, metadata !13899, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.value(metadata i32 %3, metadata !13900, metadata !DIExpression()), !dbg !13901
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13902
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13903
  %6 = trunc i32 %3 to i8, !dbg !13904
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13905
  store i8 %6, i8* %7, align 4, !dbg !13906
  %8 = trunc i32 %2 to i8, !dbg !13907
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13908
  store i8 %8, i8* %9, align 1, !dbg !13909
  %10 = trunc i32 %1 to i8, !dbg !13910
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13911
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13911
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13911
  store i8 %10, i8* %13, align 2, !dbg !13912
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13913
  store i8 0, i8* %14, align 1, !dbg !13914
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13915
  ret void, !dbg !13916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.anon.11* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !13917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13921, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata %struct.anon.11* %1, metadata !13922, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata i32 %2, metadata !13923, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata i32 0, metadata !13928, metadata !DIExpression()), !dbg !13929
  %4 = add i32 %2, 7, !dbg !13930
  %5 = and i32 %4, -8, !dbg !13930
  call void @llvm.dbg.value(metadata i32 %5, metadata !13924, metadata !DIExpression()), !dbg !13929
  %6 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.214(%struct.anon.11* noundef %1) #25, !dbg !13932
  call void @llvm.dbg.value(metadata i8* %6, metadata !13927, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata i32 %5, metadata !13925, metadata !DIExpression()), !dbg !13929
  %7 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %1, i32 %5, i32 0, !dbg !13933
  call void @llvm.dbg.value(metadata i8* %7, metadata !13926, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata i32 0, metadata !13928, metadata !DIExpression()), !dbg !13929
  %8 = ptrtoint i8* %6 to i32, !dbg !13934
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13935
  store i32 %8, i32* %9, align 4, !dbg !13936
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13937
  store i32 %5, i32* %10, align 4, !dbg !13938
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13939
  store i32 0, i32* %11, align 4, !dbg !13940
  call void @llvm.dbg.value(metadata i8* %7, metadata !13926, metadata !DIExpression()), !dbg !13929
  ret i8* %7, !dbg !13941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER.214(%struct.anon.11* noundef readnone %0) unnamed_addr #3 !dbg !13942 {
  call void @llvm.dbg.value(metadata %struct.anon.11* %0, metadata !13946, metadata !DIExpression()), !dbg !13947
  %2 = getelementptr %struct.anon.11, %struct.anon.11* %0, i32 0, i32 0, !dbg !13948
  ret i8* %2, !dbg !13949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13950 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13955, metadata !DIExpression()), !dbg !13956
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13957
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13958
  ret void, !dbg !13959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13960 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13962, metadata !DIExpression()), !dbg !13963
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13964
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13965
  ret void, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13967 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13971, metadata !DIExpression()), !dbg !13972
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13973
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13974
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13975
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13976
  ret void, !dbg !13977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13978 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13983, metadata !DIExpression()), !dbg !13984
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13985
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13986
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13987
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13988
  ret void, !dbg !13989
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.anon.11* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13990 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14007, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13998, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata %struct.anon.11* %1, metadata !13999, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i32 %2, metadata !14000, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14001, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i8* %4, metadata !14002, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i8* %5, metadata !14003, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i8* %6, metadata !14004, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i32 %7, metadata !14005, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i32 %8, metadata !14006, metadata !DIExpression()), !dbg !14008
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.anon.11* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !14009
  %13 = icmp eq i64 %11, -1, !dbg !14010
  br i1 %13, label %15, label %14, !dbg !14012

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !14013
  br label %15, !dbg !14015

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14017 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14022, metadata !DIExpression()), !dbg !14023
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14021, metadata !DIExpression()), !dbg !14023
  %4 = icmp eq i64 %3, 0, !dbg !14024
  br i1 %4, label %5, label %6, !dbg !14026

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !14027
  br label %7, !dbg !14029

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14030
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14037, metadata !DIExpression()), !dbg !14038
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14039, !srcloc !14041
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !14042
  ret void, !dbg !14043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14044 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14047, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14046, metadata !DIExpression()), !dbg !14048
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14049
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !14050
  ret void, !dbg !14051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14052 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14054, metadata !DIExpression()), !dbg !14074
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14075

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !14076
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14072, metadata !DIExpression()), !dbg !14077
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14078

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14054, metadata !DIExpression()), !dbg !14074
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14079
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14079
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14082
  %7 = load %struct.anon.11*, %struct.anon.11** %6, align 4, !dbg !14082
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14083
  %9 = load i32, i32* %8, align 4, !dbg !14083
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14084
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14084
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14085
  %13 = load i8*, i8** %12, align 4, !dbg !14085
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14086
  %15 = load i8*, i8** %14, align 4, !dbg !14086
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14087
  %17 = load i8*, i8** %16, align 4, !dbg !14087
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14088
  %19 = load i32, i32* %18, align 4, !dbg !14088
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14089
  %21 = load i32, i32* %20, align 4, !dbg !14089
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.anon.11* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !14090
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14091
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14092
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14093
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14093
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14094
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14054, metadata !DIExpression()), !dbg !14074
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14095
  br i1 %27, label %2, label %1, !dbg !14075, !llvm.loop !14097

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !14076
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14072, metadata !DIExpression()), !dbg !14077
  br label %29, !dbg !14078

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !14099
  ret void, !dbg !14100

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14072, metadata !DIExpression()), !dbg !14077
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14101
  %33 = load i32, i32* %32, align 4, !dbg !14101
  %34 = icmp eq i32 %33, -1, !dbg !14105
  br i1 %34, label %43, label %35, !dbg !14106

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14107
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14107
  %38 = icmp sgt i32 %33, 0, !dbg !14109
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14109
  %40 = zext i32 %39 to i64, !dbg !14109
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !14109
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14110
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !14110
  br label %43, !dbg !14111

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14112
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14072, metadata !DIExpression()), !dbg !14077
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14113
  br i1 %45, label %30, label %29, !dbg !14078, !llvm.loop !14115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !14117 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14122, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata i64 %0, metadata !14124, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 1000, metadata !14129, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 10000, metadata !14130, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i8 1, metadata !14131, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i8 0, metadata !14132, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i8 1, metadata !14133, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i8 0, metadata !14134, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i8 1, metadata !14135, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i8 0, metadata !14136, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i64 0, metadata !14137, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i64 0, metadata !14137, metadata !DIExpression()), !dbg !14141
  %2 = mul i64 %0, 10, !dbg !14143
  ret i64 %2, !dbg !14149
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !14150 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14152, metadata !DIExpression()), !dbg !14156
  call void @llvm.dbg.value(metadata i8* %1, metadata !14153, metadata !DIExpression()), !dbg !14156
  call void @llvm.dbg.value(metadata i8* %2, metadata !14154, metadata !DIExpression()), !dbg !14156
  call void @llvm.dbg.value(metadata i8* %3, metadata !14155, metadata !DIExpression()), !dbg !14156
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14157
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14158
  %7 = load i8, i8* %6, align 4, !dbg !14159
  %8 = or i8 %7, 4, !dbg !14159
  store i8 %8, i8* %6, align 4, !dbg !14159
  tail call void @z_thread_essential_clear() #25, !dbg !14160
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14161
  unreachable, !dbg !14161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !14162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14166, metadata !DIExpression()), !dbg !14167
  ret i32 -134, !dbg !14168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()), !dbg !14175
  call void @llvm.dbg.value(metadata i32 %1, metadata !14174, metadata !DIExpression()), !dbg !14175
  ret i32 -134, !dbg !14176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !14177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14184, metadata !DIExpression()), !dbg !14186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14185, metadata !DIExpression()), !dbg !14186
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14187
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14189
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14186
  ret i32 %6, !dbg !14190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !14191 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14195, metadata !DIExpression()), !dbg !14196
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14197
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14196
  ret i32 %3, !dbg !14199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14200 {
  tail call void @sys_clock_idle_exit() #26, !dbg !14202
  ret void, !dbg !14203
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !14204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14206, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i8* %1, metadata !14207, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i8* %2, metadata !14208, metadata !DIExpression()), !dbg !14209
  br label %4, !dbg !14210

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !14211, !srcloc !14218
  call void @llvm.dbg.value(metadata i32 undef, metadata !14214, metadata !DIExpression()) #24, !dbg !14219
  call void @llvm.dbg.value(metadata i32 undef, metadata !14215, metadata !DIExpression()) #24, !dbg !14219
  tail call fastcc void @k_cpu_idle() #25, !dbg !14220
  br label %4, !dbg !14210, !llvm.loop !14221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14223 {
  tail call void @arch_cpu_idle() #26, !dbg !14224
  ret void, !dbg !14225
}

; Function Attrs: optsize
declare !dbg !14226 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14231, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14232, metadata !DIExpression()), !dbg !14235
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14236
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14236
  %5 = load i8, i8* %4, align 2, !dbg !14236
  call void @llvm.dbg.value(metadata i8 %5, metadata !14233, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14235
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14237
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14237
  %8 = load i8, i8* %7, align 2, !dbg !14237
  call void @llvm.dbg.value(metadata i8 %8, metadata !14234, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14235
  %9 = icmp eq i8 %8, %5, !dbg !14238
  %10 = sext i8 %5 to i32, !dbg !14240
  %11 = sext i8 %8 to i32, !dbg !14240
  %12 = sub nsw i32 %11, %10, !dbg !14240
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14240
  ret i32 %13, !dbg !14241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14246, metadata !DIExpression()), !dbg !14247
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !14248
  %3 = icmp eq i32 %2, 0, !dbg !14250
  br i1 %3, label %8, label %4, !dbg !14251

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14252
  %6 = add i32 %5, %2, !dbg !14254
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14255
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !14256
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14257
  br label %8, !dbg !14258

8:                                                ; preds = %4, %1
  ret void, !dbg !14259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14260 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14264, metadata !DIExpression()), !dbg !14266
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %1, metadata !14265, metadata !DIExpression()), !dbg !14266
  ret i32 %1, !dbg !14268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14273, metadata !DIExpression()), !dbg !14282
  call void @llvm.dbg.value(metadata i32 %1, metadata !14274, metadata !DIExpression()), !dbg !14282
  call void @llvm.dbg.value(metadata i32 0, metadata !14275, metadata !DIExpression()), !dbg !14283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !14291
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !14293, !srcloc !14299
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14293
  call void @llvm.dbg.value(metadata i32 %4, metadata !14296, metadata !DIExpression()) #24, !dbg !14300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !14300
  call void @llvm.dbg.value(metadata i32 %4, metadata !14290, metadata !DIExpression()) #24, !dbg !14291
  call void @llvm.dbg.value(metadata i32 %4, metadata !14281, metadata !DIExpression()), !dbg !14283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14275, metadata !DIExpression()), !dbg !14283
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14301
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !14304
  %6 = icmp sgt i32 %0, 0, !dbg !14305
  %7 = icmp sgt i32 %5, 2, !dbg !14307
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14307
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14307
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14308
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14309
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14310
  call void @llvm.dbg.value(metadata i32 %4, metadata !14311, metadata !DIExpression()) #24, !dbg !14317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14317
  call void @llvm.dbg.value(metadata i32 %4, metadata !14319, metadata !DIExpression()) #24, !dbg !14322
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14324, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !14275, metadata !DIExpression()), !dbg !14283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14275, metadata !DIExpression()), !dbg !14283
  ret void, !dbg !14326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !14327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14329, metadata !DIExpression()), !dbg !14330
  call void @llvm.dbg.value(metadata i32 %0, metadata !14331, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14346
  call void @llvm.dbg.value(metadata i32 1000, metadata !14334, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata i32 10000, metadata !14335, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata i8 1, metadata !14336, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata i1 true, metadata !14337, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14346
  call void @llvm.dbg.value(metadata i1 true, metadata !14338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14346
  call void @llvm.dbg.value(metadata i8 0, metadata !14339, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata i1 true, metadata !14340, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14346
  call void @llvm.dbg.value(metadata i1 false, metadata !14341, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14346
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !14346
  %2 = mul i32 %0, 10, !dbg !14348
  ret i32 %2, !dbg !14354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14357, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !14360
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !14362, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14362
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !14364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !14360
  call void @llvm.dbg.value(metadata i32 %3, metadata !14358, metadata !DIExpression()), !dbg !14359
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14365
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14367
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14368
  br i1 %6, label %7, label %8, !dbg !14369

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !14372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14372
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !14374
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14376, !srcloc !14325
  br label %24, !dbg !14377

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14378
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !14379
  %10 = icmp eq i32 %9, 0, !dbg !14379
  br i1 %10, label %21, label %11, !dbg !14381

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !14382
  br i1 %12, label %13, label %21, !dbg !14383

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14384
  %15 = icmp sgt i32 %14, %0, !dbg !14387
  br i1 %15, label %19, label %16, !dbg !14388

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14389
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !14389
  call void @llvm.dbg.value(metadata i32 %18, metadata !14358, metadata !DIExpression()), !dbg !14359
  br label %22, !dbg !14391

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14392
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14392
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14394
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14359
  call void @llvm.dbg.value(metadata i32 %23, metadata !14358, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata i32 %23, metadata !14311, metadata !DIExpression()) #24, !dbg !14396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14396
  call void @llvm.dbg.value(metadata i32 %23, metadata !14319, metadata !DIExpression()) #24, !dbg !14398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14400, !srcloc !14325
  br label %24, !dbg !14401

24:                                               ; preds = %22, %7
  ret void, !dbg !14401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !14402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14406, metadata !DIExpression()), !dbg !14408
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !14409
  %3 = icmp eq i32 %2, 0, !dbg !14409
  br i1 %3, label %16, label %4, !dbg !14410

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14411
  br i1 %5, label %16, label %6, !dbg !14412

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14413
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14413
  %9 = load i8, i8* %8, align 2, !dbg !14413
  %10 = sext i8 %9 to i32, !dbg !14414
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14415
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !14416
  br i1 %12, label %16, label %13, !dbg !14417

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !14418
  %15 = xor i1 %14, true, !dbg !14419
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14408
  call void @llvm.dbg.value(metadata i1 %17, metadata !14407, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14408
  ret i1 %17, !dbg !14420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14421 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14425, metadata !DIExpression()), !dbg !14427
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14428
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14426, metadata !DIExpression()), !dbg !14427
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !14429
  br i1 %3, label %5, label %4, !dbg !14431

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !14432
  br label %5, !dbg !14434

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14425, metadata !DIExpression()), !dbg !14427
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14435
  ret i32 %6, !dbg !14436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14439, metadata !DIExpression()), !dbg !14441
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14442
  %3 = load i8, i8* %2, align 1, !dbg !14442
  call void @llvm.dbg.value(metadata i8 %3, metadata !14440, metadata !DIExpression()), !dbg !14441
  %4 = and i8 %3, 31, !dbg !14443
  %5 = icmp ne i8 %4, 0, !dbg !14444
  ret i1 %5, !dbg !14445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14448, metadata !DIExpression()), !dbg !14449
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14450
  br i1 %2, label %3, label %7, !dbg !14452

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14453, metadata !DIExpression()) #24, !dbg !14456
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14459
  %5 = load i8, i8* %4, align 1, !dbg !14460
  %6 = and i8 %5, 127, !dbg !14460
  store i8 %6, i8* %4, align 1, !dbg !14460
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14461, metadata !DIExpression()) #24, !dbg !14464
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14468
  br label %7, !dbg !14469

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14470, metadata !DIExpression()) #24, !dbg !14473
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14475
  %9 = load i8, i8* %8, align 1, !dbg !14476
  %10 = or i8 %9, -128, !dbg !14476
  store i8 %10, i8* %8, align 1, !dbg !14476
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #24, !dbg !14480
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14484, metadata !DIExpression()) #24, !dbg !14492
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()) #24, !dbg !14492
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14494
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14491, metadata !DIExpression()) #24, !dbg !14492
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14496
  br i1 %12, label %23, label %13, !dbg !14494

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14491, metadata !DIExpression()) #24, !dbg !14492
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14498
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14491, metadata !DIExpression()) #24, !dbg !14492
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !14499
  %17 = icmp sgt i32 %16, 0, !dbg !14502
  br i1 %17, label %18, label %20, !dbg !14503

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14504
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !14506
  br label %25, !dbg !14507

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !14496
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14491, metadata !DIExpression()) #24, !dbg !14492
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14496
  br i1 %22, label %23, label %13, !dbg !14494, !llvm.loop !14508

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14510
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !14511
  br label %25, !dbg !14512

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14513
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14514
  %28 = zext i1 %27 to i32, !dbg !14514
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !14515
  ret void, !dbg !14516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14519, metadata !DIExpression()), !dbg !14520
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !14521
  ret i1 %2, !dbg !14522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !14523 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14525, metadata !DIExpression()), !dbg !14527
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14526, metadata !DIExpression()), !dbg !14527
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14528
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !14529
  ret void, !dbg !14530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14531 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14535, metadata !DIExpression()), !dbg !14536
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !14537
  br i1 %2, label %6, label %3, !dbg !14537

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14538
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14538
  br label %6, !dbg !14537

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14537
  ret %struct._dnode* %7, !dbg !14539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14540 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14544, metadata !DIExpression()), !dbg !14548
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14545, metadata !DIExpression()), !dbg !14548
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14549
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14549
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14546, metadata !DIExpression()), !dbg !14548
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14550
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14551
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14552
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14553
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14554
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14555
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14556
  ret void, !dbg !14557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14558 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14562, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14563, metadata !DIExpression()), !dbg !14564
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14565
  br i1 %3, label %6, label %4, !dbg !14566

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14567
  br label %6, !dbg !14566

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14566
  ret %struct._dnode* %7, !dbg !14568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14573, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14574, metadata !DIExpression()), !dbg !14576
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14577
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14577
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14575, metadata !DIExpression()), !dbg !14576
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14578
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14579
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14580
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14581
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14582
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14583
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14584
  ret void, !dbg !14585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14588, metadata !DIExpression()), !dbg !14590
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14591
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14598, metadata !DIExpression()) #24, !dbg !14600
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14601
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14602
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14602
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14589, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14603, metadata !DIExpression()) #24, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %0, metadata !14608, metadata !DIExpression()) #24, !dbg !14609
  %6 = icmp eq i32 %0, 0, !dbg !14612
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14614
  br i1 %6, label %8, label %15, !dbg !14615

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !14616
  br i1 %9, label %15, label %10, !dbg !14618

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14619
  br i1 %11, label %15, label %12, !dbg !14621

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !14622
  %14 = icmp eq i32 %13, 0, !dbg !14622
  br i1 %14, label %18, label %15, !dbg !14624

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14625
  br i1 %16, label %18, label %17, !dbg !14628

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14629
  br label %18, !dbg !14631

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14614
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14614
  ret void, !dbg !14632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14633 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14637, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14638, metadata !DIExpression()), !dbg !14640
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !14641
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14639, metadata !DIExpression()), !dbg !14640
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14638, metadata !DIExpression()), !dbg !14640
  ret %struct.k_thread* %3, !dbg !14642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()), !dbg !14646
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14647
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14648
  %4 = xor i1 %3, true, !dbg !14649
  ret i1 %4, !dbg !14650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14653, metadata !DIExpression()), !dbg !14654
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14655
  %3 = load i16, i16* %2, align 2, !dbg !14655
  %4 = icmp ult i16 %3, 128, !dbg !14656
  %5 = zext i1 %4 to i32, !dbg !14656
  ret i32 %5, !dbg !14657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14658 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14664, metadata !DIExpression()), !dbg !14665
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14666
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14667
  %4 = xor i1 %3, true, !dbg !14668
  ret i1 %4, !dbg !14669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14670 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14676, metadata !DIExpression()), !dbg !14677
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14678
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14678
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14679
  ret i1 %4, !dbg !14680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14681 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14683, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14684, metadata !DIExpression()), !dbg !14685
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14686
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14686
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14687
  br i1 %5, label %9, label %6, !dbg !14688

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14689
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14689
  br label %9, !dbg !14688

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14688
  ret %struct._dnode* %10, !dbg !14690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14691 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14695, metadata !DIExpression()), !dbg !14696
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14697
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14697
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14698
  ret i1 %4, !dbg !14699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14700 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14704, metadata !DIExpression()), !dbg !14707
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14708
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14708
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14705, metadata !DIExpression()), !dbg !14707
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14709
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14709
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14706, metadata !DIExpression()), !dbg !14707
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14710
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14711
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14712
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14713
  tail call fastcc void @sys_dnode_init.219(%struct._dnode* noundef %0) #25, !dbg !14714
  ret void, !dbg !14715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.219(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14716 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14718, metadata !DIExpression()), !dbg !14719
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14720
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14721
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14722
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14723
  ret void, !dbg !14724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14729, metadata !DIExpression()), !dbg !14731
  call void @llvm.dbg.value(metadata i32 128, metadata !14730, metadata !DIExpression()), !dbg !14731
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14732
  %3 = load i8, i8* %2, align 1, !dbg !14732
  %4 = icmp slt i8 %3, 0, !dbg !14733
  ret i1 %4, !dbg !14734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14739, metadata !DIExpression()), !dbg !14741
  call void @llvm.dbg.value(metadata i32 %1, metadata !14740, metadata !DIExpression()), !dbg !14741
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14742
  ret i1 %3, !dbg !14743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !14744 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14746, metadata !DIExpression()), !dbg !14747
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14748
  ret i1 %2, !dbg !14749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14752, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %1, metadata !14753, metadata !DIExpression()), !dbg !14754
  %3 = icmp slt i32 %0, %1, !dbg !14755
  ret i1 %3, !dbg !14756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 0, metadata !14760, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !14765
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !14767, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !14765
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14764
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14770
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !14775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !14777
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14779, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !14760, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14764
  ret void, !dbg !14780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14781 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14783, metadata !DIExpression()), !dbg !14784
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14785
  br i1 %2, label %24, label %3, !dbg !14787

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14788
  br i1 %4, label %5, label %24, !dbg !14789

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14470, metadata !DIExpression()) #24, !dbg !14790
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14793
  %7 = load i8, i8* %6, align 1, !dbg !14794
  %8 = or i8 %7, -128, !dbg !14794
  store i8 %8, i8* %6, align 1, !dbg !14794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #24, !dbg !14795
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14484, metadata !DIExpression()) #24, !dbg !14797
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()) #24, !dbg !14797
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14799
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14491, metadata !DIExpression()) #24, !dbg !14797
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14800
  br i1 %10, label %21, label %11, !dbg !14799

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14491, metadata !DIExpression()) #24, !dbg !14797
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14801
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14491, metadata !DIExpression()) #24, !dbg !14797
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !14802
  %15 = icmp sgt i32 %14, 0, !dbg !14803
  br i1 %15, label %16, label %18, !dbg !14804

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14805
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !14806
  br label %23, !dbg !14807

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !14800
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14491, metadata !DIExpression()) #24, !dbg !14797
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14800
  br i1 %20, label %21, label %11, !dbg !14799, !llvm.loop !14808

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14810
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !14811
  br label %23, !dbg !14812

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14813
  br label %24, !dbg !14814

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14816 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14818, metadata !DIExpression()), !dbg !14819
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14820
  br i1 %2, label %6, label %3, !dbg !14821

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14822
  %5 = xor i1 %4, true, !dbg !14821
  br label %6, !dbg !14821

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14824 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14826, metadata !DIExpression()), !dbg !14830
  call void @llvm.dbg.value(metadata i32 0, metadata !14827, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !14832
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !14834, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14834
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !14836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !14836
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !14832
  call void @llvm.dbg.value(metadata i32 %3, metadata !14829, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14827, metadata !DIExpression()), !dbg !14831
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14837
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !14840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !14842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14844, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !14827, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14827, metadata !DIExpression()), !dbg !14831
  ret void, !dbg !14845
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14846 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14848, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !14851
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !14853, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !14855
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !14851
  call void @llvm.dbg.value(metadata i32 %3, metadata !14849, metadata !DIExpression()), !dbg !14850
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14856
  br i1 %4, label %5, label %6, !dbg !14858

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !14859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14859
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !14862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14864, !srcloc !14325
  br label %8, !dbg !14865

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.224(%struct.k_thread* noundef %0) #25, !dbg !14866
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14867
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14868
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !14868
  br label %8, !dbg !14869

8:                                                ; preds = %6, %5
  ret void, !dbg !14869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14872, metadata !DIExpression()), !dbg !14873
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14874
  %3 = load i8, i8* %2, align 1, !dbg !14874
  %4 = and i8 %3, 4, !dbg !14875
  %5 = icmp eq i8 %4, 0, !dbg !14876
  ret i1 %5, !dbg !14877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.224(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14880, metadata !DIExpression()), !dbg !14881
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14882
  %3 = load i8, i8* %2, align 1, !dbg !14883
  %4 = and i8 %3, -5, !dbg !14883
  store i8 %4, i8* %2, align 1, !dbg !14883
  ret void, !dbg !14884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14885 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14888, metadata !DIExpression()), !dbg !14889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14887, metadata !DIExpression()), !dbg !14889
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !14890
  br i1 %4, label %5, label %9, !dbg !14892

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !14893
  br i1 %6, label %7, label %9, !dbg !14894

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14895, metadata !DIExpression()) #24, !dbg !14901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14900, metadata !DIExpression()) #24, !dbg !14901
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14904
  br label %10, !dbg !14905

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !14906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14906
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !14909
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14911, !srcloc !14325
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14917, metadata !DIExpression()), !dbg !14918
  call void @llvm.dbg.value(metadata i32 %0, metadata !14919, metadata !DIExpression()), !dbg !14924
  %2 = icmp eq i32 %0, 0, !dbg !14926
  br i1 %2, label %3, label %6, !dbg !14927

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14928, !srcloc !14935
  call void @llvm.dbg.value(metadata i32 %4, metadata !14931, metadata !DIExpression()) #24, !dbg !14936
  %5 = icmp eq i32 %4, 0, !dbg !14937
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14918
  ret i1 %7, !dbg !14938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !14939 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14942
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14941, metadata !DIExpression()), !dbg !14943
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14944
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14945
  ret i1 %3, !dbg !14946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14949, metadata !DIExpression()), !dbg !14951
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !14952
  call void @llvm.dbg.value(metadata i32 %2, metadata !14950, metadata !DIExpression()), !dbg !14951
  ret i32 %2, !dbg !14953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14954 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()), !dbg !14960
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14961
  call void @llvm.dbg.value(metadata i32 0, metadata !14957, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !14963
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !14965, !srcloc !14299
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14965
  call void @llvm.dbg.value(metadata i32 %4, metadata !14296, metadata !DIExpression()) #24, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !14967
  call void @llvm.dbg.value(metadata i32 %4, metadata !14290, metadata !DIExpression()) #24, !dbg !14963
  call void @llvm.dbg.value(metadata i32 %4, metadata !14959, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14957, metadata !DIExpression()), !dbg !14962
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14968
  br i1 %5, label %6, label %10, !dbg !14972

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14453, metadata !DIExpression()) #24, !dbg !14973
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14976
  %8 = load i8, i8* %7, align 1, !dbg !14977
  %9 = and i8 %8, 127, !dbg !14977
  store i8 %9, i8* %7, align 1, !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14461, metadata !DIExpression()) #24, !dbg !14978
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14980
  br label %10, !dbg !14981

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !14982
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14983
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14984
  %13 = zext i1 %12 to i32, !dbg !14984
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !14985
  call void @llvm.dbg.value(metadata i32 %4, metadata !14311, metadata !DIExpression()) #24, !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !14986
  call void @llvm.dbg.value(metadata i32 %4, metadata !14319, metadata !DIExpression()) #24, !dbg !14988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14990, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !14957, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14957, metadata !DIExpression()), !dbg !14962
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14991
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14993
  br i1 %15, label %16, label %17, !dbg !14994

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !14995
  br label %17, !dbg !14997

17:                                               ; preds = %16, %10
  ret void, !dbg !14998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15001, metadata !DIExpression()), !dbg !15002
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15003
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15004
  ret i32 %3, !dbg !15005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15008, metadata !DIExpression()), !dbg !15009
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15010
  %3 = load i8, i8* %2, align 1, !dbg !15011
  %4 = or i8 %3, 16, !dbg !15011
  store i8 %4, i8* %2, align 1, !dbg !15011
  ret void, !dbg !15012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15013 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15014, !srcloc !14299
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15014
  call void @llvm.dbg.value(metadata i32 %2, metadata !14296, metadata !DIExpression()) #24, !dbg !15016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15016
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !15017
  ret void, !dbg !15018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15021, metadata !DIExpression()), !dbg !15022
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !15023
  br i1 %2, label %3, label %5, !dbg !15025

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !15026
  br label %6, !dbg !15028

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14319, metadata !DIExpression()) #24, !dbg !15029
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15032, !srcloc !14325
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15036, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15039
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15041, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15041
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !15039
  call void @llvm.dbg.value(metadata i32 %3, metadata !15037, metadata !DIExpression()), !dbg !15038
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !15044
  br i1 %4, label %6, label %5, !dbg !15046

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !15047
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15047
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !15050
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15052, !srcloc !14325
  br label %8, !dbg !15053

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15054
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15055
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15056
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !15056
  br label %8, !dbg !15057

8:                                                ; preds = %6, %5
  ret void, !dbg !15057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15058 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15060, metadata !DIExpression()), !dbg !15061
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15062
  %3 = load i8, i8* %2, align 1, !dbg !15062
  %4 = and i8 %3, 16, !dbg !15063
  %5 = icmp ne i8 %4, 0, !dbg !15064
  ret i1 %5, !dbg !15065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15068, metadata !DIExpression()), !dbg !15069
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15070
  %3 = load i8, i8* %2, align 1, !dbg !15071
  %4 = and i8 %3, -17, !dbg !15071
  store i8 %4, i8* %2, align 1, !dbg !15071
  ret void, !dbg !15072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15073 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15083, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15081, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15082, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata i32 0, metadata !15084, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15089
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15091, !srcloc !14299
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15091
  call void @llvm.dbg.value(metadata i32 %5, metadata !14296, metadata !DIExpression()) #24, !dbg !15093
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15093
  call void @llvm.dbg.value(metadata i32 %5, metadata !14290, metadata !DIExpression()) #24, !dbg !15089
  call void @llvm.dbg.value(metadata i32 %5, metadata !15086, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata i32 undef, metadata !15084, metadata !DIExpression()), !dbg !15088
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !15094
  call void @llvm.dbg.value(metadata i32 %5, metadata !14311, metadata !DIExpression()) #24, !dbg !15097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15097
  call void @llvm.dbg.value(metadata i32 %5, metadata !14319, metadata !DIExpression()) #24, !dbg !15099
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15101, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !15084, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata i32 undef, metadata !15084, metadata !DIExpression()), !dbg !15088
  ret void, !dbg !15102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15103 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15107, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15105, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15106, metadata !DIExpression()), !dbg !15108
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !15109
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !15110
  ret void, !dbg !15111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15117, metadata !DIExpression()), !dbg !15118
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !15119
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !15120
  %3 = icmp eq %union.anon* %1, null, !dbg !15121
  br i1 %3, label %21, label %4, !dbg !15123

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15124
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15126
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15127
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14484, metadata !DIExpression()) #24, !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()) #24, !dbg !15128
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15130
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14491, metadata !DIExpression()) #24, !dbg !15128
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15131
  br i1 %8, label %19, label %9, !dbg !15130

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14491, metadata !DIExpression()) #24, !dbg !15128
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14491, metadata !DIExpression()) #24, !dbg !15128
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15133
  %13 = icmp sgt i32 %12, 0, !dbg !15134
  br i1 %13, label %14, label %16, !dbg !15135

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15136
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15137
  br label %21, !dbg !15138

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15131
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14491, metadata !DIExpression()) #24, !dbg !15128
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15131
  br i1 %18, label %19, label %9, !dbg !15130, !llvm.loop !15139

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15141
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15142
  br label %21, !dbg !15143

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15145 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15150, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15149, metadata !DIExpression()), !dbg !15151
  %4 = icmp eq i64 %3, -1, !dbg !15152
  br i1 %4, label %6, label %5, !dbg !15154

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.225(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !15155
  br label %6, !dbg !15157

6:                                                ; preds = %5, %2
  ret void, !dbg !15158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.225(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15159 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15162, metadata !DIExpression()), !dbg !15163
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15161, metadata !DIExpression()), !dbg !15163
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15164
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15165
  ret void, !dbg !15166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15167 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15169, metadata !DIExpression()), !dbg !15177
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15178
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15178
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15170, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata i32 0, metadata !15171, metadata !DIExpression()), !dbg !15179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15180
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15182, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !15184
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15184
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !15180
  call void @llvm.dbg.value(metadata i32 undef, metadata !15173, metadata !DIExpression()), !dbg !15179
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()), !dbg !15179
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15185
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15186
  %7 = load i8, i8* %6, align 1, !dbg !15186
  %8 = and i8 %7, 40, !dbg !15187
  %9 = icmp eq i8 %8, 0, !dbg !15187
  call void @llvm.dbg.value(metadata i1 %9, metadata !15174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15188
  br i1 %9, label %10, label %17, !dbg !15189

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15190
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15190
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15190
  %14 = icmp eq %union.anon* %13, null, !dbg !15194
  br i1 %14, label %16, label %15, !dbg !15195

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !15196
  br label %16, !dbg !15198

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.224(%struct.k_thread* noundef nonnull %3) #25, !dbg !15199
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !15200
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !15201
  br label %17, !dbg !15202

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %18, metadata !14296, metadata !DIExpression()) #24, !dbg !15184
  call void @llvm.dbg.value(metadata i32 %18, metadata !14290, metadata !DIExpression()) #24, !dbg !15180
  call void @llvm.dbg.value(metadata i32 %18, metadata !15173, metadata !DIExpression()), !dbg !15179
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()) #24, !dbg !15203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()) #24, !dbg !15205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15207, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !15171, metadata !DIExpression()), !dbg !15179
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()), !dbg !15179
  ret void, !dbg !15208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15211, metadata !DIExpression()), !dbg !15212
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15213
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !15214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15215
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15216
  ret void, !dbg !15217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15220, metadata !DIExpression()), !dbg !15221
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15222
  %3 = load i8, i8* %2, align 1, !dbg !15223
  %4 = and i8 %3, -3, !dbg !15223
  store i8 %4, i8* %2, align 1, !dbg !15223
  ret void, !dbg !15224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15227, metadata !DIExpression()), !dbg !15228
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !15229
  br i1 %2, label %3, label %7, !dbg !15231

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14453, metadata !DIExpression()) #24, !dbg !15232
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15235
  %5 = load i8, i8* %4, align 1, !dbg !15236
  %6 = and i8 %5, 127, !dbg !15236
  store i8 %6, i8* %4, align 1, !dbg !15236
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14461, metadata !DIExpression()) #24, !dbg !15237
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15239
  br label %7, !dbg !15240

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15241
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15242
  %10 = zext i1 %9 to i32, !dbg !15242
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !15243
  ret void, !dbg !15244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15247, metadata !DIExpression()), !dbg !15248
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15249
  %3 = load i8, i8* %2, align 1, !dbg !15250
  %4 = or i8 %3, 2, !dbg !15250
  store i8 %4, i8* %2, align 1, !dbg !15250
  ret void, !dbg !15251
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15254, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 0, metadata !15255, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15260
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15262, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !15264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15264
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !15260
  call void @llvm.dbg.value(metadata i32 %3, metadata !15257, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()), !dbg !15259
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15265
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !15268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15268
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !15270
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15272, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !15255, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()), !dbg !15259
  ret void, !dbg !15273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15274 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15280, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i32 %0, metadata !15278, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15279, metadata !DIExpression()), !dbg !15285
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15286
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !15287
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15288
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15289
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %6, metadata !15281, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i32 0, metadata !15282, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15292
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15294, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !15296
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15296
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15284, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata i32 undef, metadata !15282, metadata !DIExpression()), !dbg !15291
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15297
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15301
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15302
  br i1 %10, label %11, label %12, !dbg !15303

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15304
  br label %12, !dbg !15306

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %13, metadata !14296, metadata !DIExpression()) #24, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %13, metadata !14290, metadata !DIExpression()) #24, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %13, metadata !15284, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()) #24, !dbg !15309
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15311, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !15282, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata i32 undef, metadata !15282, metadata !DIExpression()), !dbg !15291
  ret i32 %6, !dbg !15312
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15313 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15318, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i64 undef, metadata !15320, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15317, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15319, metadata !DIExpression()), !dbg !15321
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15322
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15324
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15326, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !15324
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15329
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !15330
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14895, metadata !DIExpression()) #24, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14900, metadata !DIExpression()) #24, !dbg !15331
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !15333
  ret i32 %9, !dbg !15334
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15335 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15339, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15340, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 0, metadata !15341, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15346
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15348, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !15350
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15350
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15343, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15340, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !15341, metadata !DIExpression()), !dbg !15345
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !15351
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15340, metadata !DIExpression()), !dbg !15344
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15354
  br i1 %5, label %7, label %6, !dbg !15356

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !15357
  br label %7, !dbg !15359

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %8, metadata !14296, metadata !DIExpression()) #24, !dbg !15350
  call void @llvm.dbg.value(metadata i32 %8, metadata !14290, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %8, metadata !15343, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()) #24, !dbg !15360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()) #24, !dbg !15362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15364, !srcloc !14325
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15340, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !15341, metadata !DIExpression()), !dbg !15345
  ret %struct.k_thread* %4, !dbg !15365
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15366 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15368, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15369, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata i32 0, metadata !15370, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15375
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15377, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15372, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15369, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()), !dbg !15374
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !15380
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15369, metadata !DIExpression()), !dbg !15373
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15383
  br i1 %5, label %8, label %6, !dbg !15385

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !15386
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !15388
  br label %8, !dbg !15389

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %9, metadata !14296, metadata !DIExpression()) #24, !dbg !15379
  call void @llvm.dbg.value(metadata i32 %9, metadata !14290, metadata !DIExpression()) #24, !dbg !15375
  call void @llvm.dbg.value(metadata i32 %9, metadata !15372, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()) #24, !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()) #24, !dbg !15392
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15394, !srcloc !14325
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15369, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()), !dbg !15374
  ret %struct.k_thread* %4, !dbg !15395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15398, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15254, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 0, metadata !15255, metadata !DIExpression()) #24, !dbg !15402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15403
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15405, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15405
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !15407
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15407
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !15403
  call void @llvm.dbg.value(metadata i32 %3, metadata !15257, metadata !DIExpression()) #24, !dbg !15402
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()) #24, !dbg !15402
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15408
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15409
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !15411
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15413, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !15255, metadata !DIExpression()) #24, !dbg !15402
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()) #24, !dbg !15402
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15414
  ret void, !dbg !15415
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15418, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata i32 %1, metadata !15419, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata i8 0, metadata !15420, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata i32 0, metadata !15421, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15426
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15428, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !15426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15423, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.value(metadata i8 poison, metadata !15420, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15425
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15431
  call void @llvm.dbg.value(metadata i1 %6, metadata !15420, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15424
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15434

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14453, metadata !DIExpression()) #24, !dbg !15435
  %11 = load i8, i8* %4, align 1, !dbg !15441
  %12 = and i8 %11, 127, !dbg !15441
  store i8 %12, i8* %4, align 1, !dbg !15441
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14461, metadata !DIExpression()) #24, !dbg !15442
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15444
  store i8 %9, i8* %8, align 2, !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14470, metadata !DIExpression()) #24, !dbg !15446
  %13 = load i8, i8* %4, align 1, !dbg !15448
  %14 = or i8 %13, -128, !dbg !15448
  store i8 %14, i8* %4, align 1, !dbg !15448
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #24, !dbg !15449
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14484, metadata !DIExpression()) #24, !dbg !15451
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()) #24, !dbg !15451
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15453
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14491, metadata !DIExpression()) #24, !dbg !15451
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15454
  br i1 %16, label %26, label %17, !dbg !15453

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14491, metadata !DIExpression()) #24, !dbg !15451
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15455
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14491, metadata !DIExpression()) #24, !dbg !15451
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !15456
  %21 = icmp sgt i32 %20, 0, !dbg !15457
  br i1 %21, label %22, label %23, !dbg !15458

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !15459
  br label %27, !dbg !15460

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !15454
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14491, metadata !DIExpression()) #24, !dbg !15451
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15454
  br i1 %25, label %26, label %17, !dbg !15453, !llvm.loop !15461

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !15463
  br label %27, !dbg !15464

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15465
  br label %29, !dbg !15466

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15467
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %30, metadata !14296, metadata !DIExpression()) #24, !dbg !15430
  call void @llvm.dbg.value(metadata i32 %30, metadata !14290, metadata !DIExpression()) #24, !dbg !15426
  call void @llvm.dbg.value(metadata i32 %30, metadata !15423, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()) #24, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15469
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()) #24, !dbg !15471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15473, !srcloc !14325
  call void @llvm.dbg.value(metadata i8 poison, metadata !15420, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15425
  ret i1 %6, !dbg !15474
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15479, metadata !DIExpression()), !dbg !15482
  call void @llvm.dbg.value(metadata i32 %1, metadata !15480, metadata !DIExpression()), !dbg !15482
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15483
  call void @llvm.dbg.value(metadata i1 %3, metadata !15481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15482
  br i1 %3, label %4, label %12, !dbg !15484

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15486
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15487
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15487
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15487
  %9 = load i8, i8* %8, align 1, !dbg !15487
  %10 = icmp eq i8 %9, 0, !dbg !15488
  br i1 %10, label %11, label %12, !dbg !15489

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15490
  br label %12, !dbg !15492

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15493
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15494 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15496, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15500
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15502, !srcloc !14299
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15502
  call void @llvm.dbg.value(metadata i32 %2, metadata !14296, metadata !DIExpression()) #24, !dbg !15504
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15504
  call void @llvm.dbg.value(metadata i32 %2, metadata !14290, metadata !DIExpression()) #24, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %2, metadata !15498, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15496, metadata !DIExpression()), !dbg !15499
  tail call fastcc void @z_sched_lock() #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 %2, metadata !14311, metadata !DIExpression()) #24, !dbg !15508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15508
  call void @llvm.dbg.value(metadata i32 %2, metadata !14319, metadata !DIExpression()) #24, !dbg !15510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15512, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !15496, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15496, metadata !DIExpression()), !dbg !15499
  ret void, !dbg !15513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15514 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15515
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15516
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15516
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15516
  %5 = load i8, i8* %4, align 1, !dbg !15517
  %6 = add i8 %5, -1, !dbg !15517
  store i8 %6, i8* %4, align 1, !dbg !15517
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15518, !srcloc !15520
  ret void, !dbg !15521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15522 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15524, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15528
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15530, !srcloc !14299
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15530
  call void @llvm.dbg.value(metadata i32 %2, metadata !14296, metadata !DIExpression()) #24, !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15532
  call void @llvm.dbg.value(metadata i32 %2, metadata !14290, metadata !DIExpression()) #24, !dbg !15528
  call void @llvm.dbg.value(metadata i32 %2, metadata !15526, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15524, metadata !DIExpression()), !dbg !15527
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15533
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15536
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15536
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15536
  %7 = load i8, i8* %6, align 1, !dbg !15537
  %8 = add i8 %7, 1, !dbg !15537
  store i8 %8, i8* %6, align 1, !dbg !15537
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15538
  call void @llvm.dbg.value(metadata i32 %2, metadata !14311, metadata !DIExpression()) #24, !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !15539
  call void @llvm.dbg.value(metadata i32 %2, metadata !14319, metadata !DIExpression()) #24, !dbg !15541
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15543, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 1, metadata !15524, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15524, metadata !DIExpression()), !dbg !15527
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15544
  ret void, !dbg !15545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15546 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15547
  ret %struct.k_thread* %1, !dbg !15548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15549 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15553, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15554, metadata !DIExpression()), !dbg !15558
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15559
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15555, metadata !DIExpression()), !dbg !15558
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15560
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15556, metadata !DIExpression()), !dbg !15558
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15561
  call void @llvm.dbg.value(metadata i32 %5, metadata !15557, metadata !DIExpression()), !dbg !15558
  %6 = icmp sgt i32 %5, 0, !dbg !15562
  br i1 %6, label %17, label %7, !dbg !15564

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15565
  br i1 %8, label %17, label %9, !dbg !15567

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15568
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15568
  %12 = load i32, i32* %11, align 8, !dbg !15568
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15570
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15570
  %15 = load i32, i32* %14, align 8, !dbg !15570
  %16 = icmp ult i32 %12, %15, !dbg !15571
  br label %17, !dbg !15572

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15573
  ret i1 %18, !dbg !15574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15575 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15592, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15593, metadata !DIExpression()), !dbg !15607
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15608
  %5 = load i32, i32* %4, align 4, !dbg !15609
  %6 = add nsw i32 %5, 1, !dbg !15609
  store i32 %6, i32* %4, align 4, !dbg !15609
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15610
  store i32 %5, i32* %7, align 8, !dbg !15611
  %8 = load i32, i32* %4, align 4, !dbg !15612
  %9 = icmp eq i32 %8, 0, !dbg !15613
  br i1 %9, label %10, label %32, !dbg !15614

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15615
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !15615
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15595, metadata !DIExpression()), !dbg !15615
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15615
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15615
  %14 = load i32, i32* %13, align 4, !dbg !15615
  %15 = shl i32 %14, 2, !dbg !15615
  %16 = alloca i8, i32 %15, align 8, !dbg !15615
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15615
  store i8* %16, i8** %17, align 4, !dbg !15615
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15615
  %19 = alloca i8, i32 %14, align 8, !dbg !15615
  store i8* %19, i8** %18, align 4, !dbg !15615
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15615
  store i32 -1, i32* %20, align 4, !dbg !15615
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15616
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15604, metadata !DIExpression()), !dbg !15617
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15594, metadata !DIExpression()), !dbg !15607
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15618
  br i1 %22, label %23, label %24, !dbg !15615

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !15618
  br label %32, !dbg !15619

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15594, metadata !DIExpression()), !dbg !15607
  %26 = load i32, i32* %4, align 4, !dbg !15620
  %27 = add nsw i32 %26, 1, !dbg !15620
  store i32 %27, i32* %4, align 4, !dbg !15620
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15622
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15622
  store i32 %26, i32* %29, align 8, !dbg !15623
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15616
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15604, metadata !DIExpression()), !dbg !15617
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15594, metadata !DIExpression()), !dbg !15607
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15618
  br i1 %31, label %23, label %24, !dbg !15615, !llvm.loop !15624

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15626
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15627
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !15628
  ret void, !dbg !15629
}

; Function Attrs: optsize
declare !dbg !15630 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15635 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15638 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15640, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15641, metadata !DIExpression()), !dbg !15642
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15643
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15644
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !15645
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15646
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15646
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15648
  br i1 %7, label %8, label %10, !dbg !15649

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15650
  store i32 0, i32* %9, align 4, !dbg !15652
  br label %10, !dbg !15653

10:                                               ; preds = %8, %2
  ret void, !dbg !15654
}

; Function Attrs: optsize
declare !dbg !15655 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15656 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15660, metadata !DIExpression()), !dbg !15663
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15661, metadata !DIExpression()), !dbg !15663
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15664
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !15665
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15662, metadata !DIExpression()), !dbg !15663
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15661, metadata !DIExpression()), !dbg !15663
  ret %struct.k_thread* %4, !dbg !15666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15667 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15671, metadata !DIExpression()), !dbg !15672
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !15673
  ret %struct.rbnode* %2, !dbg !15674
}

; Function Attrs: optsize
declare !dbg !15675 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !15678 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15688, metadata !DIExpression()), !dbg !15692
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15693
  %3 = load i32, i32* %2, align 4, !dbg !15693
  %4 = icmp eq i32 %3, 0, !dbg !15695
  br i1 %4, label %10, label %5, !dbg !15696

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15689, metadata !DIExpression()), !dbg !15692
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15697, !range !10482
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15698
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15690, metadata !DIExpression()), !dbg !15692
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !15699
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15691, metadata !DIExpression()), !dbg !15692
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15689, metadata !DIExpression()), !dbg !15692
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15692
  ret %struct.k_thread* %11, !dbg !15700
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15701 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15705, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 0, metadata !15706, metadata !DIExpression()), !dbg !15708
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15709
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15707, metadata !DIExpression()), !dbg !15708
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15710
  br i1 %3, label %8, label %4, !dbg !15711

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15712
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15714
  call void @llvm.dbg.value(metadata i32 1, metadata !15706, metadata !DIExpression()), !dbg !15708
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15709
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15707, metadata !DIExpression()), !dbg !15708
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15710
  br i1 %7, label %8, label %4, !dbg !15711, !llvm.loop !15715

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15708
  ret i32 %9, !dbg !15717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !15718 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15720, metadata !DIExpression()), !dbg !15721
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15722
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !15723
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15724
  ret %struct.k_thread* %4, !dbg !15725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15726 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15735, metadata !DIExpression()), !dbg !15736
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15737
  tail call fastcc void @sys_dlist_init.232(%struct._dnode* noundef nonnull %2) #25, !dbg !15738
  ret void, !dbg !15739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.232(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15744, metadata !DIExpression()), !dbg !15745
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15746
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15747
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15748
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15749
  ret void, !dbg !15750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15751 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !15752
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !15753
  ret void, !dbg !15754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !15755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15760, metadata !DIExpression()), !dbg !15761
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15762
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15762
  %4 = load i8, i8* %3, align 2, !dbg !15762
  %5 = sext i8 %4 to i32, !dbg !15763
  ret i32 %5, !dbg !15764
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15765 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15769, metadata !DIExpression()), !dbg !15772
  call void @llvm.dbg.value(metadata i32 %1, metadata !15770, metadata !DIExpression()), !dbg !15772
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15771, metadata !DIExpression()), !dbg !15772
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15773
  ret void, !dbg !15774
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15775 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !15776
  br i1 %1, label %8, label %2, !dbg !15777

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15778
  br i1 %3, label %8, label %4, !dbg !15779

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15780
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !15781
  %7 = xor i1 %6, true, !dbg !15779
  br label %8, !dbg !15779

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !15783 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15784, !range !9700
  %2 = icmp eq i8 %1, 0, !dbg !15784
  ret i1 %2, !dbg !15785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15786 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15789
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15791, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !15789
  call void @llvm.dbg.value(metadata i32 undef, metadata !15788, metadata !DIExpression()), !dbg !15794
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15795
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14453, metadata !DIExpression()) #24, !dbg !15798
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15800
  %4 = load i8, i8* %3, align 1, !dbg !15801
  %5 = and i8 %4, 127, !dbg !15801
  store i8 %5, i8* %3, align 1, !dbg !15801
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14461, metadata !DIExpression()) #24, !dbg !15802
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !15804
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15805
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14470, metadata !DIExpression()) #24, !dbg !15806
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15808
  %8 = load i8, i8* %7, align 1, !dbg !15809
  %9 = or i8 %8, -128, !dbg !15809
  store i8 %9, i8* %7, align 1, !dbg !15809
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14477, metadata !DIExpression()) #24, !dbg !15810
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14484, metadata !DIExpression()) #24, !dbg !15812
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14490, metadata !DIExpression()) #24, !dbg !15812
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15814
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14491, metadata !DIExpression()) #24, !dbg !15812
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15815
  br i1 %11, label %22, label %12, !dbg !15814

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14491, metadata !DIExpression()) #24, !dbg !15812
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14491, metadata !DIExpression()) #24, !dbg !15812
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !15817
  %16 = icmp sgt i32 %15, 0, !dbg !15818
  br i1 %16, label %17, label %19, !dbg !15819

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15820
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !15821
  br label %24, !dbg !15822

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !15815
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14491, metadata !DIExpression()) #24, !dbg !15812
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15815
  br i1 %21, label %22, label %12, !dbg !15814, !llvm.loop !15823

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15825
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !15826
  br label %24, !dbg !15827

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15791
  call void @llvm.dbg.value(metadata i32 %25, metadata !14296, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata i32 %25, metadata !14290, metadata !DIExpression()) #24, !dbg !15789
  call void @llvm.dbg.value(metadata i32 %25, metadata !15788, metadata !DIExpression()), !dbg !15794
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !14895, metadata !DIExpression()) #24, !dbg !15829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14900, metadata !DIExpression()) #24, !dbg !15829
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !15831
  ret void, !dbg !15832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15833 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15837, metadata !DIExpression()), !dbg !15840
  %3 = icmp eq i64 %2, -1, !dbg !15841
  br i1 %3, label %4, label %6, !dbg !15843

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15844
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !15846
  br label %11, !dbg !15847

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15838, metadata !DIExpression()), !dbg !15840
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !15848
  %8 = sext i32 %7 to i64, !dbg !15848
  call void @llvm.dbg.value(metadata i64 %8, metadata !15838, metadata !DIExpression()), !dbg !15840
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !15849
  %10 = trunc i64 %9 to i32, !dbg !15849
  call void @llvm.dbg.value(metadata i32 %10, metadata !15839, metadata !DIExpression()), !dbg !15840
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15840
  ret i32 %12, !dbg !15850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15851 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15855, metadata !DIExpression()), !dbg !15856
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15857, !srcloc !15859
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !15860
  ret void, !dbg !15861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15862 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15866, metadata !DIExpression()), !dbg !15870
  %2 = icmp eq i64 %0, 0, !dbg !15871
  br i1 %2, label %3, label %4, !dbg !15873

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !15874
  br label %29, !dbg !15876

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15868, metadata !DIExpression()), !dbg !15870
  %5 = icmp sgt i64 %0, -3, !dbg !15877
  br i1 %5, label %6, label %10, !dbg !15879

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15880
  %8 = trunc i64 %0 to i32, !dbg !15882
  %9 = add i32 %7, %8, !dbg !15882
  call void @llvm.dbg.value(metadata i32 %9, metadata !15867, metadata !DIExpression()), !dbg !15870
  br label %13, !dbg !15883

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15884
  %12 = sub i32 -2, %11, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %12, metadata !15867, metadata !DIExpression()), !dbg !15870
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15886
  call void @llvm.dbg.value(metadata i32 %14, metadata !15867, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !15887
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !15889, !srcloc !14299
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15889
  call void @llvm.dbg.value(metadata i32 %16, metadata !14296, metadata !DIExpression()) #24, !dbg !15891
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !15891
  call void @llvm.dbg.value(metadata i32 %16, metadata !14290, metadata !DIExpression()) #24, !dbg !15887
  call void @llvm.dbg.value(metadata i32 %16, metadata !15869, metadata !DIExpression()), !dbg !15870
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15892
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15893
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !15894
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15895
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15896
  tail call fastcc void @z_add_thread_timeout.225(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !15896
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15897
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !15898
  call void @llvm.dbg.value(metadata i32 %16, metadata !14895, metadata !DIExpression()) #24, !dbg !15899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14900, metadata !DIExpression()) #24, !dbg !15899
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !15901
  %22 = zext i32 %14 to i64, !dbg !15902
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15903
  %24 = zext i32 %23 to i64, !dbg !15903
  %25 = sub nsw i64 %22, %24, !dbg !15904
  call void @llvm.dbg.value(metadata i64 %25, metadata !15866, metadata !DIExpression()), !dbg !15870
  %26 = icmp sgt i64 %25, 0, !dbg !15905
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15905
  %28 = trunc i64 %27 to i32, !dbg !15905
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15870
  ret i32 %30, !dbg !15906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15907 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15909, metadata !DIExpression()), !dbg !15910
  call void @llvm.dbg.value(metadata i64 %0, metadata !14331, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i32 10000, metadata !14334, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i32 1000, metadata !14335, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i8 1, metadata !14336, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i1 false, metadata !14337, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15911
  call void @llvm.dbg.value(metadata i1 false, metadata !14338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15911
  call void @llvm.dbg.value(metadata i8 0, metadata !14339, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i1 false, metadata !14340, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15911
  call void @llvm.dbg.value(metadata i1 true, metadata !14341, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15911
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i64 %0, metadata !14331, metadata !DIExpression()), !dbg !15911
  %2 = udiv i64 %0, 10, !dbg !15913
  ret i64 %2, !dbg !15917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15918 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15919, !srcloc !15921
  tail call void @z_impl_k_yield() #25, !dbg !15922
  ret void, !dbg !15923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15928, metadata !DIExpression()), !dbg !15930
  %2 = sext i32 %0 to i64, !dbg !15931
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !15932
  call void @llvm.dbg.value(metadata i64 %3, metadata !15929, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15930
  %4 = shl i64 %3, 32, !dbg !15933
  %5 = ashr exact i64 %4, 32, !dbg !15933
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !15934
  call void @llvm.dbg.value(metadata i32 %6, metadata !15929, metadata !DIExpression()), !dbg !15930
  %7 = sext i32 %6 to i64, !dbg !15935
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !15936
  %9 = trunc i64 %8 to i32, !dbg !15936
  ret i32 %9, !dbg !15937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15938 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15940, metadata !DIExpression()), !dbg !15941
  call void @llvm.dbg.value(metadata i64 %0, metadata !14331, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14334, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata i32 10000, metadata !14335, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata i8 1, metadata !14336, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata i1 false, metadata !14337, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15942
  call void @llvm.dbg.value(metadata i1 true, metadata !14338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15942
  call void @llvm.dbg.value(metadata i8 0, metadata !14339, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata i1 false, metadata !14340, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15942
  call void @llvm.dbg.value(metadata i1 true, metadata !14341, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15942
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !15942
  %2 = add i64 %0, 99, !dbg !15944
  call void @llvm.dbg.value(metadata i64 %2, metadata !14331, metadata !DIExpression()), !dbg !15942
  %3 = udiv i64 %2, 100, !dbg !15945
  ret i64 %3, !dbg !15946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15947 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15949, metadata !DIExpression()), !dbg !15950
  call void @llvm.dbg.value(metadata i64 %0, metadata !14331, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 10000, metadata !14334, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14335, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i8 1, metadata !14336, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i1 false, metadata !14337, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i1 false, metadata !14338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i8 0, metadata !14339, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i1 true, metadata !14340, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i1 false, metadata !14341, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i64 0, metadata !14342, metadata !DIExpression()), !dbg !15951
  %2 = mul i64 %0, 100, !dbg !15953
  ret i64 %2, !dbg !15955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15958, metadata !DIExpression()), !dbg !15959
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !15960
  br i1 %2, label %14, label %3, !dbg !15962

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15963
  %5 = icmp slt i32 %4, 0, !dbg !15965
  br i1 %5, label %6, label %10, !dbg !15966

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15967
  %8 = load i8, i8* %7, align 1, !dbg !15967
  %9 = icmp eq i8 %8, 16, !dbg !15970
  br i1 %9, label %10, label %14, !dbg !15971

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15972
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15973
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15974, !srcloc !14935
  call void @llvm.dbg.value(metadata i32 %11, metadata !14931, metadata !DIExpression()) #24, !dbg !15978
  %12 = icmp eq i32 %11, 0, !dbg !15979
  br i1 %12, label %13, label %14, !dbg !15980

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15981
  br label %14, !dbg !15983

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15987, metadata !DIExpression()), !dbg !15988
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15989
  %3 = load i8, i8* %2, align 1, !dbg !15989
  %4 = and i8 %3, 2, !dbg !15990
  %5 = icmp ne i8 %4, 0, !dbg !15991
  ret i1 %5, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !15993 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15997, metadata !DIExpression()), !dbg !15999
  ret %struct.k_thread* %1, !dbg !16000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16001 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16002, !srcloc !14935
  call void @llvm.dbg.value(metadata i32 %1, metadata !14931, metadata !DIExpression()) #24, !dbg !16005
  %2 = icmp eq i32 %1, 0, !dbg !16006
  br i1 %2, label %3, label %8, !dbg !16007

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16008
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !16009
  %6 = icmp ne i32 %5, 0, !dbg !16007
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16013, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !16016
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16018, !srcloc !14299
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16018
  call void @llvm.dbg.value(metadata i32 %3, metadata !14296, metadata !DIExpression()) #24, !dbg !16020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !16020
  call void @llvm.dbg.value(metadata i32 %3, metadata !14290, metadata !DIExpression()) #24, !dbg !16016
  call void @llvm.dbg.value(metadata i32 %3, metadata !16014, metadata !DIExpression()), !dbg !16015
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16021
  %5 = load i8, i8* %4, align 4, !dbg !16021
  %6 = and i8 %5, 1, !dbg !16023
  %7 = icmp eq i8 %6, 0, !dbg !16024
  br i1 %7, label %9, label %8, !dbg !16025

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !16026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !16026
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !16029
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16031, !srcloc !14325
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16032, !srcloc !16034
  br label %24, !dbg !16035

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16036
  %11 = load i8, i8* %10, align 1, !dbg !16036
  %12 = and i8 %11, 8, !dbg !16038
  %13 = icmp eq i8 %12, 0, !dbg !16039
  br i1 %13, label %15, label %14, !dbg !16040

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !16041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !16041
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !16044
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16046, !srcloc !14325
  br label %24, !dbg !16047

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !16048
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16049
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16051
  br i1 %17, label %18, label %23, !dbg !16052

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16053, !srcloc !14935
  call void @llvm.dbg.value(metadata i32 %19, metadata !14931, metadata !DIExpression()) #24, !dbg !16056
  %20 = icmp eq i32 %19, 0, !dbg !16057
  br i1 %20, label %21, label %23, !dbg !16058

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14895, metadata !DIExpression()) #24, !dbg !16059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14900, metadata !DIExpression()) #24, !dbg !16059
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16062
  br label %23, !dbg !16063

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14311, metadata !DIExpression()) #24, !dbg !16064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !16064
  call void @llvm.dbg.value(metadata i32 %3, metadata !14319, metadata !DIExpression()) #24, !dbg !16066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16068, !srcloc !14325
  br label %24, !dbg !16069

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16072, metadata !DIExpression()), !dbg !16073
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16074
  %3 = load i8, i8* %2, align 1, !dbg !16074
  %4 = and i8 %3, 8, !dbg !16076
  %5 = icmp eq i8 %4, 0, !dbg !16077
  br i1 %5, label %6, label %20, !dbg !16078

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16079
  %8 = or i8 %7, 8, !dbg !16079
  store i8 %8, i8* %2, align 1, !dbg !16079
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !16081
  br i1 %9, label %10, label %12, !dbg !16083

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14453, metadata !DIExpression()) #24, !dbg !16084
  %11 = and i8 %8, 95, !dbg !16087
  store i8 %11, i8* %2, align 1, !dbg !16087
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14461, metadata !DIExpression()) #24, !dbg !16088
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16090
  br label %12, !dbg !16091

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16092
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16092
  %15 = icmp eq %union.anon* %14, null, !dbg !16094
  br i1 %15, label %17, label %16, !dbg !16095

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16096
  br label %17, !dbg !16098

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16099
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16100
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !16101
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !16102
  br label %20, !dbg !16103

20:                                               ; preds = %17, %1
  ret void, !dbg !16104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16105 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16109, metadata !DIExpression()), !dbg !16111
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16110, metadata !DIExpression()), !dbg !16111
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16113
  br i1 %3, label %10, label %4, !dbg !16114

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16115
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16118, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.value(metadata i32 0, metadata !16123, metadata !DIExpression()), !dbg !16124
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16126
  store i32 0, i32* %7, align 4, !dbg !16127
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16128
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16110, metadata !DIExpression()), !dbg !16111
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16113
  br i1 %9, label %10, label %4, !dbg !16114, !llvm.loop !16129

10:                                               ; preds = %4, %1
  ret void, !dbg !16131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16132 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16137, metadata !DIExpression()), !dbg !16140
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16136, metadata !DIExpression()), !dbg !16140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !16141
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16143, !srcloc !14299
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16143
  call void @llvm.dbg.value(metadata i32 %4, metadata !14296, metadata !DIExpression()) #24, !dbg !16145
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !16145
  call void @llvm.dbg.value(metadata i32 %4, metadata !14290, metadata !DIExpression()) #24, !dbg !16141
  call void @llvm.dbg.value(metadata i32 %4, metadata !16138, metadata !DIExpression()), !dbg !16140
  call void @llvm.dbg.value(metadata i32 0, metadata !16139, metadata !DIExpression()), !dbg !16140
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16146
  %6 = load i8, i8* %5, align 1, !dbg !16146
  %7 = and i8 %6, 8, !dbg !16148
  %8 = icmp eq i8 %7, 0, !dbg !16149
  br i1 %8, label %9, label %24, !dbg !16150

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16137, metadata !DIExpression()), !dbg !16140
  %11 = icmp eq i64 %10, 0, !dbg !16151
  br i1 %11, label %24, label %12, !dbg !16153

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16154
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16156
  br i1 %14, label %24, label %15, !dbg !16157

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16158
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16158
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16159
  %19 = icmp eq %union.anon* %17, %18, !dbg !16160
  br i1 %19, label %24, label %20, !dbg !16161

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16162
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !16164
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16165
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !16166
  call void @llvm.dbg.value(metadata i32 %4, metadata !14895, metadata !DIExpression()) #24, !dbg !16167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14900, metadata !DIExpression()) #24, !dbg !16167
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16169
  call void @llvm.dbg.value(metadata i32 %23, metadata !16139, metadata !DIExpression()), !dbg !16140
  br label %26, !dbg !16170

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16171
  call void @llvm.dbg.value(metadata i32 %25, metadata !16139, metadata !DIExpression()), !dbg !16140
  call void @llvm.dbg.value(metadata i32 %4, metadata !14311, metadata !DIExpression()) #24, !dbg !16172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !16172
  call void @llvm.dbg.value(metadata i32 %4, metadata !14319, metadata !DIExpression()) #24, !dbg !16174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16176, !srcloc !14325
  br label %26, !dbg !16177

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16140
  ret i32 %27, !dbg !16178
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16179 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16183, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i32 %1, metadata !16184, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i8* %2, metadata !16185, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i8 0, metadata !16187, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i32 0, metadata !16188, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14284, metadata !DIExpression()) #24, !dbg !16193
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16195, !srcloc !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()) #24, !dbg !16197
  call void @llvm.dbg.value(metadata i32 undef, metadata !14297, metadata !DIExpression()) #24, !dbg !16197
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #24, !dbg !16193
  call void @llvm.dbg.value(metadata i32 undef, metadata !16190, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i8 poison, metadata !16187, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i32 undef, metadata !16188, metadata !DIExpression()), !dbg !16192
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !16198
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16186, metadata !DIExpression()), !dbg !16191
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16201
  br i1 %7, label %12, label %8, !dbg !16203

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16204, metadata !DIExpression()), !dbg !16212
  call void @llvm.dbg.value(metadata i32 %1, metadata !16210, metadata !DIExpression()), !dbg !16212
  call void @llvm.dbg.value(metadata i8* %2, metadata !16211, metadata !DIExpression()), !dbg !16212
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16118, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.value(metadata i32 %1, metadata !16123, metadata !DIExpression()), !dbg !16215
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16217
  store i32 %1, i32* %9, align 4, !dbg !16218
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16219
  store i8* %2, i8** %10, align 4, !dbg !16220
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !16221
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !16222
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !16223
  call void @llvm.dbg.value(metadata i8 1, metadata !16187, metadata !DIExpression()), !dbg !16191
  br label %12, !dbg !16224

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16195
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16195
  call void @llvm.dbg.value(metadata i32 %14, metadata !14296, metadata !DIExpression()) #24, !dbg !16197
  call void @llvm.dbg.value(metadata i32 %14, metadata !14290, metadata !DIExpression()) #24, !dbg !16193
  call void @llvm.dbg.value(metadata i32 %14, metadata !16190, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i8 poison, metadata !16187, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()) #24, !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14316, metadata !DIExpression()) #24, !dbg !16225
  call void @llvm.dbg.value(metadata i32 undef, metadata !14319, metadata !DIExpression()) #24, !dbg !16227
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16229, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 undef, metadata !16188, metadata !DIExpression()), !dbg !16192
  ret i1 %13, !dbg !16230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16231 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16237, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i64 undef, metadata !16239, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16236, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16238, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i8** %4, metadata !16240, metadata !DIExpression()), !dbg !16242
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %6, metadata !16241, metadata !DIExpression()), !dbg !16242
  %7 = icmp eq i8** %4, null, !dbg !16244
  br i1 %7, label %12, label %8, !dbg !16246

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16247
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16249
  %11 = load i8*, i8** %10, align 4, !dbg !16249
  store i8* %11, i8** %4, align 4, !dbg !16250
  br label %12, !dbg !16251

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16253 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16255
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16256
  ret void, !dbg !16257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16258 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16268, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16266, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16267, metadata !DIExpression()), !dbg !16285
  %5 = icmp eq i64 %4, -1, !dbg !16286
  br i1 %5, label %55, label %6, !dbg !16288

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16289
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16290
  call void @llvm.dbg.value(metadata i32 0, metadata !16269, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16299
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16301, !srcloc !16307
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16301
  call void @llvm.dbg.value(metadata i32 %9, metadata !16304, metadata !DIExpression()) #24, !dbg !16308
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16308
  call void @llvm.dbg.value(metadata i32 %9, metadata !16298, metadata !DIExpression()) #24, !dbg !16299
  call void @llvm.dbg.value(metadata i32 %9, metadata !16275, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16269, metadata !DIExpression()), !dbg !16291
  %10 = icmp slt i64 %4, -1, !dbg !16309
  br i1 %10, label %11, label %17, !dbg !16310

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16311
  %13 = add i64 %4, %12, !dbg !16312
  %14 = sub i64 -2, %13, !dbg !16312
  call void @llvm.dbg.value(metadata i64 %14, metadata !16279, metadata !DIExpression()), !dbg !16313
  %15 = icmp sgt i64 %14, 1, !dbg !16314
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16314
  br label %22, !dbg !16315

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16316
  %19 = tail call fastcc i32 @elapsed.243() #25, !dbg !16318
  %20 = sext i32 %19 to i64, !dbg !16318
  %21 = add nsw i64 %18, %20, !dbg !16319
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16320
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16321
  store i64 %23, i64* %24, align 8, !dbg !16322
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !16323
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16276, metadata !DIExpression()), !dbg !16325
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16326
  br i1 %26, label %42, label %27, !dbg !16326

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16327
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16276, metadata !DIExpression()), !dbg !16325
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16331
  %31 = load i64, i64* %30, align 8, !dbg !16331
  %32 = icmp slt i64 %28, %31, !dbg !16332
  br i1 %32, label %33, label %38, !dbg !16333

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16331
  %35 = sub nsw i64 %31, %28, !dbg !16334
  store i64 %35, i64* %34, align 8, !dbg !16334
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16336
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16337
  tail call fastcc void @sys_dlist_insert.244(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !16338
  br label %44, !dbg !16339

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16340
  store i64 %39, i64* %24, align 8, !dbg !16340
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !16341
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16276, metadata !DIExpression()), !dbg !16325
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16326
  br i1 %41, label %42, label %27, !dbg !16326, !llvm.loop !16342

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16344
  tail call fastcc void @sys_dlist_append.245(%struct._dnode* noundef %43) #25, !dbg !16347
  br label %44, !dbg !16348

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !16349
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16350
  br i1 %46, label %47, label %54, !dbg !16351

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !16352
  call void @llvm.dbg.value(metadata i32 %48, metadata !16282, metadata !DIExpression()), !dbg !16353
  %49 = icmp ne i32 %48, 0, !dbg !16354
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16356
  br i1 %52, label %54, label %53, !dbg !16356

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !16357
  br label %54, !dbg !16359

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16360, metadata !DIExpression()) #24, !dbg !16366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16366
  call void @llvm.dbg.value(metadata i32 %9, metadata !16368, metadata !DIExpression()) #24, !dbg !16371
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16373, !srcloc !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16269, metadata !DIExpression()), !dbg !16291
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.243() unnamed_addr #1 !dbg !16376 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16379
  %2 = icmp eq i32 %1, 0, !dbg !16380
  br i1 %2, label %3, label %5, !dbg !16379

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16381
  br label %5, !dbg !16379

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16379
  ret i32 %6, !dbg !16382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16383 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.248() #25, !dbg !16389
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16387, metadata !DIExpression()), !dbg !16390
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16391
  ret %struct._timeout* %2, !dbg !16392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.244(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16393 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16397, metadata !DIExpression()), !dbg !16401
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16398, metadata !DIExpression()), !dbg !16401
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16402
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16402
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16399, metadata !DIExpression()), !dbg !16401
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16403
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16404
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16405
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16406
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16407
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16408
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16409
  ret void, !dbg !16410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16411 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16415, metadata !DIExpression()), !dbg !16417
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16418
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.246(%struct._dnode* noundef %2) #25, !dbg !16419
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16416, metadata !DIExpression()), !dbg !16417
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16420
  ret %struct._timeout* %4, !dbg !16421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.245(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16422 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16427, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16428, metadata !DIExpression()), !dbg !16430
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16431
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16429, metadata !DIExpression()), !dbg !16430
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16432
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16433
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16434
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16435
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16436
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16437
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16438
  ret void, !dbg !16439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16440 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16445
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16442, metadata !DIExpression()), !dbg !16446
  %2 = tail call fastcc i32 @elapsed.243() #25, !dbg !16447
  call void @llvm.dbg.value(metadata i32 %2, metadata !16443, metadata !DIExpression()), !dbg !16446
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16448
  br i1 %3, label %14, label %4, !dbg !16450

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16451
  %6 = load i64, i64* %5, align 8, !dbg !16451
  %7 = sext i32 %2 to i64, !dbg !16452
  %8 = sub nsw i64 %6, %7, !dbg !16453
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16454
  br i1 %9, label %14, label %10, !dbg !16455

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16456
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16456
  %13 = trunc i64 %12 to i32, !dbg !16456
  call void @llvm.dbg.value(metadata i32 %13, metadata !16444, metadata !DIExpression()), !dbg !16446
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16458
  call void @llvm.dbg.value(metadata i32 %15, metadata !16444, metadata !DIExpression()), !dbg !16446
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16459
  %17 = icmp ne i32 %16, 0, !dbg !16461
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16462
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %20, metadata !16444, metadata !DIExpression()), !dbg !16446
  ret i32 %20, !dbg !16463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.246(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16464 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16468, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16469, metadata !DIExpression()), !dbg !16470
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16471
  br i1 %2, label %5, label %3, !dbg !16472

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.247(%struct._dnode* noundef nonnull %0) #25, !dbg !16473
  br label %5, !dbg !16472

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16472
  ret %struct._dnode* %6, !dbg !16474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.247(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16475 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16477, metadata !DIExpression()), !dbg !16479
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16478, metadata !DIExpression()), !dbg !16479
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16480
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16481
  br i1 %3, label %7, label %4, !dbg !16482

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16483
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16483
  br label %7, !dbg !16482

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16482
  ret %struct._dnode* %8, !dbg !16484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.248() unnamed_addr #10 !dbg !16485 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16489, metadata !DIExpression()), !dbg !16490
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.249() #25, !dbg !16491
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16491
  ret %struct._dnode* %3, !dbg !16492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.249() unnamed_addr #10 !dbg !16493 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16497, metadata !DIExpression()), !dbg !16498
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16499
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16500
  ret i1 %2, !dbg !16501
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16502 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16506, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata i32 -22, metadata !16507, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata i32 0, metadata !16508, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16513
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16515, !srcloc !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16304, metadata !DIExpression()) #24, !dbg !16517
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16517
  call void @llvm.dbg.value(metadata i32 undef, metadata !16298, metadata !DIExpression()) #24, !dbg !16513
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.value(metadata i32 -22, metadata !16507, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()), !dbg !16512
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16507, metadata !DIExpression()), !dbg !16511
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.252(%struct._dnode* noundef %3) #25, !dbg !16518
  br i1 %4, label %5, label %6, !dbg !16522

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !16523
  call void @llvm.dbg.value(metadata i32 0, metadata !16507, metadata !DIExpression()), !dbg !16511
  br label %6, !dbg !16525

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16511
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16515
  call void @llvm.dbg.value(metadata i32 %8, metadata !16304, metadata !DIExpression()) #24, !dbg !16517
  call void @llvm.dbg.value(metadata i32 %8, metadata !16298, metadata !DIExpression()) #24, !dbg !16513
  call void @llvm.dbg.value(metadata i32 %8, metadata !16510, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.value(metadata i32 %7, metadata !16507, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #24, !dbg !16526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16526
  call void @llvm.dbg.value(metadata i32 undef, metadata !16368, metadata !DIExpression()) #24, !dbg !16528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16530, !srcloc !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()), !dbg !16512
  ret i32 %7, !dbg !16531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.252(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16532 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16538, metadata !DIExpression()), !dbg !16539
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16540
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16540
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16541
  ret i1 %4, !dbg !16542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16543 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16545, metadata !DIExpression()), !dbg !16546
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !16547
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16549
  br i1 %3, label %10, label %4, !dbg !16550

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16551
  %6 = load i64, i64* %5, align 8, !dbg !16551
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16553
  %8 = load i64, i64* %7, align 8, !dbg !16554
  %9 = add nsw i64 %8, %6, !dbg !16554
  store i64 %9, i64* %7, align 8, !dbg !16554
  br label %10, !dbg !16555

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16556
  tail call fastcc void @sys_dlist_remove.253(%struct._dnode* noundef %11) #25, !dbg !16557
  ret void, !dbg !16558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.253(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16559 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16563, metadata !DIExpression()), !dbg !16566
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16567
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16567
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16564, metadata !DIExpression()), !dbg !16566
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16568
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16568
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16565, metadata !DIExpression()), !dbg !16566
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16569
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16570
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16571
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16572
  tail call fastcc void @sys_dnode_init.254(%struct._dnode* noundef %0) #25, !dbg !16573
  ret void, !dbg !16574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.254(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16575 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16577, metadata !DIExpression()), !dbg !16578
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16579
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16580
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16581
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16582
  ret void, !dbg !16583
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16584 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16590, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata i64 0, metadata !16591, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata i32 0, metadata !16592, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16597
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16599, !srcloc !16307
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16599
  call void @llvm.dbg.value(metadata i32 %3, metadata !16304, metadata !DIExpression()) #24, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16601
  call void @llvm.dbg.value(metadata i32 %3, metadata !16298, metadata !DIExpression()) #24, !dbg !16597
  call void @llvm.dbg.value(metadata i32 %3, metadata !16594, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata i64 0, metadata !16591, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata i32 undef, metadata !16592, metadata !DIExpression()), !dbg !16596
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16602
  call void @llvm.dbg.value(metadata i64 %4, metadata !16591, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata i32 %3, metadata !16360, metadata !DIExpression()) #24, !dbg !16605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16605
  call void @llvm.dbg.value(metadata i32 %3, metadata !16368, metadata !DIExpression()) #24, !dbg !16607
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16609, !srcloc !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16592, metadata !DIExpression()), !dbg !16596
  ret i64 %4, !dbg !16610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16611 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16613, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i64 0, metadata !16614, metadata !DIExpression()), !dbg !16617
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.255(%struct._timeout* noundef %0) #25, !dbg !16618
  br i1 %2, label %21, label %3, !dbg !16620

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !16621
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16615, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i64 0, metadata !16614, metadata !DIExpression()), !dbg !16617
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16623
  br i1 %5, label %16, label %6, !dbg !16625

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16615, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i64 %8, metadata !16614, metadata !DIExpression()), !dbg !16617
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16626
  %10 = load i64, i64* %9, align 8, !dbg !16626
  %11 = add nsw i64 %10, %8, !dbg !16628
  call void @llvm.dbg.value(metadata i64 %11, metadata !16614, metadata !DIExpression()), !dbg !16617
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16629
  br i1 %12, label %16, label %13, !dbg !16631

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !16632
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16615, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i64 %11, metadata !16614, metadata !DIExpression()), !dbg !16617
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16623
  br i1 %15, label %16, label %6, !dbg !16625, !llvm.loop !16633

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16617
  call void @llvm.dbg.value(metadata i64 %17, metadata !16614, metadata !DIExpression()), !dbg !16617
  %18 = tail call fastcc i32 @elapsed.243() #25, !dbg !16635
  %19 = sext i32 %18 to i64, !dbg !16635
  %20 = sub nsw i64 %17, %19, !dbg !16636
  br label %21, !dbg !16637

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16617
  ret i64 %22, !dbg !16638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.255(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16639 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16643, metadata !DIExpression()), !dbg !16644
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16645
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.252(%struct._dnode* noundef %2) #25, !dbg !16646
  %4 = xor i1 %3, true, !dbg !16647
  ret i1 %4, !dbg !16648
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16649 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16651, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i64 0, metadata !16652, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 0, metadata !16653, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16658
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16660, !srcloc !16307
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16660
  call void @llvm.dbg.value(metadata i32 %3, metadata !16304, metadata !DIExpression()) #24, !dbg !16662
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16662
  call void @llvm.dbg.value(metadata i32 %3, metadata !16298, metadata !DIExpression()) #24, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %3, metadata !16655, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata i64 0, metadata !16652, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 undef, metadata !16653, metadata !DIExpression()), !dbg !16657
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16663
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16666
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16656
  call void @llvm.dbg.value(metadata i32 %3, metadata !16360, metadata !DIExpression()) #24, !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16667
  call void @llvm.dbg.value(metadata i32 %3, metadata !16368, metadata !DIExpression()) #24, !dbg !16669
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16671, !srcloc !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16653, metadata !DIExpression()), !dbg !16657
  %6 = add i64 %5, %4, !dbg !16672
  ret i64 %6, !dbg !16673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16674 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16676, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 0, metadata !16677, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16682
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16684, !srcloc !16307
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16684
  call void @llvm.dbg.value(metadata i32 %2, metadata !16304, metadata !DIExpression()) #24, !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16686
  call void @llvm.dbg.value(metadata i32 %2, metadata !16298, metadata !DIExpression()) #24, !dbg !16682
  call void @llvm.dbg.value(metadata i32 %2, metadata !16679, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata i32 -1, metadata !16676, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()), !dbg !16681
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !16687
  call void @llvm.dbg.value(metadata i32 %3, metadata !16676, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 %2, metadata !16360, metadata !DIExpression()) #24, !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %2, metadata !16368, metadata !DIExpression()) #24, !dbg !16692
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16694, !srcloc !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()), !dbg !16681
  ret i32 %3, !dbg !16695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16698, metadata !DIExpression()), !dbg !16708
  call void @llvm.dbg.value(metadata i1 %1, metadata !16699, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16708
  call void @llvm.dbg.value(metadata i32 0, metadata !16700, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16710
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16712, !srcloc !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16304, metadata !DIExpression()) #24, !dbg !16714
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16714
  call void @llvm.dbg.value(metadata i32 undef, metadata !16298, metadata !DIExpression()) #24, !dbg !16710
  call void @llvm.dbg.value(metadata i32 undef, metadata !16702, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !16700, metadata !DIExpression()), !dbg !16709
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !16715
  call void @llvm.dbg.value(metadata i32 %4, metadata !16703, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i1 undef, metadata !16706, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16716
  %5 = icmp slt i32 %4, 2, !dbg !16717
  call void @llvm.dbg.value(metadata i1 %5, metadata !16707, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16716
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16718
  call void @llvm.dbg.value(metadata i1 %6, metadata !16706, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16716
  br i1 %7, label %11, label %8, !dbg !16718

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16720
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16720
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !16722
  br label %11, !dbg !16723

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16712
  call void @llvm.dbg.value(metadata i32 %12, metadata !16304, metadata !DIExpression()) #24, !dbg !16714
  call void @llvm.dbg.value(metadata i32 %12, metadata !16298, metadata !DIExpression()) #24, !dbg !16710
  call void @llvm.dbg.value(metadata i32 %12, metadata !16702, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #24, !dbg !16724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16724
  call void @llvm.dbg.value(metadata i32 undef, metadata !16368, metadata !DIExpression()) #24, !dbg !16726
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !16728, !srcloc !16374
  call void @llvm.dbg.value(metadata i32 1, metadata !16700, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !16700, metadata !DIExpression()), !dbg !16709
  ret void, !dbg !16729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16734, metadata !DIExpression()), !dbg !16739
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16741
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16743, !srcloc !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16304, metadata !DIExpression()) #24, !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16298, metadata !DIExpression()) #24, !dbg !16741
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()), !dbg !16739
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()), !dbg !16739
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !16746
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16747
  br i1 %4, label %28, label %5, !dbg !16748

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16749
  %10 = load i64, i64* %9, align 8, !dbg !16749
  %11 = sext i32 %8 to i64, !dbg !16750
  %12 = icmp sgt i64 %10, %11, !dbg !16751
  br i1 %12, label %26, label %13, !dbg !16752

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16739
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16736, metadata !DIExpression()), !dbg !16753
  %15 = trunc i64 %10 to i32, !dbg !16754
  call void @llvm.dbg.value(metadata i32 %15, metadata !16738, metadata !DIExpression()), !dbg !16753
  %16 = sext i32 %15 to i64, !dbg !16755
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16756
  %18 = add i64 %17, %16, !dbg !16756
  store i64 %18, i64* @curr_tick, align 8, !dbg !16756
  store i64 0, i64* %9, align 8, !dbg !16757
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !16758
  call void @llvm.dbg.value(metadata i32 %14, metadata !16360, metadata !DIExpression()) #24, !dbg !16759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16759
  call void @llvm.dbg.value(metadata i32 %14, metadata !16368, metadata !DIExpression()) #24, !dbg !16761
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16763, !srcloc !16374
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16764
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16764
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !16765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16766
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16768, !srcloc !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16304, metadata !DIExpression()) #24, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !16298, metadata !DIExpression()) #24, !dbg !16766
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()), !dbg !16739
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16771
  %23 = sub nsw i32 %22, %15, !dbg !16771
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()), !dbg !16739
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !16746
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16747
  br i1 %25, label %28, label %5, !dbg !16748, !llvm.loop !16772

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16774
  store i64 %27, i64* %9, align 8, !dbg !16774
  br label %32, !dbg !16777

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16739
  %31 = sext i32 %30 to i64, !dbg !16778
  br label %32, !dbg !16778

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16778
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16739
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16779
  %37 = add i64 %36, %33, !dbg !16779
  store i64 %37, i64* @curr_tick, align 8, !dbg !16779
  store i32 0, i32* @announce_remaining, align 4, !dbg !16780
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !16781
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !16782
  call void @llvm.dbg.value(metadata i32 %35, metadata !16360, metadata !DIExpression()) #24, !dbg !16783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16783
  call void @llvm.dbg.value(metadata i32 %35, metadata !16368, metadata !DIExpression()) #24, !dbg !16785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !16787, !srcloc !16374
  ret void, !dbg !16788
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16789 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16793, metadata !DIExpression()), !dbg !16797
  call void @llvm.dbg.value(metadata i32 0, metadata !16794, metadata !DIExpression()), !dbg !16798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16292, metadata !DIExpression()) #24, !dbg !16799
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #24, !dbg !16801, !srcloc !16307
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16801
  call void @llvm.dbg.value(metadata i32 %2, metadata !16304, metadata !DIExpression()) #24, !dbg !16803
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()) #24, !dbg !16803
  call void @llvm.dbg.value(metadata i32 %2, metadata !16298, metadata !DIExpression()) #24, !dbg !16799
  call void @llvm.dbg.value(metadata i32 %2, metadata !16796, metadata !DIExpression()), !dbg !16798
  call void @llvm.dbg.value(metadata i64 0, metadata !16793, metadata !DIExpression()), !dbg !16797
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()), !dbg !16798
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16804
  %4 = tail call fastcc i32 @elapsed.243() #25, !dbg !16807
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16793, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16797
  call void @llvm.dbg.value(metadata i32 %2, metadata !16360, metadata !DIExpression()) #24, !dbg !16808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16365, metadata !DIExpression()) #24, !dbg !16808
  call void @llvm.dbg.value(metadata i32 %2, metadata !16368, metadata !DIExpression()) #24, !dbg !16810
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16812, !srcloc !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()), !dbg !16798
  %5 = sext i32 %4 to i64, !dbg !16807
  %6 = add i64 %3, %5, !dbg !16813
  ret i64 %6, !dbg !16814
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16815 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16816
  %2 = trunc i64 %1 to i32, !dbg !16817
  ret i32 %2, !dbg !16818
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16819 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16820
  ret i64 %1, !dbg !16821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16824, metadata !DIExpression()), !dbg !16831
  %2 = icmp eq i32 %0, 0, !dbg !16832
  br i1 %2, label %10, label %3, !dbg !16834

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !16835
  call void @llvm.dbg.value(metadata i32 %4, metadata !16825, metadata !DIExpression()), !dbg !16831
  %5 = mul i32 %0, 120, !dbg !16836
  call void @llvm.dbg.value(metadata i32 %5, metadata !16826, metadata !DIExpression()), !dbg !16831
  br label %6, !dbg !16837

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !16838
  call void @llvm.dbg.value(metadata i32 %7, metadata !16827, metadata !DIExpression()), !dbg !16839
  %8 = sub i32 %7, %4, !dbg !16840
  %9 = icmp ult i32 %8, %5, !dbg !16842
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16844 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !16845
  ret i32 %1, !dbg !16846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16847 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16849
  ret i32 %1, !dbg !16850
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16851 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16855, metadata !DIExpression()), !dbg !16857
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16858

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !16859
  br label %14, !dbg !16863

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16856, metadata !DIExpression()), !dbg !16857
  %6 = icmp slt i64 %2, -1, !dbg !16864
  br i1 %6, label %7, label %9, !dbg !16867

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16868
  br label %14, !dbg !16869

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !16871
  %11 = icmp ugt i64 %2, 1, !dbg !16872
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16872
  %13 = add nsw i64 %10, %12, !dbg !16873
  br label %14, !dbg !16874

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16875
  ret i64 %15, !dbg !16876
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16877 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.264, i32 0, i32 0)) #26, !dbg !16879
  ret void, !dbg !16880
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1767, !2, !3642, !27, !379, !403, !3644, !3646, !3680, !3682, !414, !3684, !3687, !976, !996, !3689, !3697, !3705, !3721, !3732, !3779, !3781, !3809, !3837, !3880, !3952, !3997, !1008, !1162, !4025, !1197, !1207, !1232, !1778, !1875, !2057, !2677, !4030, !2910, !4032, !3093, !4035, !3099, !3469, !4053, !3490, !4055, !3605, !4058}
!llvm.ident = !{!4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060, !4060}
!llvm.module.flags = !{!4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 149, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8768, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 137)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4384, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_atmel_samd_init", scope: !414, file: !949, line: 149, type: !950, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !416, globals: !948, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_samd5x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!416 = !{!124, !125, !417, !549, !634}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "Cmcc", file: !419, line: 352, baseType: !420)
!419 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/cmcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 339, size: 448, elements: !421)
!421 = !{!422, !438, !450, !460, !471, !481, !487, !497, !508, !518, !528, !538}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !420, file: !419, line: 340, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !425)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_TYPE_Type", file: !419, line: 57, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 44, size: 32, elements: !427)
!427 = !{!428, !437}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !426, file: !419, line: 55, baseType: !429, size: 32)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !426, file: !419, line: 45, size: 32, elements: !430)
!430 = !{!431, !432, !433, !434, !435, !436}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK", scope: !429, file: !419, line: 47, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "RRP", scope: !429, file: !419, line: 49, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "WAYNUM", scope: !429, file: !419, line: 50, baseType: !208, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "LCKDOWN", scope: !429, file: !419, line: 51, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CSIZE", scope: !429, file: !419, line: 52, baseType: !208, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "CLSIZE", scope: !429, file: !419, line: 53, baseType: !208, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !426, file: !419, line: 56, baseType: !208, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "CFG", scope: !420, file: !419, line: 341, baseType: !439, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !440)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_CFG_Type", file: !419, line: 124, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 114, size: 32, elements: !442)
!442 = !{!443, !449}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !441, file: !419, line: 122, baseType: !444, size: 32)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !441, file: !419, line: 115, size: 32, elements: !445)
!445 = !{!446, !447, !448}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ICDIS", scope: !444, file: !419, line: 117, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "DCDIS", scope: !444, file: !419, line: 118, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "CSIZESW", scope: !444, file: !419, line: 120, baseType: !208, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !441, file: !419, line: 123, baseType: !208, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !420, file: !419, line: 342, baseType: !451, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !452)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_CTRL_Type", file: !419, line: 161, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 155, size: 32, elements: !454)
!454 = !{!455, !459}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !453, file: !419, line: 159, baseType: !456, size: 32)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !453, file: !419, line: 156, size: 32, elements: !457)
!457 = !{!458}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "CEN", scope: !456, file: !419, line: 157, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !453, file: !419, line: 160, baseType: !208, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !420, file: !419, line: 343, baseType: !461, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !463)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_SR_Type", file: !419, line: 179, baseType: !464)
!464 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 173, size: 32, elements: !465)
!465 = !{!466, !470}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !464, file: !419, line: 177, baseType: !467, size: 32)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !464, file: !419, line: 174, size: 32, elements: !468)
!468 = !{!469}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "CSTS", scope: !467, file: !419, line: 175, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !464, file: !419, line: 178, baseType: !208, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "LCKWAY", scope: !420, file: !419, line: 344, baseType: !472, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !473)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_LCKWAY_Type", file: !419, line: 197, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 191, size: 32, elements: !475)
!475 = !{!476, !480}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !474, file: !419, line: 195, baseType: !477, size: 32)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !474, file: !419, line: 192, size: 32, elements: !478)
!478 = !{!479}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "LCKWAY", scope: !477, file: !419, line: 193, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !474, file: !419, line: 196, baseType: !208, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !420, file: !419, line: 345, baseType: !482, size: 96, offset: 160)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 96, elements: !364)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "RoReg8", file: !484, line: 53, baseType: !485)
!484 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/samd51g19a.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !486)
!486 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "MAINT0", scope: !420, file: !419, line: 346, baseType: !488, size: 32, offset: 256)
!488 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !489)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MAINT0_Type", file: !419, line: 216, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 210, size: 32, elements: !491)
!491 = !{!492, !496}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !490, file: !419, line: 214, baseType: !493, size: 32)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !490, file: !419, line: 211, size: 32, elements: !494)
!494 = !{!495}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "INVALL", scope: !493, file: !419, line: 212, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !490, file: !419, line: 215, baseType: !208, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "MAINT1", scope: !420, file: !419, line: 347, baseType: !498, size: 32, offset: 288)
!498 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !499)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MAINT1_Type", file: !419, line: 236, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 228, size: 32, elements: !501)
!501 = !{!502, !507}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !500, file: !419, line: 234, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !500, file: !419, line: 229, size: 32, elements: !504)
!504 = !{!505, !506}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "INDEX", scope: !503, file: !419, line: 231, baseType: !208, size: 8, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "WAY", scope: !503, file: !419, line: 233, baseType: !208, size: 4, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !500, file: !419, line: 235, baseType: !208, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "MCFG", scope: !420, file: !419, line: 348, baseType: !509, size: 32, offset: 320)
!509 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !510)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MCFG_Type", file: !419, line: 266, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 260, size: 32, elements: !512)
!512 = !{!513, !517}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !511, file: !419, line: 264, baseType: !514, size: 32)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !511, file: !419, line: 261, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !514, file: !419, line: 262, baseType: !208, size: 2, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !511, file: !419, line: 265, baseType: !208, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "MEN", scope: !420, file: !419, line: 349, baseType: !519, size: 32, offset: 352)
!519 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !520)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MEN_Type", file: !419, line: 291, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 285, size: 32, elements: !522)
!522 = !{!523, !527}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !521, file: !419, line: 289, baseType: !524, size: 32)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !419, line: 286, size: 32, elements: !525)
!525 = !{!526}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "MENABLE", scope: !524, file: !419, line: 287, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !521, file: !419, line: 290, baseType: !208, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "MCTRL", scope: !420, file: !419, line: 350, baseType: !529, size: 32, offset: 384)
!529 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !530)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MCTRL_Type", file: !419, line: 309, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 303, size: 32, elements: !532)
!532 = !{!533, !537}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !531, file: !419, line: 307, baseType: !534, size: 32)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !419, line: 304, size: 32, elements: !535)
!535 = !{!536}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !534, file: !419, line: 305, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !531, file: !419, line: 308, baseType: !208, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "MSR", scope: !420, file: !419, line: 351, baseType: !539, size: 32, offset: 416)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !540)
!540 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !541)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MSR_Type", file: !419, line: 326, baseType: !542)
!542 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !419, line: 321, size: 32, elements: !543)
!543 = !{!544, !548}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !542, file: !419, line: 324, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !542, file: !419, line: 322, size: 32, elements: !546)
!546 = !{!547}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "EVENT_CNT", scope: !545, file: !419, line: 323, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !542, file: !419, line: 325, baseType: !208, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !551, line: 267, baseType: !552)
!551 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/gclk.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 259, size: 2560, elements: !553)
!553 = !{!554, !564, !568, !595, !599, !617, !621}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !552, file: !551, line: 260, baseType: !555, size: 8)
!555 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !556)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRLA_Type", file: !551, line: 50, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 44, size: 8, elements: !558)
!558 = !{!559, !563}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !557, file: !551, line: 48, baseType: !560, size: 8)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !557, file: !551, line: 45, size: 8, elements: !561)
!561 = !{!562}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !560, file: !551, line: 46, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !557, file: !551, line: 49, baseType: !150, size: 8)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !552, file: !551, line: 261, baseType: !565, size: 24, offset: 8)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 24, elements: !566)
!566 = !{!567}
!567 = !DISubrange(count: 3)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !552, file: !551, line: 262, baseType: !569, size: 32, offset: 32)
!569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_SYNCBUSY_Type", file: !551, line: 86, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 62, size: 32, elements: !573)
!573 = !{!574, !590, !594}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !572, file: !551, line: 79, baseType: !575, size: 32)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !572, file: !551, line: 63, size: 32, elements: !576)
!576 = !{!577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !575, file: !551, line: 64, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL0", scope: !575, file: !551, line: 66, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL1", scope: !575, file: !551, line: 67, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL2", scope: !575, file: !551, line: 68, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL3", scope: !575, file: !551, line: 69, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL4", scope: !575, file: !551, line: 70, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL5", scope: !575, file: !551, line: 71, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL6", scope: !575, file: !551, line: 72, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL7", scope: !575, file: !551, line: 73, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL8", scope: !575, file: !551, line: 74, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL9", scope: !575, file: !551, line: 75, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL10", scope: !575, file: !551, line: 76, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL11", scope: !575, file: !551, line: 77, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !572, file: !551, line: 84, baseType: !591, size: 32)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !572, file: !551, line: 80, size: 32, elements: !592)
!592 = !{!593}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !591, file: !551, line: 82, baseType: !208, size: 12, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !572, file: !551, line: 85, baseType: !208, size: 32)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !552, file: !551, line: 263, baseType: !596, size: 192, offset: 64)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 192, elements: !597)
!597 = !{!598}
!598 = !DISubrange(count: 24)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !552, file: !551, line: 264, baseType: !600, size: 384, offset: 256)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 384, elements: !364)
!601 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !551, line: 163, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 149, size: 32, elements: !604)
!604 = !{!605, !616}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !603, file: !551, line: 161, baseType: !606, size: 32)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !603, file: !551, line: 150, size: 32, elements: !607)
!607 = !{!608, !609, !610, !611, !612, !613, !614, !615}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !606, file: !551, line: 151, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !606, file: !551, line: 153, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !606, file: !551, line: 154, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !606, file: !551, line: 155, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !606, file: !551, line: 156, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !606, file: !551, line: 157, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !606, file: !551, line: 158, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !606, file: !551, line: 160, baseType: !208, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !603, file: !551, line: 162, baseType: !208, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !552, file: !551, line: 265, baseType: !618, size: 384, offset: 640)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 384, elements: !619)
!619 = !{!620}
!620 = !DISubrange(count: 48)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "PCHCTRL", scope: !552, file: !551, line: 266, baseType: !622, size: 1536, offset: 1024)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 1536, elements: !619)
!623 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !624)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_PCHCTRL_Type", file: !551, line: 218, baseType: !625)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 209, size: 32, elements: !626)
!626 = !{!627, !633}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !625, file: !551, line: 216, baseType: !628, size: 32)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !551, line: 210, size: 32, elements: !629)
!629 = !{!630, !631, !632}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !628, file: !551, line: 211, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "CHEN", scope: !628, file: !551, line: 213, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !628, file: !551, line: 214, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !625, file: !551, line: 217, baseType: !208, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "Oscctrl", file: !636, line: 788, baseType: !637)
!636 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/oscctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !636, line: 771, size: 704, elements: !638)
!638 = !{!639, !654, !655, !686, !717, !750, !785, !809, !821, !822, !839, !840, !852, !864, !877, !878}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !637, file: !636, line: 772, baseType: !640, size: 8)
!640 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_EVCTRL_Type", file: !636, line: 55, baseType: !642)
!642 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 44, size: 8, elements: !643)
!643 = !{!644, !649, !653}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !642, file: !636, line: 49, baseType: !645, size: 8)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !642, file: !636, line: 45, size: 8, elements: !646)
!646 = !{!647, !648}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEO0", scope: !645, file: !636, line: 46, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEO1", scope: !645, file: !636, line: 47, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !642, file: !636, line: 53, baseType: !650, size: 8)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !642, file: !636, line: 50, size: 8, elements: !651)
!651 = !{!652}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEO", scope: !650, file: !636, line: 51, baseType: !150, size: 2, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !642, file: !636, line: 54, baseType: !150, size: 8)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !637, file: !636, line: 773, baseType: !565, size: 24, offset: 8)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !637, file: !636, line: 774, baseType: !656, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !657)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_INTENCLR_Type", file: !636, line: 102, baseType: !658)
!658 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 72, size: 32, elements: !659)
!659 = !{!660, !680, !685}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !658, file: !636, line: 95, baseType: !661, size: 32)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !658, file: !636, line: 73, size: 32, elements: !662)
!662 = !{!663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !661, file: !636, line: 74, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !661, file: !636, line: 75, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !661, file: !636, line: 76, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !661, file: !636, line: 77, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !661, file: !636, line: 79, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !661, file: !636, line: 80, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !661, file: !636, line: 81, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !661, file: !636, line: 82, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !661, file: !636, line: 83, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !661, file: !636, line: 85, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !661, file: !636, line: 86, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LTO", scope: !661, file: !636, line: 87, baseType: !208, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !661, file: !636, line: 88, baseType: !208, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !661, file: !636, line: 90, baseType: !208, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !661, file: !636, line: 91, baseType: !208, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LTO", scope: !661, file: !636, line: 92, baseType: !208, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !661, file: !636, line: 93, baseType: !208, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !658, file: !636, line: 100, baseType: !681, size: 32)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !658, file: !636, line: 96, size: 32, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !681, file: !636, line: 97, baseType: !208, size: 2, flags: DIFlagBitField, extraData: i64 0)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !681, file: !636, line: 98, baseType: !208, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !658, file: !636, line: 101, baseType: !208, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !637, file: !636, line: 775, baseType: !687, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !688)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_INTENSET_Type", file: !636, line: 182, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 152, size: 32, elements: !690)
!690 = !{!691, !711, !716}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !689, file: !636, line: 175, baseType: !692, size: 32)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !689, file: !636, line: 153, size: 32, elements: !693)
!693 = !{!694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !692, file: !636, line: 154, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !692, file: !636, line: 155, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !692, file: !636, line: 156, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !692, file: !636, line: 157, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !692, file: !636, line: 159, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !692, file: !636, line: 160, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !692, file: !636, line: 161, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !692, file: !636, line: 162, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !692, file: !636, line: 163, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !692, file: !636, line: 165, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !692, file: !636, line: 166, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LTO", scope: !692, file: !636, line: 167, baseType: !208, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !692, file: !636, line: 168, baseType: !208, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !692, file: !636, line: 170, baseType: !208, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !692, file: !636, line: 171, baseType: !208, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LTO", scope: !692, file: !636, line: 172, baseType: !208, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !692, file: !636, line: 173, baseType: !208, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !689, file: !636, line: 180, baseType: !712, size: 32)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !689, file: !636, line: 176, size: 32, elements: !713)
!713 = !{!714, !715}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !712, file: !636, line: 177, baseType: !208, size: 2, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !712, file: !636, line: 178, baseType: !208, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !689, file: !636, line: 181, baseType: !208, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !637, file: !636, line: 776, baseType: !718, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_INTFLAG_Type", file: !636, line: 262, baseType: !720)
!720 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 232, size: 32, elements: !721)
!721 = !{!722, !744, !749}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !720, file: !636, line: 255, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !720, file: !636, line: 233, size: 32, elements: !724)
!724 = !{!725, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !723, file: !636, line: 234, baseType: !726, size: 1, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !723, file: !636, line: 235, baseType: !726, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !723, file: !636, line: 236, baseType: !726, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !723, file: !636, line: 237, baseType: !726, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !723, file: !636, line: 239, baseType: !726, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !723, file: !636, line: 240, baseType: !726, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !723, file: !636, line: 241, baseType: !726, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !723, file: !636, line: 242, baseType: !726, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !723, file: !636, line: 243, baseType: !726, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !723, file: !636, line: 245, baseType: !726, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !723, file: !636, line: 246, baseType: !726, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LTO", scope: !723, file: !636, line: 247, baseType: !726, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !723, file: !636, line: 248, baseType: !726, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !723, file: !636, line: 250, baseType: !726, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !723, file: !636, line: 251, baseType: !726, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LTO", scope: !723, file: !636, line: 252, baseType: !726, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !723, file: !636, line: 253, baseType: !726, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !720, file: !636, line: 260, baseType: !745, size: 32)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !720, file: !636, line: 256, size: 32, elements: !746)
!746 = !{!747, !748}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !745, file: !636, line: 257, baseType: !726, size: 2, flags: DIFlagBitField, extraData: i64 0)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !745, file: !636, line: 258, baseType: !726, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !720, file: !636, line: 261, baseType: !208, size: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !637, file: !636, line: 777, baseType: !751, size: 32, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !752)
!752 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !753)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_STATUS_Type", file: !636, line: 345, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 312, size: 32, elements: !755)
!755 = !{!756, !778, !784}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !754, file: !636, line: 337, baseType: !757, size: 32)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !754, file: !636, line: 313, size: 32, elements: !758)
!758 = !{!759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !757, file: !636, line: 314, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !757, file: !636, line: 315, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !757, file: !636, line: 316, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !757, file: !636, line: 317, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCKSW0", scope: !757, file: !636, line: 318, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCKSW1", scope: !757, file: !636, line: 319, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !757, file: !636, line: 321, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !757, file: !636, line: 322, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !757, file: !636, line: 323, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !757, file: !636, line: 324, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !757, file: !636, line: 325, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !757, file: !636, line: 327, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !757, file: !636, line: 328, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0TO", scope: !757, file: !636, line: 329, baseType: !208, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !757, file: !636, line: 330, baseType: !208, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !757, file: !636, line: 332, baseType: !208, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !757, file: !636, line: 333, baseType: !208, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1TO", scope: !757, file: !636, line: 334, baseType: !208, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !757, file: !636, line: 335, baseType: !208, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !754, file: !636, line: 343, baseType: !779, size: 32)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !754, file: !636, line: 338, size: 32, elements: !780)
!780 = !{!781, !782, !783}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !779, file: !636, line: 339, baseType: !208, size: 2, flags: DIFlagBitField, extraData: i64 0)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !779, file: !636, line: 340, baseType: !208, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCKSW", scope: !779, file: !636, line: 341, baseType: !208, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !754, file: !636, line: 344, baseType: !208, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCTRL", scope: !637, file: !636, line: 778, baseType: !786, size: 64, offset: 160)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 64, elements: !807)
!787 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !788)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_XOSCCTRL_Type", file: !636, line: 422, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 402, size: 32, elements: !790)
!790 = !{!791, !806}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !789, file: !636, line: 420, baseType: !792, size: 32)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !789, file: !636, line: 403, size: 32, elements: !793)
!793 = !{!794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !792, file: !636, line: 405, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !792, file: !636, line: 406, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !792, file: !636, line: 408, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !792, file: !636, line: 409, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "LOWBUFGAIN", scope: !792, file: !636, line: 410, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "IPTAT", scope: !792, file: !636, line: 411, baseType: !208, size: 2, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "IMULT", scope: !792, file: !636, line: 412, baseType: !208, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ENALC", scope: !792, file: !636, line: 413, baseType: !208, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEN", scope: !792, file: !636, line: 414, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "SWBEN", scope: !792, file: !636, line: 415, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !792, file: !636, line: 417, baseType: !208, size: 4, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "CFDPRESC", scope: !792, file: !636, line: 418, baseType: !208, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !789, file: !636, line: 421, baseType: !208, size: 32)
!807 = !{!808}
!808 = !DISubrange(count: 2)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRLA", scope: !637, file: !636, line: 779, baseType: !810, size: 8, offset: 224)
!810 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !811)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLCTRLA_Type", file: !636, line: 469, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 460, size: 8, elements: !813)
!813 = !{!814, !820}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !812, file: !636, line: 467, baseType: !815, size: 8)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !812, file: !636, line: 461, size: 8, elements: !816)
!816 = !{!817, !818, !819}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !815, file: !636, line: 463, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !815, file: !636, line: 465, baseType: !150, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !815, file: !636, line: 466, baseType: !150, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !812, file: !636, line: 468, baseType: !150, size: 8)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !637, file: !636, line: 780, baseType: !565, size: 24, offset: 232)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRLB", scope: !637, file: !636, line: 781, baseType: !823, size: 8, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLCTRLB_Type", file: !636, line: 497, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 485, size: 8, elements: !826)
!826 = !{!827, !838}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !825, file: !636, line: 495, baseType: !828, size: 8)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !825, file: !636, line: 486, size: 8, elements: !829)
!829 = !{!830, !831, !832, !833, !834, !835, !836, !837}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !828, file: !636, line: 487, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "STABLE", scope: !828, file: !636, line: 488, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "LLAW", scope: !828, file: !636, line: 489, baseType: !150, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "USBCRM", scope: !828, file: !636, line: 490, baseType: !150, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "CCDIS", scope: !828, file: !636, line: 491, baseType: !150, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "QLDIS", scope: !828, file: !636, line: 492, baseType: !150, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "BPLCKC", scope: !828, file: !636, line: 493, baseType: !150, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "WAITLOCK", scope: !828, file: !636, line: 494, baseType: !150, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !825, file: !636, line: 496, baseType: !150, size: 8)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !637, file: !636, line: 782, baseType: !565, size: 24, offset: 264)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLVAL", scope: !637, file: !636, line: 783, baseType: !841, size: 32, offset: 288)
!841 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !842)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLVAL_Type", file: !636, line: 531, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 523, size: 32, elements: !844)
!844 = !{!845, !851}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !843, file: !636, line: 529, baseType: !846, size: 32)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !636, line: 524, size: 32, elements: !847)
!847 = !{!848, !849, !850}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "FINE", scope: !846, file: !636, line: 525, baseType: !208, size: 8, flags: DIFlagBitField, extraData: i64 0)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "COARSE", scope: !846, file: !636, line: 527, baseType: !208, size: 6, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "DIFF", scope: !846, file: !636, line: 528, baseType: !208, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !843, file: !636, line: 530, baseType: !208, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLMUL", scope: !637, file: !636, line: 784, baseType: !853, size: 32, offset: 320)
!853 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !854)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLMUL_Type", file: !636, line: 558, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 550, size: 32, elements: !856)
!856 = !{!857, !863}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !855, file: !636, line: 556, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !855, file: !636, line: 551, size: 32, elements: !859)
!859 = !{!860, !861, !862}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "MUL", scope: !858, file: !636, line: 552, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "FSTEP", scope: !858, file: !636, line: 553, baseType: !208, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "CSTEP", scope: !858, file: !636, line: 555, baseType: !208, size: 6, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !855, file: !636, line: 557, baseType: !208, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLSYNC", scope: !637, file: !636, line: 785, baseType: !865, size: 8, offset: 352)
!865 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !866)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLSYNC_Type", file: !636, line: 587, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 577, size: 8, elements: !868)
!868 = !{!869, !876}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !867, file: !636, line: 585, baseType: !870, size: 8)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !636, line: 578, size: 8, elements: !871)
!871 = !{!872, !873, !874, !875}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !870, file: !636, line: 580, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRLB", scope: !870, file: !636, line: 581, baseType: !150, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLVAL", scope: !870, file: !636, line: 582, baseType: !150, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLMUL", scope: !870, file: !636, line: 583, baseType: !150, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !867, file: !636, line: 586, baseType: !150, size: 8)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !637, file: !636, line: 786, baseType: !565, size: 24, offset: 360)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "Dpll", scope: !637, file: !636, line: 787, baseType: !879, size: 320, offset: 384)
!879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !880, size: 320, elements: !807)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "OscctrlDpll", file: !636, line: 766, baseType: !881)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !636, line: 759, size: 160, elements: !882)
!882 = !{!883, !895, !896, !907, !924, !936}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLA", scope: !881, file: !636, line: 760, baseType: !884, size: 8)
!884 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !885)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLCTRLA_Type", file: !636, line: 614, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 605, size: 8, elements: !887)
!887 = !{!888, !894}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !886, file: !636, line: 612, baseType: !889, size: 8)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !886, file: !636, line: 606, size: 8, elements: !890)
!890 = !{!891, !892, !893}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !889, file: !636, line: 608, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !889, file: !636, line: 610, baseType: !150, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !889, file: !636, line: 611, baseType: !150, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !886, file: !636, line: 613, baseType: !150, size: 8)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !881, file: !636, line: 761, baseType: !565, size: 24, offset: 8)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLRATIO", scope: !881, file: !636, line: 762, baseType: !897, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLRATIO_Type", file: !636, line: 638, baseType: !899)
!899 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 630, size: 32, elements: !900)
!900 = !{!901, !906}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !899, file: !636, line: 636, baseType: !902, size: 32)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !899, file: !636, line: 631, size: 32, elements: !903)
!903 = !{!904, !905}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "LDR", scope: !902, file: !636, line: 632, baseType: !208, size: 13, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "LDRFRAC", scope: !902, file: !636, line: 634, baseType: !208, size: 5, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !899, file: !636, line: 637, baseType: !208, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLB", scope: !881, file: !636, line: 763, baseType: !908, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !909)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLCTRLB_Type", file: !636, line: 667, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 654, size: 32, elements: !911)
!911 = !{!912, !923}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !910, file: !636, line: 665, baseType: !913, size: 32)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !910, file: !636, line: 655, size: 32, elements: !914)
!914 = !{!915, !916, !917, !918, !919, !920, !921, !922}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "FILTER", scope: !913, file: !636, line: 656, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "WUF", scope: !913, file: !636, line: 657, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "REFCLK", scope: !913, file: !636, line: 658, baseType: !208, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "LTIME", scope: !913, file: !636, line: 659, baseType: !208, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "LBYPASS", scope: !913, file: !636, line: 660, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "DCOFILTER", scope: !913, file: !636, line: 661, baseType: !208, size: 3, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "DCOEN", scope: !913, file: !636, line: 662, baseType: !208, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !913, file: !636, line: 663, baseType: !208, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !910, file: !636, line: 666, baseType: !208, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLSYNCBUSY", scope: !881, file: !636, line: 764, baseType: !925, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLSYNCBUSY_Type", file: !636, line: 724, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 716, size: 32, elements: !929)
!929 = !{!930, !935}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !928, file: !636, line: 722, baseType: !931, size: 32)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !928, file: !636, line: 717, size: 32, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !931, file: !636, line: 719, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLRATIO", scope: !931, file: !636, line: 720, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !928, file: !636, line: 723, baseType: !208, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLSTATUS", scope: !881, file: !636, line: 765, baseType: !937, size: 32, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLSTATUS_Type", file: !636, line: 745, baseType: !940)
!940 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !636, line: 738, size: 32, elements: !941)
!941 = !{!942, !947}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !940, file: !636, line: 743, baseType: !943, size: 32)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !940, file: !636, line: 739, size: 32, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !943, file: !636, line: 740, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "CLKRDY", scope: !943, file: !636, line: 741, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !940, file: !636, line: 744, baseType: !208, size: 32)
!948 = !{!412}
!949 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_samd5x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !952, line: 51, size: 64, elements: !953)
!952 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!953 = !{!954, !973}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !951, file: !952, line: 60, baseType: !955, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!125, !958}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !961)
!961 = !{!962, !963, !964, !965, !971, !972}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !960, file: !137, line: 380, baseType: !140, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !960, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !960, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !960, file: !137, line: 386, baseType: !966, size: 32, offset: 96)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !967, file: !137, line: 359, baseType: !150, size: 8)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !967, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !960, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !960, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !951, file: !952, line: 65, baseType: !958, size: 32, offset: 32)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !976, file: !990, line: 37, type: !991, isLocal: true, isDefinition: true)
!976 = distinct !DICompileUnit(language: DW_LANG_C99, file: !977, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !978, globals: !989, splitDebugInlining: false, nameTableKind: None)
!977 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!978 = !{!184, !979, !980, !150}
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !981, line: 66, baseType: !982)
!981 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !981, line: 64, size: 1408, elements: !984)
!984 = !{!985}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !983, file: !981, line: 65, baseType: !986, size: 1408)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !987)
!987 = !{!988}
!988 = !DISubrange(count: 44)
!989 = !{!974}
!990 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !992)
!992 = !{!993}
!993 = !DISubrange(count: 256)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "sbox", scope: !996, file: !1005, line: 37, type: !991, isLocal: true, isDefinition: true)
!996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !997, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !998, globals: !1004, splitDebugInlining: false, nameTableKind: None)
!997 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!998 = !{!999, !979, !184, !150}
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !981, line: 66, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !981, line: 64, size: 1408, elements: !1002)
!1002 = !{!1003}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1001, file: !981, line: 65, baseType: !986, size: 1408)
!1004 = !{!994}
!1005 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !1008, file: !1015, line: 17, type: !1155, isLocal: false, isDefinition: true)
!1008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1010, globals: !1011, splitDebugInlining: false, nameTableKind: None)
!1009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1010 = !{!272, !125, !208, !124}
!1011 = !{!1006, !1012, !1149}
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !1014, file: !1015, line: 198, type: !1135, isLocal: true, isDefinition: true)
!1014 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !1015, file: !1015, line: 175, type: !1016, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !1132)
!1015 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = !DISubroutineType(types: !1017)
!1017 = !{null, !1018}
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !1021)
!1020 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1021 = !{!1022, !1086, !1099, !1100, !1101, !1102, !1108, !1127}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1019, file: !1020, line: 247, baseType: !1023, size: 384)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !1024)
!1024 = !{!1025, !1051, !1059, !1060, !1061, !1072, !1073, !1074}
!1025 = !DIDerivedType(tag: DW_TAG_member, scope: !1023, file: !1020, line: 60, baseType: !1026, size: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1023, file: !1020, line: 60, size: 64, elements: !1027)
!1027 = !{!1028, !1044}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1026, file: !1020, line: 61, baseType: !1029, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !1031)
!1030 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !1032)
!1032 = !{!1033, !1039}
!1033 = !DIDerivedType(tag: DW_TAG_member, scope: !1031, file: !1030, line: 38, baseType: !1034, size: 32)
!1034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1031, file: !1030, line: 38, size: 32, elements: !1035)
!1035 = !{!1036, !1038}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1034, file: !1030, line: 39, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1034, file: !1030, line: 40, baseType: !1037, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, scope: !1031, file: !1030, line: 42, baseType: !1040, size: 32, offset: 32)
!1040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1031, file: !1030, line: 42, size: 32, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1040, file: !1030, line: 43, baseType: !1037, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1040, file: !1030, line: 44, baseType: !1037, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1026, file: !1020, line: 62, baseType: !1045, size: 64)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !1047)
!1046 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1047 = !{!1048}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1045, file: !1046, line: 50, baseType: !1049, size: 64)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 64, elements: !807)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1023, file: !1020, line: 68, baseType: !1052, size: 32, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !1055)
!1054 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !1056)
!1056 = !{!1057}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1055, file: !1054, line: 232, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !1031)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1023, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1023, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !1023, file: !1020, line: 90, baseType: !1062, size: 16, offset: 112)
!1062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1023, file: !1020, line: 90, size: 16, elements: !1063)
!1063 = !{!1064, !1071}
!1064 = !DIDerivedType(tag: DW_TAG_member, scope: !1062, file: !1020, line: 91, baseType: !1065, size: 16)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1062, file: !1020, line: 91, size: 16, elements: !1066)
!1066 = !{!1067, !1070}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1065, file: !1020, line: 96, baseType: !1068, size: 8)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !1069)
!1069 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1065, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1062, file: !1020, line: 100, baseType: !227, size: 16)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1023, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1023, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1023, file: !1020, line: 131, baseType: !1075, size: 192, offset: 192)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !1076)
!1076 = !{!1077, !1078, !1084}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1075, file: !1054, line: 245, baseType: !1029, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1075, file: !1054, line: 246, baseType: !1079, size: 32, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !1083}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1075, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1019, file: !1020, line: 250, baseType: !1087, size: 288, offset: 384)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !1089)
!1088 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1089 = !{!1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1087, file: !1088, line: 26, baseType: !208, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1087, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1087, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1087, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1087, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1087, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1087, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1087, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1087, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1019, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1019, file: !1020, line: 256, baseType: !1053, size: 64, offset: 704)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1019, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1019, file: !1020, line: 300, baseType: !1103, size: 96, offset: 800)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !1104)
!1104 = !{!1105, !1106, !1107}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1103, file: !1020, line: 153, baseType: !22, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1103, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1103, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1019, file: !1020, line: 325, baseType: !1109, size: 32, offset: 896)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !1112)
!1111 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !{!1113, !1122, !1123}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1110, file: !1111, line: 5074, baseType: !1114, size: 96)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !1116)
!1115 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1116 = !{!1117, !1120, !1121}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1114, file: !1115, line: 57, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !1115, line: 57, flags: DIFlagFwdDecl)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1114, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1114, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1110, file: !1111, line: 5075, baseType: !1053, size: 64, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1110, file: !1111, line: 5076, baseType: !1124, offset: 160)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!1125 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1126 = !{}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1019, file: !1020, line: 343, baseType: !1128, size: 64, offset: 928)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !1129)
!1129 = !{!1130, !1131}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1128, file: !1088, line: 63, baseType: !208, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1128, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!1132 = !{!1133, !1134}
!1133 = !DILocalVariable(name: "thread", arg: 1, scope: !1014, file: !1015, line: 175, type: !1018)
!1134 = !DILocalVariable(name: "region_num", scope: !1014, file: !1015, line: 200, type: !150)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, elements: !1147)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !1137, line: 52, size: 96, elements: !1138)
!1137 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1138 = !{!1139, !1140, !1141}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1136, file: !1137, line: 53, baseType: !22, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1136, file: !1137, line: 54, baseType: !272, size: 32, offset: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1136, file: !1137, line: 55, baseType: !1142, size: 32, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !1143, line: 151, baseType: !1144)
!1143 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1143, line: 149, size: 32, elements: !1145)
!1145 = !{!1146}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !1144, file: !1143, line: 150, baseType: !208, size: 32)
!1147 = !{!1148}
!1148 = !DISubrange(count: 0)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "static_regions", scope: !1008, file: !1015, line: 62, type: !1151, isLocal: true, isDefinition: true)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1152, size: 96, elements: !1153)
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!1153 = !{!1154}
!1154 = !DISubrange(count: 1)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1157)
!1157 = !{!1158, !1159}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1156, file: !373, line: 17, baseType: !140, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1156, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !1162, file: !1194, line: 39, type: !150, isLocal: true, isDefinition: true)
!1162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1163, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1164, globals: !1193, splitDebugInlining: false, nameTableKind: None)
!1163 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1164 = !{!1165, !124, !125, !1181, !150}
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !1167, line: 1226, baseType: !1168)
!1167 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 1213, size: 352, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !1168, file: !1167, line: 1215, baseType: !726, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1168, file: !1167, line: 1216, baseType: !727, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !1168, file: !1167, line: 1217, baseType: !727, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !1168, file: !1167, line: 1218, baseType: !727, size: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !1168, file: !1167, line: 1219, baseType: !727, size: 32, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !1168, file: !1167, line: 1220, baseType: !727, size: 32, offset: 160)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !1168, file: !1167, line: 1221, baseType: !727, size: 32, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !1168, file: !1167, line: 1222, baseType: !727, size: 32, offset: 224)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !1168, file: !1167, line: 1223, baseType: !727, size: 32, offset: 256)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !1168, file: !1167, line: 1224, baseType: !727, size: 32, offset: 288)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !1168, file: !1167, line: 1225, baseType: !727, size: 32, offset: 320)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1184, line: 27, size: 96, elements: !1185)
!1184 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1185 = !{!1186, !1187, !1188}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1183, file: !1184, line: 29, baseType: !208, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1183, file: !1184, line: 31, baseType: !140, size: 32, offset: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1183, file: !1184, line: 37, baseType: !1189, size: 32, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !1143, line: 146, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !1143, line: 141, size: 32, elements: !1191)
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1190, file: !1143, line: 143, baseType: !208, size: 32)
!1193 = !{!1160}
!1194 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1197, file: !1204, line: 21, type: !409, isLocal: true, isDefinition: true)
!1197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1199, globals: !1203, splitDebugInlining: false, nameTableKind: None)
!1198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1199 = !{!1200, !125, !124}
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 22, baseType: !125)
!1202 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1203 = !{!1195}
!1204 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !1207, file: !1212, line: 13, type: !1229, isLocal: true, isDefinition: true)
!1207 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1208, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1209, splitDebugInlining: false, nameTableKind: None)
!1208 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1209 = !{!1210, !1205}
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "mpu_config", scope: !1207, file: !1212, line: 37, type: !1213, isLocal: false, isDefinition: true)
!1212 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !1184, line: 41, size: 64, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !1214, file: !1184, line: 43, baseType: !208, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !1214, file: !1184, line: 45, baseType: !1218, size: 32, offset: 32)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1184, line: 27, size: 96, elements: !1221)
!1221 = !{!1222, !1223, !1224}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1220, file: !1184, line: 29, baseType: !208, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1220, file: !1184, line: 31, baseType: !140, size: 32, offset: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1220, file: !1184, line: 37, baseType: !1225, size: 32, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !1143, line: 146, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !1143, line: 141, size: 32, elements: !1227)
!1227 = !{!1228}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1226, file: !1143, line: 143, baseType: !208, size: 32)
!1229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1219, size: 192, elements: !807)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1232, file: !1665, line: 411, type: !1679, isLocal: false, isDefinition: true, align: 32)
!1232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1233, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1243, globals: !1662, splitDebugInlining: false, nameTableKind: None)
!1233 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1234 = !{!1235}
!1235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sam0_eic_trigger", file: !1236, line: 19, baseType: !32, size: 32, elements: !1237)
!1236 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/sam0_eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1237 = !{!1238, !1239, !1240, !1241, !1242}
!1238 = !DIEnumerator(name: "SAM0_EIC_RISING", value: 0)
!1239 = !DIEnumerator(name: "SAM0_EIC_FALLING", value: 1)
!1240 = !DIEnumerator(name: "SAM0_EIC_BOTH", value: 2)
!1241 = !DIEnumerator(name: "SAM0_EIC_HIGH", value: 3)
!1242 = !DIEnumerator(name: "SAM0_EIC_LOW", value: 4)
!1243 = !{!1244, !1407, !1587}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "Eic", file: !1246, line: 492, baseType: !1247)
!1246 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1246, line: 477, size: 480, elements: !1248)
!1248 = !{!1249, !1261, !1273, !1283, !1295, !1305, !1315, !1325, !1335, !1345, !1371, !1372, !1382, !1396}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !1247, file: !1246, line: 478, baseType: !1250, size: 8)
!1250 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1251)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CTRLA_Type", file: !1246, line: 53, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 44, size: 8, elements: !1253)
!1253 = !{!1254, !1260}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1252, file: !1246, line: 51, baseType: !1255, size: 8)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1252, file: !1246, line: 45, size: 8, elements: !1256)
!1256 = !{!1257, !1258, !1259}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1255, file: !1246, line: 46, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1255, file: !1246, line: 47, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "CKSEL", scope: !1255, file: !1246, line: 49, baseType: !150, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1252, file: !1246, line: 52, baseType: !150, size: 8)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "NMICTRL", scope: !1247, file: !1246, line: 479, baseType: !1262, size: 8, offset: 8)
!1262 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMICTRL_Type", file: !1246, line: 77, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 69, size: 8, elements: !1265)
!1265 = !{!1266, !1272}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1264, file: !1246, line: 75, baseType: !1267, size: 8)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1264, file: !1246, line: 70, size: 8, elements: !1268)
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "NMISENSE", scope: !1267, file: !1246, line: 71, baseType: !150, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFILTEN", scope: !1267, file: !1246, line: 72, baseType: !150, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "NMIASYNCH", scope: !1267, file: !1246, line: 73, baseType: !150, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1264, file: !1246, line: 76, baseType: !150, size: 8)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFLAG", scope: !1247, file: !1246, line: 480, baseType: !1274, size: 16, offset: 16)
!1274 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMIFLAG_Type", file: !1246, line: 112, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 106, size: 16, elements: !1277)
!1277 = !{!1278, !1282}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1276, file: !1246, line: 110, baseType: !1279, size: 16)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1276, file: !1246, line: 107, size: 16, elements: !1280)
!1280 = !{!1281}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "NMI", scope: !1279, file: !1246, line: 108, baseType: !227, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1276, file: !1246, line: 111, baseType: !227, size: 16)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1247, file: !1246, line: 481, baseType: !1284, size: 32, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_SYNCBUSY_Type", file: !1246, line: 131, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 124, size: 32, elements: !1288)
!1288 = !{!1289, !1294}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1287, file: !1246, line: 129, baseType: !1290, size: 32)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1287, file: !1246, line: 125, size: 32, elements: !1291)
!1291 = !{!1292, !1293}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1290, file: !1246, line: 126, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1290, file: !1246, line: 127, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1287, file: !1246, line: 130, baseType: !208, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !1247, file: !1246, line: 482, baseType: !1296, size: 32, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_EVCTRL_Type", file: !1246, line: 151, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 145, size: 32, elements: !1299)
!1299 = !{!1300, !1304}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1298, file: !1246, line: 149, baseType: !1301, size: 32)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1298, file: !1246, line: 146, size: 32, elements: !1302)
!1302 = !{!1303}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO", scope: !1301, file: !1246, line: 147, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1298, file: !1246, line: 150, baseType: !208, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1247, file: !1246, line: 483, baseType: !1306, size: 32, offset: 96)
!1306 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENCLR_Type", file: !1246, line: 170, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 164, size: 32, elements: !1309)
!1309 = !{!1310, !1314}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1308, file: !1246, line: 168, baseType: !1311, size: 32)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1308, file: !1246, line: 165, size: 32, elements: !1312)
!1312 = !{!1313}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1311, file: !1246, line: 166, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1308, file: !1246, line: 169, baseType: !208, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1247, file: !1246, line: 484, baseType: !1316, size: 32, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENSET_Type", file: !1246, line: 189, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 183, size: 32, elements: !1319)
!1319 = !{!1320, !1324}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1318, file: !1246, line: 187, baseType: !1321, size: 32)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1318, file: !1246, line: 184, size: 32, elements: !1322)
!1322 = !{!1323}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1321, file: !1246, line: 185, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1318, file: !1246, line: 188, baseType: !208, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1247, file: !1246, line: 485, baseType: !1326, size: 32, offset: 160)
!1326 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTFLAG_Type", file: !1246, line: 208, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 202, size: 32, elements: !1329)
!1329 = !{!1330, !1334}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1328, file: !1246, line: 206, baseType: !1331, size: 32)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1328, file: !1246, line: 203, size: 32, elements: !1332)
!1332 = !{!1333}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1331, file: !1246, line: 204, baseType: !726, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1328, file: !1246, line: 207, baseType: !208, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ASYNCH", scope: !1247, file: !1246, line: 486, baseType: !1336, size: 32, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_ASYNCH_Type", file: !1246, line: 227, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 221, size: 32, elements: !1339)
!1339 = !{!1340, !1344}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1338, file: !1246, line: 225, baseType: !1341, size: 32)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1338, file: !1246, line: 222, size: 32, elements: !1342)
!1342 = !{!1343}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "ASYNCH", scope: !1341, file: !1246, line: 223, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1338, file: !1246, line: 226, baseType: !208, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !1247, file: !1246, line: 487, baseType: !1346, size: 64, offset: 224)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1347, size: 64, elements: !807)
!1347 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1348)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CONFIG_Type", file: !1246, line: 260, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 240, size: 32, elements: !1350)
!1350 = !{!1351, !1370}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1349, file: !1246, line: 258, baseType: !1352, size: 32)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1246, line: 241, size: 32, elements: !1353)
!1353 = !{!1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE0", scope: !1352, file: !1246, line: 242, baseType: !208, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN0", scope: !1352, file: !1246, line: 243, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE1", scope: !1352, file: !1246, line: 244, baseType: !208, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN1", scope: !1352, file: !1246, line: 245, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE2", scope: !1352, file: !1246, line: 246, baseType: !208, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN2", scope: !1352, file: !1246, line: 247, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE3", scope: !1352, file: !1246, line: 248, baseType: !208, size: 3, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN3", scope: !1352, file: !1246, line: 249, baseType: !208, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE4", scope: !1352, file: !1246, line: 250, baseType: !208, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN4", scope: !1352, file: !1246, line: 251, baseType: !208, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE5", scope: !1352, file: !1246, line: 252, baseType: !208, size: 3, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN5", scope: !1352, file: !1246, line: 253, baseType: !208, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE6", scope: !1352, file: !1246, line: 254, baseType: !208, size: 3, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN6", scope: !1352, file: !1246, line: 255, baseType: !208, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE7", scope: !1352, file: !1246, line: 256, baseType: !208, size: 3, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN7", scope: !1352, file: !1246, line: 257, baseType: !208, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1349, file: !1246, line: 259, baseType: !208, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1247, file: !1246, line: 488, baseType: !482, size: 96, offset: 288)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "DEBOUNCEN", scope: !1247, file: !1246, line: 489, baseType: !1373, size: 32, offset: 384)
!1373 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1374)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_DEBOUNCEN_Type", file: !1246, line: 412, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 406, size: 32, elements: !1376)
!1376 = !{!1377, !1381}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1375, file: !1246, line: 410, baseType: !1378, size: 32)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1375, file: !1246, line: 407, size: 32, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "DEBOUNCEN", scope: !1378, file: !1246, line: 408, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1375, file: !1246, line: 411, baseType: !208, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "DPRESCALER", scope: !1247, file: !1246, line: 490, baseType: !1383, size: 32, offset: 416)
!1383 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_DPRESCALER_Type", file: !1246, line: 436, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 425, size: 32, elements: !1386)
!1386 = !{!1387, !1395}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1385, file: !1246, line: 434, baseType: !1388, size: 32)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1385, file: !1246, line: 426, size: 32, elements: !1389)
!1389 = !{!1390, !1391, !1392, !1393, !1394}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "PRESCALER0", scope: !1388, file: !1246, line: 427, baseType: !208, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "STATES0", scope: !1388, file: !1246, line: 428, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "PRESCALER1", scope: !1388, file: !1246, line: 429, baseType: !208, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "STATES1", scope: !1388, file: !1246, line: 430, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "TICKON", scope: !1388, file: !1246, line: 432, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1385, file: !1246, line: 435, baseType: !208, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "PINSTATE", scope: !1247, file: !1246, line: 491, baseType: !1397, size: 32, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_PINSTATE_Type", file: !1246, line: 464, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1246, line: 458, size: 32, elements: !1401)
!1401 = !{!1402, !1406}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1400, file: !1246, line: 462, baseType: !1403, size: 32)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !1246, line: 459, size: 32, elements: !1404)
!1404 = !{!1405}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "PINSTATE", scope: !1403, file: !1246, line: 460, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1400, file: !1246, line: 463, baseType: !208, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mclk", file: !1409, line: 467, baseType: !1410)
!1409 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/mclk.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1409, line: 454, size: 288, elements: !1411)
!1411 = !{!1412, !1414, !1424, !1434, !1444, !1455, !1465, !1469, !1499, !1524, !1546, !1566}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1410, file: !1409, line: 455, baseType: !1413, size: 8)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 8, elements: !1153)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1410, file: !1409, line: 456, baseType: !1415, size: 8, offset: 8)
!1415 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1416)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_INTENCLR_Type", file: !1409, line: 50, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 44, size: 8, elements: !1418)
!1418 = !{!1419, !1423}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1417, file: !1409, line: 48, baseType: !1420, size: 8)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1417, file: !1409, line: 45, size: 8, elements: !1421)
!1421 = !{!1422}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1420, file: !1409, line: 46, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1417, file: !1409, line: 49, baseType: !150, size: 8)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1410, file: !1409, line: 457, baseType: !1425, size: 8, offset: 16)
!1425 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1426)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_INTENSET_Type", file: !1409, line: 68, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 62, size: 8, elements: !1428)
!1428 = !{!1429, !1433}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1427, file: !1409, line: 66, baseType: !1430, size: 8)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1427, file: !1409, line: 63, size: 8, elements: !1431)
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1430, file: !1409, line: 64, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1427, file: !1409, line: 67, baseType: !150, size: 8)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1410, file: !1409, line: 458, baseType: !1435, size: 8, offset: 24)
!1435 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1436)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_INTFLAG_Type", file: !1409, line: 86, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 80, size: 8, elements: !1438)
!1438 = !{!1439, !1443}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1437, file: !1409, line: 84, baseType: !1440, size: 8)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1437, file: !1409, line: 81, size: 8, elements: !1441)
!1441 = !{!1442}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1440, file: !1409, line: 82, baseType: !485, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1437, file: !1409, line: 85, baseType: !150, size: 8)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "HSDIV", scope: !1410, file: !1409, line: 459, baseType: !1445, size: 8, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_HSDIV_Type", file: !1409, line: 103, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 98, size: 8, elements: !1449)
!1449 = !{!1450, !1454}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1448, file: !1409, line: 101, baseType: !1451, size: 8)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1448, file: !1409, line: 99, size: 8, elements: !1452)
!1452 = !{!1453}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1451, file: !1409, line: 100, baseType: !150, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1448, file: !1409, line: 102, baseType: !150, size: 8)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !1410, file: !1409, line: 460, baseType: !1456, size: 8, offset: 40)
!1456 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1457)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_CPUDIV_Type", file: !1409, line: 123, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 118, size: 8, elements: !1459)
!1459 = !{!1460, !1464}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1458, file: !1409, line: 121, baseType: !1461, size: 8)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1458, file: !1409, line: 119, size: 8, elements: !1462)
!1462 = !{!1463}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1461, file: !1409, line: 120, baseType: !150, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1458, file: !1409, line: 122, baseType: !150, size: 8)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1410, file: !1409, line: 461, baseType: !1466, size: 80, offset: 48)
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 80, elements: !1467)
!1467 = !{!1468}
!1468 = !DISubrange(count: 10)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !1410, file: !1409, line: 462, baseType: !1470, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1471)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_AHBMASK_Type", file: !1409, line: 180, baseType: !1472)
!1472 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 152, size: 32, elements: !1473)
!1473 = !{!1474, !1498}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1472, file: !1409, line: 178, baseType: !1475, size: 32)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1472, file: !1409, line: 153, size: 32, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !1475, file: !1409, line: 154, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !1475, file: !1409, line: 155, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !1475, file: !1409, line: 156, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "HPB3_", scope: !1475, file: !1409, line: 157, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1475, file: !1409, line: 158, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !1475, file: !1409, line: 159, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1475, file: !1409, line: 160, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "HSRAM_", scope: !1475, file: !1409, line: 161, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "CMCC_", scope: !1475, file: !1409, line: 162, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1475, file: !1409, line: 163, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1475, file: !1409, line: 164, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "BKUPRAM_", scope: !1475, file: !1409, line: 165, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "PAC_", scope: !1475, file: !1409, line: 166, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "QSPI_", scope: !1475, file: !1409, line: 167, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "SDHC0_", scope: !1475, file: !1409, line: 169, baseType: !208, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "SDHC1_", scope: !1475, file: !1409, line: 170, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "ICM_", scope: !1475, file: !1409, line: 172, baseType: !208, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "PUKCC_", scope: !1475, file: !1409, line: 173, baseType: !208, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "QSPI_2X_", scope: !1475, file: !1409, line: 174, baseType: !208, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_SMEEPROM_", scope: !1475, file: !1409, line: 175, baseType: !208, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_CACHE_", scope: !1475, file: !1409, line: 176, baseType: !208, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1472, file: !1409, line: 179, baseType: !208, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !1410, file: !1409, line: 463, baseType: !1500, size: 32, offset: 160)
!1500 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBAMASK_Type", file: !1409, line: 253, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 232, size: 32, elements: !1503)
!1503 = !{!1504, !1523}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1502, file: !1409, line: 251, baseType: !1505, size: 32)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1502, file: !1409, line: 233, size: 32, elements: !1506)
!1506 = !{!1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "PAC_", scope: !1505, file: !1409, line: 234, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !1505, file: !1409, line: 235, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "MCLK_", scope: !1505, file: !1409, line: 236, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "RSTC_", scope: !1505, file: !1409, line: 237, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "OSCCTRL_", scope: !1505, file: !1409, line: 238, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KCTRL_", scope: !1505, file: !1409, line: 239, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "SUPC_", scope: !1505, file: !1409, line: 240, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !1505, file: !1409, line: 241, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !1505, file: !1409, line: 242, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !1505, file: !1409, line: 243, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !1505, file: !1409, line: 244, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "FREQM_", scope: !1505, file: !1409, line: 245, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !1505, file: !1409, line: 246, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !1505, file: !1409, line: 247, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "TC0_", scope: !1505, file: !1409, line: 248, baseType: !208, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "TC1_", scope: !1505, file: !1409, line: 249, baseType: !208, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1502, file: !1409, line: 252, baseType: !208, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !1410, file: !1409, line: 464, baseType: !1525, size: 32, offset: 192)
!1525 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1526)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBBMASK_Type", file: !1409, line: 317, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 295, size: 32, elements: !1528)
!1528 = !{!1529, !1545}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1527, file: !1409, line: 315, baseType: !1530, size: 32)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !1409, line: 296, size: 32, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1530, file: !1409, line: 297, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1530, file: !1409, line: 298, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1530, file: !1409, line: 299, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !1530, file: !1409, line: 301, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !1530, file: !1409, line: 303, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !1530, file: !1409, line: 304, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !1530, file: !1409, line: 306, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !1530, file: !1409, line: 307, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !1530, file: !1409, line: 308, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !1530, file: !1409, line: 309, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "TC2_", scope: !1530, file: !1409, line: 310, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !1530, file: !1409, line: 311, baseType: !208, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "RAMECC_", scope: !1530, file: !1409, line: 313, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1527, file: !1409, line: 316, baseType: !208, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !1410, file: !1409, line: 465, baseType: !1547, size: 32, offset: 224)
!1547 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1548)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBCMASK_Type", file: !1409, line: 371, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 353, size: 32, elements: !1550)
!1550 = !{!1551, !1565}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1549, file: !1409, line: 369, baseType: !1552, size: 32)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1549, file: !1409, line: 354, size: 32, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !1552, file: !1409, line: 356, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "TCC3_", scope: !1552, file: !1409, line: 357, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !1552, file: !1409, line: 358, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !1552, file: !1409, line: 359, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "PDEC_", scope: !1552, file: !1409, line: 360, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !1552, file: !1409, line: 361, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "AES_", scope: !1552, file: !1409, line: 362, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_", scope: !1552, file: !1409, line: 363, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ICM_", scope: !1552, file: !1409, line: 364, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "QSPI_", scope: !1552, file: !1409, line: 366, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "CCL_", scope: !1552, file: !1409, line: 367, baseType: !208, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1549, file: !1409, line: 370, baseType: !208, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "APBDMASK", scope: !1410, file: !1409, line: 466, baseType: !1567, size: 32, offset: 256)
!1567 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBDMASK_Type", file: !1409, line: 420, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1409, line: 403, size: 32, elements: !1570)
!1570 = !{!1571, !1586}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1569, file: !1409, line: 418, baseType: !1572, size: 32)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1569, file: !1409, line: 404, size: 32, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !1572, file: !1409, line: 405, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !1572, file: !1409, line: 406, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM6_", scope: !1572, file: !1409, line: 407, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM7_", scope: !1572, file: !1409, line: 408, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "TCC4_", scope: !1572, file: !1409, line: 409, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !1572, file: !1409, line: 410, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !1572, file: !1409, line: 411, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "ADC0_", scope: !1572, file: !1409, line: 412, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ADC1_", scope: !1572, file: !1409, line: 413, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !1572, file: !1409, line: 414, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !1572, file: !1409, line: 415, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "PCC_", scope: !1572, file: !1409, line: 416, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1569, file: !1409, line: 419, baseType: !208, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !551, line: 267, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 259, size: 2560, elements: !1590)
!1590 = !{!1591, !1601, !1602, !1629, !1630, !1648, !1649}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !1589, file: !551, line: 260, baseType: !1592, size: 8)
!1592 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRLA_Type", file: !551, line: 50, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 44, size: 8, elements: !1595)
!1595 = !{!1596, !1600}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1594, file: !551, line: 48, baseType: !1597, size: 8)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1594, file: !551, line: 45, size: 8, elements: !1598)
!1598 = !{!1599}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1597, file: !551, line: 46, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1594, file: !551, line: 49, baseType: !150, size: 8)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1589, file: !551, line: 261, baseType: !565, size: 24, offset: 8)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1589, file: !551, line: 262, baseType: !1603, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1604)
!1604 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_SYNCBUSY_Type", file: !551, line: 86, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 62, size: 32, elements: !1607)
!1607 = !{!1608, !1624, !1628}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1606, file: !551, line: 79, baseType: !1609, size: 32)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1606, file: !551, line: 63, size: 32, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1609, file: !551, line: 64, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL0", scope: !1609, file: !551, line: 66, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL1", scope: !1609, file: !551, line: 67, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL2", scope: !1609, file: !551, line: 68, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL3", scope: !1609, file: !551, line: 69, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL4", scope: !1609, file: !551, line: 70, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL5", scope: !1609, file: !551, line: 71, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL6", scope: !1609, file: !551, line: 72, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL7", scope: !1609, file: !551, line: 73, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL8", scope: !1609, file: !551, line: 74, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL9", scope: !1609, file: !551, line: 75, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL10", scope: !1609, file: !551, line: 76, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL11", scope: !1609, file: !551, line: 77, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1606, file: !551, line: 84, baseType: !1625, size: 32)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1606, file: !551, line: 80, size: 32, elements: !1626)
!1626 = !{!1627}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1625, file: !551, line: 82, baseType: !208, size: 12, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1606, file: !551, line: 85, baseType: !208, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1589, file: !551, line: 263, baseType: !596, size: 192, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1589, file: !551, line: 264, baseType: !1631, size: 384, offset: 256)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1632, size: 384, elements: !364)
!1632 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !551, line: 163, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 149, size: 32, elements: !1635)
!1635 = !{!1636, !1647}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1634, file: !551, line: 161, baseType: !1637, size: 32)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1634, file: !551, line: 150, size: 32, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !1637, file: !551, line: 151, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !1637, file: !551, line: 153, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !1637, file: !551, line: 154, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !1637, file: !551, line: 155, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !1637, file: !551, line: 156, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !1637, file: !551, line: 157, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !1637, file: !551, line: 158, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1637, file: !551, line: 160, baseType: !208, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1634, file: !551, line: 162, baseType: !208, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1589, file: !551, line: 265, baseType: !618, size: 384, offset: 640)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "PCHCTRL", scope: !1589, file: !551, line: 266, baseType: !1650, size: 1536, offset: 1024)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 1536, elements: !619)
!1651 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1652)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_PCHCTRL_Type", file: !551, line: 218, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 209, size: 32, elements: !1654)
!1654 = !{!1655, !1661}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1653, file: !551, line: 216, baseType: !1656, size: 32)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1653, file: !551, line: 210, size: 32, elements: !1657)
!1657 = !{!1658, !1659, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1656, file: !551, line: 211, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "CHEN", scope: !1656, file: !551, line: 213, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1656, file: !551, line: 214, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1653, file: !551, line: 217, baseType: !208, size: 32)
!1662 = !{!1663, !1230, !1669, !1694, !1715, !1717, !1723, !1735, !1737, !1739, !1741, !1743, !1745, !1747, !1749, !1751, !1753, !1755, !1757, !1759, !1761, !1763}
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1232, file: !1665, line: 411, type: !1666, isLocal: false, isDefinition: true, align: 16)
!1665 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1667)
!1667 = !{!1668}
!1668 = !DISubrange(count: 5)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1232, file: !1665, line: 411, type: !1671, isLocal: true, isDefinition: true, align: 32)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !952, line: 51, size: 64, elements: !1673)
!1673 = !{!1674, !1693}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1672, file: !952, line: 60, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!125, !1678}
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1691, !1692}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1680, file: !137, line: 380, baseType: !140, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1680, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1680, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1680, file: !137, line: 386, baseType: !1686, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1688)
!1688 = !{!1689, !1690}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1687, file: !137, line: 359, baseType: !150, size: 8)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1687, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1680, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1680, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1672, file: !952, line: 65, baseType: !1678, size: 32, offset: 32)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "eic_data", scope: !1232, file: !1665, line: 410, type: !1696, isLocal: true, isDefinition: true)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_data", file: !1665, line: 26, size: 256, elements: !1697)
!1697 = !{!1698, !1708}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !1696, file: !1665, line: 27, baseType: !1699, size: 128)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 128, elements: !807)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_port_data", file: !1665, line: 21, size: 64, elements: !1701)
!1701 = !{!1702, !1707}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1700, file: !1665, line: 22, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sam0_eic_callback_t", file: !1236, line: 14, baseType: !1704)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{null, !208, !124}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1700, file: !1665, line: 23, baseType: !124, size: 32, offset: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1696, file: !1665, line: 28, baseType: !1709, size: 128, offset: 128)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 128, elements: !312)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_line_assignment", file: !1665, line: 15, size: 8, elements: !1711)
!1711 = !{!1712, !1713, !1714}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !1710, file: !1665, line: 16, baseType: !150, size: 5, flags: DIFlagBitField, extraData: i64 0)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1710, file: !1665, line: 17, baseType: !150, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1710, file: !1665, line: 18, baseType: !150, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1232, file: !1665, line: 411, type: !1687, isLocal: true, isDefinition: true, align: 8)
!1717 = !DIGlobalVariableExpression(var: !1718, expr: !DIExpression())
!1718 = distinct !DIGlobalVariable(name: "sam0_eic_channels", scope: !1232, file: !1719, line: 29, type: !1720, isLocal: true, isDefinition: true)
!1719 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !1721)
!1721 = !{!808, !1722}
!1722 = !DISubrange(count: 32)
!1723 = !DIGlobalVariableExpression(var: !1724, expr: !DIExpression())
!1724 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_0", scope: !1725, file: !1665, line: 356, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1725 = distinct !DISubprogram(name: "sam0_eic_init", scope: !1665, file: !1665, line: 335, type: !1676, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !1726)
!1726 = !{!1727}
!1727 = !DILocalVariable(name: "dev", arg: 1, scope: !1725, file: !1665, line: 335, type: !1678)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1729)
!1729 = !{!1730, !1732, !1733, !1734}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1728, file: !10, line: 55, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1728, file: !10, line: 57, baseType: !1731, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1728, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1728, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_1", scope: !1725, file: !1665, line: 359, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_2", scope: !1725, file: !1665, line: 362, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_3", scope: !1725, file: !1665, line: 365, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_4", scope: !1725, file: !1665, line: 368, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1743 = !DIGlobalVariableExpression(var: !1744, expr: !DIExpression())
!1744 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_5", scope: !1725, file: !1665, line: 371, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1745 = !DIGlobalVariableExpression(var: !1746, expr: !DIExpression())
!1746 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_6", scope: !1725, file: !1665, line: 374, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1747 = !DIGlobalVariableExpression(var: !1748, expr: !DIExpression())
!1748 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_7", scope: !1725, file: !1665, line: 377, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1749 = !DIGlobalVariableExpression(var: !1750, expr: !DIExpression())
!1750 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_8", scope: !1725, file: !1665, line: 380, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_9", scope: !1725, file: !1665, line: 383, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_10", scope: !1725, file: !1665, line: 386, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_11", scope: !1725, file: !1665, line: 389, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_12", scope: !1725, file: !1665, line: 392, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_13", scope: !1725, file: !1665, line: 395, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_14", scope: !1725, file: !1665, line: 398, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_15", scope: !1725, file: !1665, line: 401, type: !1728, isLocal: true, isDefinition: true, align: 32)
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1767, file: !1772, line: 7, type: !1773, isLocal: false, isDefinition: true, align: 16)
!1767 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1768, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1769, splitDebugInlining: false, nameTableKind: None)
!1768 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1769 = !{!1765, !1770, !1774}
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1767, file: !1772, line: 12, type: !1773, isLocal: false, isDefinition: true, align: 16)
!1772 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !566)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1767, file: !1772, line: 17, type: !1773, isLocal: false, isDefinition: true, align: 16)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1778, file: !1866, line: 603, type: !1868, isLocal: true, isDefinition: true, align: 32)
!1778 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1779, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1780, globals: !1863, splitDebugInlining: false, nameTableKind: None)
!1779 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1780 = !{!124, !125, !1781}
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1784, line: 336, size: 608, elements: !1785)
!1784 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1785 = !{!1786, !1806, !1810, !1814, !1827, !1832, !1836, !1841, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1783, file: !1784, line: 365, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!125, !1790, !1805}
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1797, !1803, !1804}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1792, file: !137, line: 380, baseType: !140, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1792, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1792, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1792, file: !137, line: 386, baseType: !1798, size: 32, offset: 96)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1800)
!1800 = !{!1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1799, file: !137, line: 359, baseType: !150, size: 8)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1799, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1792, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1792, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1783, file: !1784, line: 366, baseType: !1807, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{null, !1790, !151}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1783, file: !1784, line: 374, baseType: !1811, size: 32, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!125, !1790}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1783, file: !1784, line: 377, baseType: !1815, size: 32, offset: 96)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!125, !1790, !1818}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1784, line: 122, size: 64, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825, !1826}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1820, file: !1784, line: 123, baseType: !208, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1820, file: !1784, line: 124, baseType: !150, size: 8, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1820, file: !1784, line: 125, baseType: !150, size: 8, offset: 40)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1820, file: !1784, line: 126, baseType: !150, size: 8, offset: 48)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1820, file: !1784, line: 127, baseType: !150, size: 8, offset: 56)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1783, file: !1784, line: 379, baseType: !1828, size: 32, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!125, !1790, !1831}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1783, file: !1784, line: 384, baseType: !1833, size: 32, offset: 160)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!125, !1790, !979, !125}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1783, file: !1784, line: 393, baseType: !1837, size: 32, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!125, !1790, !184, !1840}
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1783, file: !1784, line: 402, baseType: !1842, size: 32, offset: 224)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{null, !1790}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1783, file: !1784, line: 405, baseType: !1842, size: 32, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1783, file: !1784, line: 408, baseType: !1811, size: 32, offset: 288)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1783, file: !1784, line: 411, baseType: !1842, size: 32, offset: 320)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1783, file: !1784, line: 414, baseType: !1842, size: 32, offset: 352)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1783, file: !1784, line: 417, baseType: !1811, size: 32, offset: 384)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1783, file: !1784, line: 420, baseType: !1811, size: 32, offset: 416)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1783, file: !1784, line: 423, baseType: !1842, size: 32, offset: 448)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1783, file: !1784, line: 426, baseType: !1842, size: 32, offset: 480)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1783, file: !1784, line: 429, baseType: !1811, size: 32, offset: 512)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1783, file: !1784, line: 432, baseType: !1811, size: 32, offset: 544)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1783, file: !1784, line: 435, baseType: !1856, size: 32, offset: 576)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{null, !1790, !1859, !124}
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1784, line: 142, baseType: !1860)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{null, !1790, !124}
!1863 = !{!1776, !1864}
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1778, file: !1866, line: 38, type: !1867, isLocal: true, isDefinition: true)
!1866 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1790)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !952, line: 51, size: 64, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1869, file: !952, line: 60, baseType: !1811, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1869, file: !952, line: 65, baseType: !1790, size: 32, offset: 32)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1875, file: !1881, line: 22, type: !2050, isLocal: false, isDefinition: true)
!1875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1877, globals: !1878, splitDebugInlining: false, nameTableKind: None)
!1876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!1877 = !{!30, !39, !42, !116}
!1878 = !{!1873, !1879, !1882, !1898, !1909, !1911, !2039}
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1875, file: !1881, line: 324, type: !1773, isLocal: false, isDefinition: true, align: 16)
!1881 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1875, file: !1881, line: 324, type: !1884, isLocal: true, isDefinition: true, align: 32)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1896, !1897}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1885, file: !137, line: 380, baseType: !140, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1885, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1885, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1885, file: !137, line: 386, baseType: !1891, size: 32, offset: 96)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1892, file: !137, line: 359, baseType: !150, size: 8)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1892, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1885, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1885, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1875, file: !1881, line: 324, type: !1900, isLocal: true, isDefinition: true, align: 32)
!1900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !952, line: 51, size: 64, elements: !1902)
!1902 = !{!1903, !1908}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1901, file: !952, line: 60, baseType: !1904, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!125, !1907}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1901, file: !952, line: 65, baseType: !1907, size: 32, offset: 32)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1875, file: !1881, line: 324, type: !1892, isLocal: true, isDefinition: true, align: 8)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1875, file: !1881, line: 317, type: !1913, isLocal: true, isDefinition: true)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1914)
!1914 = !{!1915, !1916, !1992, !1996, !2004, !2027, !2031}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1913, file: !128, line: 66, baseType: !1904, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1913, file: !128, line: 69, baseType: !1917, size: 32, offset: 32)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!125, !1907, !1920, !39, !30, !42}
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1922)
!1922 = !{!1923, !1965, !1970, !1971, !1972, !1973, !1990, !1991}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1921, file: !31, line: 116, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1925)
!1925 = !{!1926, !1927}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1924, file: !31, line: 76, baseType: !30, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !31, line: 78, baseType: !1928, size: 32, offset: 32)
!1928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !31, line: 78, size: 32, elements: !1929)
!1929 = !{!1930, !1944, !1949, !1951, !1963}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1928, file: !31, line: 79, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1932)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!125, !1920, !1935}
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1937)
!1937 = !{!1938, !1939, !1940, !1941, !1942, !1943}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1936, file: !31, line: 183, baseType: !184, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1936, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1936, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1936, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1936, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1936, file: !31, line: 208, baseType: !1920, size: 32, offset: 160)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1928, file: !31, line: 80, baseType: !1945, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1946)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!125, !1920, !1935, !184}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1928, file: !31, line: 81, baseType: !1950, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1946)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1928, file: !31, line: 82, baseType: !1952, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1953)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!125, !1920, !1956, !184}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1957, file: !31, line: 219, baseType: !1935, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1957, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1957, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1957, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1928, file: !31, line: 83, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1953)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1921, file: !31, line: 126, baseType: !1966, size: 32, offset: 64)
!1966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1921, file: !31, line: 119, size: 32, elements: !1967)
!1967 = !{!1968, !1969}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1966, file: !31, line: 121, baseType: !184, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1966, file: !31, line: 125, baseType: !124, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1921, file: !31, line: 131, baseType: !1907, size: 32, offset: 96)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1921, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1921, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1921, file: !31, line: 156, baseType: !1974, size: 32, offset: 192)
!1974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1921, file: !31, line: 152, size: 32, elements: !1975)
!1975 = !{!1976, !1981, !1985}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1974, file: !31, line: 153, baseType: !1977, size: 32)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1977, file: !31, line: 88, baseType: !227, size: 16)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1977, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1974, file: !31, line: 154, baseType: !1982, size: 32)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1983)
!1983 = !{!1984}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1982, file: !31, line: 96, baseType: !208, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1974, file: !31, line: 155, baseType: !1986, size: 32)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1987)
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1986, file: !31, line: 100, baseType: !227, size: 16)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1986, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1921, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1921, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1913, file: !128, line: 74, baseType: !1993, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!125, !1907, !1920}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1913, file: !128, line: 77, baseType: !1997, size: 32, offset: 96)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!125, !1907, !2000}
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !2001)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 32)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{null, !1935, !125}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1913, file: !128, line: 81, baseType: !2005, size: 32, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!125, !1907, !2008, !116}
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 32)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !2010)
!2010 = !{!2011, !2012, !2013, !2025, !2026}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !2009, file: !117, line: 51, baseType: !1907, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !2009, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !2009, file: !117, line: 65, baseType: !2014, size: 32, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !2015)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!125, !2008, !2018, !153}
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !2019, file: !117, line: 91, baseType: !184, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !2019, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !2019, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2019, file: !117, line: 107, baseType: !2008, size: 32, offset: 96)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !2009, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2009, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1913, file: !128, line: 84, baseType: !2028, size: 32, offset: 160)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!125, !1907, !2008}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1913, file: !128, line: 86, baseType: !2032, size: 32, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!125, !1907, !2035}
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !2036)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{null, !2018, !125}
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1875, file: !1881, line: 26, type: !2041, isLocal: true, isDefinition: true)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 2880, elements: !807)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !2043, line: 22, size: 1440, elements: !2044)
!2043 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !2042, file: !2043, line: 23, baseType: !125, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !2042, file: !2043, line: 24, baseType: !2047, size: 1408, offset: 32)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !981, line: 64, size: 1408, elements: !2048)
!2048 = !{!2049}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2047, file: !981, line: 65, baseType: !986, size: 1408)
!2050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2051)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2052)
!2052 = !{!2053, !2054}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2051, file: !373, line: 17, baseType: !140, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2051, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "uart_sam0_config_0", scope: !2057, file: !2371, line: 1293, type: !2435, isLocal: true, isDefinition: true)
!2057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2058, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2059, retainedTypes: !2104, globals: !2368, splitDebugInlining: false, nameTableKind: None)
!2058 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!2059 = !{!46, !2060, !2072, !2079, !2084, !2091, !2097}
!2060 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_channel_direction", file: !2061, line: 31, baseType: !32, size: 32, elements: !2062)
!2061 = !DIFile(filename: "zephyr/include/zephyr/drivers/dma.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2062 = !{!2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071}
!2063 = !DIEnumerator(name: "MEMORY_TO_MEMORY", value: 0)
!2064 = !DIEnumerator(name: "MEMORY_TO_PERIPHERAL", value: 1)
!2065 = !DIEnumerator(name: "PERIPHERAL_TO_MEMORY", value: 2)
!2066 = !DIEnumerator(name: "PERIPHERAL_TO_PERIPHERAL", value: 3)
!2067 = !DIEnumerator(name: "HOST_TO_MEMORY", value: 4)
!2068 = !DIEnumerator(name: "MEMORY_TO_HOST", value: 5)
!2069 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_COMMON_COUNT", value: 6)
!2070 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_PRIV_START", value: 6)
!2071 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_MAX", value: 7)
!2072 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1784, line: 47, baseType: !32, size: 32, elements: !2073)
!2073 = !{!2074, !2075, !2076, !2077, !2078}
!2074 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!2075 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!2076 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!2077 = !DIEnumerator(name: "UART_BREAK", value: 8)
!2078 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!2079 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1784, line: 107, baseType: !32, size: 32, elements: !2080)
!2080 = !{!2081, !2082, !2083}
!2081 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!2082 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!2083 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!2084 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1784, line: 75, baseType: !32, size: 32, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089, !2090}
!2086 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!2087 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!2088 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!2089 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!2090 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!2091 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1784, line: 84, baseType: !32, size: 32, elements: !2092)
!2092 = !{!2093, !2094, !2095, !2096}
!2093 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!2094 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!2095 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!2096 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!2097 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1784, line: 92, baseType: !32, size: 32, elements: !2098)
!2098 = !{!2099, !2100, !2101, !2102, !2103}
!2099 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!2100 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!2101 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!2102 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!2103 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!2104 = !{!2105, !124, !125, !2184, !2284, !24, !151, !2271, !227, !2293}
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1784, line: 336, size: 608, elements: !2108)
!2108 = !{!2109, !2128, !2132, !2136, !2149, !2154, !2158, !2162, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2107, file: !1784, line: 365, baseType: !2110, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!125, !2113, !1805}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120, !2126, !2127}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2115, file: !137, line: 380, baseType: !140, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2115, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2115, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2115, file: !137, line: 386, baseType: !2121, size: 32, offset: 96)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2122, file: !137, line: 359, baseType: !150, size: 8)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2122, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2115, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2115, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2107, file: !1784, line: 366, baseType: !2129, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !2113, !151}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2107, file: !1784, line: 374, baseType: !2133, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!125, !2113}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2107, file: !1784, line: 377, baseType: !2137, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 32)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!125, !2113, !2140}
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2142)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1784, line: 122, size: 64, elements: !2143)
!2143 = !{!2144, !2145, !2146, !2147, !2148}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2142, file: !1784, line: 123, baseType: !208, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2142, file: !1784, line: 124, baseType: !150, size: 8, offset: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2142, file: !1784, line: 125, baseType: !150, size: 8, offset: 40)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2142, file: !1784, line: 126, baseType: !150, size: 8, offset: 48)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2142, file: !1784, line: 127, baseType: !150, size: 8, offset: 56)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2107, file: !1784, line: 379, baseType: !2150, size: 32, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!125, !2113, !2153}
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2107, file: !1784, line: 384, baseType: !2155, size: 32, offset: 160)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!125, !2113, !979, !125}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2107, file: !1784, line: 393, baseType: !2159, size: 32, offset: 192)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!125, !2113, !184, !1840}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2107, file: !1784, line: 402, baseType: !2163, size: 32, offset: 224)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{null, !2113}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2107, file: !1784, line: 405, baseType: !2163, size: 32, offset: 256)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2107, file: !1784, line: 408, baseType: !2133, size: 32, offset: 288)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2107, file: !1784, line: 411, baseType: !2163, size: 32, offset: 320)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2107, file: !1784, line: 414, baseType: !2163, size: 32, offset: 352)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2107, file: !1784, line: 417, baseType: !2133, size: 32, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2107, file: !1784, line: 420, baseType: !2133, size: 32, offset: 416)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2107, file: !1784, line: 423, baseType: !2163, size: 32, offset: 448)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2107, file: !1784, line: 426, baseType: !2163, size: 32, offset: 480)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2107, file: !1784, line: 429, baseType: !2133, size: 32, offset: 512)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2107, file: !1784, line: 432, baseType: !2133, size: 32, offset: 544)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2107, file: !1784, line: 435, baseType: !2177, size: 32, offset: 576)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{null, !2113, !2180, !124}
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1784, line: 142, baseType: !2181)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{null, !2113, !124}
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_driver_api", file: !2061, line: 304, size: 288, elements: !2187)
!2187 = !{!2188, !2240, !2245, !2250, !2252, !2254, !2256, !2273, !2279}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2186, file: !2061, line: 305, baseType: !2189, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_config", file: !2061, line: 264, baseType: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!125, !2113, !208, !2193}
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_config", file: !2061, line: 194, size: 224, elements: !2195)
!2195 = !{!2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2234, !2235}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dma_slot", scope: !2194, file: !2061, line: 195, baseType: !208, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "channel_direction", scope: !2194, file: !2061, line: 196, baseType: !208, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "complete_callback_en", scope: !2194, file: !2061, line: 197, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_en", scope: !2194, file: !2061, line: 198, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "source_handshake", scope: !2194, file: !2061, line: 199, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "dest_handshake", scope: !2194, file: !2061, line: 200, baseType: !208, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "channel_priority", scope: !2194, file: !2061, line: 201, baseType: !208, size: 4, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "source_chaining_en", scope: !2194, file: !2061, line: 202, baseType: !208, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dest_chaining_en", scope: !2194, file: !2061, line: 203, baseType: !208, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "linked_channel", scope: !2194, file: !2061, line: 204, baseType: !208, size: 7, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !2194, file: !2061, line: 205, baseType: !208, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2194, file: !2061, line: 206, baseType: !208, size: 3, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "source_data_size", scope: !2194, file: !2061, line: 207, baseType: !208, size: 16, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "dest_data_size", scope: !2194, file: !2061, line: 208, baseType: !208, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 0)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "source_burst_length", scope: !2194, file: !2061, line: 209, baseType: !208, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 0)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "dest_burst_length", scope: !2194, file: !2061, line: 210, baseType: !208, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 0)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !2194, file: !2061, line: 211, baseType: !208, size: 32, offset: 96)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "head_block", scope: !2194, file: !2061, line: 212, baseType: !2214, size: 32, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_block_config", file: !2061, line: 113, size: 256, elements: !2216)
!2216 = !{!2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "source_address", scope: !2215, file: !2061, line: 118, baseType: !208, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "dest_address", scope: !2215, file: !2061, line: 119, baseType: !208, size: 32, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_interval", scope: !2215, file: !2061, line: 121, baseType: !208, size: 32, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_interval", scope: !2215, file: !2061, line: 122, baseType: !208, size: 32, offset: 96)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_count", scope: !2215, file: !2061, line: 123, baseType: !227, size: 16, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_count", scope: !2215, file: !2061, line: 124, baseType: !227, size: 16, offset: 144)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2215, file: !2061, line: 125, baseType: !208, size: 32, offset: 160)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "next_block", scope: !2215, file: !2061, line: 126, baseType: !2214, size: 32, offset: 192)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_en", scope: !2215, file: !2061, line: 127, baseType: !227, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_en", scope: !2215, file: !2061, line: 128, baseType: !227, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "source_addr_adj", scope: !2215, file: !2061, line: 129, baseType: !227, size: 2, offset: 226, flags: DIFlagBitField, extraData: i64 224)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "dest_addr_adj", scope: !2215, file: !2061, line: 130, baseType: !227, size: 2, offset: 228, flags: DIFlagBitField, extraData: i64 224)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "source_reload_en", scope: !2215, file: !2061, line: 131, baseType: !227, size: 1, offset: 230, flags: DIFlagBitField, extraData: i64 224)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dest_reload_en", scope: !2215, file: !2061, line: 132, baseType: !227, size: 1, offset: 231, flags: DIFlagBitField, extraData: i64 224)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_mode_control", scope: !2215, file: !2061, line: 133, baseType: !227, size: 4, offset: 232, flags: DIFlagBitField, extraData: i64 224)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control_mode", scope: !2215, file: !2061, line: 134, baseType: !227, size: 1, offset: 236, flags: DIFlagBitField, extraData: i64 224)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2215, file: !2061, line: 135, baseType: !227, size: 3, offset: 237, flags: DIFlagBitField, extraData: i64 224)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2194, file: !2061, line: 213, baseType: !124, size: 32, offset: 160)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "dma_callback", scope: !2194, file: !2061, line: 214, baseType: !2236, size: 32, offset: 192)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_callback_t", file: !2061, line: 150, baseType: !2237)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2238 = !DISubroutineType(types: !2239)
!2239 = !{null, !2113, !124, !208, !125}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "reload", scope: !2186, file: !2061, line: 306, baseType: !2241, size: 32, offset: 32)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_reload", file: !2061, line: 271, baseType: !2242)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!125, !2113, !208, !208, !208, !272}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2186, file: !2061, line: 307, baseType: !2246, size: 32, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_start", file: !2061, line: 275, baseType: !2247)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!125, !2113, !208}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2186, file: !2061, line: 308, baseType: !2251, size: 32, offset: 96)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_stop", file: !2061, line: 277, baseType: !2247)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2186, file: !2061, line: 309, baseType: !2253, size: 32, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_suspend", file: !2061, line: 279, baseType: !2247)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2186, file: !2061, line: 310, baseType: !2255, size: 32, offset: 160)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_resume", file: !2061, line: 281, baseType: !2247)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !2186, file: !2061, line: 311, baseType: !2257, size: 32, offset: 192)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_status", file: !2061, line: 283, baseType: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!125, !2113, !208, !2261}
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_status", file: !2061, line: 229, size: 256, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !2262, file: !2061, line: 230, baseType: !153, size: 8)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2262, file: !2061, line: 231, baseType: !2060, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "pending_length", scope: !2262, file: !2061, line: 232, baseType: !208, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2262, file: !2061, line: 233, baseType: !208, size: 32, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "write_position", scope: !2262, file: !2061, line: 234, baseType: !208, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "read_position", scope: !2262, file: !2061, line: 235, baseType: !208, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "total_copied", scope: !2262, file: !2061, line: 236, baseType: !2271, size: 64, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2272)
!2272 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "get_attribute", scope: !2186, file: !2061, line: 312, baseType: !2274, size: 32, offset: 224)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_attribute", file: !2061, line: 286, baseType: !2275)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{!125, !2113, !208, !2278}
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "chan_filter", scope: !2186, file: !2061, line: 313, baseType: !2280, size: 32, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_chan_filter", file: !2061, line: 301, baseType: !2281)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!153, !2113, !125, !124}
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_context", file: !2061, line: 249, size: 96, elements: !2286)
!2286 = !{!2287, !2288, !2289}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2285, file: !2061, line: 250, baseType: !1731, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channels", scope: !2285, file: !2061, line: 251, baseType: !125, size: 32, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "atomic", scope: !2285, file: !2061, line: 252, baseType: !2290, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !2292, line: 22, baseType: !389)
!2292 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !551, line: 267, baseType: !2295)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 259, size: 2560, elements: !2296)
!2296 = !{!2297, !2307, !2308, !2335, !2336, !2354, !2355}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !2295, file: !551, line: 260, baseType: !2298, size: 8)
!2298 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2299)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRLA_Type", file: !551, line: 50, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 44, size: 8, elements: !2301)
!2301 = !{!2302, !2306}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2300, file: !551, line: 48, baseType: !2303, size: 8)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2300, file: !551, line: 45, size: 8, elements: !2304)
!2304 = !{!2305}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2303, file: !551, line: 46, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2300, file: !551, line: 49, baseType: !150, size: 8)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2295, file: !551, line: 261, baseType: !565, size: 24, offset: 8)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !2295, file: !551, line: 262, baseType: !2309, size: 32, offset: 32)
!2309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2311)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_SYNCBUSY_Type", file: !551, line: 86, baseType: !2312)
!2312 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 62, size: 32, elements: !2313)
!2313 = !{!2314, !2330, !2334}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2312, file: !551, line: 79, baseType: !2315, size: 32)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2312, file: !551, line: 63, size: 32, elements: !2316)
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2315, file: !551, line: 64, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL0", scope: !2315, file: !551, line: 66, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL1", scope: !2315, file: !551, line: 67, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL2", scope: !2315, file: !551, line: 68, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL3", scope: !2315, file: !551, line: 69, baseType: !208, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL4", scope: !2315, file: !551, line: 70, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL5", scope: !2315, file: !551, line: 71, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL6", scope: !2315, file: !551, line: 72, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL7", scope: !2315, file: !551, line: 73, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL8", scope: !2315, file: !551, line: 74, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL9", scope: !2315, file: !551, line: 75, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL10", scope: !2315, file: !551, line: 76, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL11", scope: !2315, file: !551, line: 77, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2312, file: !551, line: 84, baseType: !2331, size: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2312, file: !551, line: 80, size: 32, elements: !2332)
!2332 = !{!2333}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !2331, file: !551, line: 82, baseType: !208, size: 12, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2312, file: !551, line: 85, baseType: !208, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2295, file: !551, line: 263, baseType: !596, size: 192, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !2295, file: !551, line: 264, baseType: !2337, size: 384, offset: 256)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2338, size: 384, elements: !364)
!2338 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2339)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !551, line: 163, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 149, size: 32, elements: !2341)
!2341 = !{!2342, !2353}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2340, file: !551, line: 161, baseType: !2343, size: 32)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2340, file: !551, line: 150, size: 32, elements: !2344)
!2344 = !{!2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !2343, file: !551, line: 151, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !2343, file: !551, line: 153, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !2343, file: !551, line: 154, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !2343, file: !551, line: 155, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !2343, file: !551, line: 156, baseType: !208, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !2343, file: !551, line: 157, baseType: !208, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2343, file: !551, line: 158, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !2343, file: !551, line: 160, baseType: !208, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2340, file: !551, line: 162, baseType: !208, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2295, file: !551, line: 265, baseType: !618, size: 384, offset: 640)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "PCHCTRL", scope: !2295, file: !551, line: 266, baseType: !2356, size: 1536, offset: 1024)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2357, size: 1536, elements: !619)
!2357 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2358)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_PCHCTRL_Type", file: !551, line: 218, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !551, line: 209, size: 32, elements: !2360)
!2360 = !{!2361, !2367}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2359, file: !551, line: 216, baseType: !2362, size: 32)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2359, file: !551, line: 210, size: 32, elements: !2363)
!2363 = !{!2364, !2365, !2366}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !2362, file: !551, line: 211, baseType: !208, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "CHEN", scope: !2362, file: !551, line: 213, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !2362, file: !551, line: 214, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2359, file: !551, line: 217, baseType: !208, size: 32)
!2368 = !{!2369, !2373, !2375, !2382, !2389, !2055, !2391, !2402, !2404, !2406, !2408, !2427, !2430, !2433}
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !2057, file: !2371, line: 1293, type: !2372, isLocal: false, isDefinition: true, align: 16)
!2371 = !DIFile(filename: "zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !2057, file: !2371, line: 1293, type: !2114, isLocal: false, isDefinition: true, align: 32)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !2057, file: !2371, line: 1293, type: !2377, isLocal: true, isDefinition: true, align: 32)
!2377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !952, line: 51, size: 64, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2378, file: !952, line: 60, baseType: !2133, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2378, file: !952, line: 65, baseType: !2113, size: 32, offset: 32)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "uart_sam0_data_0", scope: !2057, file: !2371, line: 1293, type: !2384, isLocal: true, isDefinition: true)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_data", file: !2371, line: 60, size: 128, elements: !2385)
!2385 = !{!2386, !2387, !2388}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "config_cache", scope: !2384, file: !2371, line: 61, baseType: !2142, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2384, file: !2371, line: 63, baseType: !2180, size: 32, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !2384, file: !2371, line: 64, baseType: !124, size: 32, offset: 96)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !2057, file: !2371, line: 1293, type: !2122, isLocal: true, isDefinition: true, align: 8)
!2391 = !DIGlobalVariableExpression(var: !2392, expr: !DIExpression())
!2392 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_0", scope: !2393, file: !2371, line: 1293, type: !2396, isLocal: true, isDefinition: true, align: 32)
!2393 = distinct !DISubprogram(name: "uart_sam0_irq_config_0", scope: !2371, file: !2371, line: 1293, type: !2164, scopeLine: 1293, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !2394)
!2394 = !{!2395}
!2395 = !DILocalVariable(name: "dev", arg: 1, scope: !2393, file: !2371, line: 1293, type: !2113)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2396, file: !10, line: 55, baseType: !1731, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2396, file: !10, line: 57, baseType: !1731, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2396, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2396, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_1", scope: !2393, file: !2371, line: 1293, type: !2396, isLocal: true, isDefinition: true, align: 32)
!2404 = !DIGlobalVariableExpression(var: !2405, expr: !DIExpression())
!2405 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_2", scope: !2393, file: !2371, line: 1293, type: !2396, isLocal: true, isDefinition: true, align: 32)
!2406 = !DIGlobalVariableExpression(var: !2407, expr: !DIExpression())
!2407 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_3", scope: !2393, file: !2371, line: 1293, type: !2396, isLocal: true, isDefinition: true, align: 32)
!2408 = !DIGlobalVariableExpression(var: !2409, expr: !DIExpression())
!2409 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !2057, file: !2371, line: 1293, type: !2410, isLocal: true, isDefinition: true)
!2410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2411)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2412, line: 60, size: 64, elements: !2413)
!2412 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2413 = !{!2414, !2426}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2411, file: !2412, line: 69, baseType: !2415, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2417)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2412, line: 50, size: 64, elements: !2418)
!2418 = !{!2419, !2424, !2425}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2417, file: !2412, line: 52, baseType: !2420, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2422)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2423, line: 32, baseType: !208)
!2423 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2417, file: !2412, line: 54, baseType: !150, size: 8, offset: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2417, file: !2412, line: 56, baseType: !150, size: 8, offset: 40)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2411, file: !2412, line: 71, baseType: !150, size: 8, offset: 32)
!2427 = !DIGlobalVariableExpression(var: !2428, expr: !DIExpression())
!2428 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !2057, file: !2371, line: 1293, type: !2429, isLocal: true, isDefinition: true)
!2429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2416, size: 64, elements: !1153)
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !2057, file: !2371, line: 1293, type: !2432, isLocal: true, isDefinition: true)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2421, size: 64, elements: !807)
!2433 = !DIGlobalVariableExpression(var: !2434, expr: !DIExpression())
!2434 = distinct !DIGlobalVariable(name: "uart_sam0_driver_api", scope: !2057, file: !2371, line: 1160, type: !2106, isLocal: true, isDefinition: true)
!2435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2436)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_cfg", file: !2371, line: 33, size: 288, elements: !2437)
!2437 = !{!2438, !2665, !2666, !2667, !2668, !2670, !2671, !2672, !2673}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2436, file: !2371, line: 34, baseType: !2439, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "SercomUsart", file: !2441, line: 1666, baseType: !2442)
!2441 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/sercom.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2441, line: 1644, size: 416, elements: !2443)
!2443 = !{!2444, !2468, !2486, !2502, !2526, !2536, !2538, !2554, !2555, !2571, !2572, !2588, !2589, !2606, !2621, !2628, !2629, !2640, !2644, !2654, !2655}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !2442, file: !2441, line: 1645, baseType: !2445, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2446)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLA_Type", file: !2441, line: 236, baseType: !2447)
!2447 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 213, size: 32, elements: !2448)
!2448 = !{!2449, !2467}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2447, file: !2441, line: 234, baseType: !2450, size: 32)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2447, file: !2441, line: 214, size: 32, elements: !2451)
!2451 = !{!2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2450, file: !2441, line: 215, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2450, file: !2441, line: 216, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !2450, file: !2441, line: 217, baseType: !208, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2450, file: !2441, line: 219, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "IBON", scope: !2450, file: !2441, line: 220, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "TXINV", scope: !2450, file: !2441, line: 221, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "RXINV", scope: !2450, file: !2441, line: 222, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPR", scope: !2450, file: !2441, line: 224, baseType: !208, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "TXPO", scope: !2450, file: !2441, line: 225, baseType: !208, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "RXPO", scope: !2450, file: !2441, line: 227, baseType: !208, size: 2, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPA", scope: !2450, file: !2441, line: 228, baseType: !208, size: 2, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "FORM", scope: !2450, file: !2441, line: 229, baseType: !208, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "CMODE", scope: !2450, file: !2441, line: 230, baseType: !208, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "CPOL", scope: !2450, file: !2441, line: 231, baseType: !208, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "DORD", scope: !2450, file: !2441, line: 232, baseType: !208, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2447, file: !2441, line: 235, baseType: !208, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2442, file: !2441, line: 1646, baseType: !2469, size: 32, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2470)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLB_Type", file: !2441, line: 407, baseType: !2471)
!2471 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 388, size: 32, elements: !2472)
!2472 = !{!2473, !2485}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2471, file: !2441, line: 405, baseType: !2474, size: 32)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2471, file: !2441, line: 389, size: 32, elements: !2475)
!2475 = !{!2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "CHSIZE", scope: !2474, file: !2441, line: 390, baseType: !208, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "SBMODE", scope: !2474, file: !2441, line: 392, baseType: !208, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "COLDEN", scope: !2474, file: !2441, line: 394, baseType: !208, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SFDE", scope: !2474, file: !2441, line: 395, baseType: !208, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ENC", scope: !2474, file: !2441, line: 396, baseType: !208, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "PMODE", scope: !2474, file: !2441, line: 398, baseType: !208, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "TXEN", scope: !2474, file: !2441, line: 400, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "RXEN", scope: !2474, file: !2441, line: 401, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "LINCMD", scope: !2474, file: !2441, line: 403, baseType: !208, size: 2, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2471, file: !2441, line: 406, baseType: !208, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLC", scope: !2442, file: !2441, line: 1647, baseType: !2487, size: 32, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2488)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLC_Type", file: !2441, line: 518, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 502, size: 32, elements: !2490)
!2490 = !{!2491, !2501}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2489, file: !2441, line: 516, baseType: !2492, size: 32)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2489, file: !2441, line: 503, size: 32, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2497, !2498, !2499, !2500}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "GTIME", scope: !2492, file: !2441, line: 504, baseType: !208, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "BRKLEN", scope: !2492, file: !2441, line: 506, baseType: !208, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "HDRDLY", scope: !2492, file: !2441, line: 507, baseType: !208, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "INACK", scope: !2492, file: !2441, line: 509, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "DSNACK", scope: !2492, file: !2441, line: 510, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "MAXITER", scope: !2492, file: !2441, line: 512, baseType: !208, size: 3, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "DATA32B", scope: !2492, file: !2441, line: 514, baseType: !208, size: 2, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2489, file: !2441, line: 517, baseType: !208, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2442, file: !2441, line: 1648, baseType: !2503, size: 16, offset: 96)
!2503 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2504)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_BAUD_Type", file: !2441, line: 611, baseType: !2505)
!2505 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 595, size: 16, elements: !2506)
!2506 = !{!2507, !2511, !2516, !2521, !2525}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2505, file: !2441, line: 598, baseType: !2508, size: 16)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2441, line: 596, size: 16, elements: !2509)
!2509 = !{!2510}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2508, file: !2441, line: 597, baseType: !227, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "FRAC", scope: !2505, file: !2441, line: 602, baseType: !2512, size: 16)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2441, line: 599, size: 16, elements: !2513)
!2513 = !{!2514, !2515}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2512, file: !2441, line: 600, baseType: !227, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2512, file: !2441, line: 601, baseType: !227, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "FRACFP", scope: !2505, file: !2441, line: 606, baseType: !2517, size: 16)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2441, line: 603, size: 16, elements: !2518)
!2518 = !{!2519, !2520}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2517, file: !2441, line: 604, baseType: !227, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2517, file: !2441, line: 605, baseType: !227, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "USARTFP", scope: !2505, file: !2441, line: 609, baseType: !2522, size: 16)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2441, line: 607, size: 16, elements: !2523)
!2523 = !{!2524}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2522, file: !2441, line: 608, baseType: !227, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2505, file: !2441, line: 610, baseType: !227, size: 16)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2442, file: !2441, line: 1649, baseType: !2527, size: 8, offset: 112)
!2527 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2528)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_RXPL_Type", file: !2441, line: 653, baseType: !2529)
!2529 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 648, size: 8, elements: !2530)
!2530 = !{!2531, !2535}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2529, file: !2441, line: 651, baseType: !2532, size: 8)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2529, file: !2441, line: 649, size: 8, elements: !2533)
!2533 = !{!2534}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2532, file: !2441, line: 650, baseType: !150, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2529, file: !2441, line: 652, baseType: !150, size: 8)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2442, file: !2441, line: 1650, baseType: !2537, size: 40, offset: 120)
!2537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 40, elements: !1667)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2442, file: !2441, line: 1651, baseType: !2539, size: 8, offset: 160)
!2539 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2540)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENCLR_Type", file: !2441, line: 759, baseType: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 747, size: 8, elements: !2542)
!2542 = !{!2543, !2553}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2541, file: !2441, line: 757, baseType: !2544, size: 8)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2541, file: !2441, line: 748, size: 8, elements: !2545)
!2545 = !{!2546, !2547, !2548, !2549, !2550, !2551, !2552}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2544, file: !2441, line: 749, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2544, file: !2441, line: 750, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2544, file: !2441, line: 751, baseType: !150, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2544, file: !2441, line: 752, baseType: !150, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2544, file: !2441, line: 753, baseType: !150, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2544, file: !2441, line: 754, baseType: !150, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2544, file: !2441, line: 756, baseType: !150, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2541, file: !2441, line: 758, baseType: !150, size: 8)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2442, file: !2441, line: 1652, baseType: !1413, size: 8, offset: 168)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2442, file: !2441, line: 1653, baseType: !2556, size: 8, offset: 176)
!2556 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2557)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENSET_Type", file: !2441, line: 876, baseType: !2558)
!2558 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 864, size: 8, elements: !2559)
!2559 = !{!2560, !2570}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2558, file: !2441, line: 874, baseType: !2561, size: 8)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2558, file: !2441, line: 865, size: 8, elements: !2562)
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2561, file: !2441, line: 866, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2561, file: !2441, line: 867, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2561, file: !2441, line: 868, baseType: !150, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2561, file: !2441, line: 869, baseType: !150, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2561, file: !2441, line: 870, baseType: !150, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2561, file: !2441, line: 871, baseType: !150, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2561, file: !2441, line: 873, baseType: !150, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2558, file: !2441, line: 875, baseType: !150, size: 8)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2442, file: !2441, line: 1654, baseType: !1413, size: 8, offset: 184)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !2442, file: !2441, line: 1655, baseType: !2573, size: 8, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2574)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTFLAG_Type", file: !2441, line: 993, baseType: !2575)
!2575 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 981, size: 8, elements: !2576)
!2576 = !{!2577, !2587}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2575, file: !2441, line: 991, baseType: !2578, size: 8)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2575, file: !2441, line: 982, size: 8, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2578, file: !2441, line: 983, baseType: !485, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2578, file: !2441, line: 984, baseType: !485, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2578, file: !2441, line: 985, baseType: !485, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2578, file: !2441, line: 986, baseType: !485, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2578, file: !2441, line: 987, baseType: !485, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2578, file: !2441, line: 988, baseType: !485, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2578, file: !2441, line: 990, baseType: !485, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2575, file: !2441, line: 992, baseType: !150, size: 8)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2442, file: !2441, line: 1656, baseType: !1413, size: 8, offset: 200)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !2442, file: !2441, line: 1657, baseType: !2590, size: 16, offset: 208)
!2590 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2591)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_STATUS_Type", file: !2441, line: 1144, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 1131, size: 16, elements: !2593)
!2593 = !{!2594, !2605}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2592, file: !2441, line: 1142, baseType: !2595, size: 16)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2592, file: !2441, line: 1132, size: 16, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "PERR", scope: !2595, file: !2441, line: 1133, baseType: !227, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "FERR", scope: !2595, file: !2441, line: 1134, baseType: !227, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "BUFOVF", scope: !2595, file: !2441, line: 1135, baseType: !227, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CTS", scope: !2595, file: !2441, line: 1136, baseType: !227, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ISF", scope: !2595, file: !2441, line: 1137, baseType: !227, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "COLL", scope: !2595, file: !2441, line: 1138, baseType: !227, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "TXE", scope: !2595, file: !2441, line: 1139, baseType: !227, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ITER", scope: !2595, file: !2441, line: 1140, baseType: !227, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2592, file: !2441, line: 1143, baseType: !227, size: 16)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !2442, file: !2441, line: 1658, baseType: !2607, size: 32, offset: 224)
!2607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2608)
!2608 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2609)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_SYNCBUSY_Type", file: !2441, line: 1261, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 1251, size: 32, elements: !2611)
!2611 = !{!2612, !2620}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2610, file: !2441, line: 1259, baseType: !2613, size: 32)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2610, file: !2441, line: 1252, size: 32, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2613, file: !2441, line: 1253, baseType: !208, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2613, file: !2441, line: 1254, baseType: !208, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2613, file: !2441, line: 1255, baseType: !208, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "RXERRCNT", scope: !2613, file: !2441, line: 1256, baseType: !208, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "LENGTH", scope: !2613, file: !2441, line: 1257, baseType: !208, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2610, file: !2441, line: 1260, baseType: !208, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RXERRCNT", scope: !2442, file: !2441, line: 1659, baseType: !2622, size: 8, offset: 256)
!2622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2623)
!2623 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2624)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_RXERRCNT_Type", file: !2441, line: 1283, baseType: !2625)
!2625 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 1281, size: 8, elements: !2626)
!2626 = !{!2627}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2625, file: !2441, line: 1282, baseType: !150, size: 8)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !2442, file: !2441, line: 1660, baseType: !1413, size: 8, offset: 264)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "LENGTH", scope: !2442, file: !2441, line: 1661, baseType: !2630, size: 16, offset: 272)
!2630 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2631)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_LENGTH_Type", file: !2441, line: 1343, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 1336, size: 16, elements: !2633)
!2633 = !{!2634, !2639}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2632, file: !2441, line: 1341, baseType: !2635, size: 16)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2632, file: !2441, line: 1337, size: 16, elements: !2636)
!2636 = !{!2637, !2638}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "LEN", scope: !2635, file: !2441, line: 1338, baseType: !227, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "LENEN", scope: !2635, file: !2441, line: 1339, baseType: !227, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2632, file: !2441, line: 1342, baseType: !227, size: 16)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !2442, file: !2441, line: 1662, baseType: !2641, size: 32, offset: 288)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 32, elements: !2642)
!2642 = !{!2643}
!2643 = !DISubrange(count: 4)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2442, file: !2441, line: 1663, baseType: !2645, size: 32, offset: 320)
!2645 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2646)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DATA_Type", file: !2441, line: 1506, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 1501, size: 32, elements: !2648)
!2648 = !{!2649, !2653}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2647, file: !2441, line: 1504, baseType: !2650, size: 32)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2647, file: !2441, line: 1502, size: 32, elements: !2651)
!2651 = !{!2652}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2650, file: !2441, line: 1503, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2647, file: !2441, line: 1505, baseType: !208, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !2442, file: !2441, line: 1664, baseType: !2641, size: 32, offset: 352)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "DBGCTRL", scope: !2442, file: !2441, line: 1665, baseType: !2656, size: 8, offset: 384)
!2656 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2657)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DBGCTRL_Type", file: !2441, line: 1561, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2441, line: 1555, size: 8, elements: !2659)
!2659 = !{!2660, !2664}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2658, file: !2441, line: 1559, baseType: !2661, size: 8)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2658, file: !2441, line: 1556, size: 8, elements: !2662)
!2662 = !{!2663}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "DBGSTOP", scope: !2661, file: !2441, line: 1557, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2658, file: !2441, line: 1560, baseType: !150, size: 8)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2436, file: !2371, line: 35, baseType: !208, size: 32, offset: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !2436, file: !2371, line: 36, baseType: !208, size: 32, offset: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "collision_detect", scope: !2436, file: !2371, line: 37, baseType: !153, size: 8, offset: 96)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "mclk", scope: !2436, file: !2371, line: 39, baseType: !2669, size: 32, offset: 128)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "mclk_mask", scope: !2436, file: !2371, line: 40, baseType: !208, size: 32, offset: 160)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "gclk_core_id", scope: !2436, file: !2371, line: 41, baseType: !227, size: 16, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !2436, file: !2371, line: 47, baseType: !2163, size: 32, offset: 224)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !2436, file: !2371, line: 56, baseType: !2674, size: 32, offset: 256)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2675 = !DIGlobalVariableExpression(var: !2676, expr: !DIExpression())
!2676 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2677, file: !2875, line: 65, type: !727, isLocal: true, isDefinition: true)
!2677 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2678, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2679, retainedTypes: !2803, globals: !2872, splitDebugInlining: false, nameTableKind: None)
!2678 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!2679 = !{!2680}
!2680 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !484, line: 91, baseType: !125, size: 32, elements: !2681)
!2681 = !{!2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802}
!2682 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!2683 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!2684 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!2685 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!2686 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!2687 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!2688 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!2689 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!2690 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!2691 = !DIEnumerator(name: "PM_IRQn", value: 0)
!2692 = !DIEnumerator(name: "MCLK_IRQn", value: 1)
!2693 = !DIEnumerator(name: "OSCCTRL_0_IRQn", value: 2)
!2694 = !DIEnumerator(name: "OSCCTRL_1_IRQn", value: 3)
!2695 = !DIEnumerator(name: "OSCCTRL_2_IRQn", value: 4)
!2696 = !DIEnumerator(name: "OSCCTRL_3_IRQn", value: 5)
!2697 = !DIEnumerator(name: "OSCCTRL_4_IRQn", value: 6)
!2698 = !DIEnumerator(name: "OSC32KCTRL_IRQn", value: 7)
!2699 = !DIEnumerator(name: "SUPC_0_IRQn", value: 8)
!2700 = !DIEnumerator(name: "SUPC_1_IRQn", value: 9)
!2701 = !DIEnumerator(name: "WDT_IRQn", value: 10)
!2702 = !DIEnumerator(name: "RTC_IRQn", value: 11)
!2703 = !DIEnumerator(name: "EIC_0_IRQn", value: 12)
!2704 = !DIEnumerator(name: "EIC_1_IRQn", value: 13)
!2705 = !DIEnumerator(name: "EIC_2_IRQn", value: 14)
!2706 = !DIEnumerator(name: "EIC_3_IRQn", value: 15)
!2707 = !DIEnumerator(name: "EIC_4_IRQn", value: 16)
!2708 = !DIEnumerator(name: "EIC_5_IRQn", value: 17)
!2709 = !DIEnumerator(name: "EIC_6_IRQn", value: 18)
!2710 = !DIEnumerator(name: "EIC_7_IRQn", value: 19)
!2711 = !DIEnumerator(name: "EIC_8_IRQn", value: 20)
!2712 = !DIEnumerator(name: "EIC_9_IRQn", value: 21)
!2713 = !DIEnumerator(name: "EIC_10_IRQn", value: 22)
!2714 = !DIEnumerator(name: "EIC_11_IRQn", value: 23)
!2715 = !DIEnumerator(name: "EIC_12_IRQn", value: 24)
!2716 = !DIEnumerator(name: "EIC_13_IRQn", value: 25)
!2717 = !DIEnumerator(name: "EIC_14_IRQn", value: 26)
!2718 = !DIEnumerator(name: "EIC_15_IRQn", value: 27)
!2719 = !DIEnumerator(name: "FREQM_IRQn", value: 28)
!2720 = !DIEnumerator(name: "NVMCTRL_0_IRQn", value: 29)
!2721 = !DIEnumerator(name: "NVMCTRL_1_IRQn", value: 30)
!2722 = !DIEnumerator(name: "DMAC_0_IRQn", value: 31)
!2723 = !DIEnumerator(name: "DMAC_1_IRQn", value: 32)
!2724 = !DIEnumerator(name: "DMAC_2_IRQn", value: 33)
!2725 = !DIEnumerator(name: "DMAC_3_IRQn", value: 34)
!2726 = !DIEnumerator(name: "DMAC_4_IRQn", value: 35)
!2727 = !DIEnumerator(name: "EVSYS_0_IRQn", value: 36)
!2728 = !DIEnumerator(name: "EVSYS_1_IRQn", value: 37)
!2729 = !DIEnumerator(name: "EVSYS_2_IRQn", value: 38)
!2730 = !DIEnumerator(name: "EVSYS_3_IRQn", value: 39)
!2731 = !DIEnumerator(name: "EVSYS_4_IRQn", value: 40)
!2732 = !DIEnumerator(name: "PAC_IRQn", value: 41)
!2733 = !DIEnumerator(name: "RAMECC_IRQn", value: 45)
!2734 = !DIEnumerator(name: "SERCOM0_0_IRQn", value: 46)
!2735 = !DIEnumerator(name: "SERCOM0_1_IRQn", value: 47)
!2736 = !DIEnumerator(name: "SERCOM0_2_IRQn", value: 48)
!2737 = !DIEnumerator(name: "SERCOM0_3_IRQn", value: 49)
!2738 = !DIEnumerator(name: "SERCOM1_0_IRQn", value: 50)
!2739 = !DIEnumerator(name: "SERCOM1_1_IRQn", value: 51)
!2740 = !DIEnumerator(name: "SERCOM1_2_IRQn", value: 52)
!2741 = !DIEnumerator(name: "SERCOM1_3_IRQn", value: 53)
!2742 = !DIEnumerator(name: "SERCOM2_0_IRQn", value: 54)
!2743 = !DIEnumerator(name: "SERCOM2_1_IRQn", value: 55)
!2744 = !DIEnumerator(name: "SERCOM2_2_IRQn", value: 56)
!2745 = !DIEnumerator(name: "SERCOM2_3_IRQn", value: 57)
!2746 = !DIEnumerator(name: "SERCOM3_0_IRQn", value: 58)
!2747 = !DIEnumerator(name: "SERCOM3_1_IRQn", value: 59)
!2748 = !DIEnumerator(name: "SERCOM3_2_IRQn", value: 60)
!2749 = !DIEnumerator(name: "SERCOM3_3_IRQn", value: 61)
!2750 = !DIEnumerator(name: "SERCOM4_0_IRQn", value: 62)
!2751 = !DIEnumerator(name: "SERCOM4_1_IRQn", value: 63)
!2752 = !DIEnumerator(name: "SERCOM4_2_IRQn", value: 64)
!2753 = !DIEnumerator(name: "SERCOM4_3_IRQn", value: 65)
!2754 = !DIEnumerator(name: "SERCOM5_0_IRQn", value: 66)
!2755 = !DIEnumerator(name: "SERCOM5_1_IRQn", value: 67)
!2756 = !DIEnumerator(name: "SERCOM5_2_IRQn", value: 68)
!2757 = !DIEnumerator(name: "SERCOM5_3_IRQn", value: 69)
!2758 = !DIEnumerator(name: "USB_0_IRQn", value: 80)
!2759 = !DIEnumerator(name: "USB_1_IRQn", value: 81)
!2760 = !DIEnumerator(name: "USB_2_IRQn", value: 82)
!2761 = !DIEnumerator(name: "USB_3_IRQn", value: 83)
!2762 = !DIEnumerator(name: "TCC0_0_IRQn", value: 85)
!2763 = !DIEnumerator(name: "TCC0_1_IRQn", value: 86)
!2764 = !DIEnumerator(name: "TCC0_2_IRQn", value: 87)
!2765 = !DIEnumerator(name: "TCC0_3_IRQn", value: 88)
!2766 = !DIEnumerator(name: "TCC0_4_IRQn", value: 89)
!2767 = !DIEnumerator(name: "TCC0_5_IRQn", value: 90)
!2768 = !DIEnumerator(name: "TCC0_6_IRQn", value: 91)
!2769 = !DIEnumerator(name: "TCC1_0_IRQn", value: 92)
!2770 = !DIEnumerator(name: "TCC1_1_IRQn", value: 93)
!2771 = !DIEnumerator(name: "TCC1_2_IRQn", value: 94)
!2772 = !DIEnumerator(name: "TCC1_3_IRQn", value: 95)
!2773 = !DIEnumerator(name: "TCC1_4_IRQn", value: 96)
!2774 = !DIEnumerator(name: "TCC2_0_IRQn", value: 97)
!2775 = !DIEnumerator(name: "TCC2_1_IRQn", value: 98)
!2776 = !DIEnumerator(name: "TCC2_2_IRQn", value: 99)
!2777 = !DIEnumerator(name: "TCC2_3_IRQn", value: 100)
!2778 = !DIEnumerator(name: "TC0_IRQn", value: 107)
!2779 = !DIEnumerator(name: "TC1_IRQn", value: 108)
!2780 = !DIEnumerator(name: "TC2_IRQn", value: 109)
!2781 = !DIEnumerator(name: "TC3_IRQn", value: 110)
!2782 = !DIEnumerator(name: "PDEC_0_IRQn", value: 115)
!2783 = !DIEnumerator(name: "PDEC_1_IRQn", value: 116)
!2784 = !DIEnumerator(name: "PDEC_2_IRQn", value: 117)
!2785 = !DIEnumerator(name: "ADC0_0_IRQn", value: 118)
!2786 = !DIEnumerator(name: "ADC0_1_IRQn", value: 119)
!2787 = !DIEnumerator(name: "ADC1_0_IRQn", value: 120)
!2788 = !DIEnumerator(name: "ADC1_1_IRQn", value: 121)
!2789 = !DIEnumerator(name: "AC_IRQn", value: 122)
!2790 = !DIEnumerator(name: "DAC_0_IRQn", value: 123)
!2791 = !DIEnumerator(name: "DAC_1_IRQn", value: 124)
!2792 = !DIEnumerator(name: "DAC_2_IRQn", value: 125)
!2793 = !DIEnumerator(name: "DAC_3_IRQn", value: 126)
!2794 = !DIEnumerator(name: "DAC_4_IRQn", value: 127)
!2795 = !DIEnumerator(name: "PCC_IRQn", value: 129)
!2796 = !DIEnumerator(name: "AES_IRQn", value: 130)
!2797 = !DIEnumerator(name: "TRNG_IRQn", value: 131)
!2798 = !DIEnumerator(name: "ICM_IRQn", value: 132)
!2799 = !DIEnumerator(name: "PUKCC_IRQn", value: 133)
!2800 = !DIEnumerator(name: "QSPI_IRQn", value: 134)
!2801 = !DIEnumerator(name: "SDHC0_IRQn", value: 135)
!2802 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 137)
!2803 = !{!2804, !2806, !1731, !150, !208, !2814, !2842}
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !2805, line: 46, baseType: !1085)
!2805 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1167, line: 770, baseType: !2808)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 764, size: 128, elements: !2809)
!2809 = !{!2810, !2811, !2812, !2813}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2808, file: !1167, line: 766, baseType: !727, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2808, file: !1167, line: 767, baseType: !727, size: 32, offset: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2808, file: !1167, line: 768, baseType: !727, size: 32, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2808, file: !1167, line: 769, baseType: !726, size: 32, offset: 96)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1167, line: 426, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 411, size: 28704, elements: !2817)
!2817 = !{!2818, !2820, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2833, !2837, !2841}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2816, file: !1167, line: 413, baseType: !2819, size: 256)
!2819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !727, size: 256, elements: !337)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2816, file: !1167, line: 414, baseType: !2821, size: 768, offset: 256)
!2821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !597)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2816, file: !1167, line: 415, baseType: !2819, size: 256, offset: 1024)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2816, file: !1167, line: 416, baseType: !2821, size: 768, offset: 1280)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2816, file: !1167, line: 417, baseType: !2819, size: 256, offset: 2048)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2816, file: !1167, line: 418, baseType: !2821, size: 768, offset: 2304)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2816, file: !1167, line: 419, baseType: !2819, size: 256, offset: 3072)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2816, file: !1167, line: 420, baseType: !2821, size: 768, offset: 3328)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2816, file: !1167, line: 421, baseType: !2819, size: 256, offset: 4096)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2816, file: !1167, line: 422, baseType: !2830, size: 1792, offset: 4352)
!2830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !2831)
!2831 = !{!2832}
!2832 = !DISubrange(count: 56)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2816, file: !1167, line: 423, baseType: !2834, size: 1920, offset: 6144)
!2834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 1920, elements: !2835)
!2835 = !{!2836}
!2836 = !DISubrange(count: 240)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2816, file: !1167, line: 424, baseType: !2838, size: 20608, offset: 8064)
!2838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !2839)
!2839 = !{!2840}
!2840 = !DISubrange(count: 644)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2816, file: !1167, line: 425, baseType: !727, size: 32, offset: 28672)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2863, !2864, !2865, !2867, !2869, !2871}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2844, file: !1167, line: 447, baseType: !726, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2844, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2844, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2844, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2844, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2844, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2844, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!2853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 96, elements: !364)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2844, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2844, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2844, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2844, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2844, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2844, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2844, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2844, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!2862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 64, elements: !807)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2844, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2844, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2844, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!2866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 128, elements: !2642)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2844, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!2868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 160, elements: !1667)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2844, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!2870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1667)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2844, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!2872 = !{!2873, !2899, !2902, !2904, !2906, !2675}
!2873 = !DIGlobalVariableExpression(var: !2874, expr: !DIExpression())
!2874 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2677, file: !2875, line: 285, type: !2876, isLocal: true, isDefinition: true, align: 32)
!2875 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !952, line: 51, size: 64, elements: !2878)
!2878 = !{!2879, !2898}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2877, file: !952, line: 60, baseType: !2880, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 32)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!125, !2883}
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2885)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2886)
!2886 = !{!2887, !2888, !2889, !2890, !2896, !2897}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2885, file: !137, line: 380, baseType: !140, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2885, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2885, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2885, file: !137, line: 386, baseType: !2891, size: 32, offset: 96)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2892, file: !137, line: 359, baseType: !150, size: 8)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2892, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2885, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2885, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2877, file: !952, line: 65, baseType: !2883, size: 32, offset: 32)
!2899 = !DIGlobalVariableExpression(var: !2900, expr: !DIExpression())
!2900 = distinct !DIGlobalVariable(name: "lock", scope: !2677, file: !2875, line: 34, type: !2901, isLocal: true, isDefinition: true)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!2902 = !DIGlobalVariableExpression(var: !2903, expr: !DIExpression())
!2903 = distinct !DIGlobalVariable(name: "last_load", scope: !2677, file: !2875, line: 36, type: !208, isLocal: true, isDefinition: true)
!2904 = !DIGlobalVariableExpression(var: !2905, expr: !DIExpression())
!2905 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2677, file: !2875, line: 48, type: !208, isLocal: true, isDefinition: true)
!2906 = !DIGlobalVariableExpression(var: !2907, expr: !DIExpression())
!2907 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2677, file: !2875, line: 54, type: !208, isLocal: true, isDefinition: true)
!2908 = !DIGlobalVariableExpression(var: !2909, expr: !DIExpression())
!2909 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !2910, file: !3088, line: 16, type: !3089, isLocal: true, isDefinition: true)
!2910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2912, globals: !3087, splitDebugInlining: false, nameTableKind: None)
!2911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!2912 = !{!2913}
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2915, line: 402, baseType: !2916)
!2915 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2915, line: 386, size: 1024, elements: !2917)
!2917 = !{!2918, !2928, !2938, !2948, !2958, !2968, !2978, !2988, !2998, !3009, !3019, !3037, !3058, !3070, !3085}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2916, file: !2915, line: 387, baseType: !2919, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2920)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2915, line: 49, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 44, size: 32, elements: !2922)
!2922 = !{!2923, !2927}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2921, file: !2915, line: 47, baseType: !2924, size: 32)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2921, file: !2915, line: 45, size: 32, elements: !2925)
!2925 = !{!2926}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2924, file: !2915, line: 46, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2921, file: !2915, line: 48, baseType: !208, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2916, file: !2915, line: 388, baseType: !2929, size: 32, offset: 32)
!2929 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2930)
!2930 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2915, line: 67, baseType: !2931)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 62, size: 32, elements: !2932)
!2932 = !{!2933, !2937}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2931, file: !2915, line: 65, baseType: !2934, size: 32)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2931, file: !2915, line: 63, size: 32, elements: !2935)
!2935 = !{!2936}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2934, file: !2915, line: 64, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2931, file: !2915, line: 66, baseType: !208, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2916, file: !2915, line: 389, baseType: !2939, size: 32, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2940)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2915, line: 85, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 80, size: 32, elements: !2942)
!2942 = !{!2943, !2947}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2941, file: !2915, line: 83, baseType: !2944, size: 32)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2941, file: !2915, line: 81, size: 32, elements: !2945)
!2945 = !{!2946}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2944, file: !2915, line: 82, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2941, file: !2915, line: 84, baseType: !208, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2916, file: !2915, line: 390, baseType: !2949, size: 32, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2950)
!2950 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2915, line: 103, baseType: !2951)
!2951 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 98, size: 32, elements: !2952)
!2952 = !{!2953, !2957}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2951, file: !2915, line: 101, baseType: !2954, size: 32)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2951, file: !2915, line: 99, size: 32, elements: !2955)
!2955 = !{!2956}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2954, file: !2915, line: 100, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2951, file: !2915, line: 102, baseType: !208, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2916, file: !2915, line: 391, baseType: !2959, size: 32, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2960)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2915, line: 121, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 116, size: 32, elements: !2962)
!2962 = !{!2963, !2967}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2961, file: !2915, line: 119, baseType: !2964, size: 32)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2961, file: !2915, line: 117, size: 32, elements: !2965)
!2965 = !{!2966}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2964, file: !2915, line: 118, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2961, file: !2915, line: 120, baseType: !208, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2916, file: !2915, line: 392, baseType: !2969, size: 32, offset: 160)
!2969 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2970)
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2915, line: 139, baseType: !2971)
!2971 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 134, size: 32, elements: !2972)
!2972 = !{!2973, !2977}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2971, file: !2915, line: 137, baseType: !2974, size: 32)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2971, file: !2915, line: 135, size: 32, elements: !2975)
!2975 = !{!2976}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2974, file: !2915, line: 136, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2971, file: !2915, line: 138, baseType: !208, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2916, file: !2915, line: 393, baseType: !2979, size: 32, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2980)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2915, line: 157, baseType: !2981)
!2981 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 152, size: 32, elements: !2982)
!2982 = !{!2983, !2987}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2981, file: !2915, line: 155, baseType: !2984, size: 32)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2981, file: !2915, line: 153, size: 32, elements: !2985)
!2985 = !{!2986}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2984, file: !2915, line: 154, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2981, file: !2915, line: 156, baseType: !208, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2916, file: !2915, line: 394, baseType: !2989, size: 32, offset: 224)
!2989 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2990)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2915, line: 175, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 170, size: 32, elements: !2992)
!2992 = !{!2993, !2997}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2991, file: !2915, line: 173, baseType: !2994, size: 32)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2991, file: !2915, line: 171, size: 32, elements: !2995)
!2995 = !{!2996}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2994, file: !2915, line: 172, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2991, file: !2915, line: 174, baseType: !208, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2916, file: !2915, line: 395, baseType: !2999, size: 32, offset: 256)
!2999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3000)
!3000 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3001)
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2915, line: 193, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 188, size: 32, elements: !3003)
!3003 = !{!3004, !3008}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3002, file: !2915, line: 191, baseType: !3005, size: 32)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3002, file: !2915, line: 189, size: 32, elements: !3006)
!3006 = !{!3007}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !3005, file: !2915, line: 190, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3002, file: !2915, line: 192, baseType: !208, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2916, file: !2915, line: 396, baseType: !3010, size: 32, offset: 288)
!3010 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3011)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2915, line: 211, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 206, size: 32, elements: !3013)
!3013 = !{!3014, !3018}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3012, file: !2915, line: 209, baseType: !3015, size: 32)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3012, file: !2915, line: 207, size: 32, elements: !3016)
!3016 = !{!3017}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !3015, file: !2915, line: 208, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3012, file: !2915, line: 210, baseType: !208, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !2916, file: !2915, line: 397, baseType: !3020, size: 32, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3021)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2915, line: 240, baseType: !3022)
!3022 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 224, size: 32, elements: !3023)
!3023 = !{!3024, !3036}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3022, file: !2915, line: 238, baseType: !3025, size: 32)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3022, file: !2915, line: 225, size: 32, elements: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !3025, file: !2915, line: 226, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !3025, file: !2915, line: 227, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !3025, file: !2915, line: 228, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !3025, file: !2915, line: 229, baseType: !208, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !3025, file: !2915, line: 231, baseType: !208, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !3025, file: !2915, line: 233, baseType: !208, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !3025, file: !2915, line: 234, baseType: !208, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !3025, file: !2915, line: 236, baseType: !208, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !3025, file: !2915, line: 237, baseType: !208, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3022, file: !2915, line: 239, baseType: !208, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !2916, file: !2915, line: 398, baseType: !3038, size: 32, offset: 352)
!3038 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3039)
!3039 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_EVCTRL_Type", file: !2915, line: 286, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 270, size: 32, elements: !3041)
!3041 = !{!3042, !3057}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3040, file: !2915, line: 284, baseType: !3043, size: 32)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3040, file: !2915, line: 271, size: 32, elements: !3044)
!3044 = !{!3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "PID0", scope: !3043, file: !2915, line: 272, baseType: !208, size: 5, flags: DIFlagBitField, extraData: i64 0)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT0", scope: !3043, file: !2915, line: 273, baseType: !208, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI0", scope: !3043, file: !2915, line: 274, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PID1", scope: !3043, file: !2915, line: 275, baseType: !208, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT1", scope: !3043, file: !2915, line: 276, baseType: !208, size: 2, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI1", scope: !3043, file: !2915, line: 277, baseType: !208, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "PID2", scope: !3043, file: !2915, line: 278, baseType: !208, size: 5, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT2", scope: !3043, file: !2915, line: 279, baseType: !208, size: 2, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI2", scope: !3043, file: !2915, line: 280, baseType: !208, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "PID3", scope: !3043, file: !2915, line: 281, baseType: !208, size: 5, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT3", scope: !3043, file: !2915, line: 282, baseType: !208, size: 2, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI3", scope: !3043, file: !2915, line: 283, baseType: !208, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3040, file: !2915, line: 285, baseType: !208, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2916, file: !2915, line: 399, baseType: !3059, size: 128, offset: 384)
!3059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3060, size: 128, elements: !312)
!3060 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3061)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2915, line: 342, baseType: !3062)
!3062 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 336, size: 8, elements: !3063)
!3063 = !{!3064, !3069}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3062, file: !2915, line: 340, baseType: !3065, size: 8)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3062, file: !2915, line: 337, size: 8, elements: !3066)
!3066 = !{!3067, !3068}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !3065, file: !2915, line: 338, baseType: !150, size: 4, flags: DIFlagBitField, extraData: i64 0)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !3065, file: !2915, line: 339, baseType: !150, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3062, file: !2915, line: 341, baseType: !150, size: 8)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !2916, file: !2915, line: 400, baseType: !3071, size: 256, offset: 512)
!3071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3072, size: 256, elements: !3084)
!3072 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3073)
!3073 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2915, line: 368, baseType: !3074)
!3074 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 358, size: 8, elements: !3075)
!3075 = !{!3076, !3083}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3074, file: !2915, line: 366, baseType: !3077, size: 8)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3074, file: !2915, line: 359, size: 8, elements: !3078)
!3078 = !{!3079, !3080, !3081, !3082}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !3077, file: !2915, line: 360, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !3077, file: !2915, line: 361, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !3077, file: !2915, line: 362, baseType: !150, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !3077, file: !2915, line: 364, baseType: !150, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3074, file: !2915, line: 367, baseType: !150, size: 8)
!3084 = !{!1722}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2916, file: !2915, line: 401, baseType: !3086, size: 256, offset: 768)
!3086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !3084)
!3087 = !{!2908}
!3088 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3090, size: 128, elements: !2642)
!3090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!3091 = !DIGlobalVariableExpression(var: !3092, expr: !DIExpression())
!3092 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !3093, file: !3096, line: 23, type: !1840, isLocal: false, isDefinition: true)
!3093 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3094, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !3095, splitDebugInlining: false, nameTableKind: None)
!3094 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3095 = !{!3091}
!3096 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3097 = !DIGlobalVariableExpression(var: !3098, expr: !DIExpression())
!3098 = distinct !DIGlobalVariable(name: "log_const_os", scope: !3099, file: !3103, line: 37, type: !3357, isLocal: false, isDefinition: true)
!3099 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3100, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3101, retainedTypes: !3110, globals: !3183, splitDebugInlining: false, nameTableKind: None)
!3100 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3101 = !{!3102, !46, !2680}
!3102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !3103, line: 63, baseType: !32, size: 32, elements: !3104)
!3103 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3104 = !{!3105, !3106, !3107, !3108, !3109}
!3105 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!3106 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!3107 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!3108 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!3109 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!3110 = !{!272, !124, !125, !3111, !393, !208, !3141, !1731, !150, !3166}
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3113)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !3114, line: 51, size: 64, elements: !3115)
!3114 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3115 = !{!3116, !3136}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !3113, file: !3114, line: 52, baseType: !3117, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !3114, line: 38, baseType: !3118)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 32)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{!125, !3121, !184, !227}
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3123)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !3124)
!3124 = !{!3125, !3126, !3127, !3128, !3134, !3135}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3123, file: !137, line: 380, baseType: !140, size: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3123, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3123, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3123, file: !137, line: 386, baseType: !3129, size: 32, offset: 96)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 32)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !3131)
!3131 = !{!3132, !3133}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3130, file: !137, line: 359, baseType: !150, size: 8)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3130, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3123, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3123, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !3113, file: !3114, line: 53, baseType: !3137, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !3114, line: 47, baseType: !3138)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 32)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{!125, !3121, !184, !227, !208}
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !3143)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !3144)
!3144 = !{!3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3143, file: !1167, line: 447, baseType: !726, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3143, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3143, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3143, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3143, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3143, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3143, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3143, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3143, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3143, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3143, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3143, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3143, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3143, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3143, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3143, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3143, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3143, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3143, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3143, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3143, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1167, line: 426, baseType: !3168)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 411, size: 28704, elements: !3169)
!3169 = !{!3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3168, file: !1167, line: 413, baseType: !2819, size: 256)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3168, file: !1167, line: 414, baseType: !2821, size: 768, offset: 256)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3168, file: !1167, line: 415, baseType: !2819, size: 256, offset: 1024)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3168, file: !1167, line: 416, baseType: !2821, size: 768, offset: 1280)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3168, file: !1167, line: 417, baseType: !2819, size: 256, offset: 2048)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3168, file: !1167, line: 418, baseType: !2821, size: 768, offset: 2304)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3168, file: !1167, line: 419, baseType: !2819, size: 256, offset: 3072)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3168, file: !1167, line: 420, baseType: !2821, size: 768, offset: 3328)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3168, file: !1167, line: 421, baseType: !2819, size: 256, offset: 4096)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3168, file: !1167, line: 422, baseType: !2830, size: 1792, offset: 4352)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3168, file: !1167, line: 423, baseType: !2834, size: 1920, offset: 6144)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3168, file: !1167, line: 424, baseType: !2838, size: 20608, offset: 8064)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3168, file: !1167, line: 425, baseType: !727, size: 32, offset: 28672)
!3183 = !{!3097, !3184, !3306, !3315, !3317, !3320, !3325, !3327, !3332}
!3184 = !DIGlobalVariableExpression(var: !3185, expr: !DIExpression())
!3185 = distinct !DIGlobalVariable(name: "_kernel", scope: !3099, file: !3103, line: 40, type: !3186, isLocal: false, isDefinition: true)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !1054, line: 158, size: 288, elements: !3187)
!3187 = !{!3188, !3301}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !3186, file: !1054, line: 159, baseType: !3189, size: 192)
!3189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3190, size: 192, elements: !1153)
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !1054, line: 100, size: 192, elements: !3191)
!3191 = !{!3192, !3193, !3194, !3295, !3296, !3297, !3298}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !3190, file: !1054, line: 102, baseType: !208, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !3190, file: !1054, line: 105, baseType: !393, size: 32, offset: 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3190, file: !1054, line: 108, baseType: !3195, size: 32, offset: 64)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 32)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !3197)
!3197 = !{!3198, !3256, !3268, !3269, !3270, !3271, !3277, !3290}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3196, file: !1020, line: 247, baseType: !3199, size: 384)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !3200)
!3200 = !{!3201, !3225, !3232, !3233, !3234, !3243, !3244, !3245}
!3201 = !DIDerivedType(tag: DW_TAG_member, scope: !3199, file: !1020, line: 60, baseType: !3202, size: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3199, file: !1020, line: 60, size: 64, elements: !3203)
!3203 = !{!3204, !3219}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3202, file: !1020, line: 61, baseType: !3205, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !3206)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !3207)
!3207 = !{!3208, !3214}
!3208 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !1030, line: 38, baseType: !3209, size: 32)
!3209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3206, file: !1030, line: 38, size: 32, elements: !3210)
!3210 = !{!3211, !3213}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3209, file: !1030, line: 39, baseType: !3212, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3209, file: !1030, line: 40, baseType: !3212, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !1030, line: 42, baseType: !3215, size: 32, offset: 32)
!3215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3206, file: !1030, line: 42, size: 32, elements: !3216)
!3216 = !{!3217, !3218}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3215, file: !1030, line: 43, baseType: !3212, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3215, file: !1030, line: 44, baseType: !3212, size: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3202, file: !1020, line: 62, baseType: !3220, size: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !3221)
!3221 = !{!3222}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3220, file: !1046, line: 50, baseType: !3223, size: 64)
!3223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3224, size: 64, elements: !807)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3199, file: !1020, line: 68, baseType: !3226, size: 32, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !3228)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !3229)
!3229 = !{!3230}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3228, file: !1054, line: 232, baseType: !3231, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !3206)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3199, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3199, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!3234 = !DIDerivedType(tag: DW_TAG_member, scope: !3199, file: !1020, line: 90, baseType: !3235, size: 16, offset: 112)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3199, file: !1020, line: 90, size: 16, elements: !3236)
!3236 = !{!3237, !3242}
!3237 = !DIDerivedType(tag: DW_TAG_member, scope: !3235, file: !1020, line: 91, baseType: !3238, size: 16)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3235, file: !1020, line: 91, size: 16, elements: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3238, file: !1020, line: 96, baseType: !1068, size: 8)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3238, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3235, file: !1020, line: 100, baseType: !227, size: 16)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3199, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3199, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3199, file: !1020, line: 131, baseType: !3246, size: 192, offset: 192)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !3247)
!3247 = !{!3248, !3249, !3255}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3246, file: !1054, line: 245, baseType: !3205, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3246, file: !1054, line: 246, baseType: !3250, size: 32, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !3251)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 32)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{null, !3254}
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3246, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3196, file: !1020, line: 250, baseType: !3257, size: 288, offset: 384)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !3258)
!3258 = !{!3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3257, file: !1088, line: 26, baseType: !208, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3257, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3257, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3257, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3257, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3257, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3257, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3257, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3257, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3196, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3196, file: !1020, line: 256, baseType: !3227, size: 64, offset: 704)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3196, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3196, file: !1020, line: 300, baseType: !3272, size: 96, offset: 800)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !3273)
!3273 = !{!3274, !3275, !3276}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3272, file: !1020, line: 153, baseType: !22, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3272, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3272, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3196, file: !1020, line: 325, baseType: !3278, size: 32, offset: 896)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 32)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !3280)
!3280 = !{!3281, !3287, !3288}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3279, file: !1111, line: 5074, baseType: !3282, size: 96)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !3283)
!3283 = !{!3284, !3285, !3286}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3282, file: !1115, line: 57, baseType: !1118, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3282, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3282, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3279, file: !1111, line: 5075, baseType: !3227, size: 64, offset: 96)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3279, file: !1111, line: 5076, baseType: !3289, offset: 160)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3196, file: !1020, line: 343, baseType: !3291, size: 64, offset: 928)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !3292)
!3292 = !{!3293, !3294}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3291, file: !1088, line: 63, baseType: !208, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3291, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !3190, file: !1054, line: 111, baseType: !3195, size: 32, offset: 96)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !3190, file: !1054, line: 124, baseType: !125, size: 32, offset: 128)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3190, file: !1054, line: 127, baseType: !150, size: 8, offset: 160)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3190, file: !1054, line: 153, baseType: !3299, offset: 168)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !3300, line: 33, elements: !1126)
!3300 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !3186, file: !1054, line: 170, baseType: !3302, size: 96, offset: 192)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !1054, line: 83, size: 96, elements: !3303)
!3303 = !{!3304, !3305}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3302, file: !1054, line: 86, baseType: !3195, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !3302, file: !1054, line: 90, baseType: !3231, size: 64, offset: 32)
!3306 = !DIGlobalVariableExpression(var: !3307, expr: !DIExpression())
!3307 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !3099, file: !3103, line: 43, type: !3308, isLocal: false, isDefinition: true, align: 64)
!3308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3309, size: 8192, elements: !3313)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !3310, line: 47, size: 8, elements: !3311)
!3310 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3311 = !{!3312}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3309, file: !3310, line: 48, baseType: !142, size: 8)
!3313 = !{!3314}
!3314 = !DISubrange(count: 1024)
!3315 = !DIGlobalVariableExpression(var: !3316, expr: !DIExpression())
!3316 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !3099, file: !3103, line: 44, type: !3196, isLocal: false, isDefinition: true)
!3317 = !DIGlobalVariableExpression(var: !3318, expr: !DIExpression())
!3318 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !3099, file: !3103, line: 48, type: !3319, isLocal: false, isDefinition: true)
!3319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3196, size: 1024, elements: !1153)
!3320 = !DIGlobalVariableExpression(var: !3321, expr: !DIExpression())
!3321 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !3099, file: !3103, line: 86, type: !3322, isLocal: false, isDefinition: true, align: 64)
!3322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3309, size: 16384, elements: !3323)
!3323 = !{!1154, !3324}
!3324 = !DISubrange(count: 2048)
!3325 = !DIGlobalVariableExpression(var: !3326, expr: !DIExpression())
!3326 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !3099, file: !3103, line: 217, type: !153, isLocal: false, isDefinition: true)
!3327 = !DIGlobalVariableExpression(var: !3328, expr: !DIExpression())
!3328 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !3099, file: !3103, line: 50, type: !3329, isLocal: true, isDefinition: true, align: 64)
!3329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3309, size: 2560, elements: !3330)
!3330 = !{!1154, !3331}
!3331 = !DISubrange(count: 320)
!3332 = !DIGlobalVariableExpression(var: !3333, expr: !DIExpression())
!3333 = distinct !DIGlobalVariable(name: "levels", scope: !3334, file: !3103, line: 232, type: !3354, isLocal: true, isDefinition: true)
!3334 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !3103, file: !3103, line: 230, type: !3335, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !3337)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{null, !3102}
!3337 = !{!3338, !3339, !3349, !3353}
!3338 = !DILocalVariable(name: "level", arg: 1, scope: !3334, file: !3103, line: 230, type: !3102)
!3339 = !DILocalVariable(name: "entry", scope: !3334, file: !3103, line: 244, type: !3340)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3342)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !952, line: 51, size: 64, elements: !3343)
!3343 = !{!3344, !3348}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3342, file: !952, line: 60, baseType: !3345, size: 32)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 32)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!125, !3121}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3342, file: !952, line: 65, baseType: !3121, size: 32, offset: 32)
!3349 = !DILocalVariable(name: "dev", scope: !3350, file: !3103, line: 247, type: !3121)
!3350 = distinct !DILexicalBlock(scope: !3351, file: !3103, line: 246, column: 64)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !3103, line: 246, column: 2)
!3352 = distinct !DILexicalBlock(scope: !3334, file: !3103, line: 246, column: 2)
!3353 = !DILocalVariable(name: "rc", scope: !3350, file: !3103, line: 248, type: !125)
!3354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3340, size: 192, elements: !3355)
!3355 = !{!3356}
!3356 = !DISubrange(count: 6)
!3357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3358)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !3359)
!3359 = !{!3360, !3361}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3358, file: !373, line: 17, baseType: !140, size: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3358, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!3362 = !DIGlobalVariableExpression(var: !3363, expr: !DIExpression())
!3363 = distinct !DIGlobalVariable(name: "states_str", scope: !3364, file: !3365, line: 276, type: !3487, isLocal: true, isDefinition: true)
!3364 = distinct !DISubprogram(name: "k_thread_state_str", scope: !3365, file: !3365, line: 271, type: !3366, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !3478)
!3365 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!140, !3368, !393, !272}
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1020, line: 347, baseType: !3369)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 32)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !3371)
!3371 = !{!3372, !3430, !3442, !3443, !3444, !3445, !3451, !3464}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3370, file: !1020, line: 247, baseType: !3373, size: 384)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !3374)
!3374 = !{!3375, !3399, !3406, !3407, !3408, !3417, !3418, !3419}
!3375 = !DIDerivedType(tag: DW_TAG_member, scope: !3373, file: !1020, line: 60, baseType: !3376, size: 64)
!3376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3373, file: !1020, line: 60, size: 64, elements: !3377)
!3377 = !{!3378, !3393}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3376, file: !1020, line: 61, baseType: !3379, size: 64)
!3379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !3380)
!3380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !3381)
!3381 = !{!3382, !3388}
!3382 = !DIDerivedType(tag: DW_TAG_member, scope: !3380, file: !1030, line: 38, baseType: !3383, size: 32)
!3383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3380, file: !1030, line: 38, size: 32, elements: !3384)
!3384 = !{!3385, !3387}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3383, file: !1030, line: 39, baseType: !3386, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3383, file: !1030, line: 40, baseType: !3386, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, scope: !3380, file: !1030, line: 42, baseType: !3389, size: 32, offset: 32)
!3389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3380, file: !1030, line: 42, size: 32, elements: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3389, file: !1030, line: 43, baseType: !3386, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3389, file: !1030, line: 44, baseType: !3386, size: 32)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3376, file: !1020, line: 62, baseType: !3394, size: 64)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !3395)
!3395 = !{!3396}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3394, file: !1046, line: 50, baseType: !3397, size: 64)
!3397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3398, size: 64, elements: !807)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 32)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3373, file: !1020, line: 68, baseType: !3400, size: 32, offset: 64)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !3402)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !3403)
!3403 = !{!3404}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3402, file: !1054, line: 232, baseType: !3405, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !3380)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3373, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3373, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!3408 = !DIDerivedType(tag: DW_TAG_member, scope: !3373, file: !1020, line: 90, baseType: !3409, size: 16, offset: 112)
!3409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3373, file: !1020, line: 90, size: 16, elements: !3410)
!3410 = !{!3411, !3416}
!3411 = !DIDerivedType(tag: DW_TAG_member, scope: !3409, file: !1020, line: 91, baseType: !3412, size: 16)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3409, file: !1020, line: 91, size: 16, elements: !3413)
!3413 = !{!3414, !3415}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3412, file: !1020, line: 96, baseType: !1068, size: 8)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3412, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3409, file: !1020, line: 100, baseType: !227, size: 16)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3373, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3373, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3373, file: !1020, line: 131, baseType: !3420, size: 192, offset: 192)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !3421)
!3421 = !{!3422, !3423, !3429}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3420, file: !1054, line: 245, baseType: !3379, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3420, file: !1054, line: 246, baseType: !3424, size: 32, offset: 64)
!3424 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !3425)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 32)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{null, !3428}
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3420, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3370, file: !1020, line: 250, baseType: !3431, size: 288, offset: 384)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !3432)
!3432 = !{!3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3431, file: !1088, line: 26, baseType: !208, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3431, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3431, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3431, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3431, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3431, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3431, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3431, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3431, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3370, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3370, file: !1020, line: 256, baseType: !3401, size: 64, offset: 704)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3370, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3370, file: !1020, line: 300, baseType: !3446, size: 96, offset: 800)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !3447)
!3447 = !{!3448, !3449, !3450}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3446, file: !1020, line: 153, baseType: !22, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3446, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3446, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3370, file: !1020, line: 325, baseType: !3452, size: 32, offset: 896)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 32)
!3453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !3454)
!3454 = !{!3455, !3461, !3462}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3453, file: !1111, line: 5074, baseType: !3456, size: 96)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !3457)
!3457 = !{!3458, !3459, !3460}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3456, file: !1115, line: 57, baseType: !1118, size: 32)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3456, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3456, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3453, file: !1111, line: 5075, baseType: !3401, size: 64, offset: 96)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3453, file: !1111, line: 5076, baseType: !3463, offset: 160)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3370, file: !1020, line: 343, baseType: !3465, size: 64, offset: 928)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !3466)
!3466 = !{!3467, !3468}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3465, file: !1088, line: 63, baseType: !208, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3465, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!3469 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3470, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3471, globals: !3473, splitDebugInlining: false, nameTableKind: None)
!3470 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3471 = !{!124, !140, !2804, !150, !125, !3472, !24, !272, !393, !22, !208, !2271}
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 32)
!3473 = !{!3362, !3474}
!3474 = !DIGlobalVariableExpression(var: !3475, expr: !DIExpression())
!3475 = distinct !DIGlobalVariable(name: "states_sz", scope: !3364, file: !3365, line: 279, type: !3476, isLocal: true, isDefinition: true)
!3476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3477, size: 256, elements: !337)
!3477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!3478 = !{!3479, !3480, !3481, !3482, !3483, !3484, !3485}
!3479 = !DILocalVariable(name: "thread_id", arg: 1, scope: !3364, file: !3365, line: 271, type: !3368)
!3480 = !DILocalVariable(name: "buf", arg: 2, scope: !3364, file: !3365, line: 271, type: !393)
!3481 = !DILocalVariable(name: "buf_size", arg: 3, scope: !3364, file: !3365, line: 271, type: !272)
!3482 = !DILocalVariable(name: "off", scope: !3364, file: !3365, line: 273, type: !272)
!3483 = !DILocalVariable(name: "bit", scope: !3364, file: !3365, line: 274, type: !150)
!3484 = !DILocalVariable(name: "thread_state", scope: !3364, file: !3365, line: 275, type: !150)
!3485 = !DILocalVariable(name: "index", scope: !3486, file: !3365, line: 293, type: !150)
!3486 = distinct !DILexicalBlock(scope: !3364, file: !3365, line: 293, column: 2)
!3487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!3488 = !DIGlobalVariableExpression(var: !3489, expr: !DIExpression())
!3489 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !3490, file: !3598, line: 56, type: !3587, isLocal: false, isDefinition: true)
!3490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3492, globals: !3595, splitDebugInlining: false, nameTableKind: None)
!3491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3492 = !{!3493, !393, !124, !3593, !184, !2804, !1731, !125, !208, !2271, !3594}
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 32)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !3495)
!3495 = !{!3496, !3554, !3566, !3567, !3568, !3569, !3575, !3588}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3494, file: !1020, line: 247, baseType: !3497, size: 384)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !3498)
!3498 = !{!3499, !3523, !3530, !3531, !3532, !3541, !3542, !3543}
!3499 = !DIDerivedType(tag: DW_TAG_member, scope: !3497, file: !1020, line: 60, baseType: !3500, size: 64)
!3500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3497, file: !1020, line: 60, size: 64, elements: !3501)
!3501 = !{!3502, !3517}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3500, file: !1020, line: 61, baseType: !3503, size: 64)
!3503 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !3504)
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !3505)
!3505 = !{!3506, !3512}
!3506 = !DIDerivedType(tag: DW_TAG_member, scope: !3504, file: !1030, line: 38, baseType: !3507, size: 32)
!3507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3504, file: !1030, line: 38, size: 32, elements: !3508)
!3508 = !{!3509, !3511}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3507, file: !1030, line: 39, baseType: !3510, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3507, file: !1030, line: 40, baseType: !3510, size: 32)
!3512 = !DIDerivedType(tag: DW_TAG_member, scope: !3504, file: !1030, line: 42, baseType: !3513, size: 32, offset: 32)
!3513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3504, file: !1030, line: 42, size: 32, elements: !3514)
!3514 = !{!3515, !3516}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3513, file: !1030, line: 43, baseType: !3510, size: 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3513, file: !1030, line: 44, baseType: !3510, size: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3500, file: !1020, line: 62, baseType: !3518, size: 64)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !3519)
!3519 = !{!3520}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3518, file: !1046, line: 50, baseType: !3521, size: 64)
!3521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3522, size: 64, elements: !807)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 32)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3497, file: !1020, line: 68, baseType: !3524, size: 32, offset: 64)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 32)
!3525 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !3526)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !3527)
!3527 = !{!3528}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3526, file: !1054, line: 232, baseType: !3529, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !3504)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3497, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3497, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!3532 = !DIDerivedType(tag: DW_TAG_member, scope: !3497, file: !1020, line: 90, baseType: !3533, size: 16, offset: 112)
!3533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3497, file: !1020, line: 90, size: 16, elements: !3534)
!3534 = !{!3535, !3540}
!3535 = !DIDerivedType(tag: DW_TAG_member, scope: !3533, file: !1020, line: 91, baseType: !3536, size: 16)
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3533, file: !1020, line: 91, size: 16, elements: !3537)
!3537 = !{!3538, !3539}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3536, file: !1020, line: 96, baseType: !1068, size: 8)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3536, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3533, file: !1020, line: 100, baseType: !227, size: 16)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3497, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3497, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3497, file: !1020, line: 131, baseType: !3544, size: 192, offset: 192)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !3545)
!3545 = !{!3546, !3547, !3553}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3544, file: !1054, line: 245, baseType: !3503, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3544, file: !1054, line: 246, baseType: !3548, size: 32, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !3549)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 32)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{null, !3552}
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3544, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3494, file: !1020, line: 250, baseType: !3555, size: 288, offset: 384)
!3555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !3556)
!3556 = !{!3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3555, file: !1088, line: 26, baseType: !208, size: 32)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3555, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3555, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3555, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3555, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3555, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3555, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3555, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3555, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3494, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3494, file: !1020, line: 256, baseType: !3525, size: 64, offset: 704)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3494, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3494, file: !1020, line: 300, baseType: !3570, size: 96, offset: 800)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !3571)
!3571 = !{!3572, !3573, !3574}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3570, file: !1020, line: 153, baseType: !22, size: 32)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3570, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3570, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3494, file: !1020, line: 325, baseType: !3576, size: 32, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 32)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !3578)
!3578 = !{!3579, !3585, !3586}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3577, file: !1111, line: 5074, baseType: !3580, size: 96)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !3581)
!3581 = !{!3582, !3583, !3584}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3580, file: !1115, line: 57, baseType: !1118, size: 32)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3580, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3580, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3577, file: !1111, line: 5075, baseType: !3525, size: 64, offset: 96)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3577, file: !1111, line: 5076, baseType: !3587, offset: 160)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3494, file: !1020, line: 343, baseType: !3589, size: 64, offset: 928)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !3590)
!3590 = !{!3591, !3592}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3589, file: !1088, line: 63, baseType: !208, size: 32)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3589, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 32)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 32)
!3595 = !{!3488, !3596, !3599, !3601}
!3596 = !DIGlobalVariableExpression(var: !3597, expr: !DIExpression())
!3597 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !3490, file: !3598, line: 404, type: !125, isLocal: true, isDefinition: true)
!3598 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3599 = !DIGlobalVariableExpression(var: !3600, expr: !DIExpression())
!3600 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !3490, file: !3598, line: 405, type: !125, isLocal: true, isDefinition: true)
!3601 = !DIGlobalVariableExpression(var: !3602, expr: !DIExpression())
!3602 = distinct !DIGlobalVariable(name: "pending_current", scope: !3490, file: !3598, line: 425, type: !3493, isLocal: true, isDefinition: true)
!3603 = !DIGlobalVariableExpression(var: !3604, expr: !DIExpression())
!3604 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3605, file: !3635, line: 15, type: !2271, isLocal: true, isDefinition: true)
!3605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3607, globals: !3632, splitDebugInlining: false, nameTableKind: None)
!3606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3607 = !{!2804, !124, !1731, !208, !2271, !125, !3608, !393, !1085}
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 32)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !3610)
!3610 = !{!3611, !3626, !3631}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3609, file: !1054, line: 245, baseType: !3612, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !3613)
!3613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !3614)
!3614 = !{!3615, !3621}
!3615 = !DIDerivedType(tag: DW_TAG_member, scope: !3613, file: !1030, line: 38, baseType: !3616, size: 32)
!3616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3613, file: !1030, line: 38, size: 32, elements: !3617)
!3617 = !{!3618, !3620}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3616, file: !1030, line: 39, baseType: !3619, size: 32)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 32)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3616, file: !1030, line: 40, baseType: !3619, size: 32)
!3621 = !DIDerivedType(tag: DW_TAG_member, scope: !3613, file: !1030, line: 42, baseType: !3622, size: 32, offset: 32)
!3622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3613, file: !1030, line: 42, size: 32, elements: !3623)
!3623 = !{!3624, !3625}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3622, file: !1030, line: 43, baseType: !3619, size: 32)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3622, file: !1030, line: 44, baseType: !3619, size: 32)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3609, file: !1054, line: 246, baseType: !3627, size: 32, offset: 64)
!3627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !3628)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 32)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{null, !3608}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3609, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!3632 = !{!3603, !3633, !3637, !3639}
!3633 = !DIGlobalVariableExpression(var: !3634, expr: !DIExpression())
!3634 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3605, file: !3635, line: 19, type: !3636, isLocal: true, isDefinition: true)
!3635 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!3637 = !DIGlobalVariableExpression(var: !3638, expr: !DIExpression())
!3638 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3605, file: !3635, line: 25, type: !125, isLocal: true, isDefinition: true)
!3639 = !DIGlobalVariableExpression(var: !3640, expr: !DIExpression())
!3640 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3605, file: !3635, line: 17, type: !3641, isLocal: true, isDefinition: true)
!3641 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !3613)
!3642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3648, retainedTypes: !3668, splitDebugInlining: false, nameTableKind: None)
!3647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3648 = !{!3649, !3657}
!3649 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3650, line: 69, baseType: !32, size: 32, elements: !3651)
!3650 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3651 = !{!3652, !3653, !3654, !3655, !3656}
!3652 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3653 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3654 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3655 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3656 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3657 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3650, line: 56, baseType: !32, size: 32, elements: !3658)
!3658 = !{!3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667}
!3659 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3660 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3661 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3662 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3663 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3664 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3665 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3666 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3667 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3668 = !{!125, !3649, !3657, !3669, !1069, !160, !3671, !3672, !151, !228, !140, !272, !124, !22, !32, !387, !3674, !3675, !389, !388, !391, !390, !3670, !3676, !3677, !3678, !3679}
!3669 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3650, line: 31, baseType: !3670)
!3670 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!3671 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!3672 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3650, line: 32, baseType: !3673)
!3673 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2272)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 32)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!3678 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 32)
!3680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3686, splitDebugInlining: false, nameTableKind: None)
!3685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3686 = !{!140, !151, !125, !32}
!3687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3691, splitDebugInlining: false, nameTableKind: None)
!3690 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3691 = !{!184, !979, !3692}
!3692 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !981, line: 66, baseType: !3693)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 32)
!3694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !981, line: 64, size: 1408, elements: !3695)
!3695 = !{!3696}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !3694, file: !981, line: 65, baseType: !986, size: 1408)
!3697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3699, splitDebugInlining: false, nameTableKind: None)
!3698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3699 = !{!184, !3700, !150}
!3700 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !981, line: 66, baseType: !3701)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 32)
!3702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !981, line: 64, size: 1408, elements: !3703)
!3703 = !{!3704}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !3702, file: !981, line: 65, baseType: !986, size: 1408)
!3705 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3706, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3707, splitDebugInlining: false, nameTableKind: None)
!3706 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3707 = !{!3708, !3714, !184, !150, !227}
!3708 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !3709, line: 95, baseType: !3710)
!3709 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 32)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !3709, line: 91, size: 96, elements: !3712)
!3712 = !{!3713, !3719, !3720}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !3711, file: !3709, line: 92, baseType: !3714, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !981, line: 66, baseType: !3715)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 32)
!3716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !981, line: 64, size: 1408, elements: !3717)
!3717 = !{!3718}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !3716, file: !981, line: 65, baseType: !986, size: 1408)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !3711, file: !3709, line: 93, baseType: !184, size: 32, offset: 32)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !3711, file: !3709, line: 94, baseType: !32, size: 32, offset: 64)
!3721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3723, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3723 = !{!3724, !46}
!3724 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3725, line: 27, baseType: !32, size: 32, elements: !3726)
!3725 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3726 = !{!3727, !3728, !3729, !3730, !3731}
!3727 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3728 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3729 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3730 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3731 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3734, retainedTypes: !3735, splitDebugInlining: false, nameTableKind: None)
!3733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3734 = !{!2680, !3724, !46}
!3735 = !{!3736, !3737, !124, !125, !1731, !208, !150, !3754}
!3736 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !484, line: 217, baseType: !2680)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 32)
!3738 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1167, line: 426, baseType: !3739)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 411, size: 28704, elements: !3740)
!3740 = !{!3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3739, file: !1167, line: 413, baseType: !2819, size: 256)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3739, file: !1167, line: 414, baseType: !2821, size: 768, offset: 256)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3739, file: !1167, line: 415, baseType: !2819, size: 256, offset: 1024)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3739, file: !1167, line: 416, baseType: !2821, size: 768, offset: 1280)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3739, file: !1167, line: 417, baseType: !2819, size: 256, offset: 2048)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3739, file: !1167, line: 418, baseType: !2821, size: 768, offset: 2304)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3739, file: !1167, line: 419, baseType: !2819, size: 256, offset: 3072)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3739, file: !1167, line: 420, baseType: !2821, size: 768, offset: 3328)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3739, file: !1167, line: 421, baseType: !2819, size: 256, offset: 4096)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3739, file: !1167, line: 422, baseType: !2830, size: 1792, offset: 4352)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3739, file: !1167, line: 423, baseType: !2834, size: 1920, offset: 6144)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3739, file: !1167, line: 424, baseType: !2838, size: 20608, offset: 8064)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3739, file: !1167, line: 425, baseType: !727, size: 32, offset: 28672)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 32)
!3755 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !3756)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !3757)
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3756, file: !1167, line: 447, baseType: !726, size: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3756, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3756, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3756, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3756, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3756, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3756, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3756, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3756, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3756, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3756, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3756, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3756, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3756, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3756, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3756, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3756, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3756, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3756, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3756, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3756, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!3779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3780, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3780 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3783, splitDebugInlining: false, nameTableKind: None)
!3782 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3783 = !{!124, !125, !22, !3784}
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 32)
!3785 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !3786)
!3786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !3787)
!3787 = !{!3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3786, file: !1167, line: 447, baseType: !726, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3786, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3786, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3786, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3786, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3786, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3786, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3786, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3786, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3786, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3786, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3786, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3786, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3786, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3786, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3786, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3786, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3786, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3786, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3786, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3786, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!3809 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3810, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3811, splitDebugInlining: false, nameTableKind: None)
!3810 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3811 = !{!3812, !124, !125}
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 32)
!3813 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !3814)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !3815)
!3815 = !{!3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3814, file: !1167, line: 447, baseType: !726, size: 32)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3814, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3814, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3814, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3814, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3814, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3814, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3814, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3814, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3814, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3814, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3814, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3814, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3814, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3814, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3814, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3814, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3814, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3814, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3814, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3814, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!3837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3838, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3839, splitDebugInlining: false, nameTableKind: None)
!3838 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3839 = !{!3840, !208, !124, !125}
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 32)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3842, line: 98, size: 256, elements: !3843)
!3842 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3843 = !{!3844, !3849, !3854, !3859, !3864, !3869, !3874, !3879}
!3844 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3842, line: 99, baseType: !3845, size: 32)
!3845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3842, line: 99, size: 32, elements: !3846)
!3846 = !{!3847, !3848}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3845, file: !3842, line: 99, baseType: !208, size: 32)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3845, file: !3842, line: 99, baseType: !208, size: 32)
!3849 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3842, line: 100, baseType: !3850, size: 32, offset: 32)
!3850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3842, line: 100, size: 32, elements: !3851)
!3851 = !{!3852, !3853}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3850, file: !3842, line: 100, baseType: !208, size: 32)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3850, file: !3842, line: 100, baseType: !208, size: 32)
!3854 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3842, line: 101, baseType: !3855, size: 32, offset: 64)
!3855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3842, line: 101, size: 32, elements: !3856)
!3856 = !{!3857, !3858}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3855, file: !3842, line: 101, baseType: !208, size: 32)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3855, file: !3842, line: 101, baseType: !208, size: 32)
!3859 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3842, line: 102, baseType: !3860, size: 32, offset: 96)
!3860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3842, line: 102, size: 32, elements: !3861)
!3861 = !{!3862, !3863}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3860, file: !3842, line: 102, baseType: !208, size: 32)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3860, file: !3842, line: 102, baseType: !208, size: 32)
!3864 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3842, line: 103, baseType: !3865, size: 32, offset: 128)
!3865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3842, line: 103, size: 32, elements: !3866)
!3866 = !{!3867, !3868}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3865, file: !3842, line: 103, baseType: !208, size: 32)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3865, file: !3842, line: 103, baseType: !208, size: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3842, line: 104, baseType: !3870, size: 32, offset: 160)
!3870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3842, line: 104, size: 32, elements: !3871)
!3871 = !{!3872, !3873}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3870, file: !3842, line: 104, baseType: !208, size: 32)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3870, file: !3842, line: 104, baseType: !208, size: 32)
!3874 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3842, line: 105, baseType: !3875, size: 32, offset: 192)
!3875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3842, line: 105, size: 32, elements: !3876)
!3876 = !{!3877, !3878}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3875, file: !3842, line: 105, baseType: !208, size: 32)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3875, file: !3842, line: 105, baseType: !208, size: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3841, file: !3842, line: 106, baseType: !208, size: 32, offset: 224)
!3880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3881, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3723, retainedTypes: !3882, splitDebugInlining: false, nameTableKind: None)
!3881 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3882 = !{!3883, !124, !125, !3908, !3951, !208}
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 32)
!3884 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !3885)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !3886)
!3886 = !{!3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3885, file: !1167, line: 447, baseType: !726, size: 32)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3885, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3885, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3885, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3885, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3885, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3885, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3885, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3885, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3885, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3885, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3885, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3885, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3885, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3885, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3885, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3885, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3885, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3885, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3885, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3885, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 32)
!3909 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3842, line: 141, baseType: !3910)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3842, line: 97, size: 256, elements: !3911)
!3911 = !{!3912}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3910, file: !3842, line: 107, baseType: !3913, size: 256)
!3913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3842, line: 98, size: 256, elements: !3914)
!3914 = !{!3915, !3920, !3925, !3930, !3935, !3940, !3945, !3950}
!3915 = !DIDerivedType(tag: DW_TAG_member, scope: !3913, file: !3842, line: 99, baseType: !3916, size: 32)
!3916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3913, file: !3842, line: 99, size: 32, elements: !3917)
!3917 = !{!3918, !3919}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3916, file: !3842, line: 99, baseType: !208, size: 32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3916, file: !3842, line: 99, baseType: !208, size: 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, scope: !3913, file: !3842, line: 100, baseType: !3921, size: 32, offset: 32)
!3921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3913, file: !3842, line: 100, size: 32, elements: !3922)
!3922 = !{!3923, !3924}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3921, file: !3842, line: 100, baseType: !208, size: 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3921, file: !3842, line: 100, baseType: !208, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, scope: !3913, file: !3842, line: 101, baseType: !3926, size: 32, offset: 64)
!3926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3913, file: !3842, line: 101, size: 32, elements: !3927)
!3927 = !{!3928, !3929}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3926, file: !3842, line: 101, baseType: !208, size: 32)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3926, file: !3842, line: 101, baseType: !208, size: 32)
!3930 = !DIDerivedType(tag: DW_TAG_member, scope: !3913, file: !3842, line: 102, baseType: !3931, size: 32, offset: 96)
!3931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3913, file: !3842, line: 102, size: 32, elements: !3932)
!3932 = !{!3933, !3934}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3931, file: !3842, line: 102, baseType: !208, size: 32)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3931, file: !3842, line: 102, baseType: !208, size: 32)
!3935 = !DIDerivedType(tag: DW_TAG_member, scope: !3913, file: !3842, line: 103, baseType: !3936, size: 32, offset: 128)
!3936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3913, file: !3842, line: 103, size: 32, elements: !3937)
!3937 = !{!3938, !3939}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3936, file: !3842, line: 103, baseType: !208, size: 32)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3936, file: !3842, line: 103, baseType: !208, size: 32)
!3940 = !DIDerivedType(tag: DW_TAG_member, scope: !3913, file: !3842, line: 104, baseType: !3941, size: 32, offset: 160)
!3941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3913, file: !3842, line: 104, size: 32, elements: !3942)
!3942 = !{!3943, !3944}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3941, file: !3842, line: 104, baseType: !208, size: 32)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3941, file: !3842, line: 104, baseType: !208, size: 32)
!3945 = !DIDerivedType(tag: DW_TAG_member, scope: !3913, file: !3842, line: 105, baseType: !3946, size: 32, offset: 192)
!3946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3913, file: !3842, line: 105, size: 32, elements: !3947)
!3947 = !{!3948, !3949}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3946, file: !3842, line: 105, baseType: !208, size: 32)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3946, file: !3842, line: 105, baseType: !208, size: 32)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3913, file: !3842, line: 106, baseType: !208, size: 32, offset: 224)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!3952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3953, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2679, retainedTypes: !3954, splitDebugInlining: false, nameTableKind: None)
!3953 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3954 = !{!3736, !1731, !150, !208, !3955, !3972}
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 32)
!3956 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1167, line: 426, baseType: !3957)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 411, size: 28704, elements: !3958)
!3958 = !{!3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3957, file: !1167, line: 413, baseType: !2819, size: 256)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3957, file: !1167, line: 414, baseType: !2821, size: 768, offset: 256)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3957, file: !1167, line: 415, baseType: !2819, size: 256, offset: 1024)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3957, file: !1167, line: 416, baseType: !2821, size: 768, offset: 1280)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3957, file: !1167, line: 417, baseType: !2819, size: 256, offset: 2048)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3957, file: !1167, line: 418, baseType: !2821, size: 768, offset: 2304)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3957, file: !1167, line: 419, baseType: !2819, size: 256, offset: 3072)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3957, file: !1167, line: 420, baseType: !2821, size: 768, offset: 3328)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3957, file: !1167, line: 421, baseType: !2819, size: 256, offset: 4096)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3957, file: !1167, line: 422, baseType: !2830, size: 1792, offset: 4352)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3957, file: !1167, line: 423, baseType: !2834, size: 1920, offset: 6144)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3957, file: !1167, line: 424, baseType: !2838, size: 20608, offset: 8064)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3957, file: !1167, line: 425, baseType: !727, size: 32, offset: 28672)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 32)
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !3974)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !3975)
!3975 = !{!3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3974, file: !1167, line: 447, baseType: !726, size: 32)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3974, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3974, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3974, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3974, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3974, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3974, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3974, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3974, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3974, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3974, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3974, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3974, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3974, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3974, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3974, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3974, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3974, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3974, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3974, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3974, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!3997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3999, splitDebugInlining: false, nameTableKind: None)
!3998 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!3999 = !{!4000, !124, !125}
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 32)
!4001 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1167, line: 468, baseType: !4002)
!4002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1167, line: 445, size: 1120, elements: !4003)
!4003 = !{!4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !4002, file: !1167, line: 447, baseType: !726, size: 32)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !4002, file: !1167, line: 448, baseType: !727, size: 32, offset: 32)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !4002, file: !1167, line: 449, baseType: !727, size: 32, offset: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !4002, file: !1167, line: 450, baseType: !727, size: 32, offset: 96)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4002, file: !1167, line: 451, baseType: !727, size: 32, offset: 128)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !4002, file: !1167, line: 452, baseType: !727, size: 32, offset: 160)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !4002, file: !1167, line: 453, baseType: !2853, size: 96, offset: 192)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !4002, file: !1167, line: 454, baseType: !727, size: 32, offset: 288)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !4002, file: !1167, line: 455, baseType: !727, size: 32, offset: 320)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !4002, file: !1167, line: 456, baseType: !727, size: 32, offset: 352)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !4002, file: !1167, line: 457, baseType: !727, size: 32, offset: 384)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !4002, file: !1167, line: 458, baseType: !727, size: 32, offset: 416)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !4002, file: !1167, line: 459, baseType: !727, size: 32, offset: 448)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !4002, file: !1167, line: 460, baseType: !727, size: 32, offset: 480)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !4002, file: !1167, line: 461, baseType: !2862, size: 64, offset: 512)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !4002, file: !1167, line: 462, baseType: !726, size: 32, offset: 576)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !4002, file: !1167, line: 463, baseType: !726, size: 32, offset: 608)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !4002, file: !1167, line: 464, baseType: !2866, size: 128, offset: 640)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !4002, file: !1167, line: 465, baseType: !2868, size: 160, offset: 768)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !4002, file: !1167, line: 466, baseType: !2870, size: 160, offset: 928)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !4002, file: !1167, line: 467, baseType: !727, size: 32, offset: 1088)
!4025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !4027, splitDebugInlining: false, nameTableKind: None)
!4026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4027 = !{!142, !393, !272, !1805, !4028, !151, !124}
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 32)
!4029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!4030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4031, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!4031 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4032 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4033, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !4034, splitDebugInlining: false, nameTableKind: None)
!4033 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4034 = !{!124, !272}
!4035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4036, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4037, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!4036 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4037 = !{!4038, !4045, !46}
!4038 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !4039, line: 14, baseType: !32, size: 32, elements: !4040)
!4039 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4040 = !{!4041, !4042, !4043, !4044}
!4041 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!4042 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!4043 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!4044 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!4045 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !4039, line: 42, baseType: !32, size: 32, elements: !4046)
!4046 = !{!4047, !4048, !4049, !4050, !4051, !4052}
!4047 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!4048 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!4049 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!4050 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!4051 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!4052 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!4053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4054, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!4054 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4056, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !4057, splitDebugInlining: false, nameTableKind: None)
!4056 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4057 = !{!22, !124, !125}
!4058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!4059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4060 = !{!"Ubuntu clang version 14.0.6"}
!4061 = !{i32 7, !"Dwarf Version", i32 4}
!4062 = !{i32 2, !"Debug Info Version", i32 3}
!4063 = !{i32 1, !"wchar_size", i32 4}
!4064 = !{i32 1, !"min_enum_size", i32 4}
!4065 = !{i32 1, !"branch-target-enforcement", i32 0}
!4066 = !{i32 1, !"sign-return-address", i32 0}
!4067 = !{i32 1, !"sign-return-address-all", i32 0}
!4068 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!4069 = !{i32 7, !"frame-pointer", i32 2}
!4070 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !4071, file: !4071, line: 26, type: !4072, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !1126)
!4071 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4072 = !DISubroutineType(types: !4073)
!4073 = !{null}
!4074 = !DILocation(line: 28, column: 1, scope: !4070)
!4075 = !{i64 2152925439, i64 2152925459, i64 2152925522}
!4076 = !DILocation(line: 29, column: 1, scope: !4070)
!4077 = !{i64 2152925854, i64 2152925874, i64 2152925937}
!4078 = !DILocation(line: 30, column: 1, scope: !4070)
!4079 = !{i64 2152926273, i64 2152926293, i64 2152926356}
!4080 = !DILocation(line: 31, column: 1, scope: !4070)
!4081 = !{i64 2152926692, i64 2152926712, i64 2152926775}
!4082 = !DILocation(line: 33, column: 1, scope: !4070)
!4083 = !{i64 2152926984, i64 2152927004, i64 2152927067}
!4084 = !DILocation(line: 35, column: 1, scope: !4070)
!4085 = !{i64 2152927309, i64 2152927329, i64 2152927392}
!4086 = !DILocation(line: 50, column: 1, scope: !4070)
!4087 = !{i64 2152927736, i64 2152927756, i64 2152927819}
!4088 = !DILocation(line: 54, column: 1, scope: !4070)
!4089 = !{i64 2152928175, i64 2152928195, i64 2152928258}
!4090 = !DILocation(line: 61, column: 1, scope: !4070)
!4091 = !{i64 2152928492, i64 2152928512, i64 2152928575}
!4092 = !DILocation(line: 63, column: 1, scope: !4070)
!4093 = !{i64 2152928872, i64 2152928892, i64 2152928955}
!4094 = !DILocation(line: 64, column: 1, scope: !4070)
!4095 = !{i64 2152929394, i64 2152929414, i64 2152929477}
!4096 = !DILocation(line: 65, column: 1, scope: !4070)
!4097 = !{i64 2152929892, i64 2152929912, i64 2152929975}
!4098 = !DILocation(line: 66, column: 1, scope: !4070)
!4099 = !{i64 2152930374, i64 2152930394, i64 2152930457}
!4100 = !DILocation(line: 67, column: 1, scope: !4070)
!4101 = !{i64 2152930881, i64 2152930901, i64 2152930964}
!4102 = !DILocation(line: 68, column: 1, scope: !4070)
!4103 = !{i64 2152931369, i64 2152931389, i64 2152931452}
!4104 = !DILocation(line: 70, column: 1, scope: !4070)
!4105 = !{i64 2152931837, i64 2152931857, i64 2152931920}
!4106 = !DILocation(line: 71, column: 1, scope: !4070)
!4107 = !{i64 2152932279, i64 2152932299, i64 2152932362}
!4108 = !DILocation(line: 72, column: 1, scope: !4070)
!4109 = !{i64 2152932737, i64 2152932757, i64 2152932820}
!4110 = !DILocation(line: 79, column: 1, scope: !4070)
!4111 = !{i64 2152937252, i64 2152937272, i64 2152937335}
!4112 = !DILocation(line: 80, column: 1, scope: !4070)
!4113 = !{i64 2152937763, i64 2152937783, i64 2152937846}
!4114 = !DILocation(line: 82, column: 1, scope: !4070)
!4115 = !{i64 2152938254, i64 2152938274, i64 2152938337}
!4116 = !DILocation(line: 97, column: 1, scope: !4070)
!4117 = !{i64 2152938591, i64 2152938611, i64 2152938674}
!4118 = !DILocation(line: 99, column: 1, scope: !4070)
!4119 = !{i64 2152938809, i64 2152938829, i64 2152938892}
!4120 = !DILocation(line: 102, column: 1, scope: !4070)
!4121 = !{i64 2152939066, i64 2152939086, i64 2152939149}
!4122 = !DILocation(line: 105, column: 1, scope: !4070)
!4123 = !{i64 2152939306, i64 2152939326, i64 2152939389}
!4124 = !DILocation(line: 115, column: 1, scope: !4070)
!4125 = !{i64 2152939645, i64 2152939665, i64 2152939728}
!4126 = !DILocation(line: 118, column: 1, scope: !4070)
!4127 = !{i64 2152939989, i64 2152940009, i64 2152940072}
!4128 = !DILocation(line: 32, column: 1, scope: !4129)
!4129 = !DILexicalBlockFile(scope: !4070, file: !4130, discriminator: 0)
!4130 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4131 = !{i64 2152940345, i64 2152940365, i64 2152940428}
!4132 = !DILocation(line: 33, column: 1, scope: !4129)
!4133 = !{i64 2152940857, i64 2152940877, i64 2152940940}
!4134 = !DILocation(line: 53, column: 1, scope: !4129)
!4135 = !{i64 2152941365, i64 2152941385, i64 2152941448}
!4136 = !DILocation(line: 54, column: 1, scope: !4129)
!4137 = !{i64 2152941783, i64 2152941803, i64 2152941866}
!4138 = !DILocation(line: 55, column: 1, scope: !4129)
!4139 = !{i64 2152942201, i64 2152942221, i64 2152942284}
!4140 = !DILocation(line: 56, column: 1, scope: !4129)
!4141 = !{i64 2152942619, i64 2152942639, i64 2152942702}
!4142 = !DILocation(line: 57, column: 1, scope: !4129)
!4143 = !{i64 2152943037, i64 2152943057, i64 2152943120}
!4144 = !DILocation(line: 58, column: 1, scope: !4129)
!4145 = !{i64 2152943455, i64 2152943475, i64 2152943538}
!4146 = !DILocation(line: 59, column: 1, scope: !4129)
!4147 = !{i64 2152943873, i64 2152943893, i64 2152943956}
!4148 = !DILocation(line: 60, column: 1, scope: !4129)
!4149 = !{i64 2152944297, i64 2152944317, i64 2152944380}
!4150 = !DILocation(line: 61, column: 1, scope: !4129)
!4151 = !{i64 2152944614, i64 2152944634, i64 2152944697}
!4152 = !DILocation(line: 70, column: 1, scope: !4129)
!4153 = !{i64 2152944843, i64 2152944863, i64 2152944926}
!4154 = !DILocation(line: 72, column: 1, scope: !4129)
!4155 = !{i64 2152945175, i64 2152945195, i64 2152945258}
!4156 = !DILocation(line: 73, column: 1, scope: !4129)
!4157 = !{i64 2152945625, i64 2152945645, i64 2152945708}
!4158 = !DILocation(line: 74, column: 1, scope: !4129)
!4159 = !{i64 2152946075, i64 2152946095, i64 2152946158}
!4160 = !DILocation(line: 75, column: 1, scope: !4129)
!4161 = !{i64 2152946525, i64 2152946545, i64 2152946608}
!4162 = !DILocation(line: 76, column: 1, scope: !4129)
!4163 = !{i64 2152951036, i64 2152951056, i64 2152951119}
!4164 = !DILocation(line: 77, column: 1, scope: !4129)
!4165 = !{i64 2152951486, i64 2152951506, i64 2152951569}
!4166 = !DILocation(line: 78, column: 1, scope: !4129)
!4167 = !{i64 2152951936, i64 2152951956, i64 2152952019}
!4168 = !DILocation(line: 79, column: 1, scope: !4129)
!4169 = !{i64 2152952386, i64 2152952406, i64 2152952469}
!4170 = !DILocation(line: 80, column: 1, scope: !4129)
!4171 = !{i64 2152952839, i64 2152952859, i64 2152952922}
!4172 = !DILocation(line: 84, column: 1, scope: !4129)
!4173 = !{i64 2152953171, i64 2152953191, i64 2152953254}
!4174 = !DILocation(line: 91, column: 1, scope: !4129)
!4175 = !{i64 2152953568, i64 2152953588, i64 2152953651}
!4176 = !DILocation(line: 93, column: 1, scope: !4129)
!4177 = !{i64 2152953935, i64 2152953955, i64 2152954018}
!4178 = !DILocation(line: 106, column: 1, scope: !4129)
!4179 = !{i64 2152954205, i64 2152954225, i64 2152954288}
!4180 = !DILocation(line: 11, column: 1, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !4070, file: !4182, discriminator: 0)
!4182 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4183 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4184)
!4184 = !{!4185, !4186}
!4185 = !DILocalVariable(name: "dev", arg: 1, scope: !4183, file: !294, line: 80, type: !134)
!4186 = !DILocalVariable(name: "flags", scope: !4183, file: !294, line: 82, type: !208)
!4187 = !DILocation(line: 0, scope: !4183)
!4188 = !DILocation(line: 84, column: 10, scope: !4183)
!4189 = !DILocation(line: 85, column: 13, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4183, file: !294, line: 85, column: 6)
!4191 = !DILocation(line: 85, column: 28, scope: !4190)
!4192 = !DILocation(line: 85, column: 6, scope: !4183)
!4193 = !DILocation(line: 86, column: 3, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !294, line: 86, column: 3)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !294, line: 86, column: 3)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !294, line: 86, column: 3)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !294, line: 86, column: 3)
!4198 = distinct !DILexicalBlock(scope: !4190, file: !294, line: 85, column: 35)
!4199 = !DILocation(line: 88, column: 3, scope: !4198)
!4200 = !DILocation(line: 91, column: 13, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4183, file: !294, line: 91, column: 6)
!4202 = !DILocation(line: 91, column: 29, scope: !4201)
!4203 = !DILocation(line: 91, column: 6, scope: !4183)
!4204 = !DILocation(line: 92, column: 3, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !294, line: 92, column: 3)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !294, line: 92, column: 3)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !294, line: 92, column: 3)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !294, line: 92, column: 3)
!4209 = distinct !DILexicalBlock(scope: !4201, file: !294, line: 91, column: 36)
!4210 = !DILocation(line: 94, column: 3, scope: !4209)
!4211 = !DILocation(line: 97, column: 13, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4183, file: !294, line: 97, column: 6)
!4213 = !DILocation(line: 97, column: 37, scope: !4212)
!4214 = !DILocation(line: 97, column: 6, scope: !4183)
!4215 = !DILocation(line: 98, column: 3, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !294, line: 98, column: 3)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !294, line: 98, column: 3)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !294, line: 98, column: 3)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !294, line: 98, column: 3)
!4220 = distinct !DILexicalBlock(scope: !4212, file: !294, line: 97, column: 44)
!4221 = !DILocation(line: 100, column: 3, scope: !4220)
!4222 = !DILocation(line: 103, column: 12, scope: !4183)
!4223 = !DILocation(line: 105, column: 2, scope: !4183)
!4224 = !DILocation(line: 107, column: 1, scope: !4183)
!4225 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4226)
!4226 = !{!4227, !4228, !4229}
!4227 = !DILocalVariable(name: "dev", arg: 1, scope: !4225, file: !128, line: 108, type: !134)
!4228 = !DILocalVariable(name: "api", scope: !4225, file: !128, line: 110, type: !126)
!4229 = !DILocalVariable(name: "tmp", scope: !4225, file: !128, line: 111, type: !125)
!4230 = !DILocation(line: 0, scope: !4225)
!4231 = !DILocation(line: 113, column: 42, scope: !4225)
!4232 = !DILocation(line: 115, column: 13, scope: !4225)
!4233 = !DILocation(line: 115, column: 8, scope: !4225)
!4234 = !DILocation(line: 125, column: 2, scope: !4225)
!4235 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !4236, file: !4236, line: 175, type: !4237, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4239)
!4236 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!142, !125}
!4239 = !{!4240}
!4240 = !DILocalVariable(name: "level", arg: 1, scope: !4235, file: !4236, line: 175, type: !125)
!4241 = !DILocation(line: 0, scope: !4235)
!4242 = !DILocation(line: 177, column: 2, scope: !4235)
!4243 = !DILocation(line: 189, column: 1, scope: !4235)
!4244 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4245)
!4245 = !{!4246, !4247, !4248, !4249, !4251, !4252, !4253, !4254, !4255, !4256}
!4246 = !DILocalVariable(name: "dev", arg: 1, scope: !4244, file: !294, line: 109, type: !134)
!4247 = !DILocalVariable(name: "ecb_key", scope: !4244, file: !294, line: 112, type: !311)
!4248 = !DILocalVariable(name: "ecb_plaintext", scope: !4244, file: !294, line: 116, type: !311)
!4249 = !DILocalVariable(name: "ecb_ciphertext", scope: !4244, file: !294, line: 120, type: !4250)
!4250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!4251 = !DILocalVariable(name: "encrypted", scope: !4244, file: !294, line: 125, type: !311)
!4252 = !DILocalVariable(name: "decrypted", scope: !4244, file: !294, line: 126, type: !311)
!4253 = !DILocalVariable(name: "ini", scope: !4244, file: !294, line: 127, type: !166)
!4254 = !DILocalVariable(name: "encrypt", scope: !4244, file: !294, line: 132, type: !181)
!4255 = !DILocalVariable(name: "decrypt", scope: !4244, file: !294, line: 138, type: !181)
!4256 = !DILabel(scope: !4244, name: "out", file: !294, line: 191)
!4257 = !DILocation(line: 0, scope: !4244)
!4258 = !DILocation(line: 112, column: 2, scope: !4244)
!4259 = !DILocation(line: 112, column: 10, scope: !4244)
!4260 = !DILocation(line: 116, column: 2, scope: !4244)
!4261 = !DILocation(line: 116, column: 10, scope: !4244)
!4262 = !DILocation(line: 120, column: 2, scope: !4244)
!4263 = !DILocation(line: 120, column: 16, scope: !4244)
!4264 = !DILocation(line: 125, column: 2, scope: !4244)
!4265 = !DILocation(line: 125, column: 10, scope: !4244)
!4266 = !DILocation(line: 126, column: 2, scope: !4244)
!4267 = !DILocation(line: 126, column: 10, scope: !4244)
!4268 = !DILocation(line: 127, column: 2, scope: !4244)
!4269 = !DILocation(line: 127, column: 20, scope: !4244)
!4270 = !DILocation(line: 129, column: 7, scope: !4244)
!4271 = !DILocation(line: 127, column: 26, scope: !4244)
!4272 = !DILocation(line: 130, column: 12, scope: !4244)
!4273 = !DILocation(line: 132, column: 2, scope: !4244)
!4274 = !DILocation(line: 132, column: 20, scope: !4244)
!4275 = !DILocation(line: 132, column: 30, scope: !4244)
!4276 = !DILocation(line: 138, column: 2, scope: !4244)
!4277 = !DILocation(line: 138, column: 20, scope: !4244)
!4278 = !DILocation(line: 138, column: 30, scope: !4244)
!4279 = !DILocation(line: 145, column: 6, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 145, column: 6)
!4281 = !DILocation(line: 145, column: 6, scope: !4244)
!4282 = !DILocation(line: 151, column: 6, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 151, column: 6)
!4284 = !DILocation(line: 151, column: 6, scope: !4244)
!4285 = !DILocation(line: 152, column: 3, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !294, line: 152, column: 3)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !294, line: 152, column: 3)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !294, line: 152, column: 3)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !294, line: 152, column: 3)
!4290 = distinct !DILexicalBlock(scope: !4283, file: !294, line: 151, column: 39)
!4291 = !DILocation(line: 153, column: 3, scope: !4290)
!4292 = !DILocation(line: 156, column: 2, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !294, line: 156, column: 2)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !294, line: 156, column: 2)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !294, line: 156, column: 2)
!4296 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 156, column: 2)
!4297 = !DILocation(line: 158, column: 21, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 158, column: 6)
!4299 = !DILocation(line: 158, column: 6, scope: !4298)
!4300 = !DILocation(line: 158, column: 6, scope: !4244)
!4301 = !DILocation(line: 159, column: 3, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !294, line: 159, column: 3)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !294, line: 159, column: 3)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !294, line: 159, column: 3)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !294, line: 159, column: 3)
!4306 = distinct !DILexicalBlock(scope: !4298, file: !294, line: 158, column: 71)
!4307 = !DILocation(line: 161, column: 51, scope: !4306)
!4308 = !DILocation(line: 161, column: 3, scope: !4306)
!4309 = !DILocation(line: 163, column: 3, scope: !4306)
!4310 = !DILocation(line: 166, column: 2, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !294, line: 166, column: 2)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !294, line: 166, column: 2)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !294, line: 166, column: 2)
!4314 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 166, column: 2)
!4315 = !DILocation(line: 167, column: 2, scope: !4244)
!4316 = !DILocation(line: 169, column: 6, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 169, column: 6)
!4318 = !DILocation(line: 169, column: 6, scope: !4244)
!4319 = !DILocation(line: 175, column: 6, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 175, column: 6)
!4321 = !DILocation(line: 175, column: 6, scope: !4244)
!4322 = !DILocation(line: 176, column: 3, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !294, line: 176, column: 3)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !294, line: 176, column: 3)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !294, line: 176, column: 3)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !294, line: 176, column: 3)
!4327 = distinct !DILexicalBlock(scope: !4320, file: !294, line: 175, column: 39)
!4328 = !DILocation(line: 177, column: 3, scope: !4327)
!4329 = !DILocation(line: 180, column: 2, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !294, line: 180, column: 2)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !294, line: 180, column: 2)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !294, line: 180, column: 2)
!4333 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 180, column: 2)
!4334 = !DILocation(line: 182, column: 21, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 182, column: 6)
!4336 = !DILocation(line: 182, column: 6, scope: !4335)
!4337 = !DILocation(line: 182, column: 6, scope: !4244)
!4338 = !DILocation(line: 183, column: 3, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !294, line: 183, column: 3)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !294, line: 183, column: 3)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !294, line: 183, column: 3)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !294, line: 183, column: 3)
!4343 = distinct !DILexicalBlock(scope: !4335, file: !294, line: 182, column: 69)
!4344 = !DILocation(line: 185, column: 50, scope: !4343)
!4345 = !DILocation(line: 185, column: 3, scope: !4343)
!4346 = !DILocation(line: 187, column: 3, scope: !4343)
!4347 = !DILocation(line: 190, column: 2, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !294, line: 190, column: 2)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !294, line: 190, column: 2)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !294, line: 190, column: 2)
!4351 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 190, column: 2)
!4352 = !DILocation(line: 190, column: 2, scope: !4351)
!4353 = !DILocation(line: 191, column: 1, scope: !4244)
!4354 = !DILocation(line: 192, column: 2, scope: !4244)
!4355 = !DILocation(line: 193, column: 1, scope: !4244)
!4356 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4357)
!4357 = !{!4358, !4359, !4360, !4361, !4362, !4363, !4364}
!4358 = !DILocalVariable(name: "dev", arg: 1, scope: !4356, file: !128, line: 159, type: !134)
!4359 = !DILocalVariable(name: "ctx", arg: 2, scope: !4356, file: !128, line: 160, type: !165)
!4360 = !DILocalVariable(name: "algo", arg: 3, scope: !4356, file: !128, line: 161, type: !39)
!4361 = !DILocalVariable(name: "mode", arg: 4, scope: !4356, file: !128, line: 162, type: !30)
!4362 = !DILocalVariable(name: "optype", arg: 5, scope: !4356, file: !128, line: 163, type: !42)
!4363 = !DILocalVariable(name: "api", scope: !4356, file: !128, line: 165, type: !126)
!4364 = !DILocalVariable(name: "flags", scope: !4356, file: !128, line: 166, type: !208)
!4365 = !DILocation(line: 0, scope: !4356)
!4366 = !DILocation(line: 168, column: 42, scope: !4356)
!4367 = !DILocation(line: 169, column: 7, scope: !4356)
!4368 = !DILocation(line: 169, column: 14, scope: !4356)
!4369 = !DILocation(line: 170, column: 11, scope: !4356)
!4370 = !DILocation(line: 170, column: 23, scope: !4356)
!4371 = !DILocation(line: 187, column: 14, scope: !4356)
!4372 = !DILocation(line: 187, column: 9, scope: !4356)
!4373 = !DILocation(line: 187, column: 2, scope: !4356)
!4374 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4375)
!4375 = !{!4376, !4377}
!4376 = !DILocalVariable(name: "ctx", arg: 1, scope: !4374, file: !128, line: 249, type: !165)
!4377 = !DILocalVariable(name: "pkt", arg: 2, scope: !4374, file: !128, line: 250, type: !180)
!4378 = !DILocation(line: 0, scope: !4374)
!4379 = !DILocation(line: 255, column: 7, scope: !4374)
!4380 = !DILocation(line: 255, column: 11, scope: !4374)
!4381 = !DILocation(line: 256, column: 18, scope: !4374)
!4382 = !DILocation(line: 256, column: 9, scope: !4374)
!4383 = !DILocation(line: 256, column: 2, scope: !4374)
!4384 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !4385, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4387)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{null, !979, !184, !272}
!4387 = !{!4388, !4389, !4390, !4391, !4392}
!4388 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !4384, file: !294, line: 50, type: !979)
!4389 = !DILocalVariable(name: "result", arg: 2, scope: !4384, file: !294, line: 51, type: !184)
!4390 = !DILocalVariable(name: "length", arg: 3, scope: !4384, file: !294, line: 51, type: !272)
!4391 = !DILocalVariable(name: "i", scope: !4384, file: !294, line: 53, type: !125)
!4392 = !DILocalVariable(name: "j", scope: !4384, file: !294, line: 53, type: !125)
!4393 = !DILocation(line: 0, scope: !4384)
!4394 = !DILocation(line: 55, column: 2, scope: !4384)
!4395 = !DILocation(line: 57, column: 23, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !294, line: 57, column: 2)
!4397 = distinct !DILexicalBlock(scope: !4384, file: !294, line: 57, column: 2)
!4398 = !DILocation(line: 57, column: 2, scope: !4397)
!4399 = !DILocation(line: 66, column: 2, scope: !4384)
!4400 = !DILocation(line: 68, column: 2, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4384, file: !294, line: 68, column: 2)
!4402 = !DILocation(line: 58, column: 21, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4396, file: !294, line: 57, column: 43)
!4404 = !DILocation(line: 58, column: 3, scope: !4403)
!4405 = !DILocation(line: 60, column: 9, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4403, file: !294, line: 60, column: 7)
!4407 = !DILocation(line: 60, column: 7, scope: !4403)
!4408 = !DILocation(line: 61, column: 4, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4406, file: !294, line: 60, column: 16)
!4410 = !DILocation(line: 63, column: 3, scope: !4409)
!4411 = !DILocation(line: 0, scope: !4397)
!4412 = !DILocation(line: 57, column: 34, scope: !4396)
!4413 = !DILocation(line: 57, column: 39, scope: !4396)
!4414 = distinct !{!4414, !4398, !4415}
!4415 = !DILocation(line: 64, column: 2, scope: !4397)
!4416 = !DILocation(line: 69, column: 21, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !294, line: 68, column: 43)
!4418 = distinct !DILexicalBlock(scope: !4401, file: !294, line: 68, column: 2)
!4419 = !DILocation(line: 69, column: 3, scope: !4417)
!4420 = !DILocation(line: 71, column: 9, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4417, file: !294, line: 71, column: 7)
!4422 = !DILocation(line: 71, column: 7, scope: !4417)
!4423 = !DILocation(line: 72, column: 4, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4421, file: !294, line: 71, column: 16)
!4425 = !DILocation(line: 74, column: 3, scope: !4424)
!4426 = !DILocation(line: 0, scope: !4401)
!4427 = !DILocation(line: 68, column: 34, scope: !4418)
!4428 = !DILocation(line: 68, column: 39, scope: !4418)
!4429 = !DILocation(line: 68, column: 23, scope: !4418)
!4430 = distinct !{!4430, !4400, !4431}
!4431 = !DILocation(line: 75, column: 2, scope: !4401)
!4432 = !DILocation(line: 77, column: 2, scope: !4384)
!4433 = !DILocation(line: 78, column: 1, scope: !4384)
!4434 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4435)
!4435 = !{!4436, !4437, !4438}
!4436 = !DILocalVariable(name: "dev", arg: 1, scope: !4434, file: !128, line: 201, type: !134)
!4437 = !DILocalVariable(name: "ctx", arg: 2, scope: !4434, file: !128, line: 202, type: !165)
!4438 = !DILocalVariable(name: "api", scope: !4434, file: !128, line: 204, type: !126)
!4439 = !DILocation(line: 0, scope: !4434)
!4440 = !DILocation(line: 206, column: 42, scope: !4434)
!4441 = !DILocation(line: 208, column: 14, scope: !4434)
!4442 = !DILocation(line: 208, column: 9, scope: !4434)
!4443 = !DILocation(line: 208, column: 2, scope: !4434)
!4444 = !DILocation(line: 0, scope: !293)
!4445 = !DILocation(line: 207, column: 2, scope: !293)
!4446 = !DILocation(line: 207, column: 10, scope: !293)
!4447 = !DILocation(line: 208, column: 2, scope: !293)
!4448 = !DILocation(line: 208, column: 10, scope: !293)
!4449 = !DILocation(line: 209, column: 2, scope: !293)
!4450 = !DILocation(line: 209, column: 20, scope: !293)
!4451 = !DILocation(line: 211, column: 7, scope: !293)
!4452 = !DILocation(line: 209, column: 26, scope: !293)
!4453 = !DILocation(line: 212, column: 12, scope: !293)
!4454 = !DILocation(line: 214, column: 2, scope: !293)
!4455 = !DILocation(line: 214, column: 20, scope: !293)
!4456 = !DILocation(line: 214, column: 30, scope: !293)
!4457 = !DILocation(line: 220, column: 2, scope: !293)
!4458 = !DILocation(line: 220, column: 20, scope: !293)
!4459 = !DILocation(line: 220, column: 30, scope: !293)
!4460 = !DILocation(line: 232, column: 6, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!4462 = !DILocation(line: 232, column: 6, scope: !293)
!4463 = !DILocation(line: 238, column: 6, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!4465 = !DILocation(line: 238, column: 6, scope: !293)
!4466 = !DILocation(line: 239, column: 3, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !294, line: 239, column: 3)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !294, line: 239, column: 3)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !294, line: 239, column: 3)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !294, line: 239, column: 3)
!4471 = distinct !DILexicalBlock(scope: !4464, file: !294, line: 238, column: 41)
!4472 = !DILocation(line: 240, column: 3, scope: !4471)
!4473 = !DILocation(line: 243, column: 2, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !294, line: 243, column: 2)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !294, line: 243, column: 2)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !294, line: 243, column: 2)
!4477 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!4478 = !DILocation(line: 245, column: 21, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!4480 = !DILocation(line: 245, column: 6, scope: !4479)
!4481 = !DILocation(line: 245, column: 6, scope: !293)
!4482 = !DILocation(line: 246, column: 3, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !294, line: 246, column: 3)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !294, line: 246, column: 3)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !294, line: 246, column: 3)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !294, line: 246, column: 3)
!4487 = distinct !DILexicalBlock(scope: !4479, file: !294, line: 245, column: 71)
!4488 = !DILocation(line: 248, column: 51, scope: !4487)
!4489 = !DILocation(line: 248, column: 3, scope: !4487)
!4490 = !DILocation(line: 250, column: 3, scope: !4487)
!4491 = !DILocation(line: 253, column: 2, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !294, line: 253, column: 2)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !294, line: 253, column: 2)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !294, line: 253, column: 2)
!4495 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!4496 = !DILocation(line: 254, column: 2, scope: !293)
!4497 = !DILocation(line: 256, column: 6, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!4499 = !DILocation(line: 256, column: 6, scope: !293)
!4500 = !DILocation(line: 263, column: 6, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!4502 = !DILocation(line: 263, column: 6, scope: !293)
!4503 = !DILocation(line: 264, column: 3, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !294, line: 264, column: 3)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !294, line: 264, column: 3)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !294, line: 264, column: 3)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !294, line: 264, column: 3)
!4508 = distinct !DILexicalBlock(scope: !4501, file: !294, line: 263, column: 48)
!4509 = !DILocation(line: 265, column: 3, scope: !4508)
!4510 = !DILocation(line: 268, column: 2, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !294, line: 268, column: 2)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !294, line: 268, column: 2)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !294, line: 268, column: 2)
!4514 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!4515 = !DILocation(line: 270, column: 21, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!4517 = !DILocation(line: 270, column: 6, scope: !4516)
!4518 = !DILocation(line: 270, column: 6, scope: !293)
!4519 = !DILocation(line: 271, column: 3, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !294, line: 271, column: 3)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !294, line: 271, column: 3)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !294, line: 271, column: 3)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !294, line: 271, column: 3)
!4524 = distinct !DILexicalBlock(scope: !4516, file: !294, line: 270, column: 61)
!4525 = !DILocation(line: 273, column: 46, scope: !4524)
!4526 = !DILocation(line: 273, column: 3, scope: !4524)
!4527 = !DILocation(line: 275, column: 3, scope: !4524)
!4528 = !DILocation(line: 278, column: 2, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !294, line: 278, column: 2)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !294, line: 278, column: 2)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !294, line: 278, column: 2)
!4532 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!4533 = !DILocation(line: 278, column: 2, scope: !4532)
!4534 = !DILocation(line: 279, column: 1, scope: !293)
!4535 = !DILocation(line: 280, column: 2, scope: !293)
!4536 = !DILocation(line: 281, column: 1, scope: !293)
!4537 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4538)
!4538 = !{!4539, !4540, !4541}
!4539 = !DILocalVariable(name: "ctx", arg: 1, scope: !4537, file: !128, line: 270, type: !165)
!4540 = !DILocalVariable(name: "pkt", arg: 2, scope: !4537, file: !128, line: 271, type: !180)
!4541 = !DILocalVariable(name: "iv", arg: 3, scope: !4537, file: !128, line: 271, type: !184)
!4542 = !DILocation(line: 0, scope: !4537)
!4543 = !DILocation(line: 276, column: 7, scope: !4537)
!4544 = !DILocation(line: 276, column: 11, scope: !4537)
!4545 = !DILocation(line: 277, column: 18, scope: !4537)
!4546 = !DILocation(line: 277, column: 9, scope: !4537)
!4547 = !DILocation(line: 277, column: 2, scope: !4537)
!4548 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4549)
!4549 = !{!4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557}
!4550 = !DILocalVariable(name: "dev", arg: 1, scope: !4548, file: !294, line: 294, type: !134)
!4551 = !DILocalVariable(name: "encrypted", scope: !4548, file: !294, line: 296, type: !304)
!4552 = !DILocalVariable(name: "decrypted", scope: !4548, file: !294, line: 297, type: !304)
!4553 = !DILocalVariable(name: "ini", scope: !4548, file: !294, line: 298, type: !166)
!4554 = !DILocalVariable(name: "encrypt", scope: !4548, file: !294, line: 305, type: !181)
!4555 = !DILocalVariable(name: "decrypt", scope: !4548, file: !294, line: 311, type: !181)
!4556 = !DILocalVariable(name: "iv", scope: !4548, file: !294, line: 317, type: !363)
!4557 = !DILabel(scope: !4548, name: "out", file: !294, line: 368)
!4558 = !DILocation(line: 0, scope: !4548)
!4559 = !DILocation(line: 296, column: 2, scope: !4548)
!4560 = !DILocation(line: 296, column: 10, scope: !4548)
!4561 = !DILocation(line: 297, column: 2, scope: !4548)
!4562 = !DILocation(line: 297, column: 10, scope: !4548)
!4563 = !DILocation(line: 298, column: 2, scope: !4548)
!4564 = !DILocation(line: 298, column: 20, scope: !4548)
!4565 = !DILocation(line: 298, column: 26, scope: !4548)
!4566 = !DILocation(line: 300, column: 7, scope: !4548)
!4567 = !DILocation(line: 303, column: 24, scope: !4548)
!4568 = !DILocation(line: 301, column: 12, scope: !4548)
!4569 = !DILocation(line: 305, column: 2, scope: !4548)
!4570 = !DILocation(line: 305, column: 20, scope: !4548)
!4571 = !DILocation(line: 305, column: 30, scope: !4548)
!4572 = !DILocation(line: 311, column: 2, scope: !4548)
!4573 = !DILocation(line: 311, column: 20, scope: !4548)
!4574 = !DILocation(line: 311, column: 30, scope: !4548)
!4575 = !DILocation(line: 317, column: 2, scope: !4548)
!4576 = !DILocation(line: 317, column: 10, scope: !4548)
!4577 = !DILocation(line: 322, column: 6, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 322, column: 6)
!4579 = !DILocation(line: 322, column: 6, scope: !4548)
!4580 = !DILocation(line: 328, column: 6, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 328, column: 6)
!4582 = !DILocation(line: 328, column: 6, scope: !4548)
!4583 = !DILocation(line: 329, column: 3, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !294, line: 329, column: 3)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !294, line: 329, column: 3)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !294, line: 329, column: 3)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !294, line: 329, column: 3)
!4588 = distinct !DILexicalBlock(scope: !4581, file: !294, line: 328, column: 41)
!4589 = !DILocation(line: 330, column: 3, scope: !4588)
!4590 = !DILocation(line: 333, column: 2, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !294, line: 333, column: 2)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !294, line: 333, column: 2)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !294, line: 333, column: 2)
!4594 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 333, column: 2)
!4595 = !DILocation(line: 335, column: 21, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 335, column: 6)
!4597 = !DILocation(line: 335, column: 6, scope: !4596)
!4598 = !DILocation(line: 335, column: 6, scope: !4548)
!4599 = !DILocation(line: 336, column: 3, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !294, line: 336, column: 3)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !294, line: 336, column: 3)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !294, line: 336, column: 3)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !294, line: 336, column: 3)
!4604 = distinct !DILexicalBlock(scope: !4596, file: !294, line: 335, column: 71)
!4605 = !DILocation(line: 338, column: 51, scope: !4604)
!4606 = !DILocation(line: 338, column: 3, scope: !4604)
!4607 = !DILocation(line: 340, column: 3, scope: !4604)
!4608 = !DILocation(line: 343, column: 2, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !294, line: 343, column: 2)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !294, line: 343, column: 2)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !294, line: 343, column: 2)
!4612 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 343, column: 2)
!4613 = !DILocation(line: 344, column: 2, scope: !4548)
!4614 = !DILocation(line: 346, column: 6, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 346, column: 6)
!4616 = !DILocation(line: 346, column: 6, scope: !4548)
!4617 = !DILocation(line: 352, column: 6, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 352, column: 6)
!4619 = !DILocation(line: 352, column: 6, scope: !4548)
!4620 = !DILocation(line: 353, column: 3, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !294, line: 353, column: 3)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !294, line: 353, column: 3)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !294, line: 353, column: 3)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !294, line: 353, column: 3)
!4625 = distinct !DILexicalBlock(scope: !4618, file: !294, line: 352, column: 41)
!4626 = !DILocation(line: 354, column: 3, scope: !4625)
!4627 = !DILocation(line: 357, column: 2, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !294, line: 357, column: 2)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !294, line: 357, column: 2)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !294, line: 357, column: 2)
!4631 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 357, column: 2)
!4632 = !DILocation(line: 359, column: 21, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 359, column: 6)
!4634 = !DILocation(line: 359, column: 6, scope: !4633)
!4635 = !DILocation(line: 359, column: 6, scope: !4548)
!4636 = !DILocation(line: 360, column: 3, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !294, line: 360, column: 3)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !294, line: 360, column: 3)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !294, line: 360, column: 3)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !294, line: 360, column: 3)
!4641 = distinct !DILexicalBlock(scope: !4633, file: !294, line: 359, column: 61)
!4642 = !DILocation(line: 363, column: 14, scope: !4641)
!4643 = !DILocation(line: 362, column: 3, scope: !4641)
!4644 = !DILocation(line: 364, column: 3, scope: !4641)
!4645 = !DILocation(line: 367, column: 2, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !294, line: 367, column: 2)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !294, line: 367, column: 2)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !294, line: 367, column: 2)
!4649 = distinct !DILexicalBlock(scope: !4548, file: !294, line: 367, column: 2)
!4650 = !DILocation(line: 367, column: 2, scope: !4649)
!4651 = !DILocation(line: 368, column: 1, scope: !4548)
!4652 = !DILocation(line: 369, column: 2, scope: !4548)
!4653 = !DILocation(line: 370, column: 1, scope: !4548)
!4654 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4655)
!4655 = !{!4656, !4657, !4658}
!4656 = !DILocalVariable(name: "ctx", arg: 1, scope: !4654, file: !128, line: 297, type: !165)
!4657 = !DILocalVariable(name: "pkt", arg: 2, scope: !4654, file: !128, line: 298, type: !180)
!4658 = !DILocalVariable(name: "iv", arg: 3, scope: !4654, file: !128, line: 298, type: !184)
!4659 = !DILocation(line: 0, scope: !4654)
!4660 = !DILocation(line: 303, column: 7, scope: !4654)
!4661 = !DILocation(line: 303, column: 11, scope: !4654)
!4662 = !DILocation(line: 304, column: 18, scope: !4654)
!4663 = !DILocation(line: 304, column: 9, scope: !4654)
!4664 = !DILocation(line: 304, column: 2, scope: !4654)
!4665 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4666)
!4666 = !{!4667, !4668, !4672, !4676, !4677, !4678, !4679, !4680}
!4667 = !DILocalVariable(name: "dev", arg: 1, scope: !4665, file: !294, line: 394, type: !134)
!4668 = !DILocalVariable(name: "encrypted", scope: !4665, file: !294, line: 396, type: !4669)
!4669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !4670)
!4670 = !{!4671}
!4671 = !DISubrange(count: 50)
!4672 = !DILocalVariable(name: "decrypted", scope: !4665, file: !294, line: 397, type: !4673)
!4673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !4674)
!4674 = !{!4675}
!4675 = !DISubrange(count: 25)
!4676 = !DILocalVariable(name: "ini", scope: !4665, file: !294, line: 398, type: !166)
!4677 = !DILocalVariable(name: "encrypt", scope: !4665, file: !294, line: 407, type: !181)
!4678 = !DILocalVariable(name: "ccm_op", scope: !4665, file: !294, line: 413, type: !203)
!4679 = !DILocalVariable(name: "decrypt", scope: !4665, file: !294, line: 425, type: !181)
!4680 = !DILabel(scope: !4665, name: "out", file: !294, line: 480)
!4681 = !DILocation(line: 0, scope: !4665)
!4682 = !DILocation(line: 396, column: 2, scope: !4665)
!4683 = !DILocation(line: 396, column: 10, scope: !4665)
!4684 = !DILocation(line: 397, column: 2, scope: !4665)
!4685 = !DILocation(line: 397, column: 10, scope: !4665)
!4686 = !DILocation(line: 398, column: 2, scope: !4665)
!4687 = !DILocation(line: 398, column: 20, scope: !4665)
!4688 = !DILocation(line: 398, column: 26, scope: !4665)
!4689 = !DILocation(line: 400, column: 7, scope: !4665)
!4690 = !DILocation(line: 401, column: 15, scope: !4665)
!4691 = !DILocation(line: 401, column: 27, scope: !4665)
!4692 = !DILocation(line: 405, column: 12, scope: !4665)
!4693 = !DILocation(line: 407, column: 2, scope: !4665)
!4694 = !DILocation(line: 407, column: 20, scope: !4665)
!4695 = !DILocation(line: 407, column: 30, scope: !4665)
!4696 = !DILocation(line: 413, column: 2, scope: !4665)
!4697 = !DILocation(line: 413, column: 25, scope: !4665)
!4698 = !DILocation(line: 413, column: 34, scope: !4665)
!4699 = !DILocation(line: 423, column: 20, scope: !4665)
!4700 = !DILocation(line: 425, column: 2, scope: !4665)
!4701 = !DILocation(line: 425, column: 20, scope: !4665)
!4702 = !DILocation(line: 425, column: 30, scope: !4665)
!4703 = !DILocation(line: 432, column: 6, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 432, column: 6)
!4705 = !DILocation(line: 432, column: 6, scope: !4665)
!4706 = !DILocation(line: 438, column: 13, scope: !4665)
!4707 = !DILocation(line: 439, column: 6, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 439, column: 6)
!4709 = !DILocation(line: 439, column: 6, scope: !4665)
!4710 = !DILocation(line: 440, column: 3, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !294, line: 440, column: 3)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !294, line: 440, column: 3)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !294, line: 440, column: 3)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !294, line: 440, column: 3)
!4715 = distinct !DILexicalBlock(scope: !4708, file: !294, line: 439, column: 47)
!4716 = !DILocation(line: 441, column: 3, scope: !4715)
!4717 = !DILocation(line: 444, column: 2, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !294, line: 444, column: 2)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !294, line: 444, column: 2)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !294, line: 444, column: 2)
!4721 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 444, column: 2)
!4722 = !DILocation(line: 446, column: 21, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 446, column: 6)
!4724 = !DILocation(line: 446, column: 6, scope: !4723)
!4725 = !DILocation(line: 446, column: 6, scope: !4665)
!4726 = !DILocation(line: 447, column: 3, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !294, line: 447, column: 3)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !294, line: 447, column: 3)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !294, line: 447, column: 3)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !294, line: 447, column: 3)
!4731 = distinct !DILexicalBlock(scope: !4723, file: !294, line: 446, column: 67)
!4732 = !DILocation(line: 450, column: 14, scope: !4731)
!4733 = !DILocation(line: 449, column: 3, scope: !4731)
!4734 = !DILocation(line: 451, column: 3, scope: !4731)
!4735 = !DILocation(line: 454, column: 2, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !294, line: 454, column: 2)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !294, line: 454, column: 2)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !294, line: 454, column: 2)
!4739 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 454, column: 2)
!4740 = !DILocation(line: 455, column: 2, scope: !4665)
!4741 = !DILocation(line: 457, column: 6, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 457, column: 6)
!4743 = !DILocation(line: 457, column: 6, scope: !4665)
!4744 = !DILocation(line: 463, column: 13, scope: !4665)
!4745 = !DILocation(line: 464, column: 6, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 464, column: 6)
!4747 = !DILocation(line: 464, column: 6, scope: !4665)
!4748 = !DILocation(line: 465, column: 3, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !294, line: 465, column: 3)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !294, line: 465, column: 3)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !294, line: 465, column: 3)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !294, line: 465, column: 3)
!4753 = distinct !DILexicalBlock(scope: !4746, file: !294, line: 464, column: 47)
!4754 = !DILocation(line: 466, column: 3, scope: !4753)
!4755 = !DILocation(line: 469, column: 2, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !294, line: 469, column: 2)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !294, line: 469, column: 2)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !294, line: 469, column: 2)
!4759 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 469, column: 2)
!4760 = !DILocation(line: 471, column: 21, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 471, column: 6)
!4762 = !DILocation(line: 471, column: 6, scope: !4761)
!4763 = !DILocation(line: 471, column: 6, scope: !4665)
!4764 = !DILocation(line: 472, column: 3, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !294, line: 472, column: 3)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !294, line: 472, column: 3)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !294, line: 472, column: 3)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !294, line: 472, column: 3)
!4769 = distinct !DILexicalBlock(scope: !4761, file: !294, line: 471, column: 59)
!4770 = !DILocation(line: 475, column: 14, scope: !4769)
!4771 = !DILocation(line: 474, column: 3, scope: !4769)
!4772 = !DILocation(line: 476, column: 3, scope: !4769)
!4773 = !DILocation(line: 479, column: 2, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !294, line: 479, column: 2)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !294, line: 479, column: 2)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !294, line: 479, column: 2)
!4777 = distinct !DILexicalBlock(scope: !4665, file: !294, line: 479, column: 2)
!4778 = !DILocation(line: 479, column: 2, scope: !4777)
!4779 = !DILocation(line: 480, column: 1, scope: !4665)
!4780 = !DILocation(line: 481, column: 2, scope: !4665)
!4781 = !DILocation(line: 482, column: 1, scope: !4665)
!4782 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4783)
!4783 = !{!4784, !4785, !4786}
!4784 = !DILocalVariable(name: "ctx", arg: 1, scope: !4782, file: !128, line: 319, type: !165)
!4785 = !DILocalVariable(name: "pkt", arg: 2, scope: !4782, file: !128, line: 320, type: !202)
!4786 = !DILocalVariable(name: "nonce", arg: 3, scope: !4782, file: !128, line: 320, type: !184)
!4787 = !DILocation(line: 0, scope: !4782)
!4788 = !DILocation(line: 325, column: 7, scope: !4782)
!4789 = !DILocation(line: 325, column: 12, scope: !4782)
!4790 = !DILocation(line: 325, column: 16, scope: !4782)
!4791 = !DILocation(line: 326, column: 18, scope: !4782)
!4792 = !DILocation(line: 326, column: 9, scope: !4782)
!4793 = !DILocation(line: 326, column: 2, scope: !4782)
!4794 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4795)
!4795 = !{!4796, !4797, !4801, !4803, !4804, !4805, !4806, !4807}
!4796 = !DILocalVariable(name: "dev", arg: 1, scope: !4794, file: !294, line: 511, type: !134)
!4797 = !DILocalVariable(name: "encrypted", scope: !4794, file: !294, line: 513, type: !4798)
!4798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4799)
!4799 = !{!4800}
!4800 = !DISubrange(count: 60)
!4801 = !DILocalVariable(name: "decrypted", scope: !4794, file: !294, line: 514, type: !4802)
!4802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !987)
!4803 = !DILocalVariable(name: "ini", scope: !4794, file: !294, line: 515, type: !166)
!4804 = !DILocalVariable(name: "encrypt", scope: !4794, file: !294, line: 524, type: !181)
!4805 = !DILocalVariable(name: "gcm_op", scope: !4794, file: !294, line: 530, type: !203)
!4806 = !DILocalVariable(name: "decrypt", scope: !4794, file: !294, line: 542, type: !181)
!4807 = !DILabel(scope: !4794, name: "out", file: !294, line: 597)
!4808 = !DILocation(line: 0, scope: !4794)
!4809 = !DILocation(line: 513, column: 2, scope: !4794)
!4810 = !DILocation(line: 513, column: 10, scope: !4794)
!4811 = !DILocation(line: 514, column: 2, scope: !4794)
!4812 = !DILocation(line: 514, column: 10, scope: !4794)
!4813 = !DILocation(line: 515, column: 2, scope: !4794)
!4814 = !DILocation(line: 515, column: 20, scope: !4794)
!4815 = !DILocation(line: 515, column: 26, scope: !4794)
!4816 = !DILocation(line: 517, column: 7, scope: !4794)
!4817 = !DILocation(line: 518, column: 15, scope: !4794)
!4818 = !DILocation(line: 518, column: 27, scope: !4794)
!4819 = !DILocation(line: 522, column: 12, scope: !4794)
!4820 = !DILocation(line: 524, column: 2, scope: !4794)
!4821 = !DILocation(line: 524, column: 20, scope: !4794)
!4822 = !DILocation(line: 524, column: 30, scope: !4794)
!4823 = !DILocation(line: 530, column: 2, scope: !4794)
!4824 = !DILocation(line: 530, column: 25, scope: !4794)
!4825 = !DILocation(line: 530, column: 34, scope: !4794)
!4826 = !DILocation(line: 540, column: 20, scope: !4794)
!4827 = !DILocation(line: 542, column: 2, scope: !4794)
!4828 = !DILocation(line: 542, column: 20, scope: !4794)
!4829 = !DILocation(line: 542, column: 30, scope: !4794)
!4830 = !DILocation(line: 549, column: 6, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 549, column: 6)
!4832 = !DILocation(line: 549, column: 6, scope: !4794)
!4833 = !DILocation(line: 555, column: 13, scope: !4794)
!4834 = !DILocation(line: 556, column: 6, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 556, column: 6)
!4836 = !DILocation(line: 556, column: 6, scope: !4794)
!4837 = !DILocation(line: 557, column: 3, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4839, file: !294, line: 557, column: 3)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !294, line: 557, column: 3)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !294, line: 557, column: 3)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !294, line: 557, column: 3)
!4842 = distinct !DILexicalBlock(scope: !4835, file: !294, line: 556, column: 47)
!4843 = !DILocation(line: 558, column: 3, scope: !4842)
!4844 = !DILocation(line: 561, column: 2, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !294, line: 561, column: 2)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !294, line: 561, column: 2)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !294, line: 561, column: 2)
!4848 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 561, column: 2)
!4849 = !DILocation(line: 563, column: 21, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 563, column: 6)
!4851 = !DILocation(line: 563, column: 6, scope: !4850)
!4852 = !DILocation(line: 563, column: 6, scope: !4794)
!4853 = !DILocation(line: 564, column: 3, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !294, line: 564, column: 3)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !294, line: 564, column: 3)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !294, line: 564, column: 3)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !294, line: 564, column: 3)
!4858 = distinct !DILexicalBlock(scope: !4850, file: !294, line: 563, column: 67)
!4859 = !DILocation(line: 567, column: 14, scope: !4858)
!4860 = !DILocation(line: 566, column: 3, scope: !4858)
!4861 = !DILocation(line: 568, column: 3, scope: !4858)
!4862 = !DILocation(line: 571, column: 2, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !294, line: 571, column: 2)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !294, line: 571, column: 2)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !294, line: 571, column: 2)
!4866 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 571, column: 2)
!4867 = !DILocation(line: 572, column: 2, scope: !4794)
!4868 = !DILocation(line: 574, column: 6, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 574, column: 6)
!4870 = !DILocation(line: 574, column: 6, scope: !4794)
!4871 = !DILocation(line: 580, column: 13, scope: !4794)
!4872 = !DILocation(line: 581, column: 6, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 581, column: 6)
!4874 = !DILocation(line: 581, column: 6, scope: !4794)
!4875 = !DILocation(line: 582, column: 3, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !294, line: 582, column: 3)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !294, line: 582, column: 3)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !294, line: 582, column: 3)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !294, line: 582, column: 3)
!4880 = distinct !DILexicalBlock(scope: !4873, file: !294, line: 581, column: 47)
!4881 = !DILocation(line: 583, column: 3, scope: !4880)
!4882 = !DILocation(line: 586, column: 2, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !294, line: 586, column: 2)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !294, line: 586, column: 2)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !294, line: 586, column: 2)
!4886 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 586, column: 2)
!4887 = !DILocation(line: 588, column: 21, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 588, column: 6)
!4889 = !DILocation(line: 588, column: 6, scope: !4888)
!4890 = !DILocation(line: 588, column: 6, scope: !4794)
!4891 = !DILocation(line: 589, column: 3, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !294, line: 589, column: 3)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !294, line: 589, column: 3)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !294, line: 589, column: 3)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !294, line: 589, column: 3)
!4896 = distinct !DILexicalBlock(scope: !4888, file: !294, line: 588, column: 59)
!4897 = !DILocation(line: 592, column: 14, scope: !4896)
!4898 = !DILocation(line: 591, column: 3, scope: !4896)
!4899 = !DILocation(line: 593, column: 3, scope: !4896)
!4900 = !DILocation(line: 596, column: 2, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !294, line: 596, column: 2)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !294, line: 596, column: 2)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !294, line: 596, column: 2)
!4904 = distinct !DILexicalBlock(scope: !4794, file: !294, line: 596, column: 2)
!4905 = !DILocation(line: 596, column: 2, scope: !4904)
!4906 = !DILocation(line: 597, column: 1, scope: !4794)
!4907 = !DILocation(line: 598, column: 2, scope: !4794)
!4908 = !DILocation(line: 599, column: 1, scope: !4794)
!4909 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4910)
!4910 = !{!4911, !4912, !4913}
!4911 = !DILocalVariable(name: "ctx", arg: 1, scope: !4909, file: !128, line: 341, type: !165)
!4912 = !DILocalVariable(name: "pkt", arg: 2, scope: !4909, file: !128, line: 342, type: !202)
!4913 = !DILocalVariable(name: "nonce", arg: 3, scope: !4909, file: !128, line: 342, type: !184)
!4914 = !DILocation(line: 0, scope: !4909)
!4915 = !DILocation(line: 347, column: 7, scope: !4909)
!4916 = !DILocation(line: 347, column: 12, scope: !4909)
!4917 = !DILocation(line: 347, column: 16, scope: !4909)
!4918 = !DILocation(line: 348, column: 18, scope: !4909)
!4919 = !DILocation(line: 348, column: 9, scope: !4909)
!4920 = !DILocation(line: 348, column: 2, scope: !4909)
!4921 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !4072, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4922)
!4922 = !{!4923, !4924, !4932}
!4923 = !DILocalVariable(name: "dev", scope: !4921, file: !294, line: 609, type: !134)
!4924 = !DILocalVariable(name: "modes", scope: !4921, file: !294, line: 623, type: !4925)
!4925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4926, size: 384, elements: !3355)
!4926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4927)
!4927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4928)
!4928 = !{!4929, !4930}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4927, file: !294, line: 602, baseType: !140, size: 32)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4927, file: !294, line: 603, baseType: !4931, size: 32, offset: 32)
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4932 = !DILocalVariable(name: "i", scope: !4921, file: !294, line: 631, type: !125)
!4933 = !DILocation(line: 609, column: 29, scope: !4921)
!4934 = !DILocation(line: 0, scope: !4921)
!4935 = !DILocation(line: 611, column: 7, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4921, file: !294, line: 611, column: 6)
!4937 = !DILocation(line: 611, column: 6, scope: !4921)
!4938 = !DILocation(line: 612, column: 3, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !294, line: 612, column: 3)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !294, line: 612, column: 3)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !294, line: 612, column: 3)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !294, line: 612, column: 3)
!4943 = distinct !DILexicalBlock(scope: !4936, file: !294, line: 611, column: 12)
!4944 = !DILocation(line: 613, column: 3, scope: !4943)
!4945 = !DILocation(line: 623, column: 25, scope: !4921)
!4946 = !DILocation(line: 633, column: 6, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4921, file: !294, line: 633, column: 6)
!4948 = !DILocation(line: 633, column: 6, scope: !4921)
!4949 = !DILocation(line: 634, column: 3, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !294, line: 634, column: 3)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !294, line: 634, column: 3)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !294, line: 634, column: 3)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !294, line: 634, column: 3)
!4954 = distinct !DILexicalBlock(scope: !4947, file: !294, line: 633, column: 38)
!4955 = !DILocation(line: 635, column: 3, scope: !4954)
!4956 = !DILocation(line: 638, column: 2, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !294, line: 638, column: 2)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !294, line: 638, column: 2)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !294, line: 638, column: 2)
!4960 = distinct !DILexicalBlock(scope: !4921, file: !294, line: 638, column: 2)
!4961 = !DILocation(line: 640, column: 2, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4921, file: !294, line: 640, column: 2)
!4963 = !DILocation(line: 640, column: 23, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4962, file: !294, line: 640, column: 2)
!4965 = !DILocation(line: 641, column: 3, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !294, line: 641, column: 3)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !294, line: 641, column: 3)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !294, line: 641, column: 3)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !294, line: 641, column: 3)
!4970 = distinct !DILexicalBlock(scope: !4964, file: !294, line: 640, column: 34)
!4971 = !DILocation(line: 642, column: 12, scope: !4970)
!4972 = !DILocation(line: 642, column: 3, scope: !4970)
!4973 = !DILocation(line: 640, column: 30, scope: !4964)
!4974 = distinct !{!4974, !4961, !4975}
!4975 = !DILocation(line: 643, column: 2, scope: !4962)
!4976 = !DILocation(line: 644, column: 1, scope: !4921)
!4977 = distinct !DISubprogram(name: "device_get_binding", scope: !4978, file: !4978, line: 24, type: !4979, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4981)
!4978 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!134, !140}
!4981 = !{!4982}
!4982 = !DILocalVariable(name: "name", arg: 1, scope: !4977, file: !4978, line: 24, type: !140)
!4983 = !DILocation(line: 0, scope: !4977)
!4984 = !DILocation(line: 32, column: 2, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4977, file: !4978, line: 32, column: 2)
!4986 = !{i64 2148800121}
!4987 = !DILocation(line: 33, column: 9, scope: !4977)
!4988 = !DILocation(line: 33, column: 2, scope: !4977)
!4989 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4990, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4999)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!125, !124, !272, !208, !140, !4992}
!4992 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4993, line: 99, baseType: !4994)
!4993 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4994 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4993, line: 40, baseType: !4995)
!4995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4996)
!4996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4997)
!4997 = !{!4998}
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4996, file: !395, line: 18, baseType: !124, size: 32)
!4999 = !{!5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5020, !5021, !5034, !5043, !5046, !5047, !5050, !5053, !5056, !5059, !5065}
!5000 = !DILocalVariable(name: "packaged", arg: 1, scope: !4989, file: !395, line: 233, type: !124)
!5001 = !DILocalVariable(name: "len", arg: 2, scope: !4989, file: !395, line: 233, type: !272)
!5002 = !DILocalVariable(name: "flags", arg: 3, scope: !4989, file: !395, line: 233, type: !208)
!5003 = !DILocalVariable(name: "fmt", arg: 4, scope: !4989, file: !395, line: 234, type: !140)
!5004 = !DILocalVariable(name: "ap", arg: 5, scope: !4989, file: !395, line: 234, type: !4992)
!5005 = !DILocalVariable(name: "buf0", scope: !4989, file: !395, line: 247, type: !184)
!5006 = !DILocalVariable(name: "buf", scope: !4989, file: !395, line: 248, type: !184)
!5007 = !DILocalVariable(name: "size", scope: !4989, file: !395, line: 249, type: !32)
!5008 = !DILocalVariable(name: "align", scope: !4989, file: !395, line: 250, type: !32)
!5009 = !DILocalVariable(name: "str_ptr_pos", scope: !4989, file: !395, line: 251, type: !311)
!5010 = !DILocalVariable(name: "str_ptr_arg", scope: !4989, file: !395, line: 252, type: !311)
!5011 = !DILocalVariable(name: "s_idx", scope: !4989, file: !395, line: 253, type: !32)
!5012 = !DILocalVariable(name: "s_rw_cnt", scope: !4989, file: !395, line: 254, type: !32)
!5013 = !DILocalVariable(name: "s_ro_cnt", scope: !4989, file: !395, line: 255, type: !32)
!5014 = !DILocalVariable(name: "arg_idx", scope: !4989, file: !395, line: 256, type: !125)
!5015 = !DILocalVariable(name: "i", scope: !4989, file: !395, line: 257, type: !32)
!5016 = !DILocalVariable(name: "s", scope: !4989, file: !395, line: 258, type: !140)
!5017 = !DILocalVariable(name: "parsing", scope: !4989, file: !395, line: 259, type: !153)
!5018 = !DILocalVariable(name: "rws_pos_en", scope: !4989, file: !395, line: 263, type: !153)
!5019 = !DILocalVariable(name: "fros_cnt", scope: !4989, file: !395, line: 268, type: !125)
!5020 = !DILocalVariable(name: "is_str_arg", scope: !4989, file: !395, line: 269, type: !153)
!5021 = !DILocalVariable(name: "pkg_hdr", scope: !4989, file: !395, line: 270, type: !5022)
!5022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5023, size: 32)
!5023 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !5024, line: 78, size: 32, elements: !5025)
!5024 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5025 = !{!5026, !5033}
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5023, file: !5024, line: 80, baseType: !5027, size: 32)
!5027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !5024, line: 45, size: 32, elements: !5028)
!5028 = !{!5029, !5030, !5031, !5032}
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5027, file: !5024, line: 47, baseType: !150, size: 8)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !5027, file: !5024, line: 50, baseType: !150, size: 8, offset: 8)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !5027, file: !5024, line: 53, baseType: !150, size: 8, offset: 16)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !5027, file: !5024, line: 56, baseType: !150, size: 8, offset: 24)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !5023, file: !5024, line: 82, baseType: !124, size: 32)
!5034 = !DILocalVariable(name: "v", scope: !5035, file: !395, line: 567, type: !5039)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !395, line: 562, column: 14)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !395, line: 481, column: 18)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !395, line: 466, column: 3)
!5038 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 343, column: 15)
!5039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4989, file: !395, line: 567, size: 64, elements: !5040)
!5040 = !{!5041, !5042}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5039, file: !395, line: 567, baseType: !385, size: 64)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !5039, file: !395, line: 567, baseType: !383, size: 64)
!5043 = !DILocalVariable(name: "is_ro", scope: !5044, file: !395, line: 620, type: !153)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !395, line: 613, column: 19)
!5045 = distinct !DILexicalBlock(scope: !5038, file: !395, line: 613, column: 7)
!5046 = !DILocalVariable(name: "do_ro", scope: !5044, file: !395, line: 621, type: !153)
!5047 = !DILocalVariable(name: "s_ptr_idx", scope: !5048, file: !395, line: 626, type: !208)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !395, line: 625, column: 11)
!5049 = distinct !DILexicalBlock(scope: !5044, file: !395, line: 623, column: 8)
!5050 = !DILocalVariable(name: "v", scope: !5051, file: !395, line: 684, type: !125)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !395, line: 683, column: 35)
!5052 = distinct !DILexicalBlock(scope: !5045, file: !395, line: 683, column: 14)
!5053 = !DILocalVariable(name: "v", scope: !5054, file: !395, line: 691, type: !389)
!5054 = distinct !DILexicalBlock(scope: !5055, file: !395, line: 690, column: 36)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !395, line: 690, column: 14)
!5056 = !DILocalVariable(name: "v", scope: !5057, file: !395, line: 698, type: !391)
!5057 = distinct !DILexicalBlock(scope: !5058, file: !395, line: 697, column: 41)
!5058 = distinct !DILexicalBlock(scope: !5055, file: !395, line: 697, column: 14)
!5059 = !DILocalVariable(name: "pos", scope: !5060, file: !395, line: 762, type: !150)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !395, line: 757, column: 31)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !395, line: 757, column: 3)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !395, line: 757, column: 3)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !395, line: 756, column: 16)
!5064 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 756, column: 6)
!5065 = !DILabel(scope: !5044, name: "process_string", file: !395, line: 615)
!5066 = !DILocation(line: 0, scope: !4989)
!5067 = !DILocation(line: 251, column: 2, scope: !4989)
!5068 = !DILocation(line: 251, column: 10, scope: !4989)
!5069 = !DILocation(line: 252, column: 2, scope: !4989)
!5070 = !DILocation(line: 252, column: 10, scope: !4989)
!5071 = !DILocation(line: 263, column: 29, scope: !4989)
!5072 = !DILocation(line: 263, column: 21, scope: !4989)
!5073 = !DILocation(line: 268, column: 21, scope: !4989)
!5074 = !DILocation(line: 268, column: 19, scope: !4989)
!5075 = !DILocation(line: 273, column: 6, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 273, column: 6)
!5077 = !DILocation(line: 273, column: 26, scope: !5076)
!5078 = !DILocation(line: 273, column: 6, scope: !4989)
!5079 = !DILocation(line: 297, column: 6, scope: !4989)
!5080 = !DILocation(line: 305, column: 11, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 305, column: 6)
!5082 = !DILocation(line: 305, column: 6, scope: !4989)
!5083 = !DILocation(line: 327, column: 19, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 327, column: 6)
!5085 = !DILocation(line: 327, column: 22, scope: !5084)
!5086 = !DILocation(line: 327, column: 33, scope: !5084)
!5087 = !DILocation(line: 327, column: 50, scope: !5084)
!5088 = !DILocation(line: 327, column: 6, scope: !4989)
!5089 = !DILocation(line: 338, column: 9, scope: !4989)
!5090 = !DILocation(line: 341, column: 2, scope: !4989)
!5091 = !DILocation(line: 472, column: 8, scope: !5037)
!5092 = !DILocation(line: 473, column: 14, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !395, line: 473, column: 9)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !395, line: 472, column: 18)
!5095 = distinct !DILexicalBlock(scope: !5037, file: !395, line: 472, column: 8)
!5096 = !DILocation(line: 473, column: 9, scope: !5094)
!5097 = !DILocation(line: 479, column: 5, scope: !5094)
!5098 = !DILocation(line: 468, column: 9, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5037, file: !395, line: 468, column: 8)
!5100 = !DILocation(line: 468, column: 8, scope: !5099)
!5101 = !DILocation(line: 468, column: 15, scope: !5099)
!5102 = !DILocation(line: 468, column: 8, scope: !5037)
!5103 = distinct !{!5103, !5104, !5105}
!5104 = !DILocation(line: 343, column: 2, scope: !4989)
!5105 = !DILocation(line: 712, column: 2, scope: !4989)
!5106 = !DILocation(line: 481, column: 4, scope: !5037)
!5107 = !DILocation(line: 484, column: 12, scope: !5036)
!5108 = !DILocation(line: 485, column: 5, scope: !5036)
!5109 = !DILocation(line: 505, column: 5, scope: !5036)
!5110 = !DILocation(line: 518, column: 5, scope: !5036)
!5111 = !DILocation(line: 523, column: 5, scope: !5036)
!5112 = !DILocation(line: 532, column: 9, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5036, file: !395, line: 532, column: 9)
!5114 = !DILocation(line: 532, column: 17, scope: !5113)
!5115 = !DILocation(line: 532, column: 9, scope: !5036)
!5116 = !DILocation(line: 533, column: 10, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5118, file: !395, line: 533, column: 10)
!5118 = distinct !DILexicalBlock(scope: !5113, file: !395, line: 532, column: 25)
!5119 = !DILocation(line: 533, column: 18, scope: !5117)
!5120 = !DILocation(line: 0, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5035, file: !395, line: 569, column: 9)
!5122 = !DILocation(line: 0, scope: !5035)
!5123 = !DILocation(line: 579, column: 20, scope: !5035)
!5124 = !DILocation(line: 579, column: 11, scope: !5035)
!5125 = !DILocation(line: 580, column: 9, scope: !5035)
!5126 = !DILocation(line: 582, column: 21, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !395, line: 582, column: 10)
!5128 = distinct !DILexicalBlock(scope: !5129, file: !395, line: 580, column: 23)
!5129 = distinct !DILexicalBlock(scope: !5035, file: !395, line: 580, column: 9)
!5130 = !DILocation(line: 582, column: 28, scope: !5127)
!5131 = !DILocation(line: 582, column: 10, scope: !5128)
!5132 = !DILocation(line: 0, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !395, line: 587, column: 17)
!5134 = distinct !DILexicalBlock(scope: !5128, file: !395, line: 585, column: 10)
!5135 = !DILocation(line: 593, column: 9, scope: !5035)
!5136 = !DILocation(line: 600, column: 5, scope: !5036)
!5137 = !DILocation(line: 605, column: 18, scope: !5038)
!5138 = !DILocation(line: 605, column: 9, scope: !5038)
!5139 = !DILocation(line: 608, column: 20, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5038, file: !395, line: 608, column: 7)
!5141 = !DILocation(line: 608, column: 23, scope: !5140)
!5142 = !DILocation(line: 608, column: 34, scope: !5140)
!5143 = !DILocation(line: 608, column: 41, scope: !5140)
!5144 = !DILocation(line: 608, column: 7, scope: !5038)
!5145 = !DILocation(line: 613, column: 7, scope: !5038)
!5146 = !DILocation(line: 614, column: 8, scope: !5044)
!5147 = !DILocation(line: 614, column: 4, scope: !5044)
!5148 = !DILocation(line: 255, column: 15, scope: !4989)
!5149 = !DILocation(line: 256, column: 6, scope: !4989)
!5150 = !DILocation(line: 254, column: 15, scope: !4989)
!5151 = !DILocation(line: 253, column: 15, scope: !4989)
!5152 = !DILocation(line: 320, column: 7, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5081, file: !395, line: 305, column: 20)
!5154 = !DILocation(line: 615, column: 1, scope: !5044)
!5155 = !DILocation(line: 616, column: 8, scope: !5044)
!5156 = !DILocation(line: 617, column: 5, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !395, line: 616, column: 22)
!5158 = distinct !DILexicalBlock(scope: !5044, file: !395, line: 616, column: 8)
!5159 = !DILocation(line: 617, column: 25, scope: !5157)
!5160 = !DILocation(line: 618, column: 4, scope: !5157)
!5161 = !DILocation(line: 620, column: 26, scope: !5044)
!5162 = !DILocation(line: 620, column: 29, scope: !5044)
!5163 = !DILocation(line: 620, column: 17, scope: !5044)
!5164 = !DILocation(line: 620, column: 43, scope: !5044)
!5165 = !DILocation(line: 0, scope: !5044)
!5166 = !DILocation(line: 623, column: 14, scope: !5049)
!5167 = !DILocation(line: 626, column: 26, scope: !5048)
!5168 = !DILocation(line: 626, column: 37, scope: !5048)
!5169 = !DILocation(line: 0, scope: !5048)
!5170 = !DILocation(line: 634, column: 15, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5048, file: !395, line: 634, column: 9)
!5172 = !DILocation(line: 644, column: 9, scope: !5048)
!5173 = !DILocation(line: 649, column: 27, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !395, line: 644, column: 23)
!5175 = distinct !DILexicalBlock(scope: !5048, file: !395, line: 644, column: 9)
!5176 = !DILocation(line: 649, column: 6, scope: !5174)
!5177 = !DILocation(line: 649, column: 25, scope: !5174)
!5178 = !DILocation(line: 650, column: 27, scope: !5174)
!5179 = !DILocation(line: 650, column: 6, scope: !5174)
!5180 = !DILocation(line: 650, column: 25, scope: !5174)
!5181 = !DILocation(line: 651, column: 10, scope: !5174)
!5182 = !DILocation(line: 653, column: 26, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !395, line: 651, column: 17)
!5184 = distinct !DILexicalBlock(scope: !5174, file: !395, line: 651, column: 10)
!5185 = !DILocation(line: 654, column: 15, scope: !5183)
!5186 = !DILocation(line: 655, column: 6, scope: !5183)
!5187 = !DILocation(line: 656, column: 15, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !395, line: 655, column: 13)
!5189 = !DILocation(line: 658, column: 16, scope: !5175)
!5190 = !DILocation(line: 663, column: 10, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !395, line: 658, column: 23)
!5192 = distinct !DILexicalBlock(scope: !5175, file: !395, line: 658, column: 16)
!5193 = !DILocation(line: 664, column: 5, scope: !5191)
!5194 = !DILocation(line: 664, column: 16, scope: !5192)
!5195 = !DILocation(line: 669, column: 10, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !395, line: 664, column: 28)
!5197 = distinct !DILexicalBlock(scope: !5192, file: !395, line: 664, column: 16)
!5198 = !DILocation(line: 670, column: 5, scope: !5196)
!5199 = !DILocation(line: 675, column: 13, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5197, file: !395, line: 670, column: 12)
!5201 = !DILocation(line: 675, column: 27, scope: !5200)
!5202 = !DILocation(line: 675, column: 10, scope: !5200)
!5203 = !DILocation(line: 678, column: 10, scope: !5048)
!5204 = !DILocation(line: 680, column: 8, scope: !5044)
!5205 = !DILocation(line: 683, column: 14, scope: !5045)
!5206 = !DILocation(line: 684, column: 12, scope: !5051)
!5207 = !DILocation(line: 0, scope: !5051)
!5208 = !DILocation(line: 686, column: 8, scope: !5051)
!5209 = !DILocation(line: 687, column: 5, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !395, line: 686, column: 22)
!5211 = distinct !DILexicalBlock(scope: !5051, file: !395, line: 686, column: 8)
!5212 = !DILocation(line: 687, column: 17, scope: !5210)
!5213 = !DILocation(line: 688, column: 4, scope: !5210)
!5214 = !DILocation(line: 698, column: 18, scope: !5057)
!5215 = !DILocation(line: 0, scope: !5057)
!5216 = !DILocation(line: 700, column: 8, scope: !5057)
!5217 = !DILocation(line: 704, column: 6, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !395, line: 703, column: 12)
!5219 = distinct !DILexicalBlock(scope: !5220, file: !395, line: 701, column: 9)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !395, line: 700, column: 22)
!5221 = distinct !DILexicalBlock(scope: !5057, file: !395, line: 700, column: 8)
!5222 = !DILocation(line: 704, column: 24, scope: !5218)
!5223 = !DILocation(line: 706, column: 4, scope: !5220)
!5224 = !DILocation(line: 0, scope: !5052)
!5225 = !DILocation(line: 0, scope: !5038)
!5226 = !DILocation(line: 720, column: 6, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 720, column: 6)
!5228 = !DILocation(line: 720, column: 17, scope: !5227)
!5229 = !DILocation(line: 720, column: 31, scope: !5227)
!5230 = !DILocation(line: 720, column: 6, scope: !4989)
!5231 = !DILocation(line: 729, column: 6, scope: !4989)
!5232 = !DILocation(line: 730, column: 21, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !395, line: 729, column: 20)
!5234 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 729, column: 6)
!5235 = !DILocation(line: 730, column: 27, scope: !5233)
!5236 = !DILocation(line: 730, column: 3, scope: !5233)
!5237 = !DILocation(line: 737, column: 22, scope: !4989)
!5238 = !DILocation(line: 737, column: 20, scope: !4989)
!5239 = !DILocation(line: 0, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 739, column: 6)
!5241 = !DILocation(line: 745, column: 17, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5240, file: !395, line: 743, column: 9)
!5243 = !DILocation(line: 745, column: 25, scope: !5242)
!5244 = !DILocation(line: 746, column: 17, scope: !5242)
!5245 = !DILocation(line: 746, column: 28, scope: !5242)
!5246 = !DILocation(line: 749, column: 29, scope: !4989)
!5247 = !DILocation(line: 749, column: 16, scope: !4989)
!5248 = !DILocation(line: 749, column: 27, scope: !4989)
!5249 = !DILocation(line: 756, column: 6, scope: !5064)
!5250 = !DILocation(line: 756, column: 6, scope: !4989)
!5251 = !DILocation(line: 757, column: 3, scope: !5062)
!5252 = !DILocation(line: 758, column: 10, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5060, file: !395, line: 758, column: 8)
!5254 = !DILocation(line: 758, column: 25, scope: !5253)
!5255 = !DILocation(line: 758, column: 8, scope: !5060)
!5256 = !DILocation(line: 0, scope: !5060)
!5257 = !DILocation(line: 765, column: 8, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5060, file: !395, line: 765, column: 8)
!5259 = !DILocation(line: 765, column: 19, scope: !5258)
!5260 = !DILocation(line: 765, column: 23, scope: !5258)
!5261 = !DILocation(line: 765, column: 8, scope: !5060)
!5262 = !DILocation(line: 762, column: 33, scope: !5060)
!5263 = !DILocation(line: 769, column: 8, scope: !5060)
!5264 = !DILocation(line: 769, column: 11, scope: !5060)
!5265 = !DILocation(line: 757, column: 27, scope: !5061)
!5266 = !DILocation(line: 757, column: 17, scope: !5061)
!5267 = distinct !{!5267, !5251, !5268}
!5268 = !DILocation(line: 770, column: 3, scope: !5062)
!5269 = !DILocation(line: 774, column: 16, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !395, line: 774, column: 2)
!5271 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 774, column: 2)
!5272 = !DILocation(line: 774, column: 2, scope: !5271)
!5273 = !DILocation(line: 776, column: 16, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !395, line: 776, column: 7)
!5275 = distinct !DILexicalBlock(scope: !5270, file: !395, line: 774, column: 30)
!5276 = !DILocation(line: 776, column: 19, scope: !5274)
!5277 = !DILocation(line: 776, column: 34, scope: !5274)
!5278 = !DILocation(line: 776, column: 7, scope: !5275)
!5279 = !DILocation(line: 780, column: 7, scope: !5275)
!5280 = !DILocation(line: 782, column: 13, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5282, file: !395, line: 780, column: 19)
!5282 = distinct !DILexicalBlock(scope: !5275, file: !395, line: 780, column: 7)
!5283 = !DILocation(line: 782, column: 8, scope: !5281)
!5284 = !DILocation(line: 782, column: 11, scope: !5281)
!5285 = !DILocation(line: 783, column: 3, scope: !5281)
!5286 = !DILocation(line: 785, column: 26, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5282, file: !395, line: 783, column: 10)
!5288 = !DILocation(line: 785, column: 41, scope: !5287)
!5289 = !DILocation(line: 785, column: 24, scope: !5287)
!5290 = !DILocation(line: 785, column: 8, scope: !5287)
!5291 = !DILocation(line: 787, column: 52, scope: !5287)
!5292 = !DILocation(line: 789, column: 11, scope: !5287)
!5293 = !DILocation(line: 789, column: 21, scope: !5287)
!5294 = !DILocation(line: 0, scope: !5282)
!5295 = !DILocation(line: 793, column: 7, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5275, file: !395, line: 793, column: 7)
!5297 = !DILocation(line: 793, column: 18, scope: !5296)
!5298 = !DILocation(line: 793, column: 22, scope: !5296)
!5299 = !DILocation(line: 793, column: 29, scope: !5296)
!5300 = !DILocation(line: 793, column: 7, scope: !5275)
!5301 = !DILocation(line: 797, column: 12, scope: !5275)
!5302 = !DILocation(line: 797, column: 7, scope: !5275)
!5303 = !DILocation(line: 797, column: 10, scope: !5275)
!5304 = !DILocation(line: 799, column: 3, scope: !5275)
!5305 = !DILocation(line: 800, column: 7, scope: !5275)
!5306 = !DILocation(line: 801, column: 2, scope: !5275)
!5307 = !DILocation(line: 338, column: 4, scope: !4989)
!5308 = !DILocation(line: 774, column: 26, scope: !5270)
!5309 = distinct !{!5309, !5272, !5310}
!5310 = !DILocation(line: 801, column: 2, scope: !5271)
!5311 = !DILocation(line: 808, column: 9, scope: !4989)
!5312 = !DILocation(line: 808, column: 2, scope: !4989)
!5313 = !DILocation(line: 813, column: 1, scope: !4989)
!5314 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !5315, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5317)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{!153, !140}
!5317 = !{!5318}
!5318 = !DILocalVariable(name: "addr", arg: 1, scope: !5314, file: !395, line: 33, type: !140)
!5319 = !DILocation(line: 0, scope: !5314)
!5320 = !DILocation(line: 41, column: 9, scope: !5314)
!5321 = !DILocation(line: 41, column: 2, scope: !5314)
!5322 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !5323, file: !5323, line: 24, type: !5324, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5326)
!5323 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5324 = !DISubroutineType(types: !5325)
!5325 = !{!153, !13}
!5326 = !{!5327}
!5327 = !DILocalVariable(name: "addr", arg: 1, scope: !5322, file: !5323, line: 24, type: !13)
!5328 = !DILocation(line: 0, scope: !5322)
!5329 = !DILocation(line: 49, column: 30, scope: !5322)
!5330 = !DILocation(line: 49, column: 57, scope: !5322)
!5331 = !DILocation(line: 49, column: 2, scope: !5322)
!5332 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !5333, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5335)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{!125, !124, !272, !208, !140, null}
!5335 = !{!5336, !5337, !5338, !5339, !5340, !5341}
!5336 = !DILocalVariable(name: "packaged", arg: 1, scope: !5332, file: !395, line: 815, type: !124)
!5337 = !DILocalVariable(name: "len", arg: 2, scope: !5332, file: !395, line: 815, type: !272)
!5338 = !DILocalVariable(name: "flags", arg: 3, scope: !5332, file: !395, line: 815, type: !208)
!5339 = !DILocalVariable(name: "format", arg: 4, scope: !5332, file: !395, line: 816, type: !140)
!5340 = !DILocalVariable(name: "ap", scope: !5332, file: !395, line: 818, type: !4992)
!5341 = !DILocalVariable(name: "ret", scope: !5332, file: !395, line: 819, type: !125)
!5342 = !DILocation(line: 0, scope: !5332)
!5343 = !DILocation(line: 818, column: 2, scope: !5332)
!5344 = !DILocation(line: 818, column: 10, scope: !5332)
!5345 = !DILocation(line: 821, column: 2, scope: !5332)
!5346 = !DILocation(line: 822, column: 8, scope: !5332)
!5347 = !DILocation(line: 823, column: 2, scope: !5332)
!5348 = !DILocation(line: 825, column: 1, scope: !5332)
!5349 = !DILocation(line: 824, column: 2, scope: !5332)
!5350 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !5351, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5361)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{!125, !5353, !5357, !124, !124}
!5353 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !5024, line: 297, baseType: !5354)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 32)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!125, null}
!5357 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !5024, line: 328, baseType: !5358)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5359, size: 32)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!125, !5353, !124, !140, !4992}
!5361 = !{!5362, !5363, !5364, !5365, !5366, !5367, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380}
!5362 = !DILocalVariable(name: "out", arg: 1, scope: !5350, file: !395, line: 827, type: !5353)
!5363 = !DILocalVariable(name: "formatter", arg: 2, scope: !5350, file: !395, line: 828, type: !5357)
!5364 = !DILocalVariable(name: "ctx", arg: 3, scope: !5350, file: !395, line: 829, type: !124)
!5365 = !DILocalVariable(name: "packaged", arg: 4, scope: !5350, file: !395, line: 829, type: !124)
!5366 = !DILocalVariable(name: "buf", scope: !5350, file: !395, line: 831, type: !184)
!5367 = !DILocalVariable(name: "hdr", scope: !5350, file: !395, line: 832, type: !5368)
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5369, size: 32)
!5369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !5024, line: 96, size: 64, elements: !5370)
!5370 = !{!5371, !5372}
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !5369, file: !5024, line: 98, baseType: !5023, size: 32)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !5369, file: !5024, line: 101, baseType: !393, size: 32, offset: 32)
!5373 = !DILocalVariable(name: "s", scope: !5350, file: !395, line: 833, type: !393)
!5374 = !DILocalVariable(name: "ps", scope: !5350, file: !395, line: 833, type: !392)
!5375 = !DILocalVariable(name: "i", scope: !5350, file: !395, line: 834, type: !32)
!5376 = !DILocalVariable(name: "args_size", scope: !5350, file: !395, line: 834, type: !32)
!5377 = !DILocalVariable(name: "s_nbr", scope: !5350, file: !395, line: 834, type: !32)
!5378 = !DILocalVariable(name: "ros_nbr", scope: !5350, file: !395, line: 834, type: !32)
!5379 = !DILocalVariable(name: "rws_nbr", scope: !5350, file: !395, line: 834, type: !32)
!5380 = !DILocalVariable(name: "s_idx", scope: !5350, file: !395, line: 834, type: !32)
!5381 = !DILocation(line: 0, scope: !5350)
!5382 = !DILocation(line: 836, column: 10, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5350, file: !395, line: 836, column: 6)
!5384 = !DILocation(line: 836, column: 6, scope: !5350)
!5385 = !DILocation(line: 842, column: 28, scope: !5350)
!5386 = !DILocation(line: 842, column: 14, scope: !5350)
!5387 = !DILocation(line: 852, column: 16, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !395, line: 852, column: 2)
!5389 = distinct !DILexicalBlock(scope: !5350, file: !395, line: 852, column: 2)
!5390 = !DILocation(line: 852, column: 2, scope: !5389)
!5391 = !DILocation(line: 841, column: 28, scope: !5350)
!5392 = !DILocation(line: 841, column: 14, scope: !5350)
!5393 = !DILocation(line: 841, column: 32, scope: !5350)
!5394 = !DILocation(line: 847, column: 19, scope: !5350)
!5395 = !DILocation(line: 843, column: 28, scope: !5350)
!5396 = !DILocation(line: 843, column: 14, scope: !5350)
!5397 = !DILocation(line: 847, column: 31, scope: !5350)
!5398 = !DILocation(line: 844, column: 28, scope: !5350)
!5399 = !DILocation(line: 844, column: 14, scope: !5350)
!5400 = !DILocation(line: 847, column: 45, scope: !5350)
!5401 = !DILocation(line: 847, column: 41, scope: !5350)
!5402 = !DILocation(line: 854, column: 24, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5388, file: !395, line: 852, column: 30)
!5404 = !DILocation(line: 854, column: 11, scope: !5403)
!5405 = !DILocation(line: 855, column: 30, scope: !5403)
!5406 = !DILocation(line: 855, column: 22, scope: !5403)
!5407 = !DILocation(line: 855, column: 8, scope: !5403)
!5408 = !DILocation(line: 857, column: 7, scope: !5403)
!5409 = !DILocation(line: 859, column: 8, scope: !5403)
!5410 = !DILocation(line: 859, column: 18, scope: !5403)
!5411 = !DILocation(line: 859, column: 5, scope: !5403)
!5412 = !DILocation(line: 852, column: 26, scope: !5388)
!5413 = distinct !{!5413, !5390, !5414}
!5414 = !DILocation(line: 860, column: 2, scope: !5389)
!5415 = !DILocation(line: 863, column: 6, scope: !5350)
!5416 = !DILocation(line: 866, column: 56, scope: !5350)
!5417 = !DILocation(line: 866, column: 9, scope: !5350)
!5418 = !DILocation(line: 866, column: 2, scope: !5350)
!5419 = !DILocation(line: 867, column: 1, scope: !5350)
!5420 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !5421, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5423)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{!125, !5353, !5357, !124, !140, !124}
!5423 = !{!5424, !5425, !5426, !5427, !5428, !5429}
!5424 = !DILocalVariable(name: "out", arg: 1, scope: !5420, file: !395, line: 179, type: !5353)
!5425 = !DILocalVariable(name: "formatter", arg: 2, scope: !5420, file: !395, line: 180, type: !5357)
!5426 = !DILocalVariable(name: "ctx", arg: 3, scope: !5420, file: !395, line: 181, type: !124)
!5427 = !DILocalVariable(name: "fmt", arg: 4, scope: !5420, file: !395, line: 182, type: !140)
!5428 = !DILocalVariable(name: "buf", arg: 5, scope: !5420, file: !395, line: 182, type: !124)
!5429 = !DILocalVariable(name: "u", scope: !5420, file: !395, line: 187, type: !5430)
!5430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5420, file: !395, line: 184, size: 32, elements: !5431)
!5431 = !{!5432, !5433}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !5430, file: !395, line: 185, baseType: !4992, size: 32)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5430, file: !395, line: 186, baseType: !124, size: 32)
!5434 = !DILocation(line: 0, scope: !5420)
!5435 = !DILocation(line: 191, column: 9, scope: !5420)
!5436 = !DILocation(line: 191, column: 2, scope: !5420)
!5437 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !5438, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5440)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!153, !140, !125}
!5440 = !{!5441, !5442, !5443, !5444, !5445}
!5441 = !DILocalVariable(name: "fmt", arg: 1, scope: !5437, file: !395, line: 881, type: !140)
!5442 = !DILocalVariable(name: "n", arg: 2, scope: !5437, file: !395, line: 881, type: !125)
!5443 = !DILocalVariable(name: "c", scope: !5437, file: !395, line: 883, type: !142)
!5444 = !DILocalVariable(name: "mod", scope: !5437, file: !395, line: 884, type: !153)
!5445 = !DILocalVariable(name: "cnt", scope: !5437, file: !395, line: 885, type: !125)
!5446 = !DILocation(line: 0, scope: !5437)
!5447 = !DILocation(line: 887, column: 14, scope: !5437)
!5448 = !DILocation(line: 887, column: 22, scope: !5437)
!5449 = !DILocation(line: 887, column: 2, scope: !5437)
!5450 = !DILocation(line: 887, column: 18, scope: !5437)
!5451 = !DILocation(line: 888, column: 7, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5437, file: !395, line: 887, column: 31)
!5453 = !DILocation(line: 889, column: 12, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !395, line: 889, column: 8)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !395, line: 888, column: 12)
!5456 = distinct !DILexicalBlock(scope: !5452, file: !395, line: 888, column: 7)
!5457 = !DILocation(line: 889, column: 8, scope: !5455)
!5458 = !DILocation(line: 890, column: 11, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !395, line: 890, column: 9)
!5460 = distinct !DILexicalBlock(scope: !5454, file: !395, line: 889, column: 18)
!5461 = !DILocation(line: 890, column: 9, scope: !5460)
!5462 = !DILocation(line: 892, column: 16, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5459, file: !395, line: 892, column: 16)
!5464 = !DILocation(line: 892, column: 16, scope: !5459)
!5465 = !DILocation(line: 895, column: 15, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5454, file: !395, line: 895, column: 15)
!5467 = !DILocation(line: 895, column: 15, scope: !5454)
!5468 = !DILocation(line: 900, column: 9, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5452, file: !395, line: 900, column: 7)
!5470 = !DILocation(line: 900, column: 7, scope: !5452)
!5471 = distinct !{!5471, !5449, !5472}
!5472 = !DILocation(line: 903, column: 2, scope: !5437)
!5473 = !DILocation(line: 906, column: 1, scope: !5437)
!5474 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !5475, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5477)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{!153, !142}
!5477 = !{!5478}
!5478 = !DILocalVariable(name: "c", arg: 1, scope: !5474, file: !395, line: 873, type: !142)
!5479 = !DILocation(line: 0, scope: !5474)
!5480 = !DILocation(line: 875, column: 19, scope: !5474)
!5481 = !DILocation(line: 875, column: 2, scope: !5474)
!5482 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !5483, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5489)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{!125, !124, !272, !5485, !124, !208, !3951, !272}
!5485 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !5024, line: 308, baseType: !5486)
!5486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5487, size: 32)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!125, !13, !272, !124}
!5489 = !{!5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5507, !5508, !5509, !5510, !5511, !5517, !5520, !5521, !5522, !5524, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5540, !5543, !5544, !5545, !5546, !5547, !5548, !5550, !5553, !5554, !5555}
!5490 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !5482, file: !395, line: 908, type: !124)
!5491 = !DILocalVariable(name: "in_len", arg: 2, scope: !5482, file: !395, line: 909, type: !272)
!5492 = !DILocalVariable(name: "cb", arg: 3, scope: !5482, file: !395, line: 910, type: !5485)
!5493 = !DILocalVariable(name: "ctx", arg: 4, scope: !5482, file: !395, line: 911, type: !124)
!5494 = !DILocalVariable(name: "flags", arg: 5, scope: !5482, file: !395, line: 912, type: !208)
!5495 = !DILocalVariable(name: "strl", arg: 6, scope: !5482, file: !395, line: 913, type: !3951)
!5496 = !DILocalVariable(name: "strl_len", arg: 7, scope: !5482, file: !395, line: 914, type: !272)
!5497 = !DILocalVariable(name: "buf", scope: !5482, file: !395, line: 918, type: !184)
!5498 = !DILocalVariable(name: "buf32", scope: !5482, file: !395, line: 919, type: !2278)
!5499 = !DILocalVariable(name: "args_size", scope: !5482, file: !395, line: 920, type: !32)
!5500 = !DILocalVariable(name: "ros_nbr", scope: !5482, file: !395, line: 920, type: !32)
!5501 = !DILocalVariable(name: "rws_nbr", scope: !5482, file: !395, line: 920, type: !32)
!5502 = !DILocalVariable(name: "fmt_present", scope: !5482, file: !395, line: 921, type: !153)
!5503 = !DILocalVariable(name: "rw_cpy", scope: !5482, file: !395, line: 922, type: !153)
!5504 = !DILocalVariable(name: "ro_cpy", scope: !5482, file: !395, line: 923, type: !153)
!5505 = !DILocalVariable(name: "in_desc", scope: !5482, file: !395, line: 924, type: !5506)
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5027, size: 32)
!5507 = !DILocalVariable(name: "out_len", scope: !5482, file: !395, line: 960, type: !125)
!5508 = !DILocalVariable(name: "fmt", scope: !5482, file: !395, line: 965, type: !140)
!5509 = !DILocalVariable(name: "str_pos", scope: !5482, file: !395, line: 966, type: !184)
!5510 = !DILocalVariable(name: "strl_cnt", scope: !5482, file: !395, line: 967, type: !272)
!5511 = !DILocalVariable(name: "i", scope: !5512, file: !395, line: 973, type: !125)
!5512 = distinct !DILexicalBlock(scope: !5513, file: !395, line: 973, column: 4)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !395, line: 972, column: 15)
!5514 = distinct !DILexicalBlock(scope: !5515, file: !395, line: 972, column: 7)
!5515 = distinct !DILexicalBlock(scope: !5516, file: !395, line: 970, column: 18)
!5516 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 970, column: 6)
!5517 = !DILocalVariable(name: "str", scope: !5518, file: !395, line: 974, type: !140)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !395, line: 973, column: 38)
!5519 = distinct !DILexicalBlock(scope: !5512, file: !395, line: 973, column: 4)
!5520 = !DILocalVariable(name: "len", scope: !5518, file: !395, line: 975, type: !125)
!5521 = !DILocalVariable(name: "drop_ro_str_pos", scope: !5515, file: !395, line: 990, type: !153)
!5522 = !DILocalVariable(name: "i", scope: !5523, file: !395, line: 995, type: !125)
!5523 = distinct !DILexicalBlock(scope: !5515, file: !395, line: 995, column: 3)
!5524 = !DILocalVariable(name: "arg_idx", scope: !5525, file: !395, line: 996, type: !150)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !395, line: 995, column: 37)
!5526 = distinct !DILexicalBlock(scope: !5523, file: !395, line: 995, column: 3)
!5527 = !DILocalVariable(name: "arg_pos", scope: !5525, file: !395, line: 997, type: !150)
!5528 = !DILocalVariable(name: "str", scope: !5525, file: !395, line: 998, type: !140)
!5529 = !DILocalVariable(name: "is_ro", scope: !5525, file: !395, line: 999, type: !153)
!5530 = !DILocalVariable(name: "len", scope: !5525, file: !395, line: 1000, type: !125)
!5531 = !DILocalVariable(name: "out_desc", scope: !5482, file: !395, line: 1038, type: !5027)
!5532 = !DILocalVariable(name: "cpy_str_pos", scope: !5482, file: !395, line: 1040, type: !311)
!5533 = !DILocalVariable(name: "keep_str_pos", scope: !5482, file: !395, line: 1042, type: !311)
!5534 = !DILocalVariable(name: "scpy_cnt", scope: !5482, file: !395, line: 1043, type: !150)
!5535 = !DILocalVariable(name: "keep_cnt", scope: !5482, file: !395, line: 1044, type: !150)
!5536 = !DILocalVariable(name: "dst", scope: !5482, file: !395, line: 1045, type: !184)
!5537 = !DILocalVariable(name: "rv", scope: !5482, file: !395, line: 1046, type: !125)
!5538 = !DILocalVariable(name: "i", scope: !5539, file: !395, line: 1074, type: !125)
!5539 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 1074, column: 2)
!5540 = !DILocalVariable(name: "arg_idx", scope: !5541, file: !395, line: 1075, type: !150)
!5541 = distinct !DILexicalBlock(scope: !5542, file: !395, line: 1074, column: 36)
!5542 = distinct !DILexicalBlock(scope: !5539, file: !395, line: 1074, column: 2)
!5543 = !DILocalVariable(name: "arg_pos", scope: !5541, file: !395, line: 1076, type: !150)
!5544 = !DILocalVariable(name: "str", scope: !5541, file: !395, line: 1077, type: !140)
!5545 = !DILocalVariable(name: "is_ro", scope: !5541, file: !395, line: 1078, type: !153)
!5546 = !DILocalVariable(name: "in_desc_backup", scope: !5482, file: !395, line: 1114, type: !5027)
!5547 = !DILocalVariable(name: "strs_len", scope: !5482, file: !395, line: 1134, type: !272)
!5548 = !DILocalVariable(name: "i", scope: !5549, file: !395, line: 1143, type: !125)
!5549 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 1143, column: 2)
!5550 = !DILocalVariable(name: "loc", scope: !5551, file: !395, line: 1144, type: !150)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !395, line: 1143, column: 37)
!5552 = distinct !DILexicalBlock(scope: !5549, file: !395, line: 1143, column: 2)
!5553 = !DILocalVariable(name: "str", scope: !5551, file: !395, line: 1145, type: !140)
!5554 = !DILocalVariable(name: "str_len", scope: !5551, file: !395, line: 1146, type: !227)
!5555 = !DILabel(scope: !5556, name: "calculate_string_length", file: !395, line: 1021)
!5556 = distinct !DILexicalBlock(scope: !5557, file: !395, line: 1020, column: 56)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !395, line: 1020, column: 15)
!5558 = distinct !DILexicalBlock(scope: !5525, file: !395, line: 1014, column: 8)
!5559 = !DILocation(line: 0, scope: !5482)
!5560 = !DILocation(line: 919, column: 20, scope: !5482)
!5561 = !DILocation(line: 921, column: 27, scope: !5482)
!5562 = !DILocation(line: 921, column: 21, scope: !5482)
!5563 = !DILocation(line: 926, column: 18, scope: !5482)
!5564 = !DILocation(line: 926, column: 11, scope: !5482)
!5565 = !DILocation(line: 926, column: 34, scope: !5482)
!5566 = !DILocation(line: 931, column: 21, scope: !5482)
!5567 = !DILocation(line: 931, column: 12, scope: !5482)
!5568 = !DILocation(line: 932, column: 11, scope: !5482)
!5569 = !DILocation(line: 932, column: 19, scope: !5482)
!5570 = !DILocation(line: 938, column: 21, scope: !5482)
!5571 = !DILocation(line: 938, column: 12, scope: !5482)
!5572 = !DILocation(line: 939, column: 19, scope: !5482)
!5573 = !DILocation(line: 939, column: 23, scope: !5482)
!5574 = !DILocation(line: 946, column: 14, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 946, column: 6)
!5576 = !DILocation(line: 947, column: 7, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !395, line: 947, column: 7)
!5578 = distinct !DILexicalBlock(scope: !5575, file: !395, line: 946, column: 26)
!5579 = !DILocation(line: 947, column: 7, scope: !5578)
!5580 = !DILocation(line: 948, column: 4, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5577, file: !395, line: 947, column: 11)
!5582 = !DILocation(line: 949, column: 3, scope: !5581)
!5583 = !DILocation(line: 958, column: 23, scope: !5482)
!5584 = !DILocation(line: 958, column: 14, scope: !5482)
!5585 = !DILocation(line: 958, column: 27, scope: !5482)
!5586 = !DILocation(line: 965, column: 41, scope: !5482)
!5587 = !DILocation(line: 965, column: 20, scope: !5482)
!5588 = !DILocation(line: 966, column: 22, scope: !5482)
!5589 = !DILocation(line: 970, column: 9, scope: !5516)
!5590 = !DILocation(line: 970, column: 6, scope: !5482)
!5591 = !DILocation(line: 972, column: 7, scope: !5515)
!5592 = !DILocation(line: 0, scope: !5512)
!5593 = !DILocation(line: 973, column: 4, scope: !5512)
!5594 = !DILocation(line: 974, column: 46, scope: !5518)
!5595 = !DILocation(line: 974, column: 40, scope: !5518)
!5596 = !DILocation(line: 974, column: 23, scope: !5518)
!5597 = !DILocation(line: 0, scope: !5518)
!5598 = !DILocation(line: 975, column: 15, scope: !5518)
!5599 = !DILocation(line: 978, column: 14, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5518, file: !395, line: 978, column: 9)
!5601 = !DILocation(line: 979, column: 25, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5600, file: !395, line: 978, column: 38)
!5603 = !DILocation(line: 979, column: 19, scope: !5602)
!5604 = !DILocation(line: 979, column: 6, scope: !5602)
!5605 = !DILocation(line: 979, column: 23, scope: !5602)
!5606 = !DILocation(line: 980, column: 5, scope: !5602)
!5607 = !DILocation(line: 981, column: 13, scope: !5518)
!5608 = !DILocation(line: 982, column: 12, scope: !5518)
!5609 = !DILocation(line: 973, column: 34, scope: !5519)
!5610 = !DILocation(line: 973, column: 22, scope: !5519)
!5611 = distinct !{!5611, !5593, !5612}
!5612 = !DILocation(line: 983, column: 4, scope: !5512)
!5613 = !DILocation(line: 985, column: 16, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5615, file: !395, line: 985, column: 8)
!5615 = distinct !DILexicalBlock(scope: !5514, file: !395, line: 984, column: 10)
!5616 = !DILocation(line: 967, column: 9, scope: !5482)
!5617 = !DILocation(line: 971, column: 11, scope: !5515)
!5618 = !DILocation(line: 0, scope: !5515)
!5619 = !DILocation(line: 0, scope: !5523)
!5620 = !DILocation(line: 995, column: 21, scope: !5526)
!5621 = !DILocation(line: 995, column: 3, scope: !5523)
!5622 = !DILocation(line: 990, column: 34, scope: !5515)
!5623 = !DILocation(line: 990, column: 26, scope: !5515)
!5624 = !DILocation(line: 996, column: 30, scope: !5525)
!5625 = !DILocation(line: 0, scope: !5525)
!5626 = !DILocation(line: 997, column: 30, scope: !5525)
!5627 = !DILocation(line: 997, column: 22, scope: !5525)
!5628 = !DILocation(line: 998, column: 39, scope: !5525)
!5629 = !DILocation(line: 998, column: 22, scope: !5525)
!5630 = !DILocation(line: 999, column: 17, scope: !5525)
!5631 = !DILocation(line: 1002, column: 20, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5525, file: !395, line: 1002, column: 8)
!5633 = !DILocation(line: 996, column: 22, scope: !5525)
!5634 = !DILocation(line: 1002, column: 35, scope: !5632)
!5635 = !DILocation(line: 1002, column: 23, scope: !5632)
!5636 = !DILocation(line: 1002, column: 8, scope: !5525)
!5637 = !DILocation(line: 1003, column: 5, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !395, line: 1003, column: 5)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !395, line: 1003, column: 5)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !395, line: 1003, column: 5)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !395, line: 1003, column: 5)
!5642 = distinct !DILexicalBlock(scope: !5632, file: !395, line: 1002, column: 45)
!5643 = !DILocation(line: 1010, column: 13, scope: !5642)
!5644 = !DILocation(line: 1011, column: 5, scope: !5642)
!5645 = !DILocation(line: 1014, column: 8, scope: !5525)
!5646 = !DILocation(line: 1015, column: 9, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5558, file: !395, line: 1014, column: 15)
!5648 = !DILocation(line: 1018, column: 14, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !395, line: 1017, column: 12)
!5650 = distinct !DILexicalBlock(scope: !5647, file: !395, line: 1015, column: 9)
!5651 = !DILocation(line: 1020, column: 4, scope: !5647)
!5652 = !DILocation(line: 1020, column: 15, scope: !5558)
!5653 = !DILocation(line: 1021, column: 1, scope: !5556)
!5654 = !DILocation(line: 1022, column: 11, scope: !5556)
!5655 = !DILocation(line: 1025, column: 14, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5556, file: !395, line: 1025, column: 9)
!5657 = !DILocation(line: 1026, column: 25, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5656, file: !395, line: 1025, column: 38)
!5659 = !DILocation(line: 1026, column: 19, scope: !5658)
!5660 = !DILocation(line: 1026, column: 6, scope: !5658)
!5661 = !DILocation(line: 1026, column: 23, scope: !5658)
!5662 = !DILocation(line: 1027, column: 5, scope: !5658)
!5663 = !DILocation(line: 1031, column: 21, scope: !5556)
!5664 = !DILocation(line: 1031, column: 13, scope: !5556)
!5665 = !DILocation(line: 1032, column: 4, scope: !5556)
!5666 = !DILocation(line: 995, column: 33, scope: !5526)
!5667 = distinct !{!5667, !5621, !5668}
!5668 = !DILocation(line: 1033, column: 3, scope: !5523)
!5669 = !DILocation(line: 1040, column: 10, scope: !5482)
!5670 = !DILocation(line: 1042, column: 10, scope: !5482)
!5671 = !DILocation(line: 1052, column: 6, scope: !5482)
!5672 = !DILocation(line: 1055, column: 9, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !395, line: 1052, column: 14)
!5674 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 1052, column: 6)
!5675 = !DILocation(line: 1056, column: 2, scope: !5673)
!5676 = !DILocation(line: 1056, column: 21, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5674, file: !395, line: 1056, column: 13)
!5678 = !DILocation(line: 1066, column: 3, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !395, line: 1065, column: 11)
!5680 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 1065, column: 6)
!5681 = !DILocation(line: 1067, column: 2, scope: !5679)
!5682 = !DILocation(line: 1068, column: 10, scope: !5482)
!5683 = !DILocation(line: 0, scope: !5539)
!5684 = !DILocation(line: 1074, column: 20, scope: !5542)
!5685 = !DILocation(line: 1074, column: 2, scope: !5539)
!5686 = !DILocation(line: 1110, column: 24, scope: !5482)
!5687 = !DILocation(line: 1053, column: 12, scope: !5673)
!5688 = !DILocation(line: 1054, column: 12, scope: !5673)
!5689 = !DILocation(line: 1108, column: 30, scope: !5482)
!5690 = !DILocation(line: 1108, column: 40, scope: !5482)
!5691 = !DILocation(line: 1108, column: 38, scope: !5482)
!5692 = !DILocation(line: 1109, column: 31, scope: !5482)
!5693 = !DILocation(line: 1109, column: 24, scope: !5482)
!5694 = !DILocation(line: 1110, column: 31, scope: !5482)
!5695 = !DILocation(line: 1114, column: 31, scope: !5482)
!5696 = !DILocation(line: 1114, column: 48, scope: !5482)
!5697 = !DILocation(line: 1115, column: 13, scope: !5482)
!5698 = !DILocation(line: 1118, column: 7, scope: !5482)
!5699 = !DILocation(line: 1119, column: 9, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 1119, column: 6)
!5701 = !DILocation(line: 1119, column: 6, scope: !5482)
!5702 = !DILocation(line: 1075, column: 29, scope: !5541)
!5703 = !DILocation(line: 1075, column: 21, scope: !5541)
!5704 = !DILocation(line: 0, scope: !5541)
!5705 = !DILocation(line: 1076, column: 29, scope: !5541)
!5706 = !DILocation(line: 1076, column: 21, scope: !5541)
!5707 = !DILocation(line: 1077, column: 38, scope: !5541)
!5708 = !DILocation(line: 1077, column: 21, scope: !5541)
!5709 = !DILocation(line: 1078, column: 16, scope: !5541)
!5710 = !DILocation(line: 1080, column: 19, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5541, file: !395, line: 1080, column: 7)
!5712 = !DILocation(line: 1080, column: 34, scope: !5711)
!5713 = !DILocation(line: 1080, column: 22, scope: !5711)
!5714 = !DILocation(line: 1080, column: 7, scope: !5541)
!5715 = !DILocation(line: 1084, column: 7, scope: !5541)
!5716 = !DILocation(line: 1085, column: 8, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5718, file: !395, line: 1084, column: 14)
!5718 = distinct !DILexicalBlock(scope: !5541, file: !395, line: 1084, column: 7)
!5719 = !DILocation(line: 1087, column: 25, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !395, line: 1085, column: 49)
!5721 = distinct !DILexicalBlock(scope: !5717, file: !395, line: 1085, column: 8)
!5722 = !DILocation(line: 1088, column: 4, scope: !5720)
!5723 = !DILocation(line: 1088, column: 15, scope: !5721)
!5724 = !DILocation(line: 1090, column: 26, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !395, line: 1088, column: 61)
!5726 = distinct !DILexicalBlock(scope: !5721, file: !395, line: 1088, column: 15)
!5727 = !DILocation(line: 1091, column: 4, scope: !5725)
!5728 = !DILocation(line: 1095, column: 8, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5718, file: !395, line: 1094, column: 10)
!5730 = !DILocation(line: 1097, column: 25, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !395, line: 1095, column: 49)
!5732 = distinct !DILexicalBlock(scope: !5729, file: !395, line: 1095, column: 8)
!5733 = !DILocation(line: 1098, column: 4, scope: !5731)
!5734 = !DILocation(line: 1100, column: 26, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5732, file: !395, line: 1098, column: 11)
!5736 = !DILocation(line: 1100, column: 5, scope: !5735)
!5737 = !DILocation(line: 1100, column: 30, scope: !5735)
!5738 = !DILocation(line: 1101, column: 26, scope: !5735)
!5739 = !DILocation(line: 0, scope: !5718)
!5740 = !DILocation(line: 1074, column: 32, scope: !5542)
!5741 = distinct !{!5741, !5685, !5742}
!5742 = !DILocation(line: 1104, column: 2, scope: !5539)
!5743 = !DILocation(line: 1124, column: 13, scope: !5482)
!5744 = !DILocation(line: 1127, column: 10, scope: !5482)
!5745 = !DILocation(line: 1127, column: 7, scope: !5482)
!5746 = !DILocation(line: 1128, column: 9, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 1128, column: 6)
!5748 = !DILocation(line: 1128, column: 6, scope: !5482)
!5749 = !DILocation(line: 1134, column: 27, scope: !5482)
!5750 = !DILocation(line: 1136, column: 7, scope: !5482)
!5751 = !DILocation(line: 1137, column: 9, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5482, file: !395, line: 1137, column: 6)
!5753 = !DILocation(line: 1137, column: 6, scope: !5482)
!5754 = !DILocation(line: 1131, column: 10, scope: !5482)
!5755 = !DILocation(line: 1140, column: 10, scope: !5482)
!5756 = !DILocation(line: 0, scope: !5549)
!5757 = !DILocation(line: 1143, column: 20, scope: !5552)
!5758 = !DILocation(line: 1143, column: 2, scope: !5549)
!5759 = !DILocation(line: 1144, column: 3, scope: !5551)
!5760 = !DILocation(line: 1144, column: 17, scope: !5551)
!5761 = !DILocation(line: 0, scope: !5551)
!5762 = !DILocation(line: 1144, column: 11, scope: !5551)
!5763 = !DILocation(line: 1145, column: 38, scope: !5551)
!5764 = !DILocation(line: 1145, column: 21, scope: !5551)
!5765 = !DILocation(line: 1146, column: 22, scope: !5551)
!5766 = !DILocation(line: 1146, column: 29, scope: !5551)
!5767 = !DILocation(line: 1148, column: 8, scope: !5551)
!5768 = !DILocation(line: 1149, column: 10, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5551, file: !395, line: 1149, column: 7)
!5770 = !DILocation(line: 1149, column: 7, scope: !5551)
!5771 = !DILocation(line: 1154, column: 8, scope: !5551)
!5772 = !DILocation(line: 1155, column: 10, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5551, file: !395, line: 1155, column: 7)
!5774 = !DILocation(line: 1155, column: 7, scope: !5551)
!5775 = !DILocation(line: 1159, column: 2, scope: !5552)
!5776 = !DILocation(line: 1152, column: 11, scope: !5551)
!5777 = !DILocation(line: 1158, column: 11, scope: !5551)
!5778 = !DILocation(line: 1143, column: 33, scope: !5552)
!5779 = distinct !{!5779, !5758, !5780}
!5780 = !DILocation(line: 1159, column: 2, scope: !5549)
!5781 = !DILocation(line: 1162, column: 8, scope: !5482)
!5782 = !DILocation(line: 1164, column: 2, scope: !5482)
!5783 = !DILocation(line: 1165, column: 1, scope: !5482)
!5784 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !5785, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5787)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!272, !124}
!5787 = !{!5788, !5789, !5790, !5791, !5792, !5793, !5794}
!5788 = !DILocalVariable(name: "packaged", arg: 1, scope: !5784, file: !395, line: 196, type: !124)
!5789 = !DILocalVariable(name: "buf", scope: !5784, file: !395, line: 200, type: !184)
!5790 = !DILocalVariable(name: "start", scope: !5784, file: !395, line: 201, type: !184)
!5791 = !DILocalVariable(name: "args_size", scope: !5784, file: !395, line: 202, type: !32)
!5792 = !DILocalVariable(name: "s_nbr", scope: !5784, file: !395, line: 202, type: !32)
!5793 = !DILocalVariable(name: "ros_nbr", scope: !5784, file: !395, line: 202, type: !32)
!5794 = !DILocalVariable(name: "i", scope: !5795, file: !395, line: 215, type: !125)
!5795 = distinct !DILexicalBlock(scope: !5784, file: !395, line: 215, column: 2)
!5796 = !DILocation(line: 0, scope: !5784)
!5797 = !DILocation(line: 204, column: 14, scope: !5784)
!5798 = !DILocation(line: 204, column: 21, scope: !5784)
!5799 = !DILocation(line: 205, column: 14, scope: !5784)
!5800 = !DILocation(line: 206, column: 14, scope: !5784)
!5801 = !DILocation(line: 209, column: 6, scope: !5784)
!5802 = !DILocation(line: 212, column: 6, scope: !5784)
!5803 = !DILocation(line: 0, scope: !5795)
!5804 = !DILocation(line: 215, column: 20, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5795, file: !395, line: 215, column: 2)
!5806 = !DILocation(line: 215, column: 2, scope: !5795)
!5807 = !DILocation(line: 220, column: 33, scope: !5784)
!5808 = !DILocation(line: 220, column: 2, scope: !5784)
!5809 = !DILocation(line: 216, column: 6, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !395, line: 215, column: 34)
!5811 = !DILocation(line: 217, column: 10, scope: !5810)
!5812 = !DILocation(line: 217, column: 36, scope: !5810)
!5813 = !DILocation(line: 217, column: 7, scope: !5810)
!5814 = !DILocation(line: 215, column: 30, scope: !5805)
!5815 = distinct !{!5815, !5806, !5816}
!5816 = !DILocation(line: 218, column: 2, scope: !5795)
!5817 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5818, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5820)
!5818 = !DISubroutineType(types: !5819)
!5819 = !{!125, !5485, !124, !140, !227}
!5820 = !{!5821, !5822, !5823, !5824}
!5821 = !DILocalVariable(name: "cb", arg: 1, scope: !5817, file: !395, line: 223, type: !5485)
!5822 = !DILocalVariable(name: "ctx", arg: 2, scope: !5817, file: !395, line: 223, type: !124)
!5823 = !DILocalVariable(name: "str", arg: 3, scope: !5817, file: !395, line: 223, type: !140)
!5824 = !DILocalVariable(name: "strl", arg: 4, scope: !5817, file: !395, line: 223, type: !227)
!5825 = !DILocation(line: 0, scope: !5817)
!5826 = !DILocation(line: 225, column: 9, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5817, file: !395, line: 225, column: 6)
!5828 = !DILocation(line: 225, column: 6, scope: !5817)
!5829 = !DILocation(line: 226, column: 14, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5827, file: !395, line: 225, column: 18)
!5831 = !DILocation(line: 226, column: 12, scope: !5830)
!5832 = !DILocation(line: 226, column: 3, scope: !5830)
!5833 = !DILocation(line: 229, column: 14, scope: !5817)
!5834 = !DILocation(line: 229, column: 9, scope: !5817)
!5835 = !DILocation(line: 229, column: 27, scope: !5817)
!5836 = !DILocation(line: 229, column: 39, scope: !5817)
!5837 = !DILocation(line: 230, column: 17, scope: !5817)
!5838 = !DILocation(line: 230, column: 9, scope: !5817)
!5839 = !DILocation(line: 230, column: 2, scope: !5817)
!5840 = !DILocation(line: 231, column: 1, scope: !5817)
!5841 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5842)
!5842 = !{!5843}
!5843 = !DILocalVariable(name: "c", arg: 1, scope: !5841, file: !408, line: 45, type: !125)
!5844 = !DILocation(line: 0, scope: !5841)
!5845 = !DILocation(line: 50, column: 2, scope: !5841)
!5846 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5847, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5849)
!5847 = !DISubroutineType(types: !5848)
!5848 = !{null, !409}
!5849 = !{!5850}
!5850 = !DILocalVariable(name: "fn", arg: 1, scope: !5846, file: !408, line: 63, type: !409)
!5851 = !DILocation(line: 0, scope: !5846)
!5852 = !DILocation(line: 65, column: 12, scope: !5846)
!5853 = !DILocation(line: 66, column: 1, scope: !5846)
!5854 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5855, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1126)
!5855 = !DISubroutineType(types: !5856)
!5856 = !{!124}
!5857 = !DILocation(line: 78, column: 9, scope: !5854)
!5858 = !DILocation(line: 78, column: 2, scope: !5854)
!5859 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5860, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5868)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{null, !140, !5862}
!5862 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4993, line: 99, baseType: !5863)
!5863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4993, line: 40, baseType: !5864)
!5864 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5865)
!5865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5866)
!5866 = !{!5867}
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5865, file: !408, line: 79, baseType: !124, size: 32)
!5868 = !{!5869, !5870, !5871}
!5869 = !DILocalVariable(name: "fmt", arg: 1, scope: !5859, file: !408, line: 113, type: !140)
!5870 = !DILocalVariable(name: "ap", arg: 2, scope: !5859, file: !408, line: 113, type: !5862)
!5871 = !DILocalVariable(name: "ctx", scope: !5872, file: !408, line: 121, type: !5874)
!5872 = distinct !DILexicalBlock(scope: !5873, file: !408, line: 120, column: 27)
!5873 = distinct !DILexicalBlock(scope: !5859, file: !408, line: 120, column: 6)
!5874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5875)
!5875 = !{!5876, !5877}
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5874, file: !408, line: 85, baseType: !32, size: 32)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5874, file: !408, line: 86, baseType: !5878, offset: 32)
!5878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !1147)
!5879 = !DILocation(line: 0, scope: !5859)
!5880 = !DILocation(line: 148, column: 3, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5873, file: !408, line: 138, column: 9)
!5882 = !DILocation(line: 155, column: 1, scope: !5859)
!5883 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5884, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5886)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{!125, !125, !124}
!5886 = !{!5887, !5888}
!5887 = !DILocalVariable(name: "c", arg: 1, scope: !5883, file: !408, line: 107, type: !125)
!5888 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5883, file: !408, line: 107, type: !124)
!5889 = !DILocation(line: 0, scope: !5883)
!5890 = !DILocation(line: 110, column: 9, scope: !5883)
!5891 = !DILocation(line: 110, column: 2, scope: !5883)
!5892 = distinct !DISubprogram(name: "cbvprintf", scope: !5024, file: !5024, line: 739, type: !5893, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5895)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!125, !5353, !124, !140, !5862}
!5895 = !{!5896, !5897, !5898, !5899}
!5896 = !DILocalVariable(name: "out", arg: 1, scope: !5892, file: !5024, line: 739, type: !5353)
!5897 = !DILocalVariable(name: "ctx", arg: 2, scope: !5892, file: !5024, line: 739, type: !124)
!5898 = !DILocalVariable(name: "format", arg: 3, scope: !5892, file: !5024, line: 739, type: !140)
!5899 = !DILocalVariable(name: "ap", arg: 4, scope: !5892, file: !5024, line: 739, type: !5862)
!5900 = !DILocation(line: 0, scope: !5892)
!5901 = !DILocation(line: 741, column: 9, scope: !5892)
!5902 = !DILocation(line: 741, column: 2, scope: !5892)
!5903 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5904, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5906)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{null, !393, !272}
!5906 = !{!5907, !5908, !5909}
!5907 = !DILocalVariable(name: "c", arg: 1, scope: !5903, file: !408, line: 157, type: !393)
!5908 = !DILocalVariable(name: "n", arg: 2, scope: !5903, file: !408, line: 157, type: !272)
!5909 = !DILocalVariable(name: "i", scope: !5903, file: !408, line: 159, type: !272)
!5910 = !DILocation(line: 0, scope: !5903)
!5911 = !DILocation(line: 164, column: 16, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !408, line: 164, column: 2)
!5913 = distinct !DILexicalBlock(scope: !5903, file: !408, line: 164, column: 2)
!5914 = !DILocation(line: 164, column: 2, scope: !5913)
!5915 = !DILocation(line: 165, column: 3, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !408, line: 164, column: 26)
!5917 = !DILocation(line: 165, column: 13, scope: !5916)
!5918 = !DILocation(line: 164, column: 22, scope: !5912)
!5919 = distinct !{!5919, !5914, !5920}
!5920 = !DILocation(line: 166, column: 2, scope: !5913)
!5921 = !DILocation(line: 171, column: 1, scope: !5903)
!5922 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5923, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5925)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{null, !140, null}
!5925 = !{!5926, !5927}
!5926 = !DILocalVariable(name: "fmt", arg: 1, scope: !5922, file: !408, line: 203, type: !140)
!5927 = !DILocalVariable(name: "ap", scope: !5922, file: !408, line: 205, type: !5862)
!5928 = !DILocation(line: 0, scope: !5922)
!5929 = !DILocation(line: 205, column: 2, scope: !5922)
!5930 = !DILocation(line: 205, column: 10, scope: !5922)
!5931 = !DILocation(line: 207, column: 2, scope: !5922)
!5932 = !DILocation(line: 209, column: 2, scope: !5922)
!5933 = !DILocation(line: 211, column: 2, scope: !5922)
!5934 = !DILocation(line: 212, column: 1, scope: !5922)
!5935 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5936, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5938)
!5936 = !DISubroutineType(types: !5937)
!5937 = !{!125, !393, !272, !140, null}
!5938 = !{!5939, !5940, !5941, !5942, !5943}
!5939 = !DILocalVariable(name: "str", arg: 1, scope: !5935, file: !408, line: 239, type: !393)
!5940 = !DILocalVariable(name: "size", arg: 2, scope: !5935, file: !408, line: 239, type: !272)
!5941 = !DILocalVariable(name: "fmt", arg: 3, scope: !5935, file: !408, line: 239, type: !140)
!5942 = !DILocalVariable(name: "ap", scope: !5935, file: !408, line: 241, type: !5862)
!5943 = !DILocalVariable(name: "ret", scope: !5935, file: !408, line: 242, type: !125)
!5944 = !DILocation(line: 0, scope: !5935)
!5945 = !DILocation(line: 241, column: 2, scope: !5935)
!5946 = !DILocation(line: 241, column: 10, scope: !5935)
!5947 = !DILocation(line: 244, column: 2, scope: !5935)
!5948 = !DILocation(line: 245, column: 8, scope: !5935)
!5949 = !DILocation(line: 246, column: 2, scope: !5935)
!5950 = !DILocation(line: 249, column: 1, scope: !5935)
!5951 = !DILocation(line: 248, column: 2, scope: !5935)
!5952 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5953, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5955)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{!125, !393, !272, !140, !5862}
!5955 = !{!5956, !5957, !5958, !5959, !5960}
!5956 = !DILocalVariable(name: "str", arg: 1, scope: !5952, file: !408, line: 251, type: !393)
!5957 = !DILocalVariable(name: "size", arg: 2, scope: !5952, file: !408, line: 251, type: !272)
!5958 = !DILocalVariable(name: "fmt", arg: 3, scope: !5952, file: !408, line: 251, type: !140)
!5959 = !DILocalVariable(name: "ap", arg: 4, scope: !5952, file: !408, line: 251, type: !5862)
!5960 = !DILocalVariable(name: "ctx", scope: !5952, file: !408, line: 253, type: !5961)
!5961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5962)
!5962 = !{!5963, !5964, !5965}
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5961, file: !408, line: 218, baseType: !393, size: 32)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5961, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5961, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5966 = !DILocation(line: 0, scope: !5952)
!5967 = !DILocation(line: 253, column: 2, scope: !5952)
!5968 = !DILocation(line: 253, column: 21, scope: !5952)
!5969 = !DILocation(line: 253, column: 27, scope: !5952)
!5970 = !DILocation(line: 255, column: 2, scope: !5952)
!5971 = !DILocation(line: 257, column: 10, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5952, file: !408, line: 257, column: 6)
!5973 = !DILocation(line: 257, column: 22, scope: !5972)
!5974 = !DILocation(line: 257, column: 16, scope: !5972)
!5975 = !DILocation(line: 257, column: 6, scope: !5952)
!5976 = !DILocation(line: 258, column: 3, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5972, file: !408, line: 257, column: 27)
!5978 = !DILocation(line: 258, column: 18, scope: !5977)
!5979 = !DILocation(line: 259, column: 2, scope: !5977)
!5980 = !DILocation(line: 262, column: 1, scope: !5952)
!5981 = !DILocation(line: 261, column: 2, scope: !5952)
!5982 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5983, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5986)
!5983 = !DISubroutineType(types: !5984)
!5984 = !{!125, !125, !5985}
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5961, size: 32)
!5986 = !{!5987, !5988}
!5987 = !DILocalVariable(name: "c", arg: 1, scope: !5982, file: !408, line: 223, type: !125)
!5988 = !DILocalVariable(name: "ctx", arg: 2, scope: !5982, file: !408, line: 223, type: !5985)
!5989 = !DILocation(line: 0, scope: !5982)
!5990 = !DILocation(line: 225, column: 11, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5982, file: !408, line: 225, column: 6)
!5992 = !DILocation(line: 225, column: 15, scope: !5991)
!5993 = !DILocation(line: 0, scope: !5991)
!5994 = !DILocation(line: 225, column: 23, scope: !5991)
!5995 = !DILocation(line: 225, column: 45, scope: !5991)
!5996 = !DILocation(line: 225, column: 37, scope: !5991)
!5997 = !DILocation(line: 225, column: 6, scope: !5982)
!5998 = !DILocation(line: 226, column: 8, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5991, file: !408, line: 225, column: 50)
!6000 = !DILocation(line: 226, column: 13, scope: !5999)
!6001 = !DILocation(line: 227, column: 3, scope: !5999)
!6002 = !DILocation(line: 230, column: 29, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5982, file: !408, line: 230, column: 6)
!6004 = !DILocation(line: 230, column: 17, scope: !6003)
!6005 = !DILocation(line: 230, column: 6, scope: !5982)
!6006 = !DILocation(line: 231, column: 22, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !408, line: 230, column: 34)
!6008 = !DILocation(line: 231, column: 3, scope: !6007)
!6009 = !DILocation(line: 231, column: 26, scope: !6007)
!6010 = !DILocation(line: 232, column: 2, scope: !6007)
!6011 = !DILocation(line: 233, column: 28, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6003, file: !408, line: 232, column: 9)
!6013 = !DILocation(line: 233, column: 22, scope: !6012)
!6014 = !DILocation(line: 233, column: 3, scope: !6012)
!6015 = !DILocation(line: 233, column: 26, scope: !6012)
!6016 = !DILocation(line: 237, column: 1, scope: !5982)
!6017 = distinct !DISubprogram(name: "z_thread_entry", scope: !6018, file: !6018, line: 30, type: !6019, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3644, retainedNodes: !6026)
!6018 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6019 = !DISubroutineType(types: !6020)
!6020 = !{null, !6021, !124, !124, !124}
!6021 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !6022, line: 46, baseType: !6023)
!6022 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 32)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{null, !124, !124, !124}
!6026 = !{!6027, !6028, !6029, !6030}
!6027 = !DILocalVariable(name: "entry", arg: 1, scope: !6017, file: !6018, line: 30, type: !6021)
!6028 = !DILocalVariable(name: "p1", arg: 2, scope: !6017, file: !6018, line: 31, type: !124)
!6029 = !DILocalVariable(name: "p2", arg: 3, scope: !6017, file: !6018, line: 31, type: !124)
!6030 = !DILocalVariable(name: "p3", arg: 4, scope: !6017, file: !6018, line: 31, type: !124)
!6031 = !DILocation(line: 0, scope: !6017)
!6032 = !DILocation(line: 36, column: 2, scope: !6017)
!6033 = !DILocation(line: 38, column: 17, scope: !6017)
!6034 = !DILocation(line: 38, column: 2, scope: !6017)
!6035 = !DILocation(line: 45, column: 2, scope: !6017)
!6036 = distinct !DISubprogram(name: "k_current_get", scope: !1111, file: !1111, line: 530, type: !6037, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3644, retainedNodes: !1126)
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!6039}
!6039 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1020, line: 347, baseType: !6040)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 32)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !6042)
!6042 = !{!6043, !6101, !6113, !6114, !6115, !6116, !6122, !6135}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6041, file: !1020, line: 247, baseType: !6044, size: 384)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !6045)
!6045 = !{!6046, !6070, !6077, !6078, !6079, !6088, !6089, !6090}
!6046 = !DIDerivedType(tag: DW_TAG_member, scope: !6044, file: !1020, line: 60, baseType: !6047, size: 64)
!6047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6044, file: !1020, line: 60, size: 64, elements: !6048)
!6048 = !{!6049, !6064}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6047, file: !1020, line: 61, baseType: !6050, size: 64)
!6050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !6051)
!6051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !6052)
!6052 = !{!6053, !6059}
!6053 = !DIDerivedType(tag: DW_TAG_member, scope: !6051, file: !1030, line: 38, baseType: !6054, size: 32)
!6054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6051, file: !1030, line: 38, size: 32, elements: !6055)
!6055 = !{!6056, !6058}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6054, file: !1030, line: 39, baseType: !6057, size: 32)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 32)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6054, file: !1030, line: 40, baseType: !6057, size: 32)
!6059 = !DIDerivedType(tag: DW_TAG_member, scope: !6051, file: !1030, line: 42, baseType: !6060, size: 32, offset: 32)
!6060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6051, file: !1030, line: 42, size: 32, elements: !6061)
!6061 = !{!6062, !6063}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6060, file: !1030, line: 43, baseType: !6057, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6060, file: !1030, line: 44, baseType: !6057, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6047, file: !1020, line: 62, baseType: !6065, size: 64)
!6065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !6066)
!6066 = !{!6067}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6065, file: !1046, line: 50, baseType: !6068, size: 64)
!6068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6069, size: 64, elements: !807)
!6069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6065, size: 32)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6044, file: !1020, line: 68, baseType: !6071, size: 32, offset: 64)
!6071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6072, size: 32)
!6072 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !6073)
!6073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !6074)
!6074 = !{!6075}
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6073, file: !1054, line: 232, baseType: !6076, size: 64)
!6076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !6051)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6044, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6044, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!6079 = !DIDerivedType(tag: DW_TAG_member, scope: !6044, file: !1020, line: 90, baseType: !6080, size: 16, offset: 112)
!6080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6044, file: !1020, line: 90, size: 16, elements: !6081)
!6081 = !{!6082, !6087}
!6082 = !DIDerivedType(tag: DW_TAG_member, scope: !6080, file: !1020, line: 91, baseType: !6083, size: 16)
!6083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6080, file: !1020, line: 91, size: 16, elements: !6084)
!6084 = !{!6085, !6086}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6083, file: !1020, line: 96, baseType: !1068, size: 8)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6083, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6080, file: !1020, line: 100, baseType: !227, size: 16)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6044, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6044, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6044, file: !1020, line: 131, baseType: !6091, size: 192, offset: 192)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !6092)
!6092 = !{!6093, !6094, !6100}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6091, file: !1054, line: 245, baseType: !6050, size: 64)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6091, file: !1054, line: 246, baseType: !6095, size: 32, offset: 64)
!6095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !6096)
!6096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6097, size: 32)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{null, !6099}
!6099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6091, size: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6091, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6041, file: !1020, line: 250, baseType: !6102, size: 288, offset: 384)
!6102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !6103)
!6103 = !{!6104, !6105, !6106, !6107, !6108, !6109, !6110, !6111, !6112}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6102, file: !1088, line: 26, baseType: !208, size: 32)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6102, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6102, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6102, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6102, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6102, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6102, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6102, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6102, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6041, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6041, file: !1020, line: 256, baseType: !6072, size: 64, offset: 704)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6041, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6041, file: !1020, line: 300, baseType: !6117, size: 96, offset: 800)
!6117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !6118)
!6118 = !{!6119, !6120, !6121}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6117, file: !1020, line: 153, baseType: !22, size: 32)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6117, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6117, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6041, file: !1020, line: 325, baseType: !6123, size: 32, offset: 896)
!6123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6124, size: 32)
!6124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !6125)
!6125 = !{!6126, !6132, !6133}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6124, file: !1111, line: 5074, baseType: !6127, size: 96)
!6127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !6128)
!6128 = !{!6129, !6130, !6131}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6127, file: !1115, line: 57, baseType: !1118, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6127, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6127, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6124, file: !1111, line: 5075, baseType: !6072, size: 64, offset: 96)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6124, file: !1111, line: 5076, baseType: !6134, offset: 160)
!6134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6041, file: !1020, line: 343, baseType: !6136, size: 64, offset: 928)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !6137)
!6137 = !{!6138, !6139}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6136, file: !1088, line: 63, baseType: !208, size: 32)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6136, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!6140 = !DILocation(line: 535, column: 9, scope: !6036)
!6141 = !DILocation(line: 535, column: 2, scope: !6036)
!6142 = distinct !DISubprogram(name: "k_thread_abort", scope: !6143, file: !6143, line: 188, type: !6144, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3644, retainedNodes: !6146)
!6143 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !6039}
!6146 = !{!6147}
!6147 = !DILocalVariable(name: "thread", arg: 1, scope: !6142, file: !6143, line: 188, type: !6039)
!6148 = !DILocation(line: 0, scope: !6142)
!6149 = !DILocation(line: 197, column: 2, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6142, file: !6143, line: 197, column: 2)
!6151 = !{i64 2152642337}
!6152 = !DILocation(line: 198, column: 2, scope: !6142)
!6153 = !DILocation(line: 199, column: 1, scope: !6142)
!6154 = distinct !DISubprogram(name: "z_current_get", scope: !6143, file: !6143, line: 173, type: !6037, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3644, retainedNodes: !1126)
!6155 = !DILocation(line: 180, column: 2, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6154, file: !6143, line: 180, column: 2)
!6157 = !{i64 2152642269}
!6158 = !DILocation(line: 181, column: 9, scope: !6154)
!6159 = !DILocation(line: 181, column: 2, scope: !6154)
!6160 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3650, file: !3650, line: 1338, type: !6161, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6169)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!125, !5353, !124, !140, !6163, !208}
!6163 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4993, line: 99, baseType: !6164)
!6164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4993, line: 40, baseType: !6165)
!6165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3650, baseType: !6166)
!6166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6167)
!6167 = !{!6168}
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6166, file: !3650, baseType: !124, size: 32)
!6169 = !{!6170, !6171, !6172, !6173, !6174, !6175, !6179, !6180, !6181, !6183, !6188, !6231, !6234, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6246, !6247, !6248, !6252, !6255, !6257, !6260, !6261, !6262, !6267, !6273, !6276, !6280, !6286, !6290, !6293, !6295, !6298}
!6170 = !DILocalVariable(name: "out", arg: 1, scope: !6160, file: !3650, line: 1338, type: !5353)
!6171 = !DILocalVariable(name: "ctx", arg: 2, scope: !6160, file: !3650, line: 1338, type: !124)
!6172 = !DILocalVariable(name: "fp", arg: 3, scope: !6160, file: !3650, line: 1338, type: !140)
!6173 = !DILocalVariable(name: "ap", arg: 4, scope: !6160, file: !3650, line: 1339, type: !6163)
!6174 = !DILocalVariable(name: "flags", arg: 5, scope: !6160, file: !3650, line: 1339, type: !208)
!6175 = !DILocalVariable(name: "buf", scope: !6160, file: !3650, line: 1341, type: !6176)
!6176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !6177)
!6177 = !{!6178}
!6178 = !DISubrange(count: 22)
!6179 = !DILocalVariable(name: "count", scope: !6160, file: !3650, line: 1342, type: !272)
!6180 = !DILocalVariable(name: "sint", scope: !6160, file: !3650, line: 1343, type: !3669)
!6181 = !DILocalVariable(name: "tagged_ap", scope: !6160, file: !3650, line: 1345, type: !6182)
!6182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!6183 = !DILocalVariable(name: "rc", scope: !6184, file: !3650, line: 1377, type: !125)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3650, line: 1377, column: 4)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3650, line: 1376, column: 19)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1376, column: 7)
!6187 = distinct !DILexicalBlock(scope: !6160, file: !3650, line: 1375, column: 19)
!6188 = !DILocalVariable(name: "state", scope: !6187, file: !3650, line: 1395, type: !6189)
!6189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6160, file: !3650, line: 1392, size: 192, elements: !6190)
!6190 = !{!6191, !6199}
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6189, file: !3650, line: 1393, baseType: !6192, size: 64)
!6192 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3650, line: 166, size: 64, elements: !6193)
!6193 = !{!6194, !6195, !6196, !6197, !6198}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6192, file: !3650, line: 168, baseType: !3669, size: 64)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6192, file: !3650, line: 171, baseType: !3672, size: 64)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6192, file: !3650, line: 174, baseType: !385, size: 64)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6192, file: !3650, line: 177, baseType: !383, size: 64)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6192, file: !3650, line: 180, baseType: !124, size: 32)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6189, file: !3650, line: 1394, baseType: !6200, size: 96, offset: 64)
!6200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3650, line: 189, size: 96, elements: !6201)
!6201 = !{!6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6211, !6212, !6213, !6214, !6215, !6216, !6217, !6218, !6219, !6220, !6221, !6226}
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6200, file: !3650, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6200, file: !3650, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6200, file: !3650, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6200, file: !3650, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6200, file: !3650, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6200, file: !3650, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6200, file: !3650, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6200, file: !3650, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6200, file: !3650, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6200, file: !3650, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6200, file: !3650, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6200, file: !3650, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6200, file: !3650, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6200, file: !3650, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6200, file: !3650, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6200, file: !3650, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6200, file: !3650, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6200, file: !3650, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6200, file: !3650, line: 260, baseType: !151, size: 8, offset: 24)
!6221 = !DIDerivedType(tag: DW_TAG_member, scope: !6200, file: !3650, line: 262, baseType: !6222, size: 32, offset: 32)
!6222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6200, file: !3650, line: 262, size: 32, elements: !6223)
!6223 = !{!6224, !6225}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6222, file: !3650, line: 267, baseType: !125, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6222, file: !3650, line: 289, baseType: !125, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, scope: !6200, file: !3650, line: 292, baseType: !6227, size: 32, offset: 64)
!6227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6200, file: !3650, line: 292, size: 32, elements: !6228)
!6228 = !{!6229, !6230}
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6227, file: !3650, line: 297, baseType: !125, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6227, file: !3650, line: 306, baseType: !125, size: 32)
!6231 = !DILocalVariable(name: "conv", scope: !6187, file: !3650, line: 1400, type: !6232)
!6232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6233)
!6233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6200, size: 32)
!6234 = !DILocalVariable(name: "value", scope: !6187, file: !3650, line: 1401, type: !6235)
!6235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6236)
!6236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 32)
!6237 = !DILocalVariable(name: "sp", scope: !6187, file: !3650, line: 1402, type: !140)
!6238 = !DILocalVariable(name: "width", scope: !6187, file: !3650, line: 1403, type: !125)
!6239 = !DILocalVariable(name: "precision", scope: !6187, file: !3650, line: 1404, type: !125)
!6240 = !DILocalVariable(name: "bps", scope: !6187, file: !3650, line: 1405, type: !140)
!6241 = !DILocalVariable(name: "bpe", scope: !6187, file: !3650, line: 1406, type: !140)
!6242 = !DILocalVariable(name: "sign", scope: !6187, file: !3650, line: 1407, type: !142)
!6243 = !DILocalVariable(name: "arg", scope: !6244, file: !3650, line: 1432, type: !125)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !3650, line: 1431, column: 24)
!6245 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1431, column: 7)
!6246 = !DILocalVariable(name: "specifier_cat", scope: !6187, file: !3650, line: 1468, type: !3649)
!6247 = !DILocalVariable(name: "length_mod", scope: !6187, file: !3650, line: 1470, type: !3657)
!6248 = !DILocalVariable(name: "rc", scope: !6249, file: !3650, line: 1575, type: !125)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !3650, line: 1575, column: 4)
!6250 = distinct !DILexicalBlock(scope: !6251, file: !3650, line: 1574, column: 43)
!6251 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1574, column: 7)
!6252 = !DILocalVariable(name: "rc", scope: !6253, file: !3650, line: 1584, type: !125)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !3650, line: 1584, column: 4)
!6254 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1582, column: 28)
!6255 = !DILocalVariable(name: "len", scope: !6256, file: !3650, line: 1589, type: !272)
!6256 = distinct !DILexicalBlock(scope: !6254, file: !3650, line: 1586, column: 13)
!6257 = !DILocalVariable(name: "len", scope: !6258, file: !3650, line: 1641, type: !272)
!6258 = distinct !DILexicalBlock(scope: !6259, file: !3650, line: 1640, column: 24)
!6259 = distinct !DILexicalBlock(scope: !6254, file: !3650, line: 1640, column: 8)
!6260 = !DILocalVariable(name: "nj_len", scope: !6187, file: !3650, line: 1722, type: !272)
!6261 = !DILocalVariable(name: "pad_len", scope: !6187, file: !3650, line: 1723, type: !125)
!6262 = !DILocalVariable(name: "pad", scope: !6263, file: !3650, line: 1751, type: !142)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !3650, line: 1750, column: 26)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !3650, line: 1750, column: 8)
!6265 = distinct !DILexicalBlock(scope: !6266, file: !3650, line: 1747, column: 18)
!6266 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1747, column: 7)
!6267 = !DILocalVariable(name: "rc", scope: !6268, file: !3650, line: 1758, type: !125)
!6268 = distinct !DILexicalBlock(scope: !6269, file: !3650, line: 1758, column: 7)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !3650, line: 1757, column: 21)
!6270 = distinct !DILexicalBlock(scope: !6271, file: !3650, line: 1757, column: 10)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !3650, line: 1756, column: 26)
!6272 = distinct !DILexicalBlock(scope: !6263, file: !3650, line: 1756, column: 9)
!6273 = !DILocalVariable(name: "rc", scope: !6274, file: !3650, line: 1765, type: !125)
!6274 = distinct !DILexicalBlock(scope: !6275, file: !3650, line: 1765, column: 6)
!6275 = distinct !DILexicalBlock(scope: !6263, file: !3650, line: 1764, column: 25)
!6276 = !DILocalVariable(name: "rc", scope: !6277, file: !3650, line: 1774, type: !125)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !3650, line: 1774, column: 4)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !3650, line: 1773, column: 18)
!6279 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1773, column: 7)
!6280 = !DILocalVariable(name: "rc", scope: !6281, file: !3650, line: 1819, type: !125)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !3650, line: 1819, column: 5)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !3650, line: 1818, column: 44)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !3650, line: 1818, column: 8)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !3650, line: 1817, column: 10)
!6285 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1777, column: 7)
!6286 = !DILocalVariable(name: "rc", scope: !6287, file: !3650, line: 1823, type: !125)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !3650, line: 1823, column: 5)
!6288 = distinct !DILexicalBlock(scope: !6289, file: !3650, line: 1822, column: 26)
!6289 = distinct !DILexicalBlock(scope: !6284, file: !3650, line: 1822, column: 8)
!6290 = !DILocalVariable(name: "rc", scope: !6291, file: !3650, line: 1828, type: !125)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !3650, line: 1828, column: 5)
!6292 = distinct !DILexicalBlock(scope: !6284, file: !3650, line: 1827, column: 26)
!6293 = !DILocalVariable(name: "rc", scope: !6294, file: !3650, line: 1831, type: !125)
!6294 = distinct !DILexicalBlock(scope: !6284, file: !3650, line: 1831, column: 4)
!6295 = !DILocalVariable(name: "rc", scope: !6296, file: !3650, line: 1836, type: !125)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !3650, line: 1836, column: 4)
!6297 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1835, column: 21)
!6298 = !DILabel(scope: !6254, name: "prec_int_pad0", file: !3650, line: 1634)
!6299 = !DILocation(line: 0, scope: !6160)
!6300 = !DILocation(line: 1341, column: 2, scope: !6160)
!6301 = !DILocation(line: 1341, column: 7, scope: !6160)
!6302 = !DILocation(line: 1375, column: 2, scope: !6160)
!6303 = !DILocation(line: 1342, column: 9, scope: !6160)
!6304 = !DILocation(line: 1375, column: 9, scope: !6160)
!6305 = !DILocation(line: 1377, column: 4, scope: !6184)
!6306 = !DILocation(line: 0, scope: !6184)
!6307 = !DILocation(line: 1377, column: 4, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6184, file: !3650, line: 1377, column: 4)
!6309 = distinct !{!6309, !6302, !6310}
!6310 = !DILocation(line: 1839, column: 2, scope: !6160)
!6311 = !DILocation(line: 1392, column: 3, scope: !6187)
!6312 = !DILocation(line: 1395, column: 5, scope: !6187)
!6313 = !DILocation(line: 0, scope: !6187)
!6314 = !DILocation(line: 1409, column: 8, scope: !6187)
!6315 = !DILocation(line: 1414, column: 13, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1414, column: 7)
!6317 = !DILocation(line: 1414, column: 7, scope: !6187)
!6318 = !DILocation(line: 1415, column: 12, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6316, file: !3650, line: 1414, column: 25)
!6320 = !DILocation(line: 1417, column: 14, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6319, file: !3650, line: 1417, column: 8)
!6322 = !DILocation(line: 1417, column: 8, scope: !6319)
!6323 = !DILocation(line: 1418, column: 21, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6321, file: !3650, line: 1417, column: 19)
!6325 = !DILocation(line: 1419, column: 13, scope: !6324)
!6326 = !DILocation(line: 1420, column: 4, scope: !6324)
!6327 = !DILocation(line: 1421, column: 20, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6316, file: !3650, line: 1421, column: 14)
!6329 = !DILocation(line: 1421, column: 14, scope: !6316)
!6330 = !DILocation(line: 1431, column: 13, scope: !6245)
!6331 = !DILocation(line: 1431, column: 7, scope: !6187)
!6332 = !DILocation(line: 1432, column: 14, scope: !6244)
!6333 = !DILocation(line: 0, scope: !6244)
!6334 = !DILocation(line: 1434, column: 12, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6244, file: !3650, line: 1434, column: 8)
!6336 = !DILocation(line: 1434, column: 8, scope: !6244)
!6337 = !DILocation(line: 1435, column: 24, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6335, file: !3650, line: 1434, column: 17)
!6339 = !DILocation(line: 1436, column: 4, scope: !6338)
!6340 = !DILocation(line: 1439, column: 20, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6245, file: !3650, line: 1439, column: 14)
!6342 = !DILocation(line: 1439, column: 14, scope: !6245)
!6343 = !DILocation(line: 1469, column: 37, scope: !6187)
!6344 = !DILocation(line: 1448, column: 20, scope: !6187)
!6345 = !DILocation(line: 1449, column: 22, scope: !6187)
!6346 = !DILocation(line: 1471, column: 34, scope: !6187)
!6347 = !DILocation(line: 1478, column: 7, scope: !6187)
!6348 = !DILocation(line: 1479, column: 4, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !3650, line: 1478, column: 40)
!6350 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1478, column: 7)
!6351 = !DILocation(line: 1484, column: 19, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6349, file: !3650, line: 1479, column: 24)
!6353 = !DILocation(line: 1484, column: 17, scope: !6352)
!6354 = !DILocation(line: 1485, column: 5, scope: !6352)
!6355 = !DILocation(line: 1492, column: 20, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !3650, line: 1491, column: 12)
!6357 = distinct !DILexicalBlock(scope: !6352, file: !3650, line: 1487, column: 9)
!6358 = !DILocation(line: 1492, column: 18, scope: !6356)
!6359 = !DILocation(line: 1494, column: 5, scope: !6352)
!6360 = !DILocation(line: 1497, column: 23, scope: !6352)
!6361 = !DILocation(line: 1496, column: 17, scope: !6352)
!6362 = !DILocation(line: 1498, column: 5, scope: !6352)
!6363 = !DILocation(line: 1501, column: 23, scope: !6352)
!6364 = !DILocation(line: 1500, column: 17, scope: !6352)
!6365 = !DILocation(line: 1502, column: 5, scope: !6352)
!6366 = !DILocation(line: 1513, column: 23, scope: !6352)
!6367 = !DILocation(line: 1513, column: 6, scope: !6352)
!6368 = !DILocation(line: 1512, column: 17, scope: !6352)
!6369 = !DILocation(line: 1514, column: 5, scope: !6352)
!6370 = !DILocation(line: 0, scope: !6352)
!6371 = !DILocation(line: 1516, column: 8, scope: !6349)
!6372 = !DILocation(line: 1517, column: 19, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6374, file: !3650, line: 1516, column: 33)
!6374 = distinct !DILexicalBlock(scope: !6349, file: !3650, line: 1516, column: 8)
!6375 = !DILocation(line: 1517, column: 17, scope: !6373)
!6376 = !DILocation(line: 1518, column: 4, scope: !6373)
!6377 = !DILocation(line: 1519, column: 19, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !3650, line: 1518, column: 39)
!6379 = distinct !DILexicalBlock(scope: !6374, file: !3650, line: 1518, column: 15)
!6380 = !DILocation(line: 1519, column: 17, scope: !6378)
!6381 = !DILocation(line: 1520, column: 4, scope: !6378)
!6382 = !DILocation(line: 1522, column: 4, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !3650, line: 1521, column: 47)
!6384 = distinct !DILexicalBlock(scope: !6350, file: !3650, line: 1521, column: 14)
!6385 = !DILocation(line: 1527, column: 19, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6383, file: !3650, line: 1522, column: 24)
!6387 = !DILocation(line: 1527, column: 17, scope: !6386)
!6388 = !DILocation(line: 1528, column: 5, scope: !6386)
!6389 = !DILocation(line: 0, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6386, file: !3650, line: 1530, column: 9)
!6391 = !DILocation(line: 1540, column: 23, scope: !6386)
!6392 = !DILocation(line: 1539, column: 17, scope: !6386)
!6393 = !DILocation(line: 1542, column: 5, scope: !6386)
!6394 = !DILocation(line: 1545, column: 23, scope: !6386)
!6395 = !DILocation(line: 1544, column: 17, scope: !6386)
!6396 = !DILocation(line: 1547, column: 5, scope: !6386)
!6397 = !DILocation(line: 1551, column: 23, scope: !6386)
!6398 = !DILocation(line: 1551, column: 6, scope: !6386)
!6399 = !DILocation(line: 1550, column: 17, scope: !6386)
!6400 = !DILocation(line: 1552, column: 5, scope: !6386)
!6401 = !DILocation(line: 0, scope: !6386)
!6402 = !DILocation(line: 1554, column: 8, scope: !6383)
!6403 = !DILocation(line: 1555, column: 19, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !3650, line: 1554, column: 33)
!6405 = distinct !DILexicalBlock(scope: !6383, file: !3650, line: 1554, column: 8)
!6406 = !DILocation(line: 1555, column: 17, scope: !6404)
!6407 = !DILocation(line: 1556, column: 4, scope: !6404)
!6408 = !DILocation(line: 1557, column: 19, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !3650, line: 1556, column: 39)
!6410 = distinct !DILexicalBlock(scope: !6405, file: !3650, line: 1556, column: 15)
!6411 = !DILocation(line: 1557, column: 17, scope: !6409)
!6412 = !DILocation(line: 1558, column: 4, scope: !6409)
!6413 = !DILocation(line: 0, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3650, line: 1560, column: 8)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !3650, line: 1559, column: 45)
!6416 = distinct !DILexicalBlock(scope: !6384, file: !3650, line: 1559, column: 14)
!6417 = !DILocation(line: 1566, column: 17, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !3650, line: 1565, column: 46)
!6419 = distinct !DILexicalBlock(scope: !6416, file: !3650, line: 1565, column: 14)
!6420 = !DILocation(line: 1566, column: 15, scope: !6418)
!6421 = !DILocation(line: 1567, column: 3, scope: !6418)
!6422 = !DILocation(line: 1574, column: 21, scope: !6251)
!6423 = !DILocation(line: 1575, column: 4, scope: !6249)
!6424 = !DILocation(line: 0, scope: !6249)
!6425 = !DILocation(line: 1575, column: 4, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6249, file: !3650, line: 1575, column: 4)
!6427 = !DILocation(line: 1582, column: 17, scope: !6187)
!6428 = !DILocation(line: 1582, column: 3, scope: !6187)
!6429 = !DILocation(line: 1584, column: 4, scope: !6253)
!6430 = !DILocation(line: 0, scope: !6253)
!6431 = !DILocation(line: 1584, column: 4, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6253, file: !3650, line: 1584, column: 4)
!6433 = !DILocation(line: 1587, column: 31, scope: !6256)
!6434 = !DILocation(line: 1591, column: 18, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6256, file: !3650, line: 1591, column: 8)
!6436 = !DILocation(line: 1591, column: 8, scope: !6256)
!6437 = !DILocation(line: 1592, column: 11, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6435, file: !3650, line: 1591, column: 24)
!6439 = !DILocation(line: 0, scope: !6256)
!6440 = !DILocation(line: 1593, column: 4, scope: !6438)
!6441 = !DILocation(line: 1594, column: 11, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6435, file: !3650, line: 1593, column: 11)
!6443 = !DILocation(line: 1604, column: 51, scope: !6254)
!6444 = !DILocation(line: 1604, column: 13, scope: !6254)
!6445 = !DILocation(line: 1604, column: 11, scope: !6254)
!6446 = !DILocation(line: 1606, column: 4, scope: !6254)
!6447 = !DILocation(line: 1609, column: 14, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6254, file: !3650, line: 1609, column: 8)
!6449 = !DILocation(line: 1609, column: 8, scope: !6254)
!6450 = !DILocation(line: 1619, column: 18, scope: !6254)
!6451 = !DILocation(line: 1620, column: 13, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6254, file: !3650, line: 1620, column: 8)
!6453 = !DILocation(line: 1620, column: 8, scope: !6254)
!6454 = !DILocation(line: 1622, column: 36, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6452, file: !3650, line: 1620, column: 18)
!6456 = !DILocation(line: 1622, column: 17, scope: !6455)
!6457 = !DILocation(line: 1623, column: 4, scope: !6455)
!6458 = !DILocation(line: 1632, column: 29, scope: !6254)
!6459 = !DILocation(line: 1632, column: 10, scope: !6254)
!6460 = !DILocation(line: 1632, column: 4, scope: !6254)
!6461 = !DILocation(line: 1407, column: 8, scope: !6187)
!6462 = !DILocation(line: 0, scope: !6254)
!6463 = !DILocation(line: 1634, column: 3, scope: !6254)
!6464 = !DILocation(line: 1640, column: 18, scope: !6259)
!6465 = !DILocation(line: 1640, column: 8, scope: !6254)
!6466 = !DILocation(line: 1729, column: 13, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1729, column: 7)
!6468 = !DILocation(line: 1641, column: 22, scope: !6258)
!6469 = !DILocation(line: 0, scope: !6258)
!6470 = !DILocation(line: 1646, column: 21, scope: !6258)
!6471 = !DILocation(line: 1649, column: 13, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6258, file: !3650, line: 1649, column: 9)
!6473 = !DILocation(line: 1649, column: 9, scope: !6258)
!6474 = !DILocation(line: 1650, column: 35, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6472, file: !3650, line: 1649, column: 34)
!6476 = !DILocation(line: 1650, column: 23, scope: !6475)
!6477 = !DILocation(line: 1651, column: 5, scope: !6475)
!6478 = !DILocation(line: 1660, column: 15, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6254, file: !3650, line: 1660, column: 8)
!6480 = !DILocation(line: 1660, column: 19, scope: !6479)
!6481 = !DILocation(line: 1660, column: 8, scope: !6254)
!6482 = !DILocation(line: 1661, column: 23, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6479, file: !3650, line: 1660, column: 28)
!6484 = !DILocation(line: 1661, column: 11, scope: !6483)
!6485 = !DILocation(line: 1665, column: 22, scope: !6483)
!6486 = !DILocation(line: 1666, column: 21, scope: !6483)
!6487 = !DILocation(line: 1668, column: 5, scope: !6483)
!6488 = !DILocation(line: 1677, column: 30, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !3650, line: 1676, column: 49)
!6490 = distinct !DILexicalBlock(scope: !6254, file: !3650, line: 1676, column: 8)
!6491 = !DILocation(line: 1677, column: 5, scope: !6489)
!6492 = !DILocation(line: 1680, column: 4, scope: !6254)
!6493 = !DILocation(line: 0, scope: !6435)
!6494 = !DILocation(line: 1597, column: 14, scope: !6256)
!6495 = !DILocation(line: 1699, column: 11, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1699, column: 7)
!6497 = !DILocation(line: 1699, column: 7, scope: !6187)
!6498 = !DILocation(line: 1725, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1725, column: 7)
!6500 = !DILocation(line: 1725, column: 12, scope: !6499)
!6501 = !DILocation(line: 1747, column: 13, scope: !6266)
!6502 = !DILocation(line: 1747, column: 7, scope: !6187)
!6503 = !DILocation(line: 1722, column: 24, scope: !6187)
!6504 = !DILocation(line: 1725, column: 7, scope: !6187)
!6505 = !DILocation(line: 1729, column: 7, scope: !6187)
!6506 = !DILocation(line: 1736, column: 13, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6187, file: !3650, line: 1736, column: 7)
!6508 = !DILocation(line: 1735, column: 19, scope: !6187)
!6509 = !DILocation(line: 1736, column: 7, scope: !6187)
!6510 = !DILocation(line: 1748, column: 10, scope: !6265)
!6511 = !DILocation(line: 1750, column: 15, scope: !6264)
!6512 = !DILocation(line: 1750, column: 8, scope: !6265)
!6513 = !DILocation(line: 0, scope: !6263)
!6514 = !DILocation(line: 1756, column: 15, scope: !6272)
!6515 = !DILocation(line: 1756, column: 9, scope: !6263)
!6516 = !DILocation(line: 1758, column: 7, scope: !6268)
!6517 = !DILocation(line: 0, scope: !6268)
!6518 = !DILocation(line: 1758, column: 7, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6268, file: !3650, line: 1758, column: 7)
!6520 = !DILocation(line: 1764, column: 5, scope: !6263)
!6521 = !DILocation(line: 0, scope: !6265)
!6522 = !DILocation(line: 1764, column: 20, scope: !6263)
!6523 = !DILocation(line: 1764, column: 17, scope: !6263)
!6524 = !DILocation(line: 1765, column: 6, scope: !6274)
!6525 = !DILocation(line: 0, scope: !6274)
!6526 = !DILocation(line: 1765, column: 6, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6274, file: !3650, line: 1765, column: 6)
!6528 = distinct !{!6528, !6520, !6529}
!6529 = !DILocation(line: 1766, column: 5, scope: !6263)
!6530 = !DILocation(line: 1773, column: 12, scope: !6279)
!6531 = !DILocation(line: 1773, column: 7, scope: !6187)
!6532 = !DILocation(line: 1773, column: 7, scope: !6279)
!6533 = !DILocation(line: 1774, column: 4, scope: !6277)
!6534 = !DILocation(line: 0, scope: !6277)
!6535 = !DILocation(line: 1774, column: 4, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6277, file: !3650, line: 1774, column: 4)
!6537 = !DILocation(line: 1818, column: 8, scope: !6283)
!6538 = !DILocation(line: 1818, column: 27, scope: !6283)
!6539 = !DILocation(line: 1818, column: 25, scope: !6283)
!6540 = !DILocation(line: 1818, column: 8, scope: !6284)
!6541 = !DILocation(line: 1819, column: 5, scope: !6281)
!6542 = !DILocation(line: 0, scope: !6281)
!6543 = !DILocation(line: 1819, column: 5, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6281, file: !3650, line: 1819, column: 5)
!6545 = !DILocation(line: 1822, column: 14, scope: !6289)
!6546 = !DILocation(line: 1822, column: 8, scope: !6284)
!6547 = !DILocation(line: 1823, column: 5, scope: !6287)
!6548 = !DILocation(line: 0, scope: !6287)
!6549 = !DILocation(line: 1823, column: 5, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6287, file: !3650, line: 1823, column: 5)
!6551 = !DILocation(line: 1826, column: 20, scope: !6284)
!6552 = !DILocation(line: 1827, column: 4, scope: !6284)
!6553 = !DILocation(line: 0, scope: !6284)
!6554 = !DILocation(line: 1827, column: 21, scope: !6284)
!6555 = !DILocation(line: 1827, column: 18, scope: !6284)
!6556 = !DILocation(line: 1828, column: 5, scope: !6291)
!6557 = !DILocation(line: 0, scope: !6291)
!6558 = !DILocation(line: 1828, column: 5, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6291, file: !3650, line: 1828, column: 5)
!6560 = distinct !{!6560, !6552, !6561}
!6561 = !DILocation(line: 1829, column: 4, scope: !6284)
!6562 = !DILocation(line: 1831, column: 4, scope: !6294)
!6563 = !DILocation(line: 0, scope: !6294)
!6564 = !DILocation(line: 1831, column: 4, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6294, file: !3650, line: 1831, column: 4)
!6566 = !DILocation(line: 1835, column: 16, scope: !6187)
!6567 = !DILocation(line: 1835, column: 3, scope: !6187)
!6568 = !DILocation(line: 1836, column: 4, scope: !6296)
!6569 = !DILocation(line: 0, scope: !6296)
!6570 = !DILocation(line: 1836, column: 4, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6296, file: !3650, line: 1836, column: 4)
!6572 = !DILocation(line: 1837, column: 4, scope: !6297)
!6573 = distinct !{!6573, !6567, !6574}
!6574 = !DILocation(line: 1838, column: 3, scope: !6187)
!6575 = !DILocation(line: 1844, column: 1, scope: !6160)
!6576 = distinct !DISubprogram(name: "extract_conversion", scope: !3650, file: !3650, line: 642, type: !6577, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6579)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{!140, !6233, !140}
!6579 = !{!6580, !6581}
!6580 = !DILocalVariable(name: "conv", arg: 1, scope: !6576, file: !3650, line: 642, type: !6233)
!6581 = !DILocalVariable(name: "sp", arg: 2, scope: !6576, file: !3650, line: 643, type: !140)
!6582 = !DILocation(line: 0, scope: !6576)
!6583 = !DILocation(line: 645, column: 10, scope: !6576)
!6584 = !DILocation(line: 653, column: 2, scope: !6576)
!6585 = !DILocation(line: 654, column: 6, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6576, file: !3650, line: 654, column: 6)
!6587 = !DILocation(line: 654, column: 10, scope: !6586)
!6588 = !DILocation(line: 654, column: 6, scope: !6576)
!6589 = !DILocation(line: 655, column: 24, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6586, file: !3650, line: 654, column: 18)
!6591 = !DILocation(line: 655, column: 19, scope: !6590)
!6592 = !DILocation(line: 656, column: 3, scope: !6590)
!6593 = !DILocation(line: 659, column: 7, scope: !6576)
!6594 = !DILocation(line: 660, column: 7, scope: !6576)
!6595 = !DILocation(line: 661, column: 7, scope: !6576)
!6596 = !DILocation(line: 662, column: 7, scope: !6576)
!6597 = !DILocation(line: 663, column: 7, scope: !6576)
!6598 = !DILocation(line: 665, column: 2, scope: !6576)
!6599 = !DILocation(line: 666, column: 1, scope: !6576)
!6600 = distinct !DISubprogram(name: "outs", scope: !3650, file: !3650, line: 1319, type: !6601, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6603)
!6601 = !DISubroutineType(types: !6602)
!6602 = !{!125, !5353, !124, !140, !140}
!6603 = !{!6604, !6605, !6606, !6607, !6608, !6609}
!6604 = !DILocalVariable(name: "out", arg: 1, scope: !6600, file: !3650, line: 1319, type: !5353)
!6605 = !DILocalVariable(name: "ctx", arg: 2, scope: !6600, file: !3650, line: 1320, type: !124)
!6606 = !DILocalVariable(name: "sp", arg: 3, scope: !6600, file: !3650, line: 1321, type: !140)
!6607 = !DILocalVariable(name: "ep", arg: 4, scope: !6600, file: !3650, line: 1322, type: !140)
!6608 = !DILocalVariable(name: "count", scope: !6600, file: !3650, line: 1324, type: !272)
!6609 = !DILocalVariable(name: "rc", scope: !6610, file: !3650, line: 1327, type: !125)
!6610 = distinct !DILexicalBlock(scope: !6600, file: !3650, line: 1326, column: 45)
!6611 = !DILocation(line: 0, scope: !6600)
!6612 = !DILocation(line: 1326, column: 2, scope: !6600)
!6613 = !DILocation(line: 1324, column: 9, scope: !6600)
!6614 = !DILocation(line: 1326, column: 13, scope: !6600)
!6615 = !DILocation(line: 1326, column: 19, scope: !6600)
!6616 = !DILocation(line: 1327, column: 21, scope: !6610)
!6617 = !DILocation(line: 1326, column: 36, scope: !6600)
!6618 = !DILocation(line: 1326, column: 39, scope: !6600)
!6619 = !DILocation(line: 1327, column: 24, scope: !6610)
!6620 = !DILocation(line: 1327, column: 16, scope: !6610)
!6621 = !DILocation(line: 1327, column: 12, scope: !6610)
!6622 = !DILocation(line: 0, scope: !6610)
!6623 = !DILocation(line: 1329, column: 10, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6610, file: !3650, line: 1329, column: 7)
!6625 = !DILocation(line: 1329, column: 7, scope: !6610)
!6626 = distinct !{!6626, !6612, !6627}
!6627 = !DILocation(line: 1333, column: 2, scope: !6600)
!6628 = !DILocation(line: 1336, column: 1, scope: !6600)
!6629 = distinct !DISubprogram(name: "encode_uint", scope: !3650, file: !3650, line: 788, type: !6630, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6632)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!393, !3672, !6233, !393, !140}
!6632 = !{!6633, !6634, !6635, !6636, !6637, !6638, !6640, !6641}
!6633 = !DILocalVariable(name: "value", arg: 1, scope: !6629, file: !3650, line: 788, type: !3672)
!6634 = !DILocalVariable(name: "conv", arg: 2, scope: !6629, file: !3650, line: 789, type: !6233)
!6635 = !DILocalVariable(name: "bps", arg: 3, scope: !6629, file: !3650, line: 790, type: !393)
!6636 = !DILocalVariable(name: "bpe", arg: 4, scope: !6629, file: !3650, line: 791, type: !140)
!6637 = !DILocalVariable(name: "upcase", scope: !6629, file: !3650, line: 793, type: !153)
!6638 = !DILocalVariable(name: "radix", scope: !6629, file: !3650, line: 794, type: !6639)
!6639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6640 = !DILocalVariable(name: "bp", scope: !6629, file: !3650, line: 795, type: !393)
!6641 = !DILocalVariable(name: "lsv", scope: !6642, file: !3650, line: 798, type: !32)
!6642 = distinct !DILexicalBlock(scope: !6629, file: !3650, line: 797, column: 5)
!6643 = !DILocation(line: 0, scope: !6629)
!6644 = !DILocation(line: 793, column: 35, scope: !6629)
!6645 = !DILocation(line: 793, column: 24, scope: !6629)
!6646 = !DILocation(line: 793, column: 16, scope: !6629)
!6647 = !DILocation(line: 794, column: 29, scope: !6629)
!6648 = !DILocation(line: 795, column: 24, scope: !6629)
!6649 = !DILocation(line: 795, column: 17, scope: !6629)
!6650 = !DILocation(line: 797, column: 2, scope: !6629)
!6651 = !DILocation(line: 802, column: 9, scope: !6642)
!6652 = !DILocation(line: 798, column: 22, scope: !6642)
!6653 = !DILocation(line: 0, scope: !6642)
!6654 = !DILocation(line: 800, column: 16, scope: !6642)
!6655 = !DILocation(line: 800, column: 11, scope: !6642)
!6656 = !DILocation(line: 800, column: 4, scope: !6642)
!6657 = !DILocation(line: 800, column: 9, scope: !6642)
!6658 = !DILocation(line: 803, column: 18, scope: !6629)
!6659 = !DILocation(line: 803, column: 24, scope: !6629)
!6660 = !DILocation(line: 803, column: 2, scope: !6642)
!6661 = distinct !{!6661, !6650, !6662}
!6662 = !DILocation(line: 803, column: 37, scope: !6629)
!6663 = !DILocation(line: 808, column: 12, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6629, file: !3650, line: 808, column: 6)
!6665 = !DILocation(line: 808, column: 6, scope: !6629)
!6666 = !DILocation(line: 809, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6664, file: !3650, line: 808, column: 23)
!6668 = !DILocation(line: 813, column: 3, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !3650, line: 811, column: 27)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !3650, line: 811, column: 14)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !3650, line: 809, column: 7)
!6672 = !DILocation(line: 0, scope: !6671)
!6673 = !DILocation(line: 818, column: 2, scope: !6629)
!6674 = distinct !DISubprogram(name: "store_count", scope: !3650, file: !3650, line: 1280, type: !6675, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6679)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{null, !6677, !124, !125}
!6677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6678, size: 32)
!6678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6200)
!6679 = !{!6680, !6681, !6682}
!6680 = !DILocalVariable(name: "conv", arg: 1, scope: !6674, file: !3650, line: 1280, type: !6677)
!6681 = !DILocalVariable(name: "dp", arg: 2, scope: !6674, file: !3650, line: 1281, type: !124)
!6682 = !DILocalVariable(name: "count", arg: 3, scope: !6674, file: !3650, line: 1282, type: !125)
!6683 = !DILocation(line: 0, scope: !6674)
!6684 = !DILocation(line: 1284, column: 38, scope: !6674)
!6685 = !DILocation(line: 1284, column: 2, scope: !6674)
!6686 = !DILocation(line: 1286, column: 4, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6674, file: !3650, line: 1284, column: 50)
!6688 = !DILocation(line: 1286, column: 14, scope: !6687)
!6689 = !DILocation(line: 1287, column: 3, scope: !6687)
!6690 = !DILocation(line: 1289, column: 24, scope: !6687)
!6691 = !DILocation(line: 1289, column: 22, scope: !6687)
!6692 = !DILocation(line: 1290, column: 3, scope: !6687)
!6693 = !DILocation(line: 1292, column: 18, scope: !6687)
!6694 = !DILocation(line: 1292, column: 4, scope: !6687)
!6695 = !DILocation(line: 1292, column: 16, scope: !6687)
!6696 = !DILocation(line: 1293, column: 3, scope: !6687)
!6697 = !DILocation(line: 1295, column: 4, scope: !6687)
!6698 = !DILocation(line: 1295, column: 15, scope: !6687)
!6699 = !DILocation(line: 1296, column: 3, scope: !6687)
!6700 = !DILocation(line: 1298, column: 22, scope: !6687)
!6701 = !DILocation(line: 1298, column: 4, scope: !6687)
!6702 = !DILocation(line: 1298, column: 20, scope: !6687)
!6703 = !DILocation(line: 1299, column: 3, scope: !6687)
!6704 = !DILocation(line: 1301, column: 21, scope: !6687)
!6705 = !DILocation(line: 1301, column: 4, scope: !6687)
!6706 = !DILocation(line: 1301, column: 19, scope: !6687)
!6707 = !DILocation(line: 1302, column: 3, scope: !6687)
!6708 = !DILocation(line: 1304, column: 4, scope: !6687)
!6709 = !DILocation(line: 1304, column: 17, scope: !6687)
!6710 = !DILocation(line: 1305, column: 3, scope: !6687)
!6711 = !DILocation(line: 1307, column: 4, scope: !6687)
!6712 = !DILocation(line: 1307, column: 20, scope: !6687)
!6713 = !DILocation(line: 1308, column: 3, scope: !6687)
!6714 = !DILocation(line: 1316, column: 1, scope: !6674)
!6715 = distinct !DISubprogram(name: "isupper", scope: !6716, file: !6716, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6717)
!6716 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6717 = !{!6718}
!6718 = !DILocalVariable(name: "a", arg: 1, scope: !6715, file: !6716, line: 16, type: !125)
!6719 = !DILocation(line: 0, scope: !6715)
!6720 = !DILocation(line: 18, column: 29, scope: !6715)
!6721 = !DILocation(line: 18, column: 45, scope: !6715)
!6722 = !DILocation(line: 18, column: 2, scope: !6715)
!6723 = distinct !DISubprogram(name: "conversion_radix", scope: !3650, file: !3650, line: 761, type: !6724, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6726)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{!272, !142}
!6726 = !{!6727}
!6727 = !DILocalVariable(name: "specifier", arg: 1, scope: !6723, file: !3650, line: 761, type: !142)
!6728 = !DILocation(line: 0, scope: !6723)
!6729 = !DILocation(line: 763, column: 2, scope: !6723)
!6730 = !DILocation(line: 770, column: 3, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6723, file: !3650, line: 763, column: 21)
!6732 = !DILocation(line: 774, column: 3, scope: !6731)
!6733 = !DILocation(line: 0, scope: !6731)
!6734 = !DILocation(line: 776, column: 1, scope: !6723)
!6735 = distinct !DISubprogram(name: "extract_flags", scope: !3650, file: !3650, line: 339, type: !6577, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6736)
!6736 = !{!6737, !6738, !6739}
!6737 = !DILocalVariable(name: "conv", arg: 1, scope: !6735, file: !3650, line: 339, type: !6233)
!6738 = !DILocalVariable(name: "sp", arg: 2, scope: !6735, file: !3650, line: 340, type: !140)
!6739 = !DILocalVariable(name: "loop", scope: !6735, file: !3650, line: 342, type: !153)
!6740 = !DILocation(line: 0, scope: !6735)
!6741 = !DILocation(line: 344, column: 2, scope: !6735)
!6742 = !DILocation(line: 345, column: 11, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6735, file: !3650, line: 344, column: 5)
!6744 = !DILocation(line: 345, column: 3, scope: !6743)
!6745 = !DILocation(line: 351, column: 4, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6743, file: !3650, line: 345, column: 16)
!6747 = !DILocation(line: 354, column: 4, scope: !6746)
!6748 = !DILocation(line: 357, column: 4, scope: !6746)
!6749 = !DILocation(line: 360, column: 4, scope: !6746)
!6750 = !DILocation(line: 0, scope: !6746)
!6751 = !DILocation(line: 370, column: 12, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6735, file: !3650, line: 370, column: 6)
!6753 = !DILocation(line: 370, column: 22, scope: !6752)
!6754 = !DILocation(line: 371, column: 19, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6752, file: !3650, line: 370, column: 42)
!6756 = !DILocation(line: 372, column: 2, scope: !6755)
!6757 = !DILocation(line: 376, column: 2, scope: !6735)
!6758 = distinct !DISubprogram(name: "extract_width", scope: !3650, file: !3650, line: 388, type: !6577, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6759)
!6759 = !{!6760, !6761, !6762, !6763}
!6760 = !DILocalVariable(name: "conv", arg: 1, scope: !6758, file: !3650, line: 388, type: !6233)
!6761 = !DILocalVariable(name: "sp", arg: 2, scope: !6758, file: !3650, line: 389, type: !140)
!6762 = !DILocalVariable(name: "wp", scope: !6758, file: !3650, line: 398, type: !140)
!6763 = !DILocalVariable(name: "width", scope: !6758, file: !3650, line: 399, type: !272)
!6764 = !DILocation(line: 0, scope: !6758)
!6765 = !DILocation(line: 391, column: 8, scope: !6758)
!6766 = !DILocation(line: 391, column: 22, scope: !6758)
!6767 = !DILocation(line: 393, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6758, file: !3650, line: 393, column: 6)
!6769 = !DILocation(line: 393, column: 10, scope: !6768)
!6770 = !DILocation(line: 393, column: 6, scope: !6758)
!6771 = !DILocation(line: 394, column: 20, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6768, file: !3650, line: 393, column: 18)
!6773 = !DILocation(line: 395, column: 10, scope: !6772)
!6774 = !DILocation(line: 395, column: 3, scope: !6772)
!6775 = !DILocation(line: 399, column: 17, scope: !6758)
!6776 = !DILocation(line: 401, column: 6, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6758, file: !3650, line: 401, column: 6)
!6778 = !DILocation(line: 401, column: 9, scope: !6777)
!6779 = !DILocation(line: 401, column: 6, scope: !6758)
!6780 = !DILocation(line: 402, column: 23, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6777, file: !3650, line: 401, column: 16)
!6782 = !DILocation(line: 403, column: 9, scope: !6781)
!6783 = !DILocation(line: 403, column: 21, scope: !6781)
!6784 = !DILocation(line: 405, column: 11, scope: !6781)
!6785 = !DILocation(line: 404, column: 21, scope: !6781)
!6786 = !DILocation(line: 406, column: 2, scope: !6781)
!6787 = !DILocation(line: 409, column: 1, scope: !6758)
!6788 = distinct !DISubprogram(name: "extract_prec", scope: !3650, file: !3650, line: 420, type: !6577, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6789)
!6789 = !{!6790, !6791, !6792}
!6790 = !DILocalVariable(name: "conv", arg: 1, scope: !6788, file: !3650, line: 420, type: !6233)
!6791 = !DILocalVariable(name: "sp", arg: 2, scope: !6788, file: !3650, line: 421, type: !140)
!6792 = !DILocalVariable(name: "prec", scope: !6788, file: !3650, line: 435, type: !272)
!6793 = !DILocation(line: 0, scope: !6788)
!6794 = !DILocation(line: 423, column: 24, scope: !6788)
!6795 = !DILocation(line: 423, column: 28, scope: !6788)
!6796 = !DILocation(line: 423, column: 8, scope: !6788)
!6797 = !DILocation(line: 423, column: 21, scope: !6788)
!6798 = !DILocation(line: 425, column: 6, scope: !6788)
!6799 = !DILocation(line: 428, column: 2, scope: !6788)
!6800 = !DILocation(line: 430, column: 6, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6788, file: !3650, line: 430, column: 6)
!6802 = !DILocation(line: 430, column: 10, scope: !6801)
!6803 = !DILocation(line: 430, column: 6, scope: !6788)
!6804 = !DILocation(line: 431, column: 19, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6801, file: !3650, line: 430, column: 18)
!6806 = !DILocation(line: 432, column: 10, scope: !6805)
!6807 = !DILocation(line: 432, column: 3, scope: !6805)
!6808 = !DILocation(line: 435, column: 16, scope: !6788)
!6809 = !DILocation(line: 437, column: 8, scope: !6788)
!6810 = !DILocation(line: 437, column: 19, scope: !6788)
!6811 = !DILocation(line: 439, column: 10, scope: !6788)
!6812 = !DILocation(line: 438, column: 20, scope: !6788)
!6813 = !DILocation(line: 441, column: 9, scope: !6788)
!6814 = !DILocation(line: 442, column: 1, scope: !6788)
!6815 = distinct !DISubprogram(name: "extract_length", scope: !3650, file: !3650, line: 453, type: !6577, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6816)
!6816 = !{!6817, !6818}
!6817 = !DILocalVariable(name: "conv", arg: 1, scope: !6815, file: !3650, line: 453, type: !6233)
!6818 = !DILocalVariable(name: "sp", arg: 2, scope: !6815, file: !3650, line: 454, type: !140)
!6819 = !DILocation(line: 0, scope: !6815)
!6820 = !DILocation(line: 456, column: 10, scope: !6815)
!6821 = !DILocation(line: 456, column: 2, scope: !6815)
!6822 = !DILocation(line: 458, column: 8, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3650, line: 458, column: 7)
!6824 = distinct !DILexicalBlock(scope: !6815, file: !3650, line: 456, column: 15)
!6825 = !DILocation(line: 458, column: 7, scope: !6823)
!6826 = !DILocation(line: 458, column: 13, scope: !6823)
!6827 = !DILocation(line: 0, scope: !6823)
!6828 = !DILocation(line: 458, column: 7, scope: !6824)
!6829 = !DILocation(line: 459, column: 21, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6823, file: !3650, line: 458, column: 21)
!6831 = !DILocation(line: 460, column: 4, scope: !6830)
!6832 = !DILocation(line: 461, column: 3, scope: !6830)
!6833 = !DILocation(line: 462, column: 21, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6823, file: !3650, line: 461, column: 10)
!6835 = !DILocation(line: 466, column: 8, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6824, file: !3650, line: 466, column: 7)
!6837 = !DILocation(line: 466, column: 7, scope: !6836)
!6838 = !DILocation(line: 466, column: 13, scope: !6836)
!6839 = !DILocation(line: 0, scope: !6836)
!6840 = !DILocation(line: 466, column: 7, scope: !6824)
!6841 = !DILocation(line: 467, column: 21, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6836, file: !3650, line: 466, column: 21)
!6843 = !DILocation(line: 468, column: 4, scope: !6842)
!6844 = !DILocation(line: 469, column: 3, scope: !6842)
!6845 = !DILocation(line: 470, column: 21, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6836, file: !3650, line: 469, column: 10)
!6847 = !DILocation(line: 474, column: 9, scope: !6824)
!6848 = !DILocation(line: 474, column: 20, scope: !6824)
!6849 = !DILocation(line: 475, column: 3, scope: !6824)
!6850 = !DILocation(line: 476, column: 3, scope: !6824)
!6851 = !DILocation(line: 478, column: 9, scope: !6824)
!6852 = !DILocation(line: 478, column: 20, scope: !6824)
!6853 = !DILocation(line: 479, column: 3, scope: !6824)
!6854 = !DILocation(line: 480, column: 3, scope: !6824)
!6855 = !DILocation(line: 482, column: 9, scope: !6824)
!6856 = !DILocation(line: 482, column: 20, scope: !6824)
!6857 = !DILocation(line: 483, column: 3, scope: !6824)
!6858 = !DILocation(line: 484, column: 3, scope: !6824)
!6859 = !DILocation(line: 486, column: 9, scope: !6824)
!6860 = !DILocation(line: 486, column: 20, scope: !6824)
!6861 = !DILocation(line: 487, column: 3, scope: !6824)
!6862 = !DILocation(line: 492, column: 21, scope: !6824)
!6863 = !DILocation(line: 493, column: 3, scope: !6824)
!6864 = !DILocation(line: 495, column: 9, scope: !6824)
!6865 = !DILocation(line: 495, column: 20, scope: !6824)
!6866 = !DILocation(line: 496, column: 3, scope: !6824)
!6867 = !DILocation(line: 498, column: 2, scope: !6815)
!6868 = distinct !DISubprogram(name: "extract_specifier", scope: !3650, file: !3650, line: 513, type: !6577, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6869)
!6869 = !{!6870, !6871, !6872, !6873}
!6870 = !DILocalVariable(name: "conv", arg: 1, scope: !6868, file: !3650, line: 513, type: !6233)
!6871 = !DILocalVariable(name: "sp", arg: 2, scope: !6868, file: !3650, line: 514, type: !140)
!6872 = !DILocalVariable(name: "unsupported", scope: !6868, file: !3650, line: 516, type: !153)
!6873 = !DILabel(scope: !6874, name: "int_conv", file: !3650, line: 526)
!6874 = distinct !DILexicalBlock(scope: !6868, file: !3650, line: 520, column: 27)
!6875 = !DILocation(line: 0, scope: !6868)
!6876 = !DILocation(line: 518, column: 20, scope: !6868)
!6877 = !DILocation(line: 518, column: 8, scope: !6868)
!6878 = !DILocation(line: 518, column: 18, scope: !6868)
!6879 = !DILocation(line: 520, column: 2, scope: !6868)
!6880 = !DILocation(line: 525, column: 3, scope: !6874)
!6881 = !DILocation(line: 0, scope: !6874)
!6882 = !DILocation(line: 526, column: 1, scope: !6874)
!6883 = !DILocation(line: 528, column: 24, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6874, file: !3650, line: 528, column: 7)
!6885 = !DILocation(line: 528, column: 7, scope: !6874)
!6886 = !DILocation(line: 535, column: 23, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6874, file: !3650, line: 535, column: 7)
!6888 = !DILocation(line: 535, column: 7, scope: !6874)
!6889 = !DILocation(line: 536, column: 36, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6887, file: !3650, line: 535, column: 31)
!6891 = !DILocation(line: 537, column: 3, scope: !6890)
!6892 = !DILocation(line: 570, column: 9, scope: !6874)
!6893 = !DILocation(line: 570, column: 23, scope: !6874)
!6894 = !DILocation(line: 575, column: 4, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !3650, line: 573, column: 48)
!6896 = distinct !DILexicalBlock(scope: !6874, file: !3650, line: 573, column: 7)
!6897 = !DILocation(line: 603, column: 9, scope: !6874)
!6898 = !DILocation(line: 603, column: 23, scope: !6874)
!6899 = !DILocation(line: 605, column: 24, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6874, file: !3650, line: 605, column: 7)
!6901 = !DILocation(line: 605, column: 7, scope: !6874)
!6902 = !DILocation(line: 612, column: 9, scope: !6874)
!6903 = !DILocation(line: 612, column: 23, scope: !6874)
!6904 = !DILocation(line: 619, column: 24, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6874, file: !3650, line: 619, column: 7)
!6906 = !DILocation(line: 619, column: 7, scope: !6874)
!6907 = !DILocation(line: 625, column: 9, scope: !6874)
!6908 = !DILocation(line: 625, column: 17, scope: !6874)
!6909 = !DILocation(line: 626, column: 3, scope: !6874)
!6910 = !DILocation(line: 629, column: 20, scope: !6868)
!6911 = !DILocation(line: 629, column: 8, scope: !6868)
!6912 = !DILocation(line: 518, column: 23, scope: !6868)
!6913 = !DILocation(line: 631, column: 2, scope: !6868)
!6914 = distinct !DISubprogram(name: "extract_decimal", scope: !3650, file: !3650, line: 318, type: !6915, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6917)
!6915 = !DISubroutineType(types: !6916)
!6916 = !{!272, !386}
!6917 = !{!6918, !6919, !6920}
!6918 = !DILocalVariable(name: "str", arg: 1, scope: !6914, file: !3650, line: 318, type: !386)
!6919 = !DILocalVariable(name: "sp", scope: !6914, file: !3650, line: 320, type: !140)
!6920 = !DILocalVariable(name: "val", scope: !6914, file: !3650, line: 321, type: !272)
!6921 = !DILocation(line: 0, scope: !6914)
!6922 = !DILocation(line: 320, column: 19, scope: !6914)
!6923 = !DILocation(line: 323, column: 37, scope: !6914)
!6924 = !DILocation(line: 323, column: 17, scope: !6914)
!6925 = !DILocation(line: 323, column: 9, scope: !6914)
!6926 = !DILocation(line: 323, column: 2, scope: !6914)
!6927 = !DILocation(line: 324, column: 13, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6914, file: !3650, line: 323, column: 43)
!6929 = !DILocation(line: 324, column: 24, scope: !6928)
!6930 = !DILocation(line: 324, column: 19, scope: !6928)
!6931 = !DILocation(line: 324, column: 27, scope: !6928)
!6932 = distinct !{!6932, !6926, !6933}
!6933 = !DILocation(line: 325, column: 2, scope: !6914)
!6934 = !DILocation(line: 326, column: 7, scope: !6914)
!6935 = !DILocation(line: 327, column: 2, scope: !6914)
!6936 = distinct !DISubprogram(name: "isdigit", scope: !6716, file: !6716, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3646, retainedNodes: !6937)
!6937 = !{!6938}
!6938 = !DILocalVariable(name: "a", arg: 1, scope: !6936, file: !6716, line: 43, type: !125)
!6939 = !DILocation(line: 0, scope: !6936)
!6940 = !DILocation(line: 45, column: 29, scope: !6936)
!6941 = !DILocation(line: 45, column: 45, scope: !6936)
!6942 = !DILocation(line: 45, column: 2, scope: !6936)
!6943 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6944, file: !6944, line: 9, type: !4072, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3680, retainedNodes: !1126)
!6944 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!6945 = !DILocation(line: 11, column: 1, scope: !6943)
!6946 = !{i64 2147562928, i64 2147562971, i64 2147563011}
!6947 = !DILocation(line: 12, column: 1, scope: !6943)
!6948 = !{i64 2147567206, i64 2147567249, i64 2147567289}
!6949 = !DILocation(line: 13, column: 1, scope: !6943)
!6950 = !{i64 2147567375, i64 2147567418, i64 2147567458}
!6951 = !DILocation(line: 14, column: 1, scope: !6943)
!6952 = !{i64 2147567559, i64 2147567602, i64 2147567642}
!6953 = !DILocation(line: 15, column: 1, scope: !6943)
!6954 = !{i64 2147567739, i64 2147567782, i64 2147567822}
!6955 = !DILocation(line: 16, column: 1, scope: !6943)
!6956 = !{i64 2147567982, i64 2147568025, i64 2147568065}
!6957 = !DILocation(line: 17, column: 1, scope: !6943)
!6958 = !{i64 2147568168, i64 2147568211, i64 2147568251}
!6959 = !DILocation(line: 18, column: 1, scope: !6943)
!6960 = !{i64 2147568378, i64 2147568421, i64 2147568461}
!6961 = !DILocation(line: 19, column: 1, scope: !6943)
!6962 = !{i64 2147568581, i64 2147568624, i64 2147568664}
!6963 = !DILocation(line: 20, column: 1, scope: !6943)
!6964 = !{i64 2147568784, i64 2147568827, i64 2147568867}
!6965 = !DILocation(line: 21, column: 1, scope: !6943)
!6966 = !{i64 2147568983, i64 2147569026, i64 2147569066}
!6967 = !DILocation(line: 22, column: 1, scope: !6943)
!6968 = !{i64 2147569158, i64 2147569201, i64 2147569241}
!6969 = !DILocation(line: 23, column: 1, scope: !6943)
!6970 = !{i64 2147569366, i64 2147569409, i64 2147569449}
!6971 = !DILocation(line: 24, column: 1, scope: !6943)
!6972 = !{i64 2147569570, i64 2147569613, i64 2147569653}
!6973 = !DILocation(line: 25, column: 1, scope: !6943)
!6974 = !{i64 2147569772, i64 2147569815, i64 2147569855}
!6975 = !DILocation(line: 26, column: 1, scope: !6943)
!6976 = !{i64 2147569971, i64 2147570014, i64 2147570054}
!6977 = !DILocation(line: 27, column: 1, scope: !6943)
!6978 = !{i64 2147570198, i64 2147570241, i64 2147570281}
!6979 = !DILocation(line: 28, column: 1, scope: !6943)
!6980 = !{i64 2147570413, i64 2147570456, i64 2147570496}
!6981 = !DILocation(line: 29, column: 1, scope: !6943)
!6982 = !{i64 2147570594, i64 2147570637, i64 2147570677}
!6983 = !DILocation(line: 30, column: 1, scope: !6943)
!6984 = !{i64 2147570766, i64 2147570809, i64 2147570849}
!6985 = !DILocation(line: 31, column: 1, scope: !6943)
!6986 = !{i64 2147570968, i64 2147571011, i64 2147571051}
!6987 = !DILocation(line: 32, column: 1, scope: !6943)
!6988 = !{i64 2147571167, i64 2147571210, i64 2147571250}
!6989 = !DILocation(line: 33, column: 1, scope: !6943)
!6990 = !{i64 2147571342, i64 2147571385, i64 2147571425}
!6991 = !DILocation(line: 34, column: 1, scope: !6943)
!6992 = !{i64 2147571583, i64 2147571626, i64 2147571666}
!6993 = !DILocation(line: 35, column: 1, scope: !6943)
!6994 = !{i64 2147571836, i64 2147571879, i64 2147571919}
!6995 = !DILocation(line: 36, column: 1, scope: !6943)
!6996 = !{i64 2147572077, i64 2147572120, i64 2147572160}
!6997 = !DILocation(line: 37, column: 1, scope: !6943)
!6998 = !{i64 2147572312, i64 2147572355, i64 2147572395}
!6999 = !DILocation(line: 38, column: 1, scope: !6943)
!7000 = !{i64 2147572553, i64 2147572596, i64 2147572636}
!7001 = !DILocation(line: 39, column: 1, scope: !6943)
!7002 = !{i64 2147572794, i64 2147572837, i64 2147572877}
!7003 = !DILocation(line: 40, column: 1, scope: !6943)
!7004 = !{i64 2147573038, i64 2147573081, i64 2147573121}
!7005 = !DILocation(line: 41, column: 1, scope: !6943)
!7006 = !{i64 2147573279, i64 2147573322, i64 2147573362}
!7007 = !DILocation(line: 42, column: 1, scope: !6943)
!7008 = !{i64 2147573523, i64 2147573566, i64 2147573606}
!7009 = !DILocation(line: 43, column: 1, scope: !6943)
!7010 = !{i64 2147573761, i64 2147573804, i64 2147573844}
!7011 = !DILocation(line: 44, column: 1, scope: !6943)
!7012 = !{i64 2147574014, i64 2147574057, i64 2147574097}
!7013 = !DILocation(line: 45, column: 1, scope: !6943)
!7014 = !{i64 2147574267, i64 2147574310, i64 2147574350}
!7015 = !DILocation(line: 46, column: 1, scope: !6943)
!7016 = !{i64 2147574517, i64 2147574560, i64 2147574600}
!7017 = !DILocation(line: 47, column: 1, scope: !6943)
!7018 = !{i64 2147574758, i64 2147574801, i64 2147574841}
!7019 = !DILocation(line: 48, column: 1, scope: !6943)
!7020 = !{i64 2147575002, i64 2147575045, i64 2147575085}
!7021 = !DILocation(line: 49, column: 1, scope: !6943)
!7022 = !{i64 2147575255, i64 2147575298, i64 2147575338}
!7023 = !DILocation(line: 50, column: 1, scope: !6943)
!7024 = !{i64 2147575499, i64 2147575542, i64 2147575582}
!7025 = !DILocation(line: 51, column: 1, scope: !6943)
!7026 = !{i64 2147579801, i64 2147579844, i64 2147579884}
!7027 = !DILocation(line: 52, column: 1, scope: !6943)
!7028 = !{i64 2147580057, i64 2147580100, i64 2147580140}
!7029 = !DILocation(line: 53, column: 1, scope: !6943)
!7030 = !{i64 2147580307, i64 2147580350, i64 2147580390}
!7031 = !DILocation(line: 54, column: 1, scope: !6943)
!7032 = !{i64 2147580557, i64 2147580600, i64 2147580640}
!7033 = !DILocation(line: 55, column: 1, scope: !6943)
!7034 = !{i64 2147580804, i64 2147580847, i64 2147580887}
!7035 = !DILocation(line: 56, column: 1, scope: !6943)
!7036 = !{i64 2147581030, i64 2147581073, i64 2147581113}
!7037 = !DILocation(line: 57, column: 1, scope: !6943)
!7038 = !{i64 2147581256, i64 2147581299, i64 2147581339}
!7039 = !DILocation(line: 58, column: 1, scope: !6943)
!7040 = !{i64 2147581479, i64 2147581522, i64 2147581562}
!7041 = !DILocation(line: 59, column: 1, scope: !6943)
!7042 = !{i64 2147581714, i64 2147581757, i64 2147581797}
!7043 = !DILocation(line: 60, column: 1, scope: !6943)
!7044 = !{i64 2147581943, i64 2147581986, i64 2147582026}
!7045 = !DILocation(line: 61, column: 1, scope: !6943)
!7046 = !{i64 2147582151, i64 2147582194, i64 2147582234}
!7047 = !DILocation(line: 62, column: 1, scope: !6943)
!7048 = !{i64 2147582362, i64 2147582405, i64 2147582445}
!7049 = !DILocation(line: 63, column: 1, scope: !6943)
!7050 = !{i64 2147582597, i64 2147582640, i64 2147582680}
!7051 = !DILocation(line: 64, column: 1, scope: !6943)
!7052 = !{i64 2147582826, i64 2147582869, i64 2147582909}
!7053 = !DILocation(line: 65, column: 1, scope: !6943)
!7054 = !{i64 2147583043, i64 2147583086, i64 2147583126}
!7055 = !DILocation(line: 66, column: 1, scope: !6943)
!7056 = !{i64 2147583272, i64 2147583315, i64 2147583355}
!7057 = !DILocation(line: 67, column: 1, scope: !6943)
!7058 = !{i64 2147583510, i64 2147583553, i64 2147583593}
!7059 = !DILocation(line: 68, column: 1, scope: !6943)
!7060 = !{i64 2147583742, i64 2147583785, i64 2147583825}
!7061 = !DILocation(line: 69, column: 1, scope: !6943)
!7062 = !{i64 2147583968, i64 2147584011, i64 2147584051}
!7063 = !DILocation(line: 70, column: 1, scope: !6943)
!7064 = !{i64 2147584185, i64 2147584228, i64 2147584268}
!7065 = !DILocation(line: 71, column: 1, scope: !6943)
!7066 = !{i64 2147584417, i64 2147584460, i64 2147584500}
!7067 = !DILocation(line: 72, column: 1, scope: !6943)
!7068 = !{i64 2147584643, i64 2147584686, i64 2147584726}
!7069 = !DILocation(line: 73, column: 1, scope: !6943)
!7070 = !{i64 2147584857, i64 2147584900, i64 2147584940}
!7071 = !DILocation(line: 74, column: 1, scope: !6943)
!7072 = !{i64 2147585077, i64 2147585120, i64 2147585160}
!7073 = !DILocation(line: 75, column: 1, scope: !6943)
!7074 = !{i64 2147585309, i64 2147585352, i64 2147585392}
!7075 = !DILocation(line: 76, column: 1, scope: !6943)
!7076 = !{i64 2147585517, i64 2147585560, i64 2147585600}
!7077 = !DILocation(line: 77, column: 1, scope: !6943)
!7078 = !{i64 2147585722, i64 2147585765, i64 2147585805}
!7079 = !DILocation(line: 78, column: 1, scope: !6943)
!7080 = !{i64 2147585939, i64 2147585982, i64 2147586022}
!7081 = !DILocation(line: 79, column: 1, scope: !6943)
!7082 = !{i64 2147586153, i64 2147586196, i64 2147586236}
!7083 = !DILocation(line: 80, column: 1, scope: !6943)
!7084 = !{i64 2147586379, i64 2147586422, i64 2147586462}
!7085 = !DILocation(line: 81, column: 1, scope: !6943)
!7086 = !{i64 2147586599, i64 2147586642, i64 2147586682}
!7087 = !DILocation(line: 82, column: 1, scope: !6943)
!7088 = !{i64 2147586804, i64 2147586847, i64 2147586887}
!7089 = !DILocation(line: 83, column: 1, scope: !6943)
!7090 = !{i64 2147587036, i64 2147587079, i64 2147587119}
!7091 = !DILocation(line: 84, column: 1, scope: !6943)
!7092 = !{i64 2147587271, i64 2147587314, i64 2147587354}
!7093 = !DILocation(line: 85, column: 1, scope: !6943)
!7094 = !{i64 2147587521, i64 2147587564, i64 2147587604}
!7095 = !DILocation(line: 86, column: 1, scope: !6943)
!7096 = !{i64 2147587771, i64 2147587814, i64 2147587854}
!7097 = !DILocation(line: 87, column: 1, scope: !6943)
!7098 = !{i64 2147592070, i64 2147592113, i64 2147592153}
!7099 = !DILocation(line: 88, column: 1, scope: !6943)
!7100 = !{i64 2147592281, i64 2147592324, i64 2147592364}
!7101 = !DILocation(line: 89, column: 1, scope: !6943)
!7102 = !{i64 2147592498, i64 2147592541, i64 2147592581}
!7103 = !DILocation(line: 90, column: 1, scope: !6943)
!7104 = !{i64 2147592661, i64 2147592704, i64 2147592744}
!7105 = !DILocation(line: 91, column: 1, scope: !6943)
!7106 = !{i64 2147592857, i64 2147592900, i64 2147592940}
!7107 = !DILocation(line: 92, column: 1, scope: !6943)
!7108 = !{i64 2147593059, i64 2147593102, i64 2147593142}
!7109 = !DILocation(line: 93, column: 1, scope: !6943)
!7110 = !{i64 2147593252, i64 2147593295, i64 2147593335}
!7111 = !DILocation(line: 94, column: 1, scope: !6943)
!7112 = !{i64 2147593457, i64 2147593500, i64 2147593540}
!7113 = !DILocation(line: 95, column: 1, scope: !6943)
!7114 = !{i64 2147593662, i64 2147593705, i64 2147593745}
!7115 = !DILocation(line: 96, column: 1, scope: !6943)
!7116 = !{i64 2147593867, i64 2147593910, i64 2147593950}
!7117 = !DILocation(line: 97, column: 1, scope: !6943)
!7118 = !{i64 2147594075, i64 2147594118, i64 2147594158}
!7119 = !DILocation(line: 98, column: 1, scope: !6943)
!7120 = !{i64 2147594271, i64 2147594314, i64 2147594354}
!7121 = !DILocation(line: 99, column: 1, scope: !6943)
!7122 = !{i64 2147594530, i64 2147594573, i64 2147594613}
!7123 = !DILocation(line: 100, column: 1, scope: !6943)
!7124 = !{i64 2147594735, i64 2147594778, i64 2147594818}
!7125 = !DILocation(line: 101, column: 1, scope: !6943)
!7126 = !{i64 2147594934, i64 2147594977, i64 2147595017}
!7127 = !DILocation(line: 102, column: 1, scope: !6943)
!7128 = !{i64 2147595118, i64 2147595161, i64 2147595201}
!7129 = !DILocation(line: 103, column: 1, scope: !6943)
!7130 = !{i64 2147595317, i64 2147595360, i64 2147595400}
!7131 = !DILocation(line: 104, column: 1, scope: !6943)
!7132 = !{i64 2147595573, i64 2147595616, i64 2147595656}
!7133 = !DILocation(line: 105, column: 1, scope: !6943)
!7134 = !{i64 2147595805, i64 2147595848, i64 2147595888}
!7135 = !DILocation(line: 106, column: 1, scope: !6943)
!7136 = !{i64 2147596016, i64 2147596059, i64 2147596099}
!7137 = !DILocation(line: 107, column: 1, scope: !6943)
!7138 = !{i64 2147596221, i64 2147596264, i64 2147596304}
!7139 = !DILocation(line: 108, column: 1, scope: !6943)
!7140 = !{i64 2147596414, i64 2147596457, i64 2147596497}
!7141 = !DILocation(line: 109, column: 1, scope: !6943)
!7142 = !{i64 2147596580, i64 2147596623, i64 2147596663}
!7143 = !DILocation(line: 110, column: 1, scope: !6943)
!7144 = !{i64 2147596764, i64 2147596807, i64 2147596847}
!7145 = !DILocation(line: 111, column: 1, scope: !6943)
!7146 = !{i64 2147596954, i64 2147596997, i64 2147597037}
!7147 = !DILocation(line: 112, column: 1, scope: !6943)
!7148 = !{i64 2147597138, i64 2147597181, i64 2147597221}
!7149 = !DILocation(line: 113, column: 1, scope: !6943)
!7150 = !{i64 2147597352, i64 2147597395, i64 2147597435}
!7151 = !DILocation(line: 114, column: 1, scope: !6943)
!7152 = !{i64 2147597563, i64 2147597606, i64 2147597646}
!7153 = !DILocation(line: 115, column: 1, scope: !6943)
!7154 = !{i64 2147597786, i64 2147597829, i64 2147597869}
!7155 = !DILocation(line: 116, column: 1, scope: !6943)
!7156 = !{i64 2147597970, i64 2147598013, i64 2147598053}
!7157 = !DILocation(line: 117, column: 1, scope: !6943)
!7158 = !{i64 2147598136, i64 2147598179, i64 2147598219}
!7159 = !DILocation(line: 118, column: 1, scope: !6943)
!7160 = !{i64 2147598317, i64 2147598360, i64 2147598400}
!7161 = !DILocation(line: 119, column: 1, scope: !6943)
!7162 = !{i64 2147598510, i64 2147598553, i64 2147598593}
!7163 = !DILocation(line: 120, column: 1, scope: !6943)
!7164 = !{i64 2147598736, i64 2147598779, i64 2147598819}
!7165 = !DILocation(line: 121, column: 1, scope: !6943)
!7166 = !{i64 2147598950, i64 2147598993, i64 2147599033}
!7167 = !DILocation(line: 122, column: 1, scope: !6943)
!7168 = !{i64 2147599176, i64 2147599219, i64 2147599259}
!7169 = !DILocation(line: 123, column: 1, scope: !6943)
!7170 = !{i64 2147599393, i64 2147599436, i64 2147599476}
!7171 = !DILocation(line: 124, column: 1, scope: !6943)
!7172 = !{i64 2147599670, i64 2147599713, i64 2147599753}
!7173 = !DILocation(line: 125, column: 1, scope: !6943)
!7174 = !{i64 2147599896, i64 2147599939, i64 2147599979}
!7175 = !DILocation(line: 126, column: 1, scope: !6943)
!7176 = !{i64 2147600104, i64 2147600147, i64 2147600187}
!7177 = !DILocation(line: 127, column: 1, scope: !6943)
!7178 = !{i64 2147600300, i64 2147600343, i64 2147600383}
!7179 = !DILocation(line: 128, column: 1, scope: !6943)
!7180 = !{i64 2147600565, i64 2147600608, i64 2147600648}
!7181 = !DILocation(line: 129, column: 1, scope: !6943)
!7182 = !{i64 2147600779, i64 2147600822, i64 2147600862}
!7183 = !DILocation(line: 130, column: 1, scope: !6943)
!7184 = !{i64 2147600954, i64 2147600997, i64 2147601037}
!7185 = !DILocation(line: 131, column: 1, scope: !6943)
!7186 = !{i64 2147605269, i64 2147605312, i64 2147605352}
!7187 = !DILocation(line: 132, column: 1, scope: !6943)
!7188 = !{i64 2147605511, i64 2147605554, i64 2147605594}
!7189 = !DILocation(line: 133, column: 1, scope: !6943)
!7190 = !{i64 2147605674, i64 2147605717, i64 2147605757}
!7191 = !DILocation(line: 134, column: 1, scope: !6943)
!7192 = !{i64 2147605861, i64 2147605904, i64 2147605944}
!7193 = !DILocation(line: 135, column: 1, scope: !6943)
!7194 = !{i64 2147606069, i64 2147606112, i64 2147606152}
!7195 = !DILocation(line: 136, column: 1, scope: !6943)
!7196 = !{i64 2147606265, i64 2147606308, i64 2147606348}
!7197 = !DILocation(line: 137, column: 1, scope: !6943)
!7198 = !{i64 2147606458, i64 2147606501, i64 2147606541}
!7199 = !DILocation(line: 138, column: 1, scope: !6943)
!7200 = !{i64 2147606641, i64 2147606684, i64 2147606724}
!7201 = !DILocation(line: 139, column: 1, scope: !6943)
!7202 = !{i64 2147606855, i64 2147606898, i64 2147606938}
!7203 = !DILocation(line: 140, column: 1, scope: !6943)
!7204 = !{i64 2147607075, i64 2147607118, i64 2147607158}
!7205 = !DILocation(line: 141, column: 1, scope: !6943)
!7206 = !{i64 2147607282, i64 2147607325, i64 2147607365}
!7207 = !DILocation(line: 142, column: 1, scope: !6943)
!7208 = !{i64 2147607555, i64 2147607598, i64 2147607638}
!7209 = !DILocation(line: 143, column: 1, scope: !6943)
!7210 = !{i64 2147607803, i64 2147607846, i64 2147607886}
!7211 = !DILocation(line: 144, column: 1, scope: !6943)
!7212 = !{i64 2147608002, i64 2147608045, i64 2147608085}
!7213 = !DILocation(line: 145, column: 1, scope: !6943)
!7214 = !{i64 2147608237, i64 2147608280, i64 2147608320}
!7215 = !DILocation(line: 146, column: 1, scope: !6943)
!7216 = !{i64 2147608487, i64 2147608530, i64 2147608570}
!7217 = !DILocation(line: 147, column: 1, scope: !6943)
!7218 = !{i64 2147608689, i64 2147608732, i64 2147608772}
!7219 = !DILocation(line: 148, column: 1, scope: !6943)
!7220 = !{i64 2147608912, i64 2147608955, i64 2147608995}
!7221 = !DILocation(line: 149, column: 1, scope: !6943)
!7222 = !{i64 2147609126, i64 2147609169, i64 2147609209}
!7223 = !DILocation(line: 150, column: 1, scope: !6943)
!7224 = !{i64 2147609370, i64 2147609413, i64 2147609453}
!7225 = !DILocation(line: 151, column: 1, scope: !6943)
!7226 = !{i64 2147609599, i64 2147609642, i64 2147609682}
!7227 = !DILocation(line: 152, column: 1, scope: !6943)
!7228 = !{i64 2147609828, i64 2147609871, i64 2147609911}
!7229 = !DILocation(line: 153, column: 1, scope: !6943)
!7230 = !{i64 2147610036, i64 2147610079, i64 2147610119}
!7231 = !DILocation(line: 154, column: 1, scope: !6943)
!7232 = !{i64 2147610274, i64 2147610317, i64 2147610357}
!7233 = !DILocation(line: 155, column: 1, scope: !6943)
!7234 = !{i64 2147610500, i64 2147610543, i64 2147610583}
!7235 = !DILocation(line: 156, column: 1, scope: !6943)
!7236 = !{i64 2147610759, i64 2147610802, i64 2147610842}
!7237 = !DILocation(line: 157, column: 1, scope: !6943)
!7238 = !{i64 2147610979, i64 2147611022, i64 2147611062}
!7239 = !DILocation(line: 158, column: 1, scope: !6943)
!7240 = !{i64 2147611211, i64 2147611254, i64 2147611294}
!7241 = !DILocation(line: 159, column: 1, scope: !6943)
!7242 = !{i64 2147611452, i64 2147611495, i64 2147611535}
!7243 = !DILocation(line: 160, column: 1, scope: !6943)
!7244 = !{i64 2147611693, i64 2147611736, i64 2147611776}
!7245 = !DILocation(line: 161, column: 1, scope: !6943)
!7246 = !{i64 2147611916, i64 2147611959, i64 2147611999}
!7247 = !DILocation(line: 162, column: 1, scope: !6943)
!7248 = !{i64 2147612133, i64 2147612176, i64 2147612216}
!7249 = !DILocation(line: 163, column: 1, scope: !6943)
!7250 = !{i64 2147612374, i64 2147612417, i64 2147612457}
!7251 = !DILocation(line: 164, column: 1, scope: !6943)
!7252 = !{i64 2147612561, i64 2147612604, i64 2147612644}
!7253 = !DILocation(line: 165, column: 1, scope: !6943)
!7254 = !{i64 2147612748, i64 2147612791, i64 2147612831}
!7255 = !DILocation(line: 166, column: 1, scope: !6943)
!7256 = !{i64 2147612911, i64 2147612954, i64 2147612994}
!7257 = !DILocation(line: 167, column: 1, scope: !6943)
!7258 = !{i64 2147613116, i64 2147613159, i64 2147613199}
!7259 = !DILocation(line: 168, column: 1, scope: !6943)
!7260 = !{i64 2147613309, i64 2147613352, i64 2147613392}
!7261 = !DILocation(line: 169, column: 1, scope: !6943)
!7262 = !{i64 2147613568, i64 2147613611, i64 2147613651}
!7263 = !DILocation(line: 170, column: 1, scope: !6943)
!7264 = !{i64 2147617852, i64 2147617895, i64 2147617935}
!7265 = !DILocation(line: 171, column: 1, scope: !6943)
!7266 = !{i64 2147618081, i64 2147618124, i64 2147618164}
!7267 = !DILocation(line: 172, column: 1, scope: !6943)
!7268 = !{i64 2147618295, i64 2147618338, i64 2147618378}
!7269 = !DILocation(line: 173, column: 1, scope: !6943)
!7270 = !{i64 2147618497, i64 2147618540, i64 2147618580}
!7271 = !DILocation(line: 174, column: 1, scope: !6943)
!7272 = !{i64 2147618693, i64 2147618736, i64 2147618776}
!7273 = !DILocation(line: 175, column: 1, scope: !6943)
!7274 = !{i64 2147618905, i64 2147618948, i64 2147618988}
!7275 = !DILocation(line: 176, column: 1, scope: !6943)
!7276 = !{i64 2147619126, i64 2147619169, i64 2147619209}
!7277 = !DILocation(line: 177, column: 1, scope: !6943)
!7278 = !{i64 2147619340, i64 2147619383, i64 2147619423}
!7279 = !DILocation(line: 178, column: 1, scope: !6943)
!7280 = !{i64 2147619530, i64 2147619573, i64 2147619613}
!7281 = !DILocation(line: 179, column: 1, scope: !6943)
!7282 = !{i64 2147619729, i64 2147619772, i64 2147619812}
!7283 = !DILocation(line: 180, column: 1, scope: !6943)
!7284 = !{i64 2147619934, i64 2147619977, i64 2147620017}
!7285 = !DILocation(line: 181, column: 1, scope: !6943)
!7286 = !{i64 2147620154, i64 2147620197, i64 2147620237}
!7287 = !DILocation(line: 182, column: 1, scope: !6943)
!7288 = !{i64 2147620355, i64 2147620398, i64 2147620438}
!7289 = !DILocation(line: 183, column: 1, scope: !6943)
!7290 = !{i64 2147620554, i64 2147620597, i64 2147620637}
!7291 = !DILocation(line: 184, column: 1, scope: !6943)
!7292 = !{i64 2147620759, i64 2147620802, i64 2147620842}
!7293 = !DILocation(line: 185, column: 1, scope: !6943)
!7294 = !{i64 2147620928, i64 2147620971, i64 2147621011}
!7295 = !DILocation(line: 186, column: 1, scope: !6943)
!7296 = !{i64 2147621112, i64 2147621155, i64 2147621195}
!7297 = !DILocation(line: 187, column: 1, scope: !6943)
!7298 = !{i64 2147621296, i64 2147621339, i64 2147621379}
!7299 = !DILocation(line: 188, column: 1, scope: !6943)
!7300 = !{i64 2147621483, i64 2147621526, i64 2147621566}
!7301 = !DILocation(line: 189, column: 1, scope: !6943)
!7302 = !{i64 2147621667, i64 2147621710, i64 2147621750}
!7303 = !DILocation(line: 190, column: 1, scope: !6943)
!7304 = !{i64 2147621905, i64 2147621948, i64 2147621988}
!7305 = !DILocation(line: 191, column: 1, scope: !6943)
!7306 = !{i64 2147622135, i64 2147622178, i64 2147622218}
!7307 = !DILocation(line: 192, column: 1, scope: !6943)
!7308 = !{i64 2147622364, i64 2147622407, i64 2147622447}
!7309 = !DILocation(line: 193, column: 1, scope: !6943)
!7310 = !{i64 2147622551, i64 2147622594, i64 2147622634}
!7311 = !DILocation(line: 194, column: 1, scope: !6943)
!7312 = !{i64 2147622747, i64 2147622790, i64 2147622830}
!7313 = !DILocation(line: 195, column: 1, scope: !6943)
!7314 = !{i64 2147622955, i64 2147622998, i64 2147623038}
!7315 = !DILocation(line: 196, column: 1, scope: !6943)
!7316 = !{i64 2147623167, i64 2147623210, i64 2147623250}
!7317 = !DILocation(line: 197, column: 1, scope: !6943)
!7318 = !{i64 2147623366, i64 2147623409, i64 2147623449}
!7319 = !DILocation(line: 198, column: 1, scope: !6943)
!7320 = !{i64 2147623604, i64 2147623647, i64 2147623687}
!7321 = !DILocation(line: 199, column: 1, scope: !6943)
!7322 = !{i64 2147623800, i64 2147623843, i64 2147623883}
!7323 = !DILocation(line: 200, column: 1, scope: !6943)
!7324 = !{i64 2147624002, i64 2147624045, i64 2147624085}
!7325 = !DILocation(line: 201, column: 1, scope: !6943)
!7326 = !{i64 2147624195, i64 2147624238, i64 2147624278}
!7327 = !DILocation(line: 202, column: 1, scope: !6943)
!7328 = !{i64 2147624429, i64 2147624472, i64 2147624512}
!7329 = !DILocation(line: 203, column: 1, scope: !6943)
!7330 = !{i64 2147624592, i64 2147624635, i64 2147624675}
!7331 = !DILocation(line: 204, column: 1, scope: !6943)
!7332 = !{i64 2147624831, i64 2147624874, i64 2147624914}
!7333 = !DILocation(line: 205, column: 1, scope: !6943)
!7334 = !{i64 2147625070, i64 2147625113, i64 2147625153}
!7335 = !DILocation(line: 206, column: 1, scope: !6943)
!7336 = !{i64 2147625306, i64 2147625349, i64 2147625389}
!7337 = !DILocation(line: 207, column: 1, scope: !6943)
!7338 = !{i64 2147625536, i64 2147625579, i64 2147625619}
!7339 = !DILocation(line: 208, column: 1, scope: !6943)
!7340 = !{i64 2147625723, i64 2147625766, i64 2147625806}
!7341 = !DILocation(line: 209, column: 1, scope: !6943)
!7342 = !{i64 2147625922, i64 2147625965, i64 2147626005}
!7343 = !DILocation(line: 210, column: 1, scope: !6943)
!7344 = !{i64 2147626193, i64 2147626236, i64 2147626276}
!7345 = !DILocation(line: 211, column: 1, scope: !6943)
!7346 = !{i64 2147626368, i64 2147626411, i64 2147626451}
!7347 = !DILocation(line: 212, column: 1, scope: !6943)
!7348 = !{i64 2147626602, i64 2147626645, i64 2147626685}
!7349 = !DILocation(line: 213, column: 1, scope: !6943)
!7350 = !{i64 2147626810, i64 2147626853, i64 2147626893}
!7351 = !DILocation(line: 214, column: 1, scope: !6943)
!7352 = !{i64 2147631089, i64 2147631132, i64 2147631172}
!7353 = !DILocation(line: 215, column: 1, scope: !6943)
!7354 = !{i64 2147631279, i64 2147631322, i64 2147631362}
!7355 = !DILocation(line: 216, column: 1, scope: !6943)
!7356 = !{i64 2147631511, i64 2147631554, i64 2147631594}
!7357 = !DILocation(line: 217, column: 1, scope: !6943)
!7358 = !{i64 2147631731, i64 2147631774, i64 2147631814}
!7359 = !DILocation(line: 218, column: 1, scope: !6943)
!7360 = !{i64 2147631927, i64 2147631970, i64 2147632010}
!7361 = !DILocation(line: 219, column: 1, scope: !6943)
!7362 = !{i64 2147632133, i64 2147632176, i64 2147632216}
!7363 = !DILocation(line: 220, column: 1, scope: !6943)
!7364 = !{i64 2147632338, i64 2147632381, i64 2147632421}
!7365 = !DILocation(line: 221, column: 1, scope: !6943)
!7366 = !{i64 2147632552, i64 2147632595, i64 2147632635}
!7367 = !DILocation(line: 222, column: 1, scope: !6943)
!7368 = !{i64 2147632778, i64 2147632821, i64 2147632861}
!7369 = !DILocation(line: 223, column: 1, scope: !6943)
!7370 = !{i64 2147632986, i64 2147633029, i64 2147633069}
!7371 = !DILocation(line: 224, column: 1, scope: !6943)
!7372 = !{i64 2147633182, i64 2147633225, i64 2147633265}
!7373 = !DILocation(line: 225, column: 1, scope: !6943)
!7374 = !{i64 2147633414, i64 2147633457, i64 2147633497}
!7375 = !DILocation(line: 226, column: 1, scope: !6943)
!7376 = !{i64 2147633595, i64 2147633638, i64 2147633678}
!7377 = !DILocation(line: 227, column: 1, scope: !6943)
!7378 = !{i64 2147633804, i64 2147633847, i64 2147633887}
!7379 = !DILocation(line: 228, column: 1, scope: !6943)
!7380 = !{i64 2147634012, i64 2147634055, i64 2147634095}
!7381 = !DILocation(line: 229, column: 1, scope: !6943)
!7382 = !{i64 2147634208, i64 2147634251, i64 2147634291}
!7383 = !DILocation(line: 230, column: 1, scope: !6943)
!7384 = !{i64 2147634386, i64 2147634429, i64 2147634469}
!7385 = !DILocation(line: 231, column: 1, scope: !6943)
!7386 = !{i64 2147634618, i64 2147634661, i64 2147634701}
!7387 = !DILocation(line: 232, column: 1, scope: !6943)
!7388 = !{i64 2147634820, i64 2147634863, i64 2147634903}
!7389 = !DILocation(line: 233, column: 1, scope: !6943)
!7390 = !{i64 2147635070, i64 2147635113, i64 2147635153}
!7391 = !DILocation(line: 234, column: 1, scope: !6943)
!7392 = !{i64 2147635308, i64 2147635351, i64 2147635391}
!7393 = !DILocation(line: 235, column: 1, scope: !6943)
!7394 = !{i64 2147635480, i64 2147635523, i64 2147635563}
!7395 = !DILocation(line: 236, column: 1, scope: !6943)
!7396 = !{i64 2147635695, i64 2147635738, i64 2147635778}
!7397 = !DILocation(line: 237, column: 1, scope: !6943)
!7398 = !{i64 2147635909, i64 2147635952, i64 2147635992}
!7399 = !DILocation(line: 238, column: 1, scope: !6943)
!7400 = !{i64 2147636111, i64 2147636154, i64 2147636194}
!7401 = !DILocation(line: 239, column: 1, scope: !6943)
!7402 = !{i64 2147636328, i64 2147636371, i64 2147636411}
!7403 = !DILocation(line: 240, column: 1, scope: !6943)
!7404 = !{i64 2147636581, i64 2147636624, i64 2147636664}
!7405 = !DILocation(line: 241, column: 1, scope: !6943)
!7406 = !{i64 2147636825, i64 2147636868, i64 2147636908}
!7407 = !DILocation(line: 242, column: 1, scope: !6943)
!7408 = !{i64 2147637042, i64 2147637085, i64 2147637125}
!7409 = !DILocation(line: 243, column: 1, scope: !6943)
!7410 = !{i64 2147637247, i64 2147637290, i64 2147637330}
!7411 = !DILocation(line: 244, column: 1, scope: !6943)
!7412 = !{i64 2147637437, i64 2147637480, i64 2147637520}
!7413 = !DILocation(line: 245, column: 1, scope: !6943)
!7414 = !{i64 2147637645, i64 2147637688, i64 2147637728}
!7415 = !DILocation(line: 246, column: 1, scope: !6943)
!7416 = !{i64 2147637841, i64 2147637884, i64 2147637924}
!7417 = !DILocation(line: 247, column: 1, scope: !6943)
!7418 = !{i64 2147638055, i64 2147638098, i64 2147638138}
!7419 = !DILocation(line: 248, column: 1, scope: !6943)
!7420 = !{i64 2147638263, i64 2147638306, i64 2147638346}
!7421 = !DILocation(line: 249, column: 1, scope: !6943)
!7422 = !{i64 2147638453, i64 2147638496, i64 2147638536}
!7423 = !DILocation(line: 250, column: 1, scope: !6943)
!7424 = !{i64 2147638667, i64 2147638710, i64 2147638750}
!7425 = !DILocation(line: 251, column: 1, scope: !6943)
!7426 = !{i64 2147638929, i64 2147638972, i64 2147639012}
!7427 = !DILocation(line: 252, column: 1, scope: !6943)
!7428 = !{i64 2147639140, i64 2147639183, i64 2147639223}
!7429 = !DILocation(line: 253, column: 1, scope: !6943)
!7430 = !{i64 2147639384, i64 2147639427, i64 2147639467}
!7431 = !DILocation(line: 254, column: 1, scope: !6943)
!7432 = !{i64 2147639595, i64 2147639638, i64 2147639678}
!7433 = !DILocation(line: 255, column: 1, scope: !6943)
!7434 = !{i64 2147639824, i64 2147639867, i64 2147639907}
!7435 = !DILocation(line: 256, column: 1, scope: !6943)
!7436 = !{i64 2147644150, i64 2147644193, i64 2147644233}
!7437 = !DILocation(line: 257, column: 1, scope: !6943)
!7438 = !{i64 2147644355, i64 2147644398, i64 2147644438}
!7439 = !DILocation(line: 258, column: 1, scope: !6943)
!7440 = !{i64 2147644551, i64 2147644594, i64 2147644634}
!7441 = !DILocation(line: 259, column: 1, scope: !6943)
!7442 = !{i64 2147644774, i64 2147644817, i64 2147644857}
!7443 = !DILocation(line: 260, column: 1, scope: !6943)
!7444 = !{i64 2147644937, i64 2147644980, i64 2147645020}
!7445 = !DILocation(line: 261, column: 1, scope: !6943)
!7446 = !{i64 2147645142, i64 2147645185, i64 2147645225}
!7447 = !DILocation(line: 262, column: 1, scope: !6943)
!7448 = !{i64 2147645362, i64 2147645405, i64 2147645445}
!7449 = !DILocation(line: 263, column: 1, scope: !6943)
!7450 = !{i64 2147645576, i64 2147645619, i64 2147645659}
!7451 = !DILocation(line: 264, column: 1, scope: !6943)
!7452 = !{i64 2147645820, i64 2147645863, i64 2147645903}
!7453 = !DILocation(line: 265, column: 1, scope: !6943)
!7454 = !{i64 2147646052, i64 2147646095, i64 2147646135}
!7455 = !DILocation(line: 266, column: 1, scope: !6943)
!7456 = !{i64 2147646266, i64 2147646309, i64 2147646349}
!7457 = !DILocation(line: 267, column: 1, scope: !6943)
!7458 = !{i64 2147646477, i64 2147646520, i64 2147646560}
!7459 = !DILocation(line: 268, column: 1, scope: !6943)
!7460 = !{i64 2147646670, i64 2147646713, i64 2147646753}
!7461 = !DILocation(line: 269, column: 1, scope: !6943)
!7462 = !{i64 2147646869, i64 2147646912, i64 2147646952}
!7463 = !DILocation(line: 270, column: 1, scope: !6943)
!7464 = !{i64 2147647041, i64 2147647084, i64 2147647124}
!7465 = !DILocation(line: 271, column: 1, scope: !6943)
!7466 = !{i64 2147647234, i64 2147647277, i64 2147647317}
!7467 = !DILocation(line: 272, column: 1, scope: !6943)
!7468 = !{i64 2147647430, i64 2147647473, i64 2147647513}
!7469 = !DILocation(line: 273, column: 1, scope: !6943)
!7470 = !{i64 2147647593, i64 2147647636, i64 2147647676}
!7471 = !DILocation(line: 274, column: 1, scope: !6943)
!7472 = !{i64 2147647795, i64 2147647838, i64 2147647878}
!7473 = !DILocation(line: 275, column: 1, scope: !6943)
!7474 = !{i64 2147648000, i64 2147648043, i64 2147648083}
!7475 = !DILocation(line: 276, column: 1, scope: !6943)
!7476 = !{i64 2147648208, i64 2147648251, i64 2147648291}
!7477 = !DILocation(line: 277, column: 1, scope: !6943)
!7478 = !{i64 2147648401, i64 2147648444, i64 2147648484}
!7479 = !DILocation(line: 278, column: 1, scope: !6943)
!7480 = !{i64 2147648588, i64 2147648631, i64 2147648671}
!7481 = !DILocation(line: 279, column: 1, scope: !6943)
!7482 = !{i64 2147648815, i64 2147648858, i64 2147648898}
!7483 = !DILocation(line: 280, column: 1, scope: !6943)
!7484 = !{i64 2147649032, i64 2147649075, i64 2147649115}
!7485 = !DILocation(line: 281, column: 1, scope: !6943)
!7486 = !{i64 2147649324, i64 2147649367, i64 2147649407}
!7487 = !DILocation(line: 282, column: 1, scope: !6943)
!7488 = !{i64 2147649556, i64 2147649599, i64 2147649639}
!7489 = !DILocation(line: 283, column: 1, scope: !6943)
!7490 = !{i64 2147649773, i64 2147649816, i64 2147649856}
!7491 = !DILocation(line: 284, column: 1, scope: !6943)
!7492 = !{i64 2147649990, i64 2147650033, i64 2147650073}
!7493 = !DILocation(line: 285, column: 1, scope: !6943)
!7494 = !{i64 2147650200, i64 2147650243, i64 2147650283}
!7495 = !DILocation(line: 286, column: 1, scope: !6943)
!7496 = !{i64 2147650405, i64 2147650448, i64 2147650488}
!7497 = !DILocation(line: 287, column: 1, scope: !6943)
!7498 = !{i64 2147650637, i64 2147650680, i64 2147650720}
!7499 = !DILocation(line: 288, column: 1, scope: !6943)
!7500 = !{i64 2147650845, i64 2147650888, i64 2147650928}
!7501 = !DILocation(line: 289, column: 1, scope: !6943)
!7502 = !{i64 2147651035, i64 2147651078, i64 2147651118}
!7503 = !DILocation(line: 290, column: 1, scope: !6943)
!7504 = !{i64 2147651261, i64 2147651304, i64 2147651344}
!7505 = !DILocation(line: 291, column: 1, scope: !6943)
!7506 = !{i64 2147651450, i64 2147651493, i64 2147651533}
!7507 = !DILocation(line: 292, column: 1, scope: !6943)
!7508 = !{i64 2147651721, i64 2147651764, i64 2147651804}
!7509 = !DILocation(line: 293, column: 1, scope: !6943)
!7510 = !{i64 2147651941, i64 2147651984, i64 2147652024}
!7511 = !DILocation(line: 294, column: 1, scope: !6943)
!7512 = !{i64 2147652194, i64 2147652237, i64 2147652277}
!7513 = !DILocation(line: 295, column: 1, scope: !6943)
!7514 = !{i64 2147652402, i64 2147652445, i64 2147652485}
!7515 = !DILocation(line: 296, column: 1, scope: !6943)
!7516 = !{i64 2147652634, i64 2147652677, i64 2147652717}
!7517 = !DILocation(line: 297, column: 1, scope: !6943)
!7518 = !{i64 2147656906, i64 2147656949, i64 2147656989}
!7519 = !DILocation(line: 298, column: 1, scope: !6943)
!7520 = !{i64 2147657096, i64 2147657139, i64 2147657179}
!7521 = !DILocation(line: 299, column: 1, scope: !6943)
!7522 = !{i64 2147657310, i64 2147657353, i64 2147657393}
!7523 = !DILocation(line: 300, column: 1, scope: !6943)
!7524 = !{i64 2147657509, i64 2147657552, i64 2147657592}
!7525 = !DILocation(line: 301, column: 1, scope: !6943)
!7526 = !{i64 2147657696, i64 2147657739, i64 2147657779}
!7527 = !DILocation(line: 302, column: 1, scope: !6943)
!7528 = !{i64 2147657904, i64 2147657947, i64 2147657987}
!7529 = !DILocation(line: 303, column: 1, scope: !6943)
!7530 = !{i64 2147658133, i64 2147658176, i64 2147658216}
!7531 = !DILocation(line: 304, column: 1, scope: !6943)
!7532 = !{i64 2147658335, i64 2147658378, i64 2147658418}
!7533 = !DILocation(line: 305, column: 1, scope: !6943)
!7534 = !{i64 2147658534, i64 2147658577, i64 2147658617}
!7535 = !DILocation(line: 306, column: 1, scope: !6943)
!7536 = !{i64 2147658724, i64 2147658767, i64 2147658807}
!7537 = !DILocation(line: 307, column: 1, scope: !6943)
!7538 = !{i64 2147658941, i64 2147658984, i64 2147659024}
!7539 = !DILocation(line: 308, column: 1, scope: !6943)
!7540 = !{i64 2147659143, i64 2147659186, i64 2147659226}
!7541 = !DILocation(line: 309, column: 1, scope: !6943)
!7542 = !{i64 2147659384, i64 2147659427, i64 2147659467}
!7543 = !DILocation(line: 311, column: 1, scope: !6943)
!7544 = distinct !DISubprogram(name: "soc_port_pinmux_set", scope: !7545, file: !7545, line: 16, type: !7546, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !7719)
!7545 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!125, !7548, !208, !208}
!7548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7549, size: 32)
!7549 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2915, line: 402, baseType: !7550)
!7550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2915, line: 386, size: 1024, elements: !7551)
!7551 = !{!7552, !7562, !7572, !7582, !7592, !7602, !7612, !7622, !7632, !7643, !7653, !7671, !7692, !7704, !7718}
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !7550, file: !2915, line: 387, baseType: !7553, size: 32)
!7553 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7554)
!7554 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2915, line: 49, baseType: !7555)
!7555 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 44, size: 32, elements: !7556)
!7556 = !{!7557, !7561}
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7555, file: !2915, line: 47, baseType: !7558, size: 32)
!7558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7555, file: !2915, line: 45, size: 32, elements: !7559)
!7559 = !{!7560}
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !7558, file: !2915, line: 46, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7555, file: !2915, line: 48, baseType: !208, size: 32)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !7550, file: !2915, line: 388, baseType: !7563, size: 32, offset: 32)
!7563 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7564)
!7564 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2915, line: 67, baseType: !7565)
!7565 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 62, size: 32, elements: !7566)
!7566 = !{!7567, !7571}
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7565, file: !2915, line: 65, baseType: !7568, size: 32)
!7568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7565, file: !2915, line: 63, size: 32, elements: !7569)
!7569 = !{!7570}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !7568, file: !2915, line: 64, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7565, file: !2915, line: 66, baseType: !208, size: 32)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !7550, file: !2915, line: 389, baseType: !7573, size: 32, offset: 64)
!7573 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7574)
!7574 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2915, line: 85, baseType: !7575)
!7575 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 80, size: 32, elements: !7576)
!7576 = !{!7577, !7581}
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7575, file: !2915, line: 83, baseType: !7578, size: 32)
!7578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7575, file: !2915, line: 81, size: 32, elements: !7579)
!7579 = !{!7580}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !7578, file: !2915, line: 82, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7575, file: !2915, line: 84, baseType: !208, size: 32)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !7550, file: !2915, line: 390, baseType: !7583, size: 32, offset: 96)
!7583 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7584)
!7584 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2915, line: 103, baseType: !7585)
!7585 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 98, size: 32, elements: !7586)
!7586 = !{!7587, !7591}
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7585, file: !2915, line: 101, baseType: !7588, size: 32)
!7588 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7585, file: !2915, line: 99, size: 32, elements: !7589)
!7589 = !{!7590}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !7588, file: !2915, line: 100, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7585, file: !2915, line: 102, baseType: !208, size: 32)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !7550, file: !2915, line: 391, baseType: !7593, size: 32, offset: 128)
!7593 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7594)
!7594 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2915, line: 121, baseType: !7595)
!7595 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 116, size: 32, elements: !7596)
!7596 = !{!7597, !7601}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7595, file: !2915, line: 119, baseType: !7598, size: 32)
!7598 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7595, file: !2915, line: 117, size: 32, elements: !7599)
!7599 = !{!7600}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !7598, file: !2915, line: 118, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7595, file: !2915, line: 120, baseType: !208, size: 32)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !7550, file: !2915, line: 392, baseType: !7603, size: 32, offset: 160)
!7603 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7604)
!7604 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2915, line: 139, baseType: !7605)
!7605 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 134, size: 32, elements: !7606)
!7606 = !{!7607, !7611}
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7605, file: !2915, line: 137, baseType: !7608, size: 32)
!7608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7605, file: !2915, line: 135, size: 32, elements: !7609)
!7609 = !{!7610}
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !7608, file: !2915, line: 136, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7605, file: !2915, line: 138, baseType: !208, size: 32)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !7550, file: !2915, line: 393, baseType: !7613, size: 32, offset: 192)
!7613 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7614)
!7614 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2915, line: 157, baseType: !7615)
!7615 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 152, size: 32, elements: !7616)
!7616 = !{!7617, !7621}
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7615, file: !2915, line: 155, baseType: !7618, size: 32)
!7618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7615, file: !2915, line: 153, size: 32, elements: !7619)
!7619 = !{!7620}
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !7618, file: !2915, line: 154, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7615, file: !2915, line: 156, baseType: !208, size: 32)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !7550, file: !2915, line: 394, baseType: !7623, size: 32, offset: 224)
!7623 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7624)
!7624 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2915, line: 175, baseType: !7625)
!7625 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 170, size: 32, elements: !7626)
!7626 = !{!7627, !7631}
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7625, file: !2915, line: 173, baseType: !7628, size: 32)
!7628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7625, file: !2915, line: 171, size: 32, elements: !7629)
!7629 = !{!7630}
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !7628, file: !2915, line: 172, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7625, file: !2915, line: 174, baseType: !208, size: 32)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !7550, file: !2915, line: 395, baseType: !7633, size: 32, offset: 256)
!7633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7634)
!7634 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7635)
!7635 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2915, line: 193, baseType: !7636)
!7636 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 188, size: 32, elements: !7637)
!7637 = !{!7638, !7642}
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7636, file: !2915, line: 191, baseType: !7639, size: 32)
!7639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7636, file: !2915, line: 189, size: 32, elements: !7640)
!7640 = !{!7641}
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !7639, file: !2915, line: 190, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7636, file: !2915, line: 192, baseType: !208, size: 32)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !7550, file: !2915, line: 396, baseType: !7644, size: 32, offset: 288)
!7644 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7645)
!7645 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2915, line: 211, baseType: !7646)
!7646 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 206, size: 32, elements: !7647)
!7647 = !{!7648, !7652}
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7646, file: !2915, line: 209, baseType: !7649, size: 32)
!7649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7646, file: !2915, line: 207, size: 32, elements: !7650)
!7650 = !{!7651}
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !7649, file: !2915, line: 208, baseType: !208, size: 32, flags: DIFlagBitField, extraData: i64 0)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7646, file: !2915, line: 210, baseType: !208, size: 32)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !7550, file: !2915, line: 397, baseType: !7654, size: 32, offset: 320)
!7654 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7655)
!7655 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2915, line: 240, baseType: !7656)
!7656 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 224, size: 32, elements: !7657)
!7657 = !{!7658, !7670}
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7656, file: !2915, line: 238, baseType: !7659, size: 32)
!7659 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7656, file: !2915, line: 225, size: 32, elements: !7660)
!7660 = !{!7661, !7662, !7663, !7664, !7665, !7666, !7667, !7668, !7669}
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !7659, file: !2915, line: 226, baseType: !208, size: 16, flags: DIFlagBitField, extraData: i64 0)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !7659, file: !2915, line: 227, baseType: !208, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !7659, file: !2915, line: 228, baseType: !208, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !7659, file: !2915, line: 229, baseType: !208, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !7659, file: !2915, line: 231, baseType: !208, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !7659, file: !2915, line: 233, baseType: !208, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !7659, file: !2915, line: 234, baseType: !208, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !7659, file: !2915, line: 236, baseType: !208, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !7659, file: !2915, line: 237, baseType: !208, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7656, file: !2915, line: 239, baseType: !208, size: 32)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !7550, file: !2915, line: 398, baseType: !7672, size: 32, offset: 352)
!7672 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7673)
!7673 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_EVCTRL_Type", file: !2915, line: 286, baseType: !7674)
!7674 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 270, size: 32, elements: !7675)
!7675 = !{!7676, !7691}
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7674, file: !2915, line: 284, baseType: !7677, size: 32)
!7677 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7674, file: !2915, line: 271, size: 32, elements: !7678)
!7678 = !{!7679, !7680, !7681, !7682, !7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690}
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "PID0", scope: !7677, file: !2915, line: 272, baseType: !208, size: 5, flags: DIFlagBitField, extraData: i64 0)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT0", scope: !7677, file: !2915, line: 273, baseType: !208, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI0", scope: !7677, file: !2915, line: 274, baseType: !208, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "PID1", scope: !7677, file: !2915, line: 275, baseType: !208, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT1", scope: !7677, file: !2915, line: 276, baseType: !208, size: 2, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI1", scope: !7677, file: !2915, line: 277, baseType: !208, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "PID2", scope: !7677, file: !2915, line: 278, baseType: !208, size: 5, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT2", scope: !7677, file: !2915, line: 279, baseType: !208, size: 2, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI2", scope: !7677, file: !2915, line: 280, baseType: !208, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "PID3", scope: !7677, file: !2915, line: 281, baseType: !208, size: 5, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT3", scope: !7677, file: !2915, line: 282, baseType: !208, size: 2, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI3", scope: !7677, file: !2915, line: 283, baseType: !208, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7674, file: !2915, line: 285, baseType: !208, size: 32)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !7550, file: !2915, line: 399, baseType: !7693, size: 128, offset: 384)
!7693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7694, size: 128, elements: !312)
!7694 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7695)
!7695 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2915, line: 342, baseType: !7696)
!7696 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 336, size: 8, elements: !7697)
!7697 = !{!7698, !7703}
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7696, file: !2915, line: 340, baseType: !7699, size: 8)
!7699 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7696, file: !2915, line: 337, size: 8, elements: !7700)
!7700 = !{!7701, !7702}
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !7699, file: !2915, line: 338, baseType: !150, size: 4, flags: DIFlagBitField, extraData: i64 0)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !7699, file: !2915, line: 339, baseType: !150, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7696, file: !2915, line: 341, baseType: !150, size: 8)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !7550, file: !2915, line: 400, baseType: !7705, size: 256, offset: 512)
!7705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7706, size: 256, elements: !3084)
!7706 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7707)
!7707 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2915, line: 368, baseType: !7708)
!7708 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2915, line: 358, size: 8, elements: !7709)
!7709 = !{!7710, !7717}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7708, file: !2915, line: 366, baseType: !7711, size: 8)
!7711 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7708, file: !2915, line: 359, size: 8, elements: !7712)
!7712 = !{!7713, !7714, !7715, !7716}
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !7711, file: !2915, line: 360, baseType: !150, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !7711, file: !2915, line: 361, baseType: !150, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !7711, file: !2915, line: 362, baseType: !150, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !7711, file: !2915, line: 364, baseType: !150, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7708, file: !2915, line: 367, baseType: !150, size: 8)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !7550, file: !2915, line: 401, baseType: !3086, size: 256, offset: 768)
!7719 = !{!7720, !7721, !7722, !7723, !7724}
!7720 = !DILocalVariable(name: "pg", arg: 1, scope: !7544, file: !7545, line: 16, type: !7548)
!7721 = !DILocalVariable(name: "pin", arg: 2, scope: !7544, file: !7545, line: 16, type: !208)
!7722 = !DILocalVariable(name: "func", arg: 3, scope: !7544, file: !7545, line: 16, type: !208)
!7723 = !DILocalVariable(name: "is_odd", scope: !7544, file: !7545, line: 18, type: !153)
!7724 = !DILocalVariable(name: "idx", scope: !7544, file: !7545, line: 19, type: !125)
!7725 = !DILocation(line: 0, scope: !7544)
!7726 = !DILocation(line: 18, column: 20, scope: !7544)
!7727 = !DILocation(line: 18, column: 16, scope: !7544)
!7728 = !DILocation(line: 19, column: 16, scope: !7544)
!7729 = !DILocation(line: 0, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7544, file: !7545, line: 25, column: 6)
!7731 = !DILocation(line: 25, column: 6, scope: !7544)
!7732 = !DILocation(line: 30, column: 22, scope: !7544)
!7733 = !DILocation(line: 30, column: 29, scope: !7544)
!7734 = !DILocation(line: 32, column: 2, scope: !7544)
!7735 = distinct !DISubprogram(name: "soc_port_configure", scope: !7545, file: !7545, line: 35, type: !7736, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !7746)
!7736 = !DISubroutineType(types: !7737)
!7737 = !{null, !7738}
!7738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7739, size: 32)
!7739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7740)
!7740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !7741, line: 75, size: 96, elements: !7742)
!7741 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/samd51/../common/soc_port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7742 = !{!7743, !7744, !7745}
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !7740, file: !7741, line: 76, baseType: !7548, size: 32)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !7740, file: !7741, line: 77, baseType: !208, size: 32, offset: 32)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7740, file: !7741, line: 78, baseType: !208, size: 32, offset: 64)
!7746 = !{!7747, !7748, !7749, !7750, !7751}
!7747 = !DILocalVariable(name: "pin", arg: 1, scope: !7735, file: !7545, line: 35, type: !7738)
!7748 = !DILocalVariable(name: "pg", scope: !7735, file: !7545, line: 37, type: !7548)
!7749 = !DILocalVariable(name: "flags", scope: !7735, file: !7545, line: 38, type: !208)
!7750 = !DILocalVariable(name: "func", scope: !7735, file: !7545, line: 39, type: !208)
!7751 = !DILocalVariable(name: "pincfg", scope: !7735, file: !7545, line: 40, type: !7707)
!7752 = !DILocation(line: 40, column: 19, scope: !7735)
!7753 = !DILocation(line: 0, scope: !7735)
!7754 = !DILocation(line: 37, column: 23, scope: !7735)
!7755 = !DILocation(line: 38, column: 24, scope: !7735)
!7756 = !DILocation(line: 40, column: 2, scope: !7735)
!7757 = !DILocation(line: 43, column: 18, scope: !7735)
!7758 = !DILocation(line: 43, column: 27, scope: !7735)
!7759 = !DILocation(line: 44, column: 30, scope: !7735)
!7760 = !DILocation(line: 44, column: 22, scope: !7735)
!7761 = !DILocation(line: 44, column: 13, scope: !7735)
!7762 = !DILocation(line: 44, column: 17, scope: !7735)
!7763 = !DILocation(line: 45, column: 30, scope: !7735)
!7764 = !DILocation(line: 45, column: 22, scope: !7735)
!7765 = !DILocation(line: 45, column: 13, scope: !7735)
!7766 = !DILocation(line: 45, column: 17, scope: !7735)
!7767 = !DILocation(line: 47, column: 12, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7735, file: !7545, line: 47, column: 6)
!7769 = !DILocation(line: 47, column: 6, scope: !7735)
!7770 = !DILocation(line: 39, column: 52, scope: !7735)
!7771 = !DILocation(line: 48, column: 32, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7768, file: !7545, line: 47, column: 38)
!7773 = !DILocation(line: 48, column: 3, scope: !7772)
!7774 = !DILocation(line: 49, column: 3, scope: !7772)
!7775 = !DILocation(line: 52, column: 12, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7735, file: !7545, line: 52, column: 6)
!7777 = !DILocation(line: 52, column: 6, scope: !7735)
!7778 = !DILocation(line: 53, column: 13, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !7545, line: 53, column: 7)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !7545, line: 52, column: 53)
!7781 = !DILocation(line: 53, column: 7, scope: !7780)
!7782 = !DILocation(line: 54, column: 32, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7779, file: !7545, line: 53, column: 32)
!7784 = !DILocation(line: 54, column: 24, scope: !7783)
!7785 = !DILocation(line: 54, column: 15, scope: !7783)
!7786 = !DILocation(line: 54, column: 19, scope: !7783)
!7787 = !DILocation(line: 55, column: 3, scope: !7783)
!7788 = !DILocation(line: 57, column: 21, scope: !7780)
!7789 = !DILocation(line: 58, column: 2, scope: !7780)
!7790 = !DILocation(line: 60, column: 12, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7735, file: !7545, line: 60, column: 6)
!7792 = !DILocation(line: 60, column: 6, scope: !7735)
!7793 = !DILocation(line: 61, column: 19, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7791, file: !7545, line: 60, column: 37)
!7795 = !DILocation(line: 62, column: 2, scope: !7794)
!7796 = !DILocation(line: 64, column: 12, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7735, file: !7545, line: 64, column: 6)
!7798 = !DILocation(line: 64, column: 6, scope: !7735)
!7799 = !DILocation(line: 65, column: 31, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7797, file: !7545, line: 64, column: 38)
!7801 = !DILocation(line: 65, column: 23, scope: !7800)
!7802 = !DILocation(line: 65, column: 14, scope: !7800)
!7803 = !DILocation(line: 65, column: 18, scope: !7800)
!7804 = !DILocation(line: 66, column: 2, scope: !7800)
!7805 = !DILocation(line: 68, column: 12, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7735, file: !7545, line: 68, column: 6)
!7807 = !DILocation(line: 68, column: 6, scope: !7735)
!7808 = !DILocation(line: 69, column: 21, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7806, file: !7545, line: 68, column: 42)
!7810 = !DILocation(line: 70, column: 2, scope: !7809)
!7811 = !DILocation(line: 72, column: 18, scope: !7735)
!7812 = !DILocation(line: 72, column: 27, scope: !7735)
!7813 = !DILocation(line: 73, column: 1, scope: !7735)
!7814 = distinct !DISubprogram(name: "soc_port_list_configure", scope: !7545, file: !7545, line: 75, type: !7815, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !7817)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{null, !7738, !32}
!7817 = !{!7818, !7819, !7820}
!7818 = !DILocalVariable(name: "pins", arg: 1, scope: !7814, file: !7545, line: 75, type: !7738)
!7819 = !DILocalVariable(name: "size", arg: 2, scope: !7814, file: !7545, line: 76, type: !32)
!7820 = !DILocalVariable(name: "i", scope: !7821, file: !7545, line: 78, type: !125)
!7821 = distinct !DILexicalBlock(scope: !7814, file: !7545, line: 78, column: 2)
!7822 = !DILocation(line: 0, scope: !7814)
!7823 = !DILocation(line: 0, scope: !7821)
!7824 = !DILocation(line: 78, column: 20, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7821, file: !7545, line: 78, column: 2)
!7826 = !DILocation(line: 78, column: 2, scope: !7821)
!7827 = !DILocation(line: 81, column: 1, scope: !7814)
!7828 = !DILocation(line: 79, column: 23, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7825, file: !7545, line: 78, column: 33)
!7830 = !DILocation(line: 79, column: 3, scope: !7829)
!7831 = !DILocation(line: 78, column: 29, scope: !7825)
!7832 = distinct !{!7832, !7826, !7833}
!7833 = !DILocation(line: 80, column: 2, scope: !7821)
!7834 = distinct !DISubprogram(name: "atmel_samd_init", scope: !949, file: !949, line: 108, type: !956, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !7835)
!7835 = !{!7836, !7837, !7838}
!7836 = !DILocalVariable(name: "arg", arg: 1, scope: !7834, file: !949, line: 108, type: !958)
!7837 = !DILocalVariable(name: "key", scope: !7834, file: !949, line: 110, type: !208)
!7838 = !DILocalVariable(name: "dfll_div", scope: !7834, file: !949, line: 111, type: !150)
!7839 = !DILocation(line: 0, scope: !7834)
!7840 = !DILocation(line: 55, column: 2, scope: !7841, inlinedAt: !7848)
!7841 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7842, file: !7842, line: 42, type: !7843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !7845)
!7842 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7843 = !DISubroutineType(types: !7844)
!7844 = !{!32}
!7845 = !{!7846, !7847}
!7846 = !DILocalVariable(name: "key", scope: !7841, file: !7842, line: 44, type: !32)
!7847 = !DILocalVariable(name: "tmp", scope: !7841, file: !7842, line: 53, type: !32)
!7848 = distinct !DILocation(line: 123, column: 8, scope: !7834)
!7849 = !{i64 1267292}
!7850 = !DILocation(line: 0, scope: !7841, inlinedAt: !7848)
!7851 = !DILocation(line: 126, column: 21, scope: !7834)
!7852 = !DILocation(line: 128, column: 2, scope: !7834)
!7853 = !DILocation(line: 129, column: 2, scope: !7834)
!7854 = !DILocation(line: 130, column: 2, scope: !7834)
!7855 = !DILocation(line: 131, column: 2, scope: !7834)
!7856 = !DILocation(line: 134, column: 2, scope: !7834)
!7857 = !DILocation(line: 137, column: 2, scope: !7834)
!7858 = !DILocalVariable(name: "key", arg: 1, scope: !7859, file: !7842, line: 84, type: !32)
!7859 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !7862)
!7860 = !DISubroutineType(types: !7861)
!7861 = !{null, !32}
!7862 = !{!7858}
!7863 = !DILocation(line: 0, scope: !7859, inlinedAt: !7864)
!7864 = distinct !DILocation(line: 144, column: 2, scope: !7834)
!7865 = !DILocation(line: 95, column: 2, scope: !7859, inlinedAt: !7864)
!7866 = !{i64 1268109}
!7867 = !DILocation(line: 146, column: 2, scope: !7834)
!7868 = distinct !DISubprogram(name: "gclk_reset", scope: !949, file: !949, line: 94, type: !4072, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !1126)
!7869 = !DILocation(line: 96, column: 24, scope: !7868)
!7870 = !DILocation(line: 97, column: 2, scope: !7868)
!7871 = !DILocation(line: 97, column: 28, scope: !7868)
!7872 = distinct !{!7872, !7870, !7873}
!7873 = !DILocation(line: 98, column: 2, scope: !7868)
!7874 = !DILocation(line: 99, column: 1, scope: !7868)
!7875 = distinct !DISubprogram(name: "osc32k_init", scope: !949, file: !949, line: 37, type: !4072, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !1126)
!7876 = !DILocation(line: 39, column: 23, scope: !7875)
!7877 = !DILocation(line: 41, column: 1, scope: !7875)
!7878 = distinct !DISubprogram(name: "dfll_init", scope: !949, file: !949, line: 79, type: !4072, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !7879)
!7879 = !{!7880}
!7880 = !DILocalVariable(name: "reg", scope: !7878, file: !949, line: 81, type: !208)
!7881 = !DILocation(line: 0, scope: !7878)
!7882 = !DILocation(line: 87, column: 25, scope: !7878)
!7883 = !DILocation(line: 88, column: 25, scope: !7878)
!7884 = !DILocation(line: 90, column: 2, scope: !7878)
!7885 = !DILocation(line: 90, column: 30, scope: !7878)
!7886 = !DILocation(line: 90, column: 9, scope: !7878)
!7887 = distinct !{!7887, !7884, !7888}
!7888 = !DILocation(line: 91, column: 2, scope: !7878)
!7889 = !DILocation(line: 92, column: 1, scope: !7878)
!7890 = distinct !DISubprogram(name: "dpll_init", scope: !949, file: !949, line: 46, type: !7891, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !7893)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{null, !150, !208}
!7893 = !{!7894, !7895, !7896}
!7894 = !DILocalVariable(name: "n", arg: 1, scope: !7890, file: !949, line: 46, type: !150)
!7895 = !DILocalVariable(name: "f_cpu", arg: 2, scope: !7890, file: !949, line: 46, type: !208)
!7896 = !DILocalVariable(name: "LDR", scope: !7890, file: !949, line: 49, type: !3090)
!7897 = !DILocation(line: 0, scope: !7890)
!7898 = !DILocation(line: 52, column: 40, scope: !7890)
!7899 = !DILocation(line: 53, column: 2, scope: !7890)
!7900 = !DILocation(line: 53, column: 39, scope: !7890)
!7901 = distinct !{!7901, !7899, !7902}
!7902 = !DILocation(line: 54, column: 2, scope: !7890)
!7903 = !DILocation(line: 57, column: 48, scope: !7890)
!7904 = !DILocation(line: 58, column: 2, scope: !7890)
!7905 = !DILocation(line: 58, column: 53, scope: !7890)
!7906 = !DILocation(line: 58, column: 57, scope: !7890)
!7907 = !DILocation(line: 58, column: 9, scope: !7890)
!7908 = distinct !{!7908, !7904, !7909}
!7909 = !DILocation(line: 59, column: 2, scope: !7890)
!7910 = !DILocation(line: 61, column: 34, scope: !7890)
!7911 = !DILocation(line: 65, column: 33, scope: !7890)
!7912 = !DILocation(line: 69, column: 33, scope: !7890)
!7913 = !DILocation(line: 71, column: 2, scope: !7890)
!7914 = !DILocation(line: 71, column: 39, scope: !7890)
!7915 = distinct !{!7915, !7913, !7916}
!7916 = !DILocation(line: 72, column: 2, scope: !7890)
!7917 = !DILocation(line: 73, column: 43, scope: !7890)
!7918 = !DILocation(line: 73, column: 11, scope: !7890)
!7919 = !DILocation(line: 73, column: 50, scope: !7890)
!7920 = !DILocation(line: 74, column: 36, scope: !7890)
!7921 = !DILocation(line: 73, column: 2, scope: !7890)
!7922 = distinct !{!7922, !7921, !7923}
!7923 = !DILocation(line: 75, column: 2, scope: !7890)
!7924 = !DILocation(line: 77, column: 1, scope: !7890)
!7925 = distinct !DISubprogram(name: "gclk_connect", scope: !949, file: !949, line: 101, type: !7926, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !7928)
!7926 = !DISubroutineType(types: !7927)
!7927 = !{null, !150, !150, !150}
!7928 = !{!7929, !7930, !7931}
!7929 = !DILocalVariable(name: "gclk", arg: 1, scope: !7925, file: !949, line: 101, type: !150)
!7930 = !DILocalVariable(name: "src", arg: 2, scope: !7925, file: !949, line: 101, type: !150)
!7931 = !DILocalVariable(name: "div", arg: 3, scope: !7925, file: !949, line: 101, type: !150)
!7932 = !DILocation(line: 0, scope: !7925)
!7933 = !DILocation(line: 103, column: 28, scope: !7925)
!7934 = !DILocation(line: 104, column: 7, scope: !7925)
!7935 = !DILocation(line: 104, column: 5, scope: !7925)
!7936 = !DILocation(line: 105, column: 5, scope: !7925)
!7937 = !DILocation(line: 103, column: 2, scope: !7925)
!7938 = !DILocation(line: 103, column: 22, scope: !7925)
!7939 = !DILocation(line: 103, column: 26, scope: !7925)
!7940 = !DILocation(line: 106, column: 1, scope: !7925)
!7941 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7942, file: !7942, line: 14, type: !5923, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3684, retainedNodes: !7943)
!7942 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7943 = !{!7944, !7945}
!7944 = !DILocalVariable(name: "fmt", arg: 1, scope: !7941, file: !7942, line: 14, type: !140)
!7945 = !DILocalVariable(name: "ap", scope: !7941, file: !7942, line: 16, type: !7946)
!7946 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4993, line: 99, baseType: !7947)
!7947 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4993, line: 40, baseType: !7948)
!7948 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7942, baseType: !7949)
!7949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7950)
!7950 = !{!7951}
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7949, file: !7942, line: 16, baseType: !124, size: 32)
!7952 = !DILocation(line: 0, scope: !7941)
!7953 = !DILocation(line: 16, column: 2, scope: !7941)
!7954 = !DILocation(line: 16, column: 10, scope: !7941)
!7955 = !DILocation(line: 18, column: 2, scope: !7941)
!7956 = !DILocation(line: 19, column: 2, scope: !7941)
!7957 = !DILocation(line: 20, column: 2, scope: !7941)
!7958 = !DILocation(line: 21, column: 1, scope: !7941)
!7959 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7942, file: !7942, line: 23, type: !7960, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3684, retainedNodes: !7962)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{null, !140, !7946}
!7962 = !{!7963, !7964}
!7963 = !DILocalVariable(name: "fmt", arg: 1, scope: !7959, file: !7942, line: 23, type: !140)
!7964 = !DILocalVariable(name: "ap", arg: 2, scope: !7959, file: !7942, line: 23, type: !7946)
!7965 = !DILocation(line: 0, scope: !7959)
!7966 = !DILocation(line: 25, column: 2, scope: !7959)
!7967 = !DILocation(line: 26, column: 1, scope: !7959)
!7968 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7942, file: !7942, line: 52, type: !7969, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3684, retainedNodes: !7971)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{null, !125, !13, !272}
!7971 = !{!7972, !7973, !7974, !7975}
!7972 = !DILocalVariable(name: "level", arg: 1, scope: !7968, file: !7942, line: 52, type: !125)
!7973 = !DILocalVariable(name: "data", arg: 2, scope: !7968, file: !7942, line: 52, type: !13)
!7974 = !DILocalVariable(name: "size", arg: 3, scope: !7968, file: !7942, line: 52, type: !272)
!7975 = !DILocalVariable(name: "data_buffer", scope: !7968, file: !7942, line: 54, type: !140)
!7976 = !DILocation(line: 0, scope: !7968)
!7977 = !DILocation(line: 55, column: 14, scope: !7968)
!7978 = !DILocation(line: 55, column: 2, scope: !7968)
!7979 = !DILocation(line: 56, column: 3, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7968, file: !7942, line: 55, column: 20)
!7981 = !DILocation(line: 57, column: 3, scope: !7980)
!7982 = !DILocation(line: 59, column: 7, scope: !7980)
!7983 = distinct !{!7983, !7978, !7984}
!7984 = !DILocation(line: 65, column: 2, scope: !7968)
!7985 = !DILocation(line: 66, column: 1, scope: !7968)
!7986 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !4236, file: !4236, line: 175, type: !4237, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3684, retainedNodes: !7987)
!7987 = !{!7988}
!7988 = !DILocalVariable(name: "level", arg: 1, scope: !7986, file: !4236, line: 175, type: !125)
!7989 = !DILocation(line: 0, scope: !7986)
!7990 = !DILocation(line: 177, column: 2, scope: !7986)
!7991 = !DILocation(line: 189, column: 1, scope: !7986)
!7992 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7942, file: !7942, line: 28, type: !7993, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3684, retainedNodes: !7995)
!7993 = !DISubroutineType(types: !7994)
!7994 = !{null, !140, !272}
!7995 = !{!7996, !7997, !7998, !8000, !8002}
!7996 = !DILocalVariable(name: "data", arg: 1, scope: !7992, file: !7942, line: 28, type: !140)
!7997 = !DILocalVariable(name: "length", arg: 2, scope: !7992, file: !7942, line: 28, type: !272)
!7998 = !DILocalVariable(name: "i", scope: !7999, file: !7942, line: 30, type: !272)
!7999 = distinct !DILexicalBlock(scope: !7992, file: !7942, line: 30, column: 2)
!8000 = !DILocalVariable(name: "i", scope: !8001, file: !7942, line: 40, type: !272)
!8001 = distinct !DILexicalBlock(scope: !7992, file: !7942, line: 40, column: 2)
!8002 = !DILocalVariable(name: "c", scope: !8003, file: !7942, line: 42, type: !151)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !7942, line: 41, column: 19)
!8004 = distinct !DILexicalBlock(scope: !8005, file: !7942, line: 41, column: 7)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !7942, line: 40, column: 54)
!8006 = distinct !DILexicalBlock(scope: !8001, file: !7942, line: 40, column: 2)
!8007 = !DILocation(line: 0, scope: !7992)
!8008 = !DILocation(line: 0, scope: !7999)
!8009 = !DILocation(line: 30, column: 2, scope: !7999)
!8010 = !DILocation(line: 38, column: 2, scope: !7992)
!8011 = !DILocation(line: 0, scope: !8001)
!8012 = !DILocation(line: 40, column: 2, scope: !8001)
!8013 = !DILocation(line: 31, column: 9, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !7942, line: 31, column: 7)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !7942, line: 30, column: 54)
!8016 = distinct !DILexicalBlock(scope: !7999, file: !7942, line: 30, column: 2)
!8017 = !DILocation(line: 31, column: 7, scope: !8015)
!8018 = !DILocation(line: 32, column: 35, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8014, file: !7942, line: 31, column: 19)
!8020 = !DILocation(line: 32, column: 20, scope: !8019)
!8021 = !DILocation(line: 32, column: 4, scope: !8019)
!8022 = !DILocation(line: 33, column: 3, scope: !8019)
!8023 = !DILocation(line: 34, column: 4, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8014, file: !7942, line: 33, column: 10)
!8025 = !DILocation(line: 30, column: 50, scope: !8016)
!8026 = !DILocation(line: 30, column: 24, scope: !8016)
!8027 = distinct !{!8027, !8009, !8028}
!8028 = !DILocation(line: 36, column: 2, scope: !7999)
!8029 = !DILocation(line: 49, column: 2, scope: !7992)
!8030 = !DILocation(line: 50, column: 1, scope: !7992)
!8031 = !DILocation(line: 41, column: 9, scope: !8004)
!8032 = !DILocation(line: 41, column: 7, scope: !8005)
!8033 = !DILocation(line: 42, column: 22, scope: !8003)
!8034 = !DILocation(line: 0, scope: !8003)
!8035 = !DILocation(line: 44, column: 25, scope: !8003)
!8036 = !DILocation(line: 44, column: 17, scope: !8003)
!8037 = !DILocation(line: 44, column: 33, scope: !8003)
!8038 = !DILocation(line: 44, column: 4, scope: !8003)
!8039 = !DILocation(line: 45, column: 3, scope: !8003)
!8040 = !DILocation(line: 46, column: 4, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8004, file: !7942, line: 45, column: 10)
!8042 = !DILocation(line: 40, column: 50, scope: !8006)
!8043 = !DILocation(line: 40, column: 24, scope: !8006)
!8044 = distinct !{!8044, !8012, !8045}
!8045 = !DILocation(line: 48, column: 2, scope: !8001)
!8046 = distinct !DISubprogram(name: "isprint", scope: !6716, file: !6716, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3684, retainedNodes: !8047)
!8047 = !{!8048}
!8048 = !DILocalVariable(name: "c", arg: 1, scope: !8046, file: !6716, line: 37, type: !125)
!8049 = !DILocation(line: 0, scope: !8046)
!8050 = !DILocation(line: 39, column: 38, scope: !8046)
!8051 = !DILocation(line: 39, column: 2, scope: !8046)
!8052 = distinct !DISubprogram(name: "_copy", scope: !8053, file: !8053, line: 40, type: !8054, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3687, retainedNodes: !8056)
!8053 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8054 = !DISubroutineType(types: !8055)
!8055 = !{!32, !184, !32, !979, !32}
!8056 = !{!8057, !8058, !8059, !8060}
!8057 = !DILocalVariable(name: "to", arg: 1, scope: !8052, file: !8053, line: 40, type: !184)
!8058 = !DILocalVariable(name: "to_len", arg: 2, scope: !8052, file: !8053, line: 40, type: !32)
!8059 = !DILocalVariable(name: "from", arg: 3, scope: !8052, file: !8053, line: 41, type: !979)
!8060 = !DILocalVariable(name: "from_len", arg: 4, scope: !8052, file: !8053, line: 41, type: !32)
!8061 = !DILocation(line: 0, scope: !8052)
!8062 = !DILocation(line: 43, column: 15, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8052, file: !8053, line: 43, column: 6)
!8064 = !DILocation(line: 43, column: 6, scope: !8052)
!8065 = !DILocation(line: 44, column: 9, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8063, file: !8053, line: 43, column: 26)
!8067 = !DILocation(line: 45, column: 3, scope: !8066)
!8068 = !DILocation(line: 0, scope: !8063)
!8069 = !DILocation(line: 49, column: 1, scope: !8052)
!8070 = distinct !DISubprogram(name: "_set", scope: !8053, file: !8053, line: 51, type: !8071, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3687, retainedNodes: !8073)
!8071 = !DISubroutineType(types: !8072)
!8072 = !{null, !124, !150, !32}
!8073 = !{!8074, !8075, !8076}
!8074 = !DILocalVariable(name: "to", arg: 1, scope: !8070, file: !8053, line: 51, type: !124)
!8075 = !DILocalVariable(name: "val", arg: 2, scope: !8070, file: !8053, line: 51, type: !150)
!8076 = !DILocalVariable(name: "len", arg: 3, scope: !8070, file: !8053, line: 51, type: !32)
!8077 = !DILocation(line: 0, scope: !8070)
!8078 = !DILocation(line: 53, column: 19, scope: !8070)
!8079 = !DILocation(line: 53, column: 8, scope: !8070)
!8080 = !DILocation(line: 54, column: 1, scope: !8070)
!8081 = distinct !DISubprogram(name: "_double_byte", scope: !8053, file: !8053, line: 59, type: !8082, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3687, retainedNodes: !8084)
!8082 = !DISubroutineType(types: !8083)
!8083 = !{!150, !150}
!8084 = !{!8085}
!8085 = !DILocalVariable(name: "a", arg: 1, scope: !8081, file: !8053, line: 59, type: !150)
!8086 = !DILocation(line: 0, scope: !8081)
!8087 = !DILocation(line: 61, column: 12, scope: !8081)
!8088 = !DILocation(line: 61, column: 27, scope: !8081)
!8089 = !DILocation(line: 61, column: 17, scope: !8081)
!8090 = !DILocation(line: 61, column: 2, scope: !8081)
!8091 = distinct !DISubprogram(name: "_compare", scope: !8053, file: !8053, line: 64, type: !8092, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3687, retainedNodes: !8094)
!8092 = !DISubroutineType(types: !8093)
!8093 = !{!125, !979, !979, !272}
!8094 = !{!8095, !8096, !8097, !8098, !8099, !8100, !8101}
!8095 = !DILocalVariable(name: "a", arg: 1, scope: !8091, file: !8053, line: 64, type: !979)
!8096 = !DILocalVariable(name: "b", arg: 2, scope: !8091, file: !8053, line: 64, type: !979)
!8097 = !DILocalVariable(name: "size", arg: 3, scope: !8091, file: !8053, line: 64, type: !272)
!8098 = !DILocalVariable(name: "tempa", scope: !8091, file: !8053, line: 66, type: !979)
!8099 = !DILocalVariable(name: "tempb", scope: !8091, file: !8053, line: 67, type: !979)
!8100 = !DILocalVariable(name: "result", scope: !8091, file: !8053, line: 68, type: !150)
!8101 = !DILocalVariable(name: "i", scope: !8102, file: !8053, line: 70, type: !32)
!8102 = distinct !DILexicalBlock(scope: !8091, file: !8053, line: 70, column: 2)
!8103 = !DILocation(line: 0, scope: !8091)
!8104 = !DILocation(line: 0, scope: !8102)
!8105 = !DILocation(line: 70, column: 29, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8102, file: !8053, line: 70, column: 2)
!8107 = !DILocation(line: 70, column: 2, scope: !8102)
!8108 = !DILocation(line: 73, column: 2, scope: !8091)
!8109 = !DILocation(line: 71, column: 13, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8106, file: !8053, line: 70, column: 42)
!8111 = !DILocation(line: 71, column: 24, scope: !8110)
!8112 = !DILocation(line: 71, column: 22, scope: !8110)
!8113 = !DILocation(line: 71, column: 10, scope: !8110)
!8114 = !DILocation(line: 70, column: 38, scope: !8106)
!8115 = distinct !{!8115, !8107, !8116}
!8116 = !DILocation(line: 72, column: 2, scope: !8102)
!8117 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !990, file: !990, line: 62, type: !8118, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !8120)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!125, !980, !979}
!8120 = !{!8121, !8122}
!8121 = !DILocalVariable(name: "s", arg: 1, scope: !8117, file: !990, line: 62, type: !980)
!8122 = !DILocalVariable(name: "k", arg: 2, scope: !8117, file: !990, line: 62, type: !979)
!8123 = !DILocation(line: 0, scope: !8117)
!8124 = !DILocation(line: 64, column: 9, scope: !8117)
!8125 = !DILocation(line: 64, column: 2, scope: !8117)
!8126 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !990, file: !990, line: 129, type: !8127, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !8130)
!8127 = !DISubroutineType(types: !8128)
!8128 = !{!125, !184, !979, !8129}
!8129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!8130 = !{!8131, !8132, !8133, !8134, !8135}
!8131 = !DILocalVariable(name: "out", arg: 1, scope: !8126, file: !990, line: 129, type: !184)
!8132 = !DILocalVariable(name: "in", arg: 2, scope: !8126, file: !990, line: 129, type: !979)
!8133 = !DILocalVariable(name: "s", arg: 3, scope: !8126, file: !990, line: 129, type: !8129)
!8134 = !DILocalVariable(name: "state", scope: !8126, file: !990, line: 131, type: !311)
!8135 = !DILocalVariable(name: "i", scope: !8126, file: !990, line: 132, type: !32)
!8136 = !DILocation(line: 0, scope: !8126)
!8137 = !DILocation(line: 131, column: 2, scope: !8126)
!8138 = !DILocation(line: 131, column: 10, scope: !8126)
!8139 = !DILocation(line: 134, column: 10, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8126, file: !990, line: 134, column: 6)
!8141 = !DILocation(line: 134, column: 6, scope: !8126)
!8142 = !DILocation(line: 142, column: 8, scope: !8126)
!8143 = !DILocation(line: 144, column: 32, scope: !8126)
!8144 = !DILocation(line: 144, column: 2, scope: !8126)
!8145 = !DILocation(line: 146, column: 2, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8126, file: !990, line: 146, column: 2)
!8147 = !DILocation(line: 147, column: 3, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !990, line: 146, column: 31)
!8149 = distinct !DILexicalBlock(scope: !8146, file: !990, line: 146, column: 2)
!8150 = !DILocation(line: 148, column: 3, scope: !8148)
!8151 = !DILocation(line: 149, column: 37, scope: !8148)
!8152 = !DILocation(line: 149, column: 33, scope: !8148)
!8153 = !DILocation(line: 149, column: 3, scope: !8148)
!8154 = !DILocation(line: 150, column: 3, scope: !8148)
!8155 = !DILocation(line: 146, column: 26, scope: !8149)
!8156 = !DILocation(line: 146, column: 21, scope: !8149)
!8157 = distinct !{!8157, !8145, !8158}
!8158 = !DILocation(line: 151, column: 2, scope: !8146)
!8159 = !DILocation(line: 144, column: 23, scope: !8126)
!8160 = !DILocation(line: 153, column: 2, scope: !8126)
!8161 = !DILocation(line: 154, column: 2, scope: !8126)
!8162 = !DILocation(line: 155, column: 2, scope: !8126)
!8163 = !DILocation(line: 157, column: 8, scope: !8126)
!8164 = !DILocation(line: 160, column: 2, scope: !8126)
!8165 = !DILocation(line: 163, column: 2, scope: !8126)
!8166 = !DILocation(line: 164, column: 1, scope: !8126)
!8167 = distinct !DISubprogram(name: "add_round_key", scope: !990, file: !990, line: 92, type: !8168, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !8171)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{null, !184, !8170}
!8170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 32)
!8171 = !{!8172, !8173}
!8172 = !DILocalVariable(name: "s", arg: 1, scope: !8167, file: !990, line: 92, type: !184)
!8173 = !DILocalVariable(name: "k", arg: 2, scope: !8167, file: !990, line: 92, type: !8170)
!8174 = !DILocation(line: 0, scope: !8167)
!8175 = !DILocation(line: 94, column: 20, scope: !8167)
!8176 = !DILocation(line: 94, column: 25, scope: !8167)
!8177 = !DILocation(line: 94, column: 7, scope: !8167)
!8178 = !DILocation(line: 94, column: 51, scope: !8167)
!8179 = !DILocation(line: 94, column: 56, scope: !8167)
!8180 = !DILocation(line: 94, column: 33, scope: !8167)
!8181 = !DILocation(line: 94, column: 38, scope: !8167)
!8182 = !DILocation(line: 95, column: 20, scope: !8167)
!8183 = !DILocation(line: 95, column: 25, scope: !8167)
!8184 = !DILocation(line: 95, column: 2, scope: !8167)
!8185 = !DILocation(line: 95, column: 7, scope: !8167)
!8186 = !DILocation(line: 95, column: 50, scope: !8167)
!8187 = !DILocation(line: 95, column: 32, scope: !8167)
!8188 = !DILocation(line: 95, column: 37, scope: !8167)
!8189 = !DILocation(line: 96, column: 20, scope: !8167)
!8190 = !DILocation(line: 96, column: 25, scope: !8167)
!8191 = !DILocation(line: 96, column: 2, scope: !8167)
!8192 = !DILocation(line: 96, column: 7, scope: !8167)
!8193 = !DILocation(line: 96, column: 51, scope: !8167)
!8194 = !DILocation(line: 96, column: 56, scope: !8167)
!8195 = !DILocation(line: 96, column: 33, scope: !8167)
!8196 = !DILocation(line: 96, column: 38, scope: !8167)
!8197 = !DILocation(line: 97, column: 20, scope: !8167)
!8198 = !DILocation(line: 97, column: 25, scope: !8167)
!8199 = !DILocation(line: 97, column: 2, scope: !8167)
!8200 = !DILocation(line: 97, column: 7, scope: !8167)
!8201 = !DILocation(line: 97, column: 50, scope: !8167)
!8202 = !DILocation(line: 97, column: 32, scope: !8167)
!8203 = !DILocation(line: 97, column: 37, scope: !8167)
!8204 = !DILocation(line: 98, column: 20, scope: !8167)
!8205 = !DILocation(line: 98, column: 25, scope: !8167)
!8206 = !DILocation(line: 98, column: 2, scope: !8167)
!8207 = !DILocation(line: 98, column: 7, scope: !8167)
!8208 = !DILocation(line: 98, column: 51, scope: !8167)
!8209 = !DILocation(line: 98, column: 56, scope: !8167)
!8210 = !DILocation(line: 98, column: 33, scope: !8167)
!8211 = !DILocation(line: 98, column: 38, scope: !8167)
!8212 = !DILocation(line: 99, column: 21, scope: !8167)
!8213 = !DILocation(line: 99, column: 26, scope: !8167)
!8214 = !DILocation(line: 99, column: 2, scope: !8167)
!8215 = !DILocation(line: 99, column: 8, scope: !8167)
!8216 = !DILocation(line: 99, column: 52, scope: !8167)
!8217 = !DILocation(line: 99, column: 33, scope: !8167)
!8218 = !DILocation(line: 99, column: 39, scope: !8167)
!8219 = !DILocation(line: 100, column: 21, scope: !8167)
!8220 = !DILocation(line: 100, column: 26, scope: !8167)
!8221 = !DILocation(line: 100, column: 2, scope: !8167)
!8222 = !DILocation(line: 100, column: 8, scope: !8167)
!8223 = !DILocation(line: 100, column: 53, scope: !8167)
!8224 = !DILocation(line: 100, column: 58, scope: !8167)
!8225 = !DILocation(line: 100, column: 34, scope: !8167)
!8226 = !DILocation(line: 100, column: 40, scope: !8167)
!8227 = !DILocation(line: 101, column: 21, scope: !8167)
!8228 = !DILocation(line: 101, column: 26, scope: !8167)
!8229 = !DILocation(line: 101, column: 2, scope: !8167)
!8230 = !DILocation(line: 101, column: 8, scope: !8167)
!8231 = !DILocation(line: 101, column: 52, scope: !8167)
!8232 = !DILocation(line: 101, column: 33, scope: !8167)
!8233 = !DILocation(line: 101, column: 39, scope: !8167)
!8234 = !DILocation(line: 102, column: 1, scope: !8167)
!8235 = distinct !DISubprogram(name: "inv_shift_rows", scope: !990, file: !990, line: 118, type: !8236, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !8238)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{null, !184}
!8238 = !{!8239, !8240}
!8239 = !DILocalVariable(name: "s", arg: 1, scope: !8235, file: !990, line: 118, type: !184)
!8240 = !DILocalVariable(name: "t", scope: !8235, file: !990, line: 120, type: !311)
!8241 = !DILocation(line: 0, scope: !8235)
!8242 = !DILocation(line: 120, column: 2, scope: !8235)
!8243 = !DILocation(line: 120, column: 10, scope: !8235)
!8244 = !DILocation(line: 122, column: 10, scope: !8235)
!8245 = !DILocation(line: 122, column: 8, scope: !8235)
!8246 = !DILocation(line: 122, column: 23, scope: !8235)
!8247 = !DILocation(line: 122, column: 16, scope: !8235)
!8248 = !DILocation(line: 122, column: 21, scope: !8235)
!8249 = !DILocation(line: 122, column: 37, scope: !8235)
!8250 = !DILocation(line: 122, column: 30, scope: !8235)
!8251 = !DILocation(line: 122, column: 35, scope: !8235)
!8252 = !DILocation(line: 122, column: 51, scope: !8235)
!8253 = !DILocation(line: 122, column: 44, scope: !8235)
!8254 = !DILocation(line: 122, column: 49, scope: !8235)
!8255 = !DILocation(line: 123, column: 10, scope: !8235)
!8256 = !DILocation(line: 123, column: 2, scope: !8235)
!8257 = !DILocation(line: 123, column: 8, scope: !8235)
!8258 = !DILocation(line: 123, column: 23, scope: !8235)
!8259 = !DILocation(line: 123, column: 16, scope: !8235)
!8260 = !DILocation(line: 123, column: 21, scope: !8235)
!8261 = !DILocation(line: 123, column: 36, scope: !8235)
!8262 = !DILocation(line: 123, column: 29, scope: !8235)
!8263 = !DILocation(line: 123, column: 34, scope: !8235)
!8264 = !DILocation(line: 123, column: 50, scope: !8235)
!8265 = !DILocation(line: 123, column: 43, scope: !8235)
!8266 = !DILocation(line: 123, column: 48, scope: !8235)
!8267 = !DILocation(line: 124, column: 10, scope: !8235)
!8268 = !DILocation(line: 124, column: 2, scope: !8235)
!8269 = !DILocation(line: 124, column: 8, scope: !8235)
!8270 = !DILocation(line: 124, column: 23, scope: !8235)
!8271 = !DILocation(line: 124, column: 16, scope: !8235)
!8272 = !DILocation(line: 124, column: 21, scope: !8235)
!8273 = !DILocation(line: 124, column: 37, scope: !8235)
!8274 = !DILocation(line: 124, column: 29, scope: !8235)
!8275 = !DILocation(line: 124, column: 35, scope: !8235)
!8276 = !DILocation(line: 124, column: 51, scope: !8235)
!8277 = !DILocation(line: 124, column: 43, scope: !8235)
!8278 = !DILocation(line: 124, column: 49, scope: !8235)
!8279 = !DILocation(line: 125, column: 10, scope: !8235)
!8280 = !DILocation(line: 125, column: 2, scope: !8235)
!8281 = !DILocation(line: 125, column: 8, scope: !8235)
!8282 = !DILocation(line: 125, column: 25, scope: !8235)
!8283 = !DILocation(line: 125, column: 17, scope: !8235)
!8284 = !DILocation(line: 125, column: 23, scope: !8235)
!8285 = !DILocation(line: 125, column: 39, scope: !8235)
!8286 = !DILocation(line: 125, column: 31, scope: !8235)
!8287 = !DILocation(line: 125, column: 37, scope: !8235)
!8288 = !DILocation(line: 125, column: 53, scope: !8235)
!8289 = !DILocation(line: 125, column: 45, scope: !8235)
!8290 = !DILocation(line: 125, column: 51, scope: !8235)
!8291 = !DILocation(line: 126, column: 8, scope: !8235)
!8292 = !DILocation(line: 127, column: 1, scope: !8235)
!8293 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !990, file: !990, line: 104, type: !8236, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !8294)
!8294 = !{!8295, !8296}
!8295 = !DILocalVariable(name: "s", arg: 1, scope: !8293, file: !990, line: 104, type: !184)
!8296 = !DILocalVariable(name: "i", scope: !8293, file: !990, line: 106, type: !32)
!8297 = !DILocation(line: 0, scope: !8293)
!8298 = !DILocation(line: 108, column: 2, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8293, file: !990, line: 108, column: 2)
!8300 = !DILocation(line: 109, column: 19, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !990, line: 108, column: 32)
!8302 = distinct !DILexicalBlock(scope: !8299, file: !990, line: 108, column: 2)
!8303 = !DILocation(line: 109, column: 10, scope: !8301)
!8304 = !DILocation(line: 109, column: 8, scope: !8301)
!8305 = !DILocation(line: 108, column: 27, scope: !8302)
!8306 = !DILocation(line: 108, column: 16, scope: !8302)
!8307 = distinct !{!8307, !8298, !8308}
!8308 = !DILocation(line: 110, column: 2, scope: !8299)
!8309 = !DILocation(line: 111, column: 1, scope: !8293)
!8310 = distinct !DISubprogram(name: "inv_mix_columns", scope: !990, file: !990, line: 81, type: !8236, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !8311)
!8311 = !{!8312, !8313}
!8312 = !DILocalVariable(name: "s", arg: 1, scope: !8310, file: !990, line: 81, type: !184)
!8313 = !DILocalVariable(name: "t", scope: !8310, file: !990, line: 83, type: !311)
!8314 = !DILocation(line: 0, scope: !8310)
!8315 = !DILocation(line: 83, column: 2, scope: !8310)
!8316 = !DILocation(line: 83, column: 10, scope: !8310)
!8317 = !DILocation(line: 85, column: 2, scope: !8310)
!8318 = !DILocation(line: 86, column: 19, scope: !8310)
!8319 = !DILocation(line: 86, column: 27, scope: !8310)
!8320 = !DILocation(line: 86, column: 2, scope: !8310)
!8321 = !DILocation(line: 87, column: 19, scope: !8310)
!8322 = !DILocation(line: 87, column: 29, scope: !8310)
!8323 = !DILocation(line: 87, column: 2, scope: !8310)
!8324 = !DILocation(line: 88, column: 19, scope: !8310)
!8325 = !DILocation(line: 88, column: 29, scope: !8310)
!8326 = !DILocation(line: 88, column: 2, scope: !8310)
!8327 = !DILocation(line: 89, column: 8, scope: !8310)
!8328 = !DILocation(line: 90, column: 1, scope: !8310)
!8329 = distinct !DISubprogram(name: "mult_row_column", scope: !990, file: !990, line: 73, type: !8330, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !8332)
!8330 = !DISubroutineType(types: !8331)
!8331 = !{null, !184, !979}
!8332 = !{!8333, !8334}
!8333 = !DILocalVariable(name: "out", arg: 1, scope: !8329, file: !990, line: 73, type: !184)
!8334 = !DILocalVariable(name: "in", arg: 2, scope: !8329, file: !990, line: 73, type: !979)
!8335 = !DILocation(line: 0, scope: !8329)
!8336 = !DILocation(line: 75, column: 11, scope: !8329)
!8337 = !DILocation(line: 75, column: 26, scope: !8329)
!8338 = !DILocation(line: 75, column: 41, scope: !8329)
!8339 = !DILocation(line: 75, column: 56, scope: !8329)
!8340 = !DILocation(line: 75, column: 24, scope: !8329)
!8341 = !DILocation(line: 75, column: 39, scope: !8329)
!8342 = !DILocation(line: 75, column: 54, scope: !8329)
!8343 = !DILocation(line: 75, column: 9, scope: !8329)
!8344 = !DILocation(line: 76, column: 11, scope: !8329)
!8345 = !DILocation(line: 76, column: 26, scope: !8329)
!8346 = !DILocation(line: 76, column: 41, scope: !8329)
!8347 = !DILocation(line: 76, column: 56, scope: !8329)
!8348 = !DILocation(line: 76, column: 24, scope: !8329)
!8349 = !DILocation(line: 76, column: 39, scope: !8329)
!8350 = !DILocation(line: 76, column: 54, scope: !8329)
!8351 = !DILocation(line: 76, column: 2, scope: !8329)
!8352 = !DILocation(line: 76, column: 9, scope: !8329)
!8353 = !DILocation(line: 77, column: 11, scope: !8329)
!8354 = !DILocation(line: 77, column: 26, scope: !8329)
!8355 = !DILocation(line: 77, column: 41, scope: !8329)
!8356 = !DILocation(line: 77, column: 56, scope: !8329)
!8357 = !DILocation(line: 77, column: 24, scope: !8329)
!8358 = !DILocation(line: 77, column: 39, scope: !8329)
!8359 = !DILocation(line: 77, column: 54, scope: !8329)
!8360 = !DILocation(line: 77, column: 2, scope: !8329)
!8361 = !DILocation(line: 77, column: 9, scope: !8329)
!8362 = !DILocation(line: 78, column: 11, scope: !8329)
!8363 = !DILocation(line: 78, column: 26, scope: !8329)
!8364 = !DILocation(line: 78, column: 41, scope: !8329)
!8365 = !DILocation(line: 78, column: 56, scope: !8329)
!8366 = !DILocation(line: 78, column: 24, scope: !8329)
!8367 = !DILocation(line: 78, column: 39, scope: !8329)
!8368 = !DILocation(line: 78, column: 54, scope: !8329)
!8369 = !DILocation(line: 78, column: 2, scope: !8329)
!8370 = !DILocation(line: 78, column: 9, scope: !8329)
!8371 = !DILocation(line: 79, column: 1, scope: !8329)
!8372 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !1005, file: !1005, line: 70, type: !8373, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8375)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!125, !999, !979}
!8375 = !{!8376, !8377, !8378, !8382, !8383}
!8376 = !DILocalVariable(name: "s", arg: 1, scope: !8372, file: !1005, line: 70, type: !999)
!8377 = !DILocalVariable(name: "k", arg: 2, scope: !8372, file: !1005, line: 70, type: !979)
!8378 = !DILocalVariable(name: "rconst", scope: !8372, file: !1005, line: 72, type: !8379)
!8379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6639, size: 352, elements: !8380)
!8380 = !{!8381}
!8381 = !DISubrange(count: 11)
!8382 = !DILocalVariable(name: "i", scope: !8372, file: !1005, line: 76, type: !32)
!8383 = !DILocalVariable(name: "t", scope: !8372, file: !1005, line: 77, type: !32)
!8384 = !DILocation(line: 0, scope: !8372)
!8385 = !DILocation(line: 72, column: 21, scope: !8372)
!8386 = !DILocation(line: 79, column: 8, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8372, file: !1005, line: 79, column: 6)
!8388 = !DILocation(line: 79, column: 6, scope: !8372)
!8389 = !DILocation(line: 91, column: 7, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !1005, line: 90, column: 35)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !1005, line: 90, column: 2)
!8392 = distinct !DILexicalBlock(scope: !8372, file: !1005, line: 90, column: 2)
!8393 = !DILocation(line: 90, column: 2, scope: !8392)
!8394 = !DILocation(line: 86, column: 22, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !1005, line: 85, column: 27)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !1005, line: 85, column: 2)
!8397 = distinct !DILexicalBlock(scope: !8372, file: !1005, line: 85, column: 2)
!8398 = !DILocation(line: 86, column: 18, scope: !8395)
!8399 = !DILocation(line: 86, column: 25, scope: !8395)
!8400 = !DILocation(line: 86, column: 40, scope: !8395)
!8401 = !DILocation(line: 86, column: 34, scope: !8395)
!8402 = !DILocation(line: 86, column: 43, scope: !8395)
!8403 = !DILocation(line: 86, column: 31, scope: !8395)
!8404 = !DILocation(line: 87, column: 17, scope: !8395)
!8405 = !DILocation(line: 87, column: 11, scope: !8395)
!8406 = !DILocation(line: 87, column: 20, scope: !8395)
!8407 = !DILocation(line: 86, column: 49, scope: !8395)
!8408 = !DILocation(line: 87, column: 34, scope: !8395)
!8409 = !DILocation(line: 87, column: 28, scope: !8395)
!8410 = !DILocation(line: 87, column: 27, scope: !8395)
!8411 = !DILocation(line: 87, column: 25, scope: !8395)
!8412 = !DILocation(line: 86, column: 3, scope: !8395)
!8413 = !DILocation(line: 86, column: 15, scope: !8395)
!8414 = !DILocation(line: 85, column: 22, scope: !8396)
!8415 = !DILocation(line: 85, column: 16, scope: !8396)
!8416 = !DILocation(line: 85, column: 2, scope: !8397)
!8417 = distinct !{!8417, !8416, !8418}
!8418 = !DILocation(line: 88, column: 2, scope: !8397)
!8419 = !DILocation(line: 92, column: 10, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8390, file: !1005, line: 92, column: 7)
!8421 = !DILocation(line: 92, column: 16, scope: !8420)
!8422 = !DILocation(line: 92, column: 7, scope: !8390)
!8423 = !DILocation(line: 93, column: 8, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8420, file: !1005, line: 92, column: 22)
!8425 = !DILocation(line: 93, column: 38, scope: !8424)
!8426 = !DILocation(line: 93, column: 30, scope: !8424)
!8427 = !DILocation(line: 93, column: 28, scope: !8424)
!8428 = !DILocation(line: 94, column: 3, scope: !8424)
!8429 = !DILocation(line: 0, scope: !8390)
!8430 = !DILocation(line: 95, column: 27, scope: !8390)
!8431 = !DILocation(line: 95, column: 17, scope: !8390)
!8432 = !DILocation(line: 95, column: 32, scope: !8390)
!8433 = !DILocation(line: 95, column: 3, scope: !8390)
!8434 = !DILocation(line: 95, column: 15, scope: !8390)
!8435 = !DILocation(line: 90, column: 30, scope: !8391)
!8436 = !DILocation(line: 90, column: 11, scope: !8391)
!8437 = distinct !{!8437, !8393, !8438}
!8438 = !DILocation(line: 96, column: 2, scope: !8392)
!8439 = !DILocation(line: 99, column: 1, scope: !8372)
!8440 = distinct !DISubprogram(name: "rotword", scope: !1005, file: !1005, line: 62, type: !8441, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8443)
!8441 = !DISubroutineType(types: !8442)
!8442 = !{!32, !32}
!8443 = !{!8444}
!8444 = !DILocalVariable(name: "a", arg: 1, scope: !8440, file: !1005, line: 62, type: !32)
!8445 = !DILocation(line: 0, scope: !8440)
!8446 = !DILocation(line: 64, column: 21, scope: !8440)
!8447 = !DILocation(line: 64, column: 2, scope: !8440)
!8448 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !1005, file: !1005, line: 158, type: !8449, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8452)
!8449 = !DISubroutineType(types: !8450)
!8450 = !{!125, !184, !979, !8451}
!8451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!8452 = !{!8453, !8454, !8455, !8456, !8457}
!8453 = !DILocalVariable(name: "out", arg: 1, scope: !8448, file: !1005, line: 158, type: !184)
!8454 = !DILocalVariable(name: "in", arg: 2, scope: !8448, file: !1005, line: 158, type: !979)
!8455 = !DILocalVariable(name: "s", arg: 3, scope: !8448, file: !1005, line: 158, type: !8451)
!8456 = !DILocalVariable(name: "state", scope: !8448, file: !1005, line: 160, type: !311)
!8457 = !DILocalVariable(name: "i", scope: !8448, file: !1005, line: 161, type: !32)
!8458 = !DILocation(line: 0, scope: !8448)
!8459 = !DILocation(line: 160, column: 2, scope: !8448)
!8460 = !DILocation(line: 160, column: 10, scope: !8448)
!8461 = !DILocation(line: 163, column: 10, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8448, file: !1005, line: 163, column: 6)
!8463 = !DILocation(line: 163, column: 6, scope: !8448)
!8464 = !DILocation(line: 171, column: 8, scope: !8448)
!8465 = !DILocation(line: 172, column: 23, scope: !8448)
!8466 = !DILocation(line: 172, column: 2, scope: !8448)
!8467 = !DILocation(line: 174, column: 2, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8448, file: !1005, line: 174, column: 2)
!8469 = !DILocation(line: 175, column: 3, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !1005, line: 174, column: 33)
!8471 = distinct !DILexicalBlock(scope: !8468, file: !1005, line: 174, column: 2)
!8472 = !DILocation(line: 176, column: 3, scope: !8470)
!8473 = !DILocation(line: 177, column: 3, scope: !8470)
!8474 = !DILocation(line: 178, column: 40, scope: !8470)
!8475 = !DILocation(line: 178, column: 37, scope: !8470)
!8476 = !DILocation(line: 178, column: 33, scope: !8470)
!8477 = !DILocation(line: 178, column: 3, scope: !8470)
!8478 = !DILocation(line: 174, column: 16, scope: !8471)
!8479 = distinct !{!8479, !8467, !8480}
!8480 = !DILocation(line: 179, column: 2, scope: !8468)
!8481 = !DILocation(line: 181, column: 2, scope: !8448)
!8482 = !DILocation(line: 182, column: 2, scope: !8448)
!8483 = !DILocation(line: 183, column: 32, scope: !8448)
!8484 = !DILocation(line: 183, column: 2, scope: !8448)
!8485 = !DILocation(line: 185, column: 8, scope: !8448)
!8486 = !DILocation(line: 188, column: 2, scope: !8448)
!8487 = !DILocation(line: 190, column: 2, scope: !8448)
!8488 = !DILocation(line: 191, column: 1, scope: !8448)
!8489 = distinct !DISubprogram(name: "add_round_key", scope: !1005, file: !1005, line: 101, type: !8168, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8490)
!8490 = !{!8491, !8492}
!8491 = !DILocalVariable(name: "s", arg: 1, scope: !8489, file: !1005, line: 101, type: !184)
!8492 = !DILocalVariable(name: "k", arg: 2, scope: !8489, file: !1005, line: 101, type: !8170)
!8493 = !DILocation(line: 0, scope: !8489)
!8494 = !DILocation(line: 103, column: 20, scope: !8489)
!8495 = !DILocation(line: 103, column: 25, scope: !8489)
!8496 = !DILocation(line: 103, column: 7, scope: !8489)
!8497 = !DILocation(line: 103, column: 51, scope: !8489)
!8498 = !DILocation(line: 103, column: 56, scope: !8489)
!8499 = !DILocation(line: 103, column: 33, scope: !8489)
!8500 = !DILocation(line: 103, column: 38, scope: !8489)
!8501 = !DILocation(line: 104, column: 20, scope: !8489)
!8502 = !DILocation(line: 104, column: 25, scope: !8489)
!8503 = !DILocation(line: 104, column: 2, scope: !8489)
!8504 = !DILocation(line: 104, column: 7, scope: !8489)
!8505 = !DILocation(line: 104, column: 50, scope: !8489)
!8506 = !DILocation(line: 104, column: 32, scope: !8489)
!8507 = !DILocation(line: 104, column: 37, scope: !8489)
!8508 = !DILocation(line: 105, column: 20, scope: !8489)
!8509 = !DILocation(line: 105, column: 25, scope: !8489)
!8510 = !DILocation(line: 105, column: 2, scope: !8489)
!8511 = !DILocation(line: 105, column: 7, scope: !8489)
!8512 = !DILocation(line: 105, column: 51, scope: !8489)
!8513 = !DILocation(line: 105, column: 56, scope: !8489)
!8514 = !DILocation(line: 105, column: 33, scope: !8489)
!8515 = !DILocation(line: 105, column: 38, scope: !8489)
!8516 = !DILocation(line: 106, column: 20, scope: !8489)
!8517 = !DILocation(line: 106, column: 25, scope: !8489)
!8518 = !DILocation(line: 106, column: 2, scope: !8489)
!8519 = !DILocation(line: 106, column: 7, scope: !8489)
!8520 = !DILocation(line: 106, column: 50, scope: !8489)
!8521 = !DILocation(line: 106, column: 32, scope: !8489)
!8522 = !DILocation(line: 106, column: 37, scope: !8489)
!8523 = !DILocation(line: 107, column: 20, scope: !8489)
!8524 = !DILocation(line: 107, column: 25, scope: !8489)
!8525 = !DILocation(line: 107, column: 2, scope: !8489)
!8526 = !DILocation(line: 107, column: 7, scope: !8489)
!8527 = !DILocation(line: 107, column: 51, scope: !8489)
!8528 = !DILocation(line: 107, column: 56, scope: !8489)
!8529 = !DILocation(line: 107, column: 33, scope: !8489)
!8530 = !DILocation(line: 107, column: 38, scope: !8489)
!8531 = !DILocation(line: 108, column: 21, scope: !8489)
!8532 = !DILocation(line: 108, column: 26, scope: !8489)
!8533 = !DILocation(line: 108, column: 2, scope: !8489)
!8534 = !DILocation(line: 108, column: 8, scope: !8489)
!8535 = !DILocation(line: 108, column: 52, scope: !8489)
!8536 = !DILocation(line: 108, column: 33, scope: !8489)
!8537 = !DILocation(line: 108, column: 39, scope: !8489)
!8538 = !DILocation(line: 109, column: 21, scope: !8489)
!8539 = !DILocation(line: 109, column: 26, scope: !8489)
!8540 = !DILocation(line: 109, column: 2, scope: !8489)
!8541 = !DILocation(line: 109, column: 8, scope: !8489)
!8542 = !DILocation(line: 109, column: 53, scope: !8489)
!8543 = !DILocation(line: 109, column: 58, scope: !8489)
!8544 = !DILocation(line: 109, column: 34, scope: !8489)
!8545 = !DILocation(line: 109, column: 40, scope: !8489)
!8546 = !DILocation(line: 110, column: 21, scope: !8489)
!8547 = !DILocation(line: 110, column: 26, scope: !8489)
!8548 = !DILocation(line: 110, column: 2, scope: !8489)
!8549 = !DILocation(line: 110, column: 8, scope: !8489)
!8550 = !DILocation(line: 110, column: 52, scope: !8489)
!8551 = !DILocation(line: 110, column: 33, scope: !8489)
!8552 = !DILocation(line: 110, column: 39, scope: !8489)
!8553 = !DILocation(line: 111, column: 1, scope: !8489)
!8554 = distinct !DISubprogram(name: "sub_bytes", scope: !1005, file: !1005, line: 113, type: !8236, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8555)
!8555 = !{!8556, !8557}
!8556 = !DILocalVariable(name: "s", arg: 1, scope: !8554, file: !1005, line: 113, type: !184)
!8557 = !DILocalVariable(name: "i", scope: !8554, file: !1005, line: 115, type: !32)
!8558 = !DILocation(line: 0, scope: !8554)
!8559 = !DILocation(line: 117, column: 2, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8554, file: !1005, line: 117, column: 2)
!8561 = !DILocation(line: 118, column: 15, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !1005, line: 117, column: 34)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !1005, line: 117, column: 2)
!8564 = !DILocation(line: 118, column: 10, scope: !8562)
!8565 = !DILocation(line: 118, column: 8, scope: !8562)
!8566 = !DILocation(line: 117, column: 29, scope: !8563)
!8567 = !DILocation(line: 117, column: 16, scope: !8563)
!8568 = distinct !{!8568, !8559, !8569}
!8569 = !DILocation(line: 119, column: 2, scope: !8560)
!8570 = !DILocation(line: 120, column: 1, scope: !8554)
!8571 = distinct !DISubprogram(name: "shift_rows", scope: !1005, file: !1005, line: 147, type: !8236, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8572)
!8572 = !{!8573, !8574}
!8573 = !DILocalVariable(name: "s", arg: 1, scope: !8571, file: !1005, line: 147, type: !184)
!8574 = !DILocalVariable(name: "t", scope: !8571, file: !1005, line: 149, type: !311)
!8575 = !DILocation(line: 0, scope: !8571)
!8576 = !DILocation(line: 149, column: 2, scope: !8571)
!8577 = !DILocation(line: 149, column: 10, scope: !8571)
!8578 = !DILocation(line: 151, column: 10, scope: !8571)
!8579 = !DILocation(line: 151, column: 8, scope: !8571)
!8580 = !DILocation(line: 151, column: 23, scope: !8571)
!8581 = !DILocation(line: 151, column: 16, scope: !8571)
!8582 = !DILocation(line: 151, column: 21, scope: !8571)
!8583 = !DILocation(line: 151, column: 36, scope: !8571)
!8584 = !DILocation(line: 151, column: 29, scope: !8571)
!8585 = !DILocation(line: 151, column: 34, scope: !8571)
!8586 = !DILocation(line: 151, column: 50, scope: !8571)
!8587 = !DILocation(line: 151, column: 43, scope: !8571)
!8588 = !DILocation(line: 151, column: 48, scope: !8571)
!8589 = !DILocation(line: 152, column: 10, scope: !8571)
!8590 = !DILocation(line: 152, column: 2, scope: !8571)
!8591 = !DILocation(line: 152, column: 8, scope: !8571)
!8592 = !DILocation(line: 152, column: 23, scope: !8571)
!8593 = !DILocation(line: 152, column: 16, scope: !8571)
!8594 = !DILocation(line: 152, column: 21, scope: !8571)
!8595 = !DILocation(line: 152, column: 36, scope: !8571)
!8596 = !DILocation(line: 152, column: 29, scope: !8571)
!8597 = !DILocation(line: 152, column: 34, scope: !8571)
!8598 = !DILocation(line: 152, column: 50, scope: !8571)
!8599 = !DILocation(line: 152, column: 43, scope: !8571)
!8600 = !DILocation(line: 152, column: 48, scope: !8571)
!8601 = !DILocation(line: 153, column: 10, scope: !8571)
!8602 = !DILocation(line: 153, column: 2, scope: !8571)
!8603 = !DILocation(line: 153, column: 8, scope: !8571)
!8604 = !DILocation(line: 153, column: 23, scope: !8571)
!8605 = !DILocation(line: 153, column: 16, scope: !8571)
!8606 = !DILocation(line: 153, column: 21, scope: !8571)
!8607 = !DILocation(line: 153, column: 38, scope: !8571)
!8608 = !DILocation(line: 153, column: 30, scope: !8571)
!8609 = !DILocation(line: 153, column: 36, scope: !8571)
!8610 = !DILocation(line: 153, column: 52, scope: !8571)
!8611 = !DILocation(line: 153, column: 44, scope: !8571)
!8612 = !DILocation(line: 153, column: 50, scope: !8571)
!8613 = !DILocation(line: 154, column: 10, scope: !8571)
!8614 = !DILocation(line: 154, column: 2, scope: !8571)
!8615 = !DILocation(line: 154, column: 8, scope: !8571)
!8616 = !DILocation(line: 154, column: 25, scope: !8571)
!8617 = !DILocation(line: 154, column: 17, scope: !8571)
!8618 = !DILocation(line: 154, column: 23, scope: !8571)
!8619 = !DILocation(line: 154, column: 39, scope: !8571)
!8620 = !DILocation(line: 154, column: 31, scope: !8571)
!8621 = !DILocation(line: 154, column: 37, scope: !8571)
!8622 = !DILocation(line: 154, column: 53, scope: !8571)
!8623 = !DILocation(line: 154, column: 45, scope: !8571)
!8624 = !DILocation(line: 154, column: 51, scope: !8571)
!8625 = !DILocation(line: 155, column: 9, scope: !8571)
!8626 = !DILocation(line: 156, column: 1, scope: !8571)
!8627 = distinct !DISubprogram(name: "mix_columns", scope: !1005, file: !1005, line: 132, type: !8236, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8628)
!8628 = !{!8629, !8630}
!8629 = !DILocalVariable(name: "s", arg: 1, scope: !8627, file: !1005, line: 132, type: !184)
!8630 = !DILocalVariable(name: "t", scope: !8627, file: !1005, line: 134, type: !311)
!8631 = !DILocation(line: 0, scope: !8627)
!8632 = !DILocation(line: 134, column: 2, scope: !8627)
!8633 = !DILocation(line: 134, column: 10, scope: !8627)
!8634 = !DILocation(line: 136, column: 2, scope: !8627)
!8635 = !DILocation(line: 137, column: 19, scope: !8627)
!8636 = !DILocation(line: 137, column: 27, scope: !8627)
!8637 = !DILocation(line: 137, column: 2, scope: !8627)
!8638 = !DILocation(line: 138, column: 19, scope: !8627)
!8639 = !DILocation(line: 138, column: 32, scope: !8627)
!8640 = !DILocation(line: 138, column: 2, scope: !8627)
!8641 = !DILocation(line: 139, column: 19, scope: !8627)
!8642 = !DILocation(line: 139, column: 32, scope: !8627)
!8643 = !DILocation(line: 139, column: 2, scope: !8627)
!8644 = !DILocation(line: 140, column: 9, scope: !8627)
!8645 = !DILocation(line: 141, column: 1, scope: !8627)
!8646 = distinct !DISubprogram(name: "mult_row_column", scope: !1005, file: !1005, line: 124, type: !8330, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !8647)
!8647 = !{!8648, !8649}
!8648 = !DILocalVariable(name: "out", arg: 1, scope: !8646, file: !1005, line: 124, type: !184)
!8649 = !DILocalVariable(name: "in", arg: 2, scope: !8646, file: !1005, line: 124, type: !979)
!8650 = !DILocation(line: 0, scope: !8646)
!8651 = !DILocation(line: 126, column: 24, scope: !8646)
!8652 = !DILocation(line: 126, column: 11, scope: !8646)
!8653 = !DILocation(line: 126, column: 33, scope: !8646)
!8654 = !DILocation(line: 126, column: 49, scope: !8646)
!8655 = !DILocation(line: 126, column: 57, scope: !8646)
!8656 = !DILocation(line: 126, column: 31, scope: !8646)
!8657 = !DILocation(line: 126, column: 47, scope: !8646)
!8658 = !DILocation(line: 126, column: 55, scope: !8646)
!8659 = !DILocation(line: 126, column: 9, scope: !8646)
!8660 = !DILocation(line: 127, column: 11, scope: !8646)
!8661 = !DILocation(line: 127, column: 32, scope: !8646)
!8662 = !DILocation(line: 127, column: 19, scope: !8646)
!8663 = !DILocation(line: 127, column: 41, scope: !8646)
!8664 = !DILocation(line: 127, column: 57, scope: !8646)
!8665 = !DILocation(line: 127, column: 17, scope: !8646)
!8666 = !DILocation(line: 127, column: 39, scope: !8646)
!8667 = !DILocation(line: 127, column: 55, scope: !8646)
!8668 = !DILocation(line: 127, column: 2, scope: !8646)
!8669 = !DILocation(line: 127, column: 9, scope: !8646)
!8670 = !DILocation(line: 128, column: 11, scope: !8646)
!8671 = !DILocation(line: 128, column: 19, scope: !8646)
!8672 = !DILocation(line: 128, column: 40, scope: !8646)
!8673 = !DILocation(line: 128, column: 27, scope: !8646)
!8674 = !DILocation(line: 128, column: 49, scope: !8646)
!8675 = !DILocation(line: 128, column: 17, scope: !8646)
!8676 = !DILocation(line: 128, column: 25, scope: !8646)
!8677 = !DILocation(line: 128, column: 47, scope: !8646)
!8678 = !DILocation(line: 128, column: 2, scope: !8646)
!8679 = !DILocation(line: 128, column: 9, scope: !8646)
!8680 = !DILocation(line: 129, column: 11, scope: !8646)
!8681 = !DILocation(line: 129, column: 27, scope: !8646)
!8682 = !DILocation(line: 129, column: 25, scope: !8646)
!8683 = !DILocation(line: 129, column: 35, scope: !8646)
!8684 = !DILocation(line: 129, column: 33, scope: !8646)
!8685 = !DILocation(line: 129, column: 56, scope: !8646)
!8686 = !DILocation(line: 129, column: 43, scope: !8646)
!8687 = !DILocation(line: 129, column: 41, scope: !8646)
!8688 = !DILocation(line: 129, column: 2, scope: !8646)
!8689 = !DILocation(line: 129, column: 9, scope: !8646)
!8690 = !DILocation(line: 130, column: 1, scope: !8646)
!8691 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !8692, file: !8692, line: 37, type: !8693, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3689, retainedNodes: !8696)
!8692 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8693 = !DISubroutineType(types: !8694)
!8694 = !{!125, !184, !32, !979, !32, !979, !8695}
!8695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3692)
!8696 = !{!8697, !8698, !8699, !8700, !8701, !8702, !8703, !8704, !8705}
!8697 = !DILocalVariable(name: "out", arg: 1, scope: !8691, file: !8692, line: 37, type: !184)
!8698 = !DILocalVariable(name: "outlen", arg: 2, scope: !8691, file: !8692, line: 37, type: !32)
!8699 = !DILocalVariable(name: "in", arg: 3, scope: !8691, file: !8692, line: 37, type: !979)
!8700 = !DILocalVariable(name: "inlen", arg: 4, scope: !8691, file: !8692, line: 38, type: !32)
!8701 = !DILocalVariable(name: "iv", arg: 5, scope: !8691, file: !8692, line: 38, type: !979)
!8702 = !DILocalVariable(name: "sched", arg: 6, scope: !8691, file: !8692, line: 39, type: !8695)
!8703 = !DILocalVariable(name: "buffer", scope: !8691, file: !8692, line: 42, type: !311)
!8704 = !DILocalVariable(name: "n", scope: !8691, file: !8692, line: 43, type: !32)
!8705 = !DILocalVariable(name: "m", scope: !8691, file: !8692, line: 43, type: !32)
!8706 = !DILocation(line: 0, scope: !8691)
!8707 = !DILocation(line: 42, column: 2, scope: !8691)
!8708 = !DILocation(line: 42, column: 10, scope: !8691)
!8709 = !DILocation(line: 46, column: 10, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8691, file: !8692, line: 46, column: 6)
!8711 = !DILocation(line: 46, column: 27, scope: !8710)
!8712 = !DILocation(line: 58, column: 8, scope: !8691)
!8713 = !DILocation(line: 60, column: 8, scope: !8691)
!8714 = !DILocation(line: 63, column: 2, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8691, file: !8692, line: 63, column: 2)
!8716 = !DILocation(line: 61, column: 6, scope: !8691)
!8717 = !DILocation(line: 64, column: 21, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !8692, line: 63, column: 34)
!8719 = distinct !DILexicalBlock(scope: !8715, file: !8692, line: 63, column: 2)
!8720 = !DILocation(line: 64, column: 18, scope: !8718)
!8721 = !DILocation(line: 64, column: 11, scope: !8718)
!8722 = !DILocation(line: 64, column: 3, scope: !8718)
!8723 = !DILocation(line: 64, column: 15, scope: !8718)
!8724 = !DILocation(line: 65, column: 9, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8718, file: !8692, line: 65, column: 7)
!8726 = !DILocation(line: 65, column: 7, scope: !8718)
!8727 = !DILocation(line: 66, column: 10, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8725, file: !8692, line: 65, column: 31)
!8729 = !DILocation(line: 67, column: 10, scope: !8728)
!8730 = !DILocation(line: 69, column: 8, scope: !8728)
!8731 = !DILocation(line: 71, column: 3, scope: !8728)
!8732 = !DILocation(line: 0, scope: !8718)
!8733 = !DILocation(line: 63, column: 29, scope: !8719)
!8734 = !DILocation(line: 63, column: 20, scope: !8719)
!8735 = distinct !{!8735, !8714, !8736}
!8736 = !DILocation(line: 72, column: 2, scope: !8715)
!8737 = !DILocation(line: 75, column: 1, scope: !8691)
!8738 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !8692, file: !8692, line: 77, type: !8693, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3689, retainedNodes: !8739)
!8739 = !{!8740, !8741, !8742, !8743, !8744, !8745, !8746, !8747, !8748, !8749}
!8740 = !DILocalVariable(name: "out", arg: 1, scope: !8738, file: !8692, line: 77, type: !184)
!8741 = !DILocalVariable(name: "outlen", arg: 2, scope: !8738, file: !8692, line: 77, type: !32)
!8742 = !DILocalVariable(name: "in", arg: 3, scope: !8738, file: !8692, line: 77, type: !979)
!8743 = !DILocalVariable(name: "inlen", arg: 4, scope: !8738, file: !8692, line: 78, type: !32)
!8744 = !DILocalVariable(name: "iv", arg: 5, scope: !8738, file: !8692, line: 78, type: !979)
!8745 = !DILocalVariable(name: "sched", arg: 6, scope: !8738, file: !8692, line: 79, type: !8695)
!8746 = !DILocalVariable(name: "buffer", scope: !8738, file: !8692, line: 82, type: !311)
!8747 = !DILocalVariable(name: "p", scope: !8738, file: !8692, line: 83, type: !979)
!8748 = !DILocalVariable(name: "n", scope: !8738, file: !8692, line: 84, type: !32)
!8749 = !DILocalVariable(name: "m", scope: !8738, file: !8692, line: 84, type: !32)
!8750 = !DILocation(line: 0, scope: !8738)
!8751 = !DILocation(line: 82, column: 2, scope: !8738)
!8752 = !DILocation(line: 82, column: 10, scope: !8738)
!8753 = !DILocation(line: 87, column: 10, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8738, file: !8692, line: 87, column: 6)
!8755 = !DILocation(line: 87, column: 27, scope: !8754)
!8756 = !DILocation(line: 105, column: 10, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8692, line: 105, column: 7)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !8692, line: 104, column: 35)
!8759 = distinct !DILexicalBlock(scope: !8760, file: !8692, line: 104, column: 2)
!8760 = distinct !DILexicalBlock(scope: !8738, file: !8692, line: 104, column: 2)
!8761 = !DILocation(line: 105, column: 31, scope: !8757)
!8762 = !DILocation(line: 105, column: 7, scope: !8758)
!8763 = !DILocation(line: 106, column: 10, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8757, file: !8692, line: 105, column: 37)
!8765 = !DILocation(line: 107, column: 7, scope: !8764)
!8766 = !DILocation(line: 109, column: 3, scope: !8764)
!8767 = !DILocation(line: 0, scope: !8760)
!8768 = !DILocation(line: 110, column: 20, scope: !8758)
!8769 = !DILocation(line: 110, column: 12, scope: !8758)
!8770 = !DILocation(line: 110, column: 28, scope: !8758)
!8771 = !DILocation(line: 110, column: 26, scope: !8758)
!8772 = !DILocation(line: 110, column: 24, scope: !8758)
!8773 = !DILocation(line: 110, column: 7, scope: !8758)
!8774 = !DILocation(line: 110, column: 10, scope: !8758)
!8775 = !DILocation(line: 104, column: 30, scope: !8759)
!8776 = !DILocation(line: 104, column: 20, scope: !8759)
!8777 = !DILocation(line: 104, column: 2, scope: !8760)
!8778 = distinct !{!8778, !8777, !8779}
!8779 = !DILocation(line: 111, column: 2, scope: !8760)
!8780 = !DILocation(line: 114, column: 1, scope: !8738)
!8781 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !8782, file: !8782, line: 37, type: !8783, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3697, retainedNodes: !8786)
!8782 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8783 = !DISubroutineType(types: !8784)
!8784 = !{!125, !184, !32, !979, !32, !184, !8785}
!8785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3700)
!8786 = !{!8787, !8788, !8789, !8790, !8791, !8792, !8793, !8794, !8795, !8796}
!8787 = !DILocalVariable(name: "out", arg: 1, scope: !8781, file: !8782, line: 37, type: !184)
!8788 = !DILocalVariable(name: "outlen", arg: 2, scope: !8781, file: !8782, line: 37, type: !32)
!8789 = !DILocalVariable(name: "in", arg: 3, scope: !8781, file: !8782, line: 37, type: !979)
!8790 = !DILocalVariable(name: "inlen", arg: 4, scope: !8781, file: !8782, line: 38, type: !32)
!8791 = !DILocalVariable(name: "ctr", arg: 5, scope: !8781, file: !8782, line: 38, type: !184)
!8792 = !DILocalVariable(name: "sched", arg: 6, scope: !8781, file: !8782, line: 38, type: !8785)
!8793 = !DILocalVariable(name: "buffer", scope: !8781, file: !8782, line: 41, type: !311)
!8794 = !DILocalVariable(name: "nonce", scope: !8781, file: !8782, line: 42, type: !311)
!8795 = !DILocalVariable(name: "block_num", scope: !8781, file: !8782, line: 43, type: !32)
!8796 = !DILocalVariable(name: "i", scope: !8781, file: !8782, line: 44, type: !32)
!8797 = !DILocation(line: 0, scope: !8781)
!8798 = !DILocation(line: 41, column: 2, scope: !8781)
!8799 = !DILocation(line: 41, column: 10, scope: !8781)
!8800 = !DILocation(line: 42, column: 2, scope: !8781)
!8801 = !DILocation(line: 42, column: 10, scope: !8781)
!8802 = !DILocation(line: 47, column: 10, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8781, file: !8782, line: 47, column: 6)
!8804 = !DILocation(line: 47, column: 27, scope: !8803)
!8805 = !DILocation(line: 58, column: 8, scope: !8781)
!8806 = !DILocation(line: 61, column: 15, scope: !8781)
!8807 = !DILocation(line: 61, column: 35, scope: !8781)
!8808 = !DILocation(line: 62, column: 8, scope: !8781)
!8809 = !DILocation(line: 62, column: 27, scope: !8781)
!8810 = !DILocation(line: 61, column: 45, scope: !8781)
!8811 = !DILocation(line: 61, column: 25, scope: !8781)
!8812 = !DILocation(line: 61, column: 32, scope: !8781)
!8813 = !DILocation(line: 62, column: 18, scope: !8781)
!8814 = !DILocation(line: 61, column: 52, scope: !8781)
!8815 = !DILocation(line: 62, column: 26, scope: !8781)
!8816 = !DILocation(line: 62, column: 24, scope: !8781)
!8817 = !DILocation(line: 63, column: 2, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8781, file: !8782, line: 63, column: 2)
!8819 = !DILocation(line: 64, column: 10, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !8782, line: 64, column: 7)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !8782, line: 63, column: 30)
!8822 = distinct !DILexicalBlock(scope: !8818, file: !8782, line: 63, column: 2)
!8823 = !DILocation(line: 64, column: 33, scope: !8820)
!8824 = !DILocation(line: 64, column: 7, scope: !8821)
!8825 = !DILocation(line: 66, column: 8, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !8782, line: 66, column: 8)
!8827 = distinct !DILexicalBlock(scope: !8820, file: !8782, line: 64, column: 39)
!8828 = !DILocation(line: 66, column: 8, scope: !8827)
!8829 = !DILocation(line: 67, column: 14, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8826, file: !8782, line: 66, column: 46)
!8831 = !DILocation(line: 68, column: 37, scope: !8830)
!8832 = !DILocation(line: 68, column: 17, scope: !8830)
!8833 = !DILocation(line: 68, column: 15, scope: !8830)
!8834 = !DILocation(line: 69, column: 37, scope: !8830)
!8835 = !DILocation(line: 69, column: 17, scope: !8830)
!8836 = !DILocation(line: 69, column: 15, scope: !8830)
!8837 = !DILocation(line: 70, column: 37, scope: !8830)
!8838 = !DILocation(line: 70, column: 17, scope: !8830)
!8839 = !DILocation(line: 70, column: 15, scope: !8830)
!8840 = !DILocation(line: 71, column: 17, scope: !8830)
!8841 = !DILocation(line: 71, column: 15, scope: !8830)
!8842 = !DILocation(line: 75, column: 3, scope: !8827)
!8843 = !DILocation(line: 77, column: 12, scope: !8821)
!8844 = !DILocation(line: 77, column: 47, scope: !8821)
!8845 = !DILocation(line: 77, column: 44, scope: !8821)
!8846 = !DILocation(line: 77, column: 42, scope: !8821)
!8847 = !DILocation(line: 77, column: 7, scope: !8821)
!8848 = !DILocation(line: 77, column: 10, scope: !8821)
!8849 = !DILocation(line: 63, column: 25, scope: !8822)
!8850 = !DILocation(line: 63, column: 16, scope: !8822)
!8851 = distinct !{!8851, !8817, !8852}
!8852 = !DILocation(line: 78, column: 2, scope: !8818)
!8853 = !DILocation(line: 81, column: 2, scope: !8781)
!8854 = !DILocation(line: 81, column: 10, scope: !8781)
!8855 = !DILocation(line: 81, column: 23, scope: !8781)
!8856 = !DILocation(line: 81, column: 31, scope: !8781)
!8857 = !DILocation(line: 82, column: 2, scope: !8781)
!8858 = !DILocation(line: 82, column: 10, scope: !8781)
!8859 = !DILocation(line: 82, column: 23, scope: !8781)
!8860 = !DILocation(line: 82, column: 31, scope: !8781)
!8861 = !DILocation(line: 84, column: 2, scope: !8781)
!8862 = !DILocation(line: 85, column: 1, scope: !8781)
!8863 = distinct !DISubprogram(name: "tc_ccm_config", scope: !8864, file: !8864, line: 39, type: !8865, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3705, retainedNodes: !8867)
!8864 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8865 = !DISubroutineType(types: !8866)
!8866 = !{!125, !3708, !3714, !184, !32, !32}
!8867 = !{!8868, !8869, !8870, !8871, !8872}
!8868 = !DILocalVariable(name: "c", arg: 1, scope: !8863, file: !8864, line: 39, type: !3708)
!8869 = !DILocalVariable(name: "sched", arg: 2, scope: !8863, file: !8864, line: 39, type: !3714)
!8870 = !DILocalVariable(name: "nonce", arg: 3, scope: !8863, file: !8864, line: 39, type: !184)
!8871 = !DILocalVariable(name: "nlen", arg: 4, scope: !8863, file: !8864, line: 40, type: !32)
!8872 = !DILocalVariable(name: "mlen", arg: 5, scope: !8863, file: !8864, line: 40, type: !32)
!8873 = !DILocation(line: 0, scope: !8863)
!8874 = !DILocation(line: 44, column: 8, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8863, file: !8864, line: 44, column: 6)
!8876 = !DILocation(line: 44, column: 27, scope: !8875)
!8877 = !DILocation(line: 50, column: 24, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8864, line: 50, column: 13)
!8879 = distinct !DILexicalBlock(scope: !8875, file: !8864, line: 48, column: 13)
!8880 = !DILocation(line: 54, column: 5, scope: !8863)
!8881 = !DILocation(line: 54, column: 10, scope: !8863)
!8882 = !DILocation(line: 55, column: 5, scope: !8863)
!8883 = !DILocation(line: 55, column: 11, scope: !8863)
!8884 = !DILocation(line: 56, column: 5, scope: !8863)
!8885 = !DILocation(line: 56, column: 11, scope: !8863)
!8886 = !DILocation(line: 58, column: 2, scope: !8863)
!8887 = !DILocation(line: 59, column: 1, scope: !8863)
!8888 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !8864, file: !8864, line: 137, type: !8889, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3705, retainedNodes: !8891)
!8889 = !DISubroutineType(types: !8890)
!8890 = !{!125, !184, !32, !979, !32, !979, !32, !3708}
!8891 = !{!8892, !8893, !8894, !8895, !8896, !8897, !8898, !8899, !8900, !8901}
!8892 = !DILocalVariable(name: "out", arg: 1, scope: !8888, file: !8864, line: 137, type: !184)
!8893 = !DILocalVariable(name: "olen", arg: 2, scope: !8888, file: !8864, line: 137, type: !32)
!8894 = !DILocalVariable(name: "associated_data", arg: 3, scope: !8888, file: !8864, line: 138, type: !979)
!8895 = !DILocalVariable(name: "alen", arg: 4, scope: !8888, file: !8864, line: 139, type: !32)
!8896 = !DILocalVariable(name: "payload", arg: 5, scope: !8888, file: !8864, line: 139, type: !979)
!8897 = !DILocalVariable(name: "plen", arg: 6, scope: !8888, file: !8864, line: 140, type: !32)
!8898 = !DILocalVariable(name: "c", arg: 7, scope: !8888, file: !8864, line: 140, type: !3708)
!8899 = !DILocalVariable(name: "b", scope: !8888, file: !8864, line: 154, type: !311)
!8900 = !DILocalVariable(name: "tag", scope: !8888, file: !8864, line: 155, type: !311)
!8901 = !DILocalVariable(name: "i", scope: !8888, file: !8864, line: 156, type: !32)
!8902 = !DILocation(line: 0, scope: !8888)
!8903 = !DILocation(line: 144, column: 11, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8888, file: !8864, line: 144, column: 6)
!8905 = !DILocation(line: 144, column: 29, scope: !8904)
!8906 = !DILocation(line: 146, column: 10, scope: !8904)
!8907 = !DILocation(line: 146, column: 15, scope: !8904)
!8908 = !DILocation(line: 147, column: 10, scope: !8904)
!8909 = !DILocation(line: 147, column: 15, scope: !8904)
!8910 = !DILocation(line: 150, column: 22, scope: !8904)
!8911 = !DILocation(line: 150, column: 17, scope: !8904)
!8912 = !DILocation(line: 150, column: 9, scope: !8904)
!8913 = !DILocation(line: 144, column: 6, scope: !8888)
!8914 = !DILocation(line: 154, column: 2, scope: !8888)
!8915 = !DILocation(line: 154, column: 10, scope: !8888)
!8916 = !DILocation(line: 155, column: 2, scope: !8888)
!8917 = !DILocation(line: 155, column: 10, scope: !8888)
!8918 = !DILocation(line: 161, column: 10, scope: !8888)
!8919 = !DILocation(line: 161, column: 53, scope: !8888)
!8920 = !DILocation(line: 161, column: 31, scope: !8888)
!8921 = !DILocation(line: 161, column: 9, scope: !8888)
!8922 = !DILocation(line: 161, column: 7, scope: !8888)
!8923 = !DILocation(line: 162, column: 2, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8888, file: !8864, line: 162, column: 2)
!8925 = !DILocation(line: 163, column: 21, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !8864, line: 162, column: 28)
!8927 = distinct !DILexicalBlock(scope: !8924, file: !8864, line: 162, column: 2)
!8928 = !DILocation(line: 163, column: 10, scope: !8926)
!8929 = !DILocation(line: 163, column: 3, scope: !8926)
!8930 = !DILocation(line: 163, column: 8, scope: !8926)
!8931 = !DILocation(line: 162, column: 23, scope: !8927)
!8932 = !DILocation(line: 162, column: 16, scope: !8927)
!8933 = distinct !{!8933, !8923, !8934}
!8934 = !DILocation(line: 164, column: 2, scope: !8924)
!8935 = !DILocation(line: 165, column: 25, scope: !8888)
!8936 = !DILocation(line: 165, column: 10, scope: !8888)
!8937 = !DILocation(line: 165, column: 2, scope: !8888)
!8938 = !DILocation(line: 165, column: 8, scope: !8888)
!8939 = !DILocation(line: 166, column: 10, scope: !8888)
!8940 = !DILocation(line: 166, column: 2, scope: !8888)
!8941 = !DILocation(line: 166, column: 8, scope: !8888)
!8942 = !DILocation(line: 169, column: 35, scope: !8888)
!8943 = !DILocation(line: 169, column: 9, scope: !8888)
!8944 = !DILocation(line: 170, column: 6, scope: !8888)
!8945 = !DILocation(line: 171, column: 49, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !8864, line: 170, column: 16)
!8947 = distinct !DILexicalBlock(scope: !8888, file: !8864, line: 170, column: 6)
!8948 = !DILocation(line: 171, column: 3, scope: !8946)
!8949 = !DILocation(line: 172, column: 2, scope: !8946)
!8950 = !DILocation(line: 173, column: 6, scope: !8888)
!8951 = !DILocation(line: 174, column: 41, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !8864, line: 173, column: 16)
!8953 = distinct !DILexicalBlock(scope: !8888, file: !8864, line: 173, column: 6)
!8954 = !DILocation(line: 174, column: 3, scope: !8952)
!8955 = !DILocation(line: 175, column: 2, scope: !8952)
!8956 = !DILocation(line: 180, column: 7, scope: !8888)
!8957 = !DILocation(line: 181, column: 16, scope: !8888)
!8958 = !DILocation(line: 181, column: 8, scope: !8888)
!8959 = !DILocation(line: 184, column: 47, scope: !8888)
!8960 = !DILocation(line: 184, column: 2, scope: !8888)
!8961 = !DILocation(line: 186, column: 16, scope: !8888)
!8962 = !DILocation(line: 186, column: 8, scope: !8888)
!8963 = !DILocation(line: 189, column: 33, scope: !8888)
!8964 = !DILocation(line: 189, column: 9, scope: !8888)
!8965 = !DILocation(line: 191, column: 21, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !8864, line: 191, column: 2)
!8967 = distinct !DILexicalBlock(scope: !8888, file: !8864, line: 191, column: 2)
!8968 = !DILocation(line: 191, column: 16, scope: !8966)
!8969 = !DILocation(line: 191, column: 2, scope: !8967)
!8970 = !DILocation(line: 190, column: 6, scope: !8888)
!8971 = !DILocation(line: 192, column: 12, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8966, file: !8864, line: 191, column: 32)
!8973 = !DILocation(line: 192, column: 21, scope: !8972)
!8974 = !DILocation(line: 192, column: 19, scope: !8972)
!8975 = !DILocation(line: 192, column: 7, scope: !8972)
!8976 = !DILocation(line: 192, column: 10, scope: !8972)
!8977 = !DILocation(line: 191, column: 27, scope: !8966)
!8978 = distinct !{!8978, !8969, !8979}
!8979 = !DILocation(line: 193, column: 2, scope: !8967)
!8980 = !DILocation(line: 196, column: 1, scope: !8888)
!8981 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !8864, file: !8864, line: 64, type: !8982, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3705, retainedNodes: !8984)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{null, !184, !979, !32, !32, !3714}
!8984 = !{!8985, !8986, !8987, !8988, !8989, !8990}
!8985 = !DILocalVariable(name: "T", arg: 1, scope: !8981, file: !8864, line: 64, type: !184)
!8986 = !DILocalVariable(name: "data", arg: 2, scope: !8981, file: !8864, line: 64, type: !979)
!8987 = !DILocalVariable(name: "dlen", arg: 3, scope: !8981, file: !8864, line: 64, type: !32)
!8988 = !DILocalVariable(name: "flag", arg: 4, scope: !8981, file: !8864, line: 65, type: !32)
!8989 = !DILocalVariable(name: "sched", arg: 5, scope: !8981, file: !8864, line: 65, type: !3714)
!8990 = !DILocalVariable(name: "i", scope: !8981, file: !8864, line: 68, type: !32)
!8991 = !DILocation(line: 0, scope: !8981)
!8992 = !DILocation(line: 70, column: 11, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8981, file: !8864, line: 70, column: 6)
!8994 = !DILocation(line: 70, column: 6, scope: !8981)
!8995 = !DILocation(line: 71, column: 26, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8993, file: !8864, line: 70, column: 16)
!8997 = !DILocation(line: 71, column: 8, scope: !8996)
!8998 = !DILocation(line: 72, column: 3, scope: !8996)
!8999 = !DILocation(line: 72, column: 8, scope: !8996)
!9000 = !DILocation(line: 73, column: 8, scope: !8996)
!9001 = !DILocation(line: 74, column: 2, scope: !8996)
!9002 = !DILocation(line: 0, scope: !8993)
!9003 = !DILocation(line: 78, column: 11, scope: !8981)
!9004 = !DILocation(line: 78, column: 2, scope: !8981)
!9005 = !DILocation(line: 79, column: 30, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8981, file: !8864, line: 78, column: 19)
!9007 = !DILocation(line: 79, column: 25, scope: !9006)
!9008 = !DILocation(line: 79, column: 6, scope: !9006)
!9009 = !DILocation(line: 79, column: 9, scope: !9006)
!9010 = !DILocation(line: 79, column: 3, scope: !9006)
!9011 = !DILocation(line: 79, column: 22, scope: !9006)
!9012 = !DILocation(line: 80, column: 11, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9006, file: !8864, line: 80, column: 7)
!9014 = !DILocation(line: 80, column: 24, scope: !9013)
!9015 = !DILocation(line: 80, column: 30, scope: !9013)
!9016 = !DILocation(line: 81, column: 11, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9013, file: !8864, line: 80, column: 44)
!9018 = !DILocation(line: 82, column: 3, scope: !9017)
!9019 = distinct !{!9019, !9004, !9020}
!9020 = !DILocation(line: 83, column: 2, scope: !8981)
!9021 = !DILocation(line: 84, column: 1, scope: !8981)
!9022 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !8864, file: !8864, line: 93, type: !9023, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3705, retainedNodes: !9026)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!125, !184, !32, !979, !32, !184, !9025}
!9025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3714)
!9026 = !{!9027, !9028, !9029, !9030, !9031, !9032, !9033, !9034, !9035, !9036}
!9027 = !DILocalVariable(name: "out", arg: 1, scope: !9022, file: !8864, line: 93, type: !184)
!9028 = !DILocalVariable(name: "outlen", arg: 2, scope: !9022, file: !8864, line: 93, type: !32)
!9029 = !DILocalVariable(name: "in", arg: 3, scope: !9022, file: !8864, line: 93, type: !979)
!9030 = !DILocalVariable(name: "inlen", arg: 4, scope: !9022, file: !8864, line: 94, type: !32)
!9031 = !DILocalVariable(name: "ctr", arg: 5, scope: !9022, file: !8864, line: 94, type: !184)
!9032 = !DILocalVariable(name: "sched", arg: 6, scope: !9022, file: !8864, line: 94, type: !9025)
!9033 = !DILocalVariable(name: "buffer", scope: !9022, file: !8864, line: 97, type: !311)
!9034 = !DILocalVariable(name: "nonce", scope: !9022, file: !8864, line: 98, type: !311)
!9035 = !DILocalVariable(name: "block_num", scope: !9022, file: !8864, line: 99, type: !227)
!9036 = !DILocalVariable(name: "i", scope: !9022, file: !8864, line: 100, type: !32)
!9037 = !DILocation(line: 0, scope: !9022)
!9038 = !DILocation(line: 97, column: 2, scope: !9022)
!9039 = !DILocation(line: 97, column: 10, scope: !9022)
!9040 = !DILocation(line: 98, column: 2, scope: !9022)
!9041 = !DILocation(line: 98, column: 10, scope: !9022)
!9042 = !DILocation(line: 103, column: 10, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9022, file: !8864, line: 103, column: 6)
!9044 = !DILocation(line: 103, column: 27, scope: !9043)
!9045 = !DILocation(line: 114, column: 9, scope: !9022)
!9046 = !DILocation(line: 117, column: 27, scope: !9022)
!9047 = !DILocation(line: 117, column: 44, scope: !9022)
!9048 = !DILocation(line: 117, column: 37, scope: !9022)
!9049 = !DILocation(line: 117, column: 43, scope: !9022)
!9050 = !DILocation(line: 117, column: 42, scope: !9022)
!9051 = !DILocation(line: 118, column: 2, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9022, file: !8864, line: 118, column: 2)
!9053 = !DILocation(line: 119, column: 10, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !8864, line: 119, column: 7)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !8864, line: 118, column: 30)
!9056 = distinct !DILexicalBlock(scope: !9052, file: !8864, line: 118, column: 2)
!9057 = !DILocation(line: 119, column: 33, scope: !9054)
!9058 = !DILocation(line: 119, column: 7, scope: !9055)
!9059 = !DILocation(line: 120, column: 13, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9054, file: !8864, line: 119, column: 39)
!9061 = !DILocation(line: 121, column: 36, scope: !9060)
!9062 = !DILocation(line: 121, column: 16, scope: !9060)
!9063 = !DILocation(line: 121, column: 14, scope: !9060)
!9064 = !DILocation(line: 122, column: 16, scope: !9060)
!9065 = !DILocation(line: 122, column: 14, scope: !9060)
!9066 = !DILocation(line: 123, column: 9, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9060, file: !8864, line: 123, column: 8)
!9068 = !DILocation(line: 123, column: 8, scope: !9060)
!9069 = !DILocation(line: 128, column: 12, scope: !9055)
!9070 = !DILocation(line: 128, column: 49, scope: !9055)
!9071 = !DILocation(line: 128, column: 46, scope: !9055)
!9072 = !DILocation(line: 128, column: 44, scope: !9055)
!9073 = !DILocation(line: 128, column: 7, scope: !9055)
!9074 = !DILocation(line: 128, column: 10, scope: !9055)
!9075 = !DILocation(line: 118, column: 25, scope: !9056)
!9076 = !DILocation(line: 118, column: 16, scope: !9056)
!9077 = distinct !{!9077, !9051, !9078}
!9078 = !DILocation(line: 129, column: 2, scope: !9052)
!9079 = !DILocation(line: 132, column: 12, scope: !9022)
!9080 = !DILocation(line: 132, column: 33, scope: !9022)
!9081 = !DILocation(line: 132, column: 2, scope: !9022)
!9082 = !DILocation(line: 132, column: 10, scope: !9022)
!9083 = !DILocation(line: 132, column: 23, scope: !9022)
!9084 = !DILocation(line: 132, column: 31, scope: !9022)
!9085 = !DILocation(line: 134, column: 2, scope: !9022)
!9086 = !DILocation(line: 135, column: 1, scope: !9022)
!9087 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !8864, file: !8864, line: 198, type: !8889, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3705, retainedNodes: !9088)
!9088 = !{!9089, !9090, !9091, !9092, !9093, !9094, !9095, !9096, !9097, !9098}
!9089 = !DILocalVariable(name: "out", arg: 1, scope: !9087, file: !8864, line: 198, type: !184)
!9090 = !DILocalVariable(name: "olen", arg: 2, scope: !9087, file: !8864, line: 198, type: !32)
!9091 = !DILocalVariable(name: "associated_data", arg: 3, scope: !9087, file: !8864, line: 199, type: !979)
!9092 = !DILocalVariable(name: "alen", arg: 4, scope: !9087, file: !8864, line: 200, type: !32)
!9093 = !DILocalVariable(name: "payload", arg: 5, scope: !9087, file: !8864, line: 200, type: !979)
!9094 = !DILocalVariable(name: "plen", arg: 6, scope: !9087, file: !8864, line: 201, type: !32)
!9095 = !DILocalVariable(name: "c", arg: 7, scope: !9087, file: !8864, line: 201, type: !3708)
!9096 = !DILocalVariable(name: "b", scope: !9087, file: !8864, line: 215, type: !311)
!9097 = !DILocalVariable(name: "tag", scope: !9087, file: !8864, line: 216, type: !311)
!9098 = !DILocalVariable(name: "i", scope: !9087, file: !8864, line: 217, type: !32)
!9099 = !DILocation(line: 0, scope: !9087)
!9100 = !DILocation(line: 205, column: 11, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9087, file: !8864, line: 205, column: 6)
!9102 = !DILocation(line: 205, column: 29, scope: !9101)
!9103 = !DILocation(line: 207, column: 13, scope: !9101)
!9104 = !DILocation(line: 207, column: 18, scope: !9101)
!9105 = !DILocation(line: 208, column: 13, scope: !9101)
!9106 = !DILocation(line: 208, column: 18, scope: !9101)
!9107 = !DILocation(line: 211, column: 24, scope: !9101)
!9108 = !DILocation(line: 211, column: 19, scope: !9101)
!9109 = !DILocation(line: 211, column: 12, scope: !9101)
!9110 = !DILocation(line: 205, column: 6, scope: !9087)
!9111 = !DILocation(line: 215, column: 2, scope: !9087)
!9112 = !DILocation(line: 215, column: 10, scope: !9087)
!9113 = !DILocation(line: 216, column: 2, scope: !9087)
!9114 = !DILocation(line: 216, column: 10, scope: !9087)
!9115 = !DILocation(line: 222, column: 7, scope: !9087)
!9116 = !DILocation(line: 223, column: 2, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9087, file: !8864, line: 223, column: 2)
!9118 = !DILocation(line: 224, column: 21, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !8864, line: 223, column: 27)
!9120 = distinct !DILexicalBlock(scope: !9117, file: !8864, line: 223, column: 2)
!9121 = !DILocation(line: 224, column: 10, scope: !9119)
!9122 = !DILocation(line: 224, column: 3, scope: !9119)
!9123 = !DILocation(line: 224, column: 8, scope: !9119)
!9124 = !DILocation(line: 223, column: 22, scope: !9120)
!9125 = !DILocation(line: 223, column: 16, scope: !9120)
!9126 = distinct !{!9126, !9116, !9127}
!9127 = !DILocation(line: 225, column: 2, scope: !9117)
!9128 = !DILocation(line: 226, column: 10, scope: !9087)
!9129 = !DILocation(line: 226, column: 16, scope: !9087)
!9130 = !DILocation(line: 226, column: 2, scope: !9087)
!9131 = !DILocation(line: 226, column: 8, scope: !9087)
!9132 = !DILocation(line: 229, column: 67, scope: !9087)
!9133 = !DILocation(line: 229, column: 2, scope: !9087)
!9134 = !DILocation(line: 231, column: 16, scope: !9087)
!9135 = !DILocation(line: 231, column: 8, scope: !9087)
!9136 = !DILocation(line: 234, column: 33, scope: !9087)
!9137 = !DILocation(line: 234, column: 9, scope: !9087)
!9138 = !DILocation(line: 235, column: 16, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !8864, line: 235, column: 2)
!9140 = distinct !DILexicalBlock(scope: !9087, file: !8864, line: 235, column: 2)
!9141 = !DILocation(line: 235, column: 2, scope: !9140)
!9142 = !DILocation(line: 236, column: 39, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9139, file: !8864, line: 235, column: 32)
!9144 = !DILocation(line: 236, column: 12, scope: !9143)
!9145 = !DILocation(line: 236, column: 46, scope: !9143)
!9146 = !DILocation(line: 236, column: 44, scope: !9143)
!9147 = !DILocation(line: 236, column: 3, scope: !9143)
!9148 = !DILocation(line: 236, column: 10, scope: !9143)
!9149 = !DILocation(line: 235, column: 27, scope: !9139)
!9150 = distinct !{!9150, !9141, !9151}
!9151 = !DILocation(line: 237, column: 2, scope: !9140)
!9152 = !DILocation(line: 242, column: 10, scope: !9087)
!9153 = !DILocation(line: 242, column: 51, scope: !9087)
!9154 = !DILocation(line: 242, column: 30, scope: !9087)
!9155 = !DILocation(line: 242, column: 9, scope: !9087)
!9156 = !DILocation(line: 242, column: 7, scope: !9087)
!9157 = !DILocation(line: 243, column: 2, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9087, file: !8864, line: 243, column: 2)
!9159 = !DILocation(line: 244, column: 21, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !8864, line: 243, column: 27)
!9161 = distinct !DILexicalBlock(scope: !9158, file: !8864, line: 243, column: 2)
!9162 = !DILocation(line: 244, column: 10, scope: !9160)
!9163 = !DILocation(line: 244, column: 3, scope: !9160)
!9164 = !DILocation(line: 244, column: 8, scope: !9160)
!9165 = !DILocation(line: 243, column: 22, scope: !9161)
!9166 = !DILocation(line: 243, column: 16, scope: !9161)
!9167 = distinct !{!9167, !9157, !9168}
!9168 = !DILocation(line: 245, column: 2, scope: !9158)
!9169 = !DILocation(line: 246, column: 26, scope: !9087)
!9170 = !DILocation(line: 246, column: 37, scope: !9087)
!9171 = !DILocation(line: 246, column: 10, scope: !9087)
!9172 = !DILocation(line: 246, column: 8, scope: !9087)
!9173 = !DILocation(line: 247, column: 10, scope: !9087)
!9174 = !DILocation(line: 247, column: 8, scope: !9087)
!9175 = !DILocation(line: 250, column: 33, scope: !9087)
!9176 = !DILocation(line: 250, column: 9, scope: !9087)
!9177 = !DILocation(line: 251, column: 6, scope: !9087)
!9178 = !DILocation(line: 252, column: 47, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !8864, line: 251, column: 16)
!9180 = distinct !DILexicalBlock(scope: !9087, file: !8864, line: 251, column: 6)
!9181 = !DILocation(line: 252, column: 3, scope: !9179)
!9182 = !DILocation(line: 253, column: 2, scope: !9179)
!9183 = !DILocation(line: 254, column: 6, scope: !9087)
!9184 = !DILocation(line: 255, column: 33, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !8864, line: 254, column: 16)
!9186 = distinct !DILexicalBlock(scope: !9087, file: !8864, line: 254, column: 6)
!9187 = !DILocation(line: 255, column: 28, scope: !9185)
!9188 = !DILocation(line: 255, column: 45, scope: !9185)
!9189 = !DILocation(line: 255, column: 3, scope: !9185)
!9190 = !DILocation(line: 256, column: 2, scope: !9185)
!9191 = !DILocation(line: 259, column: 26, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9087, file: !8864, line: 259, column: 6)
!9193 = !DILocation(line: 259, column: 6, scope: !9192)
!9194 = !DILocation(line: 259, column: 32, scope: !9192)
!9195 = !DILocation(line: 259, column: 6, scope: !9087)
!9196 = !DILocation(line: 263, column: 26, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9192, file: !8864, line: 261, column: 11)
!9198 = !DILocation(line: 263, column: 21, scope: !9197)
!9199 = !DILocation(line: 263, column: 3, scope: !9197)
!9200 = !DILocation(line: 264, column: 3, scope: !9197)
!9201 = !DILocation(line: 0, scope: !9192)
!9202 = !DILocation(line: 266, column: 1, scope: !9087)
!9203 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !9204, file: !9204, line: 57, type: !9205, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3721, retainedNodes: !9251)
!9204 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9205 = !DISubroutineType(types: !9206)
!9206 = !{null, !32, !9207}
!9207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9208, size: 32)
!9208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9209)
!9209 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3842, line: 141, baseType: !9210)
!9210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3842, line: 97, size: 256, elements: !9211)
!9211 = !{!9212}
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !9210, file: !3842, line: 107, baseType: !9213, size: 256)
!9213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3842, line: 98, size: 256, elements: !9214)
!9214 = !{!9215, !9220, !9225, !9230, !9235, !9240, !9245, !9250}
!9215 = !DIDerivedType(tag: DW_TAG_member, scope: !9213, file: !3842, line: 99, baseType: !9216, size: 32)
!9216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9213, file: !3842, line: 99, size: 32, elements: !9217)
!9217 = !{!9218, !9219}
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !9216, file: !3842, line: 99, baseType: !208, size: 32)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !9216, file: !3842, line: 99, baseType: !208, size: 32)
!9220 = !DIDerivedType(tag: DW_TAG_member, scope: !9213, file: !3842, line: 100, baseType: !9221, size: 32, offset: 32)
!9221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9213, file: !3842, line: 100, size: 32, elements: !9222)
!9222 = !{!9223, !9224}
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !9221, file: !3842, line: 100, baseType: !208, size: 32)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !9221, file: !3842, line: 100, baseType: !208, size: 32)
!9225 = !DIDerivedType(tag: DW_TAG_member, scope: !9213, file: !3842, line: 101, baseType: !9226, size: 32, offset: 64)
!9226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9213, file: !3842, line: 101, size: 32, elements: !9227)
!9227 = !{!9228, !9229}
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !9226, file: !3842, line: 101, baseType: !208, size: 32)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !9226, file: !3842, line: 101, baseType: !208, size: 32)
!9230 = !DIDerivedType(tag: DW_TAG_member, scope: !9213, file: !3842, line: 102, baseType: !9231, size: 32, offset: 96)
!9231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9213, file: !3842, line: 102, size: 32, elements: !9232)
!9232 = !{!9233, !9234}
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !9231, file: !3842, line: 102, baseType: !208, size: 32)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !9231, file: !3842, line: 102, baseType: !208, size: 32)
!9235 = !DIDerivedType(tag: DW_TAG_member, scope: !9213, file: !3842, line: 103, baseType: !9236, size: 32, offset: 128)
!9236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9213, file: !3842, line: 103, size: 32, elements: !9237)
!9237 = !{!9238, !9239}
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !9236, file: !3842, line: 103, baseType: !208, size: 32)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !9236, file: !3842, line: 103, baseType: !208, size: 32)
!9240 = !DIDerivedType(tag: DW_TAG_member, scope: !9213, file: !3842, line: 104, baseType: !9241, size: 32, offset: 160)
!9241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9213, file: !3842, line: 104, size: 32, elements: !9242)
!9242 = !{!9243, !9244}
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !9241, file: !3842, line: 104, baseType: !208, size: 32)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !9241, file: !3842, line: 104, baseType: !208, size: 32)
!9245 = !DIDerivedType(tag: DW_TAG_member, scope: !9213, file: !3842, line: 105, baseType: !9246, size: 32, offset: 192)
!9246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9213, file: !3842, line: 105, size: 32, elements: !9247)
!9247 = !{!9248, !9249}
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !9246, file: !3842, line: 105, baseType: !208, size: 32)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !9246, file: !3842, line: 105, baseType: !208, size: 32)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !9213, file: !3842, line: 106, baseType: !208, size: 32, offset: 224)
!9251 = !{!9252, !9253}
!9252 = !DILocalVariable(name: "reason", arg: 1, scope: !9203, file: !9204, line: 57, type: !32)
!9253 = !DILocalVariable(name: "esf", arg: 2, scope: !9203, file: !9204, line: 57, type: !9207)
!9254 = !DILocation(line: 0, scope: !9203)
!9255 = !DILocation(line: 60, column: 10, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 60, column: 6)
!9257 = !DILocation(line: 60, column: 6, scope: !9203)
!9258 = !DILocation(line: 61, column: 3, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9256, file: !9204, line: 60, column: 19)
!9260 = !DILocation(line: 62, column: 2, scope: !9259)
!9261 = !DILocation(line: 63, column: 2, scope: !9203)
!9262 = !DILocation(line: 64, column: 1, scope: !9203)
!9263 = distinct !DISubprogram(name: "esf_dump", scope: !9204, file: !9204, line: 20, type: !9264, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3721, retainedNodes: !9266)
!9264 = !DISubroutineType(types: !9265)
!9265 = !{null, !9207}
!9266 = !{!9267}
!9267 = !DILocalVariable(name: "esf", arg: 1, scope: !9263, file: !9204, line: 20, type: !9207)
!9268 = !DILocation(line: 0, scope: !9263)
!9269 = !DILocation(line: 22, column: 2, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9271, file: !9204, line: 22, column: 2)
!9271 = distinct !DILexicalBlock(scope: !9272, file: !9204, line: 22, column: 2)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !9204, line: 22, column: 2)
!9273 = distinct !DILexicalBlock(scope: !9263, file: !9204, line: 22, column: 2)
!9274 = !DILocation(line: 24, column: 2, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9276, file: !9204, line: 24, column: 2)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !9204, line: 24, column: 2)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !9204, line: 24, column: 2)
!9278 = distinct !DILexicalBlock(scope: !9263, file: !9204, line: 24, column: 2)
!9279 = !DILocation(line: 26, column: 2, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !9204, line: 26, column: 2)
!9281 = distinct !DILexicalBlock(scope: !9282, file: !9204, line: 26, column: 2)
!9282 = distinct !DILexicalBlock(scope: !9283, file: !9204, line: 26, column: 2)
!9283 = distinct !DILexicalBlock(scope: !9263, file: !9204, line: 26, column: 2)
!9284 = !DILocation(line: 53, column: 2, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !9204, line: 53, column: 2)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !9204, line: 53, column: 2)
!9287 = distinct !DILexicalBlock(scope: !9288, file: !9204, line: 53, column: 2)
!9288 = distinct !DILexicalBlock(scope: !9263, file: !9204, line: 53, column: 2)
!9289 = !DILocation(line: 55, column: 1, scope: !9263)
!9290 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !9204, file: !9204, line: 82, type: !9291, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3721, retainedNodes: !9306)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{null, !9207, !9293}
!9293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9294, size: 32)
!9294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1088, line: 37, baseType: !9295)
!9295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !9296)
!9296 = !{!9297, !9298, !9299, !9300, !9301, !9302, !9303, !9304, !9305}
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9295, file: !1088, line: 26, baseType: !208, size: 32)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9295, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9295, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9295, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9295, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9295, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9295, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9295, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9295, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!9306 = !{!9307, !9308, !9309}
!9307 = !DILocalVariable(name: "esf", arg: 1, scope: !9290, file: !9204, line: 82, type: !9207)
!9308 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !9290, file: !9204, line: 82, type: !9293)
!9309 = !DILocalVariable(name: "reason", scope: !9290, file: !9204, line: 88, type: !32)
!9310 = !DILocation(line: 0, scope: !9290)
!9311 = !DILocation(line: 88, column: 35, scope: !9290)
!9312 = !DILocation(line: 108, column: 2, scope: !9290)
!9313 = !DILocation(line: 131, column: 1, scope: !9290)
!9314 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !9204, file: !9204, line: 133, type: !9315, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3721, retainedNodes: !9317)
!9315 = !DISubroutineType(types: !9316)
!9316 = !{null, !124}
!9317 = !{!9318, !9319, !9320}
!9318 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !9314, file: !9204, line: 133, type: !124)
!9319 = !DILocalVariable(name: "ssf_contents", scope: !9314, file: !9204, line: 135, type: !2278)
!9320 = !DILocalVariable(name: "oops_esf", scope: !9314, file: !9204, line: 136, type: !9209)
!9321 = !DILocation(line: 0, scope: !9314)
!9322 = !DILocation(line: 136, column: 2, scope: !9314)
!9323 = !DILocation(line: 136, column: 15, scope: !9314)
!9324 = !DILocation(line: 139, column: 22, scope: !9314)
!9325 = !DILocation(line: 139, column: 17, scope: !9314)
!9326 = !DILocation(line: 139, column: 20, scope: !9314)
!9327 = !DILocation(line: 141, column: 2, scope: !9314)
!9328 = !DILocation(line: 142, column: 2, scope: !9314)
!9329 = distinct !DISubprogram(name: "arch_irq_enable", scope: !9330, file: !9330, line: 40, type: !7860, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9331)
!9330 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9331 = !{!9332}
!9332 = !DILocalVariable(name: "irq", arg: 1, scope: !9329, file: !9330, line: 40, type: !32)
!9333 = !DILocation(line: 0, scope: !9329)
!9334 = !DILocation(line: 42, column: 2, scope: !9329)
!9335 = !DILocation(line: 43, column: 1, scope: !9329)
!9336 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1167, file: !1167, line: 1684, type: !9337, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9339)
!9337 = !DISubroutineType(types: !9338)
!9338 = !{null, !3736}
!9339 = !{!9340}
!9340 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9336, file: !1167, line: 1684, type: !3736)
!9341 = !DILocation(line: 0, scope: !9336)
!9342 = !DILocation(line: 1686, column: 23, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9336, file: !1167, line: 1686, column: 7)
!9344 = !DILocation(line: 1686, column: 7, scope: !9336)
!9345 = !DILocation(line: 1688, column: 5, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9343, file: !1167, line: 1687, column: 3)
!9347 = !{i64 2149427422}
!9348 = !DILocation(line: 1689, column: 81, scope: !9346)
!9349 = !DILocation(line: 1689, column: 60, scope: !9346)
!9350 = !DILocation(line: 1689, column: 34, scope: !9346)
!9351 = !DILocation(line: 1689, column: 5, scope: !9346)
!9352 = !DILocation(line: 1689, column: 43, scope: !9346)
!9353 = !DILocation(line: 1690, column: 5, scope: !9346)
!9354 = !{i64 2149427536}
!9355 = !DILocation(line: 1691, column: 3, scope: !9346)
!9356 = !DILocation(line: 1692, column: 1, scope: !9336)
!9357 = distinct !DISubprogram(name: "arch_irq_disable", scope: !9330, file: !9330, line: 45, type: !7860, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9358)
!9358 = !{!9359}
!9359 = !DILocalVariable(name: "irq", arg: 1, scope: !9357, file: !9330, line: 45, type: !32)
!9360 = !DILocation(line: 0, scope: !9357)
!9361 = !DILocation(line: 47, column: 2, scope: !9357)
!9362 = !DILocation(line: 48, column: 1, scope: !9357)
!9363 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1167, file: !1167, line: 1722, type: !9337, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9364)
!9364 = !{!9365}
!9365 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9363, file: !1167, line: 1722, type: !3736)
!9366 = !DILocation(line: 0, scope: !9363)
!9367 = !DILocation(line: 1724, column: 23, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9363, file: !1167, line: 1724, column: 7)
!9369 = !DILocation(line: 1724, column: 7, scope: !9363)
!9370 = !DILocation(line: 1726, column: 81, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9368, file: !1167, line: 1725, column: 3)
!9372 = !DILocation(line: 1726, column: 60, scope: !9371)
!9373 = !DILocation(line: 1726, column: 34, scope: !9371)
!9374 = !DILocation(line: 1726, column: 5, scope: !9371)
!9375 = !DILocation(line: 1726, column: 43, scope: !9371)
!9376 = !DILocation(line: 271, column: 3, scope: !9377, inlinedAt: !9379)
!9377 = distinct !DISubprogram(name: "__DSB", scope: !9378, file: !9378, line: 269, type: !4072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !1126)
!9378 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9379 = distinct !DILocation(line: 1727, column: 5, scope: !9371)
!9380 = !{i64 1881809}
!9381 = !DILocation(line: 260, column: 3, scope: !9382, inlinedAt: !9383)
!9382 = distinct !DISubprogram(name: "__ISB", scope: !9378, file: !9378, line: 258, type: !4072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !1126)
!9383 = distinct !DILocation(line: 1728, column: 5, scope: !9371)
!9384 = !{i64 1881526}
!9385 = !DILocation(line: 1729, column: 3, scope: !9371)
!9386 = !DILocation(line: 1730, column: 1, scope: !9363)
!9387 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !9330, file: !9330, line: 50, type: !9388, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9390)
!9388 = !DISubroutineType(types: !9389)
!9389 = !{!125, !32}
!9390 = !{!9391}
!9391 = !DILocalVariable(name: "irq", arg: 1, scope: !9387, file: !9330, line: 50, type: !32)
!9392 = !DILocation(line: 0, scope: !9387)
!9393 = !DILocation(line: 52, column: 20, scope: !9387)
!9394 = !DILocation(line: 52, column: 9, scope: !9387)
!9395 = !DILocation(line: 52, column: 41, scope: !9387)
!9396 = !DILocation(line: 52, column: 39, scope: !9387)
!9397 = !DILocation(line: 52, column: 2, scope: !9387)
!9398 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !9330, file: !9330, line: 64, type: !9399, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9401)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{null, !32, !32, !208}
!9401 = !{!9402, !9403, !9404}
!9402 = !DILocalVariable(name: "irq", arg: 1, scope: !9398, file: !9330, line: 64, type: !32)
!9403 = !DILocalVariable(name: "prio", arg: 2, scope: !9398, file: !9330, line: 64, type: !32)
!9404 = !DILocalVariable(name: "flags", arg: 3, scope: !9398, file: !9330, line: 64, type: !208)
!9405 = !DILocation(line: 0, scope: !9398)
!9406 = !DILocation(line: 83, column: 8, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9408, file: !9330, line: 82, column: 9)
!9408 = distinct !DILexicalBlock(scope: !9398, file: !9330, line: 76, column: 6)
!9409 = !DILocation(line: 95, column: 2, scope: !9398)
!9410 = !DILocation(line: 96, column: 1, scope: !9398)
!9411 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1167, file: !1167, line: 1814, type: !9412, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9414)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{null, !3736, !208}
!9414 = !{!9415, !9416}
!9415 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9411, file: !1167, line: 1814, type: !3736)
!9416 = !DILocalVariable(name: "priority", arg: 2, scope: !9411, file: !1167, line: 1814, type: !208)
!9417 = !DILocation(line: 0, scope: !9411)
!9418 = !DILocation(line: 0, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9411, file: !1167, line: 1816, column: 7)
!9420 = !DILocation(line: 1816, column: 7, scope: !9411)
!9421 = !DILocation(line: 1824, column: 1, scope: !9411)
!9422 = distinct !DISubprogram(name: "z_irq_spurious", scope: !9330, file: !9330, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !9423)
!9423 = !{!9424}
!9424 = !DILocalVariable(name: "unused", arg: 1, scope: !9422, file: !9330, line: 155, type: !13)
!9425 = !DILocation(line: 0, scope: !9422)
!9426 = !DILocation(line: 159, column: 2, scope: !9422)
!9427 = !DILocation(line: 160, column: 1, scope: !9422)
!9428 = distinct !DISubprogram(name: "z_arm_nmi", scope: !9429, file: !9429, line: 87, type: !4072, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !1126)
!9429 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9430 = !DILocation(line: 89, column: 2, scope: !9428)
!9431 = !DILocation(line: 90, column: 2, scope: !9428)
!9432 = !DILocation(line: 91, column: 1, scope: !9428)
!9433 = !DISubprogram(name: "z_SysNmiOnReset", scope: !9429, file: !9429, line: 23, type: !4072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!9434 = !DISubprogram(name: "z_arm_int_exit", scope: !9435, file: !9435, line: 153, type: !4072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!9435 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9436 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !9437, file: !9437, line: 256, type: !4072, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3781, retainedNodes: !1126)
!9437 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9438 = !DILocation(line: 258, column: 2, scope: !9436)
!9439 = !DILocation(line: 260, column: 2, scope: !9436)
!9440 = !DILocation(line: 262, column: 2, scope: !9436)
!9441 = !DILocation(line: 263, column: 2, scope: !9436)
!9442 = !DILocation(line: 267, column: 2, scope: !9436)
!9443 = !DILocation(line: 268, column: 2, scope: !9436)
!9444 = distinct !DISubprogram(name: "relocate_vector_table", scope: !9437, file: !9437, line: 53, type: !4072, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3781, retainedNodes: !1126)
!9445 = !DILocation(line: 55, column: 12, scope: !9444)
!9446 = !DILocation(line: 271, column: 3, scope: !9447, inlinedAt: !9448)
!9447 = distinct !DISubprogram(name: "__DSB", scope: !9378, file: !9378, line: 269, type: !4072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3781, retainedNodes: !1126)
!9448 = distinct !DILocation(line: 56, column: 2, scope: !9444)
!9449 = !{i64 1880480}
!9450 = !DILocation(line: 260, column: 3, scope: !9451, inlinedAt: !9452)
!9451 = distinct !DISubprogram(name: "__ISB", scope: !9378, file: !9378, line: 258, type: !4072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3781, retainedNodes: !1126)
!9452 = distinct !DILocation(line: 57, column: 2, scope: !9444)
!9453 = !{i64 1880197}
!9454 = !DILocation(line: 58, column: 1, scope: !9444)
!9455 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !9437, file: !9437, line: 96, type: !4072, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3781, retainedNodes: !1126)
!9456 = !DILocation(line: 103, column: 13, scope: !9455)
!9457 = !DILocation(line: 975, column: 3, scope: !9458, inlinedAt: !9463)
!9458 = distinct !DISubprogram(name: "__get_CONTROL", scope: !9378, file: !9378, line: 971, type: !9459, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3781, retainedNodes: !9461)
!9459 = !DISubroutineType(types: !9460)
!9460 = !{!208}
!9461 = !{!9462}
!9462 = !DILocalVariable(name: "result", scope: !9458, file: !9378, line: 973, type: !208)
!9463 = distinct !DILocation(line: 189, column: 16, scope: !9455)
!9464 = !{i64 1901310}
!9465 = !DILocation(line: 0, scope: !9458, inlinedAt: !9463)
!9466 = !DILocation(line: 189, column: 32, scope: !9455)
!9467 = !DILocalVariable(name: "control", arg: 1, scope: !9468, file: !9378, line: 1001, type: !208)
!9468 = distinct !DISubprogram(name: "__set_CONTROL", scope: !9378, file: !9378, line: 1001, type: !9469, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3781, retainedNodes: !9471)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{null, !208}
!9471 = !{!9467}
!9472 = !DILocation(line: 0, scope: !9468, inlinedAt: !9473)
!9473 = distinct !DILocation(line: 189, column: 2, scope: !9455)
!9474 = !DILocation(line: 1003, column: 3, scope: !9468, inlinedAt: !9473)
!9475 = !{i64 1902030}
!9476 = !DILocation(line: 260, column: 3, scope: !9451, inlinedAt: !9477)
!9477 = distinct !DILocation(line: 1004, column: 3, scope: !9468, inlinedAt: !9473)
!9478 = !DILocation(line: 191, column: 1, scope: !9455)
!9479 = distinct !DISubprogram(name: "arch_swap", scope: !9480, file: !9480, line: 33, type: !9388, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3809, retainedNodes: !9481)
!9480 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9481 = !{!9482}
!9482 = !DILocalVariable(name: "key", arg: 1, scope: !9479, file: !9480, line: 33, type: !32)
!9483 = !DILocation(line: 0, scope: !9479)
!9484 = !DILocation(line: 36, column: 2, scope: !9479)
!9485 = !DILocation(line: 36, column: 17, scope: !9479)
!9486 = !DILocation(line: 36, column: 25, scope: !9479)
!9487 = !DILocation(line: 37, column: 37, scope: !9479)
!9488 = !DILocation(line: 37, column: 17, scope: !9479)
!9489 = !DILocation(line: 37, column: 35, scope: !9479)
!9490 = !DILocation(line: 41, column: 12, scope: !9479)
!9491 = !DILocalVariable(name: "key", arg: 1, scope: !9492, file: !7842, line: 84, type: !32)
!9492 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3809, retainedNodes: !9493)
!9493 = !{!9491}
!9494 = !DILocation(line: 0, scope: !9492, inlinedAt: !9495)
!9495 = distinct !DILocation(line: 44, column: 2, scope: !9479)
!9496 = !DILocation(line: 95, column: 2, scope: !9492, inlinedAt: !9495)
!9497 = !{i64 1619392}
!9498 = !DILocation(line: 53, column: 9, scope: !9479)
!9499 = !DILocation(line: 53, column: 24, scope: !9479)
!9500 = !DILocation(line: 53, column: 2, scope: !9479)
!9501 = distinct !DISubprogram(name: "arch_new_thread", scope: !9502, file: !9502, line: 56, type: !9503, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3837, retainedNodes: !9610)
!9502 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9503 = !DISubroutineType(types: !9504)
!9504 = !{null, !9505, !9605, !393, !6021, !124, !124, !124}
!9505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9506, size: 32)
!9506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !9507)
!9507 = !{!9508, !9566, !9578, !9579, !9580, !9581, !9587, !9600}
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9506, file: !1020, line: 247, baseType: !9509, size: 384)
!9509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !9510)
!9510 = !{!9511, !9535, !9542, !9543, !9544, !9553, !9554, !9555}
!9511 = !DIDerivedType(tag: DW_TAG_member, scope: !9509, file: !1020, line: 60, baseType: !9512, size: 64)
!9512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9509, file: !1020, line: 60, size: 64, elements: !9513)
!9513 = !{!9514, !9529}
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9512, file: !1020, line: 61, baseType: !9515, size: 64)
!9515 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !9516)
!9516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !9517)
!9517 = !{!9518, !9524}
!9518 = !DIDerivedType(tag: DW_TAG_member, scope: !9516, file: !1030, line: 38, baseType: !9519, size: 32)
!9519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9516, file: !1030, line: 38, size: 32, elements: !9520)
!9520 = !{!9521, !9523}
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9519, file: !1030, line: 39, baseType: !9522, size: 32)
!9522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9516, size: 32)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9519, file: !1030, line: 40, baseType: !9522, size: 32)
!9524 = !DIDerivedType(tag: DW_TAG_member, scope: !9516, file: !1030, line: 42, baseType: !9525, size: 32, offset: 32)
!9525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9516, file: !1030, line: 42, size: 32, elements: !9526)
!9526 = !{!9527, !9528}
!9527 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9525, file: !1030, line: 43, baseType: !9522, size: 32)
!9528 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9525, file: !1030, line: 44, baseType: !9522, size: 32)
!9529 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9512, file: !1020, line: 62, baseType: !9530, size: 64)
!9530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !9531)
!9531 = !{!9532}
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9530, file: !1046, line: 50, baseType: !9533, size: 64)
!9533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9534, size: 64, elements: !807)
!9534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9530, size: 32)
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9509, file: !1020, line: 68, baseType: !9536, size: 32, offset: 64)
!9536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9537, size: 32)
!9537 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !9538)
!9538 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !9539)
!9539 = !{!9540}
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9538, file: !1054, line: 232, baseType: !9541, size: 64)
!9541 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !9516)
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9509, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9509, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!9544 = !DIDerivedType(tag: DW_TAG_member, scope: !9509, file: !1020, line: 90, baseType: !9545, size: 16, offset: 112)
!9545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9509, file: !1020, line: 90, size: 16, elements: !9546)
!9546 = !{!9547, !9552}
!9547 = !DIDerivedType(tag: DW_TAG_member, scope: !9545, file: !1020, line: 91, baseType: !9548, size: 16)
!9548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9545, file: !1020, line: 91, size: 16, elements: !9549)
!9549 = !{!9550, !9551}
!9550 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9548, file: !1020, line: 96, baseType: !1068, size: 8)
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9548, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9545, file: !1020, line: 100, baseType: !227, size: 16)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9509, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9509, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9509, file: !1020, line: 131, baseType: !9556, size: 192, offset: 192)
!9556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !9557)
!9557 = !{!9558, !9559, !9565}
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9556, file: !1054, line: 245, baseType: !9515, size: 64)
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9556, file: !1054, line: 246, baseType: !9560, size: 32, offset: 64)
!9560 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !9561)
!9561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9562, size: 32)
!9562 = !DISubroutineType(types: !9563)
!9563 = !{null, !9564}
!9564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9556, size: 32)
!9565 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9556, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9506, file: !1020, line: 250, baseType: !9567, size: 288, offset: 384)
!9567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !9568)
!9568 = !{!9569, !9570, !9571, !9572, !9573, !9574, !9575, !9576, !9577}
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9567, file: !1088, line: 26, baseType: !208, size: 32)
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9567, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9567, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9567, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9567, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9567, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9567, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9567, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9567, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9506, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9506, file: !1020, line: 256, baseType: !9537, size: 64, offset: 704)
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9506, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9506, file: !1020, line: 300, baseType: !9582, size: 96, offset: 800)
!9582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !9583)
!9583 = !{!9584, !9585, !9586}
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9582, file: !1020, line: 153, baseType: !22, size: 32)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9582, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9582, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9506, file: !1020, line: 325, baseType: !9588, size: 32, offset: 896)
!9588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9589, size: 32)
!9589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !9590)
!9590 = !{!9591, !9597, !9598}
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9589, file: !1111, line: 5074, baseType: !9592, size: 96)
!9592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !9593)
!9593 = !{!9594, !9595, !9596}
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9592, file: !1115, line: 57, baseType: !1118, size: 32)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9592, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9592, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9589, file: !1111, line: 5075, baseType: !9537, size: 64, offset: 96)
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9589, file: !1111, line: 5076, baseType: !9599, offset: 160)
!9599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9506, file: !1020, line: 343, baseType: !9601, size: 64, offset: 928)
!9601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !9602)
!9602 = !{!9603, !9604}
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9601, file: !1088, line: 63, baseType: !208, size: 32)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9601, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!9605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9606, size: 32)
!9606 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !6022, line: 44, baseType: !9607)
!9607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !3310, line: 47, size: 8, elements: !9608)
!9608 = !{!9609}
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9607, file: !3310, line: 48, baseType: !142, size: 8)
!9610 = !{!9611, !9612, !9613, !9614, !9615, !9616, !9617, !9618}
!9611 = !DILocalVariable(name: "thread", arg: 1, scope: !9501, file: !9502, line: 56, type: !9505)
!9612 = !DILocalVariable(name: "stack", arg: 2, scope: !9501, file: !9502, line: 56, type: !9605)
!9613 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !9501, file: !9502, line: 57, type: !393)
!9614 = !DILocalVariable(name: "entry", arg: 4, scope: !9501, file: !9502, line: 57, type: !6021)
!9615 = !DILocalVariable(name: "p1", arg: 5, scope: !9501, file: !9502, line: 58, type: !124)
!9616 = !DILocalVariable(name: "p2", arg: 6, scope: !9501, file: !9502, line: 58, type: !124)
!9617 = !DILocalVariable(name: "p3", arg: 7, scope: !9501, file: !9502, line: 58, type: !124)
!9618 = !DILocalVariable(name: "iframe", scope: !9501, file: !9502, line: 60, type: !3840)
!9619 = !DILocation(line: 0, scope: !9501)
!9620 = !DILocation(line: 85, column: 11, scope: !9501)
!9621 = !DILocation(line: 93, column: 10, scope: !9501)
!9622 = !DILocation(line: 98, column: 13, scope: !9501)
!9623 = !DILocation(line: 100, column: 15, scope: !9501)
!9624 = !DILocation(line: 100, column: 10, scope: !9501)
!9625 = !DILocation(line: 100, column: 13, scope: !9501)
!9626 = !DILocation(line: 101, column: 15, scope: !9501)
!9627 = !DILocation(line: 101, column: 10, scope: !9501)
!9628 = !DILocation(line: 101, column: 13, scope: !9501)
!9629 = !DILocation(line: 102, column: 15, scope: !9501)
!9630 = !DILocation(line: 102, column: 10, scope: !9501)
!9631 = !DILocation(line: 102, column: 13, scope: !9501)
!9632 = !DILocation(line: 103, column: 15, scope: !9501)
!9633 = !DILocation(line: 103, column: 10, scope: !9501)
!9634 = !DILocation(line: 103, column: 13, scope: !9501)
!9635 = !DILocation(line: 106, column: 10, scope: !9501)
!9636 = !DILocation(line: 106, column: 15, scope: !9501)
!9637 = !DILocation(line: 122, column: 29, scope: !9501)
!9638 = !DILocation(line: 122, column: 23, scope: !9501)
!9639 = !DILocation(line: 122, column: 27, scope: !9501)
!9640 = !DILocation(line: 123, column: 15, scope: !9501)
!9641 = !DILocation(line: 123, column: 23, scope: !9501)
!9642 = !DILocation(line: 143, column: 1, scope: !9501)
!9643 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !9502, file: !9502, line: 530, type: !9644, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3837, retainedNodes: !9646)
!9644 = !DISubroutineType(types: !9645)
!9645 = !{null, !9505, !393, !6021}
!9646 = !{!9647, !9648, !9649}
!9647 = !DILocalVariable(name: "main_thread", arg: 1, scope: !9643, file: !9502, line: 530, type: !9505)
!9648 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !9643, file: !9502, line: 530, type: !393)
!9649 = !DILocalVariable(name: "_main", arg: 3, scope: !9643, file: !9502, line: 531, type: !6021)
!9650 = !DILocation(line: 0, scope: !9643)
!9651 = !DILocation(line: 535, column: 11, scope: !9643)
!9652 = !DILocation(line: 576, column: 2, scope: !9643)
!9653 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!9654 = !DILocation(line: 603, column: 2, scope: !9643)
!9655 = distinct !DISubprogram(name: "z_arm_fault", scope: !9656, file: !9656, line: 1036, type: !9657, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !9672)
!9656 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9657 = !DISubroutineType(types: !9658)
!9658 = !{null, !208, !208, !208, !9659}
!9659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9660, size: 32)
!9660 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1088, line: 37, baseType: !9661)
!9661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !9662)
!9662 = !{!9663, !9664, !9665, !9666, !9667, !9668, !9669, !9670, !9671}
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9661, file: !1088, line: 26, baseType: !208, size: 32)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9661, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9661, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9661, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9661, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9661, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9661, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9661, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9661, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!9672 = !{!9673, !9674, !9675, !9676, !9677, !9678, !9679, !9680, !9681, !9682}
!9673 = !DILocalVariable(name: "msp", arg: 1, scope: !9655, file: !9656, line: 1036, type: !208)
!9674 = !DILocalVariable(name: "psp", arg: 2, scope: !9655, file: !9656, line: 1036, type: !208)
!9675 = !DILocalVariable(name: "exc_return", arg: 3, scope: !9655, file: !9656, line: 1036, type: !208)
!9676 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !9655, file: !9656, line: 1037, type: !9659)
!9677 = !DILocalVariable(name: "reason", scope: !9655, file: !9656, line: 1039, type: !208)
!9678 = !DILocalVariable(name: "fault", scope: !9655, file: !9656, line: 1040, type: !125)
!9679 = !DILocalVariable(name: "recoverable", scope: !9655, file: !9656, line: 1041, type: !153)
!9680 = !DILocalVariable(name: "nested_exc", scope: !9655, file: !9656, line: 1041, type: !153)
!9681 = !DILocalVariable(name: "esf", scope: !9655, file: !9656, line: 1042, type: !3908)
!9682 = !DILocalVariable(name: "esf_copy", scope: !9655, file: !9656, line: 1047, type: !3909)
!9683 = !DILocation(line: 0, scope: !9655)
!9684 = !DILocation(line: 1040, column: 19, scope: !9655)
!9685 = !DILocation(line: 1040, column: 24, scope: !9655)
!9686 = !DILocation(line: 1041, column: 2, scope: !9655)
!9687 = !DILocation(line: 1047, column: 2, scope: !9655)
!9688 = !DILocation(line: 1047, column: 15, scope: !9655)
!9689 = !DILocalVariable(name: "key", arg: 1, scope: !9690, file: !7842, line: 84, type: !32)
!9690 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !9691)
!9691 = !{!9689}
!9692 = !DILocation(line: 0, scope: !9690, inlinedAt: !9693)
!9693 = distinct !DILocation(line: 1050, column: 2, scope: !9655)
!9694 = !DILocation(line: 95, column: 2, scope: !9690, inlinedAt: !9693)
!9695 = !{i64 1652636}
!9696 = !DILocation(line: 1055, column: 9, scope: !9655)
!9697 = !DILocation(line: 1063, column: 11, scope: !9655)
!9698 = !DILocation(line: 1064, column: 6, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9655, file: !9656, line: 1064, column: 6)
!9700 = !{i8 0, i8 2}
!9701 = !DILocation(line: 1064, column: 6, scope: !9655)
!9702 = !DILocation(line: 1070, column: 20, scope: !9655)
!9703 = !DILocation(line: 1070, column: 2, scope: !9655)
!9704 = !DILocation(line: 1089, column: 6, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9655, file: !9656, line: 1089, column: 6)
!9706 = !DILocation(line: 0, scope: !9705)
!9707 = !DILocation(line: 1089, column: 6, scope: !9655)
!9708 = !DILocation(line: 1090, column: 28, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9710, file: !9656, line: 1090, column: 7)
!9710 = distinct !DILexicalBlock(scope: !9705, file: !9656, line: 1089, column: 18)
!9711 = !DILocation(line: 1090, column: 44, scope: !9709)
!9712 = !DILocation(line: 1090, column: 7, scope: !9710)
!9713 = !DILocation(line: 1091, column: 24, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9709, file: !9656, line: 1090, column: 50)
!9715 = !DILocation(line: 1092, column: 3, scope: !9714)
!9716 = !DILocation(line: 1094, column: 23, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9705, file: !9656, line: 1093, column: 9)
!9718 = !DILocation(line: 1097, column: 2, scope: !9655)
!9719 = !DILocation(line: 1098, column: 1, scope: !9655)
!9720 = distinct !DISubprogram(name: "get_esf", scope: !9656, file: !9656, line: 894, type: !9721, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !9724)
!9721 = !DISubroutineType(types: !9722)
!9722 = !{!3908, !208, !208, !208, !9723}
!9723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!9724 = !{!9725, !9726, !9727, !9728, !9729, !9730}
!9725 = !DILocalVariable(name: "msp", arg: 1, scope: !9720, file: !9656, line: 894, type: !208)
!9726 = !DILocalVariable(name: "psp", arg: 2, scope: !9720, file: !9656, line: 894, type: !208)
!9727 = !DILocalVariable(name: "exc_return", arg: 3, scope: !9720, file: !9656, line: 894, type: !208)
!9728 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !9720, file: !9656, line: 895, type: !9723)
!9729 = !DILocalVariable(name: "alternative_state_exc", scope: !9720, file: !9656, line: 897, type: !153)
!9730 = !DILocalVariable(name: "ptr_esf", scope: !9720, file: !9656, line: 898, type: !3908)
!9731 = !DILocation(line: 0, scope: !9720)
!9732 = !DILocation(line: 900, column: 14, scope: !9720)
!9733 = !DILocation(line: 902, column: 49, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9720, file: !9656, line: 902, column: 6)
!9735 = !DILocation(line: 902, column: 6, scope: !9720)
!9736 = !DILocation(line: 983, column: 44, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9720, file: !9656, line: 983, column: 6)
!9738 = !DILocation(line: 985, column: 3, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !9656, line: 985, column: 3)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !9656, line: 985, column: 3)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !9656, line: 985, column: 3)
!9742 = distinct !DILexicalBlock(scope: !9743, file: !9656, line: 985, column: 3)
!9743 = distinct !DILexicalBlock(scope: !9737, file: !9656, line: 984, column: 47)
!9744 = !DILocation(line: 986, column: 3, scope: !9743)
!9745 = !DILocation(line: 983, column: 18, scope: !9737)
!9746 = !DILocation(line: 991, column: 7, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !9656, line: 990, column: 30)
!9748 = distinct !DILexicalBlock(scope: !9720, file: !9656, line: 990, column: 6)
!9749 = !DILocation(line: 998, column: 16, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9751, file: !9656, line: 995, column: 10)
!9751 = distinct !DILexicalBlock(scope: !9747, file: !9656, line: 991, column: 7)
!9752 = !DILocation(line: 1002, column: 2, scope: !9720)
!9753 = !DILocation(line: 1003, column: 1, scope: !9720)
!9754 = distinct !DISubprogram(name: "fault_handle", scope: !9656, file: !9656, line: 786, type: !9755, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !9757)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!208, !3908, !125, !9723}
!9757 = !{!9758, !9759, !9760, !9761}
!9758 = !DILocalVariable(name: "esf", arg: 1, scope: !9754, file: !9656, line: 786, type: !3908)
!9759 = !DILocalVariable(name: "fault", arg: 2, scope: !9754, file: !9656, line: 786, type: !125)
!9760 = !DILocalVariable(name: "recoverable", arg: 3, scope: !9754, file: !9656, line: 786, type: !9723)
!9761 = !DILocalVariable(name: "reason", scope: !9754, file: !9656, line: 788, type: !208)
!9762 = !DILocation(line: 0, scope: !9754)
!9763 = !DILocation(line: 790, column: 15, scope: !9754)
!9764 = !DILocation(line: 792, column: 2, scope: !9754)
!9765 = !DILocation(line: 794, column: 12, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9754, file: !9656, line: 792, column: 17)
!9767 = !DILocation(line: 795, column: 3, scope: !9766)
!9768 = !DILocation(line: 800, column: 12, scope: !9766)
!9769 = !DILocation(line: 801, column: 3, scope: !9766)
!9770 = !DILocation(line: 803, column: 12, scope: !9766)
!9771 = !DILocation(line: 804, column: 3, scope: !9766)
!9772 = !DILocation(line: 806, column: 12, scope: !9766)
!9773 = !DILocation(line: 807, column: 3, scope: !9766)
!9774 = !DILocation(line: 814, column: 3, scope: !9766)
!9775 = !DILocation(line: 815, column: 3, scope: !9766)
!9776 = !DILocation(line: 820, column: 3, scope: !9766)
!9777 = !DILocation(line: 821, column: 3, scope: !9766)
!9778 = !DILocation(line: 829, column: 2, scope: !9754)
!9779 = distinct !DISubprogram(name: "hard_fault", scope: !9656, file: !9656, line: 709, type: !9780, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !9782)
!9780 = !DISubroutineType(types: !9781)
!9781 = !{!208, !3908, !9723}
!9782 = !{!9783, !9784, !9785}
!9783 = !DILocalVariable(name: "esf", arg: 1, scope: !9779, file: !9656, line: 709, type: !3908)
!9784 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9779, file: !9656, line: 709, type: !9723)
!9785 = !DILocalVariable(name: "reason", scope: !9779, file: !9656, line: 711, type: !208)
!9786 = !DILocation(line: 0, scope: !9779)
!9787 = !DILocation(line: 713, column: 2, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9789, file: !9656, line: 713, column: 2)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !9656, line: 713, column: 2)
!9790 = distinct !DILexicalBlock(scope: !9791, file: !9656, line: 713, column: 2)
!9791 = distinct !DILexicalBlock(scope: !9779, file: !9656, line: 713, column: 2)
!9792 = !DILocation(line: 732, column: 15, scope: !9779)
!9793 = !DILocation(line: 734, column: 12, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9779, file: !9656, line: 734, column: 6)
!9795 = !DILocation(line: 734, column: 17, scope: !9794)
!9796 = !DILocation(line: 734, column: 41, scope: !9794)
!9797 = !DILocation(line: 734, column: 6, scope: !9779)
!9798 = !DILocation(line: 735, column: 3, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9800, file: !9656, line: 735, column: 3)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !9656, line: 735, column: 3)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !9656, line: 735, column: 3)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !9656, line: 735, column: 3)
!9803 = distinct !DILexicalBlock(scope: !9794, file: !9656, line: 734, column: 47)
!9804 = !DILocation(line: 736, column: 2, scope: !9803)
!9805 = !DILocation(line: 736, column: 19, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9794, file: !9656, line: 736, column: 13)
!9807 = !DILocation(line: 736, column: 49, scope: !9806)
!9808 = !DILocation(line: 736, column: 13, scope: !9794)
!9809 = !DILocation(line: 737, column: 3, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !9656, line: 737, column: 3)
!9811 = distinct !DILexicalBlock(scope: !9812, file: !9656, line: 737, column: 3)
!9812 = distinct !DILexicalBlock(scope: !9813, file: !9656, line: 737, column: 3)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !9656, line: 737, column: 3)
!9814 = distinct !DILexicalBlock(scope: !9806, file: !9656, line: 736, column: 55)
!9815 = !DILocation(line: 738, column: 2, scope: !9814)
!9816 = !DILocation(line: 738, column: 19, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9806, file: !9656, line: 738, column: 13)
!9818 = !DILocation(line: 738, column: 24, scope: !9817)
!9819 = !DILocation(line: 738, column: 47, scope: !9817)
!9820 = !DILocation(line: 738, column: 13, scope: !9806)
!9821 = !DILocation(line: 739, column: 3, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !9656, line: 739, column: 3)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !9656, line: 739, column: 3)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !9656, line: 739, column: 3)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !9656, line: 739, column: 3)
!9826 = distinct !DILexicalBlock(scope: !9817, file: !9656, line: 738, column: 53)
!9827 = !DILocation(line: 740, column: 7, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9826, file: !9656, line: 740, column: 7)
!9829 = !DILocation(line: 740, column: 7, scope: !9826)
!9830 = !DILocation(line: 741, column: 4, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !9656, line: 741, column: 4)
!9832 = distinct !DILexicalBlock(scope: !9833, file: !9656, line: 741, column: 4)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !9656, line: 741, column: 4)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !9656, line: 741, column: 4)
!9835 = distinct !DILexicalBlock(scope: !9828, file: !9656, line: 740, column: 38)
!9836 = !DILocation(line: 742, column: 24, scope: !9835)
!9837 = !DILocation(line: 743, column: 3, scope: !9835)
!9838 = !DILocation(line: 743, column: 20, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9828, file: !9656, line: 743, column: 14)
!9840 = !DILocation(line: 743, column: 25, scope: !9839)
!9841 = !DILocation(line: 743, column: 52, scope: !9839)
!9842 = !DILocation(line: 743, column: 14, scope: !9828)
!9843 = !DILocation(line: 744, column: 13, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9839, file: !9656, line: 743, column: 58)
!9845 = !DILocation(line: 745, column: 3, scope: !9844)
!9846 = !DILocation(line: 745, column: 20, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9839, file: !9656, line: 745, column: 14)
!9848 = !DILocation(line: 745, column: 25, scope: !9847)
!9849 = !DILocation(line: 745, column: 52, scope: !9847)
!9850 = !DILocation(line: 745, column: 14, scope: !9839)
!9851 = !DILocation(line: 746, column: 13, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9847, file: !9656, line: 745, column: 58)
!9853 = !DILocation(line: 747, column: 3, scope: !9852)
!9854 = !DILocation(line: 747, column: 20, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9847, file: !9656, line: 747, column: 14)
!9856 = !DILocation(line: 747, column: 52, scope: !9855)
!9857 = !DILocation(line: 747, column: 14, scope: !9847)
!9858 = !DILocation(line: 748, column: 13, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9855, file: !9656, line: 747, column: 58)
!9860 = !DILocation(line: 753, column: 3, scope: !9859)
!9861 = !DILocation(line: 766, column: 2, scope: !9779)
!9862 = distinct !DISubprogram(name: "mem_manage_fault", scope: !9656, file: !9656, line: 229, type: !9755, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !9863)
!9863 = !{!9864, !9865, !9866, !9867, !9868, !9869}
!9864 = !DILocalVariable(name: "esf", arg: 1, scope: !9862, file: !9656, line: 229, type: !3908)
!9865 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !9862, file: !9656, line: 229, type: !125)
!9866 = !DILocalVariable(name: "recoverable", arg: 3, scope: !9862, file: !9656, line: 230, type: !9723)
!9867 = !DILocalVariable(name: "reason", scope: !9862, file: !9656, line: 232, type: !208)
!9868 = !DILocalVariable(name: "mmfar", scope: !9862, file: !9656, line: 233, type: !208)
!9869 = !DILocalVariable(name: "temp", scope: !9870, file: !9656, line: 254, type: !208)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !9656, line: 244, column: 48)
!9871 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 244, column: 6)
!9872 = !DILocation(line: 0, scope: !9862)
!9873 = !DILocation(line: 235, column: 2, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9875, file: !9656, line: 235, column: 2)
!9875 = distinct !DILexicalBlock(scope: !9876, file: !9656, line: 235, column: 2)
!9876 = distinct !DILexicalBlock(scope: !9877, file: !9656, line: 235, column: 2)
!9877 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 235, column: 2)
!9878 = !DILocation(line: 237, column: 12, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 237, column: 6)
!9880 = !DILocation(line: 237, column: 17, scope: !9879)
!9881 = !DILocation(line: 237, column: 41, scope: !9879)
!9882 = !DILocation(line: 237, column: 6, scope: !9862)
!9883 = !DILocation(line: 238, column: 3, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9885, file: !9656, line: 238, column: 3)
!9885 = distinct !DILexicalBlock(scope: !9886, file: !9656, line: 238, column: 3)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !9656, line: 238, column: 3)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !9656, line: 238, column: 3)
!9888 = distinct !DILexicalBlock(scope: !9879, file: !9656, line: 237, column: 47)
!9889 = !DILocation(line: 240, column: 2, scope: !9888)
!9890 = !DILocation(line: 241, column: 12, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 241, column: 6)
!9892 = !DILocation(line: 241, column: 17, scope: !9891)
!9893 = !DILocation(line: 241, column: 43, scope: !9891)
!9894 = !DILocation(line: 241, column: 6, scope: !9862)
!9895 = !DILocation(line: 242, column: 3, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !9656, line: 242, column: 3)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !9656, line: 242, column: 3)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !9656, line: 242, column: 3)
!9899 = distinct !DILexicalBlock(scope: !9900, file: !9656, line: 242, column: 3)
!9900 = distinct !DILexicalBlock(scope: !9891, file: !9656, line: 241, column: 49)
!9901 = !DILocation(line: 243, column: 2, scope: !9900)
!9902 = !DILocation(line: 244, column: 12, scope: !9871)
!9903 = !DILocation(line: 244, column: 17, scope: !9871)
!9904 = !DILocation(line: 244, column: 42, scope: !9871)
!9905 = !DILocation(line: 244, column: 6, scope: !9862)
!9906 = !DILocation(line: 245, column: 3, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !9656, line: 245, column: 3)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !9656, line: 245, column: 3)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !9656, line: 245, column: 3)
!9910 = distinct !DILexicalBlock(scope: !9870, file: !9656, line: 245, column: 3)
!9911 = !DILocation(line: 254, column: 24, scope: !9870)
!9912 = !DILocation(line: 0, scope: !9870)
!9913 = !DILocation(line: 256, column: 13, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9870, file: !9656, line: 256, column: 7)
!9915 = !DILocation(line: 256, column: 18, scope: !9914)
!9916 = !DILocation(line: 256, column: 44, scope: !9914)
!9917 = !DILocation(line: 256, column: 7, scope: !9870)
!9918 = !DILocation(line: 258, column: 4, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !9656, line: 258, column: 4)
!9920 = distinct !DILexicalBlock(scope: !9921, file: !9656, line: 258, column: 4)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !9656, line: 258, column: 4)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !9656, line: 258, column: 4)
!9923 = distinct !DILexicalBlock(scope: !9914, file: !9656, line: 256, column: 50)
!9924 = !DILocation(line: 259, column: 24, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9923, file: !9656, line: 259, column: 8)
!9926 = !DILocation(line: 259, column: 8, scope: !9923)
!9927 = !DILocation(line: 261, column: 15, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9925, file: !9656, line: 259, column: 30)
!9929 = !DILocation(line: 262, column: 4, scope: !9928)
!9930 = !DILocation(line: 265, column: 12, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 265, column: 6)
!9932 = !DILocation(line: 265, column: 17, scope: !9931)
!9933 = !DILocation(line: 265, column: 42, scope: !9931)
!9934 = !DILocation(line: 265, column: 6, scope: !9862)
!9935 = !DILocation(line: 266, column: 3, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9937, file: !9656, line: 266, column: 3)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !9656, line: 266, column: 3)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !9656, line: 266, column: 3)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !9656, line: 266, column: 3)
!9940 = distinct !DILexicalBlock(scope: !9931, file: !9656, line: 265, column: 48)
!9941 = !DILocation(line: 267, column: 2, scope: !9940)
!9942 = !DILocation(line: 269, column: 12, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 269, column: 6)
!9944 = !DILocation(line: 269, column: 17, scope: !9943)
!9945 = !DILocation(line: 269, column: 41, scope: !9943)
!9946 = !DILocation(line: 269, column: 6, scope: !9862)
!9947 = !DILocation(line: 270, column: 3, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !9656, line: 270, column: 3)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !9656, line: 270, column: 3)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !9656, line: 270, column: 3)
!9951 = distinct !DILexicalBlock(scope: !9952, file: !9656, line: 270, column: 3)
!9952 = distinct !DILexicalBlock(scope: !9943, file: !9656, line: 269, column: 47)
!9953 = !DILocation(line: 272, column: 2, scope: !9952)
!9954 = !DILocation(line: 288, column: 12, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 288, column: 6)
!9956 = !DILocation(line: 288, column: 17, scope: !9955)
!9957 = !DILocation(line: 288, column: 41, scope: !9955)
!9958 = !DILocation(line: 289, column: 9, scope: !9955)
!9959 = !DILocation(line: 288, column: 6, scope: !9862)
!9960 = !DILocation(line: 360, column: 12, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9862, file: !9656, line: 360, column: 6)
!9962 = !DILocation(line: 360, column: 17, scope: !9961)
!9963 = !DILocation(line: 360, column: 41, scope: !9961)
!9964 = !DILocation(line: 360, column: 6, scope: !9862)
!9965 = !DILocation(line: 361, column: 14, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9961, file: !9656, line: 360, column: 47)
!9967 = !DILocation(line: 362, column: 2, scope: !9966)
!9968 = !DILocation(line: 366, column: 12, scope: !9862)
!9969 = !DILocation(line: 369, column: 15, scope: !9862)
!9970 = !DILocation(line: 371, column: 2, scope: !9862)
!9971 = distinct !DISubprogram(name: "bus_fault", scope: !9656, file: !9656, line: 383, type: !9972, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !9974)
!9972 = !DISubroutineType(types: !9973)
!9973 = !{!125, !3908, !125, !9723}
!9974 = !{!9975, !9976, !9977, !9978, !9979}
!9975 = !DILocalVariable(name: "esf", arg: 1, scope: !9971, file: !9656, line: 383, type: !3908)
!9976 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !9971, file: !9656, line: 383, type: !125)
!9977 = !DILocalVariable(name: "recoverable", arg: 3, scope: !9971, file: !9656, line: 383, type: !9723)
!9978 = !DILocalVariable(name: "reason", scope: !9971, file: !9656, line: 385, type: !208)
!9979 = !DILocalVariable(name: "bfar", scope: !9980, file: !9656, line: 405, type: !208)
!9980 = distinct !DILexicalBlock(scope: !9981, file: !9656, line: 395, column: 42)
!9981 = distinct !DILexicalBlock(scope: !9971, file: !9656, line: 395, column: 6)
!9982 = !DILocation(line: 0, scope: !9971)
!9983 = !DILocation(line: 387, column: 2, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !9656, line: 387, column: 2)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !9656, line: 387, column: 2)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !9656, line: 387, column: 2)
!9987 = distinct !DILexicalBlock(scope: !9971, file: !9656, line: 387, column: 2)
!9988 = !DILocation(line: 389, column: 11, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9971, file: !9656, line: 389, column: 6)
!9990 = !DILocation(line: 389, column: 16, scope: !9989)
!9991 = !DILocation(line: 389, column: 6, scope: !9971)
!9992 = !DILocation(line: 390, column: 3, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !9656, line: 390, column: 3)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !9656, line: 390, column: 3)
!9995 = distinct !DILexicalBlock(scope: !9996, file: !9656, line: 390, column: 3)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !9656, line: 390, column: 3)
!9997 = distinct !DILexicalBlock(scope: !9989, file: !9656, line: 389, column: 39)
!9998 = !DILocation(line: 391, column: 2, scope: !9997)
!9999 = !DILocation(line: 392, column: 11, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9971, file: !9656, line: 392, column: 6)
!10001 = !DILocation(line: 392, column: 16, scope: !10000)
!10002 = !DILocation(line: 392, column: 6, scope: !9971)
!10003 = !DILocation(line: 393, column: 3, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !9656, line: 393, column: 3)
!10005 = distinct !DILexicalBlock(scope: !10006, file: !9656, line: 393, column: 3)
!10006 = distinct !DILexicalBlock(scope: !10007, file: !9656, line: 393, column: 3)
!10007 = distinct !DILexicalBlock(scope: !10008, file: !9656, line: 393, column: 3)
!10008 = distinct !DILexicalBlock(scope: !10000, file: !9656, line: 392, column: 41)
!10009 = !DILocation(line: 394, column: 2, scope: !10008)
!10010 = !DILocation(line: 395, column: 11, scope: !9981)
!10011 = !DILocation(line: 395, column: 16, scope: !9981)
!10012 = !DILocation(line: 395, column: 6, scope: !9971)
!10013 = !DILocation(line: 396, column: 3, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !9656, line: 396, column: 3)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !9656, line: 396, column: 3)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !9656, line: 396, column: 3)
!10017 = distinct !DILexicalBlock(scope: !9980, file: !9656, line: 396, column: 3)
!10018 = !DILocation(line: 405, column: 3, scope: !9980)
!10019 = !DILocation(line: 0, scope: !9980)
!10020 = !DILocation(line: 407, column: 13, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9980, file: !9656, line: 407, column: 7)
!10022 = !DILocation(line: 407, column: 18, scope: !10021)
!10023 = !DILocation(line: 407, column: 44, scope: !10021)
!10024 = !DILocation(line: 407, column: 7, scope: !9980)
!10025 = !DILocation(line: 408, column: 4, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !9656, line: 408, column: 4)
!10027 = distinct !DILexicalBlock(scope: !10028, file: !9656, line: 408, column: 4)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !9656, line: 408, column: 4)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !9656, line: 408, column: 4)
!10030 = distinct !DILexicalBlock(scope: !10021, file: !9656, line: 407, column: 50)
!10031 = !DILocation(line: 409, column: 24, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10030, file: !9656, line: 409, column: 8)
!10033 = !DILocation(line: 409, column: 8, scope: !10030)
!10034 = !DILocation(line: 411, column: 15, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10032, file: !9656, line: 409, column: 30)
!10036 = !DILocation(line: 412, column: 4, scope: !10035)
!10037 = !DILocation(line: 415, column: 11, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !9971, file: !9656, line: 415, column: 6)
!10039 = !DILocation(line: 415, column: 16, scope: !10038)
!10040 = !DILocation(line: 415, column: 6, scope: !9971)
!10041 = !DILocation(line: 416, column: 3, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10043, file: !9656, line: 416, column: 3)
!10043 = distinct !DILexicalBlock(scope: !10044, file: !9656, line: 416, column: 3)
!10044 = distinct !DILexicalBlock(scope: !10045, file: !9656, line: 416, column: 3)
!10045 = distinct !DILexicalBlock(scope: !10046, file: !9656, line: 416, column: 3)
!10046 = distinct !DILexicalBlock(scope: !10038, file: !9656, line: 415, column: 44)
!10047 = !DILocation(line: 417, column: 2, scope: !10046)
!10048 = !DILocation(line: 418, column: 12, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !9971, file: !9656, line: 418, column: 6)
!10050 = !DILocation(line: 418, column: 17, scope: !10049)
!10051 = !DILocation(line: 418, column: 41, scope: !10049)
!10052 = !DILocation(line: 418, column: 6, scope: !9971)
!10053 = !DILocation(line: 423, column: 18, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10049, file: !9656, line: 423, column: 13)
!10055 = !DILocation(line: 423, column: 23, scope: !10054)
!10056 = !DILocation(line: 423, column: 13, scope: !10049)
!10057 = !DILocation(line: 0, scope: !10049)
!10058 = !DILocation(line: 524, column: 12, scope: !9971)
!10059 = !DILocation(line: 526, column: 15, scope: !9971)
!10060 = !DILocation(line: 528, column: 2, scope: !9971)
!10061 = distinct !DISubprogram(name: "usage_fault", scope: !9656, file: !9656, line: 539, type: !10062, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !10066)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!208, !10064}
!10064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10065, size: 32)
!10065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3909)
!10066 = !{!10067, !10068}
!10067 = !DILocalVariable(name: "esf", arg: 1, scope: !10061, file: !9656, line: 539, type: !10064)
!10068 = !DILocalVariable(name: "reason", scope: !10061, file: !9656, line: 541, type: !208)
!10069 = !DILocation(line: 0, scope: !10061)
!10070 = !DILocation(line: 543, column: 2, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !9656, line: 543, column: 2)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !9656, line: 543, column: 2)
!10073 = distinct !DILexicalBlock(scope: !10074, file: !9656, line: 543, column: 2)
!10074 = distinct !DILexicalBlock(scope: !10061, file: !9656, line: 543, column: 2)
!10075 = !DILocation(line: 546, column: 12, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10061, file: !9656, line: 546, column: 6)
!10077 = !DILocation(line: 546, column: 17, scope: !10076)
!10078 = !DILocation(line: 546, column: 43, scope: !10076)
!10079 = !DILocation(line: 546, column: 6, scope: !10061)
!10080 = !DILocation(line: 547, column: 3, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10082, file: !9656, line: 547, column: 3)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !9656, line: 547, column: 3)
!10083 = distinct !DILexicalBlock(scope: !10084, file: !9656, line: 547, column: 3)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !9656, line: 547, column: 3)
!10085 = distinct !DILexicalBlock(scope: !10076, file: !9656, line: 546, column: 49)
!10086 = !DILocation(line: 548, column: 2, scope: !10085)
!10087 = !DILocation(line: 549, column: 12, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10061, file: !9656, line: 549, column: 6)
!10089 = !DILocation(line: 549, column: 17, scope: !10088)
!10090 = !DILocation(line: 549, column: 43, scope: !10088)
!10091 = !DILocation(line: 549, column: 6, scope: !10061)
!10092 = !DILocation(line: 550, column: 3, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !9656, line: 550, column: 3)
!10094 = distinct !DILexicalBlock(scope: !10095, file: !9656, line: 550, column: 3)
!10095 = distinct !DILexicalBlock(scope: !10096, file: !9656, line: 550, column: 3)
!10096 = distinct !DILexicalBlock(scope: !10097, file: !9656, line: 550, column: 3)
!10097 = distinct !DILexicalBlock(scope: !10088, file: !9656, line: 549, column: 49)
!10098 = !DILocation(line: 551, column: 2, scope: !10097)
!10099 = !DILocation(line: 567, column: 12, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10061, file: !9656, line: 567, column: 6)
!10101 = !DILocation(line: 567, column: 17, scope: !10100)
!10102 = !DILocation(line: 567, column: 38, scope: !10100)
!10103 = !DILocation(line: 567, column: 6, scope: !10061)
!10104 = !DILocation(line: 568, column: 3, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !9656, line: 568, column: 3)
!10106 = distinct !DILexicalBlock(scope: !10107, file: !9656, line: 568, column: 3)
!10107 = distinct !DILexicalBlock(scope: !10108, file: !9656, line: 568, column: 3)
!10108 = distinct !DILexicalBlock(scope: !10109, file: !9656, line: 568, column: 3)
!10109 = distinct !DILexicalBlock(scope: !10100, file: !9656, line: 567, column: 44)
!10110 = !DILocation(line: 569, column: 2, scope: !10109)
!10111 = !DILocation(line: 570, column: 12, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10061, file: !9656, line: 570, column: 6)
!10113 = !DILocation(line: 570, column: 17, scope: !10112)
!10114 = !DILocation(line: 570, column: 39, scope: !10112)
!10115 = !DILocation(line: 570, column: 6, scope: !10061)
!10116 = !DILocation(line: 571, column: 3, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !9656, line: 571, column: 3)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !9656, line: 571, column: 3)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !9656, line: 571, column: 3)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !9656, line: 571, column: 3)
!10121 = distinct !DILexicalBlock(scope: !10112, file: !9656, line: 570, column: 45)
!10122 = !DILocation(line: 572, column: 2, scope: !10121)
!10123 = !DILocation(line: 573, column: 12, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10061, file: !9656, line: 573, column: 6)
!10125 = !DILocation(line: 573, column: 17, scope: !10124)
!10126 = !DILocation(line: 573, column: 42, scope: !10124)
!10127 = !DILocation(line: 573, column: 6, scope: !10061)
!10128 = !DILocation(line: 574, column: 3, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !9656, line: 574, column: 3)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !9656, line: 574, column: 3)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !9656, line: 574, column: 3)
!10132 = distinct !DILexicalBlock(scope: !10133, file: !9656, line: 574, column: 3)
!10133 = distinct !DILexicalBlock(scope: !10124, file: !9656, line: 573, column: 48)
!10134 = !DILocation(line: 575, column: 2, scope: !10133)
!10135 = !DILocation(line: 576, column: 12, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10061, file: !9656, line: 576, column: 6)
!10137 = !DILocation(line: 576, column: 17, scope: !10136)
!10138 = !DILocation(line: 576, column: 44, scope: !10136)
!10139 = !DILocation(line: 576, column: 6, scope: !10061)
!10140 = !DILocation(line: 577, column: 3, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10142, file: !9656, line: 577, column: 3)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !9656, line: 577, column: 3)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !9656, line: 577, column: 3)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !9656, line: 577, column: 3)
!10145 = distinct !DILexicalBlock(scope: !10136, file: !9656, line: 576, column: 50)
!10146 = !DILocation(line: 578, column: 2, scope: !10145)
!10147 = !DILocation(line: 581, column: 12, scope: !10061)
!10148 = !DILocation(line: 583, column: 2, scope: !10061)
!10149 = distinct !DISubprogram(name: "debug_monitor", scope: !9656, file: !9656, line: 632, type: !10150, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{null, !3908, !9723}
!10152 = !{!10153, !10154}
!10153 = !DILocalVariable(name: "esf", arg: 1, scope: !10149, file: !9656, line: 632, type: !3908)
!10154 = !DILocalVariable(name: "recoverable", arg: 2, scope: !10149, file: !9656, line: 632, type: !9723)
!10155 = !DILocation(line: 0, scope: !10149)
!10156 = !DILocation(line: 634, column: 15, scope: !10149)
!10157 = !DILocation(line: 636, column: 2, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10159, file: !9656, line: 636, column: 2)
!10159 = distinct !DILexicalBlock(scope: !10160, file: !9656, line: 636, column: 2)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !9656, line: 636, column: 2)
!10161 = distinct !DILexicalBlock(scope: !10149, file: !9656, line: 636, column: 2)
!10162 = !DILocation(line: 652, column: 1, scope: !10149)
!10163 = distinct !DISubprogram(name: "reserved_exception", scope: !9656, file: !9656, line: 776, type: !10164, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{null, !10064, !125}
!10166 = !{!10167, !10168}
!10167 = !DILocalVariable(name: "esf", arg: 1, scope: !10163, file: !9656, line: 776, type: !10064)
!10168 = !DILocalVariable(name: "fault", arg: 2, scope: !10163, file: !9656, line: 776, type: !125)
!10169 = !DILocation(line: 0, scope: !10163)
!10170 = !DILocation(line: 780, column: 2, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10172, file: !9656, line: 780, column: 2)
!10172 = distinct !DILexicalBlock(scope: !10173, file: !9656, line: 780, column: 2)
!10173 = distinct !DILexicalBlock(scope: !10174, file: !9656, line: 780, column: 2)
!10174 = distinct !DILexicalBlock(scope: !10163, file: !9656, line: 780, column: 2)
!10175 = !DILocation(line: 783, column: 1, scope: !10163)
!10176 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !9656, file: !9656, line: 658, type: !10177, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !10179)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{!153, !3908}
!10179 = !{!10180, !10181, !10182}
!10180 = !DILocalVariable(name: "esf", arg: 1, scope: !10176, file: !9656, line: 658, type: !3908)
!10181 = !DILocalVariable(name: "ret_addr", scope: !10176, file: !9656, line: 660, type: !3951)
!10182 = !DILocalVariable(name: "fault_insn", scope: !10176, file: !9656, line: 686, type: !227)
!10183 = !DILocation(line: 0, scope: !10176)
!10184 = !DILocation(line: 660, column: 46, scope: !10176)
!10185 = !DILocation(line: 660, column: 23, scope: !10176)
!10186 = !DILocation(line: 682, column: 11, scope: !10176)
!10187 = !DILocation(line: 271, column: 3, scope: !10188, inlinedAt: !10189)
!10188 = distinct !DISubprogram(name: "__DSB", scope: !9378, file: !9378, line: 269, type: !4072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !1126)
!10189 = distinct !DILocation(line: 683, column: 2, scope: !10176)
!10190 = !{i64 1907584}
!10191 = !DILocation(line: 260, column: 3, scope: !10192, inlinedAt: !10193)
!10192 = distinct !DISubprogram(name: "__ISB", scope: !9378, file: !9378, line: 258, type: !4072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !1126)
!10193 = distinct !DILocation(line: 684, column: 2, scope: !10176)
!10194 = !{i64 1907301}
!10195 = !DILocation(line: 686, column: 35, scope: !10176)
!10196 = !DILocation(line: 686, column: 24, scope: !10176)
!10197 = !DILocation(line: 688, column: 11, scope: !10176)
!10198 = !DILocation(line: 271, column: 3, scope: !10188, inlinedAt: !10199)
!10199 = distinct !DILocation(line: 689, column: 2, scope: !10176)
!10200 = !DILocation(line: 260, column: 3, scope: !10192, inlinedAt: !10201)
!10201 = distinct !DILocation(line: 690, column: 2, scope: !10176)
!10202 = !DILocation(line: 693, column: 45, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10176, file: !9656, line: 693, column: 6)
!10204 = !DILocation(line: 699, column: 1, scope: !10176)
!10205 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !9656, file: !9656, line: 1107, type: !4072, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3880, retainedNodes: !1126)
!10206 = !DILocation(line: 1111, column: 11, scope: !10205)
!10207 = !DILocation(line: 1136, column: 1, scope: !10205)
!10208 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !10209, file: !10209, line: 26, type: !4072, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3952, retainedNodes: !10210)
!10209 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "irq", scope: !10208, file: !10209, line: 28, type: !125)
!10212 = !DILocation(line: 0, scope: !10208)
!10213 = !DILocation(line: 30, column: 2, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10208, file: !10209, line: 30, column: 2)
!10215 = !DILocation(line: 31, column: 3, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10217, file: !10209, line: 30, column: 39)
!10217 = distinct !DILexicalBlock(scope: !10214, file: !10209, line: 30, column: 2)
!10218 = !DILocation(line: 30, column: 35, scope: !10217)
!10219 = !DILocation(line: 30, column: 13, scope: !10217)
!10220 = distinct !{!10220, !10213, !10221}
!10221 = !DILocation(line: 32, column: 2, scope: !10214)
!10222 = !DILocation(line: 33, column: 1, scope: !10208)
!10223 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1167, file: !1167, line: 1814, type: !9412, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3952, retainedNodes: !10224)
!10224 = !{!10225, !10226}
!10225 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10223, file: !1167, line: 1814, type: !3736)
!10226 = !DILocalVariable(name: "priority", arg: 2, scope: !10223, file: !1167, line: 1814, type: !208)
!10227 = !DILocation(line: 0, scope: !10223)
!10228 = !DILocation(line: 1816, column: 7, scope: !10223)
!10229 = !DILocation(line: 0, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10223, file: !1167, line: 1816, column: 7)
!10231 = !DILocation(line: 1824, column: 1, scope: !10223)
!10232 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !10233, file: !10233, line: 27, type: !10234, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3997, retainedNodes: !10337)
!10233 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10234 = !DISubroutineType(types: !10235)
!10235 = !{null, !10236}
!10236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1020, line: 347, baseType: !10237)
!10237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10238, size: 32)
!10238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !10239)
!10239 = !{!10240, !10298, !10310, !10311, !10312, !10313, !10319, !10332}
!10240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10238, file: !1020, line: 247, baseType: !10241, size: 384)
!10241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !10242)
!10242 = !{!10243, !10267, !10274, !10275, !10276, !10285, !10286, !10287}
!10243 = !DIDerivedType(tag: DW_TAG_member, scope: !10241, file: !1020, line: 60, baseType: !10244, size: 64)
!10244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10241, file: !1020, line: 60, size: 64, elements: !10245)
!10245 = !{!10246, !10261}
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10244, file: !1020, line: 61, baseType: !10247, size: 64)
!10247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !10248)
!10248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !10249)
!10249 = !{!10250, !10256}
!10250 = !DIDerivedType(tag: DW_TAG_member, scope: !10248, file: !1030, line: 38, baseType: !10251, size: 32)
!10251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10248, file: !1030, line: 38, size: 32, elements: !10252)
!10252 = !{!10253, !10255}
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10251, file: !1030, line: 39, baseType: !10254, size: 32)
!10254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10248, size: 32)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10251, file: !1030, line: 40, baseType: !10254, size: 32)
!10256 = !DIDerivedType(tag: DW_TAG_member, scope: !10248, file: !1030, line: 42, baseType: !10257, size: 32, offset: 32)
!10257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10248, file: !1030, line: 42, size: 32, elements: !10258)
!10258 = !{!10259, !10260}
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10257, file: !1030, line: 43, baseType: !10254, size: 32)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10257, file: !1030, line: 44, baseType: !10254, size: 32)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10244, file: !1020, line: 62, baseType: !10262, size: 64)
!10262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !10263)
!10263 = !{!10264}
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10262, file: !1046, line: 50, baseType: !10265, size: 64)
!10265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10266, size: 64, elements: !807)
!10266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10262, size: 32)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10241, file: !1020, line: 68, baseType: !10268, size: 32, offset: 64)
!10268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10269, size: 32)
!10269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !10270)
!10270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !10271)
!10271 = !{!10272}
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10270, file: !1054, line: 232, baseType: !10273, size: 64)
!10273 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !10248)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10241, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10241, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!10276 = !DIDerivedType(tag: DW_TAG_member, scope: !10241, file: !1020, line: 90, baseType: !10277, size: 16, offset: 112)
!10277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10241, file: !1020, line: 90, size: 16, elements: !10278)
!10278 = !{!10279, !10284}
!10279 = !DIDerivedType(tag: DW_TAG_member, scope: !10277, file: !1020, line: 91, baseType: !10280, size: 16)
!10280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10277, file: !1020, line: 91, size: 16, elements: !10281)
!10281 = !{!10282, !10283}
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10280, file: !1020, line: 96, baseType: !1068, size: 8)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10280, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10277, file: !1020, line: 100, baseType: !227, size: 16)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10241, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10241, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10241, file: !1020, line: 131, baseType: !10288, size: 192, offset: 192)
!10288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !10289)
!10289 = !{!10290, !10291, !10297}
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10288, file: !1054, line: 245, baseType: !10247, size: 64)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10288, file: !1054, line: 246, baseType: !10292, size: 32, offset: 64)
!10292 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !10293)
!10293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10294, size: 32)
!10294 = !DISubroutineType(types: !10295)
!10295 = !{null, !10296}
!10296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10288, size: 32)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10288, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10238, file: !1020, line: 250, baseType: !10299, size: 288, offset: 384)
!10299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !10300)
!10300 = !{!10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309}
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10299, file: !1088, line: 26, baseType: !208, size: 32)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10299, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10299, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10299, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10299, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10299, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10299, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10299, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10299, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10238, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10238, file: !1020, line: 256, baseType: !10269, size: 64, offset: 704)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10238, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10238, file: !1020, line: 300, baseType: !10314, size: 96, offset: 800)
!10314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !10315)
!10315 = !{!10316, !10317, !10318}
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10314, file: !1020, line: 153, baseType: !22, size: 32)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10314, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10314, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10238, file: !1020, line: 325, baseType: !10320, size: 32, offset: 896)
!10320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10321, size: 32)
!10321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !10322)
!10322 = !{!10323, !10329, !10330}
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10321, file: !1111, line: 5074, baseType: !10324, size: 96)
!10324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !10325)
!10325 = !{!10326, !10327, !10328}
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10324, file: !1115, line: 57, baseType: !1118, size: 32)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10324, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10324, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10321, file: !1111, line: 5075, baseType: !10269, size: 64, offset: 96)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10321, file: !1111, line: 5076, baseType: !10331, offset: 160)
!10331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10238, file: !1020, line: 343, baseType: !10333, size: 64, offset: 928)
!10333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !10334)
!10334 = !{!10335, !10336}
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10333, file: !1088, line: 63, baseType: !208, size: 32)
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10333, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!10337 = !{!10338}
!10338 = !DILocalVariable(name: "thread", arg: 1, scope: !10232, file: !10233, line: 27, type: !10236)
!10339 = !DILocation(line: 0, scope: !10232)
!10340 = !DILocation(line: 29, column: 6, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10232, file: !10233, line: 29, column: 6)
!10342 = !DILocation(line: 29, column: 15, scope: !10341)
!10343 = !DILocation(line: 29, column: 6, scope: !10232)
!10344 = !DILocation(line: 1031, column: 3, scope: !10345, inlinedAt: !10348)
!10345 = distinct !DISubprogram(name: "__get_IPSR", scope: !9378, file: !9378, line: 1027, type: !9459, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3997, retainedNodes: !10346)
!10346 = !{!10347}
!10347 = !DILocalVariable(name: "result", scope: !10345, file: !9378, line: 1029, type: !208)
!10348 = distinct !DILocation(line: 48, column: 10, scope: !10349, inlinedAt: !10353)
!10349 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !10350, file: !10350, line: 46, type: !10351, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3997, retainedNodes: !1126)
!10350 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10351 = !DISubroutineType(types: !10352)
!10352 = !{!153}
!10353 = distinct !DILocation(line: 30, column: 7, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !10233, line: 30, column: 7)
!10355 = distinct !DILexicalBlock(scope: !10341, file: !10233, line: 29, column: 26)
!10356 = !{i64 1896432}
!10357 = !DILocation(line: 0, scope: !10345, inlinedAt: !10348)
!10358 = !DILocation(line: 48, column: 9, scope: !10349, inlinedAt: !10353)
!10359 = !DILocation(line: 30, column: 7, scope: !10355)
!10360 = !DILocation(line: 42, column: 14, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10354, file: !10233, line: 30, column: 25)
!10362 = !DILocation(line: 48, column: 15, scope: !10361)
!10363 = !DILocation(line: 49, column: 3, scope: !10361)
!10364 = !DILocation(line: 52, column: 2, scope: !10232)
!10365 = !DILocation(line: 53, column: 1, scope: !10232)
!10366 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !1015, file: !1015, line: 127, type: !4072, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !1126)
!10367 = !DILocation(line: 134, column: 2, scope: !10366)
!10368 = !DILocation(line: 156, column: 1, scope: !10366)
!10369 = !DILocation(line: 0, scope: !1014)
!10370 = !DILocation(line: 311, column: 2, scope: !1014)
!10371 = !DILocation(line: 316, column: 1, scope: !1014)
!10372 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !1194, file: !1194, line: 180, type: !4072, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !1126)
!10373 = !DILocation(line: 188, column: 12, scope: !10372)
!10374 = !DILocation(line: 271, column: 3, scope: !10375, inlinedAt: !10376)
!10375 = distinct !DISubprogram(name: "__DSB", scope: !9378, file: !9378, line: 269, type: !4072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !1126)
!10376 = distinct !DILocation(line: 192, column: 2, scope: !10372)
!10377 = !{i64 2061257}
!10378 = !DILocation(line: 260, column: 3, scope: !10379, inlinedAt: !10380)
!10379 = distinct !DISubprogram(name: "__ISB", scope: !9378, file: !9378, line: 258, type: !4072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !1126)
!10380 = distinct !DILocation(line: 193, column: 2, scope: !10372)
!10381 = !{i64 2060974}
!10382 = !DILocation(line: 194, column: 1, scope: !10372)
!10383 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !1194, file: !1194, line: 199, type: !4072, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !1126)
!10384 = !DILocation(line: 282, column: 3, scope: !10385, inlinedAt: !10386)
!10385 = distinct !DISubprogram(name: "__DMB", scope: !9378, file: !9378, line: 280, type: !4072, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !1126)
!10386 = distinct !DILocation(line: 202, column: 2, scope: !10383)
!10387 = !{i64 2061533}
!10388 = !DILocation(line: 205, column: 12, scope: !10383)
!10389 = !DILocation(line: 206, column: 1, scope: !10383)
!10390 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !1194, file: !1194, line: 275, type: !10391, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10404)
!10391 = !DISubroutineType(types: !10392)
!10392 = !{null, !10393, !323, !3090, !3090}
!10393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10394, size: 32)
!10394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10395)
!10395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !1137, line: 52, size: 96, elements: !10396)
!10396 = !{!10397, !10398, !10399}
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10395, file: !1137, line: 53, baseType: !22, size: 32)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10395, file: !1137, line: 54, baseType: !272, size: 32, offset: 32)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !10395, file: !1137, line: 55, baseType: !10400, size: 32, offset: 64)
!10400 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !1143, line: 151, baseType: !10401)
!10401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1143, line: 149, size: 32, elements: !10402)
!10402 = !{!10403}
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !10401, file: !1143, line: 150, baseType: !208, size: 32)
!10404 = !{!10405, !10406, !10407, !10408}
!10405 = !DILocalVariable(name: "static_regions", arg: 1, scope: !10390, file: !1194, line: 276, type: !10393)
!10406 = !DILocalVariable(name: "regions_num", arg: 2, scope: !10390, file: !1194, line: 276, type: !323)
!10407 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !10390, file: !1194, line: 277, type: !3090)
!10408 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !10390, file: !1194, line: 277, type: !3090)
!10409 = !DILocation(line: 0, scope: !10390)
!10410 = !DILocation(line: 279, column: 6, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10390, file: !1194, line: 279, column: 6)
!10412 = !DILocation(line: 285, column: 1, scope: !10390)
!10413 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !10414, file: !10414, line: 220, type: !10415, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10417)
!10414 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10415 = !DISubroutineType(types: !10416)
!10416 = !{!125, !10393, !323, !3090, !3090}
!10417 = !{!10418, !10419, !10420, !10421, !10422}
!10418 = !DILocalVariable(name: "static_regions", arg: 1, scope: !10413, file: !10414, line: 221, type: !10393)
!10419 = !DILocalVariable(name: "regions_num", arg: 2, scope: !10413, file: !10414, line: 221, type: !323)
!10420 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !10413, file: !10414, line: 222, type: !3090)
!10421 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !10413, file: !10414, line: 223, type: !3090)
!10422 = !DILocalVariable(name: "mpu_reg_index", scope: !10413, file: !10414, line: 225, type: !125)
!10423 = !DILocation(line: 0, scope: !10413)
!10424 = !DILocation(line: 225, column: 22, scope: !10413)
!10425 = !DILocation(line: 233, column: 18, scope: !10413)
!10426 = !DILocation(line: 236, column: 23, scope: !10413)
!10427 = !DILocation(line: 236, column: 21, scope: !10413)
!10428 = !DILocation(line: 238, column: 2, scope: !10413)
!10429 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !1194, file: !1194, line: 105, type: !10430, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10432)
!10430 = !DISubroutineType(types: !10431)
!10431 = !{!125, !10393, !150, !150, !153}
!10432 = !{!10433, !10434, !10435, !10436, !10437, !10438}
!10433 = !DILocalVariable(name: "regions", arg: 1, scope: !10429, file: !1194, line: 106, type: !10393)
!10434 = !DILocalVariable(name: "regions_num", arg: 2, scope: !10429, file: !1194, line: 106, type: !150)
!10435 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !10429, file: !1194, line: 106, type: !150)
!10436 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !10429, file: !1194, line: 107, type: !153)
!10437 = !DILocalVariable(name: "i", scope: !10429, file: !1194, line: 109, type: !125)
!10438 = !DILocalVariable(name: "reg_index", scope: !10429, file: !1194, line: 110, type: !125)
!10439 = !DILocation(line: 0, scope: !10429)
!10440 = !DILocation(line: 110, column: 18, scope: !10429)
!10441 = !DILocation(line: 112, column: 16, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10443, file: !1194, line: 112, column: 2)
!10443 = distinct !DILexicalBlock(scope: !10429, file: !1194, line: 112, column: 2)
!10444 = !DILocation(line: 112, column: 2, scope: !10443)
!10445 = !DILocation(line: 113, column: 7, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !1194, line: 113, column: 7)
!10447 = distinct !DILexicalBlock(scope: !10442, file: !1194, line: 112, column: 36)
!10448 = !DILocation(line: 113, column: 18, scope: !10446)
!10449 = !DILocation(line: 113, column: 23, scope: !10446)
!10450 = !DILocation(line: 113, column: 7, scope: !10447)
!10451 = !DILocation(line: 118, column: 23, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10447, file: !1194, line: 118, column: 7)
!10453 = !DILocation(line: 119, column: 7, scope: !10452)
!10454 = !DILocation(line: 118, column: 7, scope: !10447)
!10455 = !DILocation(line: 120, column: 4, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10457, file: !1194, line: 120, column: 4)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !1194, line: 120, column: 4)
!10458 = distinct !DILexicalBlock(scope: !10459, file: !1194, line: 120, column: 4)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !1194, line: 120, column: 4)
!10460 = distinct !DILexicalBlock(scope: !10452, file: !1194, line: 119, column: 45)
!10461 = !DILocation(line: 121, column: 4, scope: !10460)
!10462 = !DILocation(line: 124, column: 36, scope: !10447)
!10463 = !DILocation(line: 124, column: 15, scope: !10447)
!10464 = !DILocation(line: 126, column: 17, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10447, file: !1194, line: 126, column: 7)
!10466 = !DILocation(line: 126, column: 7, scope: !10447)
!10467 = !DILocation(line: 131, column: 12, scope: !10447)
!10468 = !DILocation(line: 132, column: 2, scope: !10447)
!10469 = !DILocation(line: 112, column: 32, scope: !10442)
!10470 = distinct !{!10470, !10444, !10471}
!10471 = !DILocation(line: 132, column: 2, scope: !10443)
!10472 = !DILocation(line: 135, column: 1, scope: !10429)
!10473 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !10414, file: !10414, line: 63, type: !10474, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10476)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{!125, !10393}
!10476 = !{!10477, !10478}
!10477 = !DILocalVariable(name: "part", arg: 1, scope: !10473, file: !10414, line: 63, type: !10393)
!10478 = !DILocalVariable(name: "partition_is_valid", scope: !10473, file: !10414, line: 70, type: !125)
!10479 = !DILocation(line: 0, scope: !10473)
!10480 = !DILocation(line: 71, column: 11, scope: !10473)
!10481 = !DILocation(line: 71, column: 37, scope: !10473)
!10482 = !{i32 0, i32 33}
!10483 = !DILocation(line: 72, column: 3, scope: !10473)
!10484 = !DILocation(line: 71, column: 30, scope: !10473)
!10485 = !DILocation(line: 75, column: 11, scope: !10473)
!10486 = !DILocation(line: 75, column: 17, scope: !10473)
!10487 = !DILocation(line: 75, column: 38, scope: !10473)
!10488 = !DILocation(line: 77, column: 2, scope: !10473)
!10489 = distinct !DISubprogram(name: "mpu_configure_region", scope: !1194, file: !1194, line: 79, type: !10490, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10492)
!10490 = !DISubroutineType(types: !10491)
!10491 = !{!125, !323, !10393}
!10492 = !{!10493, !10494, !10495}
!10493 = !DILocalVariable(name: "index", arg: 1, scope: !10489, file: !1194, line: 79, type: !323)
!10494 = !DILocalVariable(name: "new_region", arg: 2, scope: !10489, file: !1194, line: 80, type: !10393)
!10495 = !DILocalVariable(name: "region_conf", scope: !10489, file: !1194, line: 82, type: !1183)
!10496 = !DILocation(line: 0, scope: !10489)
!10497 = !DILocation(line: 82, column: 2, scope: !10489)
!10498 = !DILocation(line: 82, column: 24, scope: !10489)
!10499 = !DILocation(line: 87, column: 33, scope: !10489)
!10500 = !DILocation(line: 87, column: 14, scope: !10489)
!10501 = !DILocation(line: 87, column: 19, scope: !10489)
!10502 = !DILocation(line: 91, column: 55, scope: !10489)
!10503 = !DILocation(line: 92, column: 16, scope: !10489)
!10504 = !DILocation(line: 92, column: 53, scope: !10489)
!10505 = !DILocation(line: 91, column: 2, scope: !10489)
!10506 = !DILocation(line: 95, column: 9, scope: !10489)
!10507 = !DILocation(line: 97, column: 1, scope: !10489)
!10508 = !DILocation(line: 95, column: 2, scope: !10489)
!10509 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !10414, file: !10414, line: 113, type: !10510, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10515)
!10510 = !DISubroutineType(types: !10511)
!10511 = !{null, !10512, !10513, !208, !208}
!10512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!10513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10514, size: 32)
!10514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10400)
!10515 = !{!10516, !10517, !10518, !10519}
!10516 = !DILocalVariable(name: "p_attr", arg: 1, scope: !10509, file: !10414, line: 114, type: !10512)
!10517 = !DILocalVariable(name: "attr", arg: 2, scope: !10509, file: !10414, line: 115, type: !10513)
!10518 = !DILocalVariable(name: "base", arg: 3, scope: !10509, file: !10414, line: 115, type: !208)
!10519 = !DILocalVariable(name: "size", arg: 4, scope: !10509, file: !10414, line: 115, type: !208)
!10520 = !DILocation(line: 0, scope: !10509)
!10521 = !DILocation(line: 127, column: 23, scope: !10509)
!10522 = !DILocation(line: 127, column: 35, scope: !10509)
!10523 = !DILocation(line: 127, column: 33, scope: !10509)
!10524 = !DILocation(line: 127, column: 10, scope: !10509)
!10525 = !DILocation(line: 127, column: 15, scope: !10509)
!10526 = !DILocation(line: 129, column: 1, scope: !10509)
!10527 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !1194, file: !1194, line: 57, type: !10528, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10530)
!10528 = !DISubroutineType(types: !10529)
!10529 = !{!125, !323, !1181}
!10530 = !{!10531, !10532}
!10531 = !DILocalVariable(name: "index", arg: 1, scope: !10527, file: !1194, line: 57, type: !323)
!10532 = !DILocalVariable(name: "region_conf", arg: 2, scope: !10527, file: !1194, line: 58, type: !1181)
!10533 = !DILocation(line: 0, scope: !10527)
!10534 = !DILocation(line: 61, column: 6, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10527, file: !1194, line: 61, column: 6)
!10536 = !DILocation(line: 61, column: 12, scope: !10535)
!10537 = !DILocation(line: 61, column: 6, scope: !10527)
!10538 = !DILocation(line: 64, column: 3, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10540, file: !1194, line: 64, column: 3)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !1194, line: 64, column: 3)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !1194, line: 64, column: 3)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !1194, line: 64, column: 3)
!10543 = distinct !DILexicalBlock(scope: !10535, file: !1194, line: 61, column: 40)
!10544 = !DILocation(line: 65, column: 3, scope: !10543)
!10545 = !DILocation(line: 71, column: 2, scope: !10527)
!10546 = !DILocation(line: 73, column: 2, scope: !10527)
!10547 = !DILocation(line: 74, column: 1, scope: !10527)
!10548 = distinct !DISubprogram(name: "region_init", scope: !10414, file: !10414, line: 29, type: !10549, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10551)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{null, !3090, !1181}
!10551 = !{!10552, !10553}
!10552 = !DILocalVariable(name: "index", arg: 1, scope: !10548, file: !10414, line: 29, type: !3090)
!10553 = !DILocalVariable(name: "region_conf", arg: 2, scope: !10548, file: !10414, line: 30, type: !1181)
!10554 = !DILocation(line: 0, scope: !10548)
!10555 = !DILocation(line: 33, column: 2, scope: !10548)
!10556 = !DILocation(line: 47, column: 28, scope: !10548)
!10557 = !DILocation(line: 47, column: 33, scope: !10548)
!10558 = !DILocation(line: 48, column: 26, scope: !10548)
!10559 = !DILocation(line: 47, column: 12, scope: !10548)
!10560 = !DILocation(line: 49, column: 32, scope: !10548)
!10561 = !DILocation(line: 49, column: 37, scope: !10548)
!10562 = !DILocation(line: 49, column: 12, scope: !10548)
!10563 = !DILocation(line: 53, column: 1, scope: !10548)
!10564 = distinct !DISubprogram(name: "set_region_number", scope: !10565, file: !10565, line: 32, type: !9469, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10566)
!10565 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10566 = !{!10567}
!10567 = !DILocalVariable(name: "index", arg: 1, scope: !10564, file: !10565, line: 32, type: !208)
!10568 = !DILocation(line: 0, scope: !10564)
!10569 = !DILocation(line: 34, column: 11, scope: !10564)
!10570 = !DILocation(line: 35, column: 1, scope: !10564)
!10571 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !10414, file: !10414, line: 88, type: !10572, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10574)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!208, !208}
!10574 = !{!10575}
!10575 = !DILocalVariable(name: "size", arg: 1, scope: !10571, file: !10414, line: 88, type: !208)
!10576 = !DILocation(line: 0, scope: !10571)
!10577 = !DILocation(line: 91, column: 11, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10571, file: !10414, line: 91, column: 6)
!10579 = !DILocation(line: 91, column: 6, scope: !10571)
!10580 = !DILocation(line: 100, column: 11, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10571, file: !10414, line: 100, column: 6)
!10582 = !DILocation(line: 100, column: 6, scope: !10571)
!10583 = !DILocation(line: 104, column: 35, scope: !10571)
!10584 = !DILocation(line: 104, column: 16, scope: !10571)
!10585 = !DILocation(line: 104, column: 50, scope: !10571)
!10586 = !DILocation(line: 104, column: 72, scope: !10571)
!10587 = !DILocation(line: 104, column: 2, scope: !10571)
!10588 = !DILocation(line: 106, column: 1, scope: !10571)
!10589 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !1194, file: !1194, line: 307, type: !10590, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10592)
!10590 = !DISubroutineType(types: !10591)
!10591 = !{null, !10393, !150}
!10592 = !{!10593, !10594}
!10593 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !10589, file: !1194, line: 308, type: !10393)
!10594 = !DILocalVariable(name: "regions_num", arg: 2, scope: !10589, file: !1194, line: 308, type: !150)
!10595 = !DILocation(line: 0, scope: !10589)
!10596 = !DILocation(line: 310, column: 6, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10589, file: !1194, line: 310, column: 6)
!10598 = !DILocation(line: 316, column: 1, scope: !10589)
!10599 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !10414, file: !10414, line: 249, type: !10600, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10602)
!10600 = !DISubroutineType(types: !10601)
!10601 = !{!125, !10393, !150}
!10602 = !{!10603, !10604, !10605, !10606}
!10603 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !10599, file: !10414, line: 250, type: !10393)
!10604 = !DILocalVariable(name: "regions_num", arg: 2, scope: !10599, file: !10414, line: 250, type: !150)
!10605 = !DILocalVariable(name: "mpu_reg_index", scope: !10599, file: !10414, line: 252, type: !125)
!10606 = !DILocalVariable(name: "i", scope: !10607, file: !10414, line: 264, type: !125)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !10414, line: 264, column: 3)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !10414, line: 261, column: 32)
!10609 = distinct !DILexicalBlock(scope: !10599, file: !10414, line: 261, column: 6)
!10610 = !DILocation(line: 0, scope: !10599)
!10611 = !DILocation(line: 252, column: 22, scope: !10599)
!10612 = !DILocation(line: 258, column: 18, scope: !10599)
!10613 = !DILocation(line: 261, column: 20, scope: !10609)
!10614 = !DILocation(line: 261, column: 6, scope: !10599)
!10615 = !DILocation(line: 0, scope: !10607)
!10616 = !DILocation(line: 265, column: 4, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !10414, line: 264, column: 59)
!10618 = distinct !DILexicalBlock(scope: !10607, file: !10414, line: 264, column: 3)
!10619 = !DILocation(line: 264, column: 55, scope: !10618)
!10620 = !DILocation(line: 264, column: 33, scope: !10618)
!10621 = !DILocation(line: 264, column: 3, scope: !10607)
!10622 = distinct !{!10622, !10621, !10623}
!10623 = !DILocation(line: 266, column: 3, scope: !10607)
!10624 = !DILocation(line: 269, column: 2, scope: !10599)
!10625 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !10626, file: !10626, line: 218, type: !9469, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10627)
!10626 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10627 = !{!10628}
!10628 = !DILocalVariable(name: "rnr", arg: 1, scope: !10625, file: !10626, line: 218, type: !208)
!10629 = !DILocation(line: 0, scope: !10625)
!10630 = !DILocation(line: 220, column: 12, scope: !10625)
!10631 = !DILocation(line: 221, column: 13, scope: !10625)
!10632 = !DILocation(line: 222, column: 1, scope: !10625)
!10633 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !1194, file: !1194, line: 326, type: !10634, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10636)
!10634 = !DISubroutineType(types: !10635)
!10635 = !{!125}
!10636 = !{!10637}
!10637 = !DILocalVariable(name: "r_index", scope: !10633, file: !1194, line: 328, type: !208)
!10638 = !DILocation(line: 330, column: 17, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10633, file: !1194, line: 330, column: 6)
!10640 = !DILocation(line: 330, column: 29, scope: !10639)
!10641 = !DILocation(line: 330, column: 6, scope: !10633)
!10642 = !DILocation(line: 347, column: 2, scope: !10633)
!10643 = !DILocation(line: 0, scope: !10633)
!10644 = !DILocation(line: 364, column: 29, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !1194, line: 364, column: 2)
!10646 = distinct !DILexicalBlock(scope: !10633, file: !1194, line: 364, column: 2)
!10647 = !DILocation(line: 364, column: 2, scope: !10646)
!10648 = !DILocation(line: 365, column: 25, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10645, file: !1194, line: 364, column: 66)
!10650 = !DILocation(line: 365, column: 3, scope: !10649)
!10651 = !DILocation(line: 364, column: 62, scope: !10645)
!10652 = distinct !{!10652, !10647, !10653}
!10653 = !DILocation(line: 366, column: 2, scope: !10646)
!10654 = !DILocation(line: 369, column: 23, scope: !10633)
!10655 = !DILocation(line: 369, column: 21, scope: !10633)
!10656 = !DILocation(line: 372, column: 2, scope: !10633)
!10657 = !DILocation(line: 443, column: 2, scope: !10633)
!10658 = !DILocation(line: 444, column: 1, scope: !10633)
!10659 = distinct !DISubprogram(name: "strcpy", scope: !10660, file: !10660, line: 20, type: !10661, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10665)
!10660 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10661 = !DISubroutineType(types: !10662)
!10662 = !{!393, !10663, !10664}
!10663 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!10664 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!10665 = !{!10666, !10667, !10668}
!10666 = !DILocalVariable(name: "d", arg: 1, scope: !10659, file: !10660, line: 20, type: !10663)
!10667 = !DILocalVariable(name: "s", arg: 2, scope: !10659, file: !10660, line: 20, type: !10664)
!10668 = !DILocalVariable(name: "dest", scope: !10659, file: !10660, line: 22, type: !393)
!10669 = !DILocation(line: 0, scope: !10659)
!10670 = !DILocation(line: 24, column: 9, scope: !10659)
!10671 = !DILocation(line: 24, column: 12, scope: !10659)
!10672 = !DILocation(line: 24, column: 2, scope: !10659)
!10673 = !DILocation(line: 25, column: 6, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10659, file: !10660, line: 24, column: 21)
!10675 = !DILocation(line: 26, column: 4, scope: !10674)
!10676 = !DILocation(line: 27, column: 4, scope: !10674)
!10677 = distinct !{!10677, !10672, !10678}
!10678 = !DILocation(line: 28, column: 2, scope: !10659)
!10679 = !DILocation(line: 30, column: 5, scope: !10659)
!10680 = !DILocation(line: 32, column: 2, scope: !10659)
!10681 = distinct !DISubprogram(name: "strncpy", scope: !10660, file: !10660, line: 42, type: !10682, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10684)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{!393, !10663, !10664, !272}
!10684 = !{!10685, !10686, !10687, !10688}
!10685 = !DILocalVariable(name: "d", arg: 1, scope: !10681, file: !10660, line: 42, type: !10663)
!10686 = !DILocalVariable(name: "s", arg: 2, scope: !10681, file: !10660, line: 42, type: !10664)
!10687 = !DILocalVariable(name: "n", arg: 3, scope: !10681, file: !10660, line: 42, type: !272)
!10688 = !DILocalVariable(name: "dest", scope: !10681, file: !10660, line: 44, type: !393)
!10689 = !DILocation(line: 0, scope: !10681)
!10690 = !DILocation(line: 46, column: 12, scope: !10681)
!10691 = !DILocation(line: 46, column: 17, scope: !10681)
!10692 = !DILocation(line: 46, column: 20, scope: !10681)
!10693 = !DILocation(line: 46, column: 23, scope: !10681)
!10694 = !DILocation(line: 46, column: 2, scope: !10681)
!10695 = !DILocation(line: 47, column: 6, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10681, file: !10660, line: 46, column: 32)
!10697 = !DILocation(line: 48, column: 4, scope: !10696)
!10698 = !DILocation(line: 49, column: 4, scope: !10696)
!10699 = !DILocation(line: 50, column: 4, scope: !10696)
!10700 = distinct !{!10700, !10694, !10701}
!10701 = !DILocation(line: 51, column: 2, scope: !10681)
!10702 = !DILocation(line: 54, column: 6, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10681, file: !10660, line: 53, column: 16)
!10704 = !DILocation(line: 55, column: 4, scope: !10703)
!10705 = !DILocation(line: 56, column: 4, scope: !10703)
!10706 = !DILocation(line: 53, column: 11, scope: !10681)
!10707 = !DILocation(line: 53, column: 2, scope: !10681)
!10708 = distinct !{!10708, !10707, !10709}
!10709 = !DILocation(line: 57, column: 2, scope: !10681)
!10710 = !DILocation(line: 59, column: 2, scope: !10681)
!10711 = distinct !DISubprogram(name: "strchr", scope: !10660, file: !10660, line: 69, type: !10712, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10714)
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!393, !140, !125}
!10714 = !{!10715, !10716, !10717}
!10715 = !DILocalVariable(name: "s", arg: 1, scope: !10711, file: !10660, line: 69, type: !140)
!10716 = !DILocalVariable(name: "c", arg: 2, scope: !10711, file: !10660, line: 69, type: !125)
!10717 = !DILocalVariable(name: "tmp", scope: !10711, file: !10660, line: 71, type: !142)
!10718 = !DILocation(line: 0, scope: !10711)
!10719 = !DILocation(line: 73, column: 2, scope: !10711)
!10720 = !DILocation(line: 73, column: 10, scope: !10711)
!10721 = !DILocation(line: 73, column: 13, scope: !10711)
!10722 = !DILocation(line: 73, column: 21, scope: !10711)
!10723 = !DILocation(line: 74, column: 4, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10711, file: !10660, line: 73, column: 38)
!10725 = distinct !{!10725, !10719, !10726}
!10726 = !DILocation(line: 75, column: 2, scope: !10711)
!10727 = !DILocation(line: 77, column: 9, scope: !10711)
!10728 = !DILocation(line: 77, column: 2, scope: !10711)
!10729 = distinct !DISubprogram(name: "strrchr", scope: !10660, file: !10660, line: 87, type: !10712, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10730)
!10730 = !{!10731, !10732, !10733}
!10731 = !DILocalVariable(name: "s", arg: 1, scope: !10729, file: !10660, line: 87, type: !140)
!10732 = !DILocalVariable(name: "c", arg: 2, scope: !10729, file: !10660, line: 87, type: !125)
!10733 = !DILocalVariable(name: "match", scope: !10729, file: !10660, line: 89, type: !393)
!10734 = !DILocation(line: 0, scope: !10729)
!10735 = !DILocation(line: 91, column: 2, scope: !10729)
!10736 = !DILocation(line: 92, column: 7, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !10660, line: 92, column: 7)
!10738 = distinct !DILexicalBlock(scope: !10729, file: !10660, line: 91, column: 5)
!10739 = !DILocation(line: 92, column: 10, scope: !10737)
!10740 = !DILocation(line: 92, column: 7, scope: !10738)
!10741 = !DILocation(line: 95, column: 13, scope: !10729)
!10742 = !DILocation(line: 95, column: 2, scope: !10738)
!10743 = distinct !{!10743, !10735, !10744}
!10744 = !DILocation(line: 95, column: 15, scope: !10729)
!10745 = !DILocation(line: 97, column: 2, scope: !10729)
!10746 = distinct !DISubprogram(name: "strlen", scope: !10660, file: !10660, line: 107, type: !10747, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10749)
!10747 = !DISubroutineType(types: !10748)
!10748 = !{!272, !140}
!10749 = !{!10750, !10751}
!10750 = !DILocalVariable(name: "s", arg: 1, scope: !10746, file: !10660, line: 107, type: !140)
!10751 = !DILocalVariable(name: "n", scope: !10746, file: !10660, line: 109, type: !272)
!10752 = !DILocation(line: 0, scope: !10746)
!10753 = !DILocation(line: 111, column: 9, scope: !10746)
!10754 = !DILocation(line: 111, column: 12, scope: !10746)
!10755 = !DILocation(line: 111, column: 2, scope: !10746)
!10756 = !DILocation(line: 112, column: 4, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10746, file: !10660, line: 111, column: 21)
!10758 = !DILocation(line: 113, column: 4, scope: !10757)
!10759 = distinct !{!10759, !10755, !10760}
!10760 = !DILocation(line: 114, column: 2, scope: !10746)
!10761 = !DILocation(line: 116, column: 2, scope: !10746)
!10762 = distinct !DISubprogram(name: "strnlen", scope: !10660, file: !10660, line: 126, type: !10763, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10765)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{!272, !140, !272}
!10765 = !{!10766, !10767, !10768}
!10766 = !DILocalVariable(name: "s", arg: 1, scope: !10762, file: !10660, line: 126, type: !140)
!10767 = !DILocalVariable(name: "maxlen", arg: 2, scope: !10762, file: !10660, line: 126, type: !272)
!10768 = !DILocalVariable(name: "n", scope: !10762, file: !10660, line: 128, type: !272)
!10769 = !DILocation(line: 0, scope: !10762)
!10770 = !DILocation(line: 130, column: 9, scope: !10762)
!10771 = !DILocation(line: 130, column: 12, scope: !10762)
!10772 = !DILocation(line: 130, column: 20, scope: !10762)
!10773 = !DILocation(line: 130, column: 2, scope: !10762)
!10774 = !DILocation(line: 131, column: 4, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10762, file: !10660, line: 130, column: 35)
!10776 = !DILocation(line: 132, column: 4, scope: !10775)
!10777 = distinct !{!10777, !10773, !10778}
!10778 = !DILocation(line: 133, column: 2, scope: !10762)
!10779 = !DILocation(line: 135, column: 2, scope: !10762)
!10780 = distinct !DISubprogram(name: "strcmp", scope: !10660, file: !10660, line: 145, type: !10781, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!125, !140, !140}
!10783 = !{!10784, !10785}
!10784 = !DILocalVariable(name: "s1", arg: 1, scope: !10780, file: !10660, line: 145, type: !140)
!10785 = !DILocalVariable(name: "s2", arg: 2, scope: !10780, file: !10660, line: 145, type: !140)
!10786 = !DILocation(line: 0, scope: !10780)
!10787 = !DILocation(line: 147, column: 10, scope: !10780)
!10788 = !DILocation(line: 147, column: 17, scope: !10780)
!10789 = !DILocation(line: 147, column: 14, scope: !10780)
!10790 = !DILocation(line: 147, column: 22, scope: !10780)
!10791 = !DILocation(line: 148, column: 5, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10780, file: !10660, line: 147, column: 40)
!10793 = !DILocation(line: 149, column: 5, scope: !10792)
!10794 = distinct !{!10794, !10795, !10796}
!10795 = !DILocation(line: 147, column: 2, scope: !10780)
!10796 = !DILocation(line: 150, column: 2, scope: !10780)
!10797 = !DILocation(line: 152, column: 9, scope: !10780)
!10798 = !DILocation(line: 152, column: 15, scope: !10780)
!10799 = !DILocation(line: 152, column: 13, scope: !10780)
!10800 = !DILocation(line: 152, column: 2, scope: !10780)
!10801 = distinct !DISubprogram(name: "strncmp", scope: !10660, file: !10660, line: 162, type: !10802, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10804)
!10802 = !DISubroutineType(types: !10803)
!10803 = !{!125, !140, !140, !272}
!10804 = !{!10805, !10806, !10807}
!10805 = !DILocalVariable(name: "s1", arg: 1, scope: !10801, file: !10660, line: 162, type: !140)
!10806 = !DILocalVariable(name: "s2", arg: 2, scope: !10801, file: !10660, line: 162, type: !140)
!10807 = !DILocalVariable(name: "n", arg: 3, scope: !10801, file: !10660, line: 162, type: !272)
!10808 = !DILocation(line: 0, scope: !10801)
!10809 = !DILocation(line: 164, column: 17, scope: !10801)
!10810 = !DILocation(line: 164, column: 21, scope: !10801)
!10811 = !DILocation(line: 164, column: 28, scope: !10801)
!10812 = !DILocation(line: 164, column: 25, scope: !10801)
!10813 = !DILocation(line: 164, column: 33, scope: !10801)
!10814 = !DILocation(line: 165, column: 5, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10801, file: !10660, line: 164, column: 51)
!10816 = !DILocation(line: 166, column: 5, scope: !10815)
!10817 = !DILocation(line: 167, column: 4, scope: !10815)
!10818 = distinct !{!10818, !10819, !10820}
!10819 = !DILocation(line: 164, column: 2, scope: !10801)
!10820 = !DILocation(line: 168, column: 2, scope: !10801)
!10821 = !DILocation(line: 170, column: 25, scope: !10801)
!10822 = !DILocation(line: 170, column: 31, scope: !10801)
!10823 = !DILocation(line: 170, column: 29, scope: !10801)
!10824 = !DILocation(line: 170, column: 9, scope: !10801)
!10825 = !DILocation(line: 170, column: 2, scope: !10801)
!10826 = distinct !DISubprogram(name: "strtok_r", scope: !10660, file: !10660, line: 180, type: !10827, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10829)
!10827 = !DISubroutineType(types: !10828)
!10828 = !{!393, !393, !140, !392}
!10829 = !{!10830, !10831, !10832, !10833, !10834}
!10830 = !DILocalVariable(name: "str", arg: 1, scope: !10826, file: !10660, line: 180, type: !393)
!10831 = !DILocalVariable(name: "sep", arg: 2, scope: !10826, file: !10660, line: 180, type: !140)
!10832 = !DILocalVariable(name: "state", arg: 3, scope: !10826, file: !10660, line: 180, type: !392)
!10833 = !DILocalVariable(name: "start", scope: !10826, file: !10660, line: 182, type: !393)
!10834 = !DILocalVariable(name: "end", scope: !10826, file: !10660, line: 182, type: !393)
!10835 = !DILocation(line: 0, scope: !10826)
!10836 = !DILocation(line: 184, column: 10, scope: !10826)
!10837 = !DILocation(line: 184, column: 22, scope: !10826)
!10838 = !DILocation(line: 187, column: 9, scope: !10826)
!10839 = !DILocation(line: 187, column: 16, scope: !10826)
!10840 = !DILocation(line: 187, column: 19, scope: !10826)
!10841 = !DILocation(line: 187, column: 2, scope: !10826)
!10842 = !DILocation(line: 188, column: 8, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10826, file: !10660, line: 187, column: 40)
!10844 = distinct !{!10844, !10841, !10845}
!10845 = !DILocation(line: 189, column: 2, scope: !10826)
!10846 = !DILocation(line: 198, column: 9, scope: !10826)
!10847 = !DILocation(line: 198, column: 18, scope: !10826)
!10848 = !DILocation(line: 198, column: 17, scope: !10826)
!10849 = !DILocation(line: 198, column: 2, scope: !10826)
!10850 = !DILocation(line: 199, column: 6, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10826, file: !10660, line: 198, column: 37)
!10852 = !DILocation(line: 198, column: 14, scope: !10826)
!10853 = distinct !{!10853, !10849, !10854}
!10854 = !DILocation(line: 200, column: 2, scope: !10826)
!10855 = !DILocation(line: 203, column: 8, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !10660, line: 202, column: 20)
!10857 = distinct !DILexicalBlock(scope: !10826, file: !10660, line: 202, column: 6)
!10858 = !DILocation(line: 204, column: 16, scope: !10856)
!10859 = !DILocation(line: 205, column: 2, scope: !10856)
!10860 = !DILocation(line: 210, column: 1, scope: !10826)
!10861 = distinct !DISubprogram(name: "strcat", scope: !10660, file: !10660, line: 212, type: !10661, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10862)
!10862 = !{!10863, !10864}
!10863 = !DILocalVariable(name: "dest", arg: 1, scope: !10861, file: !10660, line: 212, type: !10663)
!10864 = !DILocalVariable(name: "src", arg: 2, scope: !10861, file: !10660, line: 212, type: !10664)
!10865 = !DILocation(line: 0, scope: !10861)
!10866 = !DILocation(line: 214, column: 16, scope: !10861)
!10867 = !DILocation(line: 214, column: 14, scope: !10861)
!10868 = !DILocation(line: 214, column: 2, scope: !10861)
!10869 = !DILocation(line: 215, column: 2, scope: !10861)
!10870 = distinct !DISubprogram(name: "strncat", scope: !10660, file: !10660, line: 218, type: !10682, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10871)
!10871 = !{!10872, !10873, !10874, !10875, !10876}
!10872 = !DILocalVariable(name: "dest", arg: 1, scope: !10870, file: !10660, line: 218, type: !10663)
!10873 = !DILocalVariable(name: "src", arg: 2, scope: !10870, file: !10660, line: 218, type: !10664)
!10874 = !DILocalVariable(name: "n", arg: 3, scope: !10870, file: !10660, line: 219, type: !272)
!10875 = !DILocalVariable(name: "orig_dest", scope: !10870, file: !10660, line: 221, type: !393)
!10876 = !DILocalVariable(name: "len", scope: !10870, file: !10660, line: 222, type: !272)
!10877 = !DILocation(line: 0, scope: !10870)
!10878 = !DILocation(line: 222, column: 15, scope: !10870)
!10879 = !DILocation(line: 224, column: 7, scope: !10870)
!10880 = !DILocation(line: 225, column: 14, scope: !10870)
!10881 = !DILocation(line: 225, column: 19, scope: !10870)
!10882 = !DILocation(line: 225, column: 11, scope: !10870)
!10883 = !DILocation(line: 225, column: 23, scope: !10870)
!10884 = !DILocation(line: 225, column: 28, scope: !10870)
!10885 = !DILocation(line: 225, column: 2, scope: !10870)
!10886 = !DILocation(line: 226, column: 17, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10870, file: !10660, line: 225, column: 38)
!10888 = !DILocation(line: 226, column: 8, scope: !10887)
!10889 = !DILocation(line: 226, column: 11, scope: !10887)
!10890 = distinct !{!10890, !10885, !10891}
!10891 = !DILocation(line: 227, column: 2, scope: !10870)
!10892 = !DILocation(line: 228, column: 8, scope: !10870)
!10893 = !DILocation(line: 230, column: 2, scope: !10870)
!10894 = distinct !DISubprogram(name: "memcmp", scope: !10660, file: !10660, line: 239, type: !10895, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10897)
!10895 = !DISubroutineType(types: !10896)
!10896 = !{!125, !13, !13, !272}
!10897 = !{!10898, !10899, !10900, !10901, !10902}
!10898 = !DILocalVariable(name: "m1", arg: 1, scope: !10894, file: !10660, line: 239, type: !13)
!10899 = !DILocalVariable(name: "m2", arg: 2, scope: !10894, file: !10660, line: 239, type: !13)
!10900 = !DILocalVariable(name: "n", arg: 3, scope: !10894, file: !10660, line: 239, type: !272)
!10901 = !DILocalVariable(name: "c1", scope: !10894, file: !10660, line: 241, type: !140)
!10902 = !DILocalVariable(name: "c2", scope: !10894, file: !10660, line: 242, type: !140)
!10903 = !DILocation(line: 0, scope: !10894)
!10904 = !DILocation(line: 244, column: 7, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10894, file: !10660, line: 244, column: 6)
!10906 = !DILocation(line: 244, column: 6, scope: !10894)
!10907 = !DILocation(line: 248, column: 10, scope: !10894)
!10908 = !DILocation(line: 248, column: 14, scope: !10894)
!10909 = !DILocation(line: 248, column: 19, scope: !10894)
!10910 = !DILocation(line: 248, column: 2, scope: !10894)
!10911 = !DILocation(line: 248, column: 23, scope: !10894)
!10912 = !DILocation(line: 248, column: 30, scope: !10894)
!10913 = !DILocation(line: 248, column: 27, scope: !10894)
!10914 = !DILocation(line: 249, column: 5, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10894, file: !10660, line: 248, column: 36)
!10916 = !DILocation(line: 250, column: 5, scope: !10915)
!10917 = distinct !{!10917, !10910, !10918}
!10918 = !DILocation(line: 251, column: 2, scope: !10894)
!10919 = !DILocation(line: 253, column: 9, scope: !10894)
!10920 = !DILocation(line: 253, column: 15, scope: !10894)
!10921 = !DILocation(line: 253, column: 13, scope: !10894)
!10922 = !DILocation(line: 253, column: 2, scope: !10894)
!10923 = !DILocation(line: 254, column: 1, scope: !10894)
!10924 = distinct !DISubprogram(name: "memmove", scope: !10660, file: !10660, line: 263, type: !10925, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10927)
!10925 = !DISubroutineType(types: !10926)
!10926 = !{!124, !124, !13, !272}
!10927 = !{!10928, !10929, !10930, !10931, !10932}
!10928 = !DILocalVariable(name: "d", arg: 1, scope: !10924, file: !10660, line: 263, type: !124)
!10929 = !DILocalVariable(name: "s", arg: 2, scope: !10924, file: !10660, line: 263, type: !13)
!10930 = !DILocalVariable(name: "n", arg: 3, scope: !10924, file: !10660, line: 263, type: !272)
!10931 = !DILocalVariable(name: "dest", scope: !10924, file: !10660, line: 265, type: !393)
!10932 = !DILocalVariable(name: "src", scope: !10924, file: !10660, line: 266, type: !140)
!10933 = !DILocation(line: 0, scope: !10924)
!10934 = !DILocation(line: 268, column: 21, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10924, file: !10660, line: 268, column: 6)
!10936 = !DILocation(line: 268, column: 28, scope: !10935)
!10937 = !DILocation(line: 268, column: 6, scope: !10924)
!10938 = !DILocation(line: 280, column: 12, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10935, file: !10660, line: 278, column: 9)
!10940 = !DILocation(line: 280, column: 3, scope: !10939)
!10941 = !DILocation(line: 275, column: 5, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !10660, line: 274, column: 17)
!10943 = distinct !DILexicalBlock(scope: !10935, file: !10660, line: 268, column: 33)
!10944 = !DILocation(line: 276, column: 14, scope: !10942)
!10945 = !DILocation(line: 276, column: 4, scope: !10942)
!10946 = !DILocation(line: 276, column: 12, scope: !10942)
!10947 = !DILocation(line: 274, column: 12, scope: !10943)
!10948 = !DILocation(line: 274, column: 3, scope: !10943)
!10949 = distinct !{!10949, !10948, !10950}
!10950 = !DILocation(line: 277, column: 3, scope: !10943)
!10951 = !DILocation(line: 281, column: 12, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10939, file: !10660, line: 280, column: 17)
!10953 = !DILocation(line: 281, column: 10, scope: !10952)
!10954 = !DILocation(line: 282, column: 8, scope: !10952)
!10955 = !DILocation(line: 283, column: 7, scope: !10952)
!10956 = !DILocation(line: 284, column: 5, scope: !10952)
!10957 = distinct !{!10957, !10940, !10958}
!10958 = !DILocation(line: 285, column: 3, scope: !10939)
!10959 = !DILocation(line: 288, column: 2, scope: !10924)
!10960 = distinct !DISubprogram(name: "memcpy", scope: !10660, file: !10660, line: 298, type: !10961, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10965)
!10961 = !DISubroutineType(types: !10962)
!10962 = !{!124, !10963, !10964, !272}
!10963 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!10964 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!10965 = !{!10966, !10967, !10968, !10969, !10970}
!10966 = !DILocalVariable(name: "d", arg: 1, scope: !10960, file: !10660, line: 298, type: !10963)
!10967 = !DILocalVariable(name: "s", arg: 2, scope: !10960, file: !10660, line: 298, type: !10964)
!10968 = !DILocalVariable(name: "n", arg: 3, scope: !10960, file: !10660, line: 298, type: !272)
!10969 = !DILocalVariable(name: "d_byte", scope: !10960, file: !10660, line: 302, type: !1805)
!10970 = !DILocalVariable(name: "s_byte", scope: !10960, file: !10660, line: 303, type: !4028)
!10971 = !DILocation(line: 0, scope: !10960)
!10972 = !DILocation(line: 337, column: 11, scope: !10960)
!10973 = !DILocation(line: 337, column: 2, scope: !10960)
!10974 = !DILocation(line: 338, column: 25, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10960, file: !10660, line: 337, column: 16)
!10976 = !DILocation(line: 338, column: 17, scope: !10975)
!10977 = !DILocation(line: 338, column: 11, scope: !10975)
!10978 = !DILocation(line: 338, column: 15, scope: !10975)
!10979 = !DILocation(line: 339, column: 4, scope: !10975)
!10980 = distinct !{!10980, !10973, !10981}
!10981 = !DILocation(line: 340, column: 2, scope: !10960)
!10982 = !DILocation(line: 342, column: 2, scope: !10960)
!10983 = distinct !DISubprogram(name: "memset", scope: !10660, file: !10660, line: 352, type: !10984, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !10986)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{!124, !124, !125, !272}
!10986 = !{!10987, !10988, !10989, !10990, !10991}
!10987 = !DILocalVariable(name: "buf", arg: 1, scope: !10983, file: !10660, line: 352, type: !124)
!10988 = !DILocalVariable(name: "c", arg: 2, scope: !10983, file: !10660, line: 352, type: !125)
!10989 = !DILocalVariable(name: "n", arg: 3, scope: !10983, file: !10660, line: 352, type: !272)
!10990 = !DILocalVariable(name: "d_byte", scope: !10983, file: !10660, line: 356, type: !1805)
!10991 = !DILocalVariable(name: "c_byte", scope: !10983, file: !10660, line: 357, type: !151)
!10992 = !DILocation(line: 0, scope: !10983)
!10993 = !DILocation(line: 357, column: 25, scope: !10983)
!10994 = !DILocation(line: 389, column: 11, scope: !10983)
!10995 = !DILocation(line: 389, column: 2, scope: !10983)
!10996 = !DILocation(line: 390, column: 11, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10983, file: !10660, line: 389, column: 16)
!10998 = !DILocation(line: 390, column: 15, scope: !10997)
!10999 = !DILocation(line: 391, column: 4, scope: !10997)
!11000 = distinct !{!11000, !10995, !11001}
!11001 = !DILocation(line: 392, column: 2, scope: !10983)
!11002 = !DILocation(line: 394, column: 2, scope: !10983)
!11003 = distinct !DISubprogram(name: "memchr", scope: !10660, file: !10660, line: 404, type: !11004, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4025, retainedNodes: !11006)
!11004 = !DISubroutineType(types: !11005)
!11005 = !{!124, !13, !125, !272}
!11006 = !{!11007, !11008, !11009, !11010}
!11007 = !DILocalVariable(name: "s", arg: 1, scope: !11003, file: !10660, line: 404, type: !13)
!11008 = !DILocalVariable(name: "c", arg: 2, scope: !11003, file: !10660, line: 404, type: !125)
!11009 = !DILocalVariable(name: "n", arg: 3, scope: !11003, file: !10660, line: 404, type: !272)
!11010 = !DILocalVariable(name: "p", scope: !11011, file: !10660, line: 407, type: !4028)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !10660, line: 406, column: 14)
!11012 = distinct !DILexicalBlock(scope: !11003, file: !10660, line: 406, column: 6)
!11013 = !DILocation(line: 0, scope: !11003)
!11014 = !DILocation(line: 406, column: 8, scope: !11012)
!11015 = !DILocation(line: 406, column: 6, scope: !11003)
!11016 = !DILocation(line: 409, column: 3, scope: !11011)
!11017 = !DILocation(line: 0, scope: !11011)
!11018 = !DILocation(line: 410, column: 8, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11020, file: !10660, line: 410, column: 8)
!11020 = distinct !DILexicalBlock(scope: !11011, file: !10660, line: 409, column: 6)
!11021 = !DILocation(line: 410, column: 13, scope: !11019)
!11022 = !DILocation(line: 410, column: 8, scope: !11020)
!11023 = distinct !{!11023, !11016, !11024}
!11024 = !DILocation(line: 414, column: 20, scope: !11011)
!11025 = !DILocation(line: 417, column: 2, scope: !11003)
!11026 = !DILocation(line: 418, column: 1, scope: !11003)
!11027 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1204, file: !1204, line: 23, type: !5847, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11028)
!11028 = !{!11029}
!11029 = !DILocalVariable(name: "hook", arg: 1, scope: !11027, file: !1204, line: 23, type: !409)
!11030 = !DILocation(line: 0, scope: !11027)
!11031 = !DILocation(line: 25, column: 15, scope: !11027)
!11032 = !DILocation(line: 26, column: 1, scope: !11027)
!11033 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1204, file: !1204, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11034)
!11034 = !{!11035}
!11035 = !DILocalVariable(name: "c", arg: 1, scope: !11033, file: !1204, line: 14, type: !125)
!11036 = !DILocation(line: 0, scope: !11033)
!11037 = !DILocation(line: 18, column: 2, scope: !11033)
!11038 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1204, file: !1204, line: 28, type: !11039, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11041)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{!125, !125, !1200}
!11041 = !{!11042, !11043}
!11042 = !DILocalVariable(name: "c", arg: 1, scope: !11038, file: !1204, line: 28, type: !125)
!11043 = !DILocalVariable(name: "stream", arg: 2, scope: !11038, file: !1204, line: 28, type: !1200)
!11044 = !DILocation(line: 0, scope: !11038)
!11045 = !DILocation(line: 30, column: 27, scope: !11038)
!11046 = !DILocation(line: 30, column: 50, scope: !11038)
!11047 = !DILocation(line: 30, column: 9, scope: !11038)
!11048 = !DILocation(line: 30, column: 2, scope: !11038)
!11049 = distinct !DISubprogram(name: "fputc", scope: !1204, file: !1204, line: 41, type: !11039, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11050)
!11050 = !{!11051, !11052}
!11051 = !DILocalVariable(name: "c", arg: 1, scope: !11049, file: !1204, line: 41, type: !125)
!11052 = !DILocalVariable(name: "stream", arg: 2, scope: !11049, file: !1204, line: 41, type: !1200)
!11053 = !DILocation(line: 0, scope: !11049)
!11054 = !DILocation(line: 43, column: 9, scope: !11049)
!11055 = !DILocation(line: 43, column: 2, scope: !11049)
!11056 = distinct !DISubprogram(name: "zephyr_fputc", scope: !11057, file: !11057, line: 72, type: !11039, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11058)
!11057 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!11058 = !{!11059, !11060}
!11059 = !DILocalVariable(name: "c", arg: 1, scope: !11056, file: !11057, line: 72, type: !125)
!11060 = !DILocalVariable(name: "stream", arg: 2, scope: !11056, file: !11057, line: 72, type: !1200)
!11061 = !DILocation(line: 0, scope: !11056)
!11062 = !DILocation(line: 81, column: 2, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11056, file: !11057, line: 81, column: 2)
!11064 = !{i64 2152707886}
!11065 = !DILocation(line: 82, column: 9, scope: !11056)
!11066 = !DILocation(line: 82, column: 2, scope: !11056)
!11067 = distinct !DISubprogram(name: "fputs", scope: !1204, file: !1204, line: 46, type: !11068, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11071)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!125, !10664, !11070}
!11070 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1200)
!11071 = !{!11072, !11073, !11074, !11075}
!11072 = !DILocalVariable(name: "s", arg: 1, scope: !11067, file: !1204, line: 46, type: !10664)
!11073 = !DILocalVariable(name: "stream", arg: 2, scope: !11067, file: !1204, line: 46, type: !11070)
!11074 = !DILocalVariable(name: "len", scope: !11067, file: !1204, line: 48, type: !125)
!11075 = !DILocalVariable(name: "ret", scope: !11067, file: !1204, line: 49, type: !125)
!11076 = !DILocation(line: 0, scope: !11067)
!11077 = !DILocation(line: 48, column: 12, scope: !11067)
!11078 = !DILocation(line: 51, column: 8, scope: !11067)
!11079 = !DILocation(line: 53, column: 13, scope: !11067)
!11080 = !DILocation(line: 53, column: 9, scope: !11067)
!11081 = !DILocation(line: 53, column: 2, scope: !11067)
!11082 = distinct !DISubprogram(name: "fwrite", scope: !1204, file: !1204, line: 99, type: !11083, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11085)
!11083 = !DISubroutineType(types: !11084)
!11084 = !{!272, !10964, !272, !272, !11070}
!11085 = !{!11086, !11087, !11088, !11089}
!11086 = !DILocalVariable(name: "ptr", arg: 1, scope: !11082, file: !1204, line: 99, type: !10964)
!11087 = !DILocalVariable(name: "size", arg: 2, scope: !11082, file: !1204, line: 99, type: !272)
!11088 = !DILocalVariable(name: "nitems", arg: 3, scope: !11082, file: !1204, line: 99, type: !272)
!11089 = !DILocalVariable(name: "stream", arg: 4, scope: !11082, file: !1204, line: 100, type: !11070)
!11090 = !DILocation(line: 0, scope: !11082)
!11091 = !DILocation(line: 102, column: 9, scope: !11082)
!11092 = !DILocation(line: 102, column: 2, scope: !11082)
!11093 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !11057, file: !11057, line: 96, type: !11083, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11094)
!11094 = !{!11095, !11096, !11097, !11098}
!11095 = !DILocalVariable(name: "ptr", arg: 1, scope: !11093, file: !11057, line: 96, type: !10964)
!11096 = !DILocalVariable(name: "size", arg: 2, scope: !11093, file: !11057, line: 96, type: !272)
!11097 = !DILocalVariable(name: "nitems", arg: 3, scope: !11093, file: !11057, line: 96, type: !272)
!11098 = !DILocalVariable(name: "stream", arg: 4, scope: !11093, file: !11057, line: 96, type: !11070)
!11099 = !DILocation(line: 0, scope: !11093)
!11100 = !DILocation(line: 107, column: 2, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11093, file: !11057, line: 107, column: 2)
!11102 = !{i64 2152707990}
!11103 = !DILocation(line: 108, column: 9, scope: !11093)
!11104 = !DILocation(line: 108, column: 2, scope: !11093)
!11105 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1204, file: !1204, line: 56, type: !11083, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11106)
!11106 = !{!11107, !11108, !11109, !11110, !11111, !11112, !11113, !11114}
!11107 = !DILocalVariable(name: "ptr", arg: 1, scope: !11105, file: !1204, line: 56, type: !10964)
!11108 = !DILocalVariable(name: "size", arg: 2, scope: !11105, file: !1204, line: 56, type: !272)
!11109 = !DILocalVariable(name: "nitems", arg: 3, scope: !11105, file: !1204, line: 57, type: !272)
!11110 = !DILocalVariable(name: "stream", arg: 4, scope: !11105, file: !1204, line: 57, type: !11070)
!11111 = !DILocalVariable(name: "i", scope: !11105, file: !1204, line: 59, type: !272)
!11112 = !DILocalVariable(name: "j", scope: !11105, file: !1204, line: 60, type: !272)
!11113 = !DILocalVariable(name: "p", scope: !11105, file: !1204, line: 61, type: !4028)
!11114 = !DILabel(scope: !11105, name: "done", file: !1204, line: 82)
!11115 = !DILocation(line: 0, scope: !11105)
!11116 = !DILocation(line: 63, column: 14, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11105, file: !1204, line: 63, column: 6)
!11118 = !DILocation(line: 63, column: 24, scope: !11117)
!11119 = !DILocation(line: 72, column: 3, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11105, file: !1204, line: 70, column: 5)
!11121 = !DILocation(line: 0, scope: !11120)
!11122 = !DILocation(line: 73, column: 8, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !1204, line: 73, column: 8)
!11124 = distinct !DILexicalBlock(scope: !11120, file: !1204, line: 72, column: 6)
!11125 = !DILocation(line: 73, column: 29, scope: !11123)
!11126 = !DILocation(line: 73, column: 27, scope: !11123)
!11127 = !DILocation(line: 73, column: 21, scope: !11123)
!11128 = !DILocation(line: 73, column: 33, scope: !11123)
!11129 = !DILocation(line: 73, column: 8, scope: !11124)
!11130 = !DILocation(line: 76, column: 5, scope: !11124)
!11131 = !DILocation(line: 77, column: 14, scope: !11120)
!11132 = !DILocation(line: 77, column: 3, scope: !11124)
!11133 = distinct !{!11133, !11119, !11134}
!11134 = !DILocation(line: 77, column: 17, scope: !11120)
!11135 = !DILocation(line: 79, column: 4, scope: !11120)
!11136 = !DILocation(line: 80, column: 13, scope: !11105)
!11137 = !DILocation(line: 80, column: 2, scope: !11120)
!11138 = distinct !{!11138, !11139, !11140}
!11139 = !DILocation(line: 70, column: 2, scope: !11105)
!11140 = !DILocation(line: 80, column: 16, scope: !11105)
!11141 = !DILocation(line: 82, column: 1, scope: !11105)
!11142 = !DILocation(line: 83, column: 17, scope: !11105)
!11143 = !DILocation(line: 83, column: 2, scope: !11105)
!11144 = !DILocation(line: 84, column: 1, scope: !11105)
!11145 = distinct !DISubprogram(name: "puts", scope: !1204, file: !1204, line: 106, type: !11146, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11148)
!11146 = !DISubroutineType(types: !11147)
!11147 = !{!125, !140}
!11148 = !{!11149}
!11149 = !DILocalVariable(name: "s", arg: 1, scope: !11145, file: !1204, line: 106, type: !140)
!11150 = !DILocation(line: 0, scope: !11145)
!11151 = !DILocation(line: 108, column: 6, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11145, file: !1204, line: 108, column: 6)
!11153 = !DILocation(line: 108, column: 23, scope: !11152)
!11154 = !DILocation(line: 108, column: 6, scope: !11145)
!11155 = !DILocation(line: 112, column: 9, scope: !11145)
!11156 = !DILocation(line: 112, column: 29, scope: !11145)
!11157 = !DILocation(line: 112, column: 2, scope: !11145)
!11158 = !DILocation(line: 113, column: 1, scope: !11145)
!11159 = distinct !DISubprogram(name: "sam0_eic_isr", scope: !1665, file: !1665, line: 51, type: !11160, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11162)
!11160 = !DISubroutineType(types: !11161)
!11161 = !{null, !1678}
!11162 = !{!11163, !11164, !11167, !11168, !11169, !11174}
!11163 = !DILocalVariable(name: "dev", arg: 1, scope: !11159, file: !1665, line: 51, type: !1678)
!11164 = !DILocalVariable(name: "dev_data", scope: !11159, file: !1665, line: 53, type: !11165)
!11165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11166)
!11166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!11167 = !DILocalVariable(name: "bits", scope: !11159, file: !1665, line: 54, type: !227)
!11168 = !DILocalVariable(name: "line_index", scope: !11159, file: !1665, line: 55, type: !208)
!11169 = !DILocalVariable(name: "line_assignment", scope: !11170, file: !1665, line: 87, type: !11173)
!11170 = distinct !DILexicalBlock(scope: !11171, file: !1665, line: 77, column: 41)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !1665, line: 77, column: 2)
!11172 = distinct !DILexicalBlock(scope: !11159, file: !1665, line: 77, column: 2)
!11173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!11174 = !DILocalVariable(name: "port_data", scope: !11170, file: !1665, line: 89, type: !11175)
!11175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!11176 = !DILocation(line: 0, scope: !11159)
!11177 = !DILocation(line: 53, column: 46, scope: !11159)
!11178 = !DILocation(line: 54, column: 31, scope: !11159)
!11179 = !DILocation(line: 58, column: 21, scope: !11159)
!11180 = !DILocation(line: 58, column: 19, scope: !11159)
!11181 = !DILocalVariable(name: "value", arg: 1, scope: !11182, file: !9378, line: 373, type: !208)
!11182 = distinct !DISubprogram(name: "__RBIT", scope: !9378, file: !9378, line: 373, type: !10572, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11183)
!11183 = !{!11181, !11184}
!11184 = !DILocalVariable(name: "result", scope: !11182, file: !9378, line: 375, type: !208)
!11185 = !DILocation(line: 0, scope: !11182, inlinedAt: !11186)
!11186 = distinct !DILocation(line: 62, column: 21, scope: !11159)
!11187 = !DILocation(line: 380, column: 4, scope: !11182, inlinedAt: !11186)
!11188 = !{i64 1762389}
!11189 = !DILocalVariable(name: "value", arg: 1, scope: !11190, file: !9378, line: 403, type: !208)
!11190 = distinct !DISubprogram(name: "__CLZ", scope: !9378, file: !9378, line: 403, type: !11191, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11193)
!11191 = !DISubroutineType(types: !11192)
!11192 = !{!150, !208}
!11193 = !{!11189}
!11194 = !DILocation(line: 0, scope: !11190, inlinedAt: !11195)
!11195 = distinct !DILocation(line: 62, column: 15, scope: !11159)
!11196 = !DILocation(line: 414, column: 7, scope: !11190, inlinedAt: !11195)
!11197 = !DILocation(line: 63, column: 7, scope: !11159)
!11198 = !DILocation(line: 77, column: 2, scope: !11172)
!11199 = !DILocation(line: 78, column: 14, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11170, file: !1665, line: 78, column: 7)
!11201 = !DILocation(line: 78, column: 7, scope: !11170)
!11202 = !DILocation(line: 0, scope: !11170)
!11203 = !DILocation(line: 90, column: 38, scope: !11170)
!11204 = !DILocation(line: 90, column: 5, scope: !11170)
!11205 = !DILocation(line: 92, column: 14, scope: !11170)
!11206 = !DILocation(line: 92, column: 17, scope: !11170)
!11207 = !DILocation(line: 92, column: 55, scope: !11170)
!11208 = !DILocation(line: 92, column: 3, scope: !11170)
!11209 = !DILocation(line: 93, column: 2, scope: !11170)
!11210 = !DILocation(line: 77, column: 20, scope: !11171)
!11211 = !DILocation(line: 77, column: 37, scope: !11171)
!11212 = distinct !{!11212, !11198, !11213}
!11213 = !DILocation(line: 93, column: 2, scope: !11172)
!11214 = !DILocation(line: 94, column: 1, scope: !11159)
!11215 = !DILocation(line: 0, scope: !1725)
!11216 = !DILocation(line: 341, column: 21, scope: !1725)
!11217 = !DILocation(line: 344, column: 33, scope: !1725)
!11218 = !DILocation(line: 356, column: 2, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !1665, line: 356, column: 2)
!11220 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 356, column: 2)
!11221 = !DILocation(line: 356, column: 2, scope: !11220)
!11222 = !DILocation(line: 359, column: 2, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11224, file: !1665, line: 359, column: 2)
!11224 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 359, column: 2)
!11225 = !DILocation(line: 359, column: 2, scope: !11224)
!11226 = !DILocation(line: 362, column: 2, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11228, file: !1665, line: 362, column: 2)
!11228 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 362, column: 2)
!11229 = !DILocation(line: 362, column: 2, scope: !11228)
!11230 = !DILocation(line: 365, column: 2, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11232, file: !1665, line: 365, column: 2)
!11232 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 365, column: 2)
!11233 = !DILocation(line: 365, column: 2, scope: !11232)
!11234 = !DILocation(line: 368, column: 2, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !1665, line: 368, column: 2)
!11236 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 368, column: 2)
!11237 = !DILocation(line: 368, column: 2, scope: !11236)
!11238 = !DILocation(line: 371, column: 2, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11240, file: !1665, line: 371, column: 2)
!11240 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 371, column: 2)
!11241 = !DILocation(line: 371, column: 2, scope: !11240)
!11242 = !DILocation(line: 374, column: 2, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !1665, line: 374, column: 2)
!11244 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 374, column: 2)
!11245 = !DILocation(line: 374, column: 2, scope: !11244)
!11246 = !DILocation(line: 377, column: 2, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11248, file: !1665, line: 377, column: 2)
!11248 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 377, column: 2)
!11249 = !DILocation(line: 377, column: 2, scope: !11248)
!11250 = !DILocation(line: 380, column: 2, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !1665, line: 380, column: 2)
!11252 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 380, column: 2)
!11253 = !DILocation(line: 380, column: 2, scope: !11252)
!11254 = !DILocation(line: 383, column: 2, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !1665, line: 383, column: 2)
!11256 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 383, column: 2)
!11257 = !DILocation(line: 383, column: 2, scope: !11256)
!11258 = !DILocation(line: 386, column: 2, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11260, file: !1665, line: 386, column: 2)
!11260 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 386, column: 2)
!11261 = !DILocation(line: 386, column: 2, scope: !11260)
!11262 = !DILocation(line: 389, column: 2, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !1665, line: 389, column: 2)
!11264 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 389, column: 2)
!11265 = !DILocation(line: 389, column: 2, scope: !11264)
!11266 = !DILocation(line: 392, column: 2, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11268, file: !1665, line: 392, column: 2)
!11268 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 392, column: 2)
!11269 = !DILocation(line: 392, column: 2, scope: !11268)
!11270 = !DILocation(line: 395, column: 2, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11272, file: !1665, line: 395, column: 2)
!11272 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 395, column: 2)
!11273 = !DILocation(line: 395, column: 2, scope: !11272)
!11274 = !DILocation(line: 398, column: 2, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11276, file: !1665, line: 398, column: 2)
!11276 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 398, column: 2)
!11277 = !DILocation(line: 398, column: 2, scope: !11276)
!11278 = !DILocation(line: 401, column: 2, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11280, file: !1665, line: 401, column: 2)
!11280 = distinct !DILexicalBlock(scope: !1725, file: !1665, line: 401, column: 2)
!11281 = !DILocation(line: 401, column: 2, scope: !11280)
!11282 = !DILocation(line: 404, column: 2, scope: !1725)
!11283 = !DILocation(line: 405, column: 2, scope: !1725)
!11284 = !DILocation(line: 407, column: 2, scope: !1725)
!11285 = distinct !DISubprogram(name: "set_eic_enable", scope: !1665, file: !1665, line: 42, type: !11286, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11288)
!11286 = !DISubroutineType(types: !11287)
!11287 = !{null, !153}
!11288 = !{!11289}
!11289 = !DILocalVariable(name: "on", arg: 1, scope: !11285, file: !1665, line: 42, type: !153)
!11290 = !DILocation(line: 0, scope: !11285)
!11291 = !DILocation(line: 45, column: 24, scope: !11285)
!11292 = !DILocation(line: 49, column: 1, scope: !11285)
!11293 = distinct !DISubprogram(name: "wait_synchronization", scope: !1665, file: !1665, line: 31, type: !4072, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !1126)
!11294 = !DILocation(line: 34, column: 2, scope: !11293)
!11295 = !DILocation(line: 34, column: 23, scope: !11293)
!11296 = distinct !{!11296, !11294, !11297}
!11297 = !DILocation(line: 35, column: 2, scope: !11293)
!11298 = !DILocation(line: 40, column: 1, scope: !11293)
!11299 = distinct !DISubprogram(name: "sam0_eic_acquire", scope: !1665, file: !1665, line: 96, type: !11300, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11302)
!11300 = !DISubroutineType(types: !11301)
!11301 = !{!125, !125, !125, !1235, !153, !1703, !124}
!11302 = !{!11303, !11304, !11305, !11306, !11307, !11308, !11309, !11311, !11312, !11313, !11314, !11315, !11316, !11317, !11318, !11319, !11320}
!11303 = !DILocalVariable(name: "port", arg: 1, scope: !11299, file: !1665, line: 96, type: !125)
!11304 = !DILocalVariable(name: "pin", arg: 2, scope: !11299, file: !1665, line: 96, type: !125)
!11305 = !DILocalVariable(name: "trigger", arg: 3, scope: !11299, file: !1665, line: 96, type: !1235)
!11306 = !DILocalVariable(name: "filter", arg: 4, scope: !11299, file: !1665, line: 97, type: !153)
!11307 = !DILocalVariable(name: "cb", arg: 5, scope: !11299, file: !1665, line: 97, type: !1703)
!11308 = !DILocalVariable(name: "data", arg: 6, scope: !11299, file: !1665, line: 97, type: !124)
!11309 = !DILocalVariable(name: "dev", scope: !11299, file: !1665, line: 99, type: !11310)
!11310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1678)
!11311 = !DILocalVariable(name: "dev_data", scope: !11299, file: !1665, line: 100, type: !11166)
!11312 = !DILocalVariable(name: "port_data", scope: !11299, file: !1665, line: 101, type: !11175)
!11313 = !DILocalVariable(name: "line_assignment", scope: !11299, file: !1665, line: 102, type: !11173)
!11314 = !DILocalVariable(name: "mask", scope: !11299, file: !1665, line: 103, type: !208)
!11315 = !DILocalVariable(name: "line_index", scope: !11299, file: !1665, line: 104, type: !125)
!11316 = !DILocalVariable(name: "config_index", scope: !11299, file: !1665, line: 105, type: !125)
!11317 = !DILocalVariable(name: "config_shift", scope: !11299, file: !1665, line: 106, type: !125)
!11318 = !DILocalVariable(name: "key", scope: !11299, file: !1665, line: 107, type: !32)
!11319 = !DILocalVariable(name: "config", scope: !11299, file: !1665, line: 108, type: !208)
!11320 = !DILabel(scope: !11299, name: "err_in_use", file: !1665, line: 180)
!11321 = !DILocation(line: 0, scope: !11299)
!11322 = !DILocation(line: 110, column: 15, scope: !11299)
!11323 = !DILocation(line: 111, column: 17, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11299, file: !1665, line: 111, column: 6)
!11325 = !DILocation(line: 111, column: 6, scope: !11299)
!11326 = !DILocation(line: 115, column: 9, scope: !11299)
!11327 = !DILocation(line: 116, column: 28, scope: !11299)
!11328 = !DILocation(line: 117, column: 34, scope: !11299)
!11329 = !DILocation(line: 55, column: 2, scope: !11330, inlinedAt: !11334)
!11330 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7842, file: !7842, line: 42, type: !7843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11331)
!11331 = !{!11332, !11333}
!11332 = !DILocalVariable(name: "key", scope: !11330, file: !7842, line: 44, type: !32)
!11333 = !DILocalVariable(name: "tmp", scope: !11330, file: !7842, line: 53, type: !32)
!11334 = distinct !DILocation(line: 120, column: 8, scope: !11299)
!11335 = !{i64 1528028}
!11336 = !DILocation(line: 0, scope: !11330, inlinedAt: !11334)
!11337 = !DILocation(line: 122, column: 2, scope: !11299)
!11338 = !DILocation(line: 127, column: 23, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11299, file: !1665, line: 127, column: 6)
!11340 = !DILocation(line: 127, column: 6, scope: !11339)
!11341 = !DILocation(line: 127, column: 6, scope: !11299)
!11342 = !DILocation(line: 128, column: 24, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !1665, line: 128, column: 7)
!11344 = distinct !DILexicalBlock(scope: !11339, file: !1665, line: 127, column: 32)
!11345 = !DILocation(line: 128, column: 7, scope: !11343)
!11346 = !DILocation(line: 128, column: 29, scope: !11343)
!11347 = !DILocation(line: 128, column: 37, scope: !11343)
!11348 = !DILocation(line: 129, column: 24, scope: !11343)
!11349 = !DILocation(line: 129, column: 7, scope: !11343)
!11350 = !DILocation(line: 129, column: 28, scope: !11343)
!11351 = !DILocation(line: 128, column: 7, scope: !11344)
!11352 = !DILocation(line: 136, column: 13, scope: !11299)
!11353 = !DILocation(line: 136, column: 16, scope: !11299)
!11354 = !DILocation(line: 137, column: 13, scope: !11299)
!11355 = !DILocation(line: 137, column: 18, scope: !11299)
!11356 = !DILocation(line: 138, column: 25, scope: !11299)
!11357 = !DILocation(line: 138, column: 23, scope: !11299)
!11358 = !DILocation(line: 139, column: 26, scope: !11299)
!11359 = !DILocation(line: 139, column: 24, scope: !11299)
!11360 = !DILocation(line: 140, column: 27, scope: !11299)
!11361 = !DILocation(line: 142, column: 37, scope: !11299)
!11362 = !DILocation(line: 143, column: 18, scope: !11299)
!11363 = !DILocation(line: 143, column: 12, scope: !11299)
!11364 = !DILocation(line: 143, column: 9, scope: !11299)
!11365 = !DILocation(line: 144, column: 2, scope: !11299)
!11366 = !DILocation(line: 146, column: 36, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11299, file: !1665, line: 144, column: 19)
!11368 = !DILocation(line: 146, column: 10, scope: !11367)
!11369 = !DILocation(line: 147, column: 3, scope: !11367)
!11370 = !DILocation(line: 149, column: 36, scope: !11367)
!11371 = !DILocation(line: 149, column: 10, scope: !11367)
!11372 = !DILocation(line: 150, column: 3, scope: !11367)
!11373 = !DILocation(line: 152, column: 36, scope: !11367)
!11374 = !DILocation(line: 152, column: 10, scope: !11367)
!11375 = !DILocation(line: 153, column: 3, scope: !11367)
!11376 = !DILocation(line: 155, column: 36, scope: !11367)
!11377 = !DILocation(line: 155, column: 10, scope: !11367)
!11378 = !DILocation(line: 156, column: 3, scope: !11367)
!11379 = !DILocation(line: 158, column: 35, scope: !11367)
!11380 = !DILocation(line: 158, column: 10, scope: !11367)
!11381 = !DILocation(line: 159, column: 3, scope: !11367)
!11382 = !DILocation(line: 162, column: 6, scope: !11299)
!11383 = !DILocation(line: 167, column: 32, scope: !11299)
!11384 = !DILocation(line: 169, column: 2, scope: !11299)
!11385 = !DILocation(line: 170, column: 2, scope: !11299)
!11386 = !DILocation(line: 176, column: 19, scope: !11299)
!11387 = !DILocalVariable(name: "key", arg: 1, scope: !11388, file: !7842, line: 84, type: !32)
!11388 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11389)
!11389 = !{!11387}
!11390 = !DILocation(line: 0, scope: !11388, inlinedAt: !11391)
!11391 = distinct !DILocation(line: 177, column: 2, scope: !11299)
!11392 = !DILocation(line: 95, column: 2, scope: !11388, inlinedAt: !11391)
!11393 = !{i64 1528845}
!11394 = !DILocation(line: 178, column: 2, scope: !11299)
!11395 = !DILocation(line: 180, column: 1, scope: !11299)
!11396 = !DILocation(line: 181, column: 2, scope: !11299)
!11397 = !DILocation(line: 182, column: 2, scope: !11299)
!11398 = !DILocation(line: 0, scope: !11388, inlinedAt: !11399)
!11399 = distinct !DILocation(line: 183, column: 2, scope: !11299)
!11400 = !DILocation(line: 95, column: 2, scope: !11388, inlinedAt: !11399)
!11401 = !DILocation(line: 184, column: 2, scope: !11299)
!11402 = !DILocation(line: 185, column: 1, scope: !11299)
!11403 = distinct !DISubprogram(name: "sam0_eic_map_to_line", scope: !1719, file: !1719, line: 691, type: !11404, scopeLine: 692, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11406)
!11404 = !DISubroutineType(types: !11405)
!11405 = !{!125, !125, !125}
!11406 = !{!11407, !11408, !11409}
!11407 = !DILocalVariable(name: "port", arg: 1, scope: !11403, file: !1719, line: 691, type: !125)
!11408 = !DILocalVariable(name: "pin", arg: 2, scope: !11403, file: !1719, line: 691, type: !125)
!11409 = !DILocalVariable(name: "ch", scope: !11403, file: !1719, line: 693, type: !150)
!11410 = !DILocation(line: 0, scope: !11403)
!11411 = !DILocation(line: 693, column: 15, scope: !11403)
!11412 = !DILocation(line: 695, column: 9, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11403, file: !1719, line: 695, column: 6)
!11414 = !DILocation(line: 695, column: 6, scope: !11403)
!11415 = !DILocation(line: 699, column: 1, scope: !11403)
!11416 = distinct !DISubprogram(name: "sam0_eic_release", scope: !1665, file: !1665, line: 206, type: !11404, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11417)
!11417 = !{!11418, !11419, !11420, !11421, !11422, !11423, !11424, !11425, !11426, !11427}
!11418 = !DILocalVariable(name: "port", arg: 1, scope: !11416, file: !1665, line: 206, type: !125)
!11419 = !DILocalVariable(name: "pin", arg: 2, scope: !11416, file: !1665, line: 206, type: !125)
!11420 = !DILocalVariable(name: "dev", scope: !11416, file: !1665, line: 208, type: !11310)
!11421 = !DILocalVariable(name: "dev_data", scope: !11416, file: !1665, line: 209, type: !11166)
!11422 = !DILocalVariable(name: "mask", scope: !11416, file: !1665, line: 210, type: !208)
!11423 = !DILocalVariable(name: "line_index", scope: !11416, file: !1665, line: 211, type: !125)
!11424 = !DILocalVariable(name: "config_index", scope: !11416, file: !1665, line: 212, type: !125)
!11425 = !DILocalVariable(name: "config_shift", scope: !11416, file: !1665, line: 213, type: !125)
!11426 = !DILocalVariable(name: "key", scope: !11416, file: !1665, line: 214, type: !32)
!11427 = !DILabel(scope: !11416, name: "done", file: !1665, line: 248)
!11428 = !DILocation(line: 0, scope: !11416)
!11429 = !DILocation(line: 216, column: 15, scope: !11416)
!11430 = !DILocation(line: 217, column: 17, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11416, file: !1665, line: 217, column: 6)
!11432 = !DILocation(line: 217, column: 6, scope: !11416)
!11433 = !DILocation(line: 221, column: 9, scope: !11416)
!11434 = !DILocation(line: 55, column: 2, scope: !11330, inlinedAt: !11435)
!11435 = distinct !DILocation(line: 226, column: 8, scope: !11416)
!11436 = !DILocation(line: 0, scope: !11330, inlinedAt: !11435)
!11437 = !DILocation(line: 228, column: 2, scope: !11416)
!11438 = !DILocation(line: 229, column: 2, scope: !11416)
!11439 = !DILocation(line: 235, column: 7, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11416, file: !1665, line: 235, column: 6)
!11441 = !DILocation(line: 235, column: 6, scope: !11416)
!11442 = !DILocation(line: 223, column: 34, scope: !11416)
!11443 = !DILocation(line: 222, column: 28, scope: !11416)
!11444 = !DILocation(line: 239, column: 30, scope: !11416)
!11445 = !DILocation(line: 239, column: 38, scope: !11416)
!11446 = !DILocation(line: 242, column: 41, scope: !11416)
!11447 = !DILocation(line: 242, column: 35, scope: !11416)
!11448 = !DILocation(line: 242, column: 28, scope: !11416)
!11449 = !DILocation(line: 242, column: 32, scope: !11416)
!11450 = !DILocation(line: 245, column: 20, scope: !11416)
!11451 = !DILocation(line: 246, column: 19, scope: !11416)
!11452 = !DILocation(line: 246, column: 2, scope: !11416)
!11453 = !DILocation(line: 248, column: 1, scope: !11416)
!11454 = !DILocation(line: 249, column: 2, scope: !11416)
!11455 = !DILocation(line: 250, column: 2, scope: !11416)
!11456 = !DILocation(line: 0, scope: !11388, inlinedAt: !11457)
!11457 = distinct !DILocation(line: 251, column: 2, scope: !11416)
!11458 = !DILocation(line: 95, column: 2, scope: !11388, inlinedAt: !11457)
!11459 = !DILocation(line: 252, column: 2, scope: !11416)
!11460 = !DILocation(line: 253, column: 1, scope: !11416)
!11461 = distinct !DISubprogram(name: "sam0_eic_check_ownership", scope: !1665, file: !1665, line: 187, type: !11462, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11464)
!11462 = !DISubroutineType(types: !11463)
!11463 = !{!153, !125, !125, !125}
!11464 = !{!11465, !11466, !11467, !11468, !11469, !11470}
!11465 = !DILocalVariable(name: "port", arg: 1, scope: !11461, file: !1665, line: 187, type: !125)
!11466 = !DILocalVariable(name: "pin", arg: 2, scope: !11461, file: !1665, line: 187, type: !125)
!11467 = !DILocalVariable(name: "line_index", arg: 3, scope: !11461, file: !1665, line: 187, type: !125)
!11468 = !DILocalVariable(name: "dev", scope: !11461, file: !1665, line: 189, type: !11310)
!11469 = !DILocalVariable(name: "dev_data", scope: !11461, file: !1665, line: 190, type: !11166)
!11470 = !DILocalVariable(name: "line_assignment", scope: !11461, file: !1665, line: 191, type: !11173)
!11471 = !DILocation(line: 0, scope: !11461)
!11472 = !DILocation(line: 194, column: 24, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11461, file: !1665, line: 194, column: 6)
!11474 = !DILocation(line: 194, column: 7, scope: !11473)
!11475 = !DILocation(line: 194, column: 6, scope: !11461)
!11476 = !DILocation(line: 198, column: 23, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11461, file: !1665, line: 198, column: 6)
!11478 = !DILocation(line: 198, column: 6, scope: !11477)
!11479 = !DILocation(line: 198, column: 28, scope: !11477)
!11480 = !DILocation(line: 198, column: 36, scope: !11477)
!11481 = !DILocation(line: 199, column: 23, scope: !11477)
!11482 = !DILocation(line: 199, column: 6, scope: !11477)
!11483 = !DILocation(line: 199, column: 27, scope: !11477)
!11484 = !DILocation(line: 198, column: 6, scope: !11461)
!11485 = !DILocation(line: 204, column: 1, scope: !11461)
!11486 = distinct !DISubprogram(name: "sam0_eic_enable_interrupt", scope: !1665, file: !1665, line: 255, type: !11404, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11487)
!11487 = !{!11488, !11489, !11490, !11491}
!11488 = !DILocalVariable(name: "port", arg: 1, scope: !11486, file: !1665, line: 255, type: !125)
!11489 = !DILocalVariable(name: "pin", arg: 2, scope: !11486, file: !1665, line: 255, type: !125)
!11490 = !DILocalVariable(name: "mask", scope: !11486, file: !1665, line: 257, type: !208)
!11491 = !DILocalVariable(name: "line_index", scope: !11486, file: !1665, line: 258, type: !125)
!11492 = !DILocation(line: 0, scope: !11486)
!11493 = !DILocation(line: 260, column: 15, scope: !11486)
!11494 = !DILocation(line: 261, column: 17, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11486, file: !1665, line: 261, column: 6)
!11496 = !DILocation(line: 261, column: 6, scope: !11486)
!11497 = !DILocation(line: 265, column: 7, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11486, file: !1665, line: 265, column: 6)
!11499 = !DILocation(line: 265, column: 6, scope: !11486)
!11500 = !DILocation(line: 269, column: 9, scope: !11486)
!11501 = !DILocation(line: 270, column: 19, scope: !11486)
!11502 = !DILocation(line: 271, column: 20, scope: !11486)
!11503 = !DILocation(line: 273, column: 2, scope: !11486)
!11504 = !DILocation(line: 274, column: 1, scope: !11486)
!11505 = distinct !DISubprogram(name: "sam0_eic_disable_interrupt", scope: !1665, file: !1665, line: 276, type: !11404, scopeLine: 277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11506)
!11506 = !{!11507, !11508, !11509, !11510}
!11507 = !DILocalVariable(name: "port", arg: 1, scope: !11505, file: !1665, line: 276, type: !125)
!11508 = !DILocalVariable(name: "pin", arg: 2, scope: !11505, file: !1665, line: 276, type: !125)
!11509 = !DILocalVariable(name: "mask", scope: !11505, file: !1665, line: 278, type: !208)
!11510 = !DILocalVariable(name: "line_index", scope: !11505, file: !1665, line: 279, type: !125)
!11511 = !DILocation(line: 0, scope: !11505)
!11512 = !DILocation(line: 281, column: 15, scope: !11505)
!11513 = !DILocation(line: 282, column: 17, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11505, file: !1665, line: 282, column: 6)
!11515 = !DILocation(line: 282, column: 6, scope: !11505)
!11516 = !DILocation(line: 286, column: 7, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11505, file: !1665, line: 286, column: 6)
!11518 = !DILocation(line: 286, column: 6, scope: !11505)
!11519 = !DILocation(line: 290, column: 9, scope: !11505)
!11520 = !DILocation(line: 291, column: 20, scope: !11505)
!11521 = !DILocation(line: 292, column: 19, scope: !11505)
!11522 = !DILocation(line: 294, column: 2, scope: !11505)
!11523 = !DILocation(line: 295, column: 1, scope: !11505)
!11524 = distinct !DISubprogram(name: "sam0_eic_interrupt_pending", scope: !1665, file: !1665, line: 297, type: !11525, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !11527)
!11525 = !DISubroutineType(types: !11526)
!11526 = !{!208, !125}
!11527 = !{!11528, !11529, !11530, !11531, !11532, !11533, !11534}
!11528 = !DILocalVariable(name: "port", arg: 1, scope: !11524, file: !1665, line: 297, type: !125)
!11529 = !DILocalVariable(name: "dev", scope: !11524, file: !1665, line: 299, type: !11310)
!11530 = !DILocalVariable(name: "dev_data", scope: !11524, file: !1665, line: 300, type: !11166)
!11531 = !DILocalVariable(name: "line_assignment", scope: !11524, file: !1665, line: 301, type: !11173)
!11532 = !DILocalVariable(name: "set", scope: !11524, file: !1665, line: 302, type: !208)
!11533 = !DILocalVariable(name: "mask", scope: !11524, file: !1665, line: 303, type: !208)
!11534 = !DILocalVariable(name: "line_index", scope: !11535, file: !1665, line: 305, type: !125)
!11535 = distinct !DILexicalBlock(scope: !11524, file: !1665, line: 305, column: 2)
!11536 = !DILocation(line: 0, scope: !11524)
!11537 = !DILocation(line: 302, column: 30, scope: !11524)
!11538 = !DILocation(line: 0, scope: !11535)
!11539 = !DILocation(line: 305, column: 2, scope: !11535)
!11540 = !DILocation(line: 323, column: 2, scope: !11524)
!11541 = !DILocation(line: 308, column: 25, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !1665, line: 308, column: 7)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !1665, line: 305, column: 70)
!11544 = distinct !DILexicalBlock(scope: !11535, file: !1665, line: 305, column: 2)
!11545 = !DILocation(line: 308, column: 8, scope: !11542)
!11546 = !DILocation(line: 308, column: 7, scope: !11543)
!11547 = !DILocation(line: 312, column: 24, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11543, file: !1665, line: 312, column: 7)
!11549 = !DILocation(line: 312, column: 7, scope: !11548)
!11550 = !DILocation(line: 312, column: 29, scope: !11548)
!11551 = !DILocation(line: 312, column: 7, scope: !11543)
!11552 = !DILocation(line: 316, column: 15, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11543, file: !1665, line: 316, column: 7)
!11554 = !DILocation(line: 316, column: 13, scope: !11553)
!11555 = !DILocation(line: 316, column: 7, scope: !11543)
!11556 = !DILocation(line: 320, column: 11, scope: !11543)
!11557 = !DILocation(line: 320, column: 8, scope: !11543)
!11558 = !DILocation(line: 321, column: 2, scope: !11543)
!11559 = !DILocation(line: 305, column: 66, scope: !11544)
!11560 = !DILocation(line: 305, column: 38, scope: !11544)
!11561 = distinct !{!11561, !11539, !11562}
!11562 = !DILocation(line: 321, column: 2, scope: !11535)
!11563 = distinct !DISubprogram(name: "uart_console_init", scope: !1866, file: !1866, line: 588, type: !1812, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !11564)
!11564 = !{!11565}
!11565 = !DILocalVariable(name: "arg", arg: 1, scope: !11563, file: !1866, line: 588, type: !1790)
!11566 = !DILocation(line: 0, scope: !11563)
!11567 = !DILocation(line: 593, column: 7, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11563, file: !1866, line: 593, column: 6)
!11569 = !DILocation(line: 593, column: 6, scope: !11563)
!11570 = !DILocation(line: 597, column: 2, scope: !11563)
!11571 = !DILocation(line: 599, column: 2, scope: !11563)
!11572 = !DILocation(line: 600, column: 1, scope: !11563)
!11573 = distinct !DISubprogram(name: "device_is_ready", scope: !4978, file: !4978, line: 47, type: !11574, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !11576)
!11574 = !DISubroutineType(types: !11575)
!11575 = !{!153, !1790}
!11576 = !{!11577}
!11577 = !DILocalVariable(name: "dev", arg: 1, scope: !11573, file: !4978, line: 47, type: !1790)
!11578 = !DILocation(line: 0, scope: !11573)
!11579 = !DILocation(line: 55, column: 2, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11573, file: !4978, line: 55, column: 2)
!11581 = !{i64 2152851963}
!11582 = !DILocation(line: 56, column: 9, scope: !11573)
!11583 = !DILocation(line: 56, column: 2, scope: !11573)
!11584 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1866, file: !1866, line: 573, type: !4072, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !1126)
!11585 = !DILocation(line: 576, column: 2, scope: !11584)
!11586 = !DILocation(line: 579, column: 2, scope: !11584)
!11587 = !DILocation(line: 581, column: 1, scope: !11584)
!11588 = distinct !DISubprogram(name: "console_out", scope: !1866, file: !1866, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !11589)
!11589 = !{!11590}
!11590 = !DILocalVariable(name: "c", arg: 1, scope: !11588, file: !1866, line: 77, type: !125)
!11591 = !DILocation(line: 0, scope: !11588)
!11592 = !DILocation(line: 89, column: 11, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11588, file: !1866, line: 89, column: 6)
!11594 = !DILocation(line: 89, column: 6, scope: !11588)
!11595 = !DILocation(line: 90, column: 3, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11593, file: !1866, line: 89, column: 17)
!11597 = !DILocation(line: 91, column: 2, scope: !11596)
!11598 = !DILocation(line: 92, column: 34, scope: !11588)
!11599 = !DILocation(line: 92, column: 2, scope: !11588)
!11600 = !DILocation(line: 94, column: 2, scope: !11588)
!11601 = distinct !DISubprogram(name: "uart_poll_out", scope: !11602, file: !11602, line: 95, type: !1808, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !11603)
!11602 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/drivers/crypto")
!11603 = !{!11604, !11605}
!11604 = !DILocalVariable(name: "dev", arg: 1, scope: !11601, file: !11602, line: 95, type: !1790)
!11605 = !DILocalVariable(name: "out_char", arg: 2, scope: !11601, file: !11602, line: 95, type: !151)
!11606 = !DILocation(line: 0, scope: !11601)
!11607 = !DILocation(line: 105, column: 2, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11601, file: !11602, line: 105, column: 2)
!11609 = !{i64 2152935208}
!11610 = !DILocation(line: 106, column: 2, scope: !11601)
!11611 = !DILocation(line: 107, column: 1, scope: !11601)
!11612 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1784, file: !1784, line: 574, type: !1808, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !11613)
!11613 = !{!11614, !11615, !11616}
!11614 = !DILocalVariable(name: "dev", arg: 1, scope: !11612, file: !1784, line: 574, type: !1790)
!11615 = !DILocalVariable(name: "out_char", arg: 2, scope: !11612, file: !1784, line: 575, type: !151)
!11616 = !DILocalVariable(name: "api", scope: !11612, file: !1784, line: 577, type: !1781)
!11617 = !DILocation(line: 0, scope: !11612)
!11618 = !DILocation(line: 578, column: 40, scope: !11612)
!11619 = !DILocation(line: 580, column: 7, scope: !11612)
!11620 = !DILocation(line: 580, column: 2, scope: !11612)
!11621 = !DILocation(line: 581, column: 1, scope: !11612)
!11622 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !11574, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !11623)
!11623 = !{!11624}
!11624 = !DILocalVariable(name: "dev", arg: 1, scope: !11622, file: !137, line: 730, type: !1790)
!11625 = !DILocation(line: 0, scope: !11622)
!11626 = !DILocation(line: 732, column: 9, scope: !11622)
!11627 = !DILocation(line: 732, column: 2, scope: !11622)
!11628 = distinct !DISubprogram(name: "uart_register_input", scope: !1866, file: !1866, line: 560, type: !11629, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1778, retainedNodes: !11674)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{null, !11631, !11631, !11671}
!11631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11632, size: 32)
!11632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !1111, line: 2208, size: 128, elements: !11633)
!11633 = !{!11634}
!11634 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !11632, file: !1111, line: 2209, baseType: !11635, size: 128)
!11635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !1111, line: 1709, size: 128, elements: !11636)
!11636 = !{!11637, !11650, !11652}
!11637 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !11635, file: !1111, line: 1710, baseType: !11638, size: 64)
!11638 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !11639, line: 46, baseType: !11640)
!11639 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !11639, line: 41, size: 64, elements: !11641)
!11641 = !{!11642, !11649}
!11642 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11640, file: !11639, line: 42, baseType: !11643, size: 32)
!11643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11644, size: 32)
!11644 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !11639, line: 39, baseType: !11645)
!11645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !11639, line: 35, size: 32, elements: !11646)
!11646 = !{!11647}
!11647 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !11645, file: !11639, line: 36, baseType: !11648, size: 32)
!11648 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !11639, line: 32, baseType: !208)
!11649 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11640, file: !11639, line: 43, baseType: !11643, size: 32, offset: 32)
!11650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11635, file: !1111, line: 1711, baseType: !11651, offset: 64)
!11651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!11652 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11635, file: !1111, line: 1712, baseType: !11653, size: 64, offset: 64)
!11653 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !11654)
!11654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !11655)
!11655 = !{!11656}
!11656 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11654, file: !1054, line: 232, baseType: !11657, size: 64)
!11657 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !11658)
!11658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !11659)
!11659 = !{!11660, !11666}
!11660 = !DIDerivedType(tag: DW_TAG_member, scope: !11658, file: !1030, line: 38, baseType: !11661, size: 32)
!11661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11658, file: !1030, line: 38, size: 32, elements: !11662)
!11662 = !{!11663, !11665}
!11663 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11661, file: !1030, line: 39, baseType: !11664, size: 32)
!11664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11658, size: 32)
!11665 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11661, file: !1030, line: 40, baseType: !11664, size: 32)
!11666 = !DIDerivedType(tag: DW_TAG_member, scope: !11658, file: !1030, line: 42, baseType: !11667, size: 32, offset: 32)
!11667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11658, file: !1030, line: 42, size: 32, elements: !11668)
!11668 = !{!11669, !11670}
!11669 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11667, file: !1030, line: 43, baseType: !11664, size: 32)
!11670 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11667, file: !1030, line: 44, baseType: !11664, size: 32)
!11671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11672, size: 32)
!11672 = !DISubroutineType(types: !11673)
!11673 = !{!150, !393, !150}
!11674 = !{!11675, !11676, !11677}
!11675 = !DILocalVariable(name: "avail", arg: 1, scope: !11628, file: !1866, line: 560, type: !11631)
!11676 = !DILocalVariable(name: "lines", arg: 2, scope: !11628, file: !1866, line: 560, type: !11631)
!11677 = !DILocalVariable(name: "completion", arg: 3, scope: !11628, file: !1866, line: 561, type: !11671)
!11678 = !DILocation(line: 0, scope: !11628)
!11679 = !DILocation(line: 566, column: 1, scope: !11628)
!11680 = distinct !DISubprogram(name: "tc_shim_init", scope: !1881, file: !1881, line: 305, type: !1905, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11681)
!11681 = !{!11682, !11683}
!11682 = !DILocalVariable(name: "dev", arg: 1, scope: !11680, file: !1881, line: 305, type: !1907)
!11683 = !DILocalVariable(name: "i", scope: !11680, file: !1881, line: 307, type: !125)
!11684 = !DILocation(line: 0, scope: !11680)
!11685 = !DILocation(line: 311, column: 29, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11687, file: !1881, line: 310, column: 43)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !1881, line: 310, column: 2)
!11688 = distinct !DILexicalBlock(scope: !11680, file: !1881, line: 310, column: 2)
!11689 = !DILocation(line: 314, column: 2, scope: !11680)
!11690 = distinct !DISubprogram(name: "tc_query_caps", scope: !1881, file: !1881, line: 289, type: !1905, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11691)
!11691 = !{!11692}
!11692 = !DILocalVariable(name: "dev", arg: 1, scope: !11690, file: !1881, line: 289, type: !1907)
!11693 = !DILocation(line: 0, scope: !11690)
!11694 = !DILocation(line: 291, column: 2, scope: !11690)
!11695 = distinct !DISubprogram(name: "tc_session_setup", scope: !1881, file: !1881, line: 193, type: !1918, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11696)
!11696 = !{!11697, !11698, !11699, !11700, !11701, !11702, !11704}
!11697 = !DILocalVariable(name: "dev", arg: 1, scope: !11695, file: !1881, line: 193, type: !1907)
!11698 = !DILocalVariable(name: "ctx", arg: 2, scope: !11695, file: !1881, line: 193, type: !1920)
!11699 = !DILocalVariable(name: "algo", arg: 3, scope: !11695, file: !1881, line: 194, type: !39)
!11700 = !DILocalVariable(name: "mode", arg: 4, scope: !11695, file: !1881, line: 194, type: !30)
!11701 = !DILocalVariable(name: "op_type", arg: 5, scope: !11695, file: !1881, line: 195, type: !42)
!11702 = !DILocalVariable(name: "data", scope: !11695, file: !1881, line: 197, type: !11703)
!11703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!11704 = !DILocalVariable(name: "idx", scope: !11695, file: !1881, line: 198, type: !125)
!11705 = !DILocation(line: 0, scope: !11695)
!11706 = !DILocation(line: 203, column: 11, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11695, file: !1881, line: 203, column: 6)
!11708 = !DILocation(line: 203, column: 6, scope: !11695)
!11709 = !DILocation(line: 204, column: 3, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !1881, line: 204, column: 3)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !1881, line: 204, column: 3)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !1881, line: 204, column: 3)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !1881, line: 204, column: 3)
!11714 = distinct !DILexicalBlock(scope: !11707, file: !1881, line: 203, column: 38)
!11715 = !DILocation(line: 205, column: 3, scope: !11714)
!11716 = !DILocation(line: 211, column: 13, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11695, file: !1881, line: 211, column: 6)
!11718 = !DILocation(line: 211, column: 19, scope: !11717)
!11719 = !DILocation(line: 211, column: 6, scope: !11695)
!11720 = !DILocation(line: 212, column: 3, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !1881, line: 212, column: 3)
!11722 = distinct !DILexicalBlock(scope: !11723, file: !1881, line: 212, column: 3)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !1881, line: 212, column: 3)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !1881, line: 212, column: 3)
!11725 = distinct !DILexicalBlock(scope: !11717, file: !1881, line: 211, column: 36)
!11726 = !DILocation(line: 213, column: 3, scope: !11725)
!11727 = !DILocation(line: 216, column: 11, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11695, file: !1881, line: 216, column: 6)
!11729 = !DILocation(line: 216, column: 18, scope: !11728)
!11730 = !DILocation(line: 216, column: 6, scope: !11695)
!11731 = !DILocation(line: 218, column: 3, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !1881, line: 218, column: 3)
!11733 = distinct !DILexicalBlock(scope: !11734, file: !1881, line: 218, column: 3)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !1881, line: 218, column: 3)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !1881, line: 218, column: 3)
!11736 = distinct !DILexicalBlock(scope: !11728, file: !1881, line: 216, column: 38)
!11737 = !DILocation(line: 219, column: 3, scope: !11736)
!11738 = !DILocation(line: 222, column: 14, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11695, file: !1881, line: 222, column: 6)
!11740 = !DILocation(line: 222, column: 6, scope: !11695)
!11741 = !DILocation(line: 223, column: 3, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11739, file: !1881, line: 222, column: 43)
!11743 = !DILocation(line: 225, column: 13, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11742, file: !1881, line: 223, column: 17)
!11745 = !DILocation(line: 225, column: 29, scope: !11744)
!11746 = !DILocation(line: 226, column: 4, scope: !11744)
!11747 = !DILocation(line: 228, column: 34, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11744, file: !1881, line: 228, column: 8)
!11749 = !DILocation(line: 228, column: 42, scope: !11748)
!11750 = !DILocation(line: 228, column: 8, scope: !11744)
!11751 = !DILocation(line: 229, column: 5, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !1881, line: 229, column: 5)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !1881, line: 229, column: 5)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !1881, line: 229, column: 5)
!11755 = distinct !DILexicalBlock(scope: !11756, file: !1881, line: 229, column: 5)
!11756 = distinct !DILexicalBlock(scope: !11748, file: !1881, line: 228, column: 50)
!11757 = !DILocation(line: 231, column: 5, scope: !11756)
!11758 = !DILocation(line: 233, column: 13, scope: !11744)
!11759 = !DILocation(line: 233, column: 29, scope: !11744)
!11760 = !DILocation(line: 234, column: 4, scope: !11744)
!11761 = !DILocation(line: 236, column: 13, scope: !11744)
!11762 = !DILocation(line: 236, column: 29, scope: !11744)
!11763 = !DILocation(line: 237, column: 4, scope: !11744)
!11764 = !DILocation(line: 239, column: 4, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !1881, line: 239, column: 4)
!11766 = distinct !DILexicalBlock(scope: !11767, file: !1881, line: 239, column: 4)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !1881, line: 239, column: 4)
!11768 = distinct !DILexicalBlock(scope: !11744, file: !1881, line: 239, column: 4)
!11769 = !DILocation(line: 240, column: 4, scope: !11744)
!11770 = !DILocation(line: 243, column: 3, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11739, file: !1881, line: 242, column: 9)
!11772 = !DILocation(line: 245, column: 13, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11771, file: !1881, line: 243, column: 17)
!11774 = !DILocation(line: 245, column: 29, scope: !11773)
!11775 = !DILocation(line: 246, column: 4, scope: !11773)
!11776 = !DILocation(line: 249, column: 34, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11773, file: !1881, line: 249, column: 8)
!11778 = !DILocation(line: 249, column: 42, scope: !11777)
!11779 = !DILocation(line: 249, column: 8, scope: !11773)
!11780 = !DILocation(line: 250, column: 5, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !1881, line: 250, column: 5)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !1881, line: 250, column: 5)
!11783 = distinct !DILexicalBlock(scope: !11784, file: !1881, line: 250, column: 5)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !1881, line: 250, column: 5)
!11785 = distinct !DILexicalBlock(scope: !11777, file: !1881, line: 249, column: 50)
!11786 = !DILocation(line: 252, column: 5, scope: !11785)
!11787 = !DILocation(line: 254, column: 13, scope: !11773)
!11788 = !DILocation(line: 254, column: 29, scope: !11773)
!11789 = !DILocation(line: 255, column: 4, scope: !11773)
!11790 = !DILocation(line: 257, column: 13, scope: !11773)
!11791 = !DILocation(line: 257, column: 29, scope: !11773)
!11792 = !DILocation(line: 258, column: 4, scope: !11773)
!11793 = !DILocation(line: 260, column: 4, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11795, file: !1881, line: 260, column: 4)
!11795 = distinct !DILexicalBlock(scope: !11796, file: !1881, line: 260, column: 4)
!11796 = distinct !DILexicalBlock(scope: !11797, file: !1881, line: 260, column: 4)
!11797 = distinct !DILexicalBlock(scope: !11773, file: !1881, line: 260, column: 4)
!11798 = !DILocation(line: 261, column: 4, scope: !11773)
!11799 = !DILocation(line: 266, column: 11, scope: !11695)
!11800 = !DILocation(line: 266, column: 23, scope: !11695)
!11801 = !DILocation(line: 268, column: 8, scope: !11695)
!11802 = !DILocation(line: 269, column: 10, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11695, file: !1881, line: 269, column: 6)
!11804 = !DILocation(line: 269, column: 6, scope: !11695)
!11805 = !DILocation(line: 270, column: 3, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11807, file: !1881, line: 270, column: 3)
!11807 = distinct !DILexicalBlock(scope: !11808, file: !1881, line: 270, column: 3)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !1881, line: 270, column: 3)
!11809 = distinct !DILexicalBlock(scope: !11810, file: !1881, line: 270, column: 3)
!11810 = distinct !DILexicalBlock(scope: !11803, file: !1881, line: 269, column: 33)
!11811 = !DILocation(line: 271, column: 3, scope: !11810)
!11812 = !DILocation(line: 274, column: 10, scope: !11695)
!11813 = !DILocation(line: 276, column: 39, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11695, file: !1881, line: 276, column: 6)
!11815 = !DILocation(line: 276, column: 61, scope: !11814)
!11816 = !DILocation(line: 276, column: 6, scope: !11814)
!11817 = !DILocation(line: 277, column: 5, scope: !11814)
!11818 = !DILocation(line: 276, column: 6, scope: !11695)
!11819 = !DILocation(line: 278, column: 3, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !1881, line: 278, column: 3)
!11821 = distinct !DILexicalBlock(scope: !11822, file: !1881, line: 278, column: 3)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !1881, line: 278, column: 3)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !1881, line: 278, column: 3)
!11824 = distinct !DILexicalBlock(scope: !11814, file: !1881, line: 277, column: 24)
!11825 = !DILocation(line: 279, column: 24, scope: !11824)
!11826 = !DILocation(line: 279, column: 31, scope: !11824)
!11827 = !DILocation(line: 281, column: 3, scope: !11824)
!11828 = !DILocation(line: 284, column: 7, scope: !11695)
!11829 = !DILocation(line: 284, column: 23, scope: !11695)
!11830 = !DILocation(line: 286, column: 2, scope: !11695)
!11831 = !DILocation(line: 287, column: 1, scope: !11695)
!11832 = distinct !DISubprogram(name: "tc_session_free", scope: !1881, file: !1881, line: 294, type: !1994, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11833)
!11833 = !{!11834, !11835, !11836}
!11834 = !DILocalVariable(name: "dev", arg: 1, scope: !11832, file: !1881, line: 294, type: !1907)
!11835 = !DILocalVariable(name: "sessn", arg: 2, scope: !11832, file: !1881, line: 294, type: !1920)
!11836 = !DILocalVariable(name: "data", scope: !11832, file: !1881, line: 296, type: !11703)
!11837 = !DILocation(line: 0, scope: !11832)
!11838 = !DILocation(line: 296, column: 43, scope: !11832)
!11839 = !DILocation(line: 299, column: 8, scope: !11832)
!11840 = !DILocation(line: 300, column: 8, scope: !11832)
!11841 = !DILocation(line: 300, column: 15, scope: !11832)
!11842 = !DILocation(line: 302, column: 2, scope: !11832)
!11843 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1881, file: !1881, line: 28, type: !1947, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11844)
!11844 = !{!11845, !11846, !11847, !11848}
!11845 = !DILocalVariable(name: "ctx", arg: 1, scope: !11843, file: !1881, line: 28, type: !1920)
!11846 = !DILocalVariable(name: "op", arg: 2, scope: !11843, file: !1881, line: 28, type: !1935)
!11847 = !DILocalVariable(name: "iv", arg: 3, scope: !11843, file: !1881, line: 29, type: !184)
!11848 = !DILocalVariable(name: "data", scope: !11843, file: !1881, line: 31, type: !11703)
!11849 = !DILocation(line: 0, scope: !11843)
!11850 = !DILocation(line: 31, column: 41, scope: !11843)
!11851 = !DILocation(line: 33, column: 30, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11843, file: !1881, line: 33, column: 6)
!11853 = !DILocation(line: 34, column: 9, scope: !11852)
!11854 = !DILocation(line: 35, column: 9, scope: !11852)
!11855 = !DILocation(line: 35, column: 21, scope: !11852)
!11856 = !DILocation(line: 37, column: 12, scope: !11852)
!11857 = !DILocation(line: 33, column: 6, scope: !11852)
!11858 = !DILocation(line: 37, column: 25, scope: !11852)
!11859 = !DILocation(line: 33, column: 6, scope: !11843)
!11860 = !DILocation(line: 38, column: 3, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !1881, line: 38, column: 3)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !1881, line: 38, column: 3)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !1881, line: 38, column: 3)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !1881, line: 38, column: 3)
!11865 = distinct !DILexicalBlock(scope: !11852, file: !1881, line: 37, column: 44)
!11866 = !DILocation(line: 39, column: 3, scope: !11865)
!11867 = !DILocation(line: 43, column: 20, scope: !11843)
!11868 = !DILocation(line: 43, column: 6, scope: !11843)
!11869 = !DILocation(line: 43, column: 14, scope: !11843)
!11870 = !DILocation(line: 45, column: 2, scope: !11843)
!11871 = !DILocation(line: 46, column: 1, scope: !11843)
!11872 = distinct !DISubprogram(name: "do_ctr_op", scope: !1881, file: !1881, line: 76, type: !1947, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11873)
!11873 = !{!11874, !11875, !11876, !11877, !11878, !11879}
!11874 = !DILocalVariable(name: "ctx", arg: 1, scope: !11872, file: !1881, line: 76, type: !1920)
!11875 = !DILocalVariable(name: "op", arg: 2, scope: !11872, file: !1881, line: 76, type: !1935)
!11876 = !DILocalVariable(name: "iv", arg: 3, scope: !11872, file: !1881, line: 77, type: !184)
!11877 = !DILocalVariable(name: "data", scope: !11872, file: !1881, line: 79, type: !11703)
!11878 = !DILocalVariable(name: "ctr", scope: !11872, file: !1881, line: 80, type: !311)
!11879 = !DILocalVariable(name: "ivlen", scope: !11872, file: !1881, line: 81, type: !125)
!11880 = !DILocation(line: 0, scope: !11872)
!11881 = !DILocation(line: 79, column: 41, scope: !11872)
!11882 = !DILocation(line: 80, column: 2, scope: !11872)
!11883 = !DILocation(line: 80, column: 10, scope: !11872)
!11884 = !DILocation(line: 81, column: 19, scope: !11872)
!11885 = !DILocation(line: 81, column: 14, scope: !11872)
!11886 = !DILocation(line: 81, column: 55, scope: !11872)
!11887 = !DILocation(line: 81, column: 63, scope: !11872)
!11888 = !DILocation(line: 81, column: 26, scope: !11872)
!11889 = !DILocation(line: 86, column: 2, scope: !11872)
!11890 = !DILocation(line: 88, column: 22, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11872, file: !1881, line: 88, column: 6)
!11892 = !DILocation(line: 88, column: 35, scope: !11891)
!11893 = !DILocation(line: 88, column: 52, scope: !11891)
!11894 = !DILocation(line: 89, column: 8, scope: !11891)
!11895 = !DILocation(line: 90, column: 11, scope: !11891)
!11896 = !DILocation(line: 88, column: 6, scope: !11891)
!11897 = !DILocation(line: 90, column: 24, scope: !11891)
!11898 = !DILocation(line: 88, column: 6, scope: !11872)
!11899 = !DILocation(line: 91, column: 3, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !1881, line: 91, column: 3)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !1881, line: 91, column: 3)
!11902 = distinct !DILexicalBlock(scope: !11903, file: !1881, line: 91, column: 3)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !1881, line: 91, column: 3)
!11904 = distinct !DILexicalBlock(scope: !11891, file: !1881, line: 90, column: 43)
!11905 = !DILocation(line: 92, column: 3, scope: !11904)
!11906 = !DILocation(line: 96, column: 20, scope: !11872)
!11907 = !DILocation(line: 96, column: 6, scope: !11872)
!11908 = !DILocation(line: 96, column: 14, scope: !11872)
!11909 = !DILocation(line: 98, column: 2, scope: !11872)
!11910 = !DILocation(line: 99, column: 1, scope: !11872)
!11911 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1881, file: !1881, line: 101, type: !1954, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11912)
!11912 = !{!11913, !11914, !11915, !11916, !11924, !11925, !11927}
!11913 = !DILocalVariable(name: "ctx", arg: 1, scope: !11911, file: !1881, line: 101, type: !1920)
!11914 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11911, file: !1881, line: 102, type: !1956)
!11915 = !DILocalVariable(name: "nonce", arg: 3, scope: !11911, file: !1881, line: 102, type: !184)
!11916 = !DILocalVariable(name: "ccm", scope: !11911, file: !1881, line: 104, type: !11917)
!11917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !3709, line: 91, size: 96, elements: !11918)
!11918 = !{!11919, !11922, !11923}
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11917, file: !3709, line: 92, baseType: !11920, size: 32)
!11920 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !981, line: 66, baseType: !11921)
!11921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!11922 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11917, file: !3709, line: 93, baseType: !184, size: 32, offset: 32)
!11923 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11917, file: !3709, line: 94, baseType: !32, size: 32, offset: 64)
!11924 = !DILocalVariable(name: "data", scope: !11911, file: !1881, line: 105, type: !11703)
!11925 = !DILocalVariable(name: "ccm_param", scope: !11911, file: !1881, line: 106, type: !11926)
!11926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!11927 = !DILocalVariable(name: "op", scope: !11911, file: !1881, line: 107, type: !1935)
!11928 = !DILocation(line: 0, scope: !11911)
!11929 = !DILocation(line: 104, column: 2, scope: !11911)
!11930 = !DILocation(line: 104, column: 28, scope: !11911)
!11931 = !DILocation(line: 105, column: 41, scope: !11911)
!11932 = !DILocation(line: 106, column: 39, scope: !11911)
!11933 = !DILocation(line: 106, column: 51, scope: !11911)
!11934 = !DILocation(line: 107, column: 35, scope: !11911)
!11935 = !DILocation(line: 109, column: 33, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11911, file: !1881, line: 109, column: 6)
!11937 = !DILocation(line: 110, column: 15, scope: !11936)
!11938 = !DILocation(line: 110, column: 4, scope: !11936)
!11939 = !DILocation(line: 111, column: 15, scope: !11936)
!11940 = !DILocation(line: 111, column: 4, scope: !11936)
!11941 = !DILocation(line: 109, column: 6, scope: !11936)
!11942 = !DILocation(line: 111, column: 24, scope: !11936)
!11943 = !DILocation(line: 109, column: 6, scope: !11911)
!11944 = !DILocation(line: 112, column: 3, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !1881, line: 112, column: 3)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !1881, line: 112, column: 3)
!11947 = distinct !DILexicalBlock(scope: !11948, file: !1881, line: 112, column: 3)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !1881, line: 112, column: 3)
!11949 = distinct !DILexicalBlock(scope: !11936, file: !1881, line: 111, column: 43)
!11950 = !DILocation(line: 113, column: 3, scope: !11949)
!11951 = !DILocation(line: 116, column: 39, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11911, file: !1881, line: 116, column: 6)
!11953 = !DILocation(line: 116, column: 52, scope: !11952)
!11954 = !DILocation(line: 117, column: 16, scope: !11952)
!11955 = !DILocation(line: 117, column: 29, scope: !11952)
!11956 = !DILocation(line: 117, column: 41, scope: !11952)
!11957 = !DILocation(line: 118, column: 11, scope: !11952)
!11958 = !DILocation(line: 116, column: 6, scope: !11952)
!11959 = !DILocation(line: 118, column: 25, scope: !11952)
!11960 = !DILocation(line: 116, column: 6, scope: !11911)
!11961 = !DILocation(line: 119, column: 3, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11963, file: !1881, line: 119, column: 3)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !1881, line: 119, column: 3)
!11964 = distinct !DILexicalBlock(scope: !11965, file: !1881, line: 119, column: 3)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !1881, line: 119, column: 3)
!11966 = distinct !DILexicalBlock(scope: !11952, file: !1881, line: 118, column: 44)
!11967 = !DILocation(line: 120, column: 3, scope: !11966)
!11968 = !DILocation(line: 128, column: 15, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11911, file: !1881, line: 128, column: 6)
!11970 = !DILocation(line: 128, column: 6, scope: !11969)
!11971 = !DILocation(line: 128, column: 6, scope: !11911)
!11972 = !DILocation(line: 129, column: 28, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11969, file: !1881, line: 128, column: 20)
!11974 = !DILocation(line: 129, column: 42, scope: !11973)
!11975 = !DILocation(line: 129, column: 36, scope: !11973)
!11976 = !DILocation(line: 129, column: 54, scope: !11973)
!11977 = !DILocation(line: 129, column: 3, scope: !11973)
!11978 = !DILocation(line: 130, column: 2, scope: !11973)
!11979 = !DILocation(line: 136, column: 20, scope: !11911)
!11980 = !DILocation(line: 136, column: 33, scope: !11911)
!11981 = !DILocation(line: 136, column: 27, scope: !11911)
!11982 = !DILocation(line: 136, column: 6, scope: !11911)
!11983 = !DILocation(line: 136, column: 14, scope: !11911)
!11984 = !DILocation(line: 138, column: 2, scope: !11911)
!11985 = !DILocation(line: 139, column: 1, scope: !11911)
!11986 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1881, file: !1881, line: 48, type: !1947, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !11987)
!11987 = !{!11988, !11989, !11990, !11991}
!11988 = !DILocalVariable(name: "ctx", arg: 1, scope: !11986, file: !1881, line: 48, type: !1920)
!11989 = !DILocalVariable(name: "op", arg: 2, scope: !11986, file: !1881, line: 48, type: !1935)
!11990 = !DILocalVariable(name: "iv", arg: 3, scope: !11986, file: !1881, line: 49, type: !184)
!11991 = !DILocalVariable(name: "data", scope: !11986, file: !1881, line: 51, type: !11703)
!11992 = !DILocation(line: 0, scope: !11986)
!11993 = !DILocation(line: 56, column: 16, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11986, file: !1881, line: 56, column: 6)
!11995 = !DILocation(line: 56, column: 9, scope: !11994)
!11996 = !DILocation(line: 56, column: 6, scope: !11986)
!11997 = !DILocation(line: 57, column: 3, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11999, file: !1881, line: 57, column: 3)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !1881, line: 57, column: 3)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !1881, line: 57, column: 3)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !1881, line: 57, column: 3)
!12002 = distinct !DILexicalBlock(scope: !11994, file: !1881, line: 56, column: 24)
!12003 = !DILocation(line: 58, column: 3, scope: !12002)
!12004 = !DILocation(line: 51, column: 41, scope: !11986)
!12005 = !DILocation(line: 61, column: 30, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11986, file: !1881, line: 61, column: 6)
!12007 = !DILocation(line: 62, column: 8, scope: !12006)
!12008 = !DILocation(line: 63, column: 15, scope: !12006)
!12009 = !DILocation(line: 64, column: 8, scope: !12006)
!12010 = !DILocation(line: 64, column: 15, scope: !12006)
!12011 = !DILocation(line: 65, column: 23, scope: !12006)
!12012 = !DILocation(line: 61, column: 6, scope: !12006)
!12013 = !DILocation(line: 65, column: 36, scope: !12006)
!12014 = !DILocation(line: 61, column: 6, scope: !11986)
!12015 = !DILocation(line: 66, column: 3, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !1881, line: 66, column: 3)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !1881, line: 66, column: 3)
!12018 = distinct !DILexicalBlock(scope: !12019, file: !1881, line: 66, column: 3)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !1881, line: 66, column: 3)
!12020 = distinct !DILexicalBlock(scope: !12006, file: !1881, line: 65, column: 55)
!12021 = !DILocation(line: 67, column: 3, scope: !12020)
!12022 = !DILocation(line: 71, column: 20, scope: !11986)
!12023 = !DILocation(line: 71, column: 6, scope: !11986)
!12024 = !DILocation(line: 71, column: 14, scope: !11986)
!12025 = !DILocation(line: 73, column: 2, scope: !11986)
!12026 = !DILocation(line: 74, column: 1, scope: !11986)
!12027 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1881, file: !1881, line: 141, type: !1954, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !12028)
!12028 = !{!12029, !12030, !12031, !12032, !12033, !12034, !12035}
!12029 = !DILocalVariable(name: "ctx", arg: 1, scope: !12027, file: !1881, line: 141, type: !1920)
!12030 = !DILocalVariable(name: "aead_op", arg: 2, scope: !12027, file: !1881, line: 142, type: !1956)
!12031 = !DILocalVariable(name: "nonce", arg: 3, scope: !12027, file: !1881, line: 142, type: !184)
!12032 = !DILocalVariable(name: "ccm", scope: !12027, file: !1881, line: 144, type: !11917)
!12033 = !DILocalVariable(name: "data", scope: !12027, file: !1881, line: 145, type: !11703)
!12034 = !DILocalVariable(name: "ccm_param", scope: !12027, file: !1881, line: 146, type: !11926)
!12035 = !DILocalVariable(name: "op", scope: !12027, file: !1881, line: 147, type: !1935)
!12036 = !DILocation(line: 0, scope: !12027)
!12037 = !DILocation(line: 144, column: 2, scope: !12027)
!12038 = !DILocation(line: 144, column: 28, scope: !12027)
!12039 = !DILocation(line: 145, column: 41, scope: !12027)
!12040 = !DILocation(line: 146, column: 39, scope: !12027)
!12041 = !DILocation(line: 146, column: 51, scope: !12027)
!12042 = !DILocation(line: 147, column: 35, scope: !12027)
!12043 = !DILocation(line: 149, column: 33, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12027, file: !1881, line: 149, column: 6)
!12045 = !DILocation(line: 150, column: 17, scope: !12044)
!12046 = !DILocation(line: 150, column: 6, scope: !12044)
!12047 = !DILocation(line: 151, column: 17, scope: !12044)
!12048 = !DILocation(line: 151, column: 6, scope: !12044)
!12049 = !DILocation(line: 149, column: 6, scope: !12044)
!12050 = !DILocation(line: 151, column: 26, scope: !12044)
!12051 = !DILocation(line: 149, column: 6, scope: !12027)
!12052 = !DILocation(line: 152, column: 3, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !1881, line: 152, column: 3)
!12054 = distinct !DILexicalBlock(scope: !12055, file: !1881, line: 152, column: 3)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !1881, line: 152, column: 3)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !1881, line: 152, column: 3)
!12057 = distinct !DILexicalBlock(scope: !12044, file: !1881, line: 151, column: 45)
!12058 = !DILocation(line: 153, column: 3, scope: !12057)
!12059 = !DILocation(line: 160, column: 15, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12027, file: !1881, line: 160, column: 6)
!12061 = !DILocation(line: 160, column: 26, scope: !12060)
!12062 = !DILocation(line: 160, column: 39, scope: !12060)
!12063 = !DILocation(line: 160, column: 33, scope: !12060)
!12064 = !DILocation(line: 160, column: 19, scope: !12060)
!12065 = !DILocation(line: 160, column: 6, scope: !12027)
!12066 = !DILocation(line: 161, column: 3, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12068, file: !1881, line: 161, column: 3)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !1881, line: 161, column: 3)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !1881, line: 161, column: 3)
!12070 = distinct !DILexicalBlock(scope: !12071, file: !1881, line: 161, column: 3)
!12071 = distinct !DILexicalBlock(scope: !12060, file: !1881, line: 160, column: 47)
!12072 = !DILocation(line: 162, column: 3, scope: !12071)
!12073 = !DILocation(line: 165, column: 41, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12027, file: !1881, line: 165, column: 6)
!12075 = !DILocation(line: 165, column: 54, scope: !12074)
!12076 = !DILocation(line: 166, column: 18, scope: !12074)
!12077 = !DILocation(line: 166, column: 31, scope: !12074)
!12078 = !DILocation(line: 168, column: 33, scope: !12074)
!12079 = !DILocation(line: 168, column: 22, scope: !12074)
!12080 = !DILocation(line: 168, column: 20, scope: !12074)
!12081 = !DILocation(line: 165, column: 6, scope: !12074)
!12082 = !DILocation(line: 169, column: 15, scope: !12074)
!12083 = !DILocation(line: 165, column: 6, scope: !12027)
!12084 = !DILocation(line: 170, column: 3, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12086, file: !1881, line: 170, column: 3)
!12086 = distinct !DILexicalBlock(scope: !12087, file: !1881, line: 170, column: 3)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !1881, line: 170, column: 3)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !1881, line: 170, column: 3)
!12089 = distinct !DILexicalBlock(scope: !12074, file: !1881, line: 169, column: 34)
!12090 = !DILocation(line: 171, column: 3, scope: !12089)
!12091 = !DILocation(line: 174, column: 20, scope: !12027)
!12092 = !DILocation(line: 174, column: 40, scope: !12027)
!12093 = !DILocation(line: 174, column: 29, scope: !12027)
!12094 = !DILocation(line: 174, column: 27, scope: !12027)
!12095 = !DILocation(line: 174, column: 6, scope: !12027)
!12096 = !DILocation(line: 174, column: 14, scope: !12027)
!12097 = !DILocation(line: 176, column: 2, scope: !12027)
!12098 = !DILocation(line: 177, column: 1, scope: !12027)
!12099 = distinct !DISubprogram(name: "get_unused_session", scope: !1881, file: !1881, line: 179, type: !10634, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !12100)
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "i", scope: !12099, file: !1881, line: 181, type: !125)
!12102 = !DILocation(line: 0, scope: !12099)
!12103 = !DILocation(line: 183, column: 2, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12099, file: !1881, line: 183, column: 2)
!12105 = !DILocation(line: 184, column: 26, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12107, file: !1881, line: 184, column: 7)
!12107 = distinct !DILexicalBlock(scope: !12108, file: !1881, line: 183, column: 43)
!12108 = distinct !DILexicalBlock(scope: !12104, file: !1881, line: 183, column: 2)
!12109 = !DILocation(line: 184, column: 33, scope: !12106)
!12110 = !DILocation(line: 184, column: 7, scope: !12107)
!12111 = !DILocation(line: 185, column: 30, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12106, file: !1881, line: 184, column: 39)
!12113 = !DILocation(line: 186, column: 4, scope: !12112)
!12114 = distinct !{!12114, !12103, !12115}
!12115 = !DILocation(line: 188, column: 2, scope: !12104)
!12116 = !DILocation(line: 190, column: 2, scope: !12099)
!12117 = distinct !DISubprogram(name: "uart_sam0_poll_in", scope: !2371, file: !2371, line: 637, type: !2111, scopeLine: 638, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12118)
!12118 = !{!12119, !12120, !12121, !12123}
!12119 = !DILocalVariable(name: "dev", arg: 1, scope: !12117, file: !2371, line: 637, type: !2113)
!12120 = !DILocalVariable(name: "c", arg: 2, scope: !12117, file: !2371, line: 637, type: !1805)
!12121 = !DILocalVariable(name: "config", scope: !12117, file: !2371, line: 639, type: !12122)
!12122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!12123 = !DILocalVariable(name: "usart", scope: !12117, file: !2371, line: 641, type: !12124)
!12124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2439)
!12125 = !DILocation(line: 0, scope: !12117)
!12126 = !DILocation(line: 639, column: 48, scope: !12117)
!12127 = !DILocation(line: 641, column: 38, scope: !12117)
!12128 = !DILocation(line: 643, column: 26, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12117, file: !2371, line: 643, column: 6)
!12130 = !DILocation(line: 643, column: 7, scope: !12129)
!12131 = !DILocation(line: 643, column: 6, scope: !12117)
!12132 = !DILocation(line: 647, column: 34, scope: !12117)
!12133 = !DILocation(line: 647, column: 7, scope: !12117)
!12134 = !DILocation(line: 647, column: 5, scope: !12117)
!12135 = !DILocation(line: 648, column: 2, scope: !12117)
!12136 = !DILocation(line: 649, column: 1, scope: !12117)
!12137 = distinct !DISubprogram(name: "uart_sam0_poll_out", scope: !2371, file: !2371, line: 651, type: !2130, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12138)
!12138 = !{!12139, !12140, !12141, !12142}
!12139 = !DILocalVariable(name: "dev", arg: 1, scope: !12137, file: !2371, line: 651, type: !2113)
!12140 = !DILocalVariable(name: "c", arg: 2, scope: !12137, file: !2371, line: 651, type: !151)
!12141 = !DILocalVariable(name: "config", scope: !12137, file: !2371, line: 653, type: !12122)
!12142 = !DILocalVariable(name: "usart", scope: !12137, file: !2371, line: 655, type: !12124)
!12143 = !DILocation(line: 0, scope: !12137)
!12144 = !DILocation(line: 653, column: 48, scope: !12137)
!12145 = !DILocation(line: 655, column: 38, scope: !12137)
!12146 = !DILocation(line: 657, column: 2, scope: !12137)
!12147 = !DILocation(line: 657, column: 29, scope: !12137)
!12148 = !DILocation(line: 657, column: 9, scope: !12137)
!12149 = distinct !{!12149, !12146, !12150}
!12150 = !DILocation(line: 658, column: 2, scope: !12137)
!12151 = !DILocation(line: 661, column: 20, scope: !12137)
!12152 = !DILocation(line: 661, column: 14, scope: !12137)
!12153 = !DILocation(line: 661, column: 18, scope: !12137)
!12154 = !DILocation(line: 662, column: 1, scope: !12137)
!12155 = distinct !DISubprogram(name: "uart_sam0_err_check", scope: !2371, file: !2371, line: 664, type: !2134, scopeLine: 665, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12156)
!12156 = !{!12157, !12158, !12159, !12160}
!12157 = !DILocalVariable(name: "dev", arg: 1, scope: !12155, file: !2371, line: 664, type: !2113)
!12158 = !DILocalVariable(name: "config", scope: !12155, file: !2371, line: 666, type: !12122)
!12159 = !DILocalVariable(name: "regs", scope: !12155, file: !2371, line: 668, type: !12124)
!12160 = !DILocalVariable(name: "err", scope: !12155, file: !2371, line: 669, type: !208)
!12161 = !DILocation(line: 0, scope: !12155)
!12162 = !DILocation(line: 666, column: 48, scope: !12155)
!12163 = !DILocation(line: 668, column: 37, scope: !12155)
!12164 = !DILocation(line: 671, column: 19, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12155, file: !2371, line: 671, column: 6)
!12166 = !DILocation(line: 671, column: 6, scope: !12155)
!12167 = !DILocation(line: 675, column: 19, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12155, file: !2371, line: 675, column: 6)
!12169 = !DILocation(line: 675, column: 23, scope: !12168)
!12170 = !DILocation(line: 675, column: 6, scope: !12155)
!12171 = !DILocation(line: 679, column: 19, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12155, file: !2371, line: 679, column: 6)
!12173 = !DILocation(line: 679, column: 6, scope: !12155)
!12174 = !DILocation(line: 684, column: 19, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12155, file: !2371, line: 684, column: 6)
!12176 = !DILocation(line: 684, column: 6, scope: !12155)
!12177 = !DILocation(line: 688, column: 19, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12155, file: !2371, line: 688, column: 6)
!12179 = !DILocation(line: 688, column: 6, scope: !12155)
!12180 = !DILocation(line: 692, column: 19, scope: !12155)
!12181 = !DILocation(line: 703, column: 2, scope: !12155)
!12182 = !DILocation(line: 704, column: 2, scope: !12155)
!12183 = distinct !DISubprogram(name: "uart_sam0_configure", scope: !2371, file: !2371, line: 388, type: !2138, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12184)
!12184 = !{!12185, !12186, !12187, !12188, !12190, !12193, !12194, !12195}
!12185 = !DILocalVariable(name: "dev", arg: 1, scope: !12183, file: !2371, line: 388, type: !2113)
!12186 = !DILocalVariable(name: "new_cfg", arg: 2, scope: !12183, file: !2371, line: 389, type: !2140)
!12187 = !DILocalVariable(name: "retval", scope: !12183, file: !2371, line: 391, type: !125)
!12188 = !DILocalVariable(name: "cfg", scope: !12183, file: !2371, line: 393, type: !12189)
!12189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12122)
!12190 = !DILocalVariable(name: "dev_data", scope: !12183, file: !2371, line: 394, type: !12191)
!12191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12192)
!12192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!12193 = !DILocalVariable(name: "usart", scope: !12183, file: !2371, line: 395, type: !12124)
!12194 = !DILocalVariable(name: "CTRLA_temp", scope: !12183, file: !2371, line: 411, type: !2446)
!12195 = !DILocalVariable(name: "CTRLB_temp", scope: !12183, file: !2371, line: 412, type: !2470)
!12196 = !DILocation(line: 411, column: 26, scope: !12183)
!12197 = !DILocation(line: 412, column: 26, scope: !12183)
!12198 = !DILocation(line: 0, scope: !12183)
!12199 = !DILocation(line: 393, column: 51, scope: !12183)
!12200 = !DILocation(line: 394, column: 51, scope: !12183)
!12201 = !DILocation(line: 395, column: 35, scope: !12183)
!12202 = !DILocation(line: 397, column: 2, scope: !12183)
!12203 = !DILocation(line: 399, column: 19, scope: !12183)
!12204 = !DILocation(line: 399, column: 26, scope: !12183)
!12205 = !DILocation(line: 400, column: 2, scope: !12183)
!12206 = !DILocation(line: 402, column: 15, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12183, file: !2371, line: 402, column: 6)
!12208 = !DILocation(line: 402, column: 25, scope: !12207)
!12209 = !DILocation(line: 402, column: 6, scope: !12183)
!12210 = !DILocation(line: 409, column: 25, scope: !12183)
!12211 = !DILocation(line: 409, column: 35, scope: !12183)
!12212 = !DILocation(line: 411, column: 2, scope: !12183)
!12213 = !DILocation(line: 411, column: 46, scope: !12183)
!12214 = !DILocation(line: 412, column: 2, scope: !12183)
!12215 = !DILocation(line: 412, column: 46, scope: !12183)
!12216 = !DILocation(line: 414, column: 19, scope: !12183)
!12217 = !DILocation(line: 414, column: 2, scope: !12183)
!12218 = !DILocation(line: 416, column: 23, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12183, file: !2371, line: 414, column: 27)
!12220 = !DILocation(line: 417, column: 3, scope: !12219)
!12221 = !DILocation(line: 419, column: 23, scope: !12219)
!12222 = !DILocation(line: 420, column: 24, scope: !12219)
!12223 = !DILocation(line: 421, column: 3, scope: !12219)
!12224 = !DILocation(line: 423, column: 23, scope: !12219)
!12225 = !DILocation(line: 424, column: 24, scope: !12219)
!12226 = !DILocation(line: 425, column: 3, scope: !12219)
!12227 = !DILocation(line: 430, column: 25, scope: !12183)
!12228 = !DILocation(line: 430, column: 32, scope: !12183)
!12229 = !DILocation(line: 432, column: 19, scope: !12183)
!12230 = !DILocation(line: 432, column: 2, scope: !12183)
!12231 = !DILocation(line: 434, column: 25, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12183, file: !2371, line: 432, column: 30)
!12233 = !DILocation(line: 435, column: 3, scope: !12232)
!12234 = !DILocation(line: 437, column: 25, scope: !12232)
!12235 = !DILocation(line: 438, column: 3, scope: !12232)
!12236 = !DILocation(line: 0, scope: !12232)
!12237 = !DILocation(line: 443, column: 25, scope: !12183)
!12238 = !DILocation(line: 443, column: 35, scope: !12183)
!12239 = !DILocation(line: 445, column: 19, scope: !12183)
!12240 = !DILocation(line: 445, column: 2, scope: !12183)
!12241 = !DILocation(line: 447, column: 25, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12183, file: !2371, line: 445, column: 30)
!12243 = !DILocation(line: 448, column: 3, scope: !12242)
!12244 = !DILocation(line: 450, column: 25, scope: !12242)
!12245 = !DILocation(line: 451, column: 3, scope: !12242)
!12246 = !DILocation(line: 453, column: 25, scope: !12242)
!12247 = !DILocation(line: 454, column: 3, scope: !12242)
!12248 = !DILocation(line: 456, column: 25, scope: !12242)
!12249 = !DILocation(line: 457, column: 3, scope: !12242)
!12250 = !DILocation(line: 459, column: 25, scope: !12242)
!12251 = !DILocation(line: 460, column: 3, scope: !12242)
!12252 = !DILocation(line: 468, column: 24, scope: !12183)
!12253 = !DILocation(line: 465, column: 25, scope: !12183)
!12254 = !DILocation(line: 465, column: 35, scope: !12183)
!12255 = !DILocation(line: 468, column: 31, scope: !12183)
!12256 = !DILocation(line: 471, column: 17, scope: !12183)
!12257 = !DILocation(line: 472, column: 2, scope: !12183)
!12258 = !DILocation(line: 474, column: 17, scope: !12183)
!12259 = !DILocation(line: 475, column: 2, scope: !12183)
!12260 = !DILocation(line: 477, column: 50, scope: !12183)
!12261 = !DILocation(line: 477, column: 11, scope: !12183)
!12262 = !DILocation(line: 479, column: 13, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12183, file: !2371, line: 479, column: 6)
!12264 = !DILocation(line: 479, column: 6, scope: !12183)
!12265 = !DILocation(line: 483, column: 45, scope: !12183)
!12266 = !DILocation(line: 483, column: 25, scope: !12183)
!12267 = !DILocation(line: 483, column: 34, scope: !12183)
!12268 = !DILocation(line: 485, column: 26, scope: !12183)
!12269 = !DILocation(line: 486, column: 2, scope: !12183)
!12270 = !DILocation(line: 488, column: 2, scope: !12183)
!12271 = !DILocation(line: 489, column: 1, scope: !12183)
!12272 = distinct !DISubprogram(name: "uart_sam0_config_get", scope: !2371, file: !2371, line: 491, type: !2151, scopeLine: 493, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12273)
!12273 = !{!12274, !12275, !12276}
!12274 = !DILocalVariable(name: "dev", arg: 1, scope: !12272, file: !2371, line: 491, type: !2113)
!12275 = !DILocalVariable(name: "out_cfg", arg: 2, scope: !12272, file: !2371, line: 492, type: !2153)
!12276 = !DILocalVariable(name: "dev_data", scope: !12272, file: !2371, line: 494, type: !12191)
!12277 = !DILocation(line: 0, scope: !12272)
!12278 = !DILocation(line: 494, column: 51, scope: !12272)
!12279 = !DILocation(line: 496, column: 9, scope: !12272)
!12280 = !DILocation(line: 496, column: 2, scope: !12272)
!12281 = !DILocation(line: 499, column: 2, scope: !12272)
!12282 = distinct !DISubprogram(name: "uart_sam0_fifo_fill", scope: !2371, file: !2371, line: 783, type: !2156, scopeLine: 785, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12283)
!12283 = !{!12284, !12285, !12286, !12287, !12288}
!12284 = !DILocalVariable(name: "dev", arg: 1, scope: !12282, file: !2371, line: 783, type: !2113)
!12285 = !DILocalVariable(name: "tx_data", arg: 2, scope: !12282, file: !2371, line: 784, type: !979)
!12286 = !DILocalVariable(name: "len", arg: 3, scope: !12282, file: !2371, line: 784, type: !125)
!12287 = !DILocalVariable(name: "config", scope: !12282, file: !2371, line: 786, type: !12122)
!12288 = !DILocalVariable(name: "regs", scope: !12282, file: !2371, line: 787, type: !2439)
!12289 = !DILocation(line: 0, scope: !12282)
!12290 = !DILocation(line: 786, column: 48, scope: !12282)
!12291 = !DILocation(line: 787, column: 30, scope: !12282)
!12292 = !DILocation(line: 789, column: 24, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12282, file: !2371, line: 789, column: 6)
!12294 = !DILocation(line: 789, column: 6, scope: !12293)
!12295 = !DILocation(line: 789, column: 28, scope: !12293)
!12296 = !DILocation(line: 790, column: 20, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12293, file: !2371, line: 789, column: 41)
!12298 = !DILocation(line: 790, column: 14, scope: !12297)
!12299 = !DILocation(line: 790, column: 18, scope: !12297)
!12300 = !DILocation(line: 791, column: 3, scope: !12297)
!12301 = !DILocation(line: 0, scope: !12293)
!12302 = !DILocation(line: 795, column: 1, scope: !12282)
!12303 = distinct !DISubprogram(name: "uart_sam0_fifo_read", scope: !2371, file: !2371, line: 855, type: !2160, scopeLine: 857, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12304)
!12304 = !{!12305, !12306, !12307, !12308, !12309, !12310}
!12305 = !DILocalVariable(name: "dev", arg: 1, scope: !12303, file: !2371, line: 855, type: !2113)
!12306 = !DILocalVariable(name: "rx_data", arg: 2, scope: !12303, file: !2371, line: 855, type: !184)
!12307 = !DILocalVariable(name: "size", arg: 3, scope: !12303, file: !2371, line: 856, type: !1840)
!12308 = !DILocalVariable(name: "config", scope: !12303, file: !2371, line: 858, type: !12122)
!12309 = !DILocalVariable(name: "regs", scope: !12303, file: !2371, line: 859, type: !12124)
!12310 = !DILocalVariable(name: "ch", scope: !12311, file: !2371, line: 862, type: !150)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !2371, line: 861, column: 29)
!12312 = distinct !DILexicalBlock(scope: !12303, file: !2371, line: 861, column: 6)
!12313 = !DILocation(line: 0, scope: !12303)
!12314 = !DILocation(line: 858, column: 48, scope: !12303)
!12315 = !DILocation(line: 859, column: 37, scope: !12303)
!12316 = !DILocation(line: 861, column: 24, scope: !12312)
!12317 = !DILocation(line: 861, column: 6, scope: !12312)
!12318 = !DILocation(line: 861, column: 6, scope: !12303)
!12319 = !DILocation(line: 862, column: 27, scope: !12311)
!12320 = !DILocation(line: 0, scope: !12311)
!12321 = !DILocation(line: 864, column: 12, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12311, file: !2371, line: 864, column: 7)
!12323 = !DILocation(line: 864, column: 7, scope: !12311)
!12324 = !DILocation(line: 862, column: 16, scope: !12311)
!12325 = !DILocation(line: 865, column: 13, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12322, file: !2371, line: 864, column: 18)
!12327 = !DILocation(line: 866, column: 4, scope: !12326)
!12328 = !DILocation(line: 872, column: 1, scope: !12303)
!12329 = distinct !DISubprogram(name: "uart_sam0_irq_tx_enable", scope: !2371, file: !2371, line: 797, type: !2164, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12330)
!12330 = !{!12331, !12332, !12333}
!12331 = !DILocalVariable(name: "dev", arg: 1, scope: !12329, file: !2371, line: 797, type: !2113)
!12332 = !DILocalVariable(name: "config", scope: !12329, file: !2371, line: 799, type: !12122)
!12333 = !DILocalVariable(name: "regs", scope: !12329, file: !2371, line: 800, type: !12124)
!12334 = !DILocation(line: 0, scope: !12329)
!12335 = !DILocation(line: 799, column: 48, scope: !12329)
!12336 = !DILocation(line: 800, column: 37, scope: !12329)
!12337 = !DILocation(line: 802, column: 17, scope: !12329)
!12338 = !DILocation(line: 802, column: 21, scope: !12329)
!12339 = !DILocation(line: 804, column: 1, scope: !12329)
!12340 = distinct !DISubprogram(name: "uart_sam0_irq_tx_disable", scope: !2371, file: !2371, line: 806, type: !2164, scopeLine: 807, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12341)
!12341 = !{!12342, !12343, !12344}
!12342 = !DILocalVariable(name: "dev", arg: 1, scope: !12340, file: !2371, line: 806, type: !2113)
!12343 = !DILocalVariable(name: "config", scope: !12340, file: !2371, line: 808, type: !12122)
!12344 = !DILocalVariable(name: "regs", scope: !12340, file: !2371, line: 809, type: !12124)
!12345 = !DILocation(line: 0, scope: !12340)
!12346 = !DILocation(line: 808, column: 48, scope: !12340)
!12347 = !DILocation(line: 809, column: 37, scope: !12340)
!12348 = !DILocation(line: 811, column: 17, scope: !12340)
!12349 = !DILocation(line: 811, column: 21, scope: !12340)
!12350 = !DILocation(line: 813, column: 1, scope: !12340)
!12351 = distinct !DISubprogram(name: "uart_sam0_irq_tx_ready", scope: !2371, file: !2371, line: 815, type: !2134, scopeLine: 816, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12352)
!12352 = !{!12353, !12354, !12355}
!12353 = !DILocalVariable(name: "dev", arg: 1, scope: !12351, file: !2371, line: 815, type: !2113)
!12354 = !DILocalVariable(name: "config", scope: !12351, file: !2371, line: 817, type: !12122)
!12355 = !DILocalVariable(name: "regs", scope: !12351, file: !2371, line: 818, type: !12124)
!12356 = !DILocation(line: 0, scope: !12351)
!12357 = !DILocation(line: 817, column: 48, scope: !12351)
!12358 = !DILocation(line: 818, column: 37, scope: !12351)
!12359 = !DILocation(line: 820, column: 28, scope: !12351)
!12360 = !DILocation(line: 820, column: 32, scope: !12351)
!12361 = !DILocation(line: 820, column: 38, scope: !12351)
!12362 = !DILocation(line: 820, column: 61, scope: !12351)
!12363 = !DILocation(line: 820, column: 42, scope: !12351)
!12364 = !DILocation(line: 820, column: 2, scope: !12351)
!12365 = distinct !DISubprogram(name: "uart_sam0_irq_rx_enable", scope: !2371, file: !2371, line: 831, type: !2164, scopeLine: 832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12366)
!12366 = !{!12367, !12368, !12369}
!12367 = !DILocalVariable(name: "dev", arg: 1, scope: !12365, file: !2371, line: 831, type: !2113)
!12368 = !DILocalVariable(name: "config", scope: !12365, file: !2371, line: 833, type: !12122)
!12369 = !DILocalVariable(name: "regs", scope: !12365, file: !2371, line: 834, type: !12124)
!12370 = !DILocation(line: 0, scope: !12365)
!12371 = !DILocation(line: 833, column: 48, scope: !12365)
!12372 = !DILocation(line: 834, column: 37, scope: !12365)
!12373 = !DILocation(line: 836, column: 17, scope: !12365)
!12374 = !DILocation(line: 836, column: 21, scope: !12365)
!12375 = !DILocation(line: 837, column: 1, scope: !12365)
!12376 = distinct !DISubprogram(name: "uart_sam0_irq_rx_disable", scope: !2371, file: !2371, line: 839, type: !2164, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12377)
!12377 = !{!12378, !12379, !12380}
!12378 = !DILocalVariable(name: "dev", arg: 1, scope: !12376, file: !2371, line: 839, type: !2113)
!12379 = !DILocalVariable(name: "config", scope: !12376, file: !2371, line: 841, type: !12122)
!12380 = !DILocalVariable(name: "regs", scope: !12376, file: !2371, line: 842, type: !12124)
!12381 = !DILocation(line: 0, scope: !12376)
!12382 = !DILocation(line: 841, column: 48, scope: !12376)
!12383 = !DILocation(line: 842, column: 37, scope: !12376)
!12384 = !DILocation(line: 844, column: 17, scope: !12376)
!12385 = !DILocation(line: 844, column: 21, scope: !12376)
!12386 = !DILocation(line: 845, column: 1, scope: !12376)
!12387 = distinct !DISubprogram(name: "uart_sam0_irq_tx_complete", scope: !2371, file: !2371, line: 823, type: !2134, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12388)
!12388 = !{!12389, !12390, !12391}
!12389 = !DILocalVariable(name: "dev", arg: 1, scope: !12387, file: !2371, line: 823, type: !2113)
!12390 = !DILocalVariable(name: "config", scope: !12387, file: !2371, line: 825, type: !12122)
!12391 = !DILocalVariable(name: "regs", scope: !12387, file: !2371, line: 826, type: !12124)
!12392 = !DILocation(line: 0, scope: !12387)
!12393 = !DILocation(line: 825, column: 48, scope: !12387)
!12394 = !DILocation(line: 826, column: 37, scope: !12387)
!12395 = !DILocation(line: 828, column: 28, scope: !12387)
!12396 = !DILocation(line: 828, column: 32, scope: !12387)
!12397 = !DILocation(line: 828, column: 38, scope: !12387)
!12398 = !DILocation(line: 828, column: 61, scope: !12387)
!12399 = !DILocation(line: 828, column: 42, scope: !12387)
!12400 = !DILocation(line: 828, column: 2, scope: !12387)
!12401 = distinct !DISubprogram(name: "uart_sam0_irq_rx_ready", scope: !2371, file: !2371, line: 847, type: !2134, scopeLine: 848, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12402)
!12402 = !{!12403, !12404, !12405}
!12403 = !DILocalVariable(name: "dev", arg: 1, scope: !12401, file: !2371, line: 847, type: !2113)
!12404 = !DILocalVariable(name: "config", scope: !12401, file: !2371, line: 849, type: !12122)
!12405 = !DILocalVariable(name: "regs", scope: !12401, file: !2371, line: 850, type: !12124)
!12406 = !DILocation(line: 0, scope: !12401)
!12407 = !DILocation(line: 849, column: 48, scope: !12401)
!12408 = !DILocation(line: 850, column: 37, scope: !12401)
!12409 = !DILocation(line: 852, column: 27, scope: !12401)
!12410 = !DILocation(line: 852, column: 31, scope: !12401)
!12411 = !DILocation(line: 852, column: 2, scope: !12401)
!12412 = distinct !DISubprogram(name: "uart_sam0_irq_err_enable", scope: !2371, file: !2371, line: 883, type: !2164, scopeLine: 884, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12413)
!12413 = !{!12414, !12415, !12416}
!12414 = !DILocalVariable(name: "dev", arg: 1, scope: !12412, file: !2371, line: 883, type: !2113)
!12415 = !DILocalVariable(name: "config", scope: !12412, file: !2371, line: 885, type: !12122)
!12416 = !DILocalVariable(name: "regs", scope: !12412, file: !2371, line: 886, type: !12124)
!12417 = !DILocation(line: 0, scope: !12412)
!12418 = !DILocation(line: 885, column: 48, scope: !12412)
!12419 = !DILocation(line: 886, column: 37, scope: !12412)
!12420 = !DILocation(line: 888, column: 17, scope: !12412)
!12421 = !DILocation(line: 888, column: 21, scope: !12412)
!12422 = !DILocation(line: 889, column: 2, scope: !12412)
!12423 = !DILocation(line: 890, column: 1, scope: !12412)
!12424 = distinct !DISubprogram(name: "uart_sam0_irq_err_disable", scope: !2371, file: !2371, line: 892, type: !2164, scopeLine: 893, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12425)
!12425 = !{!12426, !12427, !12428}
!12426 = !DILocalVariable(name: "dev", arg: 1, scope: !12424, file: !2371, line: 892, type: !2113)
!12427 = !DILocalVariable(name: "config", scope: !12424, file: !2371, line: 894, type: !12122)
!12428 = !DILocalVariable(name: "regs", scope: !12424, file: !2371, line: 895, type: !12124)
!12429 = !DILocation(line: 0, scope: !12424)
!12430 = !DILocation(line: 894, column: 48, scope: !12424)
!12431 = !DILocation(line: 895, column: 37, scope: !12424)
!12432 = !DILocation(line: 897, column: 17, scope: !12424)
!12433 = !DILocation(line: 897, column: 21, scope: !12424)
!12434 = !DILocation(line: 898, column: 2, scope: !12424)
!12435 = !DILocation(line: 899, column: 1, scope: !12424)
!12436 = distinct !DISubprogram(name: "uart_sam0_irq_is_pending", scope: !2371, file: !2371, line: 874, type: !2134, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12437)
!12437 = !{!12438, !12439, !12440}
!12438 = !DILocalVariable(name: "dev", arg: 1, scope: !12436, file: !2371, line: 874, type: !2113)
!12439 = !DILocalVariable(name: "config", scope: !12436, file: !2371, line: 876, type: !12122)
!12440 = !DILocalVariable(name: "regs", scope: !12436, file: !2371, line: 877, type: !12124)
!12441 = !DILocation(line: 0, scope: !12436)
!12442 = !DILocation(line: 876, column: 48, scope: !12436)
!12443 = !DILocation(line: 877, column: 37, scope: !12436)
!12444 = !DILocation(line: 879, column: 25, scope: !12436)
!12445 = !DILocation(line: 879, column: 45, scope: !12436)
!12446 = !DILocation(line: 879, column: 29, scope: !12436)
!12447 = !DILocation(line: 879, column: 50, scope: !12436)
!12448 = !DILocation(line: 879, column: 2, scope: !12436)
!12449 = distinct !DISubprogram(name: "uart_sam0_irq_update", scope: !2371, file: !2371, line: 902, type: !2134, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12450)
!12450 = !{!12451, !12452, !12453}
!12451 = !DILocalVariable(name: "dev", arg: 1, scope: !12449, file: !2371, line: 902, type: !2113)
!12452 = !DILocalVariable(name: "config", scope: !12449, file: !2371, line: 905, type: !12122)
!12453 = !DILocalVariable(name: "regs", scope: !12449, file: !2371, line: 906, type: !12124)
!12454 = !DILocation(line: 0, scope: !12449)
!12455 = !DILocation(line: 905, column: 48, scope: !12449)
!12456 = !DILocation(line: 906, column: 37, scope: !12449)
!12457 = !DILocation(line: 908, column: 16, scope: !12449)
!12458 = !DILocation(line: 908, column: 20, scope: !12449)
!12459 = !DILocation(line: 915, column: 2, scope: !12449)
!12460 = distinct !DISubprogram(name: "uart_sam0_irq_callback_set", scope: !2371, file: !2371, line: 918, type: !2178, scopeLine: 921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12461)
!12461 = !{!12462, !12463, !12464, !12465}
!12462 = !DILocalVariable(name: "dev", arg: 1, scope: !12460, file: !2371, line: 918, type: !2113)
!12463 = !DILocalVariable(name: "cb", arg: 2, scope: !12460, file: !2371, line: 919, type: !2180)
!12464 = !DILocalVariable(name: "cb_data", arg: 3, scope: !12460, file: !2371, line: 920, type: !124)
!12465 = !DILocalVariable(name: "dev_data", scope: !12460, file: !2371, line: 922, type: !12191)
!12466 = !DILocation(line: 0, scope: !12460)
!12467 = !DILocation(line: 922, column: 51, scope: !12460)
!12468 = !DILocation(line: 924, column: 12, scope: !12460)
!12469 = !DILocation(line: 924, column: 15, scope: !12460)
!12470 = !DILocation(line: 925, column: 12, scope: !12460)
!12471 = !DILocation(line: 925, column: 20, scope: !12460)
!12472 = !DILocation(line: 926, column: 1, scope: !12460)
!12473 = distinct !DISubprogram(name: "wait_synchronization", scope: !2371, file: !2371, line: 91, type: !12474, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12476)
!12474 = !DISubroutineType(types: !12475)
!12475 = !{null, !12124}
!12476 = !{!12477}
!12477 = !DILocalVariable(name: "usart", arg: 1, scope: !12473, file: !2371, line: 91, type: !12124)
!12478 = !DILocation(line: 0, scope: !12473)
!12479 = !DILocation(line: 95, column: 2, scope: !12473)
!12480 = !DILocation(line: 95, column: 26, scope: !12473)
!12481 = !DILocation(line: 95, column: 30, scope: !12473)
!12482 = !DILocation(line: 95, column: 60, scope: !12473)
!12483 = distinct !{!12483, !12479, !12484}
!12484 = !DILocation(line: 96, column: 2, scope: !12473)
!12485 = !DILocation(line: 104, column: 1, scope: !12473)
!12486 = distinct !DISubprogram(name: "uart_sam0_set_baudrate", scope: !2371, file: !2371, line: 106, type: !12487, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12489)
!12487 = !DISubroutineType(types: !12488)
!12488 = !{!125, !12124, !208, !208}
!12489 = !{!12490, !12491, !12492, !12493, !12494}
!12490 = !DILocalVariable(name: "usart", arg: 1, scope: !12486, file: !2371, line: 106, type: !12124)
!12491 = !DILocalVariable(name: "baudrate", arg: 2, scope: !12486, file: !2371, line: 106, type: !208)
!12492 = !DILocalVariable(name: "clk_freq_hz", arg: 3, scope: !12486, file: !2371, line: 107, type: !208)
!12493 = !DILocalVariable(name: "tmp", scope: !12486, file: !2371, line: 109, type: !2271)
!12494 = !DILocalVariable(name: "baud", scope: !12486, file: !2371, line: 110, type: !227)
!12495 = !DILocation(line: 0, scope: !12486)
!12496 = !DILocation(line: 116, column: 14, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12486, file: !2371, line: 116, column: 6)
!12498 = !DILocation(line: 112, column: 8, scope: !12486)
!12499 = !DILocation(line: 112, column: 27, scope: !12486)
!12500 = !DILocation(line: 113, column: 13, scope: !12486)
!12501 = !DILocation(line: 113, column: 35, scope: !12486)
!12502 = !DILocation(line: 120, column: 17, scope: !12486)
!12503 = !DILocation(line: 120, column: 15, scope: !12486)
!12504 = !DILocation(line: 121, column: 14, scope: !12486)
!12505 = !DILocation(line: 121, column: 18, scope: !12486)
!12506 = !DILocation(line: 122, column: 2, scope: !12486)
!12507 = !DILocation(line: 124, column: 2, scope: !12486)
!12508 = !DILocation(line: 125, column: 1, scope: !12486)
!12509 = !DILocation(line: 0, scope: !2393)
!12510 = !DILocation(line: 1293, column: 1, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !2371, line: 1293, column: 1)
!12512 = distinct !DILexicalBlock(scope: !2393, file: !2371, line: 1293, column: 1)
!12513 = !DILocation(line: 1293, column: 1, scope: !12512)
!12514 = !DILocation(line: 1293, column: 1, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !2371, line: 1293, column: 1)
!12516 = distinct !DILexicalBlock(scope: !2393, file: !2371, line: 1293, column: 1)
!12517 = !DILocation(line: 1293, column: 1, scope: !12516)
!12518 = !DILocation(line: 1293, column: 1, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12520, file: !2371, line: 1293, column: 1)
!12520 = distinct !DILexicalBlock(scope: !2393, file: !2371, line: 1293, column: 1)
!12521 = !DILocation(line: 1293, column: 1, scope: !12520)
!12522 = !DILocation(line: 1293, column: 1, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !2371, line: 1293, column: 1)
!12524 = distinct !DILexicalBlock(scope: !2393, file: !2371, line: 1293, column: 1)
!12525 = !DILocation(line: 1293, column: 1, scope: !12524)
!12526 = !DILocation(line: 1293, column: 1, scope: !2393)
!12527 = distinct !DISubprogram(name: "uart_sam0_isr", scope: !2371, file: !2371, line: 709, type: !2164, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12528)
!12528 = !{!12529, !12530}
!12529 = !DILocalVariable(name: "dev", arg: 1, scope: !12527, file: !2371, line: 709, type: !2113)
!12530 = !DILocalVariable(name: "dev_data", scope: !12527, file: !2371, line: 711, type: !12191)
!12531 = !DILocation(line: 0, scope: !12527)
!12532 = !DILocation(line: 711, column: 51, scope: !12527)
!12533 = !DILocation(line: 714, column: 16, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12527, file: !2371, line: 714, column: 6)
!12535 = !DILocation(line: 714, column: 6, scope: !12534)
!12536 = !DILocation(line: 714, column: 6, scope: !12527)
!12537 = !DILocation(line: 715, column: 31, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12534, file: !2371, line: 714, column: 20)
!12539 = !DILocation(line: 715, column: 3, scope: !12538)
!12540 = !DILocation(line: 716, column: 2, scope: !12538)
!12541 = !DILocation(line: 777, column: 1, scope: !12527)
!12542 = distinct !DISubprogram(name: "uart_sam0_init", scope: !2371, file: !2371, line: 503, type: !2134, scopeLine: 504, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12543)
!12543 = !{!12544, !12545, !12546, !12547, !12548}
!12544 = !DILocalVariable(name: "dev", arg: 1, scope: !12542, file: !2371, line: 503, type: !2113)
!12545 = !DILocalVariable(name: "retval", scope: !12542, file: !2371, line: 505, type: !125)
!12546 = !DILocalVariable(name: "cfg", scope: !12542, file: !2371, line: 506, type: !12189)
!12547 = !DILocalVariable(name: "dev_data", scope: !12542, file: !2371, line: 507, type: !12191)
!12548 = !DILocalVariable(name: "usart", scope: !12542, file: !2371, line: 509, type: !12124)
!12549 = !DILocation(line: 0, scope: !12542)
!12550 = !DILocation(line: 506, column: 51, scope: !12542)
!12551 = !DILocation(line: 507, column: 51, scope: !12542)
!12552 = !DILocation(line: 509, column: 35, scope: !12542)
!12553 = !DILocation(line: 513, column: 21, scope: !12542)
!12554 = !DILocation(line: 513, column: 2, scope: !12542)
!12555 = !DILocation(line: 513, column: 35, scope: !12542)
!12556 = !DILocation(line: 513, column: 39, scope: !12542)
!12557 = !DILocation(line: 517, column: 21, scope: !12542)
!12558 = !DILocation(line: 517, column: 8, scope: !12542)
!12559 = !DILocation(line: 517, column: 13, scope: !12542)
!12560 = !DILocation(line: 528, column: 18, scope: !12542)
!12561 = !DILocation(line: 528, column: 22, scope: !12542)
!12562 = !DILocation(line: 529, column: 2, scope: !12542)
!12563 = !DILocation(line: 533, column: 11, scope: !12542)
!12564 = !DILocation(line: 541, column: 30, scope: !12542)
!12565 = !DILocation(line: 532, column: 15, scope: !12542)
!12566 = !DILocation(line: 532, column: 19, scope: !12542)
!12567 = !DILocation(line: 542, column: 2, scope: !12542)
!12568 = !DILocation(line: 545, column: 36, scope: !12542)
!12569 = !DILocation(line: 545, column: 11, scope: !12542)
!12570 = !DILocation(line: 546, column: 13, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12542, file: !2371, line: 546, column: 6)
!12572 = !DILocation(line: 546, column: 6, scope: !12542)
!12573 = !DILocation(line: 550, column: 25, scope: !12542)
!12574 = !DILocation(line: 550, column: 35, scope: !12542)
!12575 = !DILocation(line: 551, column: 25, scope: !12542)
!12576 = !DILocation(line: 551, column: 32, scope: !12542)
!12577 = !DILocation(line: 552, column: 25, scope: !12542)
!12578 = !DILocation(line: 552, column: 35, scope: !12542)
!12579 = !DILocation(line: 553, column: 25, scope: !12542)
!12580 = !DILocation(line: 553, column: 35, scope: !12542)
!12581 = !DILocation(line: 556, column: 15, scope: !12542)
!12582 = !DILocation(line: 556, column: 19, scope: !12542)
!12583 = !DILocation(line: 558, column: 2, scope: !12542)
!12584 = !DILocation(line: 560, column: 46, scope: !12542)
!12585 = !DILocation(line: 560, column: 11, scope: !12542)
!12586 = !DILocation(line: 562, column: 13, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12542, file: !2371, line: 562, column: 6)
!12588 = !DILocation(line: 562, column: 6, scope: !12542)
!12589 = !DILocation(line: 565, column: 41, scope: !12542)
!12590 = !DILocation(line: 565, column: 25, scope: !12542)
!12591 = !DILocation(line: 565, column: 34, scope: !12542)
!12592 = !DILocation(line: 568, column: 7, scope: !12542)
!12593 = !DILocation(line: 568, column: 2, scope: !12542)
!12594 = !DILocation(line: 631, column: 26, scope: !12542)
!12595 = !DILocation(line: 632, column: 2, scope: !12542)
!12596 = !DILocation(line: 634, column: 2, scope: !12542)
!12597 = !DILocation(line: 635, column: 1, scope: !12542)
!12598 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2412, file: !2412, line: 342, type: !12599, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12601)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{!125, !2674, !150}
!12601 = !{!12602, !12603, !12604, !12605}
!12602 = !DILocalVariable(name: "config", arg: 1, scope: !12598, file: !2412, line: 342, type: !2674)
!12603 = !DILocalVariable(name: "id", arg: 2, scope: !12598, file: !2412, line: 343, type: !150)
!12604 = !DILocalVariable(name: "ret", scope: !12598, file: !2412, line: 345, type: !125)
!12605 = !DILocalVariable(name: "state", scope: !12598, file: !2412, line: 346, type: !2415)
!12606 = !DILocation(line: 0, scope: !12598)
!12607 = !DILocation(line: 346, column: 2, scope: !12598)
!12608 = !DILocation(line: 348, column: 8, scope: !12598)
!12609 = !DILocation(line: 349, column: 10, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12598, file: !2412, line: 349, column: 6)
!12611 = !DILocation(line: 349, column: 6, scope: !12598)
!12612 = !DILocation(line: 353, column: 44, scope: !12598)
!12613 = !DILocation(line: 353, column: 9, scope: !12598)
!12614 = !DILocation(line: 353, column: 2, scope: !12598)
!12615 = !DILocation(line: 354, column: 1, scope: !12598)
!12616 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2412, file: !2412, line: 316, type: !12617, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2057, retainedNodes: !12619)
!12617 = !DISubroutineType(types: !12618)
!12618 = !{!125, !2674, !2415}
!12619 = !{!12620, !12621, !12622}
!12620 = !DILocalVariable(name: "config", arg: 1, scope: !12616, file: !2412, line: 317, type: !2674)
!12621 = !DILocalVariable(name: "state", arg: 2, scope: !12616, file: !2412, line: 318, type: !2415)
!12622 = !DILocalVariable(name: "reg", scope: !12616, file: !2412, line: 320, type: !22)
!12623 = !DILocation(line: 0, scope: !12616)
!12624 = !DILocation(line: 329, column: 39, scope: !12616)
!12625 = !DILocation(line: 329, column: 52, scope: !12616)
!12626 = !DILocation(line: 329, column: 9, scope: !12616)
!12627 = !DILocation(line: 329, column: 2, scope: !12616)
!12628 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2875, file: !2875, line: 270, type: !2881, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12629)
!12629 = !{!12630}
!12630 = !DILocalVariable(name: "dev", arg: 1, scope: !12628, file: !2875, line: 270, type: !2883)
!12631 = !DILocation(line: 0, scope: !12628)
!12632 = !DILocation(line: 274, column: 2, scope: !12628)
!12633 = !DILocation(line: 275, column: 12, scope: !12628)
!12634 = !DILocation(line: 276, column: 15, scope: !12628)
!12635 = !DILocation(line: 277, column: 16, scope: !12628)
!12636 = !DILocation(line: 278, column: 15, scope: !12628)
!12637 = !DILocation(line: 279, column: 16, scope: !12628)
!12638 = !DILocation(line: 282, column: 2, scope: !12628)
!12639 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1167, file: !1167, line: 1814, type: !9412, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12640)
!12640 = !{!12641, !12642}
!12641 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12639, file: !1167, line: 1814, type: !3736)
!12642 = !DILocalVariable(name: "priority", arg: 2, scope: !12639, file: !1167, line: 1814, type: !208)
!12643 = !DILocation(line: 0, scope: !12639)
!12644 = !DILocation(line: 1822, column: 46, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !1167, line: 1821, column: 3)
!12646 = distinct !DILexicalBlock(scope: !12639, file: !1167, line: 1816, column: 7)
!12647 = !DILocation(line: 1824, column: 1, scope: !12639)
!12648 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2875, file: !2875, line: 118, type: !9315, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12649)
!12649 = !{!12650, !12651}
!12650 = !DILocalVariable(name: "arg", arg: 1, scope: !12648, file: !2875, line: 118, type: !124)
!12651 = !DILocalVariable(name: "dticks", scope: !12648, file: !2875, line: 121, type: !208)
!12652 = !DILocation(line: 0, scope: !12648)
!12653 = !DILocation(line: 124, column: 2, scope: !12648)
!12654 = !DILocation(line: 129, column: 17, scope: !12648)
!12655 = !DILocation(line: 129, column: 14, scope: !12648)
!12656 = !DILocation(line: 130, column: 15, scope: !12648)
!12657 = !DILocation(line: 145, column: 27, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !2875, line: 132, column: 16)
!12659 = distinct !DILexicalBlock(scope: !12648, file: !2875, line: 132, column: 6)
!12660 = !DILocation(line: 145, column: 25, scope: !12658)
!12661 = !DILocation(line: 145, column: 45, scope: !12658)
!12662 = !DILocation(line: 146, column: 30, scope: !12658)
!12663 = !DILocation(line: 146, column: 20, scope: !12658)
!12664 = !DILocation(line: 147, column: 3, scope: !12658)
!12665 = !DILocation(line: 151, column: 2, scope: !12648)
!12666 = !DILocation(line: 152, column: 1, scope: !12648)
!12667 = distinct !DISubprogram(name: "elapsed", scope: !2875, file: !2875, line: 85, type: !9459, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12668)
!12668 = !{!12669, !12670, !12671}
!12669 = !DILocalVariable(name: "val1", scope: !12667, file: !2875, line: 87, type: !208)
!12670 = !DILocalVariable(name: "ctrl", scope: !12667, file: !2875, line: 88, type: !208)
!12671 = !DILocalVariable(name: "val2", scope: !12667, file: !2875, line: 89, type: !208)
!12672 = !DILocation(line: 87, column: 27, scope: !12667)
!12673 = !DILocation(line: 0, scope: !12667)
!12674 = !DILocation(line: 88, column: 27, scope: !12667)
!12675 = !DILocation(line: 89, column: 27, scope: !12667)
!12676 = !DILocation(line: 105, column: 12, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12667, file: !2875, line: 105, column: 6)
!12678 = !DILocation(line: 106, column: 6, scope: !12677)
!12679 = !DILocation(line: 107, column: 16, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12677, file: !2875, line: 106, column: 24)
!12681 = !DILocation(line: 111, column: 18, scope: !12680)
!12682 = !DILocation(line: 112, column: 2, scope: !12680)
!12683 = !DILocation(line: 114, column: 20, scope: !12667)
!12684 = !DILocation(line: 114, column: 30, scope: !12667)
!12685 = !DILocation(line: 114, column: 28, scope: !12667)
!12686 = !DILocation(line: 114, column: 2, scope: !12667)
!12687 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2875, file: !2875, line: 154, type: !12688, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12690)
!12688 = !DISubroutineType(types: !12689)
!12689 = !{null, !1731, !153}
!12690 = !{!12691, !12692, !12693, !12694, !12695, !12696, !12697, !12702, !12703}
!12691 = !DILocalVariable(name: "ticks", arg: 1, scope: !12687, file: !2875, line: 154, type: !1731)
!12692 = !DILocalVariable(name: "idle", arg: 2, scope: !12687, file: !2875, line: 154, type: !153)
!12693 = !DILocalVariable(name: "delay", scope: !12687, file: !2875, line: 169, type: !208)
!12694 = !DILocalVariable(name: "val1", scope: !12687, file: !2875, line: 170, type: !208)
!12695 = !DILocalVariable(name: "val2", scope: !12687, file: !2875, line: 170, type: !208)
!12696 = !DILocalVariable(name: "last_load_", scope: !12687, file: !2875, line: 171, type: !208)
!12697 = !DILocalVariable(name: "key", scope: !12687, file: !2875, line: 176, type: !12698)
!12698 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1125, line: 106, baseType: !12699)
!12699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1125, line: 32, size: 32, elements: !12700)
!12700 = !{!12701}
!12701 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12699, file: !1125, line: 33, baseType: !125, size: 32)
!12702 = !DILocalVariable(name: "pending", scope: !12687, file: !2875, line: 178, type: !208)
!12703 = !DILocalVariable(name: "unannounced", scope: !12687, file: !2875, line: 185, type: !208)
!12704 = !DILocation(line: 0, scope: !12687)
!12705 = !DILocation(line: 162, column: 49, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12687, file: !2875, line: 162, column: 6)
!12707 = !DILocation(line: 163, column: 17, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12706, file: !2875, line: 162, column: 78)
!12709 = !DILocation(line: 164, column: 13, scope: !12708)
!12710 = !DILocation(line: 165, column: 3, scope: !12708)
!12711 = !DILocation(line: 171, column: 24, scope: !12687)
!12712 = !DILocation(line: 173, column: 10, scope: !12687)
!12713 = !DILocation(line: 174, column: 10, scope: !12687)
!12714 = !DILocalVariable(name: "l", arg: 1, scope: !12715, file: !1125, line: 136, type: !12718)
!12715 = distinct !DISubprogram(name: "k_spin_lock", scope: !1125, file: !1125, line: 136, type: !12716, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12719)
!12716 = !DISubroutineType(types: !12717)
!12717 = !{!12698, !12718}
!12718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!12719 = !{!12714, !12720}
!12720 = !DILocalVariable(name: "k", scope: !12715, file: !1125, line: 139, type: !12698)
!12721 = !DILocation(line: 0, scope: !12715, inlinedAt: !12722)
!12722 = distinct !DILocation(line: 176, column: 25, scope: !12687)
!12723 = !DILocation(line: 55, column: 2, scope: !12724, inlinedAt: !12728)
!12724 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7842, file: !7842, line: 42, type: !7843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12725)
!12725 = !{!12726, !12727}
!12726 = !DILocalVariable(name: "key", scope: !12724, file: !7842, line: 44, type: !32)
!12727 = !DILocalVariable(name: "tmp", scope: !12724, file: !7842, line: 53, type: !32)
!12728 = distinct !DILocation(line: 145, column: 10, scope: !12715, inlinedAt: !12722)
!12729 = !{i64 1597528}
!12730 = !DILocation(line: 0, scope: !12724, inlinedAt: !12728)
!12731 = !DILocation(line: 178, column: 21, scope: !12687)
!12732 = !DILocation(line: 180, column: 18, scope: !12687)
!12733 = !DILocation(line: 182, column: 14, scope: !12687)
!12734 = !DILocation(line: 183, column: 15, scope: !12687)
!12735 = !DILocation(line: 185, column: 39, scope: !12687)
!12736 = !DILocation(line: 185, column: 37, scope: !12687)
!12737 = !DILocation(line: 187, column: 27, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12687, file: !2875, line: 187, column: 6)
!12739 = !DILocation(line: 187, column: 6, scope: !12687)
!12740 = !DILocation(line: 202, column: 27, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12738, file: !2875, line: 195, column: 9)
!12742 = !DILocation(line: 202, column: 48, scope: !12741)
!12743 = !DILocation(line: 203, column: 9, scope: !12741)
!12744 = !DILocation(line: 204, column: 11, scope: !12741)
!12745 = !DILocation(line: 205, column: 13, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12741, file: !2875, line: 205, column: 7)
!12747 = !DILocation(line: 205, column: 7, scope: !12741)
!12748 = !DILocation(line: 0, scope: !12738)
!12749 = !DILocation(line: 212, column: 18, scope: !12687)
!12750 = !DILocation(line: 214, column: 28, scope: !12687)
!12751 = !DILocation(line: 214, column: 16, scope: !12687)
!12752 = !DILocation(line: 215, column: 15, scope: !12687)
!12753 = !DILocation(line: 227, column: 11, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12687, file: !2875, line: 227, column: 6)
!12755 = !DILocation(line: 227, column: 6, scope: !12687)
!12756 = !DILocation(line: 228, column: 15, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12754, file: !2875, line: 227, column: 19)
!12758 = !DILocation(line: 228, column: 38, scope: !12757)
!12759 = !DILocation(line: 228, column: 24, scope: !12757)
!12760 = !DILocation(line: 229, column: 2, scope: !12757)
!12761 = !DILocation(line: 230, column: 24, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12754, file: !2875, line: 229, column: 9)
!12763 = !DILocation(line: 230, column: 15, scope: !12762)
!12764 = !DILocation(line: 0, scope: !12754)
!12765 = !DILocalVariable(name: "key", arg: 2, scope: !12766, file: !1125, line: 190, type: !12698)
!12766 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1125, file: !1125, line: 189, type: !12767, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12769)
!12767 = !DISubroutineType(types: !12768)
!12768 = !{null, !12718, !12698}
!12769 = !{!12770, !12765}
!12770 = !DILocalVariable(name: "l", arg: 1, scope: !12766, file: !1125, line: 189, type: !12718)
!12771 = !DILocation(line: 0, scope: !12766, inlinedAt: !12772)
!12772 = distinct !DILocation(line: 232, column: 2, scope: !12687)
!12773 = !DILocalVariable(name: "key", arg: 1, scope: !12774, file: !7842, line: 84, type: !32)
!12774 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12775)
!12775 = !{!12773}
!12776 = !DILocation(line: 0, scope: !12774, inlinedAt: !12777)
!12777 = distinct !DILocation(line: 215, column: 2, scope: !12766, inlinedAt: !12772)
!12778 = !DILocation(line: 95, column: 2, scope: !12774, inlinedAt: !12777)
!12779 = !{i64 1598345}
!12780 = !DILocation(line: 234, column: 1, scope: !12687)
!12781 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2875, file: !2875, line: 236, type: !9459, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12782)
!12782 = !{!12783, !12784}
!12783 = !DILocalVariable(name: "key", scope: !12781, file: !2875, line: 242, type: !12698)
!12784 = !DILocalVariable(name: "cyc", scope: !12781, file: !2875, line: 243, type: !208)
!12785 = !DILocation(line: 0, scope: !12715, inlinedAt: !12786)
!12786 = distinct !DILocation(line: 242, column: 25, scope: !12781)
!12787 = !DILocation(line: 55, column: 2, scope: !12724, inlinedAt: !12788)
!12788 = distinct !DILocation(line: 145, column: 10, scope: !12715, inlinedAt: !12786)
!12789 = !DILocation(line: 0, scope: !12724, inlinedAt: !12788)
!12790 = !DILocation(line: 0, scope: !12781)
!12791 = !DILocation(line: 243, column: 17, scope: !12781)
!12792 = !DILocation(line: 243, column: 29, scope: !12781)
!12793 = !DILocation(line: 243, column: 27, scope: !12781)
!12794 = !DILocation(line: 243, column: 43, scope: !12781)
!12795 = !DILocation(line: 243, column: 41, scope: !12781)
!12796 = !DILocation(line: 0, scope: !12766, inlinedAt: !12797)
!12797 = distinct !DILocation(line: 245, column: 2, scope: !12781)
!12798 = !DILocation(line: 0, scope: !12774, inlinedAt: !12799)
!12799 = distinct !DILocation(line: 215, column: 2, scope: !12766, inlinedAt: !12797)
!12800 = !DILocation(line: 95, column: 2, scope: !12774, inlinedAt: !12799)
!12801 = !DILocation(line: 246, column: 13, scope: !12781)
!12802 = !DILocation(line: 246, column: 2, scope: !12781)
!12803 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2875, file: !2875, line: 249, type: !9459, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !12804)
!12804 = !{!12805, !12806}
!12805 = !DILocalVariable(name: "key", scope: !12803, file: !2875, line: 251, type: !12698)
!12806 = !DILocalVariable(name: "ret", scope: !12803, file: !2875, line: 252, type: !208)
!12807 = !DILocation(line: 0, scope: !12715, inlinedAt: !12808)
!12808 = distinct !DILocation(line: 251, column: 25, scope: !12803)
!12809 = !DILocation(line: 55, column: 2, scope: !12724, inlinedAt: !12810)
!12810 = distinct !DILocation(line: 145, column: 10, scope: !12715, inlinedAt: !12808)
!12811 = !DILocation(line: 0, scope: !12724, inlinedAt: !12810)
!12812 = !DILocation(line: 0, scope: !12803)
!12813 = !DILocation(line: 252, column: 17, scope: !12803)
!12814 = !DILocation(line: 252, column: 29, scope: !12803)
!12815 = !DILocation(line: 252, column: 27, scope: !12803)
!12816 = !DILocation(line: 0, scope: !12766, inlinedAt: !12817)
!12817 = distinct !DILocation(line: 254, column: 2, scope: !12803)
!12818 = !DILocation(line: 0, scope: !12774, inlinedAt: !12819)
!12819 = distinct !DILocation(line: 215, column: 2, scope: !12766, inlinedAt: !12817)
!12820 = !DILocation(line: 95, column: 2, scope: !12774, inlinedAt: !12819)
!12821 = !DILocation(line: 255, column: 2, scope: !12803)
!12822 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2875, file: !2875, line: 258, type: !4072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !1126)
!12823 = !DILocation(line: 260, column: 6, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12822, file: !2875, line: 260, column: 6)
!12825 = !DILocation(line: 260, column: 16, scope: !12824)
!12826 = !DILocation(line: 260, column: 6, scope: !12822)
!12827 = !DILocation(line: 261, column: 17, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12824, file: !2875, line: 260, column: 34)
!12829 = !DILocation(line: 262, column: 2, scope: !12828)
!12830 = !DILocation(line: 263, column: 1, scope: !12822)
!12831 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2875, file: !2875, line: 265, type: !4072, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !1126)
!12832 = !DILocation(line: 267, column: 16, scope: !12831)
!12833 = !DILocation(line: 268, column: 1, scope: !12831)
!12834 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12835, file: !12835, line: 9, type: !12836, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4030, retainedNodes: !12852)
!12835 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12836 = !DISubroutineType(types: !12837)
!12837 = !{!125, !12838, !150, !12851}
!12838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12839, size: 32)
!12839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12840)
!12840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2412, line: 60, size: 64, elements: !12841)
!12841 = !{!12842, !12850}
!12842 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12840, file: !2412, line: 69, baseType: !12843, size: 32)
!12843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12844, size: 32)
!12844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12845)
!12845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2412, line: 50, size: 64, elements: !12846)
!12846 = !{!12847, !12848, !12849}
!12847 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12845, file: !2412, line: 52, baseType: !2420, size: 32)
!12848 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12845, file: !2412, line: 54, baseType: !150, size: 8, offset: 32)
!12849 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12845, file: !2412, line: 56, baseType: !150, size: 8, offset: 40)
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12840, file: !2412, line: 71, baseType: !150, size: 8, offset: 32)
!12851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12843, size: 32)
!12852 = !{!12853, !12854, !12855}
!12853 = !DILocalVariable(name: "config", arg: 1, scope: !12834, file: !12835, line: 9, type: !12838)
!12854 = !DILocalVariable(name: "id", arg: 2, scope: !12834, file: !12835, line: 9, type: !150)
!12855 = !DILocalVariable(name: "state", arg: 3, scope: !12834, file: !12835, line: 10, type: !12851)
!12856 = !DILocation(line: 0, scope: !12834)
!12857 = !DILocation(line: 12, column: 20, scope: !12834)
!12858 = !DILocation(line: 13, column: 27, scope: !12834)
!12859 = !DILocation(line: 13, column: 42, scope: !12834)
!12860 = !DILocation(line: 13, column: 19, scope: !12834)
!12861 = !DILocation(line: 13, column: 16, scope: !12834)
!12862 = !DILocation(line: 13, column: 2, scope: !12834)
!12863 = distinct !{!12863, !12862, !12864}
!12864 = !DILocation(line: 19, column: 2, scope: !12834)
!12865 = !DILocation(line: 14, column: 23, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !12835, line: 14, column: 7)
!12867 = distinct !DILexicalBlock(scope: !12834, file: !12835, line: 13, column: 54)
!12868 = !DILocation(line: 14, column: 10, scope: !12866)
!12869 = !DILocation(line: 18, column: 11, scope: !12867)
!12870 = !DILocation(line: 14, column: 7, scope: !12867)
!12871 = !DILocation(line: 22, column: 1, scope: !12834)
!12872 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !3088, file: !3088, line: 47, type: !12873, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !12875)
!12873 = !DISubroutineType(types: !12874)
!12874 = !{!125, !2420, !150, !22}
!12875 = !{!12876, !12877, !12878, !12879}
!12876 = !DILocalVariable(name: "pins", arg: 1, scope: !12872, file: !3088, line: 47, type: !2420)
!12877 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12872, file: !3088, line: 47, type: !150)
!12878 = !DILocalVariable(name: "reg", arg: 3, scope: !12872, file: !3088, line: 48, type: !22)
!12879 = !DILocalVariable(name: "i", scope: !12880, file: !3088, line: 52, type: !150)
!12880 = distinct !DILexicalBlock(scope: !12872, file: !3088, line: 52, column: 2)
!12881 = !DILocation(line: 0, scope: !12872)
!12882 = !DILocation(line: 0, scope: !12880)
!12883 = !DILocation(line: 52, column: 25, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12880, file: !3088, line: 52, column: 2)
!12885 = !DILocation(line: 52, column: 2, scope: !12880)
!12886 = !DILocation(line: 56, column: 2, scope: !12872)
!12887 = !DILocation(line: 53, column: 30, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12884, file: !3088, line: 52, column: 41)
!12889 = !DILocation(line: 53, column: 25, scope: !12888)
!12890 = !DILocation(line: 53, column: 3, scope: !12888)
!12891 = !DILocation(line: 52, column: 37, scope: !12884)
!12892 = distinct !{!12892, !12885, !12893}
!12893 = !DILocation(line: 54, column: 2, scope: !12880)
!12894 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !3088, file: !3088, line: 25, type: !12895, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !12897)
!12895 = !DISubroutineType(types: !12896)
!12896 = !{null, !2422}
!12897 = !{!12898, !12899, !12905, !12906}
!12898 = !DILocalVariable(name: "pin", arg: 1, scope: !12894, file: !3088, line: 25, type: !2422)
!12899 = !DILocalVariable(name: "soc_pin", scope: !12894, file: !3088, line: 27, type: !12900)
!12900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !7741, line: 75, size: 96, elements: !12901)
!12901 = !{!12902, !12903, !12904}
!12902 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !12900, file: !7741, line: 76, baseType: !2913, size: 32)
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !12900, file: !7741, line: 77, baseType: !208, size: 32, offset: 32)
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12900, file: !7741, line: 78, baseType: !208, size: 32, offset: 64)
!12905 = !DILocalVariable(name: "port_idx", scope: !12894, file: !3088, line: 28, type: !150)
!12906 = !DILocalVariable(name: "port_func", scope: !12894, file: !3088, line: 28, type: !150)
!12907 = !DILocation(line: 0, scope: !12894)
!12908 = !DILocation(line: 27, column: 2, scope: !12894)
!12909 = !DILocation(line: 27, column: 22, scope: !12894)
!12910 = !DILocation(line: 30, column: 13, scope: !12894)
!12911 = !DILocation(line: 34, column: 31, scope: !12894)
!12912 = !DILocation(line: 34, column: 17, scope: !12894)
!12913 = !DILocation(line: 34, column: 10, scope: !12894)
!12914 = !DILocation(line: 34, column: 15, scope: !12894)
!12915 = !DILocation(line: 35, column: 18, scope: !12894)
!12916 = !DILocation(line: 35, column: 10, scope: !12894)
!12917 = !DILocation(line: 35, column: 16, scope: !12894)
!12918 = !DILocation(line: 36, column: 18, scope: !12894)
!12919 = !DILocation(line: 38, column: 16, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12894, file: !3088, line: 38, column: 6)
!12921 = !DILocation(line: 38, column: 6, scope: !12894)
!12922 = !DILocation(line: 36, column: 10, scope: !12894)
!12923 = !DILocation(line: 44, column: 2, scope: !12894)
!12924 = !DILocation(line: 45, column: 1, scope: !12894)
!12925 = distinct !DISubprogram(name: "z_device_state_init", scope: !12926, file: !12926, line: 23, type: !4072, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !12927)
!12926 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12927 = !{!12928}
!12928 = !DILocalVariable(name: "dev", scope: !12925, file: !12926, line: 25, type: !12929)
!12929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12930, size: 32)
!12930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12931)
!12931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !12932)
!12932 = !{!12933, !12934, !12935, !12936, !12942, !12943}
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12931, file: !137, line: 380, baseType: !140, size: 32)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12931, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!12935 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12931, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!12936 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12931, file: !137, line: 386, baseType: !12937, size: 32, offset: 96)
!12937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12938, size: 32)
!12938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !12939)
!12939 = !{!12940, !12941}
!12940 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12938, file: !137, line: 359, baseType: !150, size: 8)
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12938, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12931, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12931, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!12944 = !DILocation(line: 0, scope: !12925)
!12945 = !DILocation(line: 31, column: 1, scope: !12925)
!12946 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12926, file: !12926, line: 33, type: !12947, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !12949)
!12947 = !DISubroutineType(types: !12948)
!12948 = !{!12929, !140}
!12949 = !{!12950, !12951}
!12950 = !DILocalVariable(name: "name", arg: 1, scope: !12946, file: !12926, line: 33, type: !140)
!12951 = !DILocalVariable(name: "dev", scope: !12946, file: !12926, line: 35, type: !12929)
!12952 = !DILocation(line: 0, scope: !12946)
!12953 = !DILocation(line: 40, column: 12, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12946, file: !12926, line: 40, column: 6)
!12955 = !DILocation(line: 40, column: 21, scope: !12954)
!12956 = !DILocation(line: 40, column: 25, scope: !12954)
!12957 = !DILocation(line: 40, column: 33, scope: !12954)
!12958 = !DILocation(line: 40, column: 6, scope: !12946)
!12959 = !DILocation(line: 55, column: 2, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12946, file: !12926, line: 55, column: 2)
!12961 = !DILocation(line: 50, column: 7, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !12926, line: 50, column: 7)
!12963 = distinct !DILexicalBlock(scope: !12964, file: !12926, line: 49, column: 57)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !12926, line: 49, column: 2)
!12965 = distinct !DILexicalBlock(scope: !12946, file: !12926, line: 49, column: 2)
!12966 = !DILocation(line: 50, column: 30, scope: !12962)
!12967 = !DILocation(line: 50, column: 39, scope: !12962)
!12968 = !DILocation(line: 50, column: 44, scope: !12962)
!12969 = !DILocation(line: 50, column: 7, scope: !12963)
!12970 = !DILocation(line: 49, column: 53, scope: !12964)
!12971 = !DILocation(line: 49, column: 33, scope: !12964)
!12972 = !DILocation(line: 49, column: 2, scope: !12965)
!12973 = distinct !{!12973, !12972, !12974}
!12974 = !DILocation(line: 53, column: 2, scope: !12965)
!12975 = !DILocation(line: 56, column: 7, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12977, file: !12926, line: 56, column: 7)
!12977 = distinct !DILexicalBlock(scope: !12978, file: !12926, line: 55, column: 57)
!12978 = distinct !DILexicalBlock(scope: !12960, file: !12926, line: 55, column: 2)
!12979 = !DILocation(line: 56, column: 30, scope: !12976)
!12980 = !DILocation(line: 56, column: 52, scope: !12976)
!12981 = !DILocation(line: 56, column: 34, scope: !12976)
!12982 = !DILocation(line: 56, column: 58, scope: !12976)
!12983 = !DILocation(line: 56, column: 7, scope: !12977)
!12984 = !DILocation(line: 55, column: 53, scope: !12978)
!12985 = !DILocation(line: 55, column: 33, scope: !12978)
!12986 = distinct !{!12986, !12959, !12987}
!12987 = !DILocation(line: 59, column: 2, scope: !12960)
!12988 = !DILocation(line: 62, column: 1, scope: !12946)
!12989 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12926, file: !12926, line: 93, type: !12990, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !12992)
!12990 = !DISubroutineType(types: !12991)
!12991 = !{!153, !12929}
!12992 = !{!12993}
!12993 = !DILocalVariable(name: "dev", arg: 1, scope: !12989, file: !12926, line: 93, type: !12929)
!12994 = !DILocation(line: 0, scope: !12989)
!12995 = !DILocation(line: 99, column: 10, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12989, file: !12926, line: 99, column: 6)
!12997 = !DILocation(line: 99, column: 6, scope: !12989)
!12998 = !DILocation(line: 103, column: 14, scope: !12989)
!12999 = !DILocation(line: 103, column: 21, scope: !12989)
!13000 = !DILocation(line: 103, column: 33, scope: !12989)
!13001 = !DILocation(line: 103, column: 49, scope: !12989)
!13002 = !DILocation(line: 103, column: 58, scope: !12989)
!13003 = !DILocation(line: 104, column: 1, scope: !12989)
!13004 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12926, file: !12926, line: 87, type: !13005, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !13008)
!13005 = !DISubroutineType(types: !13006)
!13006 = !{!272, !13007}
!13007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12929, size: 32)
!13008 = !{!13009}
!13009 = !DILocalVariable(name: "devices", arg: 1, scope: !13004, file: !12926, line: 87, type: !13007)
!13010 = !DILocation(line: 0, scope: !13004)
!13011 = !DILocation(line: 89, column: 11, scope: !13004)
!13012 = !DILocation(line: 90, column: 2, scope: !13004)
!13013 = distinct !DISubprogram(name: "device_required_foreach", scope: !12926, file: !12926, line: 125, type: !13014, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !13020)
!13014 = !DISubroutineType(types: !13015)
!13015 = !{!125, !12929, !13016, !124}
!13016 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !13017)
!13017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13018, size: 32)
!13018 = !DISubroutineType(types: !13019)
!13019 = !{!125, !12929, !124}
!13020 = !{!13021, !13022, !13023, !13024, !13025}
!13021 = !DILocalVariable(name: "dev", arg: 1, scope: !13013, file: !12926, line: 125, type: !12929)
!13022 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13013, file: !12926, line: 126, type: !13016)
!13023 = !DILocalVariable(name: "context", arg: 3, scope: !13013, file: !12926, line: 127, type: !124)
!13024 = !DILocalVariable(name: "handle_count", scope: !13013, file: !12926, line: 129, type: !272)
!13025 = !DILocalVariable(name: "handles", scope: !13013, file: !12926, line: 130, type: !156)
!13026 = !DILocation(line: 0, scope: !13013)
!13027 = !DILocation(line: 129, column: 2, scope: !13013)
!13028 = !DILocation(line: 129, column: 9, scope: !13013)
!13029 = !DILocation(line: 130, column: 35, scope: !13013)
!13030 = !DILocation(line: 132, column: 33, scope: !13013)
!13031 = !DILocation(line: 132, column: 9, scope: !13013)
!13032 = !DILocation(line: 133, column: 1, scope: !13013)
!13033 = !DILocation(line: 132, column: 2, scope: !13013)
!13034 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !13035, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !13037)
!13035 = !DISubroutineType(types: !13036)
!13036 = !{!156, !12929, !3677}
!13037 = !{!13038, !13039, !13040, !13041}
!13038 = !DILocalVariable(name: "dev", arg: 1, scope: !13034, file: !137, line: 493, type: !12929)
!13039 = !DILocalVariable(name: "count", arg: 2, scope: !13034, file: !137, line: 493, type: !3677)
!13040 = !DILocalVariable(name: "rv", scope: !13034, file: !137, line: 495, type: !156)
!13041 = !DILocalVariable(name: "i", scope: !13042, file: !137, line: 498, type: !272)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !137, line: 497, column: 18)
!13043 = distinct !DILexicalBlock(scope: !13034, file: !137, line: 497, column: 6)
!13044 = !DILocation(line: 0, scope: !13034)
!13045 = !DILocation(line: 495, column: 35, scope: !13034)
!13046 = !DILocation(line: 497, column: 9, scope: !13043)
!13047 = !DILocation(line: 497, column: 6, scope: !13034)
!13048 = !DILocation(line: 0, scope: !13042)
!13049 = !DILocation(line: 500, column: 11, scope: !13042)
!13050 = !DILocation(line: 500, column: 40, scope: !13042)
!13051 = !DILocation(line: 502, column: 4, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13042, file: !137, line: 501, column: 40)
!13053 = distinct !{!13053, !13054, !13055}
!13054 = !DILocation(line: 500, column: 3, scope: !13042)
!13055 = !DILocation(line: 503, column: 3, scope: !13042)
!13056 = !DILocation(line: 504, column: 10, scope: !13042)
!13057 = !DILocation(line: 505, column: 2, scope: !13042)
!13058 = !DILocation(line: 507, column: 2, scope: !13034)
!13059 = distinct !DISubprogram(name: "device_visitor", scope: !12926, file: !12926, line: 106, type: !13060, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !13062)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!125, !156, !272, !13016, !124}
!13062 = !{!13063, !13064, !13065, !13066, !13067, !13069, !13072, !13073}
!13063 = !DILocalVariable(name: "handles", arg: 1, scope: !13059, file: !12926, line: 106, type: !156)
!13064 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13059, file: !12926, line: 107, type: !272)
!13065 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13059, file: !12926, line: 108, type: !13016)
!13066 = !DILocalVariable(name: "context", arg: 4, scope: !13059, file: !12926, line: 109, type: !124)
!13067 = !DILocalVariable(name: "i", scope: !13068, file: !12926, line: 112, type: !272)
!13068 = distinct !DILexicalBlock(scope: !13059, file: !12926, line: 112, column: 2)
!13069 = !DILocalVariable(name: "dh", scope: !13070, file: !12926, line: 113, type: !158)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !12926, line: 112, column: 44)
!13071 = distinct !DILexicalBlock(scope: !13068, file: !12926, line: 112, column: 2)
!13072 = !DILocalVariable(name: "rdev", scope: !13070, file: !12926, line: 114, type: !12929)
!13073 = !DILocalVariable(name: "rc", scope: !13070, file: !12926, line: 115, type: !125)
!13074 = !DILocation(line: 0, scope: !13059)
!13075 = !DILocation(line: 0, scope: !13068)
!13076 = !DILocation(line: 112, column: 23, scope: !13071)
!13077 = !DILocation(line: 112, column: 2, scope: !13068)
!13078 = distinct !{!13078, !13077, !13079}
!13079 = !DILocation(line: 120, column: 2, scope: !13068)
!13080 = !DILocation(line: 113, column: 24, scope: !13070)
!13081 = !DILocation(line: 0, scope: !13070)
!13082 = !DILocation(line: 114, column: 31, scope: !13070)
!13083 = !DILocation(line: 115, column: 12, scope: !13070)
!13084 = !DILocation(line: 117, column: 10, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13070, file: !12926, line: 117, column: 7)
!13086 = !DILocation(line: 112, column: 39, scope: !13071)
!13087 = !DILocation(line: 123, column: 1, scope: !13059)
!13088 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !13089, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !13091)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{!12929, !158}
!13091 = !{!13092, !13093, !13094}
!13092 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13088, file: !137, line: 439, type: !158)
!13093 = !DILocalVariable(name: "dev", scope: !13088, file: !137, line: 443, type: !12929)
!13094 = !DILocalVariable(name: "numdev", scope: !13088, file: !137, line: 444, type: !272)
!13095 = !DILocation(line: 0, scope: !13088)
!13096 = !DILocation(line: 446, column: 7, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13088, file: !137, line: 446, column: 6)
!13098 = !DILocation(line: 446, column: 18, scope: !13097)
!13099 = !DILocation(line: 446, column: 23, scope: !13097)
!13100 = !DILocation(line: 450, column: 2, scope: !13088)
!13101 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12926, file: !12926, line: 135, type: !13014, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !13102)
!13102 = !{!13103, !13104, !13105, !13106, !13107}
!13103 = !DILocalVariable(name: "dev", arg: 1, scope: !13101, file: !12926, line: 135, type: !12929)
!13104 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13101, file: !12926, line: 136, type: !13016)
!13105 = !DILocalVariable(name: "context", arg: 3, scope: !13101, file: !12926, line: 137, type: !124)
!13106 = !DILocalVariable(name: "handle_count", scope: !13101, file: !12926, line: 139, type: !272)
!13107 = !DILocalVariable(name: "handles", scope: !13101, file: !12926, line: 140, type: !156)
!13108 = !DILocation(line: 0, scope: !13101)
!13109 = !DILocation(line: 139, column: 2, scope: !13101)
!13110 = !DILocation(line: 139, column: 9, scope: !13101)
!13111 = !DILocation(line: 140, column: 35, scope: !13101)
!13112 = !DILocation(line: 142, column: 33, scope: !13101)
!13113 = !DILocation(line: 142, column: 9, scope: !13101)
!13114 = !DILocation(line: 143, column: 1, scope: !13101)
!13115 = !DILocation(line: 142, column: 2, scope: !13101)
!13116 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !13035, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4032, retainedNodes: !13117)
!13117 = !{!13118, !13119, !13120, !13121, !13122}
!13118 = !DILocalVariable(name: "dev", arg: 1, scope: !13116, file: !137, line: 573, type: !12929)
!13119 = !DILocalVariable(name: "count", arg: 2, scope: !13116, file: !137, line: 573, type: !3677)
!13120 = !DILocalVariable(name: "rv", scope: !13116, file: !137, line: 575, type: !156)
!13121 = !DILocalVariable(name: "region", scope: !13116, file: !137, line: 576, type: !272)
!13122 = !DILocalVariable(name: "i", scope: !13116, file: !137, line: 577, type: !272)
!13123 = !DILocation(line: 0, scope: !13116)
!13124 = !DILocation(line: 575, column: 35, scope: !13116)
!13125 = !DILocation(line: 579, column: 9, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13116, file: !137, line: 579, column: 6)
!13127 = !DILocation(line: 579, column: 6, scope: !13116)
!13128 = !DILocation(line: 582, column: 8, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !137, line: 582, column: 8)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !137, line: 581, column: 23)
!13131 = distinct !DILexicalBlock(scope: !13126, file: !137, line: 579, column: 18)
!13132 = !DILocation(line: 582, column: 12, scope: !13129)
!13133 = !DILocation(line: 585, column: 6, scope: !13130)
!13134 = !DILocation(line: 0, scope: !13131)
!13135 = !DILocation(line: 581, column: 17, scope: !13131)
!13136 = !DILocation(line: 581, column: 3, scope: !13131)
!13137 = !DILocation(line: 588, column: 10, scope: !13131)
!13138 = !DILocation(line: 588, column: 16, scope: !13131)
!13139 = !DILocation(line: 589, column: 4, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13131, file: !137, line: 588, column: 39)
!13141 = !DILocation(line: 588, column: 3, scope: !13131)
!13142 = distinct !{!13142, !13141, !13143}
!13143 = !DILocation(line: 590, column: 3, scope: !13131)
!13144 = !DILocation(line: 591, column: 10, scope: !13131)
!13145 = !DILocation(line: 592, column: 2, scope: !13131)
!13146 = !DILocation(line: 575, column: 25, scope: !13116)
!13147 = !DILocation(line: 594, column: 2, scope: !13116)
!13148 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !3096, file: !3096, line: 49, type: !13149, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3093, retainedNodes: !1126)
!13149 = !DISubroutineType(types: !13150)
!13150 = !{!387}
!13151 = !DILocation(line: 51, column: 10, scope: !13148)
!13152 = !DILocation(line: 51, column: 20, scope: !13148)
!13153 = !DILocation(line: 51, column: 2, scope: !13148)
!13154 = distinct !DISubprogram(name: "coredump", scope: !4039, file: !4039, line: 209, type: !13155, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13301)
!13155 = !DISubroutineType(types: !13156)
!13156 = !{null, !32, !13157, !13201}
!13157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13158, size: 32)
!13158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13159)
!13159 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3842, line: 141, baseType: !13160)
!13160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3842, line: 97, size: 256, elements: !13161)
!13161 = !{!13162}
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13160, file: !3842, line: 107, baseType: !13163, size: 256)
!13163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3842, line: 98, size: 256, elements: !13164)
!13164 = !{!13165, !13170, !13175, !13180, !13185, !13190, !13195, !13200}
!13165 = !DIDerivedType(tag: DW_TAG_member, scope: !13163, file: !3842, line: 99, baseType: !13166, size: 32)
!13166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13163, file: !3842, line: 99, size: 32, elements: !13167)
!13167 = !{!13168, !13169}
!13168 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13166, file: !3842, line: 99, baseType: !208, size: 32)
!13169 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13166, file: !3842, line: 99, baseType: !208, size: 32)
!13170 = !DIDerivedType(tag: DW_TAG_member, scope: !13163, file: !3842, line: 100, baseType: !13171, size: 32, offset: 32)
!13171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13163, file: !3842, line: 100, size: 32, elements: !13172)
!13172 = !{!13173, !13174}
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13171, file: !3842, line: 100, baseType: !208, size: 32)
!13174 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13171, file: !3842, line: 100, baseType: !208, size: 32)
!13175 = !DIDerivedType(tag: DW_TAG_member, scope: !13163, file: !3842, line: 101, baseType: !13176, size: 32, offset: 64)
!13176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13163, file: !3842, line: 101, size: 32, elements: !13177)
!13177 = !{!13178, !13179}
!13178 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13176, file: !3842, line: 101, baseType: !208, size: 32)
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13176, file: !3842, line: 101, baseType: !208, size: 32)
!13180 = !DIDerivedType(tag: DW_TAG_member, scope: !13163, file: !3842, line: 102, baseType: !13181, size: 32, offset: 96)
!13181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13163, file: !3842, line: 102, size: 32, elements: !13182)
!13182 = !{!13183, !13184}
!13183 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13181, file: !3842, line: 102, baseType: !208, size: 32)
!13184 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13181, file: !3842, line: 102, baseType: !208, size: 32)
!13185 = !DIDerivedType(tag: DW_TAG_member, scope: !13163, file: !3842, line: 103, baseType: !13186, size: 32, offset: 128)
!13186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13163, file: !3842, line: 103, size: 32, elements: !13187)
!13187 = !{!13188, !13189}
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13186, file: !3842, line: 103, baseType: !208, size: 32)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13186, file: !3842, line: 103, baseType: !208, size: 32)
!13190 = !DIDerivedType(tag: DW_TAG_member, scope: !13163, file: !3842, line: 104, baseType: !13191, size: 32, offset: 160)
!13191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13163, file: !3842, line: 104, size: 32, elements: !13192)
!13192 = !{!13193, !13194}
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13191, file: !3842, line: 104, baseType: !208, size: 32)
!13194 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13191, file: !3842, line: 104, baseType: !208, size: 32)
!13195 = !DIDerivedType(tag: DW_TAG_member, scope: !13163, file: !3842, line: 105, baseType: !13196, size: 32, offset: 192)
!13196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13163, file: !3842, line: 105, size: 32, elements: !13197)
!13197 = !{!13198, !13199}
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13196, file: !3842, line: 105, baseType: !208, size: 32)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13196, file: !3842, line: 105, baseType: !208, size: 32)
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13163, file: !3842, line: 106, baseType: !208, size: 32, offset: 224)
!13201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13202, size: 32)
!13202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1020, line: 245, size: 1024, elements: !13203)
!13203 = !{!13204, !13262, !13274, !13275, !13276, !13277, !13283, !13296}
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13202, file: !1020, line: 247, baseType: !13205, size: 384)
!13205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1020, line: 57, size: 384, elements: !13206)
!13206 = !{!13207, !13231, !13238, !13239, !13240, !13249, !13250, !13251}
!13207 = !DIDerivedType(tag: DW_TAG_member, scope: !13205, file: !1020, line: 60, baseType: !13208, size: 64)
!13208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13205, file: !1020, line: 60, size: 64, elements: !13209)
!13209 = !{!13210, !13225}
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13208, file: !1020, line: 61, baseType: !13211, size: 64)
!13211 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1030, line: 49, baseType: !13212)
!13212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1030, line: 37, size: 64, elements: !13213)
!13213 = !{!13214, !13220}
!13214 = !DIDerivedType(tag: DW_TAG_member, scope: !13212, file: !1030, line: 38, baseType: !13215, size: 32)
!13215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13212, file: !1030, line: 38, size: 32, elements: !13216)
!13216 = !{!13217, !13219}
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13215, file: !1030, line: 39, baseType: !13218, size: 32)
!13218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13212, size: 32)
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13215, file: !1030, line: 40, baseType: !13218, size: 32)
!13220 = !DIDerivedType(tag: DW_TAG_member, scope: !13212, file: !1030, line: 42, baseType: !13221, size: 32, offset: 32)
!13221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13212, file: !1030, line: 42, size: 32, elements: !13222)
!13222 = !{!13223, !13224}
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13221, file: !1030, line: 43, baseType: !13218, size: 32)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13221, file: !1030, line: 44, baseType: !13218, size: 32)
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13208, file: !1020, line: 62, baseType: !13226, size: 64)
!13226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1046, line: 49, size: 64, elements: !13227)
!13227 = !{!13228}
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13226, file: !1046, line: 50, baseType: !13229, size: 64)
!13229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13230, size: 64, elements: !807)
!13230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13226, size: 32)
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13205, file: !1020, line: 68, baseType: !13232, size: 32, offset: 64)
!13232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13233, size: 32)
!13233 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1054, line: 233, baseType: !13234)
!13234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 231, size: 64, elements: !13235)
!13235 = !{!13236}
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13234, file: !1054, line: 232, baseType: !13237, size: 64)
!13237 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1030, line: 48, baseType: !13212)
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13205, file: !1020, line: 71, baseType: !150, size: 8, offset: 96)
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13205, file: !1020, line: 74, baseType: !150, size: 8, offset: 104)
!13240 = !DIDerivedType(tag: DW_TAG_member, scope: !13205, file: !1020, line: 90, baseType: !13241, size: 16, offset: 112)
!13241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13205, file: !1020, line: 90, size: 16, elements: !13242)
!13242 = !{!13243, !13248}
!13243 = !DIDerivedType(tag: DW_TAG_member, scope: !13241, file: !1020, line: 91, baseType: !13244, size: 16)
!13244 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13241, file: !1020, line: 91, size: 16, elements: !13245)
!13245 = !{!13246, !13247}
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13244, file: !1020, line: 96, baseType: !1068, size: 8)
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13244, file: !1020, line: 97, baseType: !150, size: 8, offset: 8)
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13241, file: !1020, line: 100, baseType: !227, size: 16)
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13205, file: !1020, line: 107, baseType: !208, size: 32, offset: 128)
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13205, file: !1020, line: 127, baseType: !124, size: 32, offset: 160)
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13205, file: !1020, line: 131, baseType: !13252, size: 192, offset: 192)
!13252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1054, line: 244, size: 192, elements: !13253)
!13253 = !{!13254, !13255, !13261}
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13252, file: !1054, line: 245, baseType: !13211, size: 64)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13252, file: !1054, line: 246, baseType: !13256, size: 32, offset: 64)
!13256 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1054, line: 242, baseType: !13257)
!13257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13258, size: 32)
!13258 = !DISubroutineType(types: !13259)
!13259 = !{null, !13260}
!13260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13252, size: 32)
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13252, file: !1054, line: 249, baseType: !1085, size: 64, offset: 128)
!13262 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13202, file: !1020, line: 250, baseType: !13263, size: 288, offset: 384)
!13263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1088, line: 25, size: 288, elements: !13264)
!13264 = !{!13265, !13266, !13267, !13268, !13269, !13270, !13271, !13272, !13273}
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13263, file: !1088, line: 26, baseType: !208, size: 32)
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13263, file: !1088, line: 27, baseType: !208, size: 32, offset: 32)
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13263, file: !1088, line: 28, baseType: !208, size: 32, offset: 64)
!13268 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13263, file: !1088, line: 29, baseType: !208, size: 32, offset: 96)
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13263, file: !1088, line: 30, baseType: !208, size: 32, offset: 128)
!13270 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13263, file: !1088, line: 31, baseType: !208, size: 32, offset: 160)
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13263, file: !1088, line: 32, baseType: !208, size: 32, offset: 192)
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13263, file: !1088, line: 33, baseType: !208, size: 32, offset: 224)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13263, file: !1088, line: 34, baseType: !208, size: 32, offset: 256)
!13274 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13202, file: !1020, line: 253, baseType: !124, size: 32, offset: 672)
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13202, file: !1020, line: 256, baseType: !13233, size: 64, offset: 704)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13202, file: !1020, line: 294, baseType: !125, size: 32, offset: 768)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13202, file: !1020, line: 300, baseType: !13278, size: 96, offset: 800)
!13278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !1020, line: 149, size: 96, elements: !13279)
!13279 = !{!13280, !13281, !13282}
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13278, file: !1020, line: 153, baseType: !22, size: 32)
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13278, file: !1020, line: 162, baseType: !272, size: 32, offset: 32)
!13282 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13278, file: !1020, line: 168, baseType: !272, size: 32, offset: 64)
!13283 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13202, file: !1020, line: 325, baseType: !13284, size: 32, offset: 896)
!13284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13285, size: 32)
!13285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1111, line: 5073, size: 160, elements: !13286)
!13286 = !{!13287, !13293, !13294}
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13285, file: !1111, line: 5074, baseType: !13288, size: 96)
!13288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1115, line: 56, size: 96, elements: !13289)
!13289 = !{!13290, !13291, !13292}
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13288, file: !1115, line: 57, baseType: !1118, size: 32)
!13291 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13288, file: !1115, line: 58, baseType: !124, size: 32, offset: 32)
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13288, file: !1115, line: 59, baseType: !272, size: 32, offset: 64)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13285, file: !1111, line: 5075, baseType: !13233, size: 64, offset: 96)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13285, file: !1111, line: 5076, baseType: !13295, offset: 160)
!13295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1125, line: 43, elements: !1126)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13202, file: !1020, line: 343, baseType: !13297, size: 64, offset: 928)
!13297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1088, line: 60, size: 64, elements: !13298)
!13298 = !{!13299, !13300}
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13297, file: !1088, line: 63, baseType: !208, size: 32)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13297, file: !1088, line: 66, baseType: !208, size: 32, offset: 32)
!13301 = !{!13302, !13303, !13304}
!13302 = !DILocalVariable(name: "reason", arg: 1, scope: !13154, file: !4039, line: 209, type: !32)
!13303 = !DILocalVariable(name: "esf", arg: 2, scope: !13154, file: !4039, line: 209, type: !13157)
!13304 = !DILocalVariable(name: "thread", arg: 3, scope: !13154, file: !4039, line: 210, type: !13201)
!13305 = !DILocation(line: 0, scope: !13154)
!13306 = !DILocation(line: 212, column: 1, scope: !13154)
!13307 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !4039, file: !4039, line: 214, type: !13308, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13310)
!13308 = !DISubroutineType(types: !13309)
!13309 = !{null, !22, !22}
!13310 = !{!13311, !13312}
!13311 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13307, file: !4039, line: 214, type: !22)
!13312 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13307, file: !4039, line: 214, type: !22)
!13313 = !DILocation(line: 0, scope: !13307)
!13314 = !DILocation(line: 216, column: 1, scope: !13307)
!13315 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !4039, file: !4039, line: 218, type: !13316, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13318)
!13316 = !DISubroutineType(types: !13317)
!13317 = !{null, !184, !272}
!13318 = !{!13319, !13320}
!13319 = !DILocalVariable(name: "buf", arg: 1, scope: !13315, file: !4039, line: 218, type: !184)
!13320 = !DILocalVariable(name: "buflen", arg: 2, scope: !13315, file: !4039, line: 218, type: !272)
!13321 = !DILocation(line: 0, scope: !13315)
!13322 = !DILocation(line: 220, column: 1, scope: !13315)
!13323 = distinct !DISubprogram(name: "coredump_query", scope: !4039, file: !4039, line: 222, type: !13324, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13326)
!13324 = !DISubroutineType(types: !13325)
!13325 = !{!125, !4038, !124}
!13326 = !{!13327, !13328}
!13327 = !DILocalVariable(name: "query_id", arg: 1, scope: !13323, file: !4039, line: 222, type: !4038)
!13328 = !DILocalVariable(name: "arg", arg: 2, scope: !13323, file: !4039, line: 222, type: !124)
!13329 = !DILocation(line: 0, scope: !13323)
!13330 = !DILocation(line: 224, column: 2, scope: !13323)
!13331 = distinct !DISubprogram(name: "coredump_cmd", scope: !4039, file: !4039, line: 227, type: !13332, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13334)
!13332 = !DISubroutineType(types: !13333)
!13333 = !{!125, !4045, !124}
!13334 = !{!13335, !13336}
!13335 = !DILocalVariable(name: "query_id", arg: 1, scope: !13331, file: !4039, line: 227, type: !4045)
!13336 = !DILocalVariable(name: "arg", arg: 2, scope: !13331, file: !4039, line: 227, type: !124)
!13337 = !DILocation(line: 0, scope: !13331)
!13338 = !DILocation(line: 229, column: 2, scope: !13331)
!13339 = distinct !DISubprogram(name: "arch_system_halt", scope: !13340, file: !13340, line: 23, type: !7860, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13341)
!13340 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13341 = !{!13342}
!13342 = !DILocalVariable(name: "reason", arg: 1, scope: !13339, file: !13340, line: 23, type: !32)
!13343 = !DILocation(line: 0, scope: !13339)
!13344 = !DILocation(line: 55, column: 2, scope: !13345, inlinedAt: !13349)
!13345 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7842, file: !7842, line: 42, type: !7843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13346)
!13346 = !{!13347, !13348}
!13347 = !DILocalVariable(name: "key", scope: !13345, file: !7842, line: 44, type: !32)
!13348 = !DILocalVariable(name: "tmp", scope: !13345, file: !7842, line: 53, type: !32)
!13349 = distinct !DILocation(line: 31, column: 8, scope: !13339)
!13350 = !{i64 1621553}
!13351 = !DILocation(line: 0, scope: !13345, inlinedAt: !13349)
!13352 = !DILocation(line: 32, column: 2, scope: !13339)
!13353 = !DILocation(line: 32, column: 2, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !13340, line: 32, column: 2)
!13355 = distinct !DILexicalBlock(scope: !13339, file: !13340, line: 32, column: 2)
!13356 = distinct !{!13356, !13357, !13358}
!13357 = !DILocation(line: 32, column: 2, scope: !13355)
!13358 = !DILocation(line: 34, column: 2, scope: !13355)
!13359 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13340, file: !13340, line: 39, type: !13360, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13362)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{null, !32, !13157}
!13362 = !{!13363, !13364}
!13363 = !DILocalVariable(name: "reason", arg: 1, scope: !13359, file: !13340, line: 39, type: !32)
!13364 = !DILocalVariable(name: "esf", arg: 2, scope: !13359, file: !13340, line: 40, type: !13157)
!13365 = !DILocation(line: 0, scope: !13359)
!13366 = !DILocation(line: 45, column: 2, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !13340, line: 45, column: 2)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !13340, line: 45, column: 2)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !13340, line: 45, column: 2)
!13370 = distinct !DILexicalBlock(scope: !13359, file: !13340, line: 45, column: 2)
!13371 = !DILocation(line: 46, column: 2, scope: !13359)
!13372 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13340, file: !13340, line: 81, type: !7860, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13373)
!13373 = !{!13374}
!13374 = !DILocalVariable(name: "reason", arg: 1, scope: !13372, file: !13340, line: 81, type: !32)
!13375 = !DILocation(line: 0, scope: !13372)
!13376 = !DILocation(line: 83, column: 2, scope: !13372)
!13377 = distinct !DISubprogram(name: "z_fatal_error", scope: !13340, file: !13340, line: 96, type: !13360, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13378)
!13378 = !{!13379, !13380, !13381, !13382}
!13379 = !DILocalVariable(name: "reason", arg: 1, scope: !13377, file: !13340, line: 96, type: !32)
!13380 = !DILocalVariable(name: "esf", arg: 2, scope: !13377, file: !13340, line: 96, type: !13157)
!13381 = !DILocalVariable(name: "key", scope: !13377, file: !13340, line: 102, type: !32)
!13382 = !DILocalVariable(name: "thread", scope: !13377, file: !13340, line: 103, type: !13201)
!13383 = !DILocation(line: 0, scope: !13377)
!13384 = !DILocation(line: 55, column: 2, scope: !13345, inlinedAt: !13385)
!13385 = distinct !DILocation(line: 102, column: 21, scope: !13377)
!13386 = !DILocation(line: 0, scope: !13345, inlinedAt: !13385)
!13387 = !DILocation(line: 104, column: 4, scope: !13377)
!13388 = !DILocation(line: 109, column: 2, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !13340, line: 109, column: 2)
!13390 = distinct !DILexicalBlock(scope: !13391, file: !13340, line: 109, column: 2)
!13391 = distinct !DILexicalBlock(scope: !13392, file: !13340, line: 109, column: 2)
!13392 = distinct !DILexicalBlock(scope: !13377, file: !13340, line: 109, column: 2)
!13393 = !DILocation(line: 119, column: 11, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13377, file: !13340, line: 119, column: 6)
!13395 = !DILocation(line: 119, column: 20, scope: !13394)
!13396 = !DILocalVariable(name: "esf", arg: 1, scope: !13397, file: !10350, line: 71, type: !13157)
!13397 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !10350, file: !10350, line: 71, type: !13398, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13400)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!153, !13157}
!13400 = !{!13396}
!13401 = !DILocation(line: 0, scope: !13397, inlinedAt: !13402)
!13402 = distinct !DILocation(line: 119, column: 23, scope: !13394)
!13403 = !DILocation(line: 73, column: 21, scope: !13397, inlinedAt: !13402)
!13404 = !DILocation(line: 73, column: 26, scope: !13397, inlinedAt: !13402)
!13405 = !DILocation(line: 73, column: 9, scope: !13397, inlinedAt: !13402)
!13406 = !DILocation(line: 119, column: 6, scope: !13377)
!13407 = !DILocation(line: 120, column: 3, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13409, file: !13340, line: 120, column: 3)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !13340, line: 120, column: 3)
!13410 = distinct !DILexicalBlock(scope: !13411, file: !13340, line: 120, column: 3)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !13340, line: 120, column: 3)
!13412 = distinct !DILexicalBlock(scope: !13394, file: !13340, line: 119, column: 57)
!13413 = !DILocation(line: 121, column: 2, scope: !13412)
!13414 = !DILocation(line: 124, column: 2, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13416, file: !13340, line: 124, column: 2)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !13340, line: 124, column: 2)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !13340, line: 124, column: 2)
!13418 = distinct !DILexicalBlock(scope: !13377, file: !13340, line: 124, column: 2)
!13419 = !DILocation(line: 131, column: 2, scope: !13377)
!13420 = !DILocation(line: 0, scope: !13397, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 151, column: 24, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !13340, line: 151, column: 7)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !13340, line: 146, column: 32)
!13424 = distinct !DILexicalBlock(scope: !13377, file: !13340, line: 146, column: 6)
!13425 = !DILocation(line: 151, column: 7, scope: !13423)
!13426 = !DILocation(line: 151, column: 21, scope: !13422)
!13427 = !DILocalVariable(name: "key", arg: 1, scope: !13428, file: !7842, line: 84, type: !32)
!13428 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13429)
!13429 = !{!13427}
!13430 = !DILocation(line: 0, scope: !13428, inlinedAt: !13431)
!13431 = distinct !DILocation(line: 186, column: 2, scope: !13377)
!13432 = !DILocation(line: 95, column: 2, scope: !13428, inlinedAt: !13431)
!13433 = !{i64 1622370}
!13434 = !DILocation(line: 189, column: 3, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !13340, line: 188, column: 41)
!13436 = distinct !DILexicalBlock(scope: !13377, file: !13340, line: 188, column: 6)
!13437 = !DILocation(line: 191, column: 1, scope: !13377)
!13438 = distinct !DISubprogram(name: "k_current_get", scope: !1111, file: !1111, line: 530, type: !13439, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !1126)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{!13441}
!13441 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1020, line: 347, baseType: !13201)
!13442 = !DILocation(line: 535, column: 9, scope: !13438)
!13443 = !DILocation(line: 535, column: 2, scope: !13438)
!13444 = distinct !DISubprogram(name: "reason_to_str", scope: !13340, file: !13340, line: 62, type: !13445, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13447)
!13445 = !DISubroutineType(types: !13446)
!13446 = !{!140, !32}
!13447 = !{!13448}
!13448 = !DILocalVariable(name: "reason", arg: 1, scope: !13444, file: !13340, line: 62, type: !32)
!13449 = !DILocation(line: 0, scope: !13444)
!13450 = !DILocation(line: 64, column: 2, scope: !13444)
!13451 = !DILocation(line: 0, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13444, file: !13340, line: 64, column: 18)
!13453 = !DILocation(line: 78, column: 1, scope: !13444)
!13454 = distinct !DISubprogram(name: "thread_name_get", scope: !13340, file: !13340, line: 51, type: !13455, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13457)
!13455 = !DISubroutineType(types: !13456)
!13456 = !{!140, !13201}
!13457 = !{!13458, !13459}
!13458 = !DILocalVariable(name: "thread", arg: 1, scope: !13454, file: !13340, line: 51, type: !13201)
!13459 = !DILocalVariable(name: "thread_name", scope: !13454, file: !13340, line: 53, type: !140)
!13460 = !DILocation(line: 0, scope: !13454)
!13461 = !DILocation(line: 53, column: 36, scope: !13454)
!13462 = !DILocation(line: 53, column: 28, scope: !13454)
!13463 = !DILocation(line: 53, column: 47, scope: !13454)
!13464 = !DILocation(line: 55, column: 19, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13454, file: !13340, line: 55, column: 6)
!13466 = !DILocation(line: 55, column: 28, scope: !13465)
!13467 = !DILocation(line: 55, column: 32, scope: !13465)
!13468 = !DILocation(line: 55, column: 47, scope: !13465)
!13469 = !DILocation(line: 55, column: 6, scope: !13454)
!13470 = !DILocation(line: 57, column: 2, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13465, file: !13340, line: 55, column: 57)
!13472 = !DILocation(line: 59, column: 2, scope: !13454)
!13473 = distinct !DISubprogram(name: "k_thread_abort", scope: !6143, file: !6143, line: 188, type: !13474, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !13476)
!13474 = !DISubroutineType(types: !13475)
!13475 = !{null, !13441}
!13476 = !{!13477}
!13477 = !DILocalVariable(name: "thread", arg: 1, scope: !13473, file: !6143, line: 188, type: !13441)
!13478 = !DILocation(line: 0, scope: !13473)
!13479 = !DILocation(line: 197, column: 2, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13473, file: !6143, line: 197, column: 2)
!13481 = !{i64 2152646042}
!13482 = !DILocation(line: 198, column: 2, scope: !13473)
!13483 = !DILocation(line: 199, column: 1, scope: !13473)
!13484 = distinct !DISubprogram(name: "z_current_get", scope: !6143, file: !6143, line: 173, type: !13439, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4035, retainedNodes: !1126)
!13485 = !DILocation(line: 180, column: 2, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13484, file: !6143, line: 180, column: 2)
!13487 = !{i64 2152645974}
!13488 = !DILocation(line: 181, column: 9, scope: !13484)
!13489 = !DILocation(line: 181, column: 2, scope: !13484)
!13490 = distinct !DISubprogram(name: "z_early_memset", scope: !3103, file: !3103, line: 108, type: !13491, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13493)
!13491 = !DISubroutineType(types: !13492)
!13492 = !{null, !124, !125, !272}
!13493 = !{!13494, !13495, !13496}
!13494 = !DILocalVariable(name: "dst", arg: 1, scope: !13490, file: !3103, line: 108, type: !124)
!13495 = !DILocalVariable(name: "c", arg: 2, scope: !13490, file: !3103, line: 108, type: !125)
!13496 = !DILocalVariable(name: "n", arg: 3, scope: !13490, file: !3103, line: 108, type: !272)
!13497 = !DILocation(line: 0, scope: !13490)
!13498 = !DILocation(line: 110, column: 9, scope: !13490)
!13499 = !DILocation(line: 111, column: 1, scope: !13490)
!13500 = distinct !DISubprogram(name: "z_early_memcpy", scope: !3103, file: !3103, line: 121, type: !13501, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{null, !124, !13, !272}
!13503 = !{!13504, !13505, !13506}
!13504 = !DILocalVariable(name: "dst", arg: 1, scope: !13500, file: !3103, line: 121, type: !124)
!13505 = !DILocalVariable(name: "src", arg: 2, scope: !13500, file: !3103, line: 121, type: !13)
!13506 = !DILocalVariable(name: "n", arg: 3, scope: !13500, file: !3103, line: 121, type: !272)
!13507 = !DILocation(line: 0, scope: !13500)
!13508 = !DILocation(line: 123, column: 9, scope: !13500)
!13509 = !DILocation(line: 124, column: 1, scope: !13500)
!13510 = distinct !DISubprogram(name: "z_bss_zero", scope: !3103, file: !3103, line: 132, type: !4072, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !1126)
!13511 = !DILocation(line: 143, column: 2, scope: !13510)
!13512 = !DILocation(line: 168, column: 1, scope: !13510)
!13513 = distinct !DISubprogram(name: "z_init_cpu", scope: !3103, file: !3103, line: 372, type: !13514, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13516)
!13514 = !DISubroutineType(types: !13515)
!13515 = !{null, !125}
!13516 = !{!13517}
!13517 = !DILocalVariable(name: "id", arg: 1, scope: !13513, file: !3103, line: 372, type: !125)
!13518 = !DILocation(line: 0, scope: !13513)
!13519 = !DILocation(line: 374, column: 2, scope: !13513)
!13520 = !DILocation(line: 375, column: 34, scope: !13513)
!13521 = !DILocation(line: 375, column: 19, scope: !13513)
!13522 = !DILocation(line: 375, column: 31, scope: !13513)
!13523 = !DILocation(line: 376, column: 24, scope: !13513)
!13524 = !DILocation(line: 376, column: 19, scope: !13513)
!13525 = !DILocation(line: 376, column: 22, scope: !13513)
!13526 = !DILocation(line: 378, column: 26, scope: !13513)
!13527 = !DILocation(line: 378, column: 4, scope: !13513)
!13528 = !DILocation(line: 378, column: 50, scope: !13513)
!13529 = !DILocation(line: 377, column: 19, scope: !13513)
!13530 = !DILocation(line: 377, column: 29, scope: !13513)
!13531 = !DILocation(line: 384, column: 1, scope: !13513)
!13532 = distinct !DISubprogram(name: "init_idle_thread", scope: !3103, file: !3103, line: 343, type: !13514, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13533)
!13533 = !{!13534, !13535, !13536, !13539}
!13534 = !DILocalVariable(name: "i", arg: 1, scope: !13532, file: !3103, line: 343, type: !125)
!13535 = !DILocalVariable(name: "thread", scope: !13532, file: !3103, line: 345, type: !3195)
!13536 = !DILocalVariable(name: "stack", scope: !13532, file: !3103, line: 346, type: !13537)
!13537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13538, size: 32)
!13538 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !6022, line: 44, baseType: !3309)
!13539 = !DILocalVariable(name: "tname", scope: !13532, file: !3103, line: 358, type: !393)
!13540 = !DILocation(line: 0, scope: !13532)
!13541 = !DILocation(line: 345, column: 29, scope: !13532)
!13542 = !DILocation(line: 346, column: 28, scope: !13532)
!13543 = !DILocation(line: 362, column: 37, scope: !13532)
!13544 = !DILocation(line: 362, column: 36, scope: !13532)
!13545 = !DILocation(line: 361, column: 2, scope: !13532)
!13546 = !DILocation(line: 365, column: 2, scope: !13532)
!13547 = !DILocation(line: 370, column: 1, scope: !13532)
!13548 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !3310, file: !3310, line: 331, type: !13549, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13551)
!13549 = !DISubroutineType(types: !13550)
!13550 = !{!393, !13537}
!13551 = !{!13552}
!13552 = !DILocalVariable(name: "sym", arg: 1, scope: !13548, file: !3310, line: 331, type: !13537)
!13553 = !DILocation(line: 0, scope: !13548)
!13554 = !DILocation(line: 333, column: 9, scope: !13548)
!13555 = !DILocation(line: 333, column: 2, scope: !13548)
!13556 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13557, file: !13557, line: 155, type: !13558, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13560)
!13557 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13558 = !DISubroutineType(types: !13559)
!13559 = !{null, !3195}
!13560 = !{!13561}
!13561 = !DILocalVariable(name: "thread", arg: 1, scope: !13556, file: !13557, line: 155, type: !3195)
!13562 = !DILocation(line: 0, scope: !13556)
!13563 = !DILocation(line: 157, column: 15, scope: !13556)
!13564 = !DILocation(line: 157, column: 28, scope: !13556)
!13565 = !DILocation(line: 158, column: 1, scope: !13556)
!13566 = distinct !DISubprogram(name: "z_cstart", scope: !3103, file: !3103, line: 501, type: !4072, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13567)
!13567 = !{!13568}
!13568 = !DILocalVariable(name: "dummy_thread", scope: !13566, file: !3103, line: 518, type: !3196)
!13569 = !DILocation(line: 507, column: 2, scope: !13566)
!13570 = !DILocation(line: 43, column: 14, scope: !13571, inlinedAt: !13575)
!13571 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13572, file: !13572, line: 40, type: !4072, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13573)
!13572 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13573 = !{!13574}
!13574 = !DILocalVariable(name: "msp", scope: !13571, file: !13572, line: 42, type: !208)
!13575 = distinct !DILocation(line: 44, column: 2, scope: !13576, inlinedAt: !13578)
!13576 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13577, file: !13577, line: 42, type: !4072, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !1126)
!13577 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13578 = distinct !DILocation(line: 510, column: 2, scope: !13566)
!13579 = !DILocation(line: 43, column: 3, scope: !13571, inlinedAt: !13575)
!13580 = !DILocation(line: 43, column: 60, scope: !13571, inlinedAt: !13575)
!13581 = !DILocation(line: 0, scope: !13571, inlinedAt: !13575)
!13582 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13583, file: !9378, line: 1153, type: !208)
!13583 = distinct !DISubprogram(name: "__set_MSP", scope: !9378, file: !9378, line: 1153, type: !9469, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13584)
!13584 = !{!13582}
!13585 = !DILocation(line: 0, scope: !13583, inlinedAt: !13586)
!13586 = distinct !DILocation(line: 46, column: 2, scope: !13571, inlinedAt: !13575)
!13587 = !DILocation(line: 1155, column: 3, scope: !13583, inlinedAt: !13586)
!13588 = !{i64 1919081}
!13589 = !DILocation(line: 62, column: 11, scope: !13571, inlinedAt: !13575)
!13590 = !DILocation(line: 102, column: 2, scope: !13591, inlinedAt: !13592)
!13591 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !10350, file: !10350, line: 97, type: !4072, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !1126)
!13592 = distinct !DILocation(line: 45, column: 2, scope: !13576, inlinedAt: !13578)
!13593 = !DILocation(line: 108, column: 2, scope: !13591, inlinedAt: !13592)
!13594 = !DILocation(line: 112, column: 2, scope: !13591, inlinedAt: !13592)
!13595 = !DILocation(line: 113, column: 2, scope: !13591, inlinedAt: !13592)
!13596 = !DILocation(line: 114, column: 2, scope: !13591, inlinedAt: !13592)
!13597 = !DILocation(line: 116, column: 2, scope: !13591, inlinedAt: !13592)
!13598 = !DILocation(line: 123, column: 13, scope: !13591, inlinedAt: !13592)
!13599 = !DILocation(line: 46, column: 2, scope: !13576, inlinedAt: !13578)
!13600 = !DILocation(line: 47, column: 2, scope: !13576, inlinedAt: !13578)
!13601 = !DILocation(line: 174, column: 12, scope: !13602, inlinedAt: !13603)
!13602 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !10350, file: !10350, line: 169, type: !4072, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !1126)
!13603 = distinct !DILocation(line: 48, column: 2, scope: !13576, inlinedAt: !13578)
!13604 = !DILocation(line: 179, column: 12, scope: !13602, inlinedAt: !13603)
!13605 = !DILocation(line: 50, column: 2, scope: !13576, inlinedAt: !13578)
!13606 = !DILocation(line: 57, column: 2, scope: !13576, inlinedAt: !13578)
!13607 = !DILocation(line: 518, column: 2, scope: !13566)
!13608 = !DILocation(line: 518, column: 18, scope: !13566)
!13609 = !DILocation(line: 520, column: 2, scope: !13566)
!13610 = !DILocation(line: 523, column: 2, scope: !13566)
!13611 = !DILocation(line: 526, column: 2, scope: !13566)
!13612 = !DILocation(line: 527, column: 2, scope: !13566)
!13613 = !DILocation(line: 543, column: 24, scope: !13566)
!13614 = !DILocation(line: 543, column: 2, scope: !13566)
!13615 = !DILocation(line: 0, scope: !3334)
!13616 = !DILocation(line: 246, column: 15, scope: !3352)
!13617 = !DILocation(line: 246, column: 36, scope: !3351)
!13618 = !DILocation(line: 246, column: 2, scope: !3352)
!13619 = !DILocation(line: 247, column: 37, scope: !3350)
!13620 = !DILocation(line: 0, scope: !3350)
!13621 = !DILocation(line: 248, column: 19, scope: !3350)
!13622 = !DILocation(line: 248, column: 12, scope: !3350)
!13623 = !DILocation(line: 250, column: 11, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !3350, file: !3103, line: 250, column: 7)
!13625 = !DILocation(line: 250, column: 7, scope: !3350)
!13626 = !DILocation(line: 254, column: 11, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13628, file: !3103, line: 254, column: 8)
!13628 = distinct !DILexicalBlock(scope: !13624, file: !3103, line: 250, column: 20)
!13629 = !DILocation(line: 254, column: 8, scope: !13628)
!13630 = !DILocation(line: 255, column: 9, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13627, file: !3103, line: 254, column: 17)
!13632 = !DILocation(line: 258, column: 9, scope: !13631)
!13633 = !DILocation(line: 261, column: 28, scope: !13631)
!13634 = !DILocation(line: 261, column: 10, scope: !13631)
!13635 = !DILocation(line: 261, column: 17, scope: !13631)
!13636 = !DILocation(line: 261, column: 26, scope: !13631)
!13637 = !DILocation(line: 262, column: 4, scope: !13631)
!13638 = !DILocation(line: 263, column: 9, scope: !13628)
!13639 = !DILocation(line: 263, column: 16, scope: !13628)
!13640 = !DILocation(line: 263, column: 28, scope: !13628)
!13641 = !DILocation(line: 264, column: 3, scope: !13628)
!13642 = !DILocation(line: 246, column: 60, scope: !3351)
!13643 = distinct !{!13643, !13618, !13644}
!13644 = !DILocation(line: 265, column: 2, scope: !3352)
!13645 = !DILocation(line: 266, column: 1, scope: !3334)
!13646 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1167, file: !1167, line: 1814, type: !9412, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13647)
!13647 = !{!13648, !13649}
!13648 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13646, file: !1167, line: 1814, type: !3736)
!13649 = !DILocalVariable(name: "priority", arg: 2, scope: !13646, file: !1167, line: 1814, type: !208)
!13650 = !DILocation(line: 0, scope: !13646)
!13651 = !DILocation(line: 1822, column: 48, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13653, file: !1167, line: 1821, column: 3)
!13653 = distinct !DILexicalBlock(scope: !13646, file: !1167, line: 1816, column: 7)
!13654 = !DILocation(line: 1822, column: 32, scope: !13652)
!13655 = !DILocation(line: 1822, column: 40, scope: !13652)
!13656 = !DILocation(line: 1822, column: 5, scope: !13652)
!13657 = !DILocation(line: 1822, column: 46, scope: !13652)
!13658 = !DILocation(line: 1824, column: 1, scope: !13646)
!13659 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13577, file: !13577, line: 32, type: !4072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!13660 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13661, file: !13661, line: 215, type: !13558, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13662)
!13661 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13662 = !{!13663}
!13663 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13660, file: !13661, line: 215, type: !3195)
!13664 = !DILocation(line: 0, scope: !13660)
!13665 = !DILocation(line: 217, column: 21, scope: !13660)
!13666 = !DILocation(line: 217, column: 34, scope: !13660)
!13667 = !DILocation(line: 221, column: 21, scope: !13660)
!13668 = !DILocation(line: 221, column: 34, scope: !13660)
!13669 = !DILocation(line: 223, column: 27, scope: !13660)
!13670 = !DILocation(line: 223, column: 33, scope: !13660)
!13671 = !DILocation(line: 224, column: 27, scope: !13660)
!13672 = !DILocation(line: 224, column: 32, scope: !13660)
!13673 = !DILocation(line: 232, column: 16, scope: !13660)
!13674 = !DILocation(line: 232, column: 30, scope: !13660)
!13675 = !DILocation(line: 239, column: 24, scope: !13660)
!13676 = !DILocation(line: 240, column: 1, scope: !13660)
!13677 = distinct !DISubprogram(name: "prepare_multithreading", scope: !3103, file: !3103, line: 399, type: !13678, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13680)
!13678 = !DISubroutineType(types: !13679)
!13679 = !{!393}
!13680 = !{!13681}
!13681 = !DILocalVariable(name: "stack_ptr", scope: !13677, file: !3103, line: 401, type: !393)
!13682 = !DILocation(line: 404, column: 2, scope: !13677)
!13683 = !DILocation(line: 416, column: 24, scope: !13677)
!13684 = !DILocation(line: 418, column: 14, scope: !13677)
!13685 = !DILocation(line: 0, scope: !13677)
!13686 = !DILocation(line: 423, column: 2, scope: !13677)
!13687 = !DILocation(line: 424, column: 2, scope: !13677)
!13688 = !DILocation(line: 426, column: 2, scope: !13677)
!13689 = !DILocation(line: 428, column: 2, scope: !13677)
!13690 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !3103, file: !3103, line: 432, type: !13691, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13693)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{null, !393}
!13693 = !{!13694}
!13694 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13690, file: !3103, line: 432, type: !393)
!13695 = !DILocation(line: 0, scope: !13690)
!13696 = !DILocation(line: 435, column: 2, scope: !13690)
!13697 = !DILocation(line: 445, column: 2, scope: !13690)
!13698 = distinct !DISubprogram(name: "bg_thread_main", scope: !3103, file: !3103, line: 277, type: !6024, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !13699)
!13699 = !{!13700, !13701, !13702}
!13700 = !DILocalVariable(name: "unused1", arg: 1, scope: !13698, file: !3103, line: 277, type: !124)
!13701 = !DILocalVariable(name: "unused2", arg: 2, scope: !13698, file: !3103, line: 277, type: !124)
!13702 = !DILocalVariable(name: "unused3", arg: 3, scope: !13698, file: !3103, line: 277, type: !124)
!13703 = !DILocation(line: 0, scope: !13698)
!13704 = !DILocation(line: 291, column: 20, scope: !13698)
!13705 = !DILocation(line: 293, column: 2, scope: !13698)
!13706 = !DILocation(line: 297, column: 2, scope: !13698)
!13707 = !DILocation(line: 305, column: 2, scope: !13698)
!13708 = !DILocation(line: 307, column: 2, scope: !13698)
!13709 = !DILocation(line: 330, column: 8, scope: !13698)
!13710 = !DILocation(line: 333, column: 34, scope: !13698)
!13711 = !DILocation(line: 339, column: 1, scope: !13698)
!13712 = distinct !DISubprogram(name: "k_thread_foreach", scope: !3365, file: !3365, line: 45, type: !13713, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13721)
!13713 = !DISubroutineType(types: !13714)
!13714 = !{null, !13715, !124}
!13715 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !1111, line: 103, baseType: !13716)
!13716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13717, size: 32)
!13717 = !DISubroutineType(types: !13718)
!13718 = !{null, !13719, !124}
!13719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13720, size: 32)
!13720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3370)
!13721 = !{!13722, !13723}
!13722 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13712, file: !3365, line: 45, type: !13715)
!13723 = !DILocalVariable(name: "user_data", arg: 2, scope: !13712, file: !3365, line: 45, type: !124)
!13724 = !DILocation(line: 0, scope: !13712)
!13725 = !DILocation(line: 71, column: 1, scope: !13712)
!13726 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !3365, file: !3365, line: 73, type: !13713, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13727)
!13727 = !{!13728, !13729}
!13728 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13726, file: !3365, line: 73, type: !13715)
!13729 = !DILocalVariable(name: "user_data", arg: 2, scope: !13726, file: !3365, line: 73, type: !124)
!13730 = !DILocation(line: 0, scope: !13726)
!13731 = !DILocation(line: 95, column: 1, scope: !13726)
!13732 = distinct !DISubprogram(name: "k_is_in_isr", scope: !3365, file: !3365, line: 97, type: !10351, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !1126)
!13733 = !DILocation(line: 1031, column: 3, scope: !13734, inlinedAt: !13737)
!13734 = distinct !DISubprogram(name: "__get_IPSR", scope: !9378, file: !9378, line: 1027, type: !9459, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13735)
!13735 = !{!13736}
!13736 = !DILocalVariable(name: "result", scope: !13734, file: !9378, line: 1029, type: !208)
!13737 = distinct !DILocation(line: 48, column: 10, scope: !13738, inlinedAt: !13739)
!13738 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !10350, file: !10350, line: 46, type: !10351, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !1126)
!13739 = distinct !DILocation(line: 99, column: 9, scope: !13732)
!13740 = !{i64 1924732}
!13741 = !DILocation(line: 0, scope: !13734, inlinedAt: !13737)
!13742 = !DILocation(line: 48, column: 9, scope: !13738, inlinedAt: !13739)
!13743 = !DILocation(line: 99, column: 2, scope: !13732)
!13744 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !3365, file: !3365, line: 106, type: !4072, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !1126)
!13745 = !DILocation(line: 108, column: 2, scope: !13744)
!13746 = !DILocation(line: 108, column: 17, scope: !13744)
!13747 = !DILocation(line: 108, column: 30, scope: !13744)
!13748 = !DILocation(line: 109, column: 1, scope: !13744)
!13749 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !3365, file: !3365, line: 116, type: !4072, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !1126)
!13750 = !DILocation(line: 118, column: 2, scope: !13749)
!13751 = !DILocation(line: 118, column: 17, scope: !13749)
!13752 = !DILocation(line: 118, column: 30, scope: !13749)
!13753 = !DILocation(line: 119, column: 1, scope: !13749)
!13754 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !3365, file: !3365, line: 126, type: !10351, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !1126)
!13755 = !DILocation(line: 128, column: 10, scope: !13754)
!13756 = !DILocation(line: 128, column: 25, scope: !13754)
!13757 = !DILocation(line: 128, column: 38, scope: !13754)
!13758 = !DILocation(line: 128, column: 53, scope: !13754)
!13759 = !DILocation(line: 128, column: 2, scope: !13754)
!13760 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !3365, file: !3365, line: 187, type: !13761, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13763)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{!125, !3369, !140}
!13763 = !{!13764, !13765}
!13764 = !DILocalVariable(name: "thread", arg: 1, scope: !13760, file: !3365, line: 187, type: !3369)
!13765 = !DILocalVariable(name: "value", arg: 2, scope: !13760, file: !3365, line: 187, type: !140)
!13766 = !DILocation(line: 0, scope: !13760)
!13767 = !DILocation(line: 206, column: 2, scope: !13760)
!13768 = distinct !DISubprogram(name: "k_thread_name_get", scope: !3365, file: !3365, line: 238, type: !13769, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13771)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{!140, !3369}
!13771 = !{!13772}
!13772 = !DILocalVariable(name: "thread", arg: 1, scope: !13768, file: !3365, line: 238, type: !3369)
!13773 = !DILocation(line: 0, scope: !13768)
!13774 = !DILocation(line: 244, column: 2, scope: !13768)
!13775 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !3365, file: !3365, line: 248, type: !13776, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13778)
!13776 = !DISubroutineType(types: !13777)
!13777 = !{!125, !3368, !393, !272}
!13778 = !{!13779, !13780, !13781}
!13779 = !DILocalVariable(name: "thread", arg: 1, scope: !13775, file: !3365, line: 248, type: !3368)
!13780 = !DILocalVariable(name: "buf", arg: 2, scope: !13775, file: !3365, line: 248, type: !393)
!13781 = !DILocalVariable(name: "size", arg: 3, scope: !13775, file: !3365, line: 248, type: !272)
!13782 = !DILocation(line: 0, scope: !13775)
!13783 = !DILocation(line: 257, column: 2, scope: !13775)
!13784 = !DILocation(line: 0, scope: !3364)
!13785 = !DILocation(line: 281, column: 11, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !3364, file: !3365, line: 281, column: 6)
!13787 = !DILocation(line: 281, column: 20, scope: !13786)
!13788 = !DILocation(line: 275, column: 45, scope: !3364)
!13789 = !DILocation(line: 285, column: 10, scope: !3364)
!13790 = !DILocation(line: 0, scope: !3486)
!13791 = !DILocation(line: 293, column: 39, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !3486, file: !3365, line: 293, column: 2)
!13793 = !DILocation(line: 293, column: 2, scope: !3486)
!13794 = !DILocation(line: 273, column: 14, scope: !3364)
!13795 = !DILocation(line: 309, column: 2, scope: !3364)
!13796 = !DILocation(line: 309, column: 11, scope: !3364)
!13797 = !DILocation(line: 311, column: 2, scope: !3364)
!13798 = !DILocation(line: 293, column: 26, scope: !13792)
!13799 = !DILocation(line: 294, column: 9, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13792, file: !3365, line: 293, column: 54)
!13801 = !DILocation(line: 295, column: 21, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13800, file: !3365, line: 295, column: 7)
!13803 = !DILocation(line: 295, column: 28, scope: !13802)
!13804 = !DILocation(line: 295, column: 7, scope: !13800)
!13805 = !DILocation(line: 299, column: 25, scope: !13800)
!13806 = !DILocation(line: 299, column: 41, scope: !13800)
!13807 = !DILocation(line: 300, column: 7, scope: !13800)
!13808 = !DILocation(line: 300, column: 26, scope: !13800)
!13809 = !DILocation(line: 299, column: 10, scope: !13800)
!13810 = !DILocation(line: 299, column: 7, scope: !13800)
!13811 = !DILocation(line: 302, column: 16, scope: !13800)
!13812 = !DILocation(line: 304, column: 20, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13800, file: !3365, line: 304, column: 7)
!13814 = !DILocation(line: 304, column: 7, scope: !13800)
!13815 = !DILocation(line: 305, column: 26, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13813, file: !3365, line: 304, column: 26)
!13817 = !DILocation(line: 305, column: 42, scope: !13816)
!13818 = !DILocation(line: 305, column: 11, scope: !13816)
!13819 = !DILocation(line: 305, column: 8, scope: !13816)
!13820 = !DILocation(line: 306, column: 3, scope: !13816)
!13821 = !DILocation(line: 293, column: 50, scope: !13792)
!13822 = !DILocation(line: 312, column: 1, scope: !3364)
!13823 = distinct !DISubprogram(name: "copy_bytes", scope: !3365, file: !3365, line: 261, type: !13824, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13826)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!272, !393, !272, !140, !272}
!13826 = !{!13827, !13828, !13829, !13830, !13831}
!13827 = !DILocalVariable(name: "dest", arg: 1, scope: !13823, file: !3365, line: 261, type: !393)
!13828 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13823, file: !3365, line: 261, type: !272)
!13829 = !DILocalVariable(name: "src", arg: 3, scope: !13823, file: !3365, line: 261, type: !140)
!13830 = !DILocalVariable(name: "src_size", arg: 4, scope: !13823, file: !3365, line: 261, type: !272)
!13831 = !DILocalVariable(name: "bytes_to_copy", scope: !13823, file: !3365, line: 263, type: !272)
!13832 = !DILocation(line: 0, scope: !13823)
!13833 = !DILocation(line: 265, column: 18, scope: !13823)
!13834 = !DILocation(line: 266, column: 2, scope: !13823)
!13835 = !DILocation(line: 268, column: 2, scope: !13823)
!13836 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !3365, file: !3365, line: 383, type: !13837, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13839)
!13837 = !DISubroutineType(types: !13838)
!13838 = !{null, !3369}
!13839 = !{!13840}
!13840 = !DILocalVariable(name: "thread", arg: 1, scope: !13836, file: !3365, line: 383, type: !3369)
!13841 = !DILocation(line: 0, scope: !13836)
!13842 = !DILocation(line: 387, column: 2, scope: !13836)
!13843 = !DILocation(line: 388, column: 1, scope: !13836)
!13844 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !3365, file: !3365, line: 528, type: !13845, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13852)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{!393, !3369, !13847, !272, !6021, !124, !124, !124, !125, !208, !140}
!13847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13848, size: 32)
!13848 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !6022, line: 44, baseType: !13849)
!13849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !3310, line: 47, size: 8, elements: !13850)
!13850 = !{!13851}
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13849, file: !3310, line: 48, baseType: !142, size: 8)
!13852 = !{!13853, !13854, !13855, !13856, !13857, !13858, !13859, !13860, !13861, !13862, !13863}
!13853 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13844, file: !3365, line: 528, type: !3369)
!13854 = !DILocalVariable(name: "stack", arg: 2, scope: !13844, file: !3365, line: 529, type: !13847)
!13855 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13844, file: !3365, line: 529, type: !272)
!13856 = !DILocalVariable(name: "entry", arg: 4, scope: !13844, file: !3365, line: 530, type: !6021)
!13857 = !DILocalVariable(name: "p1", arg: 5, scope: !13844, file: !3365, line: 531, type: !124)
!13858 = !DILocalVariable(name: "p2", arg: 6, scope: !13844, file: !3365, line: 531, type: !124)
!13859 = !DILocalVariable(name: "p3", arg: 7, scope: !13844, file: !3365, line: 531, type: !124)
!13860 = !DILocalVariable(name: "prio", arg: 8, scope: !13844, file: !3365, line: 532, type: !125)
!13861 = !DILocalVariable(name: "options", arg: 9, scope: !13844, file: !3365, line: 532, type: !208)
!13862 = !DILocalVariable(name: "name", arg: 10, scope: !13844, file: !3365, line: 532, type: !140)
!13863 = !DILocalVariable(name: "stack_ptr", scope: !13844, file: !3365, line: 534, type: !393)
!13864 = !DILocation(line: 0, scope: !13844)
!13865 = !DILocation(line: 550, column: 28, scope: !13844)
!13866 = !DILocation(line: 550, column: 2, scope: !13844)
!13867 = !DILocation(line: 553, column: 34, scope: !13844)
!13868 = !DILocation(line: 553, column: 2, scope: !13844)
!13869 = !DILocation(line: 554, column: 14, scope: !13844)
!13870 = !DILocation(line: 564, column: 2, scope: !13844)
!13871 = !DILocation(line: 567, column: 14, scope: !13844)
!13872 = !DILocation(line: 567, column: 24, scope: !13844)
!13873 = !DILocation(line: 612, column: 7, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13844, file: !3365, line: 612, column: 6)
!13875 = !DILocation(line: 612, column: 6, scope: !13844)
!13876 = !DILocation(line: 627, column: 40, scope: !13844)
!13877 = !DILocation(line: 637, column: 2, scope: !13844)
!13878 = !DILocation(line: 613, column: 15, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13874, file: !3365, line: 612, column: 17)
!13880 = !DILocation(line: 613, column: 29, scope: !13879)
!13881 = !DILocation(line: 638, column: 1, scope: !13844)
!13882 = distinct !DISubprogram(name: "z_waitq_init", scope: !13883, file: !13883, line: 47, type: !13884, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13886)
!13883 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13884 = !DISubroutineType(types: !13885)
!13885 = !{null, !3400}
!13886 = !{!13887}
!13887 = !DILocalVariable(name: "w", arg: 1, scope: !13882, file: !13883, line: 47, type: !3400)
!13888 = !DILocation(line: 0, scope: !13882)
!13889 = !DILocation(line: 49, column: 21, scope: !13882)
!13890 = !DILocation(line: 49, column: 2, scope: !13882)
!13891 = !DILocation(line: 50, column: 1, scope: !13882)
!13892 = distinct !DISubprogram(name: "z_init_thread_base", scope: !3365, file: !3365, line: 791, type: !13893, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13896)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{null, !13895, !125, !208, !32}
!13895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 32)
!13896 = !{!13897, !13898, !13899, !13900}
!13897 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13892, file: !3365, line: 791, type: !13895)
!13898 = !DILocalVariable(name: "priority", arg: 2, scope: !13892, file: !3365, line: 791, type: !125)
!13899 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13892, file: !3365, line: 792, type: !208)
!13900 = !DILocalVariable(name: "options", arg: 4, scope: !13892, file: !3365, line: 792, type: !32)
!13901 = !DILocation(line: 0, scope: !13892)
!13902 = !DILocation(line: 795, column: 15, scope: !13892)
!13903 = !DILocation(line: 795, column: 25, scope: !13892)
!13904 = !DILocation(line: 796, column: 30, scope: !13892)
!13905 = !DILocation(line: 796, column: 15, scope: !13892)
!13906 = !DILocation(line: 796, column: 28, scope: !13892)
!13907 = !DILocation(line: 797, column: 30, scope: !13892)
!13908 = !DILocation(line: 797, column: 15, scope: !13892)
!13909 = !DILocation(line: 797, column: 28, scope: !13892)
!13910 = !DILocation(line: 799, column: 22, scope: !13892)
!13911 = !DILocation(line: 799, column: 15, scope: !13892)
!13912 = !DILocation(line: 799, column: 20, scope: !13892)
!13913 = !DILocation(line: 801, column: 15, scope: !13892)
!13914 = !DILocation(line: 801, column: 28, scope: !13892)
!13915 = !DILocation(line: 814, column: 2, scope: !13892)
!13916 = !DILocation(line: 815, column: 1, scope: !13892)
!13917 = distinct !DISubprogram(name: "setup_thread_stack", scope: !3365, file: !3365, line: 449, type: !13918, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13920)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!393, !3369, !13847, !272}
!13920 = !{!13921, !13922, !13923, !13924, !13925, !13926, !13927, !13928}
!13921 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13917, file: !3365, line: 449, type: !3369)
!13922 = !DILocalVariable(name: "stack", arg: 2, scope: !13917, file: !3365, line: 450, type: !13847)
!13923 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13917, file: !3365, line: 450, type: !272)
!13924 = !DILocalVariable(name: "stack_obj_size", scope: !13917, file: !3365, line: 452, type: !272)
!13925 = !DILocalVariable(name: "stack_buf_size", scope: !13917, file: !3365, line: 452, type: !272)
!13926 = !DILocalVariable(name: "stack_ptr", scope: !13917, file: !3365, line: 453, type: !393)
!13927 = !DILocalVariable(name: "stack_buf_start", scope: !13917, file: !3365, line: 453, type: !393)
!13928 = !DILocalVariable(name: "delta", scope: !13917, file: !3365, line: 454, type: !272)
!13929 = !DILocation(line: 0, scope: !13917)
!13930 = !DILocation(line: 465, column: 20, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13917, file: !3365, line: 463, column: 2)
!13932 = !DILocation(line: 466, column: 21, scope: !13931)
!13933 = !DILocation(line: 473, column: 28, scope: !13917)
!13934 = !DILocation(line: 514, column: 33, scope: !13917)
!13935 = !DILocation(line: 514, column: 25, scope: !13917)
!13936 = !DILocation(line: 514, column: 31, scope: !13917)
!13937 = !DILocation(line: 515, column: 25, scope: !13917)
!13938 = !DILocation(line: 515, column: 30, scope: !13917)
!13939 = !DILocation(line: 516, column: 25, scope: !13917)
!13940 = !DILocation(line: 516, column: 31, scope: !13917)
!13941 = !DILocation(line: 520, column: 2, scope: !13917)
!13942 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !3310, file: !3310, line: 331, type: !13943, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13945)
!13943 = !DISubroutineType(types: !13944)
!13944 = !{!393, !13847}
!13945 = !{!13946}
!13946 = !DILocalVariable(name: "sym", arg: 1, scope: !13942, file: !3310, line: 331, type: !13847)
!13947 = !DILocation(line: 0, scope: !13942)
!13948 = !DILocation(line: 333, column: 9, scope: !13942)
!13949 = !DILocation(line: 333, column: 2, scope: !13942)
!13950 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13951, file: !13951, line: 40, type: !13952, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13954)
!13951 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13952 = !DISubroutineType(types: !13953)
!13953 = !{null, !13895}
!13954 = !{!13955}
!13955 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13950, file: !13951, line: 40, type: !13895)
!13956 = !DILocation(line: 0, scope: !13950)
!13957 = !DILocation(line: 42, column: 31, scope: !13950)
!13958 = !DILocation(line: 42, column: 2, scope: !13950)
!13959 = !DILocation(line: 43, column: 1, scope: !13950)
!13960 = distinct !DISubprogram(name: "z_init_timeout", scope: !13951, file: !13951, line: 25, type: !3426, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13961)
!13961 = !{!13962}
!13962 = !DILocalVariable(name: "to", arg: 1, scope: !13960, file: !13951, line: 25, type: !3428)
!13963 = !DILocation(line: 0, scope: !13960)
!13964 = !DILocation(line: 27, column: 22, scope: !13960)
!13965 = !DILocation(line: 27, column: 2, scope: !13960)
!13966 = !DILocation(line: 28, column: 1, scope: !13960)
!13967 = distinct !DISubprogram(name: "sys_dnode_init", scope: !1030, file: !1030, line: 211, type: !13968, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13970)
!13968 = !DISubroutineType(types: !13969)
!13969 = !{null, !3472}
!13970 = !{!13971}
!13971 = !DILocalVariable(name: "node", arg: 1, scope: !13967, file: !1030, line: 211, type: !3472)
!13972 = !DILocation(line: 0, scope: !13967)
!13973 = !DILocation(line: 213, column: 8, scope: !13967)
!13974 = !DILocation(line: 213, column: 13, scope: !13967)
!13975 = !DILocation(line: 214, column: 8, scope: !13967)
!13976 = !DILocation(line: 214, column: 13, scope: !13967)
!13977 = !DILocation(line: 215, column: 1, scope: !13967)
!13978 = distinct !DISubprogram(name: "sys_dlist_init", scope: !1030, file: !1030, line: 197, type: !13979, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13982)
!13979 = !DISubroutineType(types: !13980)
!13980 = !{null, !13981}
!13981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 32)
!13982 = !{!13983}
!13983 = !DILocalVariable(name: "list", arg: 1, scope: !13978, file: !1030, line: 197, type: !13981)
!13984 = !DILocation(line: 0, scope: !13978)
!13985 = !DILocation(line: 199, column: 8, scope: !13978)
!13986 = !DILocation(line: 199, column: 13, scope: !13978)
!13987 = !DILocation(line: 200, column: 8, scope: !13978)
!13988 = !DILocation(line: 200, column: 13, scope: !13978)
!13989 = !DILocation(line: 201, column: 1, scope: !13978)
!13990 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !3365, file: !3365, line: 641, type: !13991, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !13997)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!3368, !3369, !13847, !272, !6021, !124, !124, !124, !125, !208, !13993}
!13993 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2805, line: 67, baseType: !13994)
!13994 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2805, line: 65, size: 64, elements: !13995)
!13995 = !{!13996}
!13996 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13994, file: !2805, line: 66, baseType: !2804, size: 64)
!13997 = !{!13998, !13999, !14000, !14001, !14002, !14003, !14004, !14005, !14006, !14007}
!13998 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13990, file: !3365, line: 641, type: !3369)
!13999 = !DILocalVariable(name: "stack", arg: 2, scope: !13990, file: !3365, line: 642, type: !13847)
!14000 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13990, file: !3365, line: 643, type: !272)
!14001 = !DILocalVariable(name: "entry", arg: 4, scope: !13990, file: !3365, line: 643, type: !6021)
!14002 = !DILocalVariable(name: "p1", arg: 5, scope: !13990, file: !3365, line: 644, type: !124)
!14003 = !DILocalVariable(name: "p2", arg: 6, scope: !13990, file: !3365, line: 644, type: !124)
!14004 = !DILocalVariable(name: "p3", arg: 7, scope: !13990, file: !3365, line: 644, type: !124)
!14005 = !DILocalVariable(name: "prio", arg: 8, scope: !13990, file: !3365, line: 645, type: !125)
!14006 = !DILocalVariable(name: "options", arg: 9, scope: !13990, file: !3365, line: 645, type: !208)
!14007 = !DILocalVariable(name: "delay", arg: 10, scope: !13990, file: !3365, line: 645, type: !13993)
!14008 = !DILocation(line: 0, scope: !13990)
!14009 = !DILocation(line: 649, column: 2, scope: !13990)
!14010 = !DILocation(line: 652, column: 7, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !13990, file: !3365, line: 652, column: 6)
!14012 = !DILocation(line: 652, column: 6, scope: !13990)
!14013 = !DILocation(line: 653, column: 3, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14011, file: !3365, line: 652, column: 39)
!14015 = !DILocation(line: 654, column: 2, scope: !14014)
!14016 = !DILocation(line: 656, column: 2, scope: !13990)
!14017 = distinct !DISubprogram(name: "schedule_new_thread", scope: !3365, file: !3365, line: 401, type: !14018, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14020)
!14018 = !DISubroutineType(types: !14019)
!14019 = !{null, !3369, !13993}
!14020 = !{!14021, !14022}
!14021 = !DILocalVariable(name: "thread", arg: 1, scope: !14017, file: !3365, line: 401, type: !3369)
!14022 = !DILocalVariable(name: "delay", arg: 2, scope: !14017, file: !3365, line: 401, type: !13993)
!14023 = !DILocation(line: 0, scope: !14017)
!14024 = !DILocation(line: 404, column: 6, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14017, file: !3365, line: 404, column: 6)
!14026 = !DILocation(line: 404, column: 6, scope: !14017)
!14027 = !DILocation(line: 405, column: 3, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14025, file: !3365, line: 404, column: 38)
!14029 = !DILocation(line: 406, column: 2, scope: !14028)
!14030 = !DILocation(line: 407, column: 3, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14025, file: !3365, line: 406, column: 9)
!14032 = !DILocation(line: 413, column: 1, scope: !14017)
!14033 = distinct !DISubprogram(name: "k_thread_start", scope: !6143, file: !6143, line: 205, type: !14034, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14036)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{null, !3368}
!14036 = !{!14037}
!14037 = !DILocalVariable(name: "thread", arg: 1, scope: !14033, file: !6143, line: 205, type: !3368)
!14038 = !DILocation(line: 0, scope: !14033)
!14039 = !DILocation(line: 214, column: 2, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14033, file: !6143, line: 214, column: 2)
!14041 = !{i64 2152671266}
!14042 = !DILocation(line: 215, column: 2, scope: !14033)
!14043 = !DILocation(line: 216, column: 1, scope: !14033)
!14044 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13951, file: !13951, line: 47, type: !14018, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14045)
!14045 = !{!14046, !14047}
!14046 = !DILocalVariable(name: "thread", arg: 1, scope: !14044, file: !13951, line: 47, type: !3369)
!14047 = !DILocalVariable(name: "ticks", arg: 2, scope: !14044, file: !13951, line: 47, type: !13993)
!14048 = !DILocation(line: 0, scope: !14044)
!14049 = !DILocation(line: 49, column: 30, scope: !14044)
!14050 = !DILocation(line: 49, column: 2, scope: !14044)
!14051 = !DILocation(line: 50, column: 1, scope: !14044)
!14052 = distinct !DISubprogram(name: "z_init_static_threads", scope: !3365, file: !3365, line: 748, type: !4072, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14053)
!14053 = !{!14054, !14072}
!14054 = !DILocalVariable(name: "thread_data", scope: !14055, file: !3365, line: 750, type: !14056)
!14055 = distinct !DILexicalBlock(scope: !14052, file: !3365, line: 750, column: 2)
!14056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14057, size: 32)
!14057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !1111, line: 620, size: 384, elements: !14058)
!14058 = !{!14059, !14060, !14061, !14062, !14063, !14064, !14065, !14066, !14067, !14068, !14069, !14071}
!14059 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14057, file: !1111, line: 621, baseType: !3369, size: 32)
!14060 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14057, file: !1111, line: 622, baseType: !13847, size: 32, offset: 32)
!14061 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14057, file: !1111, line: 623, baseType: !32, size: 32, offset: 64)
!14062 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14057, file: !1111, line: 624, baseType: !6021, size: 32, offset: 96)
!14063 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14057, file: !1111, line: 625, baseType: !124, size: 32, offset: 128)
!14064 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14057, file: !1111, line: 626, baseType: !124, size: 32, offset: 160)
!14065 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14057, file: !1111, line: 627, baseType: !124, size: 32, offset: 192)
!14066 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14057, file: !1111, line: 628, baseType: !125, size: 32, offset: 224)
!14067 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14057, file: !1111, line: 629, baseType: !208, size: 32, offset: 256)
!14068 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14057, file: !1111, line: 630, baseType: !1731, size: 32, offset: 288)
!14069 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14057, file: !1111, line: 631, baseType: !14070, size: 32, offset: 320)
!14070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 32)
!14071 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14057, file: !1111, line: 632, baseType: !140, size: 32, offset: 352)
!14072 = !DILocalVariable(name: "thread_data", scope: !14073, file: !3365, line: 781, type: !14056)
!14073 = distinct !DILexicalBlock(scope: !14052, file: !3365, line: 781, column: 2)
!14074 = !DILocation(line: 0, scope: !14055)
!14075 = !DILocation(line: 750, column: 2, scope: !14055)
!14076 = !DILocation(line: 780, column: 2, scope: !14052)
!14077 = !DILocation(line: 0, scope: !14073)
!14078 = !DILocation(line: 781, column: 2, scope: !14073)
!14079 = !DILocation(line: 752, column: 17, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !3365, line: 750, column: 38)
!14081 = distinct !DILexicalBlock(scope: !14055, file: !3365, line: 750, column: 2)
!14082 = !DILocation(line: 753, column: 17, scope: !14080)
!14083 = !DILocation(line: 754, column: 17, scope: !14080)
!14084 = !DILocation(line: 755, column: 17, scope: !14080)
!14085 = !DILocation(line: 756, column: 17, scope: !14080)
!14086 = !DILocation(line: 757, column: 17, scope: !14080)
!14087 = !DILocation(line: 758, column: 17, scope: !14080)
!14088 = !DILocation(line: 759, column: 17, scope: !14080)
!14089 = !DILocation(line: 760, column: 17, scope: !14080)
!14090 = !DILocation(line: 751, column: 3, scope: !14080)
!14091 = !DILocation(line: 763, column: 16, scope: !14080)
!14092 = !DILocation(line: 763, column: 29, scope: !14080)
!14093 = !DILocation(line: 763, column: 39, scope: !14080)
!14094 = !DILocation(line: 750, column: 2, scope: !14081)
!14095 = !DILocation(line: 750, column: 2, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14081, file: !3365, line: 750, column: 2)
!14097 = distinct !{!14097, !14075, !14098}
!14098 = !DILocation(line: 764, column: 2, scope: !14055)
!14099 = !DILocation(line: 787, column: 2, scope: !14052)
!14100 = !DILocation(line: 788, column: 1, scope: !14052)
!14101 = !DILocation(line: 782, column: 20, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !3365, line: 782, column: 7)
!14103 = distinct !DILexicalBlock(scope: !14104, file: !3365, line: 781, column: 38)
!14104 = distinct !DILexicalBlock(scope: !14073, file: !3365, line: 781, column: 2)
!14105 = !DILocation(line: 782, column: 31, scope: !14102)
!14106 = !DILocation(line: 782, column: 7, scope: !14103)
!14107 = !DILocation(line: 783, column: 37, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14102, file: !3365, line: 782, column: 51)
!14109 = !DILocation(line: 784, column: 10, scope: !14108)
!14110 = !DILocation(line: 783, column: 4, scope: !14108)
!14111 = !DILocation(line: 785, column: 3, scope: !14108)
!14112 = !DILocation(line: 781, column: 2, scope: !14104)
!14113 = !DILocation(line: 781, column: 2, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14104, file: !3365, line: 781, column: 2)
!14115 = distinct !{!14115, !14078, !14116}
!14116 = !DILocation(line: 786, column: 2, scope: !14073)
!14117 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14118, file: !14118, line: 403, type: !14119, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14121)
!14118 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14119 = !DISubroutineType(types: !14120)
!14120 = !{!2271, !2271}
!14121 = !{!14122}
!14122 = !DILocalVariable(name: "t", arg: 1, scope: !14117, file: !14118, line: 403, type: !2271)
!14123 = !DILocation(line: 0, scope: !14117)
!14124 = !DILocalVariable(name: "t", arg: 1, scope: !14125, file: !14118, line: 102, type: !2271)
!14125 = distinct !DISubprogram(name: "z_tmcvt", scope: !14118, file: !14118, line: 102, type: !14126, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14128)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{!2271, !2271, !208, !208, !153, !153, !153, !153}
!14128 = !{!14124, !14129, !14130, !14131, !14132, !14133, !14134, !14135, !14136, !14137, !14138}
!14129 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14125, file: !14118, line: 102, type: !208)
!14130 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14125, file: !14118, line: 103, type: !208)
!14131 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14125, file: !14118, line: 103, type: !153)
!14132 = !DILocalVariable(name: "result32", arg: 5, scope: !14125, file: !14118, line: 104, type: !153)
!14133 = !DILocalVariable(name: "round_up", arg: 6, scope: !14125, file: !14118, line: 104, type: !153)
!14134 = !DILocalVariable(name: "round_off", arg: 7, scope: !14125, file: !14118, line: 105, type: !153)
!14135 = !DILocalVariable(name: "mul_ratio", scope: !14125, file: !14118, line: 107, type: !153)
!14136 = !DILocalVariable(name: "div_ratio", scope: !14125, file: !14118, line: 109, type: !153)
!14137 = !DILocalVariable(name: "off", scope: !14125, file: !14118, line: 116, type: !2271)
!14138 = !DILocalVariable(name: "rdivisor", scope: !14139, file: !14118, line: 119, type: !208)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !14118, line: 118, column: 18)
!14140 = distinct !DILexicalBlock(scope: !14125, file: !14118, line: 118, column: 6)
!14141 = !DILocation(line: 0, scope: !14125, inlinedAt: !14142)
!14142 = distinct !DILocation(line: 406, column: 9, scope: !14117)
!14143 = !DILocation(line: 145, column: 13, scope: !14144, inlinedAt: !14142)
!14144 = distinct !DILexicalBlock(scope: !14145, file: !14118, line: 144, column: 10)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !14118, line: 142, column: 7)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !14118, line: 141, column: 24)
!14147 = distinct !DILexicalBlock(scope: !14148, file: !14118, line: 141, column: 13)
!14148 = distinct !DILexicalBlock(scope: !14125, file: !14118, line: 134, column: 6)
!14149 = !DILocation(line: 406, column: 2, scope: !14117)
!14150 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !3365, file: !3365, line: 817, type: !6019, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14151)
!14151 = !{!14152, !14153, !14154, !14155}
!14152 = !DILocalVariable(name: "entry", arg: 1, scope: !14150, file: !3365, line: 817, type: !6021)
!14153 = !DILocalVariable(name: "p1", arg: 2, scope: !14150, file: !3365, line: 818, type: !124)
!14154 = !DILocalVariable(name: "p2", arg: 3, scope: !14150, file: !3365, line: 818, type: !124)
!14155 = !DILocalVariable(name: "p3", arg: 4, scope: !14150, file: !3365, line: 818, type: !124)
!14156 = !DILocation(line: 0, scope: !14150)
!14157 = !DILocation(line: 822, column: 2, scope: !14150)
!14158 = !DILocation(line: 822, column: 17, scope: !14150)
!14159 = !DILocation(line: 822, column: 30, scope: !14150)
!14160 = !DILocation(line: 823, column: 2, scope: !14150)
!14161 = !DILocation(line: 845, column: 2, scope: !14150)
!14162 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !3365, file: !3365, line: 888, type: !14163, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14165)
!14163 = !DISubroutineType(types: !14164)
!14164 = !{!125, !3369}
!14165 = !{!14166}
!14166 = !DILocalVariable(name: "thread", arg: 1, scope: !14162, file: !3365, line: 888, type: !3369)
!14167 = !DILocation(line: 0, scope: !14162)
!14168 = !DILocation(line: 893, column: 2, scope: !14162)
!14169 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !3365, file: !3365, line: 897, type: !14170, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14172)
!14170 = !DISubroutineType(types: !14171)
!14171 = !{!125, !3369, !32}
!14172 = !{!14173, !14174}
!14173 = !DILocalVariable(name: "thread", arg: 1, scope: !14169, file: !3365, line: 897, type: !3369)
!14174 = !DILocalVariable(name: "options", arg: 2, scope: !14169, file: !3365, line: 897, type: !32)
!14175 = !DILocation(line: 0, scope: !14169)
!14176 = !DILocation(line: 902, column: 2, scope: !14169)
!14177 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !3365, file: !3365, line: 1072, type: !14178, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14183)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!125, !3368, !14180}
!14180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14181, size: 32)
!14181 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !1020, line: 234, baseType: !14182)
!14182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !1020, line: 192, elements: !1126)
!14183 = !{!14184, !14185}
!14184 = !DILocalVariable(name: "thread", arg: 1, scope: !14177, file: !3365, line: 1072, type: !3368)
!14185 = !DILocalVariable(name: "stats", arg: 2, scope: !14177, file: !3365, line: 1073, type: !14180)
!14186 = !DILocation(line: 0, scope: !14177)
!14187 = !DILocation(line: 1075, column: 14, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14177, file: !3365, line: 1075, column: 6)
!14189 = !DILocation(line: 1075, column: 23, scope: !14188)
!14190 = !DILocation(line: 1086, column: 1, scope: !14177)
!14191 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !3365, file: !3365, line: 1088, type: !14192, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3469, retainedNodes: !14194)
!14192 = !DISubroutineType(types: !14193)
!14193 = !{!125, !14180}
!14194 = !{!14195}
!14195 = !DILocalVariable(name: "stats", arg: 1, scope: !14191, file: !3365, line: 1088, type: !14180)
!14196 = !DILocation(line: 0, scope: !14191)
!14197 = !DILocation(line: 1094, column: 12, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14191, file: !3365, line: 1094, column: 6)
!14199 = !DILocation(line: 1120, column: 1, scope: !14191)
!14200 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14201, file: !14201, line: 20, type: !4072, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4053, retainedNodes: !1126)
!14201 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14202 = !DILocation(line: 30, column: 2, scope: !14200)
!14203 = !DILocation(line: 31, column: 1, scope: !14200)
!14204 = distinct !DISubprogram(name: "idle", scope: !14201, file: !14201, line: 33, type: !6024, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4053, retainedNodes: !14205)
!14205 = !{!14206, !14207, !14208}
!14206 = !DILocalVariable(name: "unused1", arg: 1, scope: !14204, file: !14201, line: 33, type: !124)
!14207 = !DILocalVariable(name: "unused2", arg: 2, scope: !14204, file: !14201, line: 33, type: !124)
!14208 = !DILocalVariable(name: "unused3", arg: 3, scope: !14204, file: !14201, line: 33, type: !124)
!14209 = !DILocation(line: 0, scope: !14204)
!14210 = !DILocation(line: 41, column: 2, scope: !14204)
!14211 = !DILocation(line: 55, column: 2, scope: !14212, inlinedAt: !14216)
!14212 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7842, file: !7842, line: 42, type: !7843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4053, retainedNodes: !14213)
!14213 = !{!14214, !14215}
!14214 = !DILocalVariable(name: "key", scope: !14212, file: !7842, line: 44, type: !32)
!14215 = !DILocalVariable(name: "tmp", scope: !14212, file: !7842, line: 53, type: !32)
!14216 = distinct !DILocation(line: 62, column: 10, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14204, file: !14201, line: 41, column: 15)
!14218 = !{i64 1619895}
!14219 = !DILocation(line: 0, scope: !14212, inlinedAt: !14216)
!14220 = !DILocation(line: 86, column: 3, scope: !14217)
!14221 = distinct !{!14221, !14210, !14222}
!14222 = !DILocation(line: 105, column: 2, scope: !14204)
!14223 = distinct !DISubprogram(name: "k_cpu_idle", scope: !1111, file: !1111, line: 5627, type: !4072, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4053, retainedNodes: !1126)
!14224 = !DILocation(line: 5629, column: 2, scope: !14223)
!14225 = !DILocation(line: 5630, column: 1, scope: !14223)
!14226 = !DISubprogram(name: "arch_cpu_idle", scope: !6022, file: !6022, line: 167, type: !4072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!14227 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3598, file: !3598, line: 93, type: !14228, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14230)
!14228 = !DISubroutineType(types: !14229)
!14229 = !{!1731, !3493, !3493}
!14230 = !{!14231, !14232, !14233, !14234}
!14231 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14227, file: !3598, line: 93, type: !3493)
!14232 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14227, file: !3598, line: 94, type: !3493)
!14233 = !DILocalVariable(name: "b1", scope: !14227, file: !3598, line: 97, type: !1731)
!14234 = !DILocalVariable(name: "b2", scope: !14227, file: !3598, line: 98, type: !1731)
!14235 = !DILocation(line: 0, scope: !14227)
!14236 = !DILocation(line: 97, column: 30, scope: !14227)
!14237 = !DILocation(line: 98, column: 30, scope: !14227)
!14238 = !DILocation(line: 100, column: 9, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14227, file: !3598, line: 100, column: 6)
!14240 = !DILocation(line: 100, column: 6, scope: !14227)
!14241 = !DILocation(line: 125, column: 1, scope: !14227)
!14242 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3598, file: !3598, line: 428, type: !14243, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14245)
!14243 = !DISubroutineType(types: !14244)
!14244 = !{null, !3493}
!14245 = !{!14246}
!14246 = !DILocalVariable(name: "curr", arg: 1, scope: !14242, file: !3598, line: 428, type: !3493)
!14247 = !DILocation(line: 0, scope: !14242)
!14248 = !DILocation(line: 434, column: 6, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14242, file: !3598, line: 434, column: 6)
!14250 = !DILocation(line: 434, column: 23, scope: !14249)
!14251 = !DILocation(line: 434, column: 6, scope: !14242)
!14252 = !DILocation(line: 435, column: 50, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14249, file: !3598, line: 434, column: 29)
!14254 = !DILocation(line: 435, column: 48, scope: !14253)
!14255 = !DILocation(line: 435, column: 29, scope: !14253)
!14256 = !DILocation(line: 436, column: 24, scope: !14253)
!14257 = !DILocation(line: 436, column: 3, scope: !14253)
!14258 = !DILocation(line: 437, column: 2, scope: !14253)
!14259 = !DILocation(line: 438, column: 1, scope: !14242)
!14260 = distinct !DISubprogram(name: "slice_time", scope: !3598, file: !3598, line: 407, type: !14261, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14263)
!14261 = !DISubroutineType(types: !14262)
!14262 = !{!125, !3493}
!14263 = !{!14264, !14265}
!14264 = !DILocalVariable(name: "curr", arg: 1, scope: !14260, file: !3598, line: 407, type: !3493)
!14265 = !DILocalVariable(name: "ret", scope: !14260, file: !3598, line: 409, type: !125)
!14266 = !DILocation(line: 0, scope: !14260)
!14267 = !DILocation(line: 409, column: 12, scope: !14260)
!14268 = !DILocation(line: 416, column: 2, scope: !14260)
!14269 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3598, file: !3598, line: 440, type: !14270, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14272)
!14270 = !DISubroutineType(types: !14271)
!14271 = !{null, !1731, !125}
!14272 = !{!14273, !14274, !14275, !14281}
!14273 = !DILocalVariable(name: "slice", arg: 1, scope: !14269, file: !3598, line: 440, type: !1731)
!14274 = !DILocalVariable(name: "prio", arg: 2, scope: !14269, file: !3598, line: 440, type: !125)
!14275 = !DILocalVariable(name: "__i", scope: !14276, file: !3598, line: 442, type: !14277)
!14276 = distinct !DILexicalBlock(scope: !14269, file: !3598, line: 442, column: 2)
!14277 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1125, line: 106, baseType: !14278)
!14278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1125, line: 32, size: 32, elements: !14279)
!14279 = !{!14280}
!14280 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14278, file: !1125, line: 33, baseType: !125, size: 32)
!14281 = !DILocalVariable(name: "__key", scope: !14276, file: !3598, line: 442, type: !14277)
!14282 = !DILocation(line: 0, scope: !14269)
!14283 = !DILocation(line: 0, scope: !14276)
!14284 = !DILocalVariable(name: "l", arg: 1, scope: !14285, file: !1125, line: 136, type: !14288)
!14285 = distinct !DISubprogram(name: "k_spin_lock", scope: !1125, file: !1125, line: 136, type: !14286, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14289)
!14286 = !DISubroutineType(types: !14287)
!14287 = !{!14277, !14288}
!14288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 32)
!14289 = !{!14284, !14290}
!14290 = !DILocalVariable(name: "k", scope: !14285, file: !1125, line: 139, type: !14277)
!14291 = !DILocation(line: 0, scope: !14285, inlinedAt: !14292)
!14292 = distinct !DILocation(line: 442, column: 2, scope: !14276)
!14293 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !14298)
!14294 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7842, file: !7842, line: 42, type: !7843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14295)
!14295 = !{!14296, !14297}
!14296 = !DILocalVariable(name: "key", scope: !14294, file: !7842, line: 44, type: !32)
!14297 = !DILocalVariable(name: "tmp", scope: !14294, file: !7842, line: 53, type: !32)
!14298 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !14292)
!14299 = !{i64 1663866}
!14300 = !DILocation(line: 0, scope: !14294, inlinedAt: !14298)
!14301 = !DILocation(line: 443, column: 29, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14303, file: !3598, line: 442, column: 26)
!14303 = distinct !DILexicalBlock(scope: !14276, file: !3598, line: 442, column: 2)
!14304 = !DILocation(line: 444, column: 17, scope: !14302)
!14305 = !DILocation(line: 445, column: 51, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14302, file: !3598, line: 445, column: 7)
!14307 = !DILocation(line: 445, column: 7, scope: !14302)
!14308 = !DILocation(line: 0, scope: !14302)
!14309 = !DILocation(line: 451, column: 18, scope: !14302)
!14310 = !DILocation(line: 452, column: 3, scope: !14302)
!14311 = !DILocalVariable(name: "key", arg: 2, scope: !14312, file: !1125, line: 190, type: !14277)
!14312 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1125, file: !1125, line: 189, type: !14313, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14315)
!14313 = !DISubroutineType(types: !14314)
!14314 = !{null, !14288, !14277}
!14315 = !{!14316, !14311}
!14316 = !DILocalVariable(name: "l", arg: 1, scope: !14312, file: !1125, line: 189, type: !14288)
!14317 = !DILocation(line: 0, scope: !14312, inlinedAt: !14318)
!14318 = distinct !DILocation(line: 442, column: 2, scope: !14303)
!14319 = !DILocalVariable(name: "key", arg: 1, scope: !14320, file: !7842, line: 84, type: !32)
!14320 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14321)
!14321 = !{!14319}
!14322 = !DILocation(line: 0, scope: !14320, inlinedAt: !14323)
!14323 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14318)
!14324 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14323)
!14325 = !{i64 1664683}
!14326 = !DILocation(line: 454, column: 1, scope: !14269)
!14327 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14118, file: !14118, line: 389, type: !10572, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14328)
!14328 = !{!14329}
!14329 = !DILocalVariable(name: "t", arg: 1, scope: !14327, file: !14118, line: 389, type: !208)
!14330 = !DILocation(line: 0, scope: !14327)
!14331 = !DILocalVariable(name: "t", arg: 1, scope: !14332, file: !14118, line: 102, type: !2271)
!14332 = distinct !DISubprogram(name: "z_tmcvt", scope: !14118, file: !14118, line: 102, type: !14126, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14333)
!14333 = !{!14331, !14334, !14335, !14336, !14337, !14338, !14339, !14340, !14341, !14342, !14343}
!14334 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14332, file: !14118, line: 102, type: !208)
!14335 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14332, file: !14118, line: 103, type: !208)
!14336 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14332, file: !14118, line: 103, type: !153)
!14337 = !DILocalVariable(name: "result32", arg: 5, scope: !14332, file: !14118, line: 104, type: !153)
!14338 = !DILocalVariable(name: "round_up", arg: 6, scope: !14332, file: !14118, line: 104, type: !153)
!14339 = !DILocalVariable(name: "round_off", arg: 7, scope: !14332, file: !14118, line: 105, type: !153)
!14340 = !DILocalVariable(name: "mul_ratio", scope: !14332, file: !14118, line: 107, type: !153)
!14341 = !DILocalVariable(name: "div_ratio", scope: !14332, file: !14118, line: 109, type: !153)
!14342 = !DILocalVariable(name: "off", scope: !14332, file: !14118, line: 116, type: !2271)
!14343 = !DILocalVariable(name: "rdivisor", scope: !14344, file: !14118, line: 119, type: !208)
!14344 = distinct !DILexicalBlock(scope: !14345, file: !14118, line: 118, column: 18)
!14345 = distinct !DILexicalBlock(scope: !14332, file: !14118, line: 118, column: 6)
!14346 = !DILocation(line: 0, scope: !14332, inlinedAt: !14347)
!14347 = distinct !DILocation(line: 392, column: 9, scope: !14327)
!14348 = !DILocation(line: 143, column: 25, scope: !14349, inlinedAt: !14347)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !14118, line: 142, column: 17)
!14350 = distinct !DILexicalBlock(scope: !14351, file: !14118, line: 142, column: 7)
!14351 = distinct !DILexicalBlock(scope: !14352, file: !14118, line: 141, column: 24)
!14352 = distinct !DILexicalBlock(scope: !14353, file: !14118, line: 141, column: 13)
!14353 = distinct !DILexicalBlock(scope: !14332, file: !14118, line: 134, column: 6)
!14354 = !DILocation(line: 392, column: 2, scope: !14327)
!14355 = distinct !DISubprogram(name: "z_time_slice", scope: !3598, file: !3598, line: 502, type: !13514, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14356)
!14356 = !{!14357, !14358}
!14357 = !DILocalVariable(name: "ticks", arg: 1, scope: !14355, file: !3598, line: 502, type: !125)
!14358 = !DILocalVariable(name: "key", scope: !14355, file: !3598, line: 511, type: !14277)
!14359 = !DILocation(line: 0, scope: !14355)
!14360 = !DILocation(line: 0, scope: !14285, inlinedAt: !14361)
!14361 = distinct !DILocation(line: 511, column: 25, scope: !14355)
!14362 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !14361)
!14364 = !DILocation(line: 0, scope: !14294, inlinedAt: !14363)
!14365 = !DILocation(line: 514, column: 6, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14355, file: !3598, line: 514, column: 6)
!14367 = !DILocation(line: 514, column: 25, scope: !14366)
!14368 = !DILocation(line: 514, column: 22, scope: !14366)
!14369 = !DILocation(line: 514, column: 6, scope: !14355)
!14370 = !DILocation(line: 515, column: 3, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14366, file: !3598, line: 514, column: 35)
!14372 = !DILocation(line: 0, scope: !14312, inlinedAt: !14373)
!14373 = distinct !DILocation(line: 516, column: 3, scope: !14371)
!14374 = !DILocation(line: 0, scope: !14320, inlinedAt: !14375)
!14375 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14373)
!14376 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14375)
!14377 = !DILocation(line: 517, column: 3, scope: !14371)
!14378 = !DILocation(line: 519, column: 18, scope: !14355)
!14379 = !DILocation(line: 522, column: 6, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14355, file: !3598, line: 522, column: 6)
!14381 = !DILocation(line: 522, column: 27, scope: !14380)
!14382 = !DILocation(line: 522, column: 30, scope: !14380)
!14383 = !DILocation(line: 522, column: 6, scope: !14355)
!14384 = !DILocation(line: 523, column: 30, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !3598, line: 523, column: 7)
!14386 = distinct !DILexicalBlock(scope: !14380, file: !3598, line: 522, column: 51)
!14387 = !DILocation(line: 523, column: 13, scope: !14385)
!14388 = !DILocation(line: 523, column: 7, scope: !14386)
!14389 = !DILocation(line: 530, column: 10, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14385, file: !3598, line: 523, column: 43)
!14391 = !DILocation(line: 531, column: 3, scope: !14390)
!14392 = !DILocation(line: 532, column: 30, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14385, file: !3598, line: 531, column: 10)
!14394 = !DILocation(line: 535, column: 29, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14380, file: !3598, line: 534, column: 9)
!14396 = !DILocation(line: 0, scope: !14312, inlinedAt: !14397)
!14397 = distinct !DILocation(line: 537, column: 2, scope: !14355)
!14398 = !DILocation(line: 0, scope: !14320, inlinedAt: !14399)
!14399 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14397)
!14400 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14399)
!14401 = !DILocation(line: 538, column: 1, scope: !14355)
!14402 = distinct !DISubprogram(name: "sliceable", scope: !3598, file: !3598, line: 468, type: !14403, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14405)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{!153, !3493}
!14405 = !{!14406, !14407}
!14406 = !DILocalVariable(name: "thread", arg: 1, scope: !14402, file: !3598, line: 468, type: !3493)
!14407 = !DILocalVariable(name: "ret", scope: !14402, file: !3598, line: 470, type: !153)
!14408 = !DILocation(line: 0, scope: !14402)
!14409 = !DILocation(line: 470, column: 13, scope: !14402)
!14410 = !DILocation(line: 471, column: 3, scope: !14402)
!14411 = !DILocation(line: 471, column: 7, scope: !14402)
!14412 = !DILocation(line: 472, column: 3, scope: !14402)
!14413 = !DILocation(line: 472, column: 37, scope: !14402)
!14414 = !DILocation(line: 472, column: 24, scope: !14402)
!14415 = !DILocation(line: 472, column: 43, scope: !14402)
!14416 = !DILocation(line: 472, column: 7, scope: !14402)
!14417 = !DILocation(line: 473, column: 3, scope: !14402)
!14418 = !DILocation(line: 473, column: 7, scope: !14402)
!14419 = !DILocation(line: 473, column: 6, scope: !14402)
!14420 = !DILocation(line: 479, column: 2, scope: !14402)
!14421 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3598, file: !3598, line: 482, type: !14422, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14424)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{!14277, !14277}
!14424 = !{!14425, !14426}
!14425 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14421, file: !3598, line: 482, type: !14277)
!14426 = !DILocalVariable(name: "curr", scope: !14421, file: !3598, line: 484, type: !3493)
!14427 = !DILocation(line: 0, scope: !14421)
!14428 = !DILocation(line: 484, column: 26, scope: !14421)
!14429 = !DILocation(line: 493, column: 7, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14421, file: !3598, line: 493, column: 6)
!14431 = !DILocation(line: 493, column: 6, scope: !14421)
!14432 = !DILocation(line: 494, column: 3, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14430, file: !3598, line: 493, column: 49)
!14434 = !DILocation(line: 495, column: 2, scope: !14433)
!14435 = !DILocation(line: 496, column: 2, scope: !14421)
!14436 = !DILocation(line: 499, column: 1, scope: !14421)
!14437 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13557, file: !13557, line: 106, type: !14403, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14438)
!14438 = !{!14439, !14440}
!14439 = !DILocalVariable(name: "thread", arg: 1, scope: !14437, file: !13557, line: 106, type: !3493)
!14440 = !DILocalVariable(name: "state", scope: !14437, file: !13557, line: 108, type: !150)
!14441 = !DILocation(line: 0, scope: !14437)
!14442 = !DILocation(line: 108, column: 31, scope: !14437)
!14443 = !DILocation(line: 110, column: 16, scope: !14437)
!14444 = !DILocation(line: 111, column: 41, scope: !14437)
!14445 = !DILocation(line: 110, column: 2, scope: !14437)
!14446 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3598, file: !3598, line: 393, type: !14243, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14447)
!14447 = !{!14448}
!14448 = !DILocalVariable(name: "thread", arg: 1, scope: !14446, file: !3598, line: 393, type: !3493)
!14449 = !DILocation(line: 0, scope: !14446)
!14450 = !DILocation(line: 395, column: 6, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14446, file: !3598, line: 395, column: 6)
!14452 = !DILocation(line: 395, column: 6, scope: !14446)
!14453 = !DILocalVariable(name: "thread", arg: 1, scope: !14454, file: !3598, line: 264, type: !3493)
!14454 = distinct !DISubprogram(name: "dequeue_thread", scope: !3598, file: !3598, line: 264, type: !14243, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14455)
!14455 = !{!14453}
!14456 = !DILocation(line: 0, scope: !14454, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 396, column: 3, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14451, file: !3598, line: 395, column: 34)
!14459 = !DILocation(line: 266, column: 15, scope: !14454, inlinedAt: !14457)
!14460 = !DILocation(line: 266, column: 28, scope: !14454, inlinedAt: !14457)
!14461 = !DILocalVariable(name: "thread", arg: 1, scope: !14462, file: !3598, line: 232, type: !3493)
!14462 = distinct !DISubprogram(name: "runq_remove", scope: !3598, file: !3598, line: 232, type: !14243, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14463)
!14463 = !{!14461}
!14464 = !DILocation(line: 0, scope: !14462, inlinedAt: !14465)
!14465 = distinct !DILocation(line: 268, column: 3, scope: !14466, inlinedAt: !14457)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !3598, line: 267, column: 35)
!14467 = distinct !DILexicalBlock(scope: !14454, file: !3598, line: 267, column: 6)
!14468 = !DILocation(line: 234, column: 2, scope: !14462, inlinedAt: !14465)
!14469 = !DILocation(line: 397, column: 2, scope: !14458)
!14470 = !DILocalVariable(name: "thread", arg: 1, scope: !14471, file: !3598, line: 250, type: !3493)
!14471 = distinct !DISubprogram(name: "queue_thread", scope: !3598, file: !3598, line: 250, type: !14243, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14472)
!14472 = !{!14470}
!14473 = !DILocation(line: 0, scope: !14471, inlinedAt: !14474)
!14474 = distinct !DILocation(line: 398, column: 2, scope: !14446)
!14475 = !DILocation(line: 252, column: 15, scope: !14471, inlinedAt: !14474)
!14476 = !DILocation(line: 252, column: 28, scope: !14471, inlinedAt: !14474)
!14477 = !DILocalVariable(name: "thread", arg: 1, scope: !14478, file: !3598, line: 227, type: !3493)
!14478 = distinct !DISubprogram(name: "runq_add", scope: !3598, file: !3598, line: 227, type: !14243, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14479)
!14479 = !{!14477}
!14480 = !DILocation(line: 0, scope: !14478, inlinedAt: !14481)
!14481 = distinct !DILocation(line: 254, column: 3, scope: !14482, inlinedAt: !14474)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !3598, line: 253, column: 35)
!14483 = distinct !DILexicalBlock(scope: !14471, file: !3598, line: 253, column: 6)
!14484 = !DILocalVariable(name: "pq", arg: 1, scope: !14485, file: !3598, line: 181, type: !14488)
!14485 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3598, file: !3598, line: 181, type: !14486, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14489)
!14486 = !DISubroutineType(types: !14487)
!14487 = !{null, !14488, !3493}
!14488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 32)
!14489 = !{!14484, !14490, !14491}
!14490 = !DILocalVariable(name: "thread", arg: 2, scope: !14485, file: !3598, line: 182, type: !3493)
!14491 = !DILocalVariable(name: "t", scope: !14485, file: !3598, line: 184, type: !3493)
!14492 = !DILocation(line: 0, scope: !14485, inlinedAt: !14493)
!14493 = distinct !DILocation(line: 229, column: 2, scope: !14478, inlinedAt: !14481)
!14494 = !DILocation(line: 188, column: 2, scope: !14495, inlinedAt: !14493)
!14495 = distinct !DILexicalBlock(scope: !14485, file: !3598, line: 188, column: 2)
!14496 = !DILocation(line: 188, column: 2, scope: !14497, inlinedAt: !14493)
!14497 = distinct !DILexicalBlock(scope: !14495, file: !3598, line: 188, column: 2)
!14498 = !DILocation(line: 0, scope: !14495, inlinedAt: !14493)
!14499 = !DILocation(line: 189, column: 7, scope: !14500, inlinedAt: !14493)
!14500 = distinct !DILexicalBlock(scope: !14501, file: !3598, line: 189, column: 7)
!14501 = distinct !DILexicalBlock(scope: !14497, file: !3598, line: 188, column: 56)
!14502 = !DILocation(line: 189, column: 35, scope: !14500, inlinedAt: !14493)
!14503 = !DILocation(line: 189, column: 7, scope: !14501, inlinedAt: !14493)
!14504 = !DILocation(line: 191, column: 21, scope: !14505, inlinedAt: !14493)
!14505 = distinct !DILexicalBlock(scope: !14500, file: !3598, line: 189, column: 40)
!14506 = !DILocation(line: 190, column: 4, scope: !14505, inlinedAt: !14493)
!14507 = !DILocation(line: 192, column: 4, scope: !14505, inlinedAt: !14493)
!14508 = distinct !{!14508, !14494, !14509}
!14509 = !DILocation(line: 194, column: 2, scope: !14495, inlinedAt: !14493)
!14510 = !DILocation(line: 196, column: 37, scope: !14485, inlinedAt: !14493)
!14511 = !DILocation(line: 196, column: 2, scope: !14485, inlinedAt: !14493)
!14512 = !DILocation(line: 197, column: 1, scope: !14485, inlinedAt: !14493)
!14513 = !DILocation(line: 399, column: 25, scope: !14446)
!14514 = !DILocation(line: 399, column: 22, scope: !14446)
!14515 = !DILocation(line: 399, column: 2, scope: !14446)
!14516 = !DILocation(line: 400, column: 1, scope: !14446)
!14517 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13557, file: !13557, line: 136, type: !14403, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14518)
!14518 = !{!14519}
!14519 = !DILocalVariable(name: "thread", arg: 1, scope: !14517, file: !13557, line: 136, type: !3493)
!14520 = !DILocation(line: 0, scope: !14517)
!14521 = !DILocation(line: 138, column: 9, scope: !14517)
!14522 = !DILocation(line: 138, column: 2, scope: !14517)
!14523 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3598, file: !3598, line: 1137, type: !14486, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14524)
!14524 = !{!14525, !14526}
!14525 = !DILocalVariable(name: "pq", arg: 1, scope: !14523, file: !3598, line: 1137, type: !14488)
!14526 = !DILocalVariable(name: "thread", arg: 2, scope: !14523, file: !3598, line: 1137, type: !3493)
!14527 = !DILocation(line: 0, scope: !14523)
!14528 = !DILocation(line: 1141, column: 33, scope: !14523)
!14529 = !DILocation(line: 1141, column: 2, scope: !14523)
!14530 = !DILocation(line: 1142, column: 1, scope: !14523)
!14531 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !1030, file: !1030, line: 294, type: !14532, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14534)
!14532 = !DISubroutineType(types: !14533)
!14533 = !{!3594, !14488}
!14534 = !{!14535}
!14535 = !DILocalVariable(name: "list", arg: 1, scope: !14531, file: !1030, line: 294, type: !14488)
!14536 = !DILocation(line: 0, scope: !14531)
!14537 = !DILocation(line: 296, column: 9, scope: !14531)
!14538 = !DILocation(line: 296, column: 49, scope: !14531)
!14539 = !DILocation(line: 296, column: 2, scope: !14531)
!14540 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !1030, file: !1030, line: 443, type: !14541, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14543)
!14541 = !DISubroutineType(types: !14542)
!14542 = !{null, !3594, !3594}
!14543 = !{!14544, !14545, !14546}
!14544 = !DILocalVariable(name: "successor", arg: 1, scope: !14540, file: !1030, line: 443, type: !3594)
!14545 = !DILocalVariable(name: "node", arg: 2, scope: !14540, file: !1030, line: 443, type: !3594)
!14546 = !DILocalVariable(name: "prev", scope: !14540, file: !1030, line: 445, type: !14547)
!14547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3594)
!14548 = !DILocation(line: 0, scope: !14540)
!14549 = !DILocation(line: 445, column: 39, scope: !14540)
!14550 = !DILocation(line: 447, column: 8, scope: !14540)
!14551 = !DILocation(line: 447, column: 13, scope: !14540)
!14552 = !DILocation(line: 448, column: 8, scope: !14540)
!14553 = !DILocation(line: 448, column: 13, scope: !14540)
!14554 = !DILocation(line: 449, column: 8, scope: !14540)
!14555 = !DILocation(line: 449, column: 13, scope: !14540)
!14556 = !DILocation(line: 450, column: 18, scope: !14540)
!14557 = !DILocation(line: 451, column: 1, scope: !14540)
!14558 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !1030, file: !1030, line: 341, type: !14559, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14561)
!14559 = !DISubroutineType(types: !14560)
!14560 = !{!3594, !14488, !3594}
!14561 = !{!14562, !14563}
!14562 = !DILocalVariable(name: "list", arg: 1, scope: !14558, file: !1030, line: 341, type: !14488)
!14563 = !DILocalVariable(name: "node", arg: 2, scope: !14558, file: !1030, line: 342, type: !3594)
!14564 = !DILocation(line: 0, scope: !14558)
!14565 = !DILocation(line: 344, column: 15, scope: !14558)
!14566 = !DILocation(line: 344, column: 9, scope: !14558)
!14567 = !DILocation(line: 344, column: 26, scope: !14558)
!14568 = !DILocation(line: 344, column: 2, scope: !14558)
!14569 = distinct !DISubprogram(name: "sys_dlist_append", scope: !1030, file: !1030, line: 404, type: !14570, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{null, !14488, !3594}
!14572 = !{!14573, !14574, !14575}
!14573 = !DILocalVariable(name: "list", arg: 1, scope: !14569, file: !1030, line: 404, type: !14488)
!14574 = !DILocalVariable(name: "node", arg: 2, scope: !14569, file: !1030, line: 404, type: !3594)
!14575 = !DILocalVariable(name: "tail", scope: !14569, file: !1030, line: 406, type: !14547)
!14576 = !DILocation(line: 0, scope: !14569)
!14577 = !DILocation(line: 406, column: 34, scope: !14569)
!14578 = !DILocation(line: 408, column: 8, scope: !14569)
!14579 = !DILocation(line: 408, column: 13, scope: !14569)
!14580 = !DILocation(line: 409, column: 8, scope: !14569)
!14581 = !DILocation(line: 409, column: 13, scope: !14569)
!14582 = !DILocation(line: 411, column: 8, scope: !14569)
!14583 = !DILocation(line: 411, column: 13, scope: !14569)
!14584 = !DILocation(line: 412, column: 13, scope: !14569)
!14585 = !DILocation(line: 413, column: 1, scope: !14569)
!14586 = distinct !DISubprogram(name: "update_cache", scope: !3598, file: !3598, line: 559, type: !13514, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14587)
!14587 = !{!14588, !14589}
!14588 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14586, file: !3598, line: 559, type: !125)
!14589 = !DILocalVariable(name: "thread", scope: !14586, file: !3598, line: 562, type: !3493)
!14590 = !DILocation(line: 0, scope: !14586)
!14591 = !DILocation(line: 239, column: 9, scope: !14592, inlinedAt: !14595)
!14592 = distinct !DISubprogram(name: "runq_best", scope: !3598, file: !3598, line: 237, type: !14593, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!14593 = !DISubroutineType(types: !14594)
!14594 = !{!3493}
!14595 = distinct !DILocation(line: 314, column: 28, scope: !14596, inlinedAt: !14599)
!14596 = distinct !DISubprogram(name: "next_up", scope: !3598, file: !3598, line: 312, type: !14593, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14597)
!14597 = !{!14598}
!14598 = !DILocalVariable(name: "thread", scope: !14596, file: !3598, line: 314, type: !3493)
!14599 = distinct !DILocation(line: 562, column: 28, scope: !14586)
!14600 = !DILocation(line: 0, scope: !14596, inlinedAt: !14599)
!14601 = !DILocation(line: 340, column: 17, scope: !14596, inlinedAt: !14599)
!14602 = !DILocation(line: 340, column: 9, scope: !14596, inlinedAt: !14599)
!14603 = !DILocalVariable(name: "thread", arg: 1, scope: !14604, file: !3598, line: 127, type: !3493)
!14604 = distinct !DISubprogram(name: "should_preempt", scope: !3598, file: !3598, line: 127, type: !14605, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14607)
!14605 = !DISubroutineType(types: !14606)
!14606 = !{!153, !3493, !125}
!14607 = !{!14603, !14608}
!14608 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14604, file: !3598, line: 128, type: !125)
!14609 = !DILocation(line: 0, scope: !14604, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 564, column: 6, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14586, file: !3598, line: 564, column: 6)
!14612 = !DILocation(line: 133, column: 17, scope: !14613, inlinedAt: !14610)
!14613 = distinct !DILexicalBlock(scope: !14604, file: !3598, line: 133, column: 6)
!14614 = !DILocation(line: 0, scope: !14611)
!14615 = !DILocation(line: 133, column: 6, scope: !14604, inlinedAt: !14610)
!14616 = !DILocation(line: 140, column: 6, scope: !14617, inlinedAt: !14610)
!14617 = distinct !DILexicalBlock(scope: !14604, file: !3598, line: 140, column: 6)
!14618 = !DILocation(line: 140, column: 6, scope: !14604, inlinedAt: !14610)
!14619 = !DILocation(line: 150, column: 9, scope: !14620, inlinedAt: !14610)
!14620 = distinct !DILexicalBlock(scope: !14604, file: !3598, line: 149, column: 6)
!14621 = !DILocation(line: 149, column: 6, scope: !14604, inlinedAt: !14610)
!14622 = !DILocation(line: 157, column: 6, scope: !14623, inlinedAt: !14610)
!14623 = distinct !DILexicalBlock(scope: !14604, file: !3598, line: 157, column: 6)
!14624 = !DILocation(line: 564, column: 6, scope: !14586)
!14625 = !DILocation(line: 566, column: 14, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14627, file: !3598, line: 566, column: 7)
!14627 = distinct !DILexicalBlock(scope: !14611, file: !3598, line: 564, column: 42)
!14628 = !DILocation(line: 566, column: 7, scope: !14627)
!14629 = !DILocation(line: 567, column: 4, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14626, file: !3598, line: 566, column: 27)
!14631 = !DILocation(line: 568, column: 3, scope: !14630)
!14632 = !DILocation(line: 585, column: 1, scope: !14586)
!14633 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3598, file: !3598, line: 1144, type: !14634, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14636)
!14634 = !DISubroutineType(types: !14635)
!14635 = !{!3493, !14488}
!14636 = !{!14637, !14638, !14639}
!14637 = !DILocalVariable(name: "pq", arg: 1, scope: !14633, file: !3598, line: 1144, type: !14488)
!14638 = !DILocalVariable(name: "thread", scope: !14633, file: !3598, line: 1146, type: !3493)
!14639 = !DILocalVariable(name: "n", scope: !14633, file: !3598, line: 1147, type: !3594)
!14640 = !DILocation(line: 0, scope: !14633)
!14641 = !DILocation(line: 1147, column: 19, scope: !14633)
!14642 = !DILocation(line: 1152, column: 2, scope: !14633)
!14643 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13557, file: !13557, line: 115, type: !14403, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14644)
!14644 = !{!14645}
!14645 = !DILocalVariable(name: "thread", arg: 1, scope: !14643, file: !13557, line: 115, type: !3493)
!14646 = !DILocation(line: 0, scope: !14643)
!14647 = !DILocation(line: 117, column: 46, scope: !14643)
!14648 = !DILocation(line: 117, column: 10, scope: !14643)
!14649 = !DILocation(line: 117, column: 9, scope: !14643)
!14650 = !DILocation(line: 117, column: 2, scope: !14643)
!14651 = distinct !DISubprogram(name: "is_preempt", scope: !3598, file: !3598, line: 62, type: !14261, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14652)
!14652 = !{!14653}
!14653 = !DILocalVariable(name: "thread", arg: 1, scope: !14651, file: !3598, line: 62, type: !3493)
!14654 = !DILocation(line: 0, scope: !14651)
!14655 = !DILocation(line: 65, column: 22, scope: !14651)
!14656 = !DILocation(line: 65, column: 30, scope: !14651)
!14657 = !DILocation(line: 65, column: 2, scope: !14651)
!14658 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13951, file: !13951, line: 35, type: !14659, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14663)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!153, !14661}
!14661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14662, size: 32)
!14662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3544)
!14663 = !{!14664}
!14664 = !DILocalVariable(name: "to", arg: 1, scope: !14658, file: !13951, line: 35, type: !14661)
!14665 = !DILocation(line: 0, scope: !14658)
!14666 = !DILocation(line: 37, column: 35, scope: !14658)
!14667 = !DILocation(line: 37, column: 10, scope: !14658)
!14668 = !DILocation(line: 37, column: 9, scope: !14658)
!14669 = !DILocation(line: 37, column: 2, scope: !14658)
!14670 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !1030, file: !1030, line: 225, type: !14671, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14675)
!14671 = !DISubroutineType(types: !14672)
!14672 = !{!153, !14673}
!14673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14674, size: 32)
!14674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3503)
!14675 = !{!14676}
!14676 = !DILocalVariable(name: "node", arg: 1, scope: !14670, file: !1030, line: 225, type: !14673)
!14677 = !DILocation(line: 0, scope: !14670)
!14678 = !DILocation(line: 227, column: 15, scope: !14670)
!14679 = !DILocation(line: 227, column: 20, scope: !14670)
!14680 = !DILocation(line: 227, column: 2, scope: !14670)
!14681 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !1030, file: !1030, line: 325, type: !14559, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14682)
!14682 = !{!14683, !14684}
!14683 = !DILocalVariable(name: "list", arg: 1, scope: !14681, file: !1030, line: 325, type: !14488)
!14684 = !DILocalVariable(name: "node", arg: 2, scope: !14681, file: !1030, line: 326, type: !3594)
!14685 = !DILocation(line: 0, scope: !14681)
!14686 = !DILocation(line: 328, column: 24, scope: !14681)
!14687 = !DILocation(line: 328, column: 15, scope: !14681)
!14688 = !DILocation(line: 328, column: 9, scope: !14681)
!14689 = !DILocation(line: 328, column: 45, scope: !14681)
!14690 = !DILocation(line: 328, column: 2, scope: !14681)
!14691 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !1030, file: !1030, line: 266, type: !14692, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14694)
!14692 = !DISubroutineType(types: !14693)
!14693 = !{!153, !14488}
!14694 = !{!14695}
!14695 = !DILocalVariable(name: "list", arg: 1, scope: !14691, file: !1030, line: 266, type: !14488)
!14696 = !DILocation(line: 0, scope: !14691)
!14697 = !DILocation(line: 268, column: 15, scope: !14691)
!14698 = !DILocation(line: 268, column: 20, scope: !14691)
!14699 = !DILocation(line: 268, column: 2, scope: !14691)
!14700 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !1030, file: !1030, line: 496, type: !14701, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14703)
!14701 = !DISubroutineType(types: !14702)
!14702 = !{null, !3594}
!14703 = !{!14704, !14705, !14706}
!14704 = !DILocalVariable(name: "node", arg: 1, scope: !14700, file: !1030, line: 496, type: !3594)
!14705 = !DILocalVariable(name: "prev", scope: !14700, file: !1030, line: 498, type: !14547)
!14706 = !DILocalVariable(name: "next", scope: !14700, file: !1030, line: 499, type: !14547)
!14707 = !DILocation(line: 0, scope: !14700)
!14708 = !DILocation(line: 498, column: 34, scope: !14700)
!14709 = !DILocation(line: 499, column: 34, scope: !14700)
!14710 = !DILocation(line: 501, column: 8, scope: !14700)
!14711 = !DILocation(line: 501, column: 13, scope: !14700)
!14712 = !DILocation(line: 502, column: 8, scope: !14700)
!14713 = !DILocation(line: 502, column: 13, scope: !14700)
!14714 = !DILocation(line: 503, column: 2, scope: !14700)
!14715 = !DILocation(line: 504, column: 1, scope: !14700)
!14716 = distinct !DISubprogram(name: "sys_dnode_init", scope: !1030, file: !1030, line: 211, type: !14701, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14717)
!14717 = !{!14718}
!14718 = !DILocalVariable(name: "node", arg: 1, scope: !14716, file: !1030, line: 211, type: !3594)
!14719 = !DILocation(line: 0, scope: !14716)
!14720 = !DILocation(line: 213, column: 8, scope: !14716)
!14721 = !DILocation(line: 213, column: 13, scope: !14716)
!14722 = !DILocation(line: 214, column: 8, scope: !14716)
!14723 = !DILocation(line: 214, column: 13, scope: !14716)
!14724 = !DILocation(line: 215, column: 1, scope: !14716)
!14725 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13557, file: !13557, line: 131, type: !14726, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14728)
!14726 = !DISubroutineType(types: !14727)
!14727 = !{!153, !3493, !208}
!14728 = !{!14729, !14730}
!14729 = !DILocalVariable(name: "thread", arg: 1, scope: !14725, file: !13557, line: 131, type: !3493)
!14730 = !DILocalVariable(name: "state", arg: 2, scope: !14725, file: !13557, line: 131, type: !208)
!14731 = !DILocation(line: 0, scope: !14725)
!14732 = !DILocation(line: 133, column: 23, scope: !14725)
!14733 = !DILocation(line: 133, column: 45, scope: !14725)
!14734 = !DILocation(line: 133, column: 2, scope: !14725)
!14735 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13557, file: !13557, line: 211, type: !14736, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14738)
!14736 = !DISubroutineType(types: !14737)
!14737 = !{!153, !125, !125}
!14738 = !{!14739, !14740}
!14739 = !DILocalVariable(name: "prio", arg: 1, scope: !14735, file: !13557, line: 211, type: !125)
!14740 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14735, file: !13557, line: 211, type: !125)
!14741 = !DILocation(line: 0, scope: !14735)
!14742 = !DILocation(line: 213, column: 9, scope: !14735)
!14743 = !DILocation(line: 213, column: 2, scope: !14735)
!14744 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13557, file: !13557, line: 83, type: !14403, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14745)
!14745 = !{!14746}
!14746 = !DILocalVariable(name: "thread", arg: 1, scope: !14744, file: !13557, line: 83, type: !3493)
!14747 = !DILocation(line: 0, scope: !14744)
!14748 = !DILocation(line: 89, column: 16, scope: !14744)
!14749 = !DILocation(line: 89, column: 2, scope: !14744)
!14750 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13557, file: !13557, line: 206, type: !14736, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14751)
!14751 = !{!14752, !14753}
!14752 = !DILocalVariable(name: "prio1", arg: 1, scope: !14750, file: !13557, line: 206, type: !125)
!14753 = !DILocalVariable(name: "prio2", arg: 2, scope: !14750, file: !13557, line: 206, type: !125)
!14754 = !DILocation(line: 0, scope: !14750)
!14755 = !DILocation(line: 208, column: 15, scope: !14750)
!14756 = !DILocation(line: 208, column: 2, scope: !14750)
!14757 = distinct !DISubprogram(name: "z_ready_thread", scope: !3598, file: !3598, line: 635, type: !14243, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14758)
!14758 = !{!14759, !14760, !14762}
!14759 = !DILocalVariable(name: "thread", arg: 1, scope: !14757, file: !3598, line: 635, type: !3493)
!14760 = !DILocalVariable(name: "__i", scope: !14761, file: !3598, line: 637, type: !14277)
!14761 = distinct !DILexicalBlock(scope: !14757, file: !3598, line: 637, column: 2)
!14762 = !DILocalVariable(name: "__key", scope: !14761, file: !3598, line: 637, type: !14277)
!14763 = !DILocation(line: 0, scope: !14757)
!14764 = !DILocation(line: 0, scope: !14761)
!14765 = !DILocation(line: 0, scope: !14285, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 637, column: 2, scope: !14761)
!14767 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !14766)
!14769 = !DILocation(line: 0, scope: !14294, inlinedAt: !14768)
!14770 = !DILocation(line: 639, column: 4, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14772, file: !3598, line: 638, column: 41)
!14772 = distinct !DILexicalBlock(scope: !14773, file: !3598, line: 638, column: 7)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !3598, line: 637, column: 26)
!14774 = distinct !DILexicalBlock(scope: !14761, file: !3598, line: 637, column: 2)
!14775 = !DILocation(line: 0, scope: !14312, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 637, column: 2, scope: !14774)
!14777 = !DILocation(line: 0, scope: !14320, inlinedAt: !14778)
!14778 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14776)
!14779 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14778)
!14780 = !DILocation(line: 642, column: 1, scope: !14757)
!14781 = distinct !DISubprogram(name: "ready_thread", scope: !3598, file: !3598, line: 617, type: !14243, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14782)
!14782 = !{!14783}
!14783 = !DILocalVariable(name: "thread", arg: 1, scope: !14781, file: !3598, line: 617, type: !3493)
!14784 = !DILocation(line: 0, scope: !14781)
!14785 = !DILocation(line: 626, column: 7, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14781, file: !3598, line: 626, column: 6)
!14787 = !DILocation(line: 626, column: 34, scope: !14786)
!14788 = !DILocation(line: 626, column: 37, scope: !14786)
!14789 = !DILocation(line: 626, column: 6, scope: !14781)
!14790 = !DILocation(line: 0, scope: !14471, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 629, column: 3, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14786, file: !3598, line: 626, column: 64)
!14793 = !DILocation(line: 252, column: 15, scope: !14471, inlinedAt: !14791)
!14794 = !DILocation(line: 252, column: 28, scope: !14471, inlinedAt: !14791)
!14795 = !DILocation(line: 0, scope: !14478, inlinedAt: !14796)
!14796 = distinct !DILocation(line: 254, column: 3, scope: !14482, inlinedAt: !14791)
!14797 = !DILocation(line: 0, scope: !14485, inlinedAt: !14798)
!14798 = distinct !DILocation(line: 229, column: 2, scope: !14478, inlinedAt: !14796)
!14799 = !DILocation(line: 188, column: 2, scope: !14495, inlinedAt: !14798)
!14800 = !DILocation(line: 188, column: 2, scope: !14497, inlinedAt: !14798)
!14801 = !DILocation(line: 0, scope: !14495, inlinedAt: !14798)
!14802 = !DILocation(line: 189, column: 7, scope: !14500, inlinedAt: !14798)
!14803 = !DILocation(line: 189, column: 35, scope: !14500, inlinedAt: !14798)
!14804 = !DILocation(line: 189, column: 7, scope: !14501, inlinedAt: !14798)
!14805 = !DILocation(line: 191, column: 21, scope: !14505, inlinedAt: !14798)
!14806 = !DILocation(line: 190, column: 4, scope: !14505, inlinedAt: !14798)
!14807 = !DILocation(line: 192, column: 4, scope: !14505, inlinedAt: !14798)
!14808 = distinct !{!14808, !14799, !14809}
!14809 = !DILocation(line: 194, column: 2, scope: !14495, inlinedAt: !14798)
!14810 = !DILocation(line: 196, column: 37, scope: !14485, inlinedAt: !14798)
!14811 = !DILocation(line: 196, column: 2, scope: !14485, inlinedAt: !14798)
!14812 = !DILocation(line: 197, column: 1, scope: !14485, inlinedAt: !14798)
!14813 = !DILocation(line: 630, column: 3, scope: !14792)
!14814 = !DILocation(line: 632, column: 2, scope: !14792)
!14815 = !DILocation(line: 633, column: 1, scope: !14781)
!14816 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13557, file: !13557, line: 120, type: !14403, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14817)
!14817 = !{!14818}
!14818 = !DILocalVariable(name: "thread", arg: 1, scope: !14816, file: !13557, line: 120, type: !3493)
!14819 = !DILocation(line: 0, scope: !14816)
!14820 = !DILocation(line: 122, column: 12, scope: !14816)
!14821 = !DILocation(line: 122, column: 62, scope: !14816)
!14822 = !DILocation(line: 123, column: 4, scope: !14816)
!14823 = !DILocation(line: 122, column: 2, scope: !14816)
!14824 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3598, file: !3598, line: 644, type: !14243, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14825)
!14825 = !{!14826, !14827, !14829}
!14826 = !DILocalVariable(name: "thread", arg: 1, scope: !14824, file: !3598, line: 644, type: !3493)
!14827 = !DILocalVariable(name: "__i", scope: !14828, file: !3598, line: 646, type: !14277)
!14828 = distinct !DILexicalBlock(scope: !14824, file: !3598, line: 646, column: 2)
!14829 = !DILocalVariable(name: "__key", scope: !14828, file: !3598, line: 646, type: !14277)
!14830 = !DILocation(line: 0, scope: !14824)
!14831 = !DILocation(line: 0, scope: !14828)
!14832 = !DILocation(line: 0, scope: !14285, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 646, column: 2, scope: !14828)
!14834 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !14835)
!14835 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !14833)
!14836 = !DILocation(line: 0, scope: !14294, inlinedAt: !14835)
!14837 = !DILocation(line: 647, column: 3, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14839, file: !3598, line: 646, column: 26)
!14839 = distinct !DILexicalBlock(scope: !14828, file: !3598, line: 646, column: 2)
!14840 = !DILocation(line: 0, scope: !14312, inlinedAt: !14841)
!14841 = distinct !DILocation(line: 646, column: 2, scope: !14839)
!14842 = !DILocation(line: 0, scope: !14320, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14841)
!14844 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14843)
!14845 = !DILocation(line: 649, column: 1, scope: !14824)
!14846 = distinct !DISubprogram(name: "z_sched_start", scope: !3598, file: !3598, line: 651, type: !14243, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14847)
!14847 = !{!14848, !14849}
!14848 = !DILocalVariable(name: "thread", arg: 1, scope: !14846, file: !3598, line: 651, type: !3493)
!14849 = !DILocalVariable(name: "key", scope: !14846, file: !3598, line: 653, type: !14277)
!14850 = !DILocation(line: 0, scope: !14846)
!14851 = !DILocation(line: 0, scope: !14285, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 653, column: 25, scope: !14846)
!14853 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !14852)
!14855 = !DILocation(line: 0, scope: !14294, inlinedAt: !14854)
!14856 = !DILocation(line: 655, column: 6, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14846, file: !3598, line: 655, column: 6)
!14858 = !DILocation(line: 655, column: 6, scope: !14846)
!14859 = !DILocation(line: 0, scope: !14312, inlinedAt: !14860)
!14860 = distinct !DILocation(line: 656, column: 3, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14857, file: !3598, line: 655, column: 36)
!14862 = !DILocation(line: 0, scope: !14320, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14860)
!14864 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14863)
!14865 = !DILocation(line: 657, column: 3, scope: !14861)
!14866 = !DILocation(line: 660, column: 2, scope: !14846)
!14867 = !DILocation(line: 661, column: 2, scope: !14846)
!14868 = !DILocation(line: 662, column: 2, scope: !14846)
!14869 = !DILocation(line: 663, column: 1, scope: !14846)
!14870 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13557, file: !13557, line: 126, type: !14403, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14871)
!14871 = !{!14872}
!14872 = !DILocalVariable(name: "thread", arg: 1, scope: !14870, file: !13557, line: 126, type: !3493)
!14873 = !DILocation(line: 0, scope: !14870)
!14874 = !DILocation(line: 128, column: 23, scope: !14870)
!14875 = !DILocation(line: 128, column: 36, scope: !14870)
!14876 = !DILocation(line: 128, column: 56, scope: !14870)
!14877 = !DILocation(line: 128, column: 2, scope: !14870)
!14878 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13557, file: !13557, line: 155, type: !14243, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14879)
!14879 = !{!14880}
!14880 = !DILocalVariable(name: "thread", arg: 1, scope: !14878, file: !13557, line: 155, type: !3493)
!14881 = !DILocation(line: 0, scope: !14878)
!14882 = !DILocation(line: 157, column: 15, scope: !14878)
!14883 = !DILocation(line: 157, column: 28, scope: !14878)
!14884 = !DILocation(line: 158, column: 1, scope: !14878)
!14885 = distinct !DISubprogram(name: "z_reschedule", scope: !3598, file: !3598, line: 967, type: !14313, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14886)
!14886 = !{!14887, !14888}
!14887 = !DILocalVariable(name: "lock", arg: 1, scope: !14885, file: !3598, line: 967, type: !14288)
!14888 = !DILocalVariable(name: "key", arg: 2, scope: !14885, file: !3598, line: 967, type: !14277)
!14889 = !DILocation(line: 0, scope: !14885)
!14890 = !DILocation(line: 969, column: 6, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14885, file: !3598, line: 969, column: 6)
!14892 = !DILocation(line: 969, column: 23, scope: !14891)
!14893 = !DILocation(line: 969, column: 26, scope: !14891)
!14894 = !DILocation(line: 969, column: 6, scope: !14885)
!14895 = !DILocalVariable(name: "key", arg: 2, scope: !14896, file: !13661, line: 193, type: !14277)
!14896 = distinct !DISubprogram(name: "z_swap", scope: !13661, file: !13661, line: 193, type: !14897, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14899)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{!125, !14288, !14277}
!14899 = !{!14900, !14895}
!14900 = !DILocalVariable(name: "lock", arg: 1, scope: !14896, file: !13661, line: 193, type: !14288)
!14901 = !DILocation(line: 0, scope: !14896, inlinedAt: !14902)
!14902 = distinct !DILocation(line: 970, column: 3, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14891, file: !3598, line: 969, column: 39)
!14904 = !DILocation(line: 196, column: 9, scope: !14896, inlinedAt: !14902)
!14905 = !DILocation(line: 971, column: 2, scope: !14903)
!14906 = !DILocation(line: 0, scope: !14312, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 972, column: 3, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14891, file: !3598, line: 971, column: 9)
!14909 = !DILocation(line: 0, scope: !14320, inlinedAt: !14910)
!14910 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14907)
!14911 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14910)
!14912 = !DILocation(line: 975, column: 1, scope: !14885)
!14913 = distinct !DISubprogram(name: "resched", scope: !3598, file: !3598, line: 940, type: !14914, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14916)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{!153, !208}
!14916 = !{!14917}
!14917 = !DILocalVariable(name: "key", arg: 1, scope: !14913, file: !3598, line: 940, type: !208)
!14918 = !DILocation(line: 0, scope: !14913)
!14919 = !DILocalVariable(name: "key", arg: 1, scope: !14920, file: !7842, line: 112, type: !32)
!14920 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7842, file: !7842, line: 112, type: !14921, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14923)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{!153, !32}
!14923 = !{!14919}
!14924 = !DILocation(line: 0, scope: !14920, inlinedAt: !14925)
!14925 = distinct !DILocation(line: 946, column: 9, scope: !14913)
!14926 = !DILocation(line: 115, column: 13, scope: !14920, inlinedAt: !14925)
!14927 = !DILocation(line: 946, column: 32, scope: !14913)
!14928 = !DILocation(line: 1031, column: 3, scope: !14929, inlinedAt: !14932)
!14929 = distinct !DISubprogram(name: "__get_IPSR", scope: !9378, file: !9378, line: 1027, type: !9459, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14930)
!14930 = !{!14931}
!14931 = !DILocalVariable(name: "result", scope: !14929, file: !9378, line: 1029, type: !208)
!14932 = distinct !DILocation(line: 48, column: 10, scope: !14933, inlinedAt: !14934)
!14933 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !10350, file: !10350, line: 46, type: !10351, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!14934 = distinct !DILocation(line: 946, column: 36, scope: !14913)
!14935 = !{i64 1941889}
!14936 = !DILocation(line: 0, scope: !14929, inlinedAt: !14932)
!14937 = !DILocation(line: 48, column: 9, scope: !14933, inlinedAt: !14934)
!14938 = !DILocation(line: 946, column: 2, scope: !14913)
!14939 = distinct !DISubprogram(name: "need_swap", scope: !3598, file: !3598, line: 953, type: !10351, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14940)
!14940 = !{!14941}
!14941 = !DILocalVariable(name: "new_thread", scope: !14939, file: !3598, line: 959, type: !3493)
!14942 = !DILocation(line: 962, column: 31, scope: !14939)
!14943 = !DILocation(line: 0, scope: !14939)
!14944 = !DILocation(line: 963, column: 23, scope: !14939)
!14945 = !DILocation(line: 963, column: 20, scope: !14939)
!14946 = !DILocation(line: 963, column: 2, scope: !14939)
!14947 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13661, file: !13661, line: 181, type: !9388, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14948)
!14948 = !{!14949, !14950}
!14949 = !DILocalVariable(name: "key", arg: 1, scope: !14947, file: !13661, line: 181, type: !32)
!14950 = !DILocalVariable(name: "ret", scope: !14947, file: !13661, line: 183, type: !125)
!14951 = !DILocation(line: 0, scope: !14947)
!14952 = !DILocation(line: 185, column: 8, scope: !14947)
!14953 = !DILocation(line: 186, column: 2, scope: !14947)
!14954 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3598, file: !3598, line: 665, type: !14243, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !14955)
!14955 = !{!14956, !14957, !14959}
!14956 = !DILocalVariable(name: "thread", arg: 1, scope: !14954, file: !3598, line: 665, type: !3493)
!14957 = !DILocalVariable(name: "__i", scope: !14958, file: !3598, line: 671, type: !14277)
!14958 = distinct !DILexicalBlock(scope: !14954, file: !3598, line: 671, column: 2)
!14959 = !DILocalVariable(name: "__key", scope: !14958, file: !3598, line: 671, type: !14277)
!14960 = !DILocation(line: 0, scope: !14954)
!14961 = !DILocation(line: 669, column: 8, scope: !14954)
!14962 = !DILocation(line: 0, scope: !14958)
!14963 = !DILocation(line: 0, scope: !14285, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 671, column: 2, scope: !14958)
!14965 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !14966)
!14966 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !14964)
!14967 = !DILocation(line: 0, scope: !14294, inlinedAt: !14966)
!14968 = !DILocation(line: 672, column: 7, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !3598, line: 672, column: 7)
!14970 = distinct !DILexicalBlock(scope: !14971, file: !3598, line: 671, column: 26)
!14971 = distinct !DILexicalBlock(scope: !14958, file: !3598, line: 671, column: 2)
!14972 = !DILocation(line: 672, column: 7, scope: !14970)
!14973 = !DILocation(line: 0, scope: !14454, inlinedAt: !14974)
!14974 = distinct !DILocation(line: 673, column: 4, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14969, file: !3598, line: 672, column: 35)
!14976 = !DILocation(line: 266, column: 15, scope: !14454, inlinedAt: !14974)
!14977 = !DILocation(line: 266, column: 28, scope: !14454, inlinedAt: !14974)
!14978 = !DILocation(line: 0, scope: !14462, inlinedAt: !14979)
!14979 = distinct !DILocation(line: 268, column: 3, scope: !14466, inlinedAt: !14974)
!14980 = !DILocation(line: 234, column: 2, scope: !14462, inlinedAt: !14979)
!14981 = !DILocation(line: 674, column: 3, scope: !14975)
!14982 = !DILocation(line: 675, column: 3, scope: !14970)
!14983 = !DILocation(line: 676, column: 26, scope: !14970)
!14984 = !DILocation(line: 676, column: 23, scope: !14970)
!14985 = !DILocation(line: 676, column: 3, scope: !14970)
!14986 = !DILocation(line: 0, scope: !14312, inlinedAt: !14987)
!14987 = distinct !DILocation(line: 671, column: 2, scope: !14971)
!14988 = !DILocation(line: 0, scope: !14320, inlinedAt: !14989)
!14989 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !14987)
!14990 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !14989)
!14991 = !DILocation(line: 679, column: 16, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14954, file: !3598, line: 679, column: 6)
!14993 = !DILocation(line: 679, column: 13, scope: !14992)
!14994 = !DILocation(line: 679, column: 6, scope: !14954)
!14995 = !DILocation(line: 680, column: 3, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14992, file: !3598, line: 679, column: 26)
!14997 = !DILocation(line: 681, column: 2, scope: !14996)
!14998 = !DILocation(line: 684, column: 1, scope: !14954)
!14999 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13951, file: !13951, line: 52, type: !14261, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15000)
!15000 = !{!15001}
!15001 = !DILocalVariable(name: "thread", arg: 1, scope: !14999, file: !13951, line: 52, type: !3493)
!15002 = !DILocation(line: 0, scope: !14999)
!15003 = !DILocation(line: 54, column: 39, scope: !14999)
!15004 = !DILocation(line: 54, column: 9, scope: !14999)
!15005 = !DILocation(line: 54, column: 2, scope: !14999)
!15006 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13557, file: !13557, line: 141, type: !14243, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15007)
!15007 = !{!15008}
!15008 = !DILocalVariable(name: "thread", arg: 1, scope: !15006, file: !13557, line: 141, type: !3493)
!15009 = !DILocation(line: 0, scope: !15006)
!15010 = !DILocation(line: 143, column: 15, scope: !15006)
!15011 = !DILocation(line: 143, column: 28, scope: !15006)
!15012 = !DILocation(line: 146, column: 1, scope: !15006)
!15013 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13557, file: !13557, line: 73, type: !4072, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!15014 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15015)
!15015 = distinct !DILocation(line: 75, column: 30, scope: !15013)
!15016 = !DILocation(line: 0, scope: !14294, inlinedAt: !15015)
!15017 = !DILocation(line: 75, column: 9, scope: !15013)
!15018 = !DILocation(line: 76, column: 1, scope: !15013)
!15019 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3598, file: !3598, line: 977, type: !9469, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15020)
!15020 = !{!15021}
!15021 = !DILocalVariable(name: "key", arg: 1, scope: !15019, file: !3598, line: 977, type: !208)
!15022 = !DILocation(line: 0, scope: !15019)
!15023 = !DILocation(line: 979, column: 6, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15019, file: !3598, line: 979, column: 6)
!15025 = !DILocation(line: 979, column: 6, scope: !15019)
!15026 = !DILocation(line: 980, column: 3, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15024, file: !3598, line: 979, column: 20)
!15028 = !DILocation(line: 981, column: 2, scope: !15027)
!15029 = !DILocation(line: 0, scope: !14320, inlinedAt: !15030)
!15030 = distinct !DILocation(line: 982, column: 3, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15024, file: !3598, line: 981, column: 9)
!15032 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15030)
!15033 = !DILocation(line: 985, column: 1, scope: !15019)
!15034 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3598, file: !3598, line: 695, type: !14243, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15035)
!15035 = !{!15036, !15037}
!15036 = !DILocalVariable(name: "thread", arg: 1, scope: !15034, file: !3598, line: 695, type: !3493)
!15037 = !DILocalVariable(name: "key", scope: !15034, file: !3598, line: 699, type: !14277)
!15038 = !DILocation(line: 0, scope: !15034)
!15039 = !DILocation(line: 0, scope: !14285, inlinedAt: !15040)
!15040 = distinct !DILocation(line: 699, column: 25, scope: !15034)
!15041 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15042)
!15042 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15040)
!15043 = !DILocation(line: 0, scope: !14294, inlinedAt: !15042)
!15044 = !DILocation(line: 702, column: 7, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15034, file: !3598, line: 702, column: 6)
!15046 = !DILocation(line: 702, column: 6, scope: !15034)
!15047 = !DILocation(line: 0, scope: !14312, inlinedAt: !15048)
!15048 = distinct !DILocation(line: 703, column: 3, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15045, file: !3598, line: 702, column: 38)
!15050 = !DILocation(line: 0, scope: !14320, inlinedAt: !15051)
!15051 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15048)
!15052 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15051)
!15053 = !DILocation(line: 704, column: 3, scope: !15049)
!15054 = !DILocation(line: 707, column: 2, scope: !15034)
!15055 = !DILocation(line: 708, column: 2, scope: !15034)
!15056 = !DILocation(line: 710, column: 2, scope: !15034)
!15057 = !DILocation(line: 713, column: 1, scope: !15034)
!15058 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13557, file: !13557, line: 96, type: !14403, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15059)
!15059 = !{!15060}
!15060 = !DILocalVariable(name: "thread", arg: 1, scope: !15058, file: !13557, line: 96, type: !3493)
!15061 = !DILocation(line: 0, scope: !15058)
!15062 = !DILocation(line: 98, column: 23, scope: !15058)
!15063 = !DILocation(line: 98, column: 36, scope: !15058)
!15064 = !DILocation(line: 98, column: 57, scope: !15058)
!15065 = !DILocation(line: 98, column: 2, scope: !15058)
!15066 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13557, file: !13557, line: 148, type: !14243, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15067)
!15067 = !{!15068}
!15068 = !DILocalVariable(name: "thread", arg: 1, scope: !15066, file: !13557, line: 148, type: !3493)
!15069 = !DILocation(line: 0, scope: !15066)
!15070 = !DILocation(line: 150, column: 15, scope: !15066)
!15071 = !DILocation(line: 150, column: 28, scope: !15066)
!15072 = !DILocation(line: 153, column: 1, scope: !15066)
!15073 = distinct !DISubprogram(name: "z_pend_thread", scope: !3598, file: !3598, line: 770, type: !15074, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15080)
!15074 = !DISubroutineType(types: !15075)
!15075 = !{null, !3493, !3524, !15076}
!15076 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2805, line: 67, baseType: !15077)
!15077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2805, line: 65, size: 64, elements: !15078)
!15078 = !{!15079}
!15079 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15077, file: !2805, line: 66, baseType: !2804, size: 64)
!15080 = !{!15081, !15082, !15083, !15084, !15086}
!15081 = !DILocalVariable(name: "thread", arg: 1, scope: !15073, file: !3598, line: 770, type: !3493)
!15082 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15073, file: !3598, line: 770, type: !3524)
!15083 = !DILocalVariable(name: "timeout", arg: 3, scope: !15073, file: !3598, line: 771, type: !15076)
!15084 = !DILocalVariable(name: "__i", scope: !15085, file: !3598, line: 774, type: !14277)
!15085 = distinct !DILexicalBlock(scope: !15073, file: !3598, line: 774, column: 2)
!15086 = !DILocalVariable(name: "__key", scope: !15085, file: !3598, line: 774, type: !14277)
!15087 = !DILocation(line: 0, scope: !15073)
!15088 = !DILocation(line: 0, scope: !15085)
!15089 = !DILocation(line: 0, scope: !14285, inlinedAt: !15090)
!15090 = distinct !DILocation(line: 774, column: 2, scope: !15085)
!15091 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15092)
!15092 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15090)
!15093 = !DILocation(line: 0, scope: !14294, inlinedAt: !15092)
!15094 = !DILocation(line: 775, column: 3, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15096, file: !3598, line: 774, column: 26)
!15096 = distinct !DILexicalBlock(scope: !15085, file: !3598, line: 774, column: 2)
!15097 = !DILocation(line: 0, scope: !14312, inlinedAt: !15098)
!15098 = distinct !DILocation(line: 774, column: 2, scope: !15096)
!15099 = !DILocation(line: 0, scope: !14320, inlinedAt: !15100)
!15100 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15098)
!15101 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15100)
!15102 = !DILocation(line: 777, column: 1, scope: !15073)
!15103 = distinct !DISubprogram(name: "pend_locked", scope: !3598, file: !3598, line: 760, type: !15074, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15104)
!15104 = !{!15105, !15106, !15107}
!15105 = !DILocalVariable(name: "thread", arg: 1, scope: !15103, file: !3598, line: 760, type: !3493)
!15106 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15103, file: !3598, line: 760, type: !3524)
!15107 = !DILocalVariable(name: "timeout", arg: 3, scope: !15103, file: !3598, line: 761, type: !15076)
!15108 = !DILocation(line: 0, scope: !15103)
!15109 = !DILocation(line: 766, column: 2, scope: !15103)
!15110 = !DILocation(line: 767, column: 2, scope: !15103)
!15111 = !DILocation(line: 768, column: 1, scope: !15103)
!15112 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3598, file: !3598, line: 740, type: !15113, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15115)
!15113 = !DISubroutineType(types: !15114)
!15114 = !{null, !3493, !3524}
!15115 = !{!15116, !15117}
!15116 = !DILocalVariable(name: "thread", arg: 1, scope: !15112, file: !3598, line: 740, type: !3493)
!15117 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15112, file: !3598, line: 740, type: !3524)
!15118 = !DILocation(line: 0, scope: !15112)
!15119 = !DILocation(line: 742, column: 2, scope: !15112)
!15120 = !DILocation(line: 743, column: 2, scope: !15112)
!15121 = !DILocation(line: 747, column: 13, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15112, file: !3598, line: 747, column: 6)
!15123 = !DILocation(line: 747, column: 6, scope: !15112)
!15124 = !DILocation(line: 748, column: 16, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15122, file: !3598, line: 747, column: 22)
!15126 = !DILocation(line: 748, column: 26, scope: !15125)
!15127 = !DILocation(line: 749, column: 28, scope: !15125)
!15128 = !DILocation(line: 0, scope: !14485, inlinedAt: !15129)
!15129 = distinct !DILocation(line: 749, column: 3, scope: !15125)
!15130 = !DILocation(line: 188, column: 2, scope: !14495, inlinedAt: !15129)
!15131 = !DILocation(line: 188, column: 2, scope: !14497, inlinedAt: !15129)
!15132 = !DILocation(line: 0, scope: !14495, inlinedAt: !15129)
!15133 = !DILocation(line: 189, column: 7, scope: !14500, inlinedAt: !15129)
!15134 = !DILocation(line: 189, column: 35, scope: !14500, inlinedAt: !15129)
!15135 = !DILocation(line: 189, column: 7, scope: !14501, inlinedAt: !15129)
!15136 = !DILocation(line: 191, column: 21, scope: !14505, inlinedAt: !15129)
!15137 = !DILocation(line: 190, column: 4, scope: !14505, inlinedAt: !15129)
!15138 = !DILocation(line: 192, column: 4, scope: !14505, inlinedAt: !15129)
!15139 = distinct !{!15139, !15130, !15140}
!15140 = !DILocation(line: 194, column: 2, scope: !14495, inlinedAt: !15129)
!15141 = !DILocation(line: 196, column: 37, scope: !14485, inlinedAt: !15129)
!15142 = !DILocation(line: 196, column: 2, scope: !14485, inlinedAt: !15129)
!15143 = !DILocation(line: 197, column: 1, scope: !14485, inlinedAt: !15129)
!15144 = !DILocation(line: 751, column: 1, scope: !15112)
!15145 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3598, file: !3598, line: 753, type: !15146, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15148)
!15146 = !DISubroutineType(types: !15147)
!15147 = !{null, !3493, !15076}
!15148 = !{!15149, !15150}
!15149 = !DILocalVariable(name: "thread", arg: 1, scope: !15145, file: !3598, line: 753, type: !3493)
!15150 = !DILocalVariable(name: "timeout", arg: 2, scope: !15145, file: !3598, line: 753, type: !15076)
!15151 = !DILocation(line: 0, scope: !15145)
!15152 = !DILocation(line: 755, column: 7, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15145, file: !3598, line: 755, column: 6)
!15154 = !DILocation(line: 755, column: 6, scope: !15145)
!15155 = !DILocation(line: 756, column: 3, scope: !15156)
!15156 = distinct !DILexicalBlock(scope: !15153, file: !3598, line: 755, column: 41)
!15157 = !DILocation(line: 757, column: 2, scope: !15156)
!15158 = !DILocation(line: 758, column: 1, scope: !15145)
!15159 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13951, file: !13951, line: 47, type: !15146, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15160)
!15160 = !{!15161, !15162}
!15161 = !DILocalVariable(name: "thread", arg: 1, scope: !15159, file: !13951, line: 47, type: !3493)
!15162 = !DILocalVariable(name: "ticks", arg: 2, scope: !15159, file: !13951, line: 47, type: !15076)
!15163 = !DILocation(line: 0, scope: !15159)
!15164 = !DILocation(line: 49, column: 30, scope: !15159)
!15165 = !DILocation(line: 49, column: 2, scope: !15159)
!15166 = !DILocation(line: 50, column: 1, scope: !15159)
!15167 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3598, file: !3598, line: 795, type: !3550, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15168)
!15168 = !{!15169, !15170, !15171, !15173, !15174}
!15169 = !DILocalVariable(name: "timeout", arg: 1, scope: !15167, file: !3598, line: 795, type: !3552)
!15170 = !DILocalVariable(name: "thread", scope: !15167, file: !3598, line: 797, type: !3493)
!15171 = !DILocalVariable(name: "__i", scope: !15172, file: !3598, line: 800, type: !14277)
!15172 = distinct !DILexicalBlock(scope: !15167, file: !3598, line: 800, column: 2)
!15173 = !DILocalVariable(name: "__key", scope: !15172, file: !3598, line: 800, type: !14277)
!15174 = !DILocalVariable(name: "killed", scope: !15175, file: !3598, line: 801, type: !153)
!15175 = distinct !DILexicalBlock(scope: !15176, file: !3598, line: 800, column: 26)
!15176 = distinct !DILexicalBlock(scope: !15172, file: !3598, line: 800, column: 2)
!15177 = !DILocation(line: 0, scope: !15167)
!15178 = !DILocation(line: 797, column: 28, scope: !15167)
!15179 = !DILocation(line: 0, scope: !15172)
!15180 = !DILocation(line: 0, scope: !14285, inlinedAt: !15181)
!15181 = distinct !DILocation(line: 800, column: 2, scope: !15172)
!15182 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15181)
!15184 = !DILocation(line: 0, scope: !14294, inlinedAt: !15183)
!15185 = !DILocation(line: 801, column: 27, scope: !15175)
!15186 = !DILocation(line: 801, column: 32, scope: !15175)
!15187 = !DILocation(line: 801, column: 61, scope: !15175)
!15188 = !DILocation(line: 0, scope: !15175)
!15189 = !DILocation(line: 804, column: 7, scope: !15175)
!15190 = !DILocation(line: 805, column: 21, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15192, file: !3598, line: 805, column: 8)
!15192 = distinct !DILexicalBlock(scope: !15193, file: !3598, line: 804, column: 16)
!15193 = distinct !DILexicalBlock(scope: !15175, file: !3598, line: 804, column: 7)
!15194 = !DILocation(line: 805, column: 31, scope: !15191)
!15195 = !DILocation(line: 805, column: 8, scope: !15192)
!15196 = !DILocation(line: 806, column: 5, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15191, file: !3598, line: 805, column: 40)
!15198 = !DILocation(line: 807, column: 4, scope: !15197)
!15199 = !DILocation(line: 808, column: 4, scope: !15192)
!15200 = !DILocation(line: 809, column: 4, scope: !15192)
!15201 = !DILocation(line: 810, column: 4, scope: !15192)
!15202 = !DILocation(line: 811, column: 3, scope: !15192)
!15203 = !DILocation(line: 0, scope: !14312, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 800, column: 2, scope: !15176)
!15205 = !DILocation(line: 0, scope: !14320, inlinedAt: !15206)
!15206 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15204)
!15207 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15206)
!15208 = !DILocation(line: 813, column: 1, scope: !15167)
!15209 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3598, file: !3598, line: 779, type: !14243, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15210)
!15210 = !{!15211}
!15211 = !DILocalVariable(name: "thread", arg: 1, scope: !15209, file: !3598, line: 779, type: !3493)
!15212 = !DILocation(line: 0, scope: !15209)
!15213 = !DILocation(line: 781, column: 2, scope: !15209)
!15214 = !DILocation(line: 782, column: 2, scope: !15209)
!15215 = !DILocation(line: 783, column: 15, scope: !15209)
!15216 = !DILocation(line: 783, column: 25, scope: !15209)
!15217 = !DILocation(line: 784, column: 1, scope: !15209)
!15218 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13557, file: !13557, line: 165, type: !14243, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15219)
!15219 = !{!15220}
!15220 = !DILocalVariable(name: "thread", arg: 1, scope: !15218, file: !13557, line: 165, type: !3493)
!15221 = !DILocation(line: 0, scope: !15218)
!15222 = !DILocation(line: 167, column: 15, scope: !15218)
!15223 = !DILocation(line: 167, column: 28, scope: !15218)
!15224 = !DILocation(line: 168, column: 1, scope: !15218)
!15225 = distinct !DISubprogram(name: "unready_thread", scope: !3598, file: !3598, line: 731, type: !14243, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15226)
!15226 = !{!15227}
!15227 = !DILocalVariable(name: "thread", arg: 1, scope: !15225, file: !3598, line: 731, type: !3493)
!15228 = !DILocation(line: 0, scope: !15225)
!15229 = !DILocation(line: 733, column: 6, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15225, file: !3598, line: 733, column: 6)
!15231 = !DILocation(line: 733, column: 6, scope: !15225)
!15232 = !DILocation(line: 0, scope: !14454, inlinedAt: !15233)
!15233 = distinct !DILocation(line: 734, column: 3, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15230, file: !3598, line: 733, column: 34)
!15235 = !DILocation(line: 266, column: 15, scope: !14454, inlinedAt: !15233)
!15236 = !DILocation(line: 266, column: 28, scope: !14454, inlinedAt: !15233)
!15237 = !DILocation(line: 0, scope: !14462, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 268, column: 3, scope: !14466, inlinedAt: !15233)
!15239 = !DILocation(line: 234, column: 2, scope: !14462, inlinedAt: !15238)
!15240 = !DILocation(line: 735, column: 2, scope: !15234)
!15241 = !DILocation(line: 736, column: 25, scope: !15225)
!15242 = !DILocation(line: 736, column: 22, scope: !15225)
!15243 = !DILocation(line: 736, column: 2, scope: !15225)
!15244 = !DILocation(line: 737, column: 1, scope: !15225)
!15245 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13557, file: !13557, line: 160, type: !14243, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15246)
!15246 = !{!15247}
!15247 = !DILocalVariable(name: "thread", arg: 1, scope: !15245, file: !13557, line: 160, type: !3493)
!15248 = !DILocation(line: 0, scope: !15245)
!15249 = !DILocation(line: 162, column: 15, scope: !15245)
!15250 = !DILocation(line: 162, column: 28, scope: !15245)
!15251 = !DILocation(line: 163, column: 1, scope: !15245)
!15252 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3598, file: !3598, line: 786, type: !14243, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15253)
!15253 = !{!15254, !15255, !15257}
!15254 = !DILocalVariable(name: "thread", arg: 1, scope: !15252, file: !3598, line: 786, type: !3493)
!15255 = !DILocalVariable(name: "__i", scope: !15256, file: !3598, line: 788, type: !14277)
!15256 = distinct !DILexicalBlock(scope: !15252, file: !3598, line: 788, column: 2)
!15257 = !DILocalVariable(name: "__key", scope: !15256, file: !3598, line: 788, type: !14277)
!15258 = !DILocation(line: 0, scope: !15252)
!15259 = !DILocation(line: 0, scope: !15256)
!15260 = !DILocation(line: 0, scope: !14285, inlinedAt: !15261)
!15261 = distinct !DILocation(line: 788, column: 2, scope: !15256)
!15262 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15261)
!15264 = !DILocation(line: 0, scope: !14294, inlinedAt: !15263)
!15265 = !DILocation(line: 789, column: 3, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15267, file: !3598, line: 788, column: 26)
!15267 = distinct !DILexicalBlock(scope: !15256, file: !3598, line: 788, column: 2)
!15268 = !DILocation(line: 0, scope: !14312, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 788, column: 2, scope: !15267)
!15270 = !DILocation(line: 0, scope: !14320, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15269)
!15272 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15271)
!15273 = !DILocation(line: 791, column: 1, scope: !15252)
!15274 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3598, file: !3598, line: 816, type: !15275, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15277)
!15275 = !DISubroutineType(types: !15276)
!15276 = !{!125, !208, !3524, !15076}
!15277 = !{!15278, !15279, !15280, !15281, !15282, !15284}
!15278 = !DILocalVariable(name: "key", arg: 1, scope: !15274, file: !3598, line: 816, type: !208)
!15279 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15274, file: !3598, line: 816, type: !3524)
!15280 = !DILocalVariable(name: "timeout", arg: 3, scope: !15274, file: !3598, line: 816, type: !15076)
!15281 = !DILocalVariable(name: "ret", scope: !15274, file: !3598, line: 828, type: !125)
!15282 = !DILocalVariable(name: "__i", scope: !15283, file: !3598, line: 829, type: !14277)
!15283 = distinct !DILexicalBlock(scope: !15274, file: !3598, line: 829, column: 2)
!15284 = !DILocalVariable(name: "__key", scope: !15283, file: !3598, line: 829, type: !14277)
!15285 = !DILocation(line: 0, scope: !15274)
!15286 = !DILocation(line: 823, column: 14, scope: !15274)
!15287 = !DILocation(line: 823, column: 2, scope: !15274)
!15288 = !DILocation(line: 826, column: 20, scope: !15274)
!15289 = !DILocation(line: 826, column: 18, scope: !15274)
!15290 = !DILocation(line: 828, column: 12, scope: !15274)
!15291 = !DILocation(line: 0, scope: !15283)
!15292 = !DILocation(line: 0, scope: !14285, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 829, column: 2, scope: !15283)
!15294 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15293)
!15296 = !DILocation(line: 0, scope: !14294, inlinedAt: !15295)
!15297 = !DILocation(line: 830, column: 7, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15299, file: !3598, line: 830, column: 7)
!15299 = distinct !DILexicalBlock(scope: !15300, file: !3598, line: 829, column: 26)
!15300 = distinct !DILexicalBlock(scope: !15283, file: !3598, line: 829, column: 2)
!15301 = !DILocation(line: 830, column: 26, scope: !15298)
!15302 = !DILocation(line: 830, column: 23, scope: !15298)
!15303 = !DILocation(line: 830, column: 7, scope: !15299)
!15304 = !DILocation(line: 831, column: 20, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15298, file: !3598, line: 830, column: 36)
!15306 = !DILocation(line: 832, column: 3, scope: !15305)
!15307 = !DILocation(line: 0, scope: !14312, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 829, column: 2, scope: !15300)
!15309 = !DILocation(line: 0, scope: !14320, inlinedAt: !15310)
!15310 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15308)
!15311 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15310)
!15312 = !DILocation(line: 834, column: 2, scope: !15274)
!15313 = distinct !DISubprogram(name: "z_pend_curr", scope: !3598, file: !3598, line: 840, type: !15314, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15316)
!15314 = !DISubroutineType(types: !15315)
!15315 = !{!125, !14288, !14277, !3524, !15076}
!15316 = !{!15317, !15318, !15319, !15320}
!15317 = !DILocalVariable(name: "lock", arg: 1, scope: !15313, file: !3598, line: 840, type: !14288)
!15318 = !DILocalVariable(name: "key", arg: 2, scope: !15313, file: !3598, line: 840, type: !14277)
!15319 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15313, file: !3598, line: 841, type: !3524)
!15320 = !DILocalVariable(name: "timeout", arg: 4, scope: !15313, file: !3598, line: 841, type: !15076)
!15321 = !DILocation(line: 0, scope: !15313)
!15322 = !DILocation(line: 844, column: 20, scope: !15313)
!15323 = !DILocation(line: 844, column: 18, scope: !15313)
!15324 = !DILocation(line: 0, scope: !14285, inlinedAt: !15325)
!15325 = distinct !DILocation(line: 856, column: 9, scope: !15313)
!15326 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15325)
!15328 = !DILocation(line: 0, scope: !14294, inlinedAt: !15327)
!15329 = !DILocation(line: 857, column: 14, scope: !15313)
!15330 = !DILocation(line: 857, column: 2, scope: !15313)
!15331 = !DILocation(line: 0, scope: !14896, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 859, column: 9, scope: !15313)
!15333 = !DILocation(line: 196, column: 9, scope: !14896, inlinedAt: !15332)
!15334 = !DILocation(line: 859, column: 2, scope: !15313)
!15335 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3598, file: !3598, line: 862, type: !15336, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15338)
!15336 = !DISubroutineType(types: !15337)
!15337 = !{!3493, !3524}
!15338 = !{!15339, !15340, !15341, !15343}
!15339 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15335, file: !3598, line: 862, type: !3524)
!15340 = !DILocalVariable(name: "thread", scope: !15335, file: !3598, line: 864, type: !3493)
!15341 = !DILocalVariable(name: "__i", scope: !15342, file: !3598, line: 866, type: !14277)
!15342 = distinct !DILexicalBlock(scope: !15335, file: !3598, line: 866, column: 2)
!15343 = !DILocalVariable(name: "__key", scope: !15342, file: !3598, line: 866, type: !14277)
!15344 = !DILocation(line: 0, scope: !15335)
!15345 = !DILocation(line: 0, scope: !15342)
!15346 = !DILocation(line: 0, scope: !14285, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 866, column: 2, scope: !15342)
!15348 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15347)
!15350 = !DILocation(line: 0, scope: !14294, inlinedAt: !15349)
!15351 = !DILocation(line: 867, column: 12, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15353, file: !3598, line: 866, column: 26)
!15353 = distinct !DILexicalBlock(scope: !15342, file: !3598, line: 866, column: 2)
!15354 = !DILocation(line: 869, column: 14, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15352, file: !3598, line: 869, column: 7)
!15356 = !DILocation(line: 869, column: 7, scope: !15352)
!15357 = !DILocation(line: 870, column: 4, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15355, file: !3598, line: 869, column: 23)
!15359 = !DILocation(line: 871, column: 3, scope: !15358)
!15360 = !DILocation(line: 0, scope: !14312, inlinedAt: !15361)
!15361 = distinct !DILocation(line: 866, column: 2, scope: !15353)
!15362 = !DILocation(line: 0, scope: !14320, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15361)
!15364 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15363)
!15365 = !DILocation(line: 874, column: 2, scope: !15335)
!15366 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3598, file: !3598, line: 877, type: !15336, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15367)
!15367 = !{!15368, !15369, !15370, !15372}
!15368 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15366, file: !3598, line: 877, type: !3524)
!15369 = !DILocalVariable(name: "thread", scope: !15366, file: !3598, line: 879, type: !3493)
!15370 = !DILocalVariable(name: "__i", scope: !15371, file: !3598, line: 881, type: !14277)
!15371 = distinct !DILexicalBlock(scope: !15366, file: !3598, line: 881, column: 2)
!15372 = !DILocalVariable(name: "__key", scope: !15371, file: !3598, line: 881, type: !14277)
!15373 = !DILocation(line: 0, scope: !15366)
!15374 = !DILocation(line: 0, scope: !15371)
!15375 = !DILocation(line: 0, scope: !14285, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 881, column: 2, scope: !15371)
!15377 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15376)
!15379 = !DILocation(line: 0, scope: !14294, inlinedAt: !15378)
!15380 = !DILocation(line: 882, column: 12, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !15382, file: !3598, line: 881, column: 26)
!15382 = distinct !DILexicalBlock(scope: !15371, file: !3598, line: 881, column: 2)
!15383 = !DILocation(line: 884, column: 14, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15381, file: !3598, line: 884, column: 7)
!15385 = !DILocation(line: 884, column: 7, scope: !15381)
!15386 = !DILocation(line: 885, column: 4, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !15384, file: !3598, line: 884, column: 23)
!15388 = !DILocation(line: 886, column: 10, scope: !15387)
!15389 = !DILocation(line: 887, column: 3, scope: !15387)
!15390 = !DILocation(line: 0, scope: !14312, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 881, column: 2, scope: !15382)
!15392 = !DILocation(line: 0, scope: !14320, inlinedAt: !15393)
!15393 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15391)
!15394 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15393)
!15395 = !DILocation(line: 890, column: 2, scope: !15366)
!15396 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3598, file: !3598, line: 893, type: !14243, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15397)
!15397 = !{!15398}
!15398 = !DILocalVariable(name: "thread", arg: 1, scope: !15396, file: !3598, line: 893, type: !3493)
!15399 = !DILocation(line: 0, scope: !15396)
!15400 = !DILocation(line: 0, scope: !15252, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 895, column: 2, scope: !15396)
!15402 = !DILocation(line: 0, scope: !15256, inlinedAt: !15401)
!15403 = !DILocation(line: 0, scope: !14285, inlinedAt: !15404)
!15404 = distinct !DILocation(line: 788, column: 2, scope: !15256, inlinedAt: !15401)
!15405 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15404)
!15407 = !DILocation(line: 0, scope: !14294, inlinedAt: !15406)
!15408 = !DILocation(line: 789, column: 3, scope: !15266, inlinedAt: !15401)
!15409 = !DILocation(line: 0, scope: !14312, inlinedAt: !15410)
!15410 = distinct !DILocation(line: 788, column: 2, scope: !15267, inlinedAt: !15401)
!15411 = !DILocation(line: 0, scope: !14320, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15410)
!15413 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15412)
!15414 = !DILocation(line: 896, column: 8, scope: !15396)
!15415 = !DILocation(line: 897, column: 1, scope: !15396)
!15416 = distinct !DISubprogram(name: "z_set_prio", scope: !3598, file: !3598, line: 902, type: !14605, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15417)
!15417 = !{!15418, !15419, !15420, !15421, !15423}
!15418 = !DILocalVariable(name: "thread", arg: 1, scope: !15416, file: !3598, line: 902, type: !3493)
!15419 = !DILocalVariable(name: "prio", arg: 2, scope: !15416, file: !3598, line: 902, type: !125)
!15420 = !DILocalVariable(name: "need_sched", scope: !15416, file: !3598, line: 904, type: !153)
!15421 = !DILocalVariable(name: "__i", scope: !15422, file: !3598, line: 906, type: !14277)
!15422 = distinct !DILexicalBlock(scope: !15416, file: !3598, line: 906, column: 2)
!15423 = !DILocalVariable(name: "__key", scope: !15422, file: !3598, line: 906, type: !14277)
!15424 = !DILocation(line: 0, scope: !15416)
!15425 = !DILocation(line: 0, scope: !15422)
!15426 = !DILocation(line: 0, scope: !14285, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 906, column: 2, scope: !15422)
!15428 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15427)
!15430 = !DILocation(line: 0, scope: !14294, inlinedAt: !15429)
!15431 = !DILocation(line: 907, column: 16, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15433, file: !3598, line: 906, column: 26)
!15433 = distinct !DILexicalBlock(scope: !15422, file: !3598, line: 906, column: 2)
!15434 = !DILocation(line: 909, column: 7, scope: !15432)
!15435 = !DILocation(line: 0, scope: !14454, inlinedAt: !15436)
!15436 = distinct !DILocation(line: 912, column: 5, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15438, file: !3598, line: 911, column: 63)
!15438 = distinct !DILexicalBlock(scope: !15439, file: !3598, line: 911, column: 8)
!15439 = distinct !DILexicalBlock(scope: !15440, file: !3598, line: 909, column: 19)
!15440 = distinct !DILexicalBlock(scope: !15432, file: !3598, line: 909, column: 7)
!15441 = !DILocation(line: 266, column: 28, scope: !14454, inlinedAt: !15436)
!15442 = !DILocation(line: 0, scope: !14462, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 268, column: 3, scope: !14466, inlinedAt: !15436)
!15444 = !DILocation(line: 234, column: 2, scope: !14462, inlinedAt: !15443)
!15445 = !DILocation(line: 913, column: 23, scope: !15437)
!15446 = !DILocation(line: 0, scope: !14471, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 914, column: 5, scope: !15437)
!15448 = !DILocation(line: 252, column: 28, scope: !14471, inlinedAt: !15447)
!15449 = !DILocation(line: 0, scope: !14478, inlinedAt: !15450)
!15450 = distinct !DILocation(line: 254, column: 3, scope: !14482, inlinedAt: !15447)
!15451 = !DILocation(line: 0, scope: !14485, inlinedAt: !15452)
!15452 = distinct !DILocation(line: 229, column: 2, scope: !14478, inlinedAt: !15450)
!15453 = !DILocation(line: 188, column: 2, scope: !14495, inlinedAt: !15452)
!15454 = !DILocation(line: 188, column: 2, scope: !14497, inlinedAt: !15452)
!15455 = !DILocation(line: 0, scope: !14495, inlinedAt: !15452)
!15456 = !DILocation(line: 189, column: 7, scope: !14500, inlinedAt: !15452)
!15457 = !DILocation(line: 189, column: 35, scope: !14500, inlinedAt: !15452)
!15458 = !DILocation(line: 189, column: 7, scope: !14501, inlinedAt: !15452)
!15459 = !DILocation(line: 190, column: 4, scope: !14505, inlinedAt: !15452)
!15460 = !DILocation(line: 192, column: 4, scope: !14505, inlinedAt: !15452)
!15461 = distinct !{!15461, !15453, !15462}
!15462 = !DILocation(line: 194, column: 2, scope: !14495, inlinedAt: !15452)
!15463 = !DILocation(line: 196, column: 2, scope: !14485, inlinedAt: !15452)
!15464 = !DILocation(line: 197, column: 1, scope: !14485, inlinedAt: !15452)
!15465 = !DILocation(line: 918, column: 4, scope: !15439)
!15466 = !DILocation(line: 919, column: 3, scope: !15439)
!15467 = !DILocation(line: 920, column: 22, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15440, file: !3598, line: 919, column: 10)
!15469 = !DILocation(line: 0, scope: !14312, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 906, column: 2, scope: !15433)
!15471 = !DILocation(line: 0, scope: !14320, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15470)
!15473 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15472)
!15474 = !DILocation(line: 926, column: 2, scope: !15416)
!15475 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3598, file: !3598, line: 929, type: !15476, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15478)
!15476 = !DISubroutineType(types: !15477)
!15477 = !{null, !3493, !125}
!15478 = !{!15479, !15480, !15481}
!15479 = !DILocalVariable(name: "thread", arg: 1, scope: !15475, file: !3598, line: 929, type: !3493)
!15480 = !DILocalVariable(name: "prio", arg: 2, scope: !15475, file: !3598, line: 929, type: !125)
!15481 = !DILocalVariable(name: "need_sched", scope: !15475, file: !3598, line: 931, type: !153)
!15482 = !DILocation(line: 0, scope: !15475)
!15483 = !DILocation(line: 931, column: 20, scope: !15475)
!15484 = !DILocation(line: 935, column: 17, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15475, file: !3598, line: 935, column: 6)
!15486 = !DILocation(line: 935, column: 20, scope: !15485)
!15487 = !DILocation(line: 935, column: 35, scope: !15485)
!15488 = !DILocation(line: 935, column: 48, scope: !15485)
!15489 = !DILocation(line: 935, column: 6, scope: !15475)
!15490 = !DILocation(line: 936, column: 3, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15485, file: !3598, line: 935, column: 55)
!15492 = !DILocation(line: 937, column: 2, scope: !15491)
!15493 = !DILocation(line: 938, column: 1, scope: !15475)
!15494 = distinct !DISubprogram(name: "k_sched_lock", scope: !3598, file: !3598, line: 987, type: !4072, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15495)
!15495 = !{!15496, !15498}
!15496 = !DILocalVariable(name: "__i", scope: !15497, file: !3598, line: 989, type: !14277)
!15497 = distinct !DILexicalBlock(scope: !15494, file: !3598, line: 989, column: 2)
!15498 = !DILocalVariable(name: "__key", scope: !15497, file: !3598, line: 989, type: !14277)
!15499 = !DILocation(line: 0, scope: !15497)
!15500 = !DILocation(line: 0, scope: !14285, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 989, column: 2, scope: !15497)
!15502 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15503)
!15503 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15501)
!15504 = !DILocation(line: 0, scope: !14294, inlinedAt: !15503)
!15505 = !DILocation(line: 992, column: 3, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !3598, line: 989, column: 26)
!15507 = distinct !DILexicalBlock(scope: !15497, file: !3598, line: 989, column: 2)
!15508 = !DILocation(line: 0, scope: !14312, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 989, column: 2, scope: !15507)
!15510 = !DILocation(line: 0, scope: !14320, inlinedAt: !15511)
!15511 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15509)
!15512 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15511)
!15513 = !DILocation(line: 994, column: 1, scope: !15494)
!15514 = distinct !DISubprogram(name: "z_sched_lock", scope: !13557, file: !13557, line: 251, type: !4072, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!15515 = !DILocation(line: 256, column: 4, scope: !15514)
!15516 = !DILocation(line: 256, column: 19, scope: !15514)
!15517 = !DILocation(line: 256, column: 2, scope: !15514)
!15518 = !DILocation(line: 258, column: 2, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15514, file: !13557, line: 258, column: 2)
!15520 = !{i64 2152769825}
!15521 = !DILocation(line: 259, column: 1, scope: !15514)
!15522 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3598, file: !3598, line: 996, type: !4072, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15523)
!15523 = !{!15524, !15526}
!15524 = !DILocalVariable(name: "__i", scope: !15525, file: !3598, line: 998, type: !14277)
!15525 = distinct !DILexicalBlock(scope: !15522, file: !3598, line: 998, column: 2)
!15526 = !DILocalVariable(name: "__key", scope: !15525, file: !3598, line: 998, type: !14277)
!15527 = !DILocation(line: 0, scope: !15525)
!15528 = !DILocation(line: 0, scope: !14285, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 998, column: 2, scope: !15525)
!15530 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15531)
!15531 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15529)
!15532 = !DILocation(line: 0, scope: !14294, inlinedAt: !15531)
!15533 = !DILocation(line: 1002, column: 5, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15535, file: !3598, line: 998, column: 26)
!15535 = distinct !DILexicalBlock(scope: !15525, file: !3598, line: 998, column: 2)
!15536 = !DILocation(line: 1002, column: 20, scope: !15534)
!15537 = !DILocation(line: 1002, column: 3, scope: !15534)
!15538 = !DILocation(line: 1003, column: 3, scope: !15534)
!15539 = !DILocation(line: 0, scope: !14312, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 998, column: 2, scope: !15535)
!15541 = !DILocation(line: 0, scope: !14320, inlinedAt: !15542)
!15542 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !15540)
!15543 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !15542)
!15544 = !DILocation(line: 1011, column: 2, scope: !15522)
!15545 = !DILocation(line: 1012, column: 1, scope: !15522)
!15546 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3598, file: !3598, line: 1014, type: !14593, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!15547 = !DILocation(line: 1028, column: 25, scope: !15546)
!15548 = !DILocation(line: 1028, column: 2, scope: !15546)
!15549 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3598, file: !3598, line: 1155, type: !15550, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15552)
!15550 = !DISubroutineType(types: !15551)
!15551 = !{!153, !3522, !3522}
!15552 = !{!15553, !15554, !15555, !15556, !15557}
!15553 = !DILocalVariable(name: "a", arg: 1, scope: !15549, file: !3598, line: 1155, type: !3522)
!15554 = !DILocalVariable(name: "b", arg: 2, scope: !15549, file: !3598, line: 1155, type: !3522)
!15555 = !DILocalVariable(name: "thread_a", scope: !15549, file: !3598, line: 1157, type: !3493)
!15556 = !DILocalVariable(name: "thread_b", scope: !15549, file: !3598, line: 1157, type: !3493)
!15557 = !DILocalVariable(name: "cmp", scope: !15549, file: !3598, line: 1158, type: !1731)
!15558 = !DILocation(line: 0, scope: !15549)
!15559 = !DILocation(line: 1160, column: 13, scope: !15549)
!15560 = !DILocation(line: 1161, column: 13, scope: !15549)
!15561 = !DILocation(line: 1163, column: 8, scope: !15549)
!15562 = !DILocation(line: 1165, column: 10, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15549, file: !3598, line: 1165, column: 6)
!15564 = !DILocation(line: 1165, column: 6, scope: !15549)
!15565 = !DILocation(line: 1167, column: 17, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15563, file: !3598, line: 1167, column: 13)
!15567 = !DILocation(line: 1167, column: 13, scope: !15563)
!15568 = !DILocation(line: 1170, column: 25, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15566, file: !3598, line: 1169, column: 9)
!15570 = !DILocation(line: 1170, column: 52, scope: !15569)
!15571 = !DILocation(line: 1170, column: 35, scope: !15569)
!15572 = !DILocation(line: 1170, column: 3, scope: !15569)
!15573 = !DILocation(line: 0, scope: !15563)
!15574 = !DILocation(line: 1173, column: 1, scope: !15549)
!15575 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3598, file: !3598, line: 1175, type: !15576, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15591)
!15576 = !DISubroutineType(types: !15577)
!15577 = !{null, !15578, !3493}
!15578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15579, size: 32)
!15579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15580, line: 37, size: 128, elements: !15581)
!15580 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15581 = !{!15582, !15590}
!15582 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15579, file: !15580, line: 38, baseType: !15583, size: 96)
!15583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !1046, line: 83, size: 96, elements: !15584)
!15584 = !{!15585, !15586, !15589}
!15585 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15583, file: !1046, line: 84, baseType: !3522, size: 32)
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15583, file: !1046, line: 85, baseType: !15587, size: 32, offset: 32)
!15587 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !1046, line: 81, baseType: !15588)
!15588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15550, size: 32)
!15589 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15583, file: !1046, line: 86, baseType: !125, size: 32, offset: 64)
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15579, file: !15580, line: 39, baseType: !125, size: 32, offset: 96)
!15591 = !{!15592, !15593, !15594, !15595, !15604}
!15592 = !DILocalVariable(name: "pq", arg: 1, scope: !15575, file: !3598, line: 1175, type: !15578)
!15593 = !DILocalVariable(name: "thread", arg: 2, scope: !15575, file: !3598, line: 1175, type: !3493)
!15594 = !DILocalVariable(name: "t", scope: !15575, file: !3598, line: 1177, type: !3493)
!15595 = !DILocalVariable(name: "__f", scope: !15596, file: !3598, line: 1190, type: !15599)
!15596 = distinct !DILexicalBlock(scope: !15597, file: !3598, line: 1190, column: 3)
!15597 = distinct !DILexicalBlock(scope: !15598, file: !3598, line: 1189, column: 27)
!15598 = distinct !DILexicalBlock(scope: !15575, file: !3598, line: 1189, column: 6)
!15599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !1046, line: 155, size: 96, elements: !15600)
!15600 = !{!15601, !15602, !15603}
!15601 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15599, file: !1046, line: 156, baseType: !3593, size: 32)
!15602 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15599, file: !1046, line: 157, baseType: !184, size: 32, offset: 32)
!15603 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15599, file: !1046, line: 158, baseType: !1731, size: 32, offset: 64)
!15604 = !DILocalVariable(name: "n", scope: !15605, file: !3598, line: 1190, type: !3522)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !3598, line: 1190, column: 3)
!15606 = distinct !DILexicalBlock(scope: !15596, file: !3598, line: 1190, column: 3)
!15607 = !DILocation(line: 0, scope: !15575)
!15608 = !DILocation(line: 1181, column: 31, scope: !15575)
!15609 = !DILocation(line: 1181, column: 45, scope: !15575)
!15610 = !DILocation(line: 1181, column: 15, scope: !15575)
!15611 = !DILocation(line: 1181, column: 25, scope: !15575)
!15612 = !DILocation(line: 1189, column: 11, scope: !15598)
!15613 = !DILocation(line: 1189, column: 7, scope: !15598)
!15614 = !DILocation(line: 1189, column: 6, scope: !15575)
!15615 = !DILocation(line: 1190, column: 3, scope: !15596)
!15616 = !DILocation(line: 1190, column: 3, scope: !15605)
!15617 = !DILocation(line: 0, scope: !15605)
!15618 = !DILocation(line: 1190, column: 3, scope: !15606)
!15619 = !DILocation(line: 1193, column: 2, scope: !15597)
!15620 = !DILocation(line: 1191, column: 42, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15606, file: !3598, line: 1190, column: 54)
!15622 = !DILocation(line: 1191, column: 12, scope: !15621)
!15623 = !DILocation(line: 1191, column: 22, scope: !15621)
!15624 = distinct !{!15624, !15615, !15625}
!15625 = !DILocation(line: 1192, column: 3, scope: !15596)
!15626 = !DILocation(line: 1195, column: 17, scope: !15575)
!15627 = !DILocation(line: 1195, column: 37, scope: !15575)
!15628 = !DILocation(line: 1195, column: 2, scope: !15575)
!15629 = !DILocation(line: 1196, column: 1, scope: !15575)
!15630 = !DISubprogram(name: "z_rb_foreach_next", scope: !1046, file: !1046, line: 176, type: !15631, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!15631 = !DISubroutineType(types: !15632)
!15632 = !{!3522, !15633, !15634}
!15633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15583, size: 32)
!15634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15599, size: 32)
!15635 = !DISubprogram(name: "rb_insert", scope: !1046, file: !1046, line: 105, type: !15636, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!15636 = !DISubroutineType(types: !15637)
!15637 = !{null, !15633, !3522}
!15638 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3598, file: !3598, line: 1198, type: !15576, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15639)
!15639 = !{!15640, !15641}
!15640 = !DILocalVariable(name: "pq", arg: 1, scope: !15638, file: !3598, line: 1198, type: !15578)
!15641 = !DILocalVariable(name: "thread", arg: 2, scope: !15638, file: !3598, line: 1198, type: !3493)
!15642 = !DILocation(line: 0, scope: !15638)
!15643 = !DILocation(line: 1202, column: 17, scope: !15638)
!15644 = !DILocation(line: 1202, column: 37, scope: !15638)
!15645 = !DILocation(line: 1202, column: 2, scope: !15638)
!15646 = !DILocation(line: 1204, column: 16, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15638, file: !3598, line: 1204, column: 6)
!15648 = !DILocation(line: 1204, column: 7, scope: !15647)
!15649 = !DILocation(line: 1204, column: 6, scope: !15638)
!15650 = !DILocation(line: 1205, column: 7, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15647, file: !3598, line: 1204, column: 22)
!15652 = !DILocation(line: 1205, column: 22, scope: !15651)
!15653 = !DILocation(line: 1206, column: 2, scope: !15651)
!15654 = !DILocation(line: 1207, column: 1, scope: !15638)
!15655 = !DISubprogram(name: "rb_remove", scope: !1046, file: !1046, line: 110, type: !15636, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!15656 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3598, file: !3598, line: 1209, type: !15657, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15659)
!15657 = !DISubroutineType(types: !15658)
!15658 = !{!3493, !15578}
!15659 = !{!15660, !15661, !15662}
!15660 = !DILocalVariable(name: "pq", arg: 1, scope: !15656, file: !3598, line: 1209, type: !15578)
!15661 = !DILocalVariable(name: "thread", scope: !15656, file: !3598, line: 1211, type: !3493)
!15662 = !DILocalVariable(name: "n", scope: !15656, file: !3598, line: 1212, type: !3522)
!15663 = !DILocation(line: 0, scope: !15656)
!15664 = !DILocation(line: 1212, column: 37, scope: !15656)
!15665 = !DILocation(line: 1212, column: 21, scope: !15656)
!15666 = !DILocation(line: 1217, column: 2, scope: !15656)
!15667 = distinct !DISubprogram(name: "rb_get_min", scope: !1046, file: !1046, line: 115, type: !15668, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15670)
!15668 = !DISubroutineType(types: !15669)
!15669 = !{!3522, !15633}
!15670 = !{!15671}
!15671 = !DILocalVariable(name: "tree", arg: 1, scope: !15667, file: !1046, line: 115, type: !15633)
!15672 = !DILocation(line: 0, scope: !15667)
!15673 = !DILocation(line: 117, column: 9, scope: !15667)
!15674 = !DILocation(line: 117, column: 2, scope: !15667)
!15675 = !DISubprogram(name: "z_rb_get_minmax", scope: !1046, file: !1046, line: 100, type: !15676, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1126)
!15676 = !DISubroutineType(types: !15677)
!15677 = !{!3522, !15633, !150}
!15678 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3598, file: !3598, line: 1246, type: !15679, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15687)
!15679 = !DISubroutineType(types: !15680)
!15680 = !{!3493, !15681}
!15681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15682, size: 32)
!15682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15580, line: 53, size: 2080, elements: !15683)
!15683 = !{!15684, !15686}
!15684 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15682, file: !15580, line: 54, baseType: !15685, size: 2048)
!15685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3529, size: 2048, elements: !3084)
!15686 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15682, file: !15580, line: 55, baseType: !32, size: 32, offset: 2048)
!15687 = !{!15688, !15689, !15690, !15691}
!15688 = !DILocalVariable(name: "pq", arg: 1, scope: !15678, file: !3598, line: 1246, type: !15681)
!15689 = !DILocalVariable(name: "thread", scope: !15678, file: !3598, line: 1252, type: !3493)
!15690 = !DILocalVariable(name: "l", scope: !15678, file: !3598, line: 1253, type: !14488)
!15691 = !DILocalVariable(name: "n", scope: !15678, file: !3598, line: 1254, type: !3594)
!15692 = !DILocation(line: 0, scope: !15678)
!15693 = !DILocation(line: 1248, column: 11, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15678, file: !3598, line: 1248, column: 6)
!15695 = !DILocation(line: 1248, column: 7, scope: !15694)
!15696 = !DILocation(line: 1248, column: 6, scope: !15678)
!15697 = !DILocation(line: 1253, column: 31, scope: !15678)
!15698 = !DILocation(line: 1253, column: 20, scope: !15678)
!15699 = !DILocation(line: 1254, column: 19, scope: !15678)
!15700 = !DILocation(line: 1260, column: 1, scope: !15678)
!15701 = distinct !DISubprogram(name: "z_unpend_all", scope: !3598, file: !3598, line: 1262, type: !15702, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15704)
!15702 = !DISubroutineType(types: !15703)
!15703 = !{!125, !3524}
!15704 = !{!15705, !15706, !15707}
!15705 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15701, file: !3598, line: 1262, type: !3524)
!15706 = !DILocalVariable(name: "need_sched", scope: !15701, file: !3598, line: 1264, type: !125)
!15707 = !DILocalVariable(name: "thread", scope: !15701, file: !3598, line: 1265, type: !3493)
!15708 = !DILocation(line: 0, scope: !15701)
!15709 = !DILocation(line: 1267, column: 19, scope: !15701)
!15710 = !DILocation(line: 1267, column: 41, scope: !15701)
!15711 = !DILocation(line: 1267, column: 2, scope: !15701)
!15712 = !DILocation(line: 1268, column: 3, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15701, file: !3598, line: 1267, column: 50)
!15714 = !DILocation(line: 1269, column: 3, scope: !15713)
!15715 = distinct !{!15715, !15711, !15716}
!15716 = !DILocation(line: 1271, column: 2, scope: !15701)
!15717 = !DILocation(line: 1273, column: 2, scope: !15701)
!15718 = distinct !DISubprogram(name: "z_waitq_head", scope: !13883, file: !13883, line: 52, type: !15336, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15719)
!15719 = !{!15720}
!15720 = !DILocalVariable(name: "w", arg: 1, scope: !15718, file: !13883, line: 52, type: !3524)
!15721 = !DILocation(line: 0, scope: !15718)
!15722 = !DILocation(line: 54, column: 52, scope: !15718)
!15723 = !DILocation(line: 54, column: 28, scope: !15718)
!15724 = !DILocation(line: 54, column: 9, scope: !15718)
!15725 = !DILocation(line: 54, column: 2, scope: !15718)
!15726 = distinct !DISubprogram(name: "init_ready_q", scope: !3598, file: !3598, line: 1276, type: !15727, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15734)
!15727 = !DISubroutineType(types: !15728)
!15728 = !{null, !15729}
!15729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15730, size: 32)
!15730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !1054, line: 83, size: 96, elements: !15731)
!15731 = !{!15732, !15733}
!15732 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15730, file: !1054, line: 86, baseType: !3493, size: 32)
!15733 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15730, file: !1054, line: 90, baseType: !3529, size: 64, offset: 32)
!15734 = !{!15735}
!15735 = !DILocalVariable(name: "rq", arg: 1, scope: !15726, file: !3598, line: 1276, type: !15729)
!15736 = !DILocation(line: 0, scope: !15726)
!15737 = !DILocation(line: 1289, column: 22, scope: !15726)
!15738 = !DILocation(line: 1289, column: 2, scope: !15726)
!15739 = !DILocation(line: 1291, column: 1, scope: !15726)
!15740 = distinct !DISubprogram(name: "sys_dlist_init", scope: !1030, file: !1030, line: 197, type: !15741, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15743)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{null, !14488}
!15743 = !{!15744}
!15744 = !DILocalVariable(name: "list", arg: 1, scope: !15740, file: !1030, line: 197, type: !14488)
!15745 = !DILocation(line: 0, scope: !15740)
!15746 = !DILocation(line: 199, column: 8, scope: !15740)
!15747 = !DILocation(line: 199, column: 13, scope: !15740)
!15748 = !DILocation(line: 200, column: 8, scope: !15740)
!15749 = !DILocation(line: 200, column: 13, scope: !15740)
!15750 = !DILocation(line: 201, column: 1, scope: !15740)
!15751 = distinct !DISubprogram(name: "z_sched_init", scope: !3598, file: !3598, line: 1293, type: !4072, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!15752 = !DILocation(line: 1302, column: 2, scope: !15751)
!15753 = !DILocation(line: 1306, column: 2, scope: !15751)
!15754 = !DILocation(line: 1309, column: 1, scope: !15751)
!15755 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3598, file: !3598, line: 1311, type: !15756, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15759)
!15756 = !DISubroutineType(types: !15757)
!15757 = !{!125, !15758}
!15758 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1020, line: 347, baseType: !3493)
!15759 = !{!15760}
!15760 = !DILocalVariable(name: "thread", arg: 1, scope: !15755, file: !3598, line: 1311, type: !15758)
!15761 = !DILocation(line: 0, scope: !15755)
!15762 = !DILocation(line: 1313, column: 22, scope: !15755)
!15763 = !DILocation(line: 1313, column: 9, scope: !15755)
!15764 = !DILocation(line: 1313, column: 2, scope: !15755)
!15765 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3598, file: !3598, line: 1325, type: !15766, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15768)
!15766 = !DISubroutineType(types: !15767)
!15767 = !{null, !15758, !125}
!15768 = !{!15769, !15770, !15771}
!15769 = !DILocalVariable(name: "thread", arg: 1, scope: !15765, file: !3598, line: 1325, type: !15758)
!15770 = !DILocalVariable(name: "prio", arg: 2, scope: !15765, file: !3598, line: 1325, type: !125)
!15771 = !DILocalVariable(name: "th", scope: !15765, file: !3598, line: 1334, type: !3493)
!15772 = !DILocation(line: 0, scope: !15765)
!15773 = !DILocation(line: 1336, column: 2, scope: !15765)
!15774 = !DILocation(line: 1337, column: 1, scope: !15765)
!15775 = distinct !DISubprogram(name: "k_can_yield", scope: !3598, file: !3598, line: 1384, type: !10351, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!15776 = !DILocation(line: 1386, column: 11, scope: !15775)
!15777 = !DILocation(line: 1386, column: 29, scope: !15775)
!15778 = !DILocation(line: 1386, column: 32, scope: !15775)
!15779 = !DILocation(line: 1386, column: 46, scope: !15775)
!15780 = !DILocation(line: 1387, column: 28, scope: !15775)
!15781 = !DILocation(line: 1387, column: 4, scope: !15775)
!15782 = !DILocation(line: 1386, column: 2, scope: !15775)
!15783 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !1111, file: !1111, line: 989, type: !10351, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!15784 = !DILocation(line: 993, column: 10, scope: !15783)
!15785 = !DILocation(line: 993, column: 2, scope: !15783)
!15786 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3598, file: !3598, line: 1390, type: !4072, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15787)
!15787 = !{!15788}
!15788 = !DILocalVariable(name: "key", scope: !15786, file: !3598, line: 1396, type: !14277)
!15789 = !DILocation(line: 0, scope: !14285, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 1396, column: 25, scope: !15786)
!15791 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15790)
!15793 = !DILocation(line: 0, scope: !14294, inlinedAt: !15792)
!15794 = !DILocation(line: 0, scope: !15786)
!15795 = !DILocation(line: 1400, column: 18, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15797, file: !3598, line: 1399, column: 36)
!15797 = distinct !DILexicalBlock(scope: !15786, file: !3598, line: 1398, column: 6)
!15798 = !DILocation(line: 0, scope: !14454, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 1400, column: 3, scope: !15796)
!15800 = !DILocation(line: 266, column: 15, scope: !14454, inlinedAt: !15799)
!15801 = !DILocation(line: 266, column: 28, scope: !14454, inlinedAt: !15799)
!15802 = !DILocation(line: 0, scope: !14462, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 268, column: 3, scope: !14466, inlinedAt: !15799)
!15804 = !DILocation(line: 234, column: 2, scope: !14462, inlinedAt: !15803)
!15805 = !DILocation(line: 1402, column: 15, scope: !15786)
!15806 = !DILocation(line: 0, scope: !14471, inlinedAt: !15807)
!15807 = distinct !DILocation(line: 1402, column: 2, scope: !15786)
!15808 = !DILocation(line: 252, column: 15, scope: !14471, inlinedAt: !15807)
!15809 = !DILocation(line: 252, column: 28, scope: !14471, inlinedAt: !15807)
!15810 = !DILocation(line: 0, scope: !14478, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 254, column: 3, scope: !14482, inlinedAt: !15807)
!15812 = !DILocation(line: 0, scope: !14485, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 229, column: 2, scope: !14478, inlinedAt: !15811)
!15814 = !DILocation(line: 188, column: 2, scope: !14495, inlinedAt: !15813)
!15815 = !DILocation(line: 188, column: 2, scope: !14497, inlinedAt: !15813)
!15816 = !DILocation(line: 0, scope: !14495, inlinedAt: !15813)
!15817 = !DILocation(line: 189, column: 7, scope: !14500, inlinedAt: !15813)
!15818 = !DILocation(line: 189, column: 35, scope: !14500, inlinedAt: !15813)
!15819 = !DILocation(line: 189, column: 7, scope: !14501, inlinedAt: !15813)
!15820 = !DILocation(line: 191, column: 21, scope: !14505, inlinedAt: !15813)
!15821 = !DILocation(line: 190, column: 4, scope: !14505, inlinedAt: !15813)
!15822 = !DILocation(line: 192, column: 4, scope: !14505, inlinedAt: !15813)
!15823 = distinct !{!15823, !15814, !15824}
!15824 = !DILocation(line: 194, column: 2, scope: !14495, inlinedAt: !15813)
!15825 = !DILocation(line: 196, column: 37, scope: !14485, inlinedAt: !15813)
!15826 = !DILocation(line: 196, column: 2, scope: !14485, inlinedAt: !15813)
!15827 = !DILocation(line: 197, column: 1, scope: !14485, inlinedAt: !15813)
!15828 = !DILocation(line: 1403, column: 2, scope: !15786)
!15829 = !DILocation(line: 0, scope: !14896, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 1404, column: 2, scope: !15786)
!15831 = !DILocation(line: 196, column: 9, scope: !14896, inlinedAt: !15830)
!15832 = !DILocation(line: 1405, column: 1, scope: !15786)
!15833 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3598, file: !3598, line: 1459, type: !15834, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15836)
!15834 = !DISubroutineType(types: !15835)
!15835 = !{!1731, !15076}
!15836 = !{!15837, !15838, !15839}
!15837 = !DILocalVariable(name: "timeout", arg: 1, scope: !15833, file: !3598, line: 1459, type: !15076)
!15838 = !DILocalVariable(name: "ticks", scope: !15833, file: !3598, line: 1461, type: !2804)
!15839 = !DILocalVariable(name: "ret", scope: !15833, file: !3598, line: 1480, type: !1731)
!15840 = !DILocation(line: 0, scope: !15833)
!15841 = !DILocation(line: 1468, column: 6, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15833, file: !3598, line: 1468, column: 6)
!15843 = !DILocation(line: 1468, column: 6, scope: !15833)
!15844 = !DILocation(line: 1469, column: 20, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15842, file: !3598, line: 1468, column: 40)
!15846 = !DILocation(line: 1469, column: 3, scope: !15845)
!15847 = !DILocation(line: 1473, column: 3, scope: !15845)
!15848 = !DILocation(line: 1478, column: 10, scope: !15833)
!15849 = !DILocation(line: 1480, column: 16, scope: !15833)
!15850 = !DILocation(line: 1485, column: 1, scope: !15833)
!15851 = distinct !DISubprogram(name: "k_thread_suspend", scope: !6143, file: !6143, line: 310, type: !15852, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15854)
!15852 = !DISubroutineType(types: !15853)
!15853 = !{null, !15758}
!15854 = !{!15855}
!15855 = !DILocalVariable(name: "thread", arg: 1, scope: !15851, file: !6143, line: 310, type: !15758)
!15856 = !DILocation(line: 0, scope: !15851)
!15857 = !DILocation(line: 319, column: 2, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15851, file: !6143, line: 319, column: 2)
!15859 = !{i64 2152688831}
!15860 = !DILocation(line: 320, column: 2, scope: !15851)
!15861 = !DILocation(line: 321, column: 1, scope: !15851)
!15862 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3598, file: !3598, line: 1415, type: !15863, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15865)
!15863 = !DISubroutineType(types: !15864)
!15864 = !{!1731, !2804}
!15865 = !{!15866, !15867, !15868, !15869}
!15866 = !DILocalVariable(name: "ticks", arg: 1, scope: !15862, file: !3598, line: 1415, type: !2804)
!15867 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15862, file: !3598, line: 1418, type: !208)
!15868 = !DILocalVariable(name: "timeout", scope: !15862, file: !3598, line: 1430, type: !15076)
!15869 = !DILocalVariable(name: "key", scope: !15862, file: !3598, line: 1437, type: !14277)
!15870 = !DILocation(line: 0, scope: !15862)
!15871 = !DILocation(line: 1425, column: 12, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15862, file: !3598, line: 1425, column: 6)
!15873 = !DILocation(line: 1425, column: 6, scope: !15862)
!15874 = !DILocation(line: 1426, column: 3, scope: !15875)
!15875 = distinct !DILexicalBlock(scope: !15872, file: !3598, line: 1425, column: 18)
!15876 = !DILocation(line: 1427, column: 3, scope: !15875)
!15877 = !DILocation(line: 1431, column: 24, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15862, file: !3598, line: 1431, column: 6)
!15879 = !DILocation(line: 1431, column: 6, scope: !15862)
!15880 = !DILocation(line: 1432, column: 35, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15878, file: !3598, line: 1431, column: 30)
!15882 = !DILocation(line: 1432, column: 27, scope: !15881)
!15883 = !DILocation(line: 1433, column: 2, scope: !15881)
!15884 = !DILocation(line: 1434, column: 27, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15878, file: !3598, line: 1433, column: 9)
!15886 = !DILocation(line: 0, scope: !15878)
!15887 = !DILocation(line: 0, scope: !14285, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 1437, column: 25, scope: !15862)
!15889 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !15890)
!15890 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !15888)
!15891 = !DILocation(line: 0, scope: !14294, inlinedAt: !15890)
!15892 = !DILocation(line: 1440, column: 20, scope: !15862)
!15893 = !DILocation(line: 1440, column: 18, scope: !15862)
!15894 = !DILocation(line: 1442, column: 2, scope: !15862)
!15895 = !DILocation(line: 1443, column: 23, scope: !15862)
!15896 = !DILocation(line: 1443, column: 2, scope: !15862)
!15897 = !DILocation(line: 1444, column: 29, scope: !15862)
!15898 = !DILocation(line: 1444, column: 2, scope: !15862)
!15899 = !DILocation(line: 0, scope: !14896, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 1446, column: 8, scope: !15862)
!15901 = !DILocation(line: 196, column: 9, scope: !14896, inlinedAt: !15900)
!15902 = !DILocation(line: 1450, column: 10, scope: !15862)
!15903 = !DILocation(line: 1450, column: 45, scope: !15862)
!15904 = !DILocation(line: 1450, column: 43, scope: !15862)
!15905 = !DILocation(line: 1451, column: 6, scope: !15862)
!15906 = !DILocation(line: 1457, column: 1, scope: !15862)
!15907 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14118, file: !14118, line: 1103, type: !14119, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15908)
!15908 = !{!15909}
!15909 = !DILocalVariable(name: "t", arg: 1, scope: !15907, file: !14118, line: 1103, type: !2271)
!15910 = !DILocation(line: 0, scope: !15907)
!15911 = !DILocation(line: 0, scope: !14332, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 1106, column: 9, scope: !15907)
!15913 = !DILocation(line: 139, column: 13, scope: !15914, inlinedAt: !15912)
!15914 = distinct !DILexicalBlock(scope: !15915, file: !14118, line: 138, column: 10)
!15915 = distinct !DILexicalBlock(scope: !15916, file: !14118, line: 136, column: 7)
!15916 = distinct !DILexicalBlock(scope: !14353, file: !14118, line: 134, column: 17)
!15917 = !DILocation(line: 1106, column: 2, scope: !15907)
!15918 = distinct !DISubprogram(name: "k_yield", scope: !6143, file: !6143, line: 140, type: !4072, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!15919 = !DILocation(line: 148, column: 2, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15918, file: !6143, line: 148, column: 2)
!15921 = !{i64 2152688151}
!15922 = !DILocation(line: 149, column: 2, scope: !15918)
!15923 = !DILocation(line: 150, column: 1, scope: !15918)
!15924 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3598, file: !3598, line: 1495, type: !15925, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15927)
!15925 = !DISubroutineType(types: !15926)
!15926 = !{!1731, !125}
!15927 = !{!15928, !15929}
!15928 = !DILocalVariable(name: "us", arg: 1, scope: !15924, file: !3598, line: 1495, type: !125)
!15929 = !DILocalVariable(name: "ticks", scope: !15924, file: !3598, line: 1497, type: !1731)
!15930 = !DILocation(line: 0, scope: !15924)
!15931 = !DILocation(line: 1501, column: 31, scope: !15924)
!15932 = !DILocation(line: 1501, column: 10, scope: !15924)
!15933 = !DILocation(line: 1502, column: 23, scope: !15924)
!15934 = !DILocation(line: 1502, column: 10, scope: !15924)
!15935 = !DILocation(line: 1506, column: 31, scope: !15924)
!15936 = !DILocation(line: 1506, column: 9, scope: !15924)
!15937 = !DILocation(line: 1506, column: 2, scope: !15924)
!15938 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14118, file: !14118, line: 571, type: !14119, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15939)
!15939 = !{!15940}
!15940 = !DILocalVariable(name: "t", arg: 1, scope: !15938, file: !14118, line: 571, type: !2271)
!15941 = !DILocation(line: 0, scope: !15938)
!15942 = !DILocation(line: 0, scope: !14332, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 574, column: 9, scope: !15938)
!15944 = !DILocation(line: 135, column: 5, scope: !15916, inlinedAt: !15943)
!15945 = !DILocation(line: 139, column: 13, scope: !15914, inlinedAt: !15943)
!15946 = !DILocation(line: 574, column: 2, scope: !15938)
!15947 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14118, file: !14118, line: 1187, type: !14119, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15948)
!15948 = !{!15949}
!15949 = !DILocalVariable(name: "t", arg: 1, scope: !15947, file: !14118, line: 1187, type: !2271)
!15950 = !DILocation(line: 0, scope: !15947)
!15951 = !DILocation(line: 0, scope: !14332, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 1190, column: 9, scope: !15947)
!15953 = !DILocation(line: 145, column: 13, scope: !15954, inlinedAt: !15952)
!15954 = distinct !DILexicalBlock(scope: !14350, file: !14118, line: 144, column: 10)
!15955 = !DILocation(line: 1190, column: 2, scope: !15947)
!15956 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3598, file: !3598, line: 1517, type: !15852, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15957)
!15957 = !{!15958}
!15958 = !DILocalVariable(name: "thread", arg: 1, scope: !15956, file: !3598, line: 1517, type: !15758)
!15959 = !DILocation(line: 0, scope: !15956)
!15960 = !DILocation(line: 1521, column: 6, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15956, file: !3598, line: 1521, column: 6)
!15962 = !DILocation(line: 1521, column: 6, scope: !15956)
!15963 = !DILocation(line: 1525, column: 6, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15956, file: !3598, line: 1525, column: 6)
!15965 = !DILocation(line: 1525, column: 37, scope: !15964)
!15966 = !DILocation(line: 1525, column: 6, scope: !15956)
!15967 = !DILocation(line: 1527, column: 20, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15969, file: !3598, line: 1527, column: 7)
!15969 = distinct !DILexicalBlock(scope: !15964, file: !3598, line: 1525, column: 42)
!15970 = !DILocation(line: 1527, column: 33, scope: !15968)
!15971 = !DILocation(line: 1527, column: 7, scope: !15969)
!15972 = !DILocation(line: 1532, column: 2, scope: !15956)
!15973 = !DILocation(line: 1533, column: 2, scope: !15956)
!15974 = !DILocation(line: 1031, column: 3, scope: !14929, inlinedAt: !15975)
!15975 = distinct !DILocation(line: 48, column: 10, scope: !14933, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 1537, column: 7, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15956, file: !3598, line: 1537, column: 6)
!15978 = !DILocation(line: 0, scope: !14929, inlinedAt: !15975)
!15979 = !DILocation(line: 48, column: 9, scope: !14933, inlinedAt: !15976)
!15980 = !DILocation(line: 1537, column: 6, scope: !15956)
!15981 = !DILocation(line: 1538, column: 3, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15977, file: !3598, line: 1537, column: 25)
!15983 = !DILocation(line: 1539, column: 2, scope: !15982)
!15984 = !DILocation(line: 1540, column: 1, scope: !15956)
!15985 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13557, file: !13557, line: 101, type: !14403, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15986)
!15986 = !{!15987}
!15987 = !DILocalVariable(name: "thread", arg: 1, scope: !15985, file: !13557, line: 101, type: !3493)
!15988 = !DILocation(line: 0, scope: !15985)
!15989 = !DILocation(line: 103, column: 23, scope: !15985)
!15990 = !DILocation(line: 103, column: 36, scope: !15985)
!15991 = !DILocation(line: 103, column: 55, scope: !15985)
!15992 = !DILocation(line: 103, column: 2, scope: !15985)
!15993 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3598, file: !3598, line: 1567, type: !15994, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !15996)
!15994 = !DISubroutineType(types: !15995)
!15995 = !{!15758}
!15996 = !{!15997}
!15997 = !DILocalVariable(name: "ret", scope: !15993, file: !3598, line: 1577, type: !15758)
!15998 = !DILocation(line: 1577, column: 30, scope: !15993)
!15999 = !DILocation(line: 0, scope: !15993)
!16000 = !DILocation(line: 1582, column: 2, scope: !15993)
!16001 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3598, file: !3598, line: 1593, type: !10634, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !1126)
!16002 = !DILocation(line: 1031, column: 3, scope: !14929, inlinedAt: !16003)
!16003 = distinct !DILocation(line: 48, column: 10, scope: !14933, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 1595, column: 10, scope: !16001)
!16005 = !DILocation(line: 0, scope: !14929, inlinedAt: !16003)
!16006 = !DILocation(line: 48, column: 9, scope: !14933, inlinedAt: !16004)
!16007 = !DILocation(line: 1595, column: 27, scope: !16001)
!16008 = !DILocation(line: 1595, column: 41, scope: !16001)
!16009 = !DILocation(line: 1595, column: 30, scope: !16001)
!16010 = !DILocation(line: 1595, column: 2, scope: !16001)
!16011 = distinct !DISubprogram(name: "z_thread_abort", scope: !3598, file: !3598, line: 1725, type: !14243, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16012)
!16012 = !{!16013, !16014}
!16013 = !DILocalVariable(name: "thread", arg: 1, scope: !16011, file: !3598, line: 1725, type: !3493)
!16014 = !DILocalVariable(name: "key", scope: !16011, file: !3598, line: 1727, type: !14277)
!16015 = !DILocation(line: 0, scope: !16011)
!16016 = !DILocation(line: 0, scope: !14285, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 1727, column: 25, scope: !16011)
!16018 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !16017)
!16020 = !DILocation(line: 0, scope: !14294, inlinedAt: !16019)
!16021 = !DILocation(line: 1729, column: 20, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16011, file: !3598, line: 1729, column: 6)
!16023 = !DILocation(line: 1729, column: 33, scope: !16022)
!16024 = !DILocation(line: 1729, column: 48, scope: !16022)
!16025 = !DILocation(line: 1729, column: 6, scope: !16011)
!16026 = !DILocation(line: 0, scope: !14312, inlinedAt: !16027)
!16027 = distinct !DILocation(line: 1730, column: 3, scope: !16028)
!16028 = distinct !DILexicalBlock(scope: !16022, file: !3598, line: 1729, column: 54)
!16029 = !DILocation(line: 0, scope: !14320, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !16027)
!16031 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !16030)
!16032 = !DILocation(line: 1732, column: 3, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16028, file: !3598, line: 1732, column: 3)
!16034 = !{i64 2153423539, i64 2153423555, i64 2153423581, i64 2153423609, i64 2153423629}
!16035 = !DILocation(line: 1733, column: 3, scope: !16028)
!16036 = !DILocation(line: 1736, column: 20, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16011, file: !3598, line: 1736, column: 6)
!16038 = !DILocation(line: 1736, column: 33, scope: !16037)
!16039 = !DILocation(line: 1736, column: 49, scope: !16037)
!16040 = !DILocation(line: 1736, column: 6, scope: !16011)
!16041 = !DILocation(line: 0, scope: !14312, inlinedAt: !16042)
!16042 = distinct !DILocation(line: 1737, column: 3, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16037, file: !3598, line: 1736, column: 56)
!16044 = !DILocation(line: 0, scope: !14320, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !16042)
!16046 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !16045)
!16047 = !DILocation(line: 1738, column: 3, scope: !16043)
!16048 = !DILocation(line: 1775, column: 2, scope: !16011)
!16049 = !DILocation(line: 1776, column: 16, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16011, file: !3598, line: 1776, column: 6)
!16051 = !DILocation(line: 1776, column: 13, scope: !16050)
!16052 = !DILocation(line: 1776, column: 25, scope: !16050)
!16053 = !DILocation(line: 1031, column: 3, scope: !14929, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 48, column: 10, scope: !14933, inlinedAt: !16055)
!16055 = distinct !DILocation(line: 1776, column: 29, scope: !16050)
!16056 = !DILocation(line: 0, scope: !14929, inlinedAt: !16054)
!16057 = !DILocation(line: 48, column: 9, scope: !14933, inlinedAt: !16055)
!16058 = !DILocation(line: 1776, column: 6, scope: !16011)
!16059 = !DILocation(line: 0, scope: !14896, inlinedAt: !16060)
!16060 = distinct !DILocation(line: 1777, column: 3, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16050, file: !3598, line: 1776, column: 47)
!16062 = !DILocation(line: 196, column: 9, scope: !14896, inlinedAt: !16060)
!16063 = !DILocation(line: 1779, column: 2, scope: !16061)
!16064 = !DILocation(line: 0, scope: !14312, inlinedAt: !16065)
!16065 = distinct !DILocation(line: 1780, column: 2, scope: !16011)
!16066 = !DILocation(line: 0, scope: !14320, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !16065)
!16068 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !16067)
!16069 = !DILocation(line: 1781, column: 1, scope: !16011)
!16070 = distinct !DISubprogram(name: "end_thread", scope: !3598, file: !3598, line: 1690, type: !14243, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16071)
!16071 = !{!16072}
!16072 = !DILocalVariable(name: "thread", arg: 1, scope: !16070, file: !3598, line: 1690, type: !3493)
!16073 = !DILocation(line: 0, scope: !16070)
!16074 = !DILocation(line: 1695, column: 20, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16070, file: !3598, line: 1695, column: 6)
!16076 = !DILocation(line: 1695, column: 33, scope: !16075)
!16077 = !DILocation(line: 1695, column: 49, scope: !16075)
!16078 = !DILocation(line: 1695, column: 6, scope: !16070)
!16079 = !DILocation(line: 1697, column: 29, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16075, file: !3598, line: 1695, column: 56)
!16081 = !DILocation(line: 1698, column: 7, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16080, file: !3598, line: 1698, column: 7)
!16083 = !DILocation(line: 1698, column: 7, scope: !16080)
!16084 = !DILocation(line: 0, scope: !14454, inlinedAt: !16085)
!16085 = distinct !DILocation(line: 1699, column: 4, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16082, file: !3598, line: 1698, column: 35)
!16087 = !DILocation(line: 266, column: 28, scope: !14454, inlinedAt: !16085)
!16088 = !DILocation(line: 0, scope: !14462, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 268, column: 3, scope: !14466, inlinedAt: !16085)
!16090 = !DILocation(line: 234, column: 2, scope: !14462, inlinedAt: !16089)
!16091 = !DILocation(line: 1700, column: 3, scope: !16086)
!16092 = !DILocation(line: 1701, column: 20, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16080, file: !3598, line: 1701, column: 7)
!16094 = !DILocation(line: 1701, column: 30, scope: !16093)
!16095 = !DILocation(line: 1701, column: 7, scope: !16080)
!16096 = !DILocation(line: 1702, column: 4, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16093, file: !3598, line: 1701, column: 39)
!16098 = !DILocation(line: 1703, column: 3, scope: !16097)
!16099 = !DILocation(line: 1704, column: 9, scope: !16080)
!16100 = !DILocation(line: 1705, column: 23, scope: !16080)
!16101 = !DILocation(line: 1705, column: 3, scope: !16080)
!16102 = !DILocation(line: 1706, column: 3, scope: !16080)
!16103 = !DILocation(line: 1722, column: 2, scope: !16080)
!16104 = !DILocation(line: 1723, column: 1, scope: !16070)
!16105 = distinct !DISubprogram(name: "unpend_all", scope: !3598, file: !3598, line: 1674, type: !16106, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16108)
!16106 = !DISubroutineType(types: !16107)
!16107 = !{null, !3524}
!16108 = !{!16109, !16110}
!16109 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16105, file: !3598, line: 1674, type: !3524)
!16110 = !DILocalVariable(name: "thread", scope: !16105, file: !3598, line: 1676, type: !3493)
!16111 = !DILocation(line: 0, scope: !16105)
!16112 = !DILocation(line: 1678, column: 19, scope: !16105)
!16113 = !DILocation(line: 1678, column: 41, scope: !16105)
!16114 = !DILocation(line: 1678, column: 2, scope: !16105)
!16115 = !DILocation(line: 1679, column: 3, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16105, file: !3598, line: 1678, column: 50)
!16117 = !DILocation(line: 1680, column: 9, scope: !16116)
!16118 = !DILocalVariable(name: "thread", arg: 1, scope: !16119, file: !13577, line: 65, type: !3493)
!16119 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13577, file: !13577, line: 65, type: !16120, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16122)
!16120 = !DISubroutineType(types: !16121)
!16121 = !{null, !3493, !32}
!16122 = !{!16118, !16123}
!16123 = !DILocalVariable(name: "value", arg: 2, scope: !16119, file: !13577, line: 65, type: !32)
!16124 = !DILocation(line: 0, scope: !16119, inlinedAt: !16125)
!16125 = distinct !DILocation(line: 1681, column: 3, scope: !16116)
!16126 = !DILocation(line: 67, column: 15, scope: !16119, inlinedAt: !16125)
!16127 = !DILocation(line: 67, column: 33, scope: !16119, inlinedAt: !16125)
!16128 = !DILocation(line: 1682, column: 3, scope: !16116)
!16129 = distinct !{!16129, !16114, !16130}
!16130 = !DILocation(line: 1683, column: 2, scope: !16105)
!16131 = !DILocation(line: 1684, column: 1, scope: !16105)
!16132 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3598, file: !3598, line: 1794, type: !16133, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16135)
!16133 = !DISubroutineType(types: !16134)
!16134 = !{!125, !3493, !15076}
!16135 = !{!16136, !16137, !16138, !16139}
!16136 = !DILocalVariable(name: "thread", arg: 1, scope: !16132, file: !3598, line: 1794, type: !3493)
!16137 = !DILocalVariable(name: "timeout", arg: 2, scope: !16132, file: !3598, line: 1794, type: !15076)
!16138 = !DILocalVariable(name: "key", scope: !16132, file: !3598, line: 1796, type: !14277)
!16139 = !DILocalVariable(name: "ret", scope: !16132, file: !3598, line: 1797, type: !125)
!16140 = !DILocation(line: 0, scope: !16132)
!16141 = !DILocation(line: 0, scope: !14285, inlinedAt: !16142)
!16142 = distinct !DILocation(line: 1796, column: 25, scope: !16132)
!16143 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !16144)
!16144 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !16142)
!16145 = !DILocation(line: 0, scope: !14294, inlinedAt: !16144)
!16146 = !DILocation(line: 1801, column: 20, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16132, file: !3598, line: 1801, column: 6)
!16148 = !DILocation(line: 1801, column: 33, scope: !16147)
!16149 = !DILocation(line: 1801, column: 49, scope: !16147)
!16150 = !DILocation(line: 1801, column: 6, scope: !16132)
!16151 = !DILocation(line: 1803, column: 13, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16147, file: !3598, line: 1803, column: 13)
!16153 = !DILocation(line: 1803, column: 13, scope: !16147)
!16154 = !DILocation(line: 1805, column: 24, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16152, file: !3598, line: 1805, column: 13)
!16156 = !DILocation(line: 1805, column: 21, scope: !16155)
!16157 = !DILocation(line: 1805, column: 34, scope: !16155)
!16158 = !DILocation(line: 1806, column: 20, scope: !16155)
!16159 = !DILocation(line: 1806, column: 44, scope: !16155)
!16160 = !DILocation(line: 1806, column: 30, scope: !16155)
!16161 = !DILocation(line: 1805, column: 13, scope: !16152)
!16162 = !DILocation(line: 1810, column: 42, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16155, file: !3598, line: 1808, column: 9)
!16164 = !DILocation(line: 1810, column: 3, scope: !16163)
!16165 = !DILocation(line: 1811, column: 22, scope: !16163)
!16166 = !DILocation(line: 1811, column: 3, scope: !16163)
!16167 = !DILocation(line: 0, scope: !14896, inlinedAt: !16168)
!16168 = distinct !DILocation(line: 1814, column: 9, scope: !16163)
!16169 = !DILocation(line: 196, column: 9, scope: !14896, inlinedAt: !16168)
!16170 = !DILocation(line: 1817, column: 3, scope: !16163)
!16171 = !DILocation(line: 0, scope: !16147)
!16172 = !DILocation(line: 0, scope: !14312, inlinedAt: !16173)
!16173 = distinct !DILocation(line: 1822, column: 2, scope: !16132)
!16174 = !DILocation(line: 0, scope: !14320, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !16173)
!16176 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !16175)
!16177 = !DILocation(line: 1823, column: 2, scope: !16132)
!16178 = !DILocation(line: 1824, column: 1, scope: !16132)
!16179 = distinct !DISubprogram(name: "z_sched_wake", scope: !3598, file: !3598, line: 1882, type: !16180, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16182)
!16180 = !DISubroutineType(types: !16181)
!16181 = !{!153, !3524, !125, !124}
!16182 = !{!16183, !16184, !16185, !16186, !16187, !16188, !16190}
!16183 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16179, file: !3598, line: 1882, type: !3524)
!16184 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16179, file: !3598, line: 1882, type: !125)
!16185 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16179, file: !3598, line: 1882, type: !124)
!16186 = !DILocalVariable(name: "thread", scope: !16179, file: !3598, line: 1884, type: !3493)
!16187 = !DILocalVariable(name: "ret", scope: !16179, file: !3598, line: 1885, type: !153)
!16188 = !DILocalVariable(name: "__i", scope: !16189, file: !3598, line: 1887, type: !14277)
!16189 = distinct !DILexicalBlock(scope: !16179, file: !3598, line: 1887, column: 2)
!16190 = !DILocalVariable(name: "__key", scope: !16189, file: !3598, line: 1887, type: !14277)
!16191 = !DILocation(line: 0, scope: !16179)
!16192 = !DILocation(line: 0, scope: !16189)
!16193 = !DILocation(line: 0, scope: !14285, inlinedAt: !16194)
!16194 = distinct !DILocation(line: 1887, column: 2, scope: !16189)
!16195 = !DILocation(line: 55, column: 2, scope: !14294, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 145, column: 10, scope: !14285, inlinedAt: !16194)
!16197 = !DILocation(line: 0, scope: !14294, inlinedAt: !16196)
!16198 = !DILocation(line: 1888, column: 12, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16200, file: !3598, line: 1887, column: 26)
!16200 = distinct !DILexicalBlock(scope: !16189, file: !3598, line: 1887, column: 2)
!16201 = !DILocation(line: 1890, column: 14, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16199, file: !3598, line: 1890, column: 7)
!16203 = !DILocation(line: 1890, column: 7, scope: !16199)
!16204 = !DILocalVariable(name: "thread", arg: 1, scope: !16205, file: !16206, line: 134, type: !3493)
!16205 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16206, file: !16206, line: 134, type: !16207, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16209)
!16206 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16207 = !DISubroutineType(types: !16208)
!16208 = !{null, !3493, !32, !124}
!16209 = !{!16204, !16210, !16211}
!16210 = !DILocalVariable(name: "value", arg: 2, scope: !16205, file: !16206, line: 135, type: !32)
!16211 = !DILocalVariable(name: "data", arg: 3, scope: !16205, file: !16206, line: 136, type: !124)
!16212 = !DILocation(line: 0, scope: !16205, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 1891, column: 4, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16202, file: !3598, line: 1890, column: 23)
!16215 = !DILocation(line: 0, scope: !16119, inlinedAt: !16216)
!16216 = distinct !DILocation(line: 138, column: 2, scope: !16205, inlinedAt: !16213)
!16217 = !DILocation(line: 67, column: 15, scope: !16119, inlinedAt: !16216)
!16218 = !DILocation(line: 67, column: 33, scope: !16119, inlinedAt: !16216)
!16219 = !DILocation(line: 139, column: 15, scope: !16205, inlinedAt: !16213)
!16220 = !DILocation(line: 139, column: 25, scope: !16205, inlinedAt: !16213)
!16221 = !DILocation(line: 1894, column: 4, scope: !16214)
!16222 = !DILocation(line: 1895, column: 10, scope: !16214)
!16223 = !DILocation(line: 1896, column: 4, scope: !16214)
!16224 = !DILocation(line: 1898, column: 3, scope: !16214)
!16225 = !DILocation(line: 0, scope: !14312, inlinedAt: !16226)
!16226 = distinct !DILocation(line: 1887, column: 2, scope: !16200)
!16227 = !DILocation(line: 0, scope: !14320, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 215, column: 2, scope: !14312, inlinedAt: !16226)
!16229 = !DILocation(line: 95, column: 2, scope: !14320, inlinedAt: !16228)
!16230 = !DILocation(line: 1901, column: 2, scope: !16179)
!16231 = distinct !DISubprogram(name: "z_sched_wait", scope: !3598, file: !3598, line: 1904, type: !16232, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !16235)
!16232 = !DISubroutineType(types: !16233)
!16233 = !{!125, !14288, !14277, !3524, !15076, !16234}
!16234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!16235 = !{!16236, !16237, !16238, !16239, !16240, !16241}
!16236 = !DILocalVariable(name: "lock", arg: 1, scope: !16231, file: !3598, line: 1904, type: !14288)
!16237 = !DILocalVariable(name: "key", arg: 2, scope: !16231, file: !3598, line: 1904, type: !14277)
!16238 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16231, file: !3598, line: 1905, type: !3524)
!16239 = !DILocalVariable(name: "timeout", arg: 4, scope: !16231, file: !3598, line: 1905, type: !15076)
!16240 = !DILocalVariable(name: "data", arg: 5, scope: !16231, file: !3598, line: 1905, type: !16234)
!16241 = !DILocalVariable(name: "ret", scope: !16231, file: !3598, line: 1907, type: !125)
!16242 = !DILocation(line: 0, scope: !16231)
!16243 = !DILocation(line: 1907, column: 12, scope: !16231)
!16244 = !DILocation(line: 1909, column: 11, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16231, file: !3598, line: 1909, column: 6)
!16246 = !DILocation(line: 1909, column: 6, scope: !16231)
!16247 = !DILocation(line: 1910, column: 11, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16245, file: !3598, line: 1909, column: 20)
!16249 = !DILocation(line: 1910, column: 26, scope: !16248)
!16250 = !DILocation(line: 1910, column: 9, scope: !16248)
!16251 = !DILocation(line: 1911, column: 2, scope: !16248)
!16252 = !DILocation(line: 1912, column: 2, scope: !16231)
!16253 = distinct !DISubprogram(name: "z_data_copy", scope: !16254, file: !16254, line: 22, type: !4072, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4055, retainedNodes: !1126)
!16254 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16255 = !DILocation(line: 24, column: 2, scope: !16253)
!16256 = !DILocation(line: 27, column: 2, scope: !16253)
!16257 = !DILocation(line: 71, column: 1, scope: !16253)
!16258 = distinct !DISubprogram(name: "z_add_timeout", scope: !3635, file: !3635, line: 88, type: !16259, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16265)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{null, !3608, !3627, !16261}
!16261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2805, line: 67, baseType: !16262)
!16262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2805, line: 65, size: 64, elements: !16263)
!16263 = !{!16264}
!16264 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16262, file: !2805, line: 66, baseType: !2804, size: 64)
!16265 = !{!16266, !16267, !16268, !16269, !16275, !16276, !16279, !16282}
!16266 = !DILocalVariable(name: "to", arg: 1, scope: !16258, file: !3635, line: 88, type: !3608)
!16267 = !DILocalVariable(name: "fn", arg: 2, scope: !16258, file: !3635, line: 88, type: !3627)
!16268 = !DILocalVariable(name: "timeout", arg: 3, scope: !16258, file: !3635, line: 89, type: !16261)
!16269 = !DILocalVariable(name: "__i", scope: !16270, file: !3635, line: 102, type: !16271)
!16270 = distinct !DILexicalBlock(scope: !16258, file: !3635, line: 102, column: 2)
!16271 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1125, line: 106, baseType: !16272)
!16272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1125, line: 32, size: 32, elements: !16273)
!16273 = !{!16274}
!16274 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16272, file: !1125, line: 33, baseType: !125, size: 32)
!16275 = !DILocalVariable(name: "__key", scope: !16270, file: !3635, line: 102, type: !16271)
!16276 = !DILocalVariable(name: "t", scope: !16277, file: !3635, line: 103, type: !3608)
!16277 = distinct !DILexicalBlock(scope: !16278, file: !3635, line: 102, column: 24)
!16278 = distinct !DILexicalBlock(scope: !16270, file: !3635, line: 102, column: 2)
!16279 = !DILocalVariable(name: "ticks", scope: !16280, file: !3635, line: 107, type: !2804)
!16280 = distinct !DILexicalBlock(scope: !16281, file: !3635, line: 106, column: 39)
!16281 = distinct !DILexicalBlock(scope: !16277, file: !3635, line: 105, column: 7)
!16282 = !DILocalVariable(name: "next_time", scope: !16283, file: !3635, line: 137, type: !1731)
!16283 = distinct !DILexicalBlock(scope: !16284, file: !3635, line: 127, column: 22)
!16284 = distinct !DILexicalBlock(scope: !16277, file: !3635, line: 127, column: 7)
!16285 = !DILocation(line: 0, scope: !16258)
!16286 = !DILocation(line: 91, column: 6, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16258, file: !3635, line: 91, column: 6)
!16288 = !DILocation(line: 91, column: 6, scope: !16258)
!16289 = !DILocation(line: 100, column: 6, scope: !16258)
!16290 = !DILocation(line: 100, column: 9, scope: !16258)
!16291 = !DILocation(line: 0, scope: !16270)
!16292 = !DILocalVariable(name: "l", arg: 1, scope: !16293, file: !1125, line: 136, type: !16296)
!16293 = distinct !DISubprogram(name: "k_spin_lock", scope: !1125, file: !1125, line: 136, type: !16294, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16297)
!16294 = !DISubroutineType(types: !16295)
!16295 = !{!16271, !16296}
!16296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 32)
!16297 = !{!16292, !16298}
!16298 = !DILocalVariable(name: "k", scope: !16293, file: !1125, line: 139, type: !16271)
!16299 = !DILocation(line: 0, scope: !16293, inlinedAt: !16300)
!16300 = distinct !DILocation(line: 102, column: 2, scope: !16270)
!16301 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16306)
!16302 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7842, file: !7842, line: 42, type: !7843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16303)
!16303 = !{!16304, !16305}
!16304 = !DILocalVariable(name: "key", scope: !16302, file: !7842, line: 44, type: !32)
!16305 = !DILocalVariable(name: "tmp", scope: !16302, file: !7842, line: 53, type: !32)
!16306 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16300)
!16307 = !{i64 1625408}
!16308 = !DILocation(line: 0, scope: !16302, inlinedAt: !16306)
!16309 = !DILocation(line: 106, column: 33, scope: !16281)
!16310 = !DILocation(line: 105, column: 7, scope: !16277)
!16311 = !DILocation(line: 107, column: 50, scope: !16280)
!16312 = !DILocation(line: 107, column: 48, scope: !16280)
!16313 = !DILocation(line: 0, scope: !16280)
!16314 = !DILocation(line: 109, column: 17, scope: !16280)
!16315 = !DILocation(line: 110, column: 3, scope: !16280)
!16316 = !DILocation(line: 111, column: 31, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16281, file: !3635, line: 110, column: 10)
!16318 = !DILocation(line: 111, column: 37, scope: !16317)
!16319 = !DILocation(line: 111, column: 35, scope: !16317)
!16320 = !DILocation(line: 0, scope: !16281)
!16321 = !DILocation(line: 109, column: 8, scope: !16280)
!16322 = !DILocation(line: 109, column: 15, scope: !16280)
!16323 = !DILocation(line: 114, column: 12, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16277, file: !3635, line: 114, column: 3)
!16325 = !DILocation(line: 0, scope: !16277)
!16326 = !DILocation(line: 114, column: 3, scope: !16324)
!16327 = !DILocation(line: 115, column: 24, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16329, file: !3635, line: 115, column: 8)
!16329 = distinct !DILexicalBlock(scope: !16330, file: !3635, line: 114, column: 45)
!16330 = distinct !DILexicalBlock(scope: !16324, file: !3635, line: 114, column: 3)
!16331 = !DILocation(line: 115, column: 11, scope: !16328)
!16332 = !DILocation(line: 115, column: 18, scope: !16328)
!16333 = !DILocation(line: 115, column: 8, scope: !16329)
!16334 = !DILocation(line: 116, column: 15, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16328, file: !3635, line: 115, column: 32)
!16336 = !DILocation(line: 117, column: 26, scope: !16335)
!16337 = !DILocation(line: 117, column: 37, scope: !16335)
!16338 = !DILocation(line: 117, column: 5, scope: !16335)
!16339 = !DILocation(line: 123, column: 7, scope: !16277)
!16340 = !DILocation(line: 120, column: 15, scope: !16329)
!16341 = !DILocation(line: 114, column: 36, scope: !16330)
!16342 = distinct !{!16342, !16326, !16343}
!16343 = !DILocation(line: 121, column: 3, scope: !16324)
!16344 = !DILocation(line: 124, column: 41, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16346, file: !3635, line: 123, column: 18)
!16346 = distinct !DILexicalBlock(scope: !16277, file: !3635, line: 123, column: 7)
!16347 = !DILocation(line: 124, column: 4, scope: !16345)
!16348 = !DILocation(line: 125, column: 3, scope: !16345)
!16349 = !DILocation(line: 127, column: 13, scope: !16284)
!16350 = !DILocation(line: 127, column: 10, scope: !16284)
!16351 = !DILocation(line: 127, column: 7, scope: !16277)
!16352 = !DILocation(line: 137, column: 24, scope: !16283)
!16353 = !DILocation(line: 0, scope: !16283)
!16354 = !DILocation(line: 139, column: 18, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16283, file: !3635, line: 139, column: 8)
!16356 = !DILocation(line: 139, column: 23, scope: !16355)
!16357 = !DILocation(line: 141, column: 5, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16355, file: !3635, line: 140, column: 48)
!16359 = !DILocation(line: 142, column: 4, scope: !16358)
!16360 = !DILocalVariable(name: "key", arg: 2, scope: !16361, file: !1125, line: 190, type: !16271)
!16361 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1125, file: !1125, line: 189, type: !16362, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16364)
!16362 = !DISubroutineType(types: !16363)
!16363 = !{null, !16296, !16271}
!16364 = !{!16365, !16360}
!16365 = !DILocalVariable(name: "l", arg: 1, scope: !16361, file: !1125, line: 189, type: !16296)
!16366 = !DILocation(line: 0, scope: !16361, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 102, column: 2, scope: !16278)
!16368 = !DILocalVariable(name: "key", arg: 1, scope: !16369, file: !7842, line: 84, type: !32)
!16369 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7842, file: !7842, line: 84, type: !7860, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16370)
!16370 = !{!16368}
!16371 = !DILocation(line: 0, scope: !16369, inlinedAt: !16372)
!16372 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16367)
!16373 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16372)
!16374 = !{i64 1626225}
!16375 = !DILocation(line: 148, column: 1, scope: !16258)
!16376 = distinct !DISubprogram(name: "elapsed", scope: !3635, file: !3635, line: 62, type: !16377, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !1126)
!16377 = !DISubroutineType(types: !16378)
!16378 = !{!1731}
!16379 = !DILocation(line: 64, column: 9, scope: !16376)
!16380 = !DILocation(line: 64, column: 28, scope: !16376)
!16381 = !DILocation(line: 64, column: 35, scope: !16376)
!16382 = !DILocation(line: 64, column: 2, scope: !16376)
!16383 = distinct !DISubprogram(name: "first", scope: !3635, file: !3635, line: 39, type: !16384, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16386)
!16384 = !DISubroutineType(types: !16385)
!16385 = !{!3608}
!16386 = !{!16387}
!16387 = !DILocalVariable(name: "t", scope: !16383, file: !3635, line: 41, type: !16388)
!16388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 32)
!16389 = !DILocation(line: 41, column: 19, scope: !16383)
!16390 = !DILocation(line: 0, scope: !16383)
!16391 = !DILocation(line: 43, column: 9, scope: !16383)
!16392 = !DILocation(line: 43, column: 2, scope: !16383)
!16393 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !1030, file: !1030, line: 443, type: !16394, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16396)
!16394 = !DISubroutineType(types: !16395)
!16395 = !{null, !16388, !16388}
!16396 = !{!16397, !16398, !16399}
!16397 = !DILocalVariable(name: "successor", arg: 1, scope: !16393, file: !1030, line: 443, type: !16388)
!16398 = !DILocalVariable(name: "node", arg: 2, scope: !16393, file: !1030, line: 443, type: !16388)
!16399 = !DILocalVariable(name: "prev", scope: !16393, file: !1030, line: 445, type: !16400)
!16400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16388)
!16401 = !DILocation(line: 0, scope: !16393)
!16402 = !DILocation(line: 445, column: 39, scope: !16393)
!16403 = !DILocation(line: 447, column: 8, scope: !16393)
!16404 = !DILocation(line: 447, column: 13, scope: !16393)
!16405 = !DILocation(line: 448, column: 8, scope: !16393)
!16406 = !DILocation(line: 448, column: 13, scope: !16393)
!16407 = !DILocation(line: 449, column: 8, scope: !16393)
!16408 = !DILocation(line: 449, column: 13, scope: !16393)
!16409 = !DILocation(line: 450, column: 18, scope: !16393)
!16410 = !DILocation(line: 451, column: 1, scope: !16393)
!16411 = distinct !DISubprogram(name: "next", scope: !3635, file: !3635, line: 46, type: !16412, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16414)
!16412 = !DISubroutineType(types: !16413)
!16413 = !{!3608, !3608}
!16414 = !{!16415, !16416}
!16415 = !DILocalVariable(name: "t", arg: 1, scope: !16411, file: !3635, line: 46, type: !3608)
!16416 = !DILocalVariable(name: "n", scope: !16411, file: !3635, line: 48, type: !16388)
!16417 = !DILocation(line: 0, scope: !16411)
!16418 = !DILocation(line: 48, column: 58, scope: !16411)
!16419 = !DILocation(line: 48, column: 19, scope: !16411)
!16420 = !DILocation(line: 50, column: 9, scope: !16411)
!16421 = !DILocation(line: 50, column: 2, scope: !16411)
!16422 = distinct !DISubprogram(name: "sys_dlist_append", scope: !1030, file: !1030, line: 404, type: !16423, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16426)
!16423 = !DISubroutineType(types: !16424)
!16424 = !{null, !16425, !16388}
!16425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 32)
!16426 = !{!16427, !16428, !16429}
!16427 = !DILocalVariable(name: "list", arg: 1, scope: !16422, file: !1030, line: 404, type: !16425)
!16428 = !DILocalVariable(name: "node", arg: 2, scope: !16422, file: !1030, line: 404, type: !16388)
!16429 = !DILocalVariable(name: "tail", scope: !16422, file: !1030, line: 406, type: !16400)
!16430 = !DILocation(line: 0, scope: !16422)
!16431 = !DILocation(line: 406, column: 34, scope: !16422)
!16432 = !DILocation(line: 408, column: 8, scope: !16422)
!16433 = !DILocation(line: 408, column: 13, scope: !16422)
!16434 = !DILocation(line: 409, column: 8, scope: !16422)
!16435 = !DILocation(line: 409, column: 13, scope: !16422)
!16436 = !DILocation(line: 411, column: 8, scope: !16422)
!16437 = !DILocation(line: 411, column: 13, scope: !16422)
!16438 = !DILocation(line: 412, column: 13, scope: !16422)
!16439 = !DILocation(line: 413, column: 1, scope: !16422)
!16440 = distinct !DISubprogram(name: "next_timeout", scope: !3635, file: !3635, line: 67, type: !16377, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16441)
!16441 = !{!16442, !16443, !16444}
!16442 = !DILocalVariable(name: "to", scope: !16440, file: !3635, line: 69, type: !3608)
!16443 = !DILocalVariable(name: "ticks_elapsed", scope: !16440, file: !3635, line: 70, type: !1731)
!16444 = !DILocalVariable(name: "ret", scope: !16440, file: !3635, line: 71, type: !1731)
!16445 = !DILocation(line: 69, column: 24, scope: !16440)
!16446 = !DILocation(line: 0, scope: !16440)
!16447 = !DILocation(line: 70, column: 26, scope: !16440)
!16448 = !DILocation(line: 73, column: 10, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16440, file: !3635, line: 73, column: 6)
!16450 = !DILocation(line: 73, column: 19, scope: !16449)
!16451 = !DILocation(line: 74, column: 21, scope: !16449)
!16452 = !DILocation(line: 74, column: 30, scope: !16449)
!16453 = !DILocation(line: 74, column: 28, scope: !16449)
!16454 = !DILocation(line: 74, column: 45, scope: !16449)
!16455 = !DILocation(line: 73, column: 6, scope: !16440)
!16456 = !DILocation(line: 77, column: 9, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16449, file: !3635, line: 76, column: 9)
!16458 = !DILocation(line: 0, scope: !16449)
!16459 = !DILocation(line: 81, column: 20, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !16440, file: !3635, line: 81, column: 6)
!16461 = !DILocation(line: 81, column: 6, scope: !16460)
!16462 = !DILocation(line: 81, column: 32, scope: !16460)
!16463 = !DILocation(line: 85, column: 2, scope: !16440)
!16464 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !1030, file: !1030, line: 341, type: !16465, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16467)
!16465 = !DISubroutineType(types: !16466)
!16466 = !{!16388, !16425, !16388}
!16467 = !{!16468, !16469}
!16468 = !DILocalVariable(name: "list", arg: 1, scope: !16464, file: !1030, line: 341, type: !16425)
!16469 = !DILocalVariable(name: "node", arg: 2, scope: !16464, file: !1030, line: 342, type: !16388)
!16470 = !DILocation(line: 0, scope: !16464)
!16471 = !DILocation(line: 344, column: 15, scope: !16464)
!16472 = !DILocation(line: 344, column: 9, scope: !16464)
!16473 = !DILocation(line: 344, column: 26, scope: !16464)
!16474 = !DILocation(line: 344, column: 2, scope: !16464)
!16475 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !1030, file: !1030, line: 325, type: !16465, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16476)
!16476 = !{!16477, !16478}
!16477 = !DILocalVariable(name: "list", arg: 1, scope: !16475, file: !1030, line: 325, type: !16425)
!16478 = !DILocalVariable(name: "node", arg: 2, scope: !16475, file: !1030, line: 326, type: !16388)
!16479 = !DILocation(line: 0, scope: !16475)
!16480 = !DILocation(line: 328, column: 24, scope: !16475)
!16481 = !DILocation(line: 328, column: 15, scope: !16475)
!16482 = !DILocation(line: 328, column: 9, scope: !16475)
!16483 = !DILocation(line: 328, column: 45, scope: !16475)
!16484 = !DILocation(line: 328, column: 2, scope: !16475)
!16485 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !1030, file: !1030, line: 294, type: !16486, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16488)
!16486 = !DISubroutineType(types: !16487)
!16487 = !{!16388, !16425}
!16488 = !{!16489}
!16489 = !DILocalVariable(name: "list", arg: 1, scope: !16485, file: !1030, line: 294, type: !16425)
!16490 = !DILocation(line: 0, scope: !16485)
!16491 = !DILocation(line: 296, column: 9, scope: !16485)
!16492 = !DILocation(line: 296, column: 2, scope: !16485)
!16493 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !1030, file: !1030, line: 266, type: !16494, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16496)
!16494 = !DISubroutineType(types: !16495)
!16495 = !{!153, !16425}
!16496 = !{!16497}
!16497 = !DILocalVariable(name: "list", arg: 1, scope: !16493, file: !1030, line: 266, type: !16425)
!16498 = !DILocation(line: 0, scope: !16493)
!16499 = !DILocation(line: 268, column: 15, scope: !16493)
!16500 = !DILocation(line: 268, column: 20, scope: !16493)
!16501 = !DILocation(line: 268, column: 2, scope: !16493)
!16502 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3635, file: !3635, line: 150, type: !16503, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16505)
!16503 = !DISubroutineType(types: !16504)
!16504 = !{!125, !3608}
!16505 = !{!16506, !16507, !16508, !16510}
!16506 = !DILocalVariable(name: "to", arg: 1, scope: !16502, file: !3635, line: 150, type: !3608)
!16507 = !DILocalVariable(name: "ret", scope: !16502, file: !3635, line: 152, type: !125)
!16508 = !DILocalVariable(name: "__i", scope: !16509, file: !3635, line: 154, type: !16271)
!16509 = distinct !DILexicalBlock(scope: !16502, file: !3635, line: 154, column: 2)
!16510 = !DILocalVariable(name: "__key", scope: !16509, file: !3635, line: 154, type: !16271)
!16511 = !DILocation(line: 0, scope: !16502)
!16512 = !DILocation(line: 0, scope: !16509)
!16513 = !DILocation(line: 0, scope: !16293, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 154, column: 2, scope: !16509)
!16515 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16516)
!16516 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16514)
!16517 = !DILocation(line: 0, scope: !16302, inlinedAt: !16516)
!16518 = !DILocation(line: 155, column: 7, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16520, file: !3635, line: 155, column: 7)
!16520 = distinct !DILexicalBlock(scope: !16521, file: !3635, line: 154, column: 24)
!16521 = distinct !DILexicalBlock(scope: !16509, file: !3635, line: 154, column: 2)
!16522 = !DILocation(line: 155, column: 7, scope: !16520)
!16523 = !DILocation(line: 156, column: 4, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16519, file: !3635, line: 155, column: 39)
!16525 = !DILocation(line: 158, column: 3, scope: !16524)
!16526 = !DILocation(line: 0, scope: !16361, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 154, column: 2, scope: !16521)
!16528 = !DILocation(line: 0, scope: !16369, inlinedAt: !16529)
!16529 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16527)
!16530 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16529)
!16531 = !DILocation(line: 161, column: 2, scope: !16502)
!16532 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !1030, file: !1030, line: 225, type: !16533, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16537)
!16533 = !DISubroutineType(types: !16534)
!16534 = !{!153, !16535}
!16535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16536, size: 32)
!16536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3612)
!16537 = !{!16538}
!16538 = !DILocalVariable(name: "node", arg: 1, scope: !16532, file: !1030, line: 225, type: !16535)
!16539 = !DILocation(line: 0, scope: !16532)
!16540 = !DILocation(line: 227, column: 15, scope: !16532)
!16541 = !DILocation(line: 227, column: 20, scope: !16532)
!16542 = !DILocation(line: 227, column: 2, scope: !16532)
!16543 = distinct !DISubprogram(name: "remove_timeout", scope: !3635, file: !3635, line: 53, type: !3629, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16544)
!16544 = !{!16545}
!16545 = !DILocalVariable(name: "t", arg: 1, scope: !16543, file: !3635, line: 53, type: !3608)
!16546 = !DILocation(line: 0, scope: !16543)
!16547 = !DILocation(line: 55, column: 6, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16543, file: !3635, line: 55, column: 6)
!16549 = !DILocation(line: 55, column: 14, scope: !16548)
!16550 = !DILocation(line: 55, column: 6, scope: !16543)
!16551 = !DILocation(line: 56, column: 25, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16548, file: !3635, line: 55, column: 23)
!16553 = !DILocation(line: 56, column: 12, scope: !16552)
!16554 = !DILocation(line: 56, column: 19, scope: !16552)
!16555 = !DILocation(line: 57, column: 2, scope: !16552)
!16556 = !DILocation(line: 59, column: 23, scope: !16543)
!16557 = !DILocation(line: 59, column: 2, scope: !16543)
!16558 = !DILocation(line: 60, column: 1, scope: !16543)
!16559 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !1030, file: !1030, line: 496, type: !16560, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16562)
!16560 = !DISubroutineType(types: !16561)
!16561 = !{null, !16388}
!16562 = !{!16563, !16564, !16565}
!16563 = !DILocalVariable(name: "node", arg: 1, scope: !16559, file: !1030, line: 496, type: !16388)
!16564 = !DILocalVariable(name: "prev", scope: !16559, file: !1030, line: 498, type: !16400)
!16565 = !DILocalVariable(name: "next", scope: !16559, file: !1030, line: 499, type: !16400)
!16566 = !DILocation(line: 0, scope: !16559)
!16567 = !DILocation(line: 498, column: 34, scope: !16559)
!16568 = !DILocation(line: 499, column: 34, scope: !16559)
!16569 = !DILocation(line: 501, column: 8, scope: !16559)
!16570 = !DILocation(line: 501, column: 13, scope: !16559)
!16571 = !DILocation(line: 502, column: 8, scope: !16559)
!16572 = !DILocation(line: 502, column: 13, scope: !16559)
!16573 = !DILocation(line: 503, column: 2, scope: !16559)
!16574 = !DILocation(line: 504, column: 1, scope: !16559)
!16575 = distinct !DISubprogram(name: "sys_dnode_init", scope: !1030, file: !1030, line: 211, type: !16560, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16576)
!16576 = !{!16577}
!16577 = !DILocalVariable(name: "node", arg: 1, scope: !16575, file: !1030, line: 211, type: !16388)
!16578 = !DILocation(line: 0, scope: !16575)
!16579 = !DILocation(line: 213, column: 8, scope: !16575)
!16580 = !DILocation(line: 213, column: 13, scope: !16575)
!16581 = !DILocation(line: 214, column: 8, scope: !16575)
!16582 = !DILocation(line: 214, column: 13, scope: !16575)
!16583 = !DILocation(line: 215, column: 1, scope: !16575)
!16584 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3635, file: !3635, line: 183, type: !16585, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16589)
!16585 = !DISubroutineType(types: !16586)
!16586 = !{!2804, !16587}
!16587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16588, size: 32)
!16588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3609)
!16589 = !{!16590, !16591, !16592, !16594}
!16590 = !DILocalVariable(name: "timeout", arg: 1, scope: !16584, file: !3635, line: 183, type: !16587)
!16591 = !DILocalVariable(name: "ticks", scope: !16584, file: !3635, line: 185, type: !2804)
!16592 = !DILocalVariable(name: "__i", scope: !16593, file: !3635, line: 187, type: !16271)
!16593 = distinct !DILexicalBlock(scope: !16584, file: !3635, line: 187, column: 2)
!16594 = !DILocalVariable(name: "__key", scope: !16593, file: !3635, line: 187, type: !16271)
!16595 = !DILocation(line: 0, scope: !16584)
!16596 = !DILocation(line: 0, scope: !16593)
!16597 = !DILocation(line: 0, scope: !16293, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 187, column: 2, scope: !16593)
!16599 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16598)
!16601 = !DILocation(line: 0, scope: !16302, inlinedAt: !16600)
!16602 = !DILocation(line: 188, column: 11, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16604, file: !3635, line: 187, column: 24)
!16604 = distinct !DILexicalBlock(scope: !16593, file: !3635, line: 187, column: 2)
!16605 = !DILocation(line: 0, scope: !16361, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 187, column: 2, scope: !16604)
!16607 = !DILocation(line: 0, scope: !16369, inlinedAt: !16608)
!16608 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16606)
!16609 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16608)
!16610 = !DILocation(line: 191, column: 2, scope: !16584)
!16611 = distinct !DISubprogram(name: "timeout_rem", scope: !3635, file: !3635, line: 165, type: !16585, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16612)
!16612 = !{!16613, !16614, !16615}
!16613 = !DILocalVariable(name: "timeout", arg: 1, scope: !16611, file: !3635, line: 165, type: !16587)
!16614 = !DILocalVariable(name: "ticks", scope: !16611, file: !3635, line: 167, type: !2804)
!16615 = !DILocalVariable(name: "t", scope: !16616, file: !3635, line: 173, type: !3608)
!16616 = distinct !DILexicalBlock(scope: !16611, file: !3635, line: 173, column: 2)
!16617 = !DILocation(line: 0, scope: !16611)
!16618 = !DILocation(line: 169, column: 6, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16611, file: !3635, line: 169, column: 6)
!16620 = !DILocation(line: 169, column: 6, scope: !16611)
!16621 = !DILocation(line: 173, column: 28, scope: !16616)
!16622 = !DILocation(line: 0, scope: !16616)
!16623 = !DILocation(line: 173, column: 39, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16616, file: !3635, line: 173, column: 2)
!16625 = !DILocation(line: 173, column: 2, scope: !16616)
!16626 = !DILocation(line: 174, column: 15, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16624, file: !3635, line: 173, column: 61)
!16628 = !DILocation(line: 174, column: 9, scope: !16627)
!16629 = !DILocation(line: 175, column: 15, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16627, file: !3635, line: 175, column: 7)
!16631 = !DILocation(line: 175, column: 7, scope: !16627)
!16632 = !DILocation(line: 173, column: 52, scope: !16624)
!16633 = distinct !{!16633, !16625, !16634}
!16634 = !DILocation(line: 178, column: 2, scope: !16616)
!16635 = !DILocation(line: 180, column: 17, scope: !16611)
!16636 = !DILocation(line: 180, column: 15, scope: !16611)
!16637 = !DILocation(line: 180, column: 2, scope: !16611)
!16638 = !DILocation(line: 181, column: 1, scope: !16611)
!16639 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13951, file: !13951, line: 35, type: !16640, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16642)
!16640 = !DISubroutineType(types: !16641)
!16641 = !{!153, !16587}
!16642 = !{!16643}
!16643 = !DILocalVariable(name: "to", arg: 1, scope: !16639, file: !13951, line: 35, type: !16587)
!16644 = !DILocation(line: 0, scope: !16639)
!16645 = !DILocation(line: 37, column: 35, scope: !16639)
!16646 = !DILocation(line: 37, column: 10, scope: !16639)
!16647 = !DILocation(line: 37, column: 9, scope: !16639)
!16648 = !DILocation(line: 37, column: 2, scope: !16639)
!16649 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3635, file: !3635, line: 194, type: !16585, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16650)
!16650 = !{!16651, !16652, !16653, !16655}
!16651 = !DILocalVariable(name: "timeout", arg: 1, scope: !16649, file: !3635, line: 194, type: !16587)
!16652 = !DILocalVariable(name: "ticks", scope: !16649, file: !3635, line: 196, type: !2804)
!16653 = !DILocalVariable(name: "__i", scope: !16654, file: !3635, line: 198, type: !16271)
!16654 = distinct !DILexicalBlock(scope: !16649, file: !3635, line: 198, column: 2)
!16655 = !DILocalVariable(name: "__key", scope: !16654, file: !3635, line: 198, type: !16271)
!16656 = !DILocation(line: 0, scope: !16649)
!16657 = !DILocation(line: 0, scope: !16654)
!16658 = !DILocation(line: 0, scope: !16293, inlinedAt: !16659)
!16659 = distinct !DILocation(line: 198, column: 2, scope: !16654)
!16660 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16659)
!16662 = !DILocation(line: 0, scope: !16302, inlinedAt: !16661)
!16663 = !DILocation(line: 199, column: 11, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16665, file: !3635, line: 198, column: 24)
!16665 = distinct !DILexicalBlock(scope: !16654, file: !3635, line: 198, column: 2)
!16666 = !DILocation(line: 199, column: 23, scope: !16664)
!16667 = !DILocation(line: 0, scope: !16361, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 198, column: 2, scope: !16665)
!16669 = !DILocation(line: 0, scope: !16369, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16668)
!16671 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16670)
!16672 = !DILocation(line: 199, column: 21, scope: !16664)
!16673 = !DILocation(line: 202, column: 2, scope: !16649)
!16674 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3635, file: !3635, line: 205, type: !16377, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16675)
!16675 = !{!16676, !16677, !16679}
!16676 = !DILocalVariable(name: "ret", scope: !16674, file: !3635, line: 207, type: !1731)
!16677 = !DILocalVariable(name: "__i", scope: !16678, file: !3635, line: 209, type: !16271)
!16678 = distinct !DILexicalBlock(scope: !16674, file: !3635, line: 209, column: 2)
!16679 = !DILocalVariable(name: "__key", scope: !16678, file: !3635, line: 209, type: !16271)
!16680 = !DILocation(line: 0, scope: !16674)
!16681 = !DILocation(line: 0, scope: !16678)
!16682 = !DILocation(line: 0, scope: !16293, inlinedAt: !16683)
!16683 = distinct !DILocation(line: 209, column: 2, scope: !16678)
!16684 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16685)
!16685 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16683)
!16686 = !DILocation(line: 0, scope: !16302, inlinedAt: !16685)
!16687 = !DILocation(line: 210, column: 9, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16689, file: !3635, line: 209, column: 24)
!16689 = distinct !DILexicalBlock(scope: !16678, file: !3635, line: 209, column: 2)
!16690 = !DILocation(line: 0, scope: !16361, inlinedAt: !16691)
!16691 = distinct !DILocation(line: 209, column: 2, scope: !16689)
!16692 = !DILocation(line: 0, scope: !16369, inlinedAt: !16693)
!16693 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16691)
!16694 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16693)
!16695 = !DILocation(line: 212, column: 2, scope: !16674)
!16696 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3635, file: !3635, line: 215, type: !12688, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16697)
!16697 = !{!16698, !16699, !16700, !16702, !16703, !16706, !16707}
!16698 = !DILocalVariable(name: "ticks", arg: 1, scope: !16696, file: !3635, line: 215, type: !1731)
!16699 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16696, file: !3635, line: 215, type: !153)
!16700 = !DILocalVariable(name: "__i", scope: !16701, file: !3635, line: 217, type: !16271)
!16701 = distinct !DILexicalBlock(scope: !16696, file: !3635, line: 217, column: 2)
!16702 = !DILocalVariable(name: "__key", scope: !16701, file: !3635, line: 217, type: !16271)
!16703 = !DILocalVariable(name: "next_to", scope: !16704, file: !3635, line: 218, type: !125)
!16704 = distinct !DILexicalBlock(scope: !16705, file: !3635, line: 217, column: 24)
!16705 = distinct !DILexicalBlock(scope: !16701, file: !3635, line: 217, column: 2)
!16706 = !DILocalVariable(name: "sooner", scope: !16704, file: !3635, line: 219, type: !153)
!16707 = !DILocalVariable(name: "imminent", scope: !16704, file: !3635, line: 221, type: !153)
!16708 = !DILocation(line: 0, scope: !16696)
!16709 = !DILocation(line: 0, scope: !16701)
!16710 = !DILocation(line: 0, scope: !16293, inlinedAt: !16711)
!16711 = distinct !DILocation(line: 217, column: 2, scope: !16701)
!16712 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16713)
!16713 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16711)
!16714 = !DILocation(line: 0, scope: !16302, inlinedAt: !16713)
!16715 = !DILocation(line: 218, column: 17, scope: !16704)
!16716 = !DILocation(line: 0, scope: !16704)
!16717 = !DILocation(line: 221, column: 27, scope: !16704)
!16718 = !DILocation(line: 233, column: 17, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16704, file: !3635, line: 233, column: 7)
!16720 = !DILocation(line: 234, column: 26, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16719, file: !3635, line: 233, column: 56)
!16722 = !DILocation(line: 234, column: 4, scope: !16721)
!16723 = !DILocation(line: 235, column: 3, scope: !16721)
!16724 = !DILocation(line: 0, scope: !16361, inlinedAt: !16725)
!16725 = distinct !DILocation(line: 217, column: 2, scope: !16705)
!16726 = !DILocation(line: 0, scope: !16369, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16725)
!16728 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16727)
!16729 = !DILocation(line: 237, column: 1, scope: !16696)
!16730 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3635, file: !3635, line: 239, type: !16731, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16733)
!16731 = !DISubroutineType(types: !16732)
!16732 = !{null, !1731}
!16733 = !{!16734, !16735, !16736, !16738}
!16734 = !DILocalVariable(name: "ticks", arg: 1, scope: !16730, file: !3635, line: 239, type: !1731)
!16735 = !DILocalVariable(name: "key", scope: !16730, file: !3635, line: 245, type: !16271)
!16736 = !DILocalVariable(name: "t", scope: !16737, file: !3635, line: 262, type: !3608)
!16737 = distinct !DILexicalBlock(scope: !16730, file: !3635, line: 261, column: 67)
!16738 = !DILocalVariable(name: "dt", scope: !16737, file: !3635, line: 263, type: !125)
!16739 = !DILocation(line: 0, scope: !16730)
!16740 = !DILocation(line: 242, column: 2, scope: !16730)
!16741 = !DILocation(line: 0, scope: !16293, inlinedAt: !16742)
!16742 = distinct !DILocation(line: 245, column: 25, scope: !16730)
!16743 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16744)
!16744 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16742)
!16745 = !DILocation(line: 0, scope: !16302, inlinedAt: !16744)
!16746 = !DILocation(line: 261, column: 9, scope: !16730)
!16747 = !DILocation(line: 261, column: 17, scope: !16730)
!16748 = !DILocation(line: 261, column: 25, scope: !16730)
!16749 = !DILocation(line: 261, column: 37, scope: !16730)
!16750 = !DILocation(line: 261, column: 47, scope: !16730)
!16751 = !DILocation(line: 261, column: 44, scope: !16730)
!16752 = !DILocation(line: 261, column: 2, scope: !16730)
!16753 = !DILocation(line: 0, scope: !16737)
!16754 = !DILocation(line: 263, column: 12, scope: !16737)
!16755 = !DILocation(line: 265, column: 16, scope: !16737)
!16756 = !DILocation(line: 265, column: 13, scope: !16737)
!16757 = !DILocation(line: 266, column: 13, scope: !16737)
!16758 = !DILocation(line: 267, column: 3, scope: !16737)
!16759 = !DILocation(line: 0, scope: !16361, inlinedAt: !16760)
!16760 = distinct !DILocation(line: 269, column: 3, scope: !16737)
!16761 = !DILocation(line: 0, scope: !16369, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16760)
!16763 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16762)
!16764 = !DILocation(line: 270, column: 6, scope: !16737)
!16765 = !DILocation(line: 270, column: 3, scope: !16737)
!16766 = !DILocation(line: 0, scope: !16293, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 271, column: 9, scope: !16737)
!16768 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16767)
!16770 = !DILocation(line: 0, scope: !16302, inlinedAt: !16769)
!16771 = !DILocation(line: 272, column: 22, scope: !16737)
!16772 = distinct !{!16772, !16752, !16773}
!16773 = !DILocation(line: 273, column: 2, scope: !16730)
!16774 = !DILocation(line: 276, column: 19, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16776, file: !3635, line: 275, column: 23)
!16776 = distinct !DILexicalBlock(scope: !16730, file: !3635, line: 275, column: 6)
!16777 = !DILocation(line: 277, column: 2, scope: !16775)
!16778 = !DILocation(line: 279, column: 15, scope: !16730)
!16779 = !DILocation(line: 279, column: 12, scope: !16730)
!16780 = !DILocation(line: 280, column: 21, scope: !16730)
!16781 = !DILocation(line: 282, column: 24, scope: !16730)
!16782 = !DILocation(line: 282, column: 2, scope: !16730)
!16783 = !DILocation(line: 0, scope: !16361, inlinedAt: !16784)
!16784 = distinct !DILocation(line: 284, column: 2, scope: !16730)
!16785 = !DILocation(line: 0, scope: !16369, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16784)
!16787 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16786)
!16788 = !DILocation(line: 285, column: 1, scope: !16730)
!16789 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3635, file: !3635, line: 287, type: !16790, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16792)
!16790 = !DISubroutineType(types: !16791)
!16791 = !{!1085}
!16792 = !{!16793, !16794, !16796}
!16793 = !DILocalVariable(name: "t", scope: !16789, file: !3635, line: 289, type: !2271)
!16794 = !DILocalVariable(name: "__i", scope: !16795, file: !3635, line: 291, type: !16271)
!16795 = distinct !DILexicalBlock(scope: !16789, file: !3635, line: 291, column: 2)
!16796 = !DILocalVariable(name: "__key", scope: !16795, file: !3635, line: 291, type: !16271)
!16797 = !DILocation(line: 0, scope: !16789)
!16798 = !DILocation(line: 0, scope: !16795)
!16799 = !DILocation(line: 0, scope: !16293, inlinedAt: !16800)
!16800 = distinct !DILocation(line: 291, column: 2, scope: !16795)
!16801 = !DILocation(line: 55, column: 2, scope: !16302, inlinedAt: !16802)
!16802 = distinct !DILocation(line: 145, column: 10, scope: !16293, inlinedAt: !16800)
!16803 = !DILocation(line: 0, scope: !16302, inlinedAt: !16802)
!16804 = !DILocation(line: 292, column: 7, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16806, file: !3635, line: 291, column: 24)
!16806 = distinct !DILexicalBlock(scope: !16795, file: !3635, line: 291, column: 2)
!16807 = !DILocation(line: 292, column: 19, scope: !16805)
!16808 = !DILocation(line: 0, scope: !16361, inlinedAt: !16809)
!16809 = distinct !DILocation(line: 291, column: 2, scope: !16806)
!16810 = !DILocation(line: 0, scope: !16369, inlinedAt: !16811)
!16811 = distinct !DILocation(line: 215, column: 2, scope: !16361, inlinedAt: !16809)
!16812 = !DILocation(line: 95, column: 2, scope: !16369, inlinedAt: !16811)
!16813 = !DILocation(line: 292, column: 17, scope: !16805)
!16814 = !DILocation(line: 294, column: 2, scope: !16789)
!16815 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3635, file: !3635, line: 297, type: !9459, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !1126)
!16816 = !DILocation(line: 300, column: 19, scope: !16815)
!16817 = !DILocation(line: 300, column: 9, scope: !16815)
!16818 = !DILocation(line: 300, column: 2, scope: !16815)
!16819 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3635, file: !3635, line: 306, type: !16790, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !1126)
!16820 = !DILocation(line: 308, column: 9, scope: !16819)
!16821 = !DILocation(line: 308, column: 2, scope: !16819)
!16822 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3635, file: !3635, line: 319, type: !9469, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16823)
!16823 = !{!16824, !16825, !16826, !16827}
!16824 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16822, file: !3635, line: 319, type: !208)
!16825 = !DILocalVariable(name: "start_cycles", scope: !16822, file: !3635, line: 328, type: !208)
!16826 = !DILocalVariable(name: "cycles_to_wait", scope: !16822, file: !3635, line: 331, type: !208)
!16827 = !DILocalVariable(name: "current_cycles", scope: !16828, file: !3635, line: 338, type: !208)
!16828 = distinct !DILexicalBlock(scope: !16829, file: !3635, line: 337, column: 11)
!16829 = distinct !DILexicalBlock(scope: !16830, file: !3635, line: 337, column: 2)
!16830 = distinct !DILexicalBlock(scope: !16822, file: !3635, line: 337, column: 2)
!16831 = !DILocation(line: 0, scope: !16822)
!16832 = !DILocation(line: 322, column: 19, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16822, file: !3635, line: 322, column: 6)
!16834 = !DILocation(line: 322, column: 6, scope: !16822)
!16835 = !DILocation(line: 328, column: 26, scope: !16822)
!16836 = !DILocation(line: 333, column: 43, scope: !16822)
!16837 = !DILocation(line: 337, column: 2, scope: !16822)
!16838 = !DILocation(line: 338, column: 29, scope: !16828)
!16839 = !DILocation(line: 0, scope: !16828)
!16840 = !DILocation(line: 341, column: 23, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16828, file: !3635, line: 341, column: 7)
!16842 = !DILocation(line: 341, column: 39, scope: !16841)
!16843 = !DILocation(line: 349, column: 1, scope: !16822)
!16844 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !1111, file: !1111, line: 1675, type: !9459, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !1126)
!16845 = !DILocation(line: 1677, column: 9, scope: !16844)
!16846 = !DILocation(line: 1677, column: 2, scope: !16844)
!16847 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16848, file: !16848, line: 24, type: !9459, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !1126)
!16848 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16849 = !DILocation(line: 26, column: 9, scope: !16847)
!16850 = !DILocation(line: 26, column: 2, scope: !16847)
!16851 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3635, file: !3635, line: 364, type: !16852, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !16854)
!16852 = !DISubroutineType(types: !16853)
!16853 = !{!2271, !16261}
!16854 = !{!16855, !16856}
!16855 = !DILocalVariable(name: "timeout", arg: 1, scope: !16851, file: !3635, line: 364, type: !16261)
!16856 = !DILocalVariable(name: "dt", scope: !16851, file: !3635, line: 366, type: !2804)
!16857 = !DILocation(line: 0, scope: !16851)
!16858 = !DILocation(line: 368, column: 6, scope: !16851)
!16859 = !DILocation(line: 371, column: 10, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !3635, line: 370, column: 47)
!16861 = distinct !DILexicalBlock(scope: !16862, file: !3635, line: 370, column: 13)
!16862 = distinct !DILexicalBlock(scope: !16851, file: !3635, line: 368, column: 6)
!16863 = !DILocation(line: 371, column: 3, scope: !16860)
!16864 = !DILocation(line: 376, column: 58, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16866, file: !3635, line: 376, column: 7)
!16866 = distinct !DILexicalBlock(scope: !16861, file: !3635, line: 372, column: 9)
!16867 = !DILocation(line: 376, column: 7, scope: !16866)
!16868 = !DILocation(line: 376, column: 43, scope: !16865)
!16869 = !DILocation(line: 377, column: 4, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16865, file: !3635, line: 376, column: 64)
!16871 = !DILocation(line: 379, column: 10, scope: !16866)
!16872 = !DILocation(line: 379, column: 33, scope: !16866)
!16873 = !DILocation(line: 379, column: 31, scope: !16866)
!16874 = !DILocation(line: 379, column: 3, scope: !16866)
!16875 = !DILocation(line: 0, scope: !16862)
!16876 = !DILocation(line: 381, column: 1, scope: !16851)
!16877 = distinct !DISubprogram(name: "boot_banner", scope: !16878, file: !16878, line: 26, type: !4072, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4058, retainedNodes: !1126)
!16878 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16879 = !DILocation(line: 34, column: 2, scope: !16877)
!16880 = !DILocation(line: 36, column: 1, scope: !16877)
